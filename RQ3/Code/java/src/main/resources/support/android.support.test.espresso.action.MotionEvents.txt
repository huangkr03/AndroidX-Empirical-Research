android.support.test.espresso.action.MotionEvents
<android.support.test.espresso.action.MotionEvents: java.lang.String TAG>
<android.support.test.espresso.action.MotionEvents: int MAX_CLICK_ATTEMPTS>
    private void <init>()
    {
        android.support.test.espresso.action.MotionEvents r0;

        r0 := @this: android.support.test.espresso.action.MotionEvents;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.action.MotionEvents$DownResultHolder sendDown(android.support.test.espresso.UiController, float[], float[])
    {
        android.support.test.espresso.UiController r0;
        float[] r1, r2;
        android.support.test.espresso.action.MotionEvents$DownResultHolder $r3;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        $r3 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.support.test.espresso.action.MotionEvents$DownResultHolder sendDown(android.support.test.espresso.UiController,float[],float[],int,int)>(r0, r1, r2, 0, 1);

        return $r3;
    }

    public static android.support.test.espresso.action.MotionEvents$DownResultHolder sendDown(android.support.test.espresso.UiController, float[], float[], int, int)
    {
        android.support.test.espresso.UiController r0;
        float[] r1, r2;
        int i0, i1, $i3, $i4, $i5, $i9, i13;
        long l2, $l6, $l7, $l8, $l10, $l11, l14, $l15, l16;
        boolean z0, z1;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.String $r6, $r11;
        android.support.test.espresso.PerformException$Builder $r7, $r8, $r14, $r15, $r16, r21, r22;
        android.support.test.espresso.PerformException $r9, $r17;
        byte $b12, $b17;
        android.support.test.espresso.InjectEventSecurityException $r12, r19;
        android.view.MotionEvent r18;
        android.support.test.espresso.action.MotionEvents$DownResultHolder r20;
        java.lang.Throwable r23, r24;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        i13 = 0;

     label01:
        if i13 >= 3 goto label14;

     label02:
        l14 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 >= 14 goto label03;

        r18 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent downPressGingerBread(long,float[],float[])>(l14, r1, r2);

        goto label04;

     label03:
        r18 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent downPressICS(long,float[],float[],int,int)>(l14, r1, r2, i0, i1);

     label04:
        $i4 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $i5 = $i4 / 2;

        $l6 = (long) $i5;

        l2 = l14 + $l6;

        z0 = interfaceinvoke r0.<android.support.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r18);

     label05:
        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l16 = l2 - $l15;

        $b17 = l16 cmp 10L;

        if $b17 > 0 goto label06;

        goto label07;

     label06:
        $l7 = l16 / 4L;

        interfaceinvoke r0.<android.support.test.espresso.UiController: void loopMainThreadForAtLeast(long)>($l7);

        goto label05;

     label07:
        z1 = 0;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i9 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l10 = (long) $i9;

        $l11 = l14 + $l10;

        $b12 = $l8 cmp $l11;

        if $b12 <= 0 goto label08;

        z1 = 1;

        $r11 = <android.support.test.espresso.action.MotionEvents: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r11, "Overslept and turned a tap into a long press");

     label08:
        if z0 != 0 goto label10;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label09:
        goto label13;

     label10:
        r20 = new android.support.test.espresso.action.MotionEvents$DownResultHolder;

        specialinvoke r20.<android.support.test.espresso.action.MotionEvents$DownResultHolder: void <init>(android.view.MotionEvent,boolean)>(r18, z1);

     label11:
        return r20;

     label12:
        $r12 := @caughtexception;

        r19 = $r12;

        r21 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r21.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r14 = virtualinvoke r21.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>("Send down motion event");

        $r15 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r16 = virtualinvoke $r15.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r19);

        $r17 = virtualinvoke $r16.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r23 = (java.lang.Throwable) $r17;

        throw r23;

     label13:
        i13 = i13 + 1;

        goto label01;

     label14:
        r22 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r22.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("click (after %s attempts)", $r4);

        $r7 = virtualinvoke r22.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r9 = virtualinvoke $r8.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r24 = (java.lang.Throwable) $r9;

        throw r24;

        catch android.support.test.espresso.InjectEventSecurityException from label02 to label09 with label12;
        catch android.support.test.espresso.InjectEventSecurityException from label10 to label11 with label12;
    }

    public static boolean sendUp(android.support.test.espresso.UiController, android.view.MotionEvent)
    {
        android.support.test.espresso.UiController r0;
        android.view.MotionEvent r1;
        float[] $r2;
        float $f0, $f1;
        boolean $z0;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: android.view.MotionEvent;

        $r2 = newarray (float)[2];

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r2[0] = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r2[1] = $f1;

        $z0 = staticinvoke <android.support.test.espresso.action.MotionEvents: boolean sendUp(android.support.test.espresso.UiController,android.view.MotionEvent,float[])>(r0, r1, $r2);

        return $z0;
    }

    public static boolean sendUp(android.support.test.espresso.UiController, android.view.MotionEvent, float[])
    {
        android.support.test.espresso.UiController r0;
        android.view.MotionEvent r1, r18;
        float[] r2;
        java.lang.Throwable r3, $r8, r21;
        int $i0;
        java.lang.Object[] $r4, $r11;
        java.lang.String $r5, $r6, $r7, $r12, $r13;
        android.support.test.espresso.InjectEventSecurityException $r9, r19;
        android.support.test.espresso.PerformException$Builder $r14, $r15, $r16, r20;
        android.support.test.espresso.PerformException $r17;
        boolean z0;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: android.view.MotionEvent;

        r2 := @parameter2: float[];

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r18 = null;

     label01:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label02;

        r18 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent upPressGingerBread(android.view.MotionEvent,float[])>(r1, r2);

        goto label03;

     label02:
        r18 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent upPressICS(android.view.MotionEvent,float[])>(r1, r2);

     label03:
        z0 = interfaceinvoke r0.<android.support.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r18);

        if z0 != 0 goto label06;

        $r5 = <android.support.test.espresso.action.MotionEvents: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Injection of up event failed (corresponding down event: %s)", $r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7);

     label04:
        if null == r18 goto label05;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label05:
        return 0;

     label06:
        if null == r18 goto label11;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

        goto label11;

     label07:
        $r9 := @caughtexception;

        r19 = $r9;

        r20 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r20.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("inject up event (corresponding down event: %s)", $r11);

        $r14 = virtualinvoke r20.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r16 = virtualinvoke $r15.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r19);

        $r17 = virtualinvoke $r16.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r21 = (java.lang.Throwable) $r17;

        throw r21;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

     label09:
        if null == r18 goto label10;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label10:
        throw r3;

     label11:
        return 1;

        catch android.support.test.espresso.InjectEventSecurityException from label01 to label04 with label07;
        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label07 to label09 with label08;
    }

    public static void sendCancel(android.support.test.espresso.UiController, android.view.MotionEvent)
    {
        android.support.test.espresso.UiController r0;
        android.view.MotionEvent r1, r17;
        java.lang.Throwable r2, $r16, r20;
        long $l0, $l1;
        float $f0, $f1;
        java.lang.Object[] $r3, $r9;
        java.lang.String $r4, $r5, $r6, $r10, $r11;
        android.support.test.espresso.InjectEventSecurityException $r7, r18;
        android.support.test.espresso.PerformException$Builder $r12, $r13, $r14, r19;
        android.support.test.espresso.PerformException $r15;
        boolean z0;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: android.view.MotionEvent;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r17 = null;

     label1:
        $l0 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r17 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l1, 3, $f0, $f1, 0);

        z0 = interfaceinvoke r0.<android.support.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r17);

        if z0 != 0 goto label4;

        $r4 = <android.support.test.espresso.action.MotionEvents: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Injection of cancel event failed (corresponding down event: %s)", $r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        if null == r17 goto label3;

        virtualinvoke r17.<android.view.MotionEvent: void recycle()>();

     label3:
        return;

     label4:
        if null == r17 goto label9;

        virtualinvoke r17.<android.view.MotionEvent: void recycle()>();

        goto label9;

     label5:
        $r7 := @caughtexception;

        r18 = $r7;

        r19 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r19.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("inject cancel event (corresponding down event: %s)", $r9);

        $r12 = virtualinvoke r19.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r14 = virtualinvoke $r13.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r18);

        $r15 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r20 = (java.lang.Throwable) $r15;

        throw r20;

     label6:
        $r16 := @caughtexception;

        r2 = $r16;

     label7:
        if null == r17 goto label8;

        virtualinvoke r17.<android.view.MotionEvent: void recycle()>();

     label8:
        throw r2;

     label9:
        return;

        catch android.support.test.espresso.InjectEventSecurityException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public static boolean sendMovement(android.support.test.espresso.UiController, android.view.MotionEvent, float[])
    {
        android.support.test.espresso.UiController r0;
        android.view.MotionEvent r1, r18;
        float[] r2;
        java.lang.Throwable r3, $r8, r21;
        long $l0, $l1;
        float $f0, $f1;
        java.lang.Object[] $r4, $r11;
        java.lang.String $r5, $r6, $r7, $r12, $r13;
        android.support.test.espresso.InjectEventSecurityException $r9, r19;
        android.support.test.espresso.PerformException$Builder $r14, $r15, $r16, r20;
        android.support.test.espresso.PerformException $r17;
        boolean z0;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: android.view.MotionEvent;

        r2 := @parameter2: float[];

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r18 = null;

     label1:
        $l0 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f1 = r2[0];

        $f0 = r2[1];

        r18 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l1, 2, $f1, $f0, 0);

        z0 = interfaceinvoke r0.<android.support.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r18);

        if z0 != 0 goto label4;

        $r5 = <android.support.test.espresso.action.MotionEvents: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Injection of motion event failed (corresponding down event: %s)", $r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7);

     label2:
        if null == r18 goto label3;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label3:
        return 0;

     label4:
        if null == r18 goto label9;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

        goto label9;

     label5:
        $r9 := @caughtexception;

        r19 = $r9;

        r20 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r20.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r1.<android.view.MotionEvent: java.lang.String toString()>();

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("inject motion event (corresponding down event: %s)", $r11);

        $r14 = virtualinvoke r20.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r16 = virtualinvoke $r15.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r19);

        $r17 = virtualinvoke $r16.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r21 = (java.lang.Throwable) $r17;

        throw r21;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

     label7:
        if null == r18 goto label8;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label8:
        throw r3;

     label9:
        return 1;

        catch android.support.test.espresso.InjectEventSecurityException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    private static android.view.MotionEvent downPressGingerBread(long, float[], float[])
    {
        long l0, $l1;
        float[] r0, r1;
        float $f0, $f1, $f2, $f3;
        android.view.MotionEvent $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: float[];

        r1 := @parameter2: float[];

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f3 = r0[0];

        $f2 = r0[1];

        $f1 = r1[0];

        $f0 = r1[1];

        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, $l1, 0, $f3, $f2, 0.0F, 1.0F, 0, $f1, $f0, 0, 0);

        return $r2;
    }

    private static android.view.MotionEvent downPressICS(long, float[], float[], int, int)
    {
        long l0, $l3;
        float[] r0, r1;
        int i1, i2;
        android.view.MotionEvent$PointerCoords[] r2, $r4;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3;
        android.view.MotionEvent $r11;

        l0 := @parameter0: long;

        r0 := @parameter1: float[];

        r1 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r4 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r5 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r5.<android.view.MotionEvent$PointerCoords: void <init>()>();

        $r4[0] = $r5;

        r2 = $r4;

        r3 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent$PointerProperties[] getPointerProperties(int)>(i1);

        $r6 = r2[0];

        virtualinvoke $r6.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r7 = r2[0];

        $f0 = r0[0];

        $r7.<android.view.MotionEvent$PointerCoords: float x> = $f0;

        $r8 = r2[0];

        $f1 = r0[1];

        $r8.<android.view.MotionEvent$PointerCoords: float y> = $f1;

        $r9 = r2[0];

        $r9.<android.view.MotionEvent$PointerCoords: float pressure> = 0.0F;

        $r10 = r2[0];

        $r10.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f3 = r1[0];

        $f2 = r1[1];

        $r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l3, 0, 1, r3, r2, 0, i2, $f3, $f2, 0, 0, i1, 0);

        return $r11;
    }

    private static android.view.MotionEvent upPressGingerBread(android.view.MotionEvent, float[])
    {
        android.view.MotionEvent r0, $r2;
        float[] r1;
        long $l0, $l1;
        float $f0, $f1;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: float[];

        $l0 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f1 = r1[0];

        $f0 = r1[1];

        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l1, 1, $f1, $f0, 0);

        return $r2;
    }

    private static android.view.MotionEvent upPressICS(android.view.MotionEvent, float[])
    {
        android.view.MotionEvent r0, $r11;
        float[] r1;
        android.view.MotionEvent$PointerCoords[] r2, $r4;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i3, $i4;
        float $f0, $f1, $f2, $f3;
        long $l1, $l2;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: float[];

        $r4 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r5 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r5.<android.view.MotionEvent$PointerCoords: void <init>()>();

        $r4[0] = $r5;

        r2 = $r4;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        r3 = staticinvoke <android.support.test.espresso.action.MotionEvents: android.view.MotionEvent$PointerProperties[] getPointerProperties(int)>($i0);

        $r6 = r2[0];

        virtualinvoke $r6.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r7 = r2[0];

        $f0 = r1[0];

        $r7.<android.view.MotionEvent$PointerCoords: float x> = $f0;

        $r8 = r2[0];

        $f1 = r1[1];

        $r8.<android.view.MotionEvent$PointerCoords: float y> = $f1;

        $r9 = r2[0];

        $r9.<android.view.MotionEvent$PointerCoords: float pressure> = 0.0F;

        $r10 = r2[0];

        $r10.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        $l1 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $f2 = virtualinvoke r0.<android.view.MotionEvent: float getXPrecision()>();

        $f3 = virtualinvoke r0.<android.view.MotionEvent: float getYPrecision()>();

        $i4 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>($l1, $l2, 1, 1, r3, r2, 0, $i3, $f2, $f3, 0, 0, $i4, 0);

        return $r11;
    }

    private static android.view.MotionEvent$PointerProperties[] getPointerProperties(int)
    {
        int i0;
        android.view.MotionEvent$PointerProperties[] r0, $r1;
        android.view.MotionEvent$PointerProperties $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        i0 := @parameter0: int;

        $r1 = newarray (android.view.MotionEvent$PointerProperties)[1];

        $r2 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r2.<android.view.MotionEvent$PointerProperties: void <init>()>();

        $r1[0] = $r2;

        r0 = $r1;

        $r3 = r0[0];

        virtualinvoke $r3.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r4 = r0[0];

        $r4.<android.view.MotionEvent$PointerProperties: int id> = 0;

        lookupswitch(i0)
        {
            case 4098: goto label3;
            case 8194: goto label1;
            case 16386: goto label2;
            default: goto label4;
        };

     label1:
        $r6 = r0[0];

        $r6.<android.view.MotionEvent$PointerProperties: int toolType> = 3;

        goto label5;

     label2:
        $r5 = r0[0];

        $r5.<android.view.MotionEvent$PointerProperties: int toolType> = 2;

        goto label5;

     label3:
        $r7 = r0[0];

        $r7.<android.view.MotionEvent$PointerProperties: int toolType> = 1;

        goto label5;

     label4:
        $r8 = r0[0];

        $r8.<android.view.MotionEvent$PointerProperties: int toolType> = 0;

     label5:
        return r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/test/espresso/action/MotionEvents;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.action.MotionEvents: java.lang.String TAG> = $r1;

        return;
    }

android.support.test.espresso.action.MotionEvents$DownResultHolder
<android.support.test.espresso.action.MotionEvents$DownResultHolder: android.view.MotionEvent down>
<android.support.test.espresso.action.MotionEvents$DownResultHolder: boolean longPress>
    void <init>(android.view.MotionEvent, boolean)
    {
        android.support.test.espresso.action.MotionEvents$DownResultHolder r0;
        android.view.MotionEvent r1;
        boolean z0;

        r0 := @this: android.support.test.espresso.action.MotionEvents$DownResultHolder;

        r1 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.action.MotionEvents$DownResultHolder: android.view.MotionEvent down> = r1;

        r0.<android.support.test.espresso.action.MotionEvents$DownResultHolder: boolean longPress> = z0;

        return;
    }

