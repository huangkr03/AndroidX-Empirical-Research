android.support.test.espresso.action.KeyEventActionBase
<android.support.test.espresso.action.KeyEventActionBase: java.lang.String TAG>
<android.support.test.espresso.action.KeyEventActionBase: int BACK_ACTIVITY_TRANSITION_MILLIS_DELAY>
<android.support.test.espresso.action.KeyEventActionBase: int CLEAR_TRANSITIONING_ACTIVITIES_ATTEMPTS>
<android.support.test.espresso.action.KeyEventActionBase: int CLEAR_TRANSITIONING_ACTIVITIES_MILLIS_DELAY>
<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>
    void <init>(android.support.test.espresso.action.EspressoKey)
    {
        android.support.test.espresso.action.KeyEventActionBase r0;
        android.support.test.espresso.action.EspressoKey r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.action.KeyEventActionBase;

        r1 := @parameter0: android.support.test.espresso.action.EspressoKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.action.EspressoKey) $r2;

        r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey> = $r3;

        return;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.action.KeyEventActionBase r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.action.KeyEventActionBase;

        $r1 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        return $r1;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.action.KeyEventActionBase r0;
        java.lang.Object[] $r1;
        android.support.test.espresso.action.EspressoKey $r2;
        java.lang.String $r3;

        r0 := @this: android.support.test.espresso.action.KeyEventActionBase;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("send %s key event", $r1);

        return $r3;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.action.KeyEventActionBase r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        java.lang.String r3, $r5, $r9, $r11, $r13, $r17, $r21, $r26, $r30, $r32, $r34, r38, r39;
        boolean $z0;
        android.support.test.espresso.action.EspressoKey $r4, $r16, $r25;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r7, $r8, $r19, $r20, $r28, $r29, r41, r43, r45;
        android.support.test.espresso.PerformException$Builder $r12, $r14, $r22, $r33, $r35, $r36, r42, r46;
        android.support.test.espresso.PerformException $r23, $r37;
        android.support.test.espresso.InjectEventSecurityException $r24, r40;
        java.lang.RuntimeException r44;
        java.lang.Throwable r47, r48, r49;

        r0 := @this: android.support.test.espresso.action.KeyEventActionBase;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

     label1:
        $z0 = specialinvoke r0.<android.support.test.espresso.action.KeyEventActionBase: boolean sendKeyEvent(android.support.test.espresso.UiController)>(r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        r38 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r38);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = 36 + $i0;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r7 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", $r9);

        r42 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r42.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r11 = virtualinvoke r0.<android.support.test.espresso.action.KeyEventActionBase: java.lang.String getDescription()>();

        $r12 = virtualinvoke r42.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r11);

        $r13 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r2);

        $r14 = virtualinvoke $r12.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r13);

        r44 = new java.lang.RuntimeException;

        $r16 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        r39 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r39);

        $i3 = virtualinvoke $r17.<java.lang.String: int length()>();

        $i4 = 35 + $i3;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>(int)>($i4);

        $r19 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        r47 = (java.lang.Throwable) r44;

        $r22 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r47);

        $r23 = virtualinvoke $r22.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r48 = (java.lang.Throwable) $r23;

        throw r48;

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

        r40 = $r24;

        $r25 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i5 = virtualinvoke $r26.<java.lang.String: int length()>();

        $i6 = 36 + $i5;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>(int)>($i6);

        $r28 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject espressoKey event: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", $r30);

        r46 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r46.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r32 = virtualinvoke r0.<android.support.test.espresso.action.KeyEventActionBase: java.lang.String getDescription()>();

        $r33 = virtualinvoke r46.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r32);

        $r34 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r2);

        $r35 = virtualinvoke $r33.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r40);

        $r37 = virtualinvoke $r36.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r49 = (java.lang.Throwable) $r37;

        throw r49;

     label4:
        return;

        catch android.support.test.espresso.InjectEventSecurityException from label1 to label2 with label3;
    }

    private boolean sendKeyEvent(android.support.test.espresso.UiController) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.action.KeyEventActionBase r0;
        android.support.test.espresso.UiController r1;
        android.view.KeyEvent $r2, $r4;
        android.support.test.espresso.action.EspressoKey $r3, $r5, $r6;
        int $i0, $i1, $i2, i4, i6;
        boolean z0, z1;
        long l3, l5;

        r0 := @this: android.support.test.espresso.action.KeyEventActionBase;

        r1 := @parameter0: android.support.test.espresso.UiController;

        z0 = 0;

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i4 = 0;

     label1:
        if z0 != 0 goto label2;

        if i4 >= 4 goto label2;

        $r4 = new android.view.KeyEvent;

        $r5 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        $i1 = virtualinvoke $r5.<android.support.test.espresso.action.EspressoKey: int getKeyCode()>();

        $r6 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        $i2 = virtualinvoke $r6.<android.support.test.espresso.action.EspressoKey: int getMetaState()>();

        specialinvoke $r4.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>(l3, l3, 0, $i1, 0, $i2);

        z0 = interfaceinvoke r1.<android.support.test.espresso.UiController: boolean injectKeyEvent(android.view.KeyEvent)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        if z0 != 0 goto label3;

        return 0;

     label3:
        z1 = 0;

        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i6 = 0;

     label4:
        if z1 != 0 goto label5;

        if i6 >= 4 goto label5;

        $r2 = new android.view.KeyEvent;

        $r3 = r0.<android.support.test.espresso.action.KeyEventActionBase: android.support.test.espresso.action.EspressoKey espressoKey>;

        $i0 = virtualinvoke $r3.<android.support.test.espresso.action.EspressoKey: int getKeyCode()>();

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int)>(l5, l5, 1, $i0, 0);

        z1 = interfaceinvoke r1.<android.support.test.espresso.UiController: boolean injectKeyEvent(android.view.KeyEvent)>($r2);

        i6 = i6 + 1;

        goto label4;

     label5:
        return z1;
    }

    static android.app.Activity getCurrentActivity()
    {
        java.util.Collection r0;
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor $r1;
        android.support.test.runner.lifecycle.Stage $r2;
        java.lang.Object $r3;
        android.app.Activity $r4;
        java.lang.Iterable r5;

        $r1 = staticinvoke <android.support.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: android.support.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        $r2 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage RESUMED>;

        r0 = interfaceinvoke $r1.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)>($r2);

        r5 = (java.lang.Iterable) r0;

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>(r5);

        $r4 = (android.app.Activity) $r3;

        return $r4;
    }

    static void waitForStageChangeInitialActivity(android.support.test.espresso.UiController, android.app.Activity)
    {
        android.support.test.espresso.UiController r0;
        android.app.Activity r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.support.test.espresso.UiController;

        r1 := @parameter1: android.app.Activity;

        $z0 = staticinvoke <android.support.test.espresso.action.KeyEventActionBase: boolean isActivityResumed(android.app.Activity)>(r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<android.support.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(150L);

        $z1 = staticinvoke <android.support.test.espresso.action.KeyEventActionBase: boolean isActivityResumed(android.app.Activity)>(r1);

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", "Back was pressed but there was no Activity stage transition in 150ms, possibly due to a delay calling super.onBackPressed() from your Activity.");

     label1:
        return;
    }

    private static boolean isActivityResumed(android.app.Activity)
    {
        android.app.Activity r0;
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor $r1;
        android.support.test.runner.lifecycle.Stage $r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.app.Activity;

        $r1 = staticinvoke <android.support.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: android.support.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        $r2 = interfaceinvoke $r1.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: android.support.test.runner.lifecycle.Stage getLifecycleStageOf(android.app.Activity)>(r0);

        $r3 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage RESUMED>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void waitForPendingForegroundActivities(android.support.test.espresso.UiController, boolean)
    {
        android.support.test.espresso.UiController r0;
        boolean z0, $z1, z2;
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor r1;
        int i2;
        android.support.test.espresso.NoActivityResumedException r3;
        java.lang.Throwable r4;

        r0 := @parameter0: android.support.test.espresso.UiController;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.support.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: android.support.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        z2 = 0;

        i2 = 0;

     label1:
        if i2 >= 4 goto label2;

        interfaceinvoke r0.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        z2 = staticinvoke <android.support.test.espresso.util.ActivityLifecycles: boolean hasTransitioningActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)>(r1);

        if z2 == 0 goto label2;

        interfaceinvoke r0.<android.support.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(150L);

        i2 = i2 + 1;

        goto label1;

     label2:
        $z1 = staticinvoke <android.support.test.espresso.util.ActivityLifecycles: boolean hasForegroundActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)>(r1);

        if $z1 != 0 goto label4;

        if z0 == 0 goto label3;

        r3 = new android.support.test.espresso.NoActivityResumedException;

        specialinvoke r3.<android.support.test.espresso.NoActivityResumedException: void <init>(java.lang.String)>("Pressed back and killed the app");

        r4 = (java.lang.Throwable) r3;

        throw r4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("KeyEventActionBase", "Pressed back and hopped to a different process or potentially killed the app");

     label4:
        if z2 == 0 goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyEventActionBase", "Back was pressed and left the application in an inconsistent state even after 600ms.");

     label5:
        return;
    }

