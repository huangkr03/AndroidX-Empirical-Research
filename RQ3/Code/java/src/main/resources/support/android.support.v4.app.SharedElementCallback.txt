android.support.v4.app.SharedElementCallback
<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>
<android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE>
<android.support.v4.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_BITMAP>
<android.support.v4.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE>
<android.support.v4.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX>
    public void <init>()
    {
        android.support.v4.app.SharedElementCallback r0;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSharedElementStart(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }

    public void onSharedElementEnd(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }

    public void onRejectSharedElements(java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void onMapSharedElements(java.util.List, java.util.Map)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1;
        java.util.Map r2;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Map;

        return;
    }

    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.support.v4.app.SharedElementCallback r0;
        android.view.View r1;
        android.graphics.Matrix r2, r4, $r6, $r7, $r8, $r9, $r12, r27;
        android.graphics.RectF r3;
        float[] r5;
        boolean $z0;
        int $i0, i1, i2, i3, i4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        android.graphics.Bitmap$Config $r10;
        android.widget.ImageView$ScaleType $r15, $r17, $r18;
        java.lang.String $r16;
        android.widget.ImageView r19;
        android.graphics.drawable.Drawable r20, r21;
        android.graphics.Bitmap r22, r24;
        android.os.Bundle r23, r26;
        android.graphics.Canvas r25, r28;
        android.os.Parcelable r29, r30, r31;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.RectF;

        $z0 = r1 instanceof android.widget.ImageView;

        if $z0 == 0 goto label2;

        r19 = (android.widget.ImageView) r1;

        r20 = virtualinvoke r19.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        r21 = virtualinvoke r19.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        if r20 == null goto label2;

        if r21 != null goto label2;

        r22 = staticinvoke <android.support.v4.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)>(r20);

        if r22 == null goto label2;

        r26 = new android.os.Bundle;

        specialinvoke r26.<android.os.Bundle: void <init>()>();

        r23 = r26;

        r29 = (android.os.Parcelable) r22;

        virtualinvoke r23.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sharedElement:snapshot:bitmap", r29);

        $r15 = virtualinvoke r19.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r16 = virtualinvoke $r15.<android.widget.ImageView$ScaleType: java.lang.String toString()>();

        virtualinvoke r23.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sharedElement:snapshot:imageScaleType", $r16);

        $r17 = virtualinvoke r19.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r18 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r17 != $r18 goto label1;

        r4 = virtualinvoke r19.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        r5 = newarray (float)[9];

        virtualinvoke r4.<android.graphics.Matrix: void getValues(float[])>(r5);

        virtualinvoke r23.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("sharedElement:snapshot:imageMatrix", r5);

     label1:
        r30 = (android.os.Parcelable) r23;

        return r30;

     label2:
        $f10 = virtualinvoke r3.<android.graphics.RectF: float width()>();

        i1 = staticinvoke <java.lang.Math: int round(float)>($f10);

        $f11 = virtualinvoke r3.<android.graphics.RectF: float height()>();

        i2 = staticinvoke <java.lang.Math: int round(float)>($f11);

        r24 = null;

        if i1 <= 0 goto label4;

        if i2 <= 0 goto label4;

        $i0 = i1 * i2;

        $f0 = (float) $i0;

        $f1 = 1048576.0F / $f0;

        f12 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f1);

        $f2 = (float) i1;

        $f3 = $f2 * f12;

        i3 = (int) $f3;

        $f4 = (float) i2;

        $f5 = $f4 * f12;

        i4 = (int) $f5;

        $r6 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        if $r6 != null goto label3;

        r27 = new android.graphics.Matrix;

        specialinvoke r27.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix> = r27;

     label3:
        $r7 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r7.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r2);

        $r8 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        $f6 = r3.<android.graphics.RectF: float left>;

        $f9 = neg $f6;

        $f7 = r3.<android.graphics.RectF: float top>;

        $f8 = neg $f7;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postTranslate(float,float)>($f9, $f8);

        $r9 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r9.<android.graphics.Matrix: boolean postScale(float,float)>(f12, f12);

        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r24 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i4, $r10);

        r28 = new android.graphics.Canvas;

        specialinvoke r28.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r24);

        r25 = r28;

        $r12 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r25.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r12);

        virtualinvoke r1.<android.view.View: void draw(android.graphics.Canvas)>(r25);

     label4:
        r31 = (android.os.Parcelable) r24;

        return r31;
    }

    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Bitmap r1, $r7;
        android.graphics.Canvas r2, $r5;
        android.graphics.Rect r3;
        boolean $z0;
        android.graphics.Bitmap$Config $r4;
        byte $b9;
        android.graphics.drawable.BitmapDrawable $r6;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i0 <= 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        return null;

     label2:
        $i8 = i0 * i1;

        $f1 = (float) $i8;

        $f2 = 1048576.0F / $f1;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f2);

        $z0 = r0 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label3;

        $b9 = f0 cmpl 1.0F;

        if $b9 != 0 goto label3;

        $r6 = (android.graphics.drawable.BitmapDrawable) r0;

        $r7 = virtualinvoke $r6.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        return $r7;

     label3:
        $f3 = (float) i0;

        $f4 = $f3 * f0;

        i2 = (int) $f4;

        $f5 = (float) i1;

        $f6 = $f5 * f0;

        i3 = (int) $f6;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i2, i3, $r4);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r5;

        r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i4 = r3.<android.graphics.Rect: int left>;

        i5 = r3.<android.graphics.Rect: int top>;

        i6 = r3.<android.graphics.Rect: int right>;

        i7 = r3.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i2, i3);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r2);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i4, i5, i6, i7);

        return r1;
    }

    public android.view.View onCreateSnapshotView(android.content.Context, android.os.Parcelable)
    {
        android.support.v4.app.SharedElementCallback r0;
        android.content.Context r1;
        android.os.Parcelable r2, $r8;
        android.graphics.Bitmap r3, r17;
        android.widget.ImageView r4, $r7, $r9, r15;
        float[] r5;
        android.graphics.Matrix r6, $r14;
        boolean $z0, $z1;
        java.lang.String $r10;
        android.widget.ImageView$ScaleType $r11, $r12, $r13;
        android.os.Bundle r16;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Parcelable;

        r15 = null;

        $z0 = r2 instanceof android.os.Bundle;

        if $z0 == 0 goto label3;

        r16 = (android.os.Bundle) r2;

        $r8 = virtualinvoke r16.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sharedElement:snapshot:bitmap");

        r3 = (android.graphics.Bitmap) $r8;

        if r3 != null goto label1;

        return null;

     label1:
        $r9 = new android.widget.ImageView;

        specialinvoke $r9.<android.widget.ImageView: void <init>(android.content.Context)>(r1);

        r4 = $r9;

        r15 = r4;

        virtualinvoke r4.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r3);

        $r10 = virtualinvoke r16.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sharedElement:snapshot:imageScaleType");

        $r11 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType valueOf(java.lang.String)>($r10);

        virtualinvoke r4.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r11);

        $r12 = virtualinvoke r4.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r13 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r12 != $r13 goto label2;

        r5 = virtualinvoke r16.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("sharedElement:snapshot:imageMatrix");

        $r14 = new android.graphics.Matrix;

        specialinvoke $r14.<android.graphics.Matrix: void <init>()>();

        r6 = $r14;

        virtualinvoke r6.<android.graphics.Matrix: void setValues(float[])>(r5);

        virtualinvoke r4.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>(r6);

     label2:
        goto label4;

     label3:
        $z1 = r2 instanceof android.graphics.Bitmap;

        if $z1 == 0 goto label4;

        r17 = (android.graphics.Bitmap) r2;

        $r7 = new android.widget.ImageView;

        specialinvoke $r7.<android.widget.ImageView: void <init>(android.content.Context)>(r1);

        r15 = $r7;

        virtualinvoke r15.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r17);

     label4:
        return r15;
    }

    public void onSharedElementsArrived(java.util.List, java.util.List, android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1, r2;
        android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener r3;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener;

        interfaceinvoke r3.<android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()>();

        return;
    }

android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
<android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()>
