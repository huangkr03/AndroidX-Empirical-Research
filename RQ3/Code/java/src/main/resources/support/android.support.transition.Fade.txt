android.support.transition.Fade
<android.support.transition.Fade: java.lang.String PROPNAME_TRANSITION_ALPHA>
<android.support.transition.Fade: java.lang.String LOG_TAG>
<android.support.transition.Fade: int IN>
<android.support.transition.Fade: int OUT>
    public void <init>(int)
    {
        android.support.transition.Fade r0;
        int i0;

        r0 := @this: android.support.transition.Fade;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.transition.Visibility: void <init>()>();

        virtualinvoke r0.<android.support.transition.Fade: void setMode(int)>(i0);

        return;
    }

    public void <init>()
    {
        android.support.transition.Fade r0;

        r0 := @this: android.support.transition.Fade;

        specialinvoke r0.<android.support.transition.Visibility: void <init>()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.Fade r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, $i1;
        int[] $r4;
        android.content.res.XmlResourceParser $r5;

        r0 := @this: android.support.transition.Fade;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = <android.support.transition.Styleable: int[] FADE>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        $r5 = (android.content.res.XmlResourceParser) r2;

        $i1 = virtualinvoke r0.<android.support.transition.Fade: int getMode()>();

        i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r3, $r5, "fadingMode", 0, $i1);

        virtualinvoke r0.<android.support.transition.Fade: void setMode(int)>(i0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Fade r0;
        android.support.transition.TransitionValues r1;
        android.view.View $r2;
        java.util.Map $r3;
        float $f0;
        java.lang.Float $r4;

        r0 := @this: android.support.transition.Fade;

        r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.Visibility: void captureStartValues(android.support.transition.TransitionValues)>(r1);

        $r3 = r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r2 = r1.<android.support.transition.TransitionValues: android.view.View view>;

        $f0 = staticinvoke <android.support.transition.ViewUtils: float getTransitionAlpha(android.view.View)>($r2);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:fade:transitionAlpha", $r4);

        return;
    }

    private android.animation.Animator createAnimation(android.view.View, float, float)
    {
        android.support.transition.Fade r0;
        android.view.View r1;
        float f0, f1;
        android.animation.ObjectAnimator r2;
        android.support.transition.Fade$FadeAnimatorListener r3, r9;
        byte $b0;
        float[] $r4;
        android.util.Property $r5;
        android.support.transition.Fade$1 r10;
        android.animation.Animator$AnimatorListener r11;

        r0 := @this: android.support.transition.Fade;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f0 cmpl f1;

        if $b0 != 0 goto label1;

        return null;

     label1:
        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>(r1, f0);

        $r5 = <android.support.transition.ViewUtils: android.util.Property TRANSITION_ALPHA>;

        $r4 = newarray (float)[1];

        $r4[0] = f1;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r5, $r4);

        r9 = new android.support.transition.Fade$FadeAnimatorListener;

        specialinvoke r9.<android.support.transition.Fade$FadeAnimatorListener: void <init>(android.view.View)>(r1);

        r3 = r9;

        r11 = (android.animation.Animator$AnimatorListener) r3;

        virtualinvoke r2.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r11);

        r10 = new android.support.transition.Fade$1;

        specialinvoke r10.<android.support.transition.Fade$1: void <init>(android.support.transition.Fade,android.view.View)>(r0, r1);

        virtualinvoke r0.<android.support.transition.Fade: android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener)>(r10);

        return r2;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Fade r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.support.transition.TransitionValues r3, r4;
        byte $b0;
        android.animation.Animator $r5;
        float f0;

        r0 := @this: android.support.transition.Fade;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.support.transition.TransitionValues;

        r4 := @parameter3: android.support.transition.TransitionValues;

        f0 = staticinvoke <android.support.transition.Fade: float getStartAlpha(android.support.transition.TransitionValues,float)>(r3, 0.0F);

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        f0 = 0.0F;

     label1:
        $r5 = specialinvoke r0.<android.support.transition.Fade: android.animation.Animator createAnimation(android.view.View,float,float)>(r2, f0, 1.0F);

        return $r5;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Fade r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.support.transition.TransitionValues r3, r4;
        float f0;
        android.animation.Animator $r5;

        r0 := @this: android.support.transition.Fade;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.support.transition.TransitionValues;

        r4 := @parameter3: android.support.transition.TransitionValues;

        staticinvoke <android.support.transition.ViewUtils: void saveNonTransitionAlpha(android.view.View)>(r2);

        f0 = staticinvoke <android.support.transition.Fade: float getStartAlpha(android.support.transition.TransitionValues,float)>(r3, 1.0F);

        $r5 = specialinvoke r0.<android.support.transition.Fade: android.animation.Animator createAnimation(android.view.View,float,float)>(r2, f0, 0.0F);

        return $r5;
    }

    private static float getStartAlpha(android.support.transition.TransitionValues, float)
    {
        android.support.transition.TransitionValues r0;
        float f0, f1;
        java.lang.Float r1;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.support.transition.TransitionValues;

        f0 := @parameter1: float;

        f1 = f0;

        if r0 == null goto label1;

        $r2 = r0.<android.support.transition.TransitionValues: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:fade:transitionAlpha");

        r1 = (java.lang.Float) $r3;

        if r1 == null goto label1;

        f1 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

     label1:
        return f1;
    }

android.support.transition.Fade$1
<android.support.transition.Fade$1: android.view.View val$view>
<android.support.transition.Fade$1: android.support.transition.Fade this$0>
    void <init>(android.support.transition.Fade, android.view.View)
    {
        android.support.transition.Fade$1 r0;
        android.support.transition.Fade r1;
        android.view.View r2;

        r0 := @this: android.support.transition.Fade$1;

        r1 := @parameter0: android.support.transition.Fade;

        r2 := @parameter1: android.view.View;

        r0.<android.support.transition.Fade$1: android.support.transition.Fade this$0> = r1;

        r0.<android.support.transition.Fade$1: android.view.View val$view> = r2;

        specialinvoke r0.<android.support.transition.TransitionListenerAdapter: void <init>()>();

        return;
    }

    public void onTransitionEnd(android.support.transition.Transition)
    {
        android.support.transition.Fade$1 r0;
        android.support.transition.Transition r1;
        android.view.View $r2, $r3;

        r0 := @this: android.support.transition.Fade$1;

        r1 := @parameter0: android.support.transition.Transition;

        $r2 = r0.<android.support.transition.Fade$1: android.view.View val$view>;

        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>($r2, 1.0F);

        $r3 = r0.<android.support.transition.Fade$1: android.view.View val$view>;

        staticinvoke <android.support.transition.ViewUtils: void clearNonTransitionAlpha(android.view.View)>($r3);

        virtualinvoke r1.<android.support.transition.Transition: android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener)>(r0);

        return;
    }

android.support.transition.Fade$FadeAnimatorListener
<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>
<android.support.transition.Fade$FadeAnimatorListener: boolean mLayerTypeChanged>
    void <init>(android.view.View)
    {
        android.support.transition.Fade$FadeAnimatorListener r0;
        android.view.View r1;

        r0 := @this: android.support.transition.Fade$FadeAnimatorListener;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        r0.<android.support.transition.Fade$FadeAnimatorListener: boolean mLayerTypeChanged> = 0;

        r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView> = r1;

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.transition.Fade$FadeAnimatorListener r0;
        android.animation.Animator r1;
        android.view.View $r2, $r3, $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.transition.Fade$FadeAnimatorListener;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>;

        $i0 = virtualinvoke $r3.<android.view.View: int getLayerType()>();

        if $i0 != 0 goto label1;

        r0.<android.support.transition.Fade$FadeAnimatorListener: boolean mLayerTypeChanged> = 1;

        $r4 = r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, null);

     label1:
        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.transition.Fade$FadeAnimatorListener r0;
        android.animation.Animator r1;
        android.view.View $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.transition.Fade$FadeAnimatorListener;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>;

        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>($r2, 1.0F);

        $z0 = r0.<android.support.transition.Fade$FadeAnimatorListener: boolean mLayerTypeChanged>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.transition.Fade$FadeAnimatorListener: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void setLayerType(int,android.graphics.Paint)>(0, null);

     label1:
        return;
    }

