android.support.wear.widget.CircularProgressLayoutController
<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>
<android.support.wear.widget.CircularProgressLayoutController: android.os.CountDownTimer mTimer>
<android.support.wear.widget.CircularProgressLayoutController: boolean mIsIndeterminate>
<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning>
<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener mOnTimerFinishedListener>
    void <init>(android.support.wear.widget.CircularProgressLayout)
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        android.support.wear.widget.CircularProgressLayout r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        r1 := @parameter0: android.support.wear.widget.CircularProgressLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout> = r1;

        return;
    }

    public android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener getOnTimerFinishedListener()
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener mOnTimerFinishedListener>;

        return $r1;
    }

    public void setOnTimerFinishedListener(android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener)
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        r1 := @parameter0: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener;

        r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener mOnTimerFinishedListener> = r1;

        return;
    }

    boolean isIndeterminate()
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        boolean $z0;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        $z0 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsIndeterminate>;

        return $z0;
    }

    boolean isTimerRunning()
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        boolean $z0;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        $z0 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning>;

        return $z0;
    }

    void setIndeterminate(boolean)
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        boolean z0, $z1, $z2, $z3;
        android.support.wear.widget.CircularProgressLayout $r1, $r3;
        android.support.v4.widget.CircularProgressDrawable $r2, $r4;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsIndeterminate>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsIndeterminate> = z0;

        $z2 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsIndeterminate>;

        if $z2 == 0 goto label3;

        $z3 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning>;

        if $z3 == 0 goto label2;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayoutController: void stopTimer()>();

     label2:
        $r3 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r4 = virtualinvoke $r3.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        virtualinvoke $r4.<android.support.v4.widget.CircularProgressDrawable: void start()>();

        goto label4;

     label3:
        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r2 = virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void stop()>();

     label4:
        return;
    }

    void startTimer(long, long)
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        long l0, l1;
        android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer $r1;
        android.os.CountDownTimer $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayoutController: void reset()>();

        r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning> = 1;

        $r1 = new android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer;

        specialinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: void <init>(android.support.wear.widget.CircularProgressLayoutController,long,long)>(r0, l0, l1);

        r0.<android.support.wear.widget.CircularProgressLayoutController: android.os.CountDownTimer mTimer> = $r1;

        $r2 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.os.CountDownTimer mTimer>;

        virtualinvoke $r2.<android.os.CountDownTimer: android.os.CountDownTimer start()>();

        return;
    }

    void stopTimer()
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        boolean $z0;
        android.os.CountDownTimer $r1;
        android.support.wear.widget.CircularProgressLayout $r2;
        android.support.v4.widget.CircularProgressDrawable $r3;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        $z0 = r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.os.CountDownTimer mTimer>;

        virtualinvoke $r1.<android.os.CountDownTimer: void cancel()>();

        r0.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning> = 0;

        $r2 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r3 = virtualinvoke $r2.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, 0.0F);

     label1:
        return;
    }

    void reset()
    {
        android.support.wear.widget.CircularProgressLayoutController r0;
        android.support.wear.widget.CircularProgressLayout $r1;
        android.support.v4.widget.CircularProgressDrawable $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayoutController: void setIndeterminate(boolean)>(0);

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayoutController: void stopTimer()>();

        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r2 = virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, 0.0F);

        return;
    }

android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer
<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: long mTotalTime>
<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>
    void <init>(android.support.wear.widget.CircularProgressLayoutController, long, long)
    {
        android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer r0;
        android.support.wear.widget.CircularProgressLayoutController r1;
        long l0, l1;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer;

        r1 := @parameter0: android.support.wear.widget.CircularProgressLayoutController;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0> = r1;

        specialinvoke r0.<android.os.CountDownTimer: void <init>(long,long)>(l0, l1);

        r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: long mTotalTime> = l0;

        return;
    }

    public void onTick(long)
    {
        android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer r0;
        long l0, $l1;
        android.support.wear.widget.CircularProgressLayoutController $r1, $r4;
        android.support.wear.widget.CircularProgressLayout $r2, $r5;
        android.support.v4.widget.CircularProgressDrawable $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r2 = $r1.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r3 = virtualinvoke $r2.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        $f1 = (float) l0;

        $l1 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: long mTotalTime>;

        $f0 = (float) $l1;

        $f2 = $f1 / $f0;

        $f3 = 1.0F - $f2;

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, $f3);

        $r4 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r5 = $r4.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        virtualinvoke $r5.<android.support.wear.widget.CircularProgressLayout: void invalidate()>();

        return;
    }

    public void onFinish()
    {
        android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer r0;
        android.support.wear.widget.CircularProgressLayoutController $r1, $r4, $r6, $r7, $r8;
        android.support.wear.widget.CircularProgressLayout $r2, $r9;
        android.support.v4.widget.CircularProgressDrawable $r3;
        android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener $r5, $r10;

        r0 := @this: android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r2 = $r1.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        $r3 = virtualinvoke $r2.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable getProgressDrawable()>();

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, 1.0F);

        $r4 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r5 = $r4.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener mOnTimerFinishedListener>;

        if $r5 == null goto label1;

        $r7 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r10 = $r7.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener mOnTimerFinishedListener>;

        $r8 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r9 = $r8.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout mLayout>;

        interfaceinvoke $r10.<android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener: void onTimerFinished(android.support.wear.widget.CircularProgressLayout)>($r9);

     label1:
        $r6 = r0.<android.support.wear.widget.CircularProgressLayoutController$CircularProgressTimer: android.support.wear.widget.CircularProgressLayoutController this$0>;

        $r6.<android.support.wear.widget.CircularProgressLayoutController: boolean mIsTimerRunning> = 0;

        return;
    }

