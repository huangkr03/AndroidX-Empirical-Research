android.support.constraint.Group
    public void <init>(android.content.Context)
    {
        android.support.constraint.Group r0;
        android.content.Context r1;

        r0 := @this: android.support.constraint.Group;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.Group r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.constraint.Group;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.Group r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.constraint.Group;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        return;
    }

    protected void init(android.util.AttributeSet)
    {
        android.support.constraint.Group r0;
        android.util.AttributeSet r1;

        r0 := @this: android.support.constraint.Group;

        r1 := @parameter0: android.util.AttributeSet;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void init(android.util.AttributeSet)>(r1);

        r0.<android.support.constraint.Group: boolean mUseViewMeasure> = 0;

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.constraint.Group r0;

        r0 := @this: android.support.constraint.Group;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void onAttachedToWindow()>();

        virtualinvoke r0.<android.support.constraint.Group: void applyLayoutFeatures()>();

        return;
    }

    public void setVisibility(int)
    {
        android.support.constraint.Group r0;
        int i0;

        r0 := @this: android.support.constraint.Group;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void setVisibility(int)>(i0);

        virtualinvoke r0.<android.support.constraint.Group: void applyLayoutFeatures()>();

        return;
    }

    public void setElevation(float)
    {
        android.support.constraint.Group r0;
        float f0;

        r0 := @this: android.support.constraint.Group;

        f0 := @parameter0: float;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void setElevation(float)>(f0);

        virtualinvoke r0.<android.support.constraint.Group: void applyLayoutFeatures()>();

        return;
    }

    public void updatePostLayout(android.support.constraint.ConstraintLayout)
    {
        android.support.constraint.Group r0;
        android.support.constraint.ConstraintLayout r1;
        android.support.constraint.ConstraintLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.constraint.solver.widgets.ConstraintWidget $r4, $r5;

        r0 := @this: android.support.constraint.Group;

        r1 := @parameter0: android.support.constraint.ConstraintLayout;

        $r3 = virtualinvoke r0.<android.support.constraint.Group: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.constraint.ConstraintLayout$LayoutParams) $r3;

        $r4 = r2.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>(0);

        $r5 = r2.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>(0);

        return;
    }

