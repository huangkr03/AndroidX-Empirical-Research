android.support.media2.MediaInterface2
    private void <init>()
    {
        android.support.media2.MediaInterface2 r0;

        r0 := @this: android.support.media2.MediaInterface2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.media2.MediaInterface2$SessionPlaybackControl
<android.support.media2.MediaInterface2$SessionPlaybackControl: void prepare()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: void play()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: void pause()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: void reset()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: void seekTo(long)>
<android.support.media2.MediaInterface2$SessionPlaybackControl: int getPlayerState()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: long getCurrentPosition()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: long getDuration()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: long getBufferedPosition()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: int getBufferingState()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: float getPlaybackSpeed()>
<android.support.media2.MediaInterface2$SessionPlaybackControl: void setPlaybackSpeed(float)>
android.support.media2.MediaInterface2$SessionPlayer
<android.support.media2.MediaInterface2$SessionPlayer: void skipForward()>
<android.support.media2.MediaInterface2$SessionPlayer: void skipBackward()>
<android.support.media2.MediaInterface2$SessionPlayer: void notifyError(int,android.os.Bundle)>
android.support.media2.MediaInterface2$SessionPlaylistControl
<android.support.media2.MediaInterface2$SessionPlaylistControl: void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void clearOnDataSourceMissingHelper()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: java.util.List getPlaylist()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: android.support.media2.MediaMetadata2 getPlaylistMetadata()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void setPlaylist(java.util.List,android.support.media2.MediaMetadata2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void updatePlaylistMetadata(android.support.media2.MediaMetadata2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: android.support.media2.MediaItem2 getCurrentMediaItem()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void skipToPlaylistItem(android.support.media2.MediaItem2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void skipToPreviousItem()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void skipToNextItem()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void addPlaylistItem(int,android.support.media2.MediaItem2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void removePlaylistItem(android.support.media2.MediaItem2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void replacePlaylistItem(int,android.support.media2.MediaItem2)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: int getRepeatMode()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void setRepeatMode(int)>
<android.support.media2.MediaInterface2$SessionPlaylistControl: int getShuffleMode()>
<android.support.media2.MediaInterface2$SessionPlaylistControl: void setShuffleMode(int)>
