android.support.v4.graphics.TypefaceCompatApi26Impl
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String TAG>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String FONT_FAMILY_CLASS>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_BUFFER_METHOD>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String FREEZE_METHOD>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String ABORT_CREATION_METHOD>
<android.support.v4.graphics.TypefaceCompatApi26Impl: int RESOLVE_BY_FONT_TABLE>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.String DEFAULT_FAMILY>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation>
<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault>
    public void <init>()
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Throwable r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5, r9;
        java.lang.String $r6, $r8;
        java.lang.reflect.Constructor r10;
        java.lang.reflect.Method r11, r12, r13, r14, r15;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: void <init>()>();

     label1:
        r9 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()>();

        r10 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)>(r9);

        r11 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)>(r9);

        r12 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)>(r9);

        r13 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)>(r9);

        r14 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)>(r9);

        r15 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)>(r9);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to collect necessary methods for class ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TypefaceCompatApi26Impl", $r8, r1);

        r9 = null;

        r10 = null;

        r11 = null;

        r12 = null;

        r13 = null;

        r14 = null;

        r15 = null;

     label4:
        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily> = r9;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor> = r10;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager> = r11;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer> = r12;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze> = r13;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation> = r14;

        r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault> = r15;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    private boolean isFontFamilyPrivateAPIAvailable()
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.reflect.Method $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        $r1 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TypefaceCompatApi26Impl", "Unable to collect necessary private methods. Fallback to legacy implementation.");

     label1:
        $r2 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager>;

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private java.lang.Object newFamily()
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Throwable r1, $r5, r8;
        java.lang.Object[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.RuntimeException r7;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

     label1:
        $r3 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        r8 = (java.lang.Throwable) r7;

        throw r8;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private boolean addFontFromAssetManager(android.content.Context, java.lang.Object, java.lang.String, int, int, int, android.graphics.fonts.FontVariationAxis[])
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context r1;
        java.lang.Object r2, $r13;
        java.lang.String r3;
        int i0, i1, i2;
        android.graphics.fonts.FontVariationAxis[] r4;
        java.lang.Object[] $r5;
        java.lang.reflect.Method $r6;
        android.content.res.AssetManager $r7;
        java.lang.Integer $r8, $r10, $r11, $r12;
        java.lang.Boolean $r9, r16;
        boolean $z0;
        java.lang.Throwable $r14, r17, r19;
        java.lang.RuntimeException r18;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: android.graphics.fonts.FontVariationAxis[];

     label1:
        $r6 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager>;

        $r5 = newarray (java.lang.Object)[8];

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5[0] = $r7;

        $r5[1] = r3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5[3] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[4] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[5] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5[6] = $r12;

        $r5[7] = r4;

        $r13 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r5);

        r16 = (java.lang.Boolean) $r13;

        $z0 = virtualinvoke r16.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r14 := @caughtexception;

        r17 = $r14;

        r18 = new java.lang.RuntimeException;

        specialinvoke r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        r19 = (java.lang.Throwable) r18;

        throw r19;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private boolean addFontFromBuffer(java.lang.Object, java.nio.ByteBuffer, int, int, int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Object r1, $r8;
        java.nio.ByteBuffer r2;
        int i0, i1, i2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Integer $r5, $r6, $r7;
        boolean $z0;
        java.lang.Throwable $r9, r12, r14;
        java.lang.Boolean r11;
        java.lang.RuntimeException r13;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.nio.ByteBuffer;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

     label1:
        $r4 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer>;

        $r3 = newarray (java.lang.Object)[5];

        $r3[0] = r2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        $r3[2] = null;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[3] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[4] = $r7;

        $r8 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

        r11 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke r11.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r9 := @caughtexception;

        r12 = $r9;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        r14 = (java.lang.Throwable) r13;

        throw r14;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    protected android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Object r1, $r7, r11;
        java.lang.Class $r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Integer $r5, $r6;
        android.graphics.Typeface $r8;
        java.lang.Throwable $r9, r12, r14;
        java.lang.RuntimeException r13;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily>;

        r11 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, 1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r11, 0, r1);

        $r4 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r11;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r3[2] = $r6;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        $r8 = (android.graphics.Typeface) $r7;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r12 = $r9;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        r14 = (java.lang.Throwable) r13;

        throw r14;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private boolean freeze(java.lang.Object)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Object r1, $r4;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        boolean $z0;
        java.lang.Throwable $r5, r8, r10;
        java.lang.Boolean r7;
        java.lang.RuntimeException r9;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

        r7 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        r9 = new java.lang.RuntimeException;

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        r10 = (java.lang.Throwable) r9;

        throw r10;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private void abortCreation(java.lang.Object)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6, r9;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.RuntimeException r8;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        r9 = (java.lang.Throwable) r8;

        throw r9;

     label4:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context, android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context r1;
        android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry r2;
        android.content.res.Resources r3;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r4;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] r5;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry r6;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Typeface $r7, $r14;
        java.lang.String $r8, $r9;
        android.graphics.fonts.FontVariationAxis[] $r10;
        byte $b5;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry;

        r3 := @parameter2: android.content.res.Resources;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z0 != 0 goto label1;

        $r14 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>(r1, r2, r3, i0);

        return $r14;

     label1:
        r4 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        r5 = virtualinvoke r2.<android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()>();

        i1 = lengthof r5;

        i4 = 0;

     label2:
        if i4 >= i1 goto label6;

        r6 = r5[i4];

        $r8 = virtualinvoke r6.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()>();

        $i2 = virtualinvoke r6.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()>();

        $i3 = virtualinvoke r6.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()>();

        $z2 = virtualinvoke r6.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()>();

        if $z2 == 0 goto label3;

        $b5 = 1;

        goto label4;

     label3:
        $b5 = 0;

     label4:
        $r9 = virtualinvoke r6.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()>();

        $r10 = staticinvoke <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>($r9);

        $z3 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])>(r1, r4, $r8, $i2, $i3, $b5, $r10);

        if $z3 != 0 goto label5;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)>(r4);

        return null;

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        $z1 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>(r4);

        if $z1 != 0 goto label7;

        return null;

     label7:
        $r7 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>(r4);

        return $r7;
    }

    public android.graphics.Typeface createFromFontInfo(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontsContractCompat$FontInfo[], int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context r1;
        android.os.CancellationSignal r2;
        android.support.v4.provider.FontsContractCompat$FontInfo[] r3, r31;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.graphics.Typeface $r4, r24, r34;
        android.net.Uri $r5, $r10;
        java.lang.Object $r6, r30;
        android.graphics.Typeface$Builder $r11, $r13, $r14;
        java.io.FileDescriptor $r12;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, $r20, r25, r26, r27, r28;
        android.support.v4.provider.FontsContractCompat$FontInfo r21, r32;
        android.content.ContentResolver r22;
        android.os.ParcelFileDescriptor r23;
        java.util.Map r29;
        java.nio.ByteBuffer r33;
        byte $b7;
        java.lang.NullPointerException r35, r36;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: android.support.v4.provider.FontsContractCompat$FontInfo[];

        i0 := @parameter3: int;

        $i1 = lengthof r3;

        if $i1 >= 1 goto label01;

        return null;

     label01:
        $z1 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z1 != 0 goto label26;

        r21 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int)>(r3, i0);

        r22 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        $r10 = virtualinvoke r21.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        r23 = virtualinvoke r22.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>($r10, "r", r2);

     label03:
        if r23 != null goto label10;

     label04:
        if r23 == null goto label09;

        if null == null goto label08;

     label05:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        goto label09;

     label07:
        $r15 := @caughtexception;

        r35 = new java.lang.NullPointerException;

        specialinvoke r35.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke typeface#4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l10#6)");

        throw r35;

     label08:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label09:
        return null;

     label10:
        $r11 = new android.graphics.Typeface$Builder;

        $r12 = virtualinvoke r23.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r11.<android.graphics.Typeface$Builder: void <init>(java.io.FileDescriptor)>($r12);

        $i4 = virtualinvoke r21.<android.support.v4.provider.FontsContractCompat$FontInfo: int getWeight()>();

        $r13 = virtualinvoke $r11.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setWeight(int)>($i4);

        $z4 = virtualinvoke r21.<android.support.v4.provider.FontsContractCompat$FontInfo: boolean isItalic()>();

        $r14 = virtualinvoke $r13.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setItalic(boolean)>($z4);

        r24 = virtualinvoke $r14.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

     label11:
        if r23 == null goto label16;

        if null == null goto label15;

     label12:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label13:
        goto label16;

     label14:
        $r18 := @caughtexception;

        r36 = new java.lang.NullPointerException;

        specialinvoke r36.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke typeface#4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l10#11)");

        throw r36;

     label15:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label16:
        return r24;

     label17:
        $r20 := @caughtexception;

        r25 = $r20;

        r26 = r25;

        throw r25;

     label18:
        $r16 := @caughtexception;

        r27 = $r16;

     label19:
        if r23 == null goto label24;

        if r26 == null goto label23;

     label20:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label21:
        goto label24;

     label22:
        $r17 := @caughtexception;

        r28 = $r17;

        virtualinvoke r26.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r28);

        goto label24;

     label23:
        virtualinvoke r23.<android.os.ParcelFileDescriptor: void close()>();

     label24:
        throw r27;

     label25:
        $r19 := @caughtexception;

        return null;

     label26:
        r29 = staticinvoke <android.support.v4.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)>(r1, r3, r2);

        r30 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        z5 = 0;

        r31 = r3;

        i5 = lengthof r31;

        i6 = 0;

     label27:
        if i6 >= i5 goto label33;

        r32 = r31[i6];

        $r5 = virtualinvoke r32.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        $r6 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r33 = (java.nio.ByteBuffer) $r6;

        if r33 != null goto label28;

        goto label32;

     label28:
        $i2 = virtualinvoke r32.<android.support.v4.provider.FontsContractCompat$FontInfo: int getTtcIndex()>();

        $i3 = virtualinvoke r32.<android.support.v4.provider.FontsContractCompat$FontInfo: int getWeight()>();

        $z3 = virtualinvoke r32.<android.support.v4.provider.FontsContractCompat$FontInfo: boolean isItalic()>();

        if $z3 == 0 goto label29;

        $b7 = 1;

        goto label30;

     label29:
        $b7 = 0;

     label30:
        z0 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)>(r30, r33, $i2, $i3, $b7);

        if z0 != 0 goto label31;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)>(r30);

        return null;

     label31:
        z5 = 1;

     label32:
        i6 = i6 + 1;

        goto label27;

     label33:
        if z5 != 0 goto label34;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)>(r30);

        return null;

     label34:
        $z2 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>(r30);

        if $z2 != 0 goto label35;

        return null;

     label35:
        r34 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>(r30);

        $r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r34, i0);

        return $r4;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label17 to label19 with label18;
        catch java.io.IOException from label02 to label09 with label25;
        catch java.io.IOException from label10 to label16 with label25;
        catch java.io.IOException from label17 to label25 with label25;
    }

    public android.graphics.Typeface createFromResourcesFontFile(android.content.Context, android.content.res.Resources, int, java.lang.String, int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        int i0, i1;
        java.lang.String r3;
        java.lang.Object r4;
        boolean $z0, $z1, $z2;
        android.graphics.Typeface $r5, $r6;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $z0 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z0 != 0 goto label1;

        $r6 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>(r1, r2, i0, r3, i1);

        return $r6;

     label1:
        r4 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        $z1 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])>(r1, r4, r3, 0, -1, -1, null);

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)>(r4);

        return null;

     label2:
        $z2 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>(r4);

        if $z2 != 0 goto label3;

        return null;

     label3:
        $r5 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>(r4);

        return $r5;
    }

    protected java.lang.Class obtainFontFamily() throws java.lang.ClassNotFoundException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class $r1;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.graphics.FontFamily");

        return $r1;
    }

    protected java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        return $r3;
    }

    protected java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r8;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[8];

        $r2[0] = class "Landroid/content/res/AssetManager;";

        $r2[1] = class "Ljava/lang/String;";

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r3;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2[3] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[4] = $r5;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[5] = $r6;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[6] = $r7;

        $r2[7] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromAssetManager", $r2);

        return $r8;
    }

    protected java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1, $r3, $r4, $r5;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r6;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[5];

        $r2[0] = class "Ljava/nio/ByteBuffer;";

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r2[2] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[3] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[4] = $r5;

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromBuffer", $r2);

        return $r6;
    }

    protected java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("freeze", $r2);

        return $r3;
    }

    protected java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("abortCreation", $r2);

        return $r3;
    }

    protected java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class r1, $r5, $r6, $r7, $r8;
        java.lang.Object r2;
        java.lang.reflect.Method r3;
        java.lang.Class[] $r4;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        r1 := @parameter0: java.lang.Class;

        r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 1);

        $r5 = class "Landroid/graphics/Typeface;";

        $r4 = newarray (java.lang.Class)[3];

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4[0] = $r6;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[1] = $r7;

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[2] = $r8;

        r3 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createFromFamiliesWithDefault", $r4);

        virtualinvoke r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        return r3;
    }

