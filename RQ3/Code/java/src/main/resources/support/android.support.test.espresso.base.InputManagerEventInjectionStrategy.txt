android.support.test.espresso.base.InputManagerEventInjectionStrategy
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.String TAG>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: long KEYBOARD_DISMISSAL_DELAY_MILLIS>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean initComplete>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method injectInputEventMethod>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method setSourceMotionMethod>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.Object instanceInputManagerObject>
<android.support.test.espresso.base.InputManagerEventInjectionStrategy: int eventMode>
    void <init>()
    {
        android.support.test.espresso.base.InputManagerEventInjectionStrategy r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.InputManagerEventInjectionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Unsupported API level.");

        return;
    }

    void initialize()
    {
        android.support.test.espresso.base.InputManagerEventInjectionStrategy r0;
        java.lang.reflect.Method r1, $r11, $r12, $r16;
        java.lang.reflect.Field r2;
        boolean $z0;
        java.lang.String $r3;
        java.lang.Class[] $r4, $r9, $r13;
        java.lang.Object[] $r5;
        java.lang.Object $r6, $r7;
        java.lang.Class $r8, $r10, $r14, $r15, r29;
        int $i1;
        java.lang.Throwable $r17, $r19, $r21, $r23, $r24, $r26, $r28, r30, r31, r32, r33, r34, r35, r36, r42, r43, r44, r45, r46;
        java.lang.RuntimeException r37, r38, r39, r40, r41;

        r0 := @this: android.support.test.espresso.base.InputManagerEventInjectionStrategy;

        $z0 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean initComplete>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = <android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "Creating injection strategy with input manager.");

        r29 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.hardware.input.InputManager");

        $r4 = newarray (java.lang.Class)[0];

        r1 = virtualinvoke r29.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getInstance", $r4);

        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r29, $r5);

        r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.Object instanceInputManagerObject> = $r6;

        $r7 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.Object instanceInputManagerObject>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = newarray (java.lang.Class)[2];

        $r9[0] = class "Landroid/view/InputEvent;";

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9[1] = $r10;

        $r11 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("injectInputEvent", $r9);

        r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method injectInputEventMethod> = $r11;

        $r12 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method injectInputEventMethod>;

        virtualinvoke $r12.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r2 = virtualinvoke r29.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("INJECT_INPUT_EVENT_MODE_WAIT_FOR_FINISH");

        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $i1 = virtualinvoke r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r29);

        r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: int eventMode> = $i1;

        $r15 = class "Landroid/view/MotionEvent;";

        $r13 = newarray (java.lang.Class)[1];

        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        $r13[0] = $r14;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setSource", $r13);

        r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method setSourceMotionMethod> = $r16;

        r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean initComplete> = 1;

     label02:
        goto label10;

     label03:
        $r26 := @caughtexception;

        r30 = $r26;

        r37 = new java.lang.RuntimeException;

        specialinvoke r37.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r30);

        r42 = (java.lang.Throwable) r37;

        throw r42;

     label04:
        $r21 := @caughtexception;

        r31 = $r21;

        r38 = new java.lang.RuntimeException;

        specialinvoke r38.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r31);

        r43 = (java.lang.Throwable) r38;

        throw r43;

     label05:
        $r23 := @caughtexception;

        r32 = $r23;

        throw r32;

     label06:
        $r19 := @caughtexception;

        r33 = $r19;

        r39 = new java.lang.RuntimeException;

        specialinvoke r39.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r33);

        r44 = (java.lang.Throwable) r39;

        throw r44;

     label07:
        $r17 := @caughtexception;

        r34 = $r17;

        r40 = new java.lang.RuntimeException;

        specialinvoke r40.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r34);

        r45 = (java.lang.Throwable) r40;

        throw r45;

     label08:
        $r28 := @caughtexception;

        r35 = $r28;

        throw r35;

     label09:
        $r24 := @caughtexception;

        r36 = $r24;

        r41 = new java.lang.RuntimeException;

        specialinvoke r41.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r36);

        r46 = (java.lang.Throwable) r41;

        throw r46;

     label10:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label04;
        catch java.lang.IllegalArgumentException from label01 to label02 with label05;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label06;
        catch java.lang.NoSuchMethodException from label01 to label02 with label07;
        catch java.lang.SecurityException from label01 to label02 with label08;
        catch java.lang.NoSuchFieldException from label01 to label02 with label09;
    }

    public boolean injectKeyEvent(android.view.KeyEvent) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.InputManagerEventInjectionStrategy r0;
        android.view.KeyEvent r1;
        java.lang.Throwable r2, $r9, $r11, $r12, $r15, r17, r18, r19, r20, r25, r27;
        java.lang.Object[] $r3;
        int $i0;
        java.lang.reflect.Method $r4;
        java.lang.Object $r5, $r7;
        java.lang.Integer $r6;
        java.lang.Boolean $r8;
        boolean $z0, $z1;
        java.lang.RuntimeException r21, r23;
        android.support.test.espresso.InjectEventSecurityException r22, r24;
        java.lang.reflect.InvocationTargetException r26;

        r0 := @this: android.support.test.espresso.base.InputManagerEventInjectionStrategy;

        r1 := @parameter0: android.view.KeyEvent;

     label1:
        $r4 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method injectInputEventMethod>;

        $r5 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.Object instanceInputManagerObject>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $i0 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: int eventMode>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r6;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r3);

        $r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r9 := @caughtexception;

        r17 = $r9;

        r21 = new java.lang.RuntimeException;

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        r25 = (java.lang.Throwable) r21;

        throw r25;

     label4:
        $r11 := @caughtexception;

        r18 = $r11;

        throw r18;

     label5:
        $r12 := @caughtexception;

        r19 = $r12;

        r26 = (java.lang.reflect.InvocationTargetException) r19;

        r2 = virtualinvoke r26.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z1 = r2 instanceof java.lang.SecurityException;

        if $z1 == 0 goto label6;

        r22 = new android.support.test.espresso.InjectEventSecurityException;

        specialinvoke r22.<android.support.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r2);

        throw r22;

     label6:
        r23 = new java.lang.RuntimeException;

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19);

        r27 = (java.lang.Throwable) r23;

        throw r27;

     label7:
        $r15 := @caughtexception;

        r20 = $r15;

        r24 = new android.support.test.espresso.InjectEventSecurityException;

        specialinvoke r24.<android.support.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r20);

        throw r24;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.SecurityException from label1 to label2 with label7;
    }

    public boolean injectMotionEvent(android.view.MotionEvent) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.InputManagerEventInjectionStrategy r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.InputManagerEventInjectionStrategy;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean innerInjectMotionEvent(android.view.MotionEvent,boolean)>(r1, 1);

        return $z0;
    }

    private boolean innerInjectMotionEvent(android.view.MotionEvent, boolean) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.InputManagerEventInjectionStrategy r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z4;
        java.lang.Throwable r2, $r7, $r11, $r13, $r14, r22, r23, r24, r25, r30, r32;
        int $i0, $i1, $i3;
        java.lang.Object[] $r3, $r18;
        java.lang.reflect.Method $r4, $r16;
        java.lang.Integer $r5, $r19;
        java.lang.String $r10;
        java.lang.Object $r17, $r20;
        java.lang.Boolean $r21;
        java.lang.RuntimeException r26, r28;
        android.support.test.espresso.InjectEventSecurityException r27, r29;
        java.lang.reflect.InvocationTargetException r31;

        r0 := @this: android.support.test.espresso.base.InputManagerEventInjectionStrategy;

        r1 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

     label01:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 != 0 goto label02;

        $z1 = staticinvoke <android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean isFromTouchpadInGlassDevice(android.view.MotionEvent)>(r1);

        if $z1 != 0 goto label02;

        $r4 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method setSourceMotionMethod>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4098);

        $r3[0] = $r5;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

     label02:
        $r16 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.reflect.Method injectInputEventMethod>;

        $r17 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.Object instanceInputManagerObject>;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r1;

        $i3 = r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: int eventMode>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r18[1] = $r19;

        $r20 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r17, $r18);

        $r21 = (java.lang.Boolean) $r20;

        $z4 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

     label03:
        return $z4;

     label04:
        $r14 := @caughtexception;

        r22 = $r14;

        r26 = new java.lang.RuntimeException;

        specialinvoke r26.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r22);

        r30 = (java.lang.Throwable) r26;

        throw r30;

     label05:
        $r13 := @caughtexception;

        r23 = $r13;

        throw r23;

     label06:
        $r7 := @caughtexception;

        r24 = $r7;

        r31 = (java.lang.reflect.InvocationTargetException) r24;

        r2 = virtualinvoke r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z2 = r2 instanceof java.lang.SecurityException;

        if $z2 == 0 goto label08;

        if z0 == 0 goto label07;

        $r10 = <android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r10, "Error performing a ViewAction! soft keyboard dismissal animation may have been in the way. Retrying once after: 1000 millis");

        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        specialinvoke r0.<android.support.test.espresso.base.InputManagerEventInjectionStrategy: boolean innerInjectMotionEvent(android.view.MotionEvent,boolean)>(r1, 0);

        goto label09;

     label07:
        r27 = new android.support.test.espresso.InjectEventSecurityException;

        specialinvoke r27.<android.support.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r2);

        throw r27;

     label08:
        r28 = new java.lang.RuntimeException;

        specialinvoke r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r24);

        r32 = (java.lang.Throwable) r28;

        throw r32;

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        r25 = $r11;

        r29 = new android.support.test.espresso.InjectEventSecurityException;

        specialinvoke r29.<android.support.test.espresso.InjectEventSecurityException: void <init>(java.lang.Throwable)>(r25);

        throw r29;

     label11:
        return 0;

        catch java.lang.IllegalAccessException from label01 to label03 with label04;
        catch java.lang.IllegalArgumentException from label01 to label03 with label05;
        catch java.lang.reflect.InvocationTargetException from label01 to label03 with label06;
        catch java.lang.SecurityException from label01 to label03 with label10;
    }

    private static boolean isFromTouchpadInGlassDevice(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;

        r0 := @parameter0: android.view.MotionEvent;

        $r1 = <android.os.Build: java.lang.String DEVICE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("glass");

        if $z0 != 0 goto label1;

        $r2 = <android.os.Build: java.lang.String DEVICE>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Glass");

        if $z1 != 0 goto label1;

        $r3 = <android.os.Build: java.lang.String DEVICE>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("wingman");

        if $z2 == 0 goto label2;

     label1:
        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 1048584;

        if $i1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/test/espresso/base/InputManagerEventInjectionStrategy;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.base.InputManagerEventInjectionStrategy: java.lang.String TAG> = $r1;

        return;
    }

