android.support.media2.AudioFocusHandler
<android.support.media2.AudioFocusHandler: java.lang.String TAG>
<android.support.media2.AudioFocusHandler: boolean DEBUG>
<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>
    void <init>(android.content.Context, android.support.media2.MediaSession2)
    {
        android.support.media2.AudioFocusHandler r0;
        android.content.Context r1;
        android.support.media2.MediaSession2 r2;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase $r3;

        r0 := @this: android.support.media2.AudioFocusHandler;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.MediaSession2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        specialinvoke $r3.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void <init>(android.content.Context,android.support.media2.MediaSession2)>(r1, r2);

        r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl> = $r3;

        return;
    }

    public boolean onPlayRequested()
    {
        android.support.media2.AudioFocusHandler r0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl $r1;
        boolean $z0;

        r0 := @this: android.support.media2.AudioFocusHandler;

        $r1 = r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: boolean onPlayRequested()>();

        return $z0;
    }

    public void onPauseRequested()
    {
        android.support.media2.AudioFocusHandler r0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: android.support.media2.AudioFocusHandler;

        $r1 = r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void onPauseRequested()>();

        return;
    }

    public void onPlayerStateChanged(int)
    {
        android.support.media2.AudioFocusHandler r0;
        int i0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: android.support.media2.AudioFocusHandler;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void onPlayerStateChanged(int)>(i0);

        return;
    }

    public void close()
    {
        android.support.media2.AudioFocusHandler r0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl $r1;

        r0 := @this: android.support.media2.AudioFocusHandler;

        $r1 = r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r1.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void close()>();

        return;
    }

    public void sendIntent(android.content.Intent)
    {
        android.support.media2.AudioFocusHandler r0;
        android.content.Intent r1;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl $r2;

        r0 := @this: android.support.media2.AudioFocusHandler;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.media2.AudioFocusHandler: android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl mImpl>;

        interfaceinvoke $r2.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void sendIntent(android.content.Intent)>(r1);

        return;
    }

android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: boolean onPlayRequested()>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void onPauseRequested()>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void onPlayerStateChanged(int)>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void close()>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImpl: void sendIntent(android.content.Intent)>
android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>
    void <init>(android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener r0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r1;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        r1 := @parameter0: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAudioFocusChange(int)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener r0;
        int i0, $i1, $i3;
        java.lang.Object r1, $r8, $r10, $r17, $r22, $r25, $r33, r37, r39, r40, r41, r43;
        java.lang.Throwable r2, $r36;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase $r3, $r5, $r7, $r9, $r11, $r12, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r28, $r30, $r32, $r34;
        android.support.media2.MediaSession2 $r4, $r6, $r13, $r15, $r20, $r31, $r35;
        float $f0, f1, f2, f3, f4;
        byte $b2;
        boolean $z0, $z1, z2;
        android.support.v4.media.AudioAttributesCompat $r27, $r29;
        android.support.media2.MediaPlayerConnector r38, r42;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -3: goto label10;
            case -2: goto label23;
            case -1: goto label08;
            case 0: goto label24;
            case 1: goto label01;
            default: goto label24;
        };

     label01:
        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r4 = $r3.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        $i1 = virtualinvoke $r4.<android.support.media2.MediaSession2: int getPlayerState()>();

        if $i1 != 1 goto label04;

        $r9 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r10 = $r9.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r37 = $r10;

        entermonitor $r10;

        $r11 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $z0 = $r11.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain>;

        if $z0 != 0 goto label02;

        exitmonitor r37;

        goto label24;

     label02:
        exitmonitor r37;

        goto label03;

     label03:
        $r12 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r13 = $r12.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r13.<android.support.media2.MediaSession2: void play()>();

        goto label24;

     label04:
        $r5 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r6 = $r5.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r38 = virtualinvoke $r6.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r38 == null goto label07;

        f1 = virtualinvoke r38.<android.support.media2.MediaPlayerConnector: float getPlayerVolume()>();

        $r7 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r8 = $r7.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r39 = $r8;

        entermonitor $r8;

        $f0 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume>;

        $b2 = f1 cmpl $f0;

        if $b2 == 0 goto label05;

        exitmonitor r39;

        goto label24;

     label05:
        f2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking>;

        exitmonitor r39;

        goto label06;

     label06:
        virtualinvoke r38.<android.support.media2.MediaPlayerConnector: void setPlayerVolume(float)>(f2);

     label07:
        goto label24;

     label08:
        $r14 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r15 = $r14.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r15.<android.support.media2.MediaSession2: void pause()>();

        $r16 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r17 = $r16.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r40 = $r17;

        entermonitor $r17;

        $r18 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r18.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        exitmonitor r40;

        goto label09;

     label09:
        goto label24;

     label10:
        $r24 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r25 = $r24.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r41 = $r25;

        entermonitor $r25;

     label11:
        $r26 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r27 = $r26.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        if $r27 != null goto label13;

        exitmonitor r41;

     label12:
        goto label24;

     label13:
        $r28 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r29 = $r28.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        $i3 = virtualinvoke $r29.<android.support.v4.media.AudioAttributesCompat: int getContentType()>();

        if $i3 != 1 goto label14;

        $z1 = 1;

        goto label15;

     label14:
        $z1 = 0;

     label15:
        z2 = $z1;

        exitmonitor r41;

     label16:
        goto label19;

     label17:
        $r36 := @caughtexception;

        r2 = $r36;

        exitmonitor r41;

     label18:
        throw r2;

     label19:
        if z2 == 0 goto label20;

        $r34 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r35 = $r34.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r35.<android.support.media2.MediaSession2: void pause()>();

        goto label24;

     label20:
        $r30 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r31 = $r30.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r42 = virtualinvoke $r31.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r42 == null goto label22;

        f3 = virtualinvoke r42.<android.support.media2.MediaPlayerConnector: float getPlayerVolume()>();

        f4 = f3 * 0.2F;

        $r32 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r33 = $r32.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r33;

        entermonitor $r33;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerVolumeBeforeDucking> = f3;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: float mPlayerDuckingVolume> = f4;

        exitmonitor r1;

        goto label21;

     label21:
        virtualinvoke r42.<android.support.media2.MediaPlayerConnector: void setPlayerVolume(float)>(f4);

     label22:
        goto label24;

     label23:
        $r19 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r20 = $r19.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r20.<android.support.media2.MediaSession2: void pause()>();

        $r21 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r22 = $r21.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r43 = $r22;

        entermonitor $r22;

        $r23 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r23.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 1;

        exitmonitor r43;

        goto label24;

     label24:
        return;

        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>
    void <init>(android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver r0;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r1;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver;

        r1 := @parameter0: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.Throwable r3, $r19;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase $r4, $r6, $r9, $r11, $r13, $r15, $r17;
        java.lang.Object $r5, $r10, r20, r21;
        boolean $z0, $z1;
        java.lang.String $r7, $r8;
        android.support.v4.media.AudioAttributesCompat $r12, $r14;
        android.support.media2.MediaSession2 $r16, $r18;
        float $f0, $f1;
        int i0;
        android.support.media2.MediaPlayerConnector r22;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r5 = $r4.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r20 = $r5;

        entermonitor $r5;

        $r6 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $z0 = $r6.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver>;

        if $z0 != 0 goto label01;

        exitmonitor r20;

        return;

     label01:
        exitmonitor r20;

        goto label02;

     label02:
        $r7 = "android.media.AUDIO_BECOMING_NOISY";

        $r8 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label12;

        $r9 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r10 = $r9.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r21 = $r10;

        entermonitor $r10;

     label03:
        $r11 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r12 = $r11.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        if $r12 != null goto label05;

        exitmonitor r21;

     label04:
        return;

     label05:
        $r13 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r14 = $r13.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        i0 = virtualinvoke $r14.<android.support.v4.media.AudioAttributesCompat: int getUsage()>();

        exitmonitor r21;

     label06:
        goto label09;

     label07:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r21;

     label08:
        throw r3;

     label09:
        lookupswitch(i0)
        {
            case 1: goto label10;
            case 14: goto label11;
            default: goto label12;
        };

     label10:
        $r17 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r18 = $r17.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r18.<android.support.media2.MediaSession2: void pause()>();

        goto label12;

     label11:
        $r15 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase this$0>;

        $r16 = $r15.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r22 = virtualinvoke $r16.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r22 == null goto label12;

        $f0 = virtualinvoke r22.<android.support.media2.MediaPlayerConnector: float getPlayerVolume()>();

        $f1 = $f0 * 0.2F;

        virtualinvoke r22.<android.support.media2.MediaPlayerConnector: void setPlayerVolume(float)>($f1);

        goto label12;

     label12:
        return;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: float VOLUME_DUCK_FACTOR>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyIntentReceiver>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain>
<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver>
    void <init>(android.content.Context, android.support.media2.MediaSession2)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.content.Context r1;
        android.support.media2.MediaSession2 r2;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver $r3;
        android.content.IntentFilter $r4;
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener $r5;
        java.lang.Object $r6, $r7;
        android.media.AudioManager $r8;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.MediaSession2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver;

        specialinvoke $r3.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$NoisyIntentReceiver: void <init>(android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase)>(r0);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyIntentReceiver> = $r3;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.media.AUDIO_BECOMING_NOISY");

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter> = $r4;

        $r5 = new android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener;

        specialinvoke $r5.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase$AudioFocusListener: void <init>(android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase)>(r0);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock> = $r6;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext> = r1;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession> = r2;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager> = $r8;

        return;
    }

    private android.support.v4.media.AudioAttributesCompat getAudioAttributesNotLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.MediaSession2 $r2;
        boolean $z0;
        android.support.v4.media.AudioAttributesCompat $r3;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r1 = virtualinvoke $r2.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r1 == null goto label1;

        $z0 = r1 instanceof android.support.media2.BaseRemoteMediaPlayerConnector;

        if $z0 == 0 goto label2;

     label1:
        $r3 = null;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>();

     label3:
        return $r3;
    }

    public boolean onPlayRequested()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.support.v4.media.AudioAttributesCompat r1;
        java.lang.Throwable r2, $r5;
        java.lang.Object $r3, r6;
        android.support.media2.MediaSession2 $r4;
        boolean z0;
        android.support.media2.MediaPlayerConnector r7;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 = specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat getAudioAttributesNotLocked()>();

        z0 = 1;

        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r6 = $r3;

        entermonitor $r3;

     label1:
        if r1 != null goto label2;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes> = null;

        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        goto label3;

     label2:
        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes> = r1;

        z0 = specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean requestAudioFocusLocked()>();

     label3:
        exitmonitor r6;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r6;

     label6:
        throw r2;

     label7:
        if r1 != null goto label8;

        $r4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r7 = virtualinvoke $r4.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r7 == null goto label8;

        virtualinvoke r7.<android.support.media2.MediaPlayerConnector: void setPlayerVolume(float)>(0.0F);

     label8:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onPauseRequested()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        java.lang.Object r1, $r2;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    private void onPlayingNotLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.support.v4.media.AudioAttributesCompat r1, $r4, $r7;
        int i0, $i1, $i2, $i4, $i6;
        java.lang.Throwable r2, $r20;
        java.lang.Object $r3, r21;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r17;
        android.support.media2.MediaSession2 $r18, $r19;
        android.support.media2.MediaPlayerConnector r22;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 = specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat getAudioAttributesNotLocked()>();

        z2 = 0;

        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r21 = $r3;

        entermonitor $r3;

     label01:
        i0 = staticinvoke <android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int convertAudioAttributesToFocusGain(android.support.v4.media.AudioAttributesCompat)>(r1);

        $r4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 == 0 goto label04;

        $i6 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if i0 != $i6 goto label04;

        if r1 == null goto label02;

        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void registerReceiverLocked()>();

     label02:
        exitmonitor r21;

     label03:
        return;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r7 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and audioFocusGainType=");

        $i1 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when playback is started, but actually ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and audioFocusGainType=");

        $i2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Use");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MediaSession2#play() for starting playback.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", $r17);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes> = r1;

        $i4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if $i4 == i0 goto label07;

        if i0 != 0 goto label05;

        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        goto label07;

     label05:
        $z1 = specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean requestAudioFocusLocked()>();

        if $z1 == 0 goto label06;

        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void registerReceiverLocked()>();

        goto label07;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioFocusHandler", "Playback is started without audio focus, and requesting audio focus is failed. Forcefully pausing playback");

        z2 = 1;

     label07:
        exitmonitor r21;

     label08:
        goto label11;

     label09:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r21;

     label10:
        throw r2;

     label11:
        if r1 != null goto label12;

        $r19 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        r22 = virtualinvoke $r19.<android.support.media2.MediaSession2: android.support.media2.MediaPlayerConnector getPlayerConnector()>();

        if r22 == null goto label12;

        virtualinvoke r22.<android.support.media2.MediaPlayerConnector: void setPlayerVolume(float)>(0.0F);

     label12:
        if z2 == 0 goto label13;

        $r18 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.media2.MediaSession2 mSession>;

        virtualinvoke $r18.<android.support.media2.MediaSession2: void pause()>();

     label13:
        return;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onPlayerStateChanged(int)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        int i0;
        java.lang.Throwable r1, r2, $r5, $r6;
        java.lang.Object $r3, $r4, r7, r8;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label07;
            case 2: goto label13;
            case 3: goto label14;
            default: goto label15;
        };

     label01:
        $r4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r7 = $r4;

        entermonitor $r4;

     label02:
        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        exitmonitor r7;

     label03:
        goto label06;

     label04:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r7;

     label05:
        throw r1;

     label06:
        goto label15;

     label07:
        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r8 = $r3;

        entermonitor $r3;

     label08:
        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterReceiverLocked()>();

        exitmonitor r8;

     label09:
        goto label12;

     label10:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r8;

     label11:
        throw r2;

     label12:
        goto label15;

     label13:
        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void onPlayingNotLocked()>();

        goto label15;

     label14:
        virtualinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void close()>();

     label15:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void close()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void unregisterReceiverLocked()>();

        specialinvoke r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: void abandonAudioFocusLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void sendIntent(android.content.Intent)
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        android.content.Intent r1;
        android.content.Context $r2;
        android.content.BroadcastReceiver $r3;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyIntentReceiver>;

        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r2, r1);

        return;
    }

    private boolean requestAudioFocusLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        int i0, i1, $i2, $i4;
        android.support.v4.media.AudioAttributesCompat $r1, $r2, $r12;
        android.media.AudioManager $r3;
        android.media.AudioManager$OnAudioFocusChangeListener $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $r1 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        i0 = staticinvoke <android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int convertAudioAttributesToFocusGain(android.support.v4.media.AudioAttributesCompat)>($r1);

        if i0 != 0 goto label2;

        $r12 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        if $r12 != null goto label1;

     label1:
        return 1;

     label2:
        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>;

        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.support.v4.media.AudioAttributesCompat mAudioAttributes>;

        $i2 = virtualinvoke $r2.<android.support.v4.media.AudioAttributesCompat: int getVolumeControlStream()>();

        i1 = virtualinvoke $r3.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>($r4, $i2, i0);

        if i1 != 1 goto label3;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = i0;

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestAudioFocus(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed (return=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") playback wouldn\'t start.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", $r11);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = 0;

     label4:
        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        $i4 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if $i4 == 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    private void abandonAudioFocusLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        int $i0;
        android.media.AudioManager$OnAudioFocusChangeListener $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $i0 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager mAudioManager>;

        $r1 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener>;

        virtualinvoke $r2.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>($r1);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: int mCurrentFocusGainType> = 0;

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mResumeWhenAudioFocusGain> = 0;

        return;
    }

    private void registerReceiverLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        boolean $z0;
        android.content.IntentFilter $r1;
        android.content.BroadcastReceiver $r2;
        android.content.Context $r3;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $z0 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyIntentReceiver>;

        $r1 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver> = 1;

        return;
    }

    private void unregisterReceiverLocked()
    {
        android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase r0;
        boolean $z0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;

        r0 := @this: android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase;

        $z0 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.Context mContext>;

        $r1 = r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: android.content.BroadcastReceiver mBecomingNoisyIntentReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        r0.<android.support.media2.AudioFocusHandler$AudioFocusHandlerImplBase: boolean mHasRegisteredReceiver> = 0;

        return;
    }

    private static int convertAudioAttributesToFocusGain(android.support.v4.media.AudioAttributesCompat)
    {
        android.support.v4.media.AudioAttributesCompat r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.support.v4.media.AudioAttributesCompat;

        if r0 != null goto label01;

        return 0;

     label01:
        $i0 = virtualinvoke r0.<android.support.v4.media.AudioAttributesCompat: int getUsage()>();

        tableswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label02;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label06;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label08;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label03;
            case 15: goto label10;
            case 16: goto label07;
            default: goto label10;
        };

     label02:
        return 0;

     label03:
        return 1;

     label04:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", "Specify a proper usage in the audio attributes for audio focus handling. Using AUDIOFOCUS_GAIN by default.");

        return 1;

     label05:
        return 2;

     label06:
        return 3;

     label07:
        return 4;

     label08:
        $i1 = virtualinvoke r0.<android.support.v4.media.AudioAttributesCompat: int getContentType()>();

        if $i1 != 1 goto label09;

        return 2;

     label09:
        return 3;

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unidentified AudioAttribute ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioFocusHandler", $r4);

        return 0;
    }

