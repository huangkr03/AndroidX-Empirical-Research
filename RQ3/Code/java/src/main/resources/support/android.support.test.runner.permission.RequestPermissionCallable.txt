android.support.test.runner.permission.RequestPermissionCallable
<android.support.test.runner.permission.RequestPermissionCallable: android.support.test.runner.permission.ShellCommand mShellCommand>
<android.support.test.runner.permission.RequestPermissionCallable: android.content.Context mTargetContext>
<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mTargetPackage>
<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>
    public void <init>(android.support.test.runner.permission.ShellCommand, android.content.Context, java.lang.String)
    {
        android.support.test.runner.permission.RequestPermissionCallable r0;
        android.support.test.runner.permission.ShellCommand r1, $r6;
        android.content.Context r2, $r8, $r9;
        java.lang.String r3, r4;
        java.lang.Object $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        r1 := @parameter0: android.support.test.runner.permission.ShellCommand;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "shellCommand cannot be null!");

        $r6 = (android.support.test.runner.permission.ShellCommand) $r5;

        r0.<android.support.test.runner.permission.RequestPermissionCallable: android.support.test.runner.permission.ShellCommand mShellCommand> = $r6;

        $r7 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "targetContext cannot be null!");

        $r8 = (android.content.Context) $r7;

        r0.<android.support.test.runner.permission.RequestPermissionCallable: android.content.Context mTargetContext> = $r8;

        $r9 = r0.<android.support.test.runner.permission.RequestPermissionCallable: android.content.Context mTargetContext>;

        r4 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.internal.util.Checks: void checkState(boolean,java.lang.Object)>($z1, "targetPackage cannot be empty or null!");

        r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mTargetPackage> = r4;

        r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission> = r3;

        return;
    }

    protected java.lang.String getPermission()
    {
        android.support.test.runner.permission.RequestPermissionCallable r0;
        java.lang.String $r1;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        $r1 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>;

        return $r1;
    }

    protected boolean isPermissionGranted()
    {
        android.support.test.runner.permission.RequestPermissionCallable r0;
        java.lang.String $r1;
        android.content.Context $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        $r2 = r0.<android.support.test.runner.permission.RequestPermissionCallable: android.content.Context mTargetContext>;

        $r1 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>;

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r1);

        if 0 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected android.support.test.runner.permission.ShellCommand getShellCommand()
    {
        android.support.test.runner.permission.RequestPermissionCallable r0;
        android.support.test.runner.permission.ShellCommand $r1;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        $r1 = r0.<android.support.test.runner.permission.RequestPermissionCallable: android.support.test.runner.permission.ShellCommand mShellCommand>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.test.runner.permission.RequestPermissionCallable r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.support.test.runner.permission.RequestPermissionCallable) r1;

        $r6 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mTargetPackage>;

        $r5 = r2.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mTargetPackage>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 == 0 goto label4;

        $r8 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>;

        $r7 = r2.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z1 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public int hashCode()
    {
        android.support.test.runner.permission.RequestPermissionCallable r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mTargetPackage>;

        $r1[0] = $r2;

        $r3 = r0.<android.support.test.runner.permission.RequestPermissionCallable: java.lang.String mPermission>;

        $r1[1] = $r3;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

android.support.test.runner.permission.RequestPermissionCallable$Result
<android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result SUCCESS>
<android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result FAILURE>
<android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result[] $VALUES>
    public static android.support.test.runner.permission.RequestPermissionCallable$Result[] values()
    {
        android.support.test.runner.permission.RequestPermissionCallable$Result[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.test.runner.permission.RequestPermissionCallable$Result[]) $r1;

        return $r2;
    }

    public static android.support.test.runner.permission.RequestPermissionCallable$Result valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.test.runner.permission.RequestPermissionCallable$Result $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/test/runner/permission/RequestPermissionCallable$Result;", r0);

        $r2 = (android.support.test.runner.permission.RequestPermissionCallable$Result) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.test.runner.permission.RequestPermissionCallable$Result r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.runner.permission.RequestPermissionCallable$Result;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.test.runner.permission.RequestPermissionCallable$Result $r0, $r1, $r3, $r4;
        android.support.test.runner.permission.RequestPermissionCallable$Result[] $r2;

        $r0 = new android.support.test.runner.permission.RequestPermissionCallable$Result;

        specialinvoke $r0.<android.support.test.runner.permission.RequestPermissionCallable$Result: void <init>(java.lang.String,int)>("SUCCESS", 0);

        <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result SUCCESS> = $r0;

        $r1 = new android.support.test.runner.permission.RequestPermissionCallable$Result;

        specialinvoke $r1.<android.support.test.runner.permission.RequestPermissionCallable$Result: void <init>(java.lang.String,int)>("FAILURE", 1);

        <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result FAILURE> = $r1;

        $r2 = newarray (android.support.test.runner.permission.RequestPermissionCallable$Result)[2];

        $r3 = <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result SUCCESS>;

        $r2[0] = $r3;

        $r4 = <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result FAILURE>;

        $r2[1] = $r4;

        <android.support.test.runner.permission.RequestPermissionCallable$Result: android.support.test.runner.permission.RequestPermissionCallable$Result[] $VALUES> = $r2;

        return;
    }

