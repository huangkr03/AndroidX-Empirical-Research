android.support.constraint.solver.widgets.ConstraintAnchor
<android.support.constraint.solver.widgets.ConstraintAnchor: boolean ALLOW_BINARY>
<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>
<android.support.constraint.solver.widgets.ConstraintAnchor: int mFinalValue>
<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue>
<android.support.constraint.solver.widgets.ConstraintAnchor: int UNSET_GONE_MARGIN>
<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>
<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>
<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>
<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin>
<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>
<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>
    public void findDependents(int, java.util.ArrayList, android.support.constraint.solver.widgets.analyzer.WidgetGroup)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r4;
        int i0;
        java.util.ArrayList r1;
        android.support.constraint.solver.widgets.analyzer.WidgetGroup r2;
        java.util.Iterator r3;
        java.util.HashSet $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.support.constraint.solver.widgets.ConstraintWidget $r8;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: android.support.constraint.solver.widgets.analyzer.WidgetGroup;

        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r5 == null goto label2;

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        r3 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.support.constraint.solver.widgets.ConstraintAnchor) $r7;

        $r8 = r4.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        staticinvoke <android.support.constraint.solver.widgets.analyzer.Grouping: android.support.constraint.solver.widgets.analyzer.WidgetGroup findDependents(android.support.constraint.solver.widgets.ConstraintWidget,int,java.util.ArrayList,android.support.constraint.solver.widgets.analyzer.WidgetGroup)>($r8, i0, r1, r2);

        goto label1;

     label2:
        return;
    }

    public java.util.HashSet getDependents()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        java.util.HashSet $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        return $r1;
    }

    public boolean hasDependents()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        java.util.HashSet $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean hasCenteredDependents()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r2, r3;
        java.util.Iterator r1;
        java.util.HashSet $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r4 != null goto label1;

        return 0;

     label1:
        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        r1 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.constraint.solver.widgets.ConstraintAnchor) $r6;

        r3 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor getOpposite()>();

        $z1 = virtualinvoke r3.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public void setFinalValue(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter0: int;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mFinalValue> = i0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue> = 1;

        return;
    }

    public int getFinalValue()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mFinalValue>;

        return $i0;
    }

    public void resetFinalResolution()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mFinalValue> = 0;

        return;
    }

    public boolean hasFinalValue()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue>;

        return $z0;
    }

    public void copyFrom(android.support.constraint.solver.widgets.ConstraintAnchor, java.util.HashMap)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r1, $r5, $r6, $r7, $r9, $r12, $r13, $r14, $r17, $r18, $r20, $r22;
        java.util.HashMap r2;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r3;
        android.support.constraint.solver.widgets.ConstraintWidget r4, $r15;
        java.util.HashSet $r8, $r10, $r11, $r19, $r21;
        java.lang.Object $r16;
        int $i0, $i1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        r2 := @parameter1: java.util.HashMap;

        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r5 == null goto label1;

        $r18 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r19 = $r18.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r19 == null goto label1;

        $r20 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r21 = $r20.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke $r21.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

     label1:
        $r22 = r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r22 == null goto label2;

        $r13 = r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        r3 = virtualinvoke $r13.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $r14 = r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r15 = $r14.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r16 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r4 = (android.support.constraint.solver.widgets.ConstraintWidget) $r16;

        $r17 = virtualinvoke r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>(r3);

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = $r17;

        goto label3;

     label2:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = null;

     label3:
        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r6 == null goto label5;

        $r7 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r8 = $r7.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r8 != null goto label4;

        $r12 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        $r12.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = $r11;

     label4:
        $r9 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r10 = $r9.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

     label5:
        $i0 = r1.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i0;

        $i1 = r1.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = $i1;

        return;
    }

    public void <init>(android.support.constraint.solver.widgets.ConstraintWidget, android.support.constraint.solver.widgets.ConstraintAnchor$Type)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        r2 := @parameter1: android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = null;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner> = r1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType> = r2;

        return;
    }

    public android.support.constraint.solver.SolverVariable getSolverVariable()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.SolverVariable $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        return $r1;
    }

    public void resetSolverVariable(android.support.constraint.solver.Cache)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.Cache r1;
        android.support.constraint.solver.SolverVariable $r2, $r3, $r4;
        android.support.constraint.solver.SolverVariable$Type $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.Cache;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        if $r2 != null goto label1;

        $r4 = new android.support.constraint.solver.SolverVariable;

        $r5 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        specialinvoke $r4.<android.support.constraint.solver.SolverVariable: void <init>(android.support.constraint.solver.SolverVariable$Type,java.lang.String)>($r5, null);

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable> = $r4;

        goto label2;

     label1:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        virtualinvoke $r3.<android.support.constraint.solver.SolverVariable: void reset()>();

     label2:
        return;
    }

    public android.support.constraint.solver.widgets.ConstraintWidget getOwner()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        return $r1;
    }

    public android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        return $r1;
    }

    public int getMargin()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r2, $r3;
        android.support.constraint.solver.widgets.ConstraintWidget $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $i0 != 8 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        if $i1 <= -1 goto label2;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r4 = $r3.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $i2 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $i2 != 8 goto label2;

        $i3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        return $i3;

     label2:
        $i4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin>;

        return $i4;
    }

    public android.support.constraint.solver.widgets.ConstraintAnchor getTarget()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        return $r1;
    }

    public void reset()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1, $r2, $r4, $r6, $r8;
        java.util.HashSet $r3, $r5, $r7;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r3 = $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r5 = $r4.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r7 = $r6.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        $i0 = virtualinvoke $r7.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label1;

        $r8 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r8.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = null;

     label1:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = null;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = null;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean mHasFinalValue> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mFinalValue> = 0;

        return;
    }

    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int, int, boolean)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r1, $r2, $r4, $r6, $r9;
        int i0, i1;
        boolean z0, $z2;
        java.util.HashSet $r3, $r5, $r7, $r8;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if r1 != null goto label1;

        virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: void reset()>();

        return 1;

     label1:
        if z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor)>(r1);

        if $z2 != 0 goto label2;

        return 0;

     label2:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = r1;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r3 = $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r3 != null goto label3;

        $r9 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents> = $r8;

     label3:
        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r5 = $r4.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        if $r5 == null goto label4;

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r7 = $r6.<android.support.constraint.solver.widgets.ConstraintAnchor: java.util.HashSet mDependents>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

     label4:
        if i0 <= 0 goto label5;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = i0;

        goto label6;

     label5:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

     label6:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = i1;

        return 1;
    }

    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r1;
        int i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,boolean)>(r1, i0, -1, 0);

        return $z0;
    }

    public boolean isConnected()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r2, $r3, $r4, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r21;
        int[] $r5;
        int $i0, $i1;
        android.support.constraint.solver.widgets.ConstraintWidget $r7, $r11, $r22, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, z9, $z10;
        java.lang.AssertionError $r17;
        java.lang.String $r19;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        if r2 != $r3 goto label04;

        $r21 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r20 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $r21 != $r20 goto label03;

        $r22 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z2 = virtualinvoke $r22.<android.support.constraint.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $z2 == 0 goto label02;

        $r23 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z3 = virtualinvoke $r23.<android.support.constraint.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $z3 != 0 goto label03;

     label02:
        return 0;

     label03:
        return 1;

     label04:
        $r5 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label16;
            case 5: goto label16;
            case 6: goto label24;
            case 7: goto label24;
            case 8: goto label24;
            case 9: goto label24;
            default: goto label25;
        };

     label05:
        $r14 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if r2 == $r14 goto label06;

        $r15 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if r2 == $r15 goto label06;

        $r16 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if r2 == $r16 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        return $z4;

     label08:
        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        if r2 == $r10 goto label09;

        $r13 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if r2 != $r13 goto label10;

     label09:
        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        z6 = $z5;

        $r11 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z1 = $r11 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z1 == 0 goto label15;

        if z6 != 0 goto label12;

        $r12 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if r2 != $r12 goto label13;

     label12:
        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        z6 = $z7;

     label15:
        return z6;

     label16:
        $r6 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        if r2 == $r6 goto label17;

        $r9 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if r2 != $r9 goto label18;

     label17:
        $z8 = 1;

        goto label19;

     label18:
        $z8 = 0;

     label19:
        z9 = $z8;

        $r7 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z0 = $r7 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z0 == 0 goto label23;

        if z9 != 0 goto label20;

        $r8 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if r2 != $r8 goto label21;

     label20:
        $z10 = 1;

        goto label22;

     label21:
        $z10 = 0;

     label22:
        z9 = $z10;

     label23:
        return z9;

     label24:
        return 0;

     label25:
        $r17 = new java.lang.AssertionError;

        $r18 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r19 = virtualinvoke $r18.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        throw $r17;
    }

    public boolean isSideAnchor()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r1, $r4;
        int[] $r2;
        int $i0, $i1;
        java.lang.AssertionError $r3;
        java.lang.String $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            default: goto label3;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $r3 = new java.lang.AssertionError;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r5 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r3;
    }

    public boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        int[] $r5;
        int $i0, $i1;
        java.lang.AssertionError $r14;
        java.lang.String $r16;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        r2 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        if r2 != $r3 goto label01;

        return 1;

     label01:
        $r5 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label05;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label05;
            case 8: goto label09;
            case 9: goto label13;
            default: goto label14;
        };

     label02:
        $r13 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if r2 == $r13 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        return $z0;

     label05:
        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        if r2 == $r10 goto label06;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if r2 == $r11 goto label06;

        $r12 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if r2 != $r12 goto label07;

     label06:
        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        return $z1;

     label09:
        $r6 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        if r2 == $r6 goto label10;

        $r7 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if r2 == $r7 goto label10;

        $r8 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if r2 == $r8 goto label10;

        $r9 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if r2 != $r9 goto label11;

     label10:
        $z2 = 1;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        return $z2;

     label13:
        return 0;

     label14:
        $r14 = new java.lang.AssertionError;

        $r15 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r16 = virtualinvoke $r15.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r14;
    }

    public void setMargin(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = i0;

     label1:
        return;
    }

    public void setGoneMargin(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = i0;

     label1:
        return;
    }

    public boolean isVerticalAnchor()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r1, $r4;
        int[] $r2;
        int $i0, $i1;
        java.lang.AssertionError $r3;
        java.lang.String $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label2;
            default: goto label3;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        $r3 = new java.lang.AssertionError;

        $r4 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r5 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r3;
    }

    public java.lang.String toString()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8;
        android.support.constraint.solver.widgets.ConstraintWidget $r2;
        java.lang.String $r3, $r7, $r9;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r6;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r3 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r7 = virtualinvoke $r6.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget, android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r2;
        android.support.constraint.solver.widgets.ConstraintWidget r1;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        r2 := @parameter1: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget)>(r1);

        return $z0;
    }

    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget r1, r3, $r5, $r6;
        java.util.HashSet r2, $r4;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        $z0 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet)>(r1, r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        r3 = virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintWidget getParent()>();

        if r3 != r1 goto label2;

        return 1;

     label2:
        $r6 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintWidget getParent()>();

        if $r6 != r3 goto label3;

        return 1;

     label3:
        return 0;
    }

    private boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget, java.util.HashSet)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r4, $r7;
        android.support.constraint.solver.widgets.ConstraintWidget r1, $r5, $r8;
        java.util.HashSet r2;
        java.util.ArrayList r3;
        int i0, i1;
        boolean $z0, $z2, $z3, $z4;
        java.lang.Object $r6;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        r2 := @parameter1: java.util.HashSet;

        $z0 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        $r5 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        if r1 != $r5 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: java.util.ArrayList getAnchors()>();

        i1 = 0;

        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label3:
        if i1 >= i0 goto label5;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.support.constraint.solver.widgets.ConstraintAnchor) $r6;

        $z2 = virtualinvoke r4.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor)>(r0);

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r4.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z3 == 0 goto label4;

        $r7 = virtualinvoke r4.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor getTarget()>();

        $r8 = virtualinvoke $r7.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z4 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet)>($r8, r2);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public final android.support.constraint.solver.widgets.ConstraintAnchor getOpposite()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r4, $r6, $r8, $r10;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r1, $r12;
        int[] $r2;
        int $i0, $i1;
        android.support.constraint.solver.widgets.ConstraintWidget $r3, $r5, $r7, $r9;
        java.lang.AssertionError $r11;
        java.lang.String $r13;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            default: goto label6;
        };

     label1:
        $r9 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r10 = $r9.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mRight>;

        return $r10;

     label2:
        $r7 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r8 = $r7.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mLeft>;

        return $r8;

     label3:
        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r6 = $r5.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mBottom>;

        return $r6;

     label4:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r4 = $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mTop>;

        return $r4;

     label5:
        return null;

     label6:
        $r11 = new java.lang.AssertionError;

        $r12 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r13 = virtualinvoke $r12.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String name()>();

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r11;
    }

android.support.constraint.solver.widgets.ConstraintAnchor$1
<android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>
    static void <clinit>()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        java.lang.Throwable $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, r29, r30, r31, r32, r33, r34, r35, r36, r37;

        $r0 = staticinvoke <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type> = $r1;

     label01:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER>;

        $i1 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        r29 = $r22;

     label04:
        $r5 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $i2 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r28 := @caughtexception;

        r30 = $r28;

     label07:
        $r7 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r6 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $i3 = virtualinvoke $r6.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

        r31 = $r21;

     label10:
        $r9 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r8 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $i4 = virtualinvoke $r8.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r27 := @caughtexception;

        r32 = $r27;

     label13:
        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $i5 = virtualinvoke $r10.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r11[$i5] = 5;

     label14:
        goto label16;

     label15:
        $r23 := @caughtexception;

        r33 = $r23;

     label16:
        $r13 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r12 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $i6 = virtualinvoke $r12.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r13[$i6] = 6;

     label17:
        goto label19;

     label18:
        $r20 := @caughtexception;

        r34 = $r20;

     label19:
        $r15 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r14 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        $i7 = virtualinvoke $r14.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r15[$i7] = 7;

     label20:
        goto label22;

     label21:
        $r26 := @caughtexception;

        r35 = $r26;

     label22:
        $r17 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r16 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        $i8 = virtualinvoke $r16.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r17[$i8] = 8;

     label23:
        goto label25;

     label24:
        $r24 := @caughtexception;

        r36 = $r24;

     label25:
        $r19 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r18 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type NONE>;

        $i9 = virtualinvoke $r18.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $r19[$i9] = 9;

     label26:
        goto label28;

     label27:
        $r25 := @caughtexception;

        r37 = $r25;

     label28:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label16 to label17 with label18;
        catch java.lang.NoSuchFieldError from label19 to label20 with label21;
        catch java.lang.NoSuchFieldError from label22 to label23 with label24;
        catch java.lang.NoSuchFieldError from label25 to label26 with label27;
    }

android.support.constraint.solver.widgets.ConstraintAnchor$Type
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type NONE>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>
<android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $VALUES>
    public static android.support.constraint.solver.widgets.ConstraintAnchor$Type[] values()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.constraint.solver.widgets.ConstraintAnchor$Type[]) $r1;

        return $r2;
    }

    public static android.support.constraint.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/constraint/solver/widgets/ConstraintAnchor$Type;", r0);

        $r2 = (android.support.constraint.solver.widgets.ConstraintAnchor$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $r9;

        $r0 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r0.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("NONE", 0);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type NONE> = $r0;

        $r1 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("LEFT", 1);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT> = $r1;

        $r2 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("TOP", 2);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP> = $r2;

        $r3 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r3.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("RIGHT", 3);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT> = $r3;

        $r4 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r4.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("BOTTOM", 4);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("BASELINE", 5);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE> = $r5;

        $r6 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r6.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("CENTER", 6);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER> = $r6;

        $r7 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r7.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("CENTER_X", 7);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X> = $r7;

        $r8 = new android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke $r8.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: void <init>(java.lang.String,int)>("CENTER_Y", 8);

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y> = $r8;

        $r9 = newarray (android.support.constraint.solver.widgets.ConstraintAnchor$Type)[9];

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type NONE>;

        $r9[0] = $r10;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r9[1] = $r11;

        $r12 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r9[2] = $r12;

        $r13 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r9[3] = $r13;

        $r14 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r9[4] = $r14;

        $r15 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $r9[5] = $r15;

        $r16 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER>;

        $r9[6] = $r16;

        $r17 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        $r9[7] = $r17;

        $r18 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        $r9[8] = $r18;

        <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $VALUES> = $r9;

        return;
    }

