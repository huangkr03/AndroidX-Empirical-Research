android.support.test.internal.runner.junit4.statement.RunBefores
<android.support.test.internal.runner.junit4.statement.RunBefores: java.util.List mBefores>
<android.support.test.internal.runner.junit4.statement.RunBefores: org.junit.runners.model.Statement mNext>
<android.support.test.internal.runner.junit4.statement.RunBefores: java.lang.Object mTarget>
    public void <init>(org.junit.runners.model.FrameworkMethod, org.junit.runners.model.Statement, java.util.List, java.lang.Object)
    {
        android.support.test.internal.runner.junit4.statement.RunBefores $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        org.junit.runners.model.Statement $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @this: android.support.test.internal.runner.junit4.statement.RunBefores;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: org.junit.runners.model.Statement;

        $r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.Object;

        $z0 = staticinvoke <android.support.test.internal.runner.junit4.statement.RunBefores: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r1);

        specialinvoke $r0.<android.support.test.internal.runner.junit4.statement.UiThreadStatement: void <init>(org.junit.runners.model.Statement,boolean)>($r2, $z0);

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: org.junit.runners.model.Statement mNext> = $r2;

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: java.util.List mBefores> = $r3;

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: java.lang.Object mTarget> = $r4;

        return;
    }

    static java.lang.Object access$000(android.support.test.internal.runner.junit4.statement.RunBefores)
    {
        android.support.test.internal.runner.junit4.statement.RunBefores $r0;
        java.lang.Object r1;

        $r0 := @parameter0: android.support.test.internal.runner.junit4.statement.RunBefores;

        r1 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: java.lang.Object mTarget>;

        return r1;
    }

    public void evaluate() throws java.lang.Throwable
    {
        android.support.test.internal.runner.junit4.statement.RunBefores $r0;
        java.util.concurrent.atomic.AtomicReference $r1, r9;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.junit.runners.model.FrameworkMethod $r5;
        java.lang.Throwable $r6;
        java.lang.Object[] $r7;
        org.junit.runners.model.Statement $r8;
        android.support.test.internal.runner.junit4.statement.RunBefores$1 r10;
        java.lang.Runnable r11;

        $r0 := @this: android.support.test.internal.runner.junit4.statement.RunBefores;

        r9 = new java.util.concurrent.atomic.AtomicReference;

        $r1 = r9;

        specialinvoke r9.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r2 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: java.util.List mBefores>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.junit.runners.model.FrameworkMethod) $r4;

        $z0 = staticinvoke <android.support.test.internal.runner.junit4.statement.RunBefores: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r5);

        if $z0 == 0 goto label2;

        r10 = new android.support.test.internal.runner.junit4.statement.RunBefores$1;

        specialinvoke r10.<android.support.test.internal.runner.junit4.statement.RunBefores$1: void <init>(android.support.test.internal.runner.junit4.statement.RunBefores,org.junit.runners.model.FrameworkMethod,java.util.concurrent.atomic.AtomicReference)>($r0, $r5, $r1);

        r11 = (java.lang.Runnable) r10;

        staticinvoke <android.support.test.internal.runner.junit4.statement.RunBefores: void runOnUiThread(java.lang.Runnable)>(r11);

        $r4 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r6 = (java.lang.Throwable) $r4;

        if $r6 == null goto label1;

        throw $r6;

     label2:
        $r4 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: java.lang.Object mTarget>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r5.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r4, $r7);

        goto label1;

     label3:
        $r8 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores: org.junit.runners.model.Statement mNext>;

        virtualinvoke $r8.<org.junit.runners.model.Statement: void evaluate()>();

        return;
    }

android.support.test.internal.runner.junit4.statement.RunBefores$1
<android.support.test.internal.runner.junit4.statement.RunBefores$1: android.support.test.internal.runner.junit4.statement.RunBefores this$0>
<android.support.test.internal.runner.junit4.statement.RunBefores$1: org.junit.runners.model.FrameworkMethod val$before>
<android.support.test.internal.runner.junit4.statement.RunBefores$1: java.util.concurrent.atomic.AtomicReference val$exceptionRef>
    void <init>(android.support.test.internal.runner.junit4.statement.RunBefores, org.junit.runners.model.FrameworkMethod, java.util.concurrent.atomic.AtomicReference)
    {
        android.support.test.internal.runner.junit4.statement.RunBefores$1 $r0;
        android.support.test.internal.runner.junit4.statement.RunBefores $r1;
        org.junit.runners.model.FrameworkMethod $r2;
        java.util.concurrent.atomic.AtomicReference $r3;

        $r0 := @this: android.support.test.internal.runner.junit4.statement.RunBefores$1;

        $r1 := @parameter0: android.support.test.internal.runner.junit4.statement.RunBefores;

        $r2 := @parameter1: org.junit.runners.model.FrameworkMethod;

        $r3 := @parameter2: java.util.concurrent.atomic.AtomicReference;

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: android.support.test.internal.runner.junit4.statement.RunBefores this$0> = $r1;

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: org.junit.runners.model.FrameworkMethod val$before> = $r2;

        $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: java.util.concurrent.atomic.AtomicReference val$exceptionRef> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.internal.runner.junit4.statement.RunBefores$1 $r0;
        java.lang.Object $r1;
        org.junit.runners.model.FrameworkMethod $r2;
        android.support.test.internal.runner.junit4.statement.RunBefores $r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5;
        java.util.concurrent.atomic.AtomicReference $r6;

        $r0 := @this: android.support.test.internal.runner.junit4.statement.RunBefores$1;

        $r2 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: org.junit.runners.model.FrameworkMethod val$before>;

        $r3 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: android.support.test.internal.runner.junit4.statement.RunBefores this$0>;

     label1:
        $r1 = staticinvoke <android.support.test.internal.runner.junit4.statement.RunBefores: java.lang.Object access$000(android.support.test.internal.runner.junit4.statement.RunBefores)>($r3);

     label2:
        $r4 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r2.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r6 = $r0.<android.support.test.internal.runner.junit4.statement.RunBefores$1: java.util.concurrent.atomic.AtomicReference val$exceptionRef>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

