android.support.design.shape.CutCornerTreatment
<android.support.design.shape.CutCornerTreatment: float size>
    public void <init>(float)
    {
        android.support.design.shape.CutCornerTreatment r0;
        float f0;

        r0 := @this: android.support.design.shape.CutCornerTreatment;

        f0 := @parameter0: float;

        specialinvoke r0.<android.support.design.shape.CornerTreatment: void <init>()>();

        r0.<android.support.design.shape.CutCornerTreatment: float size> = f0;

        return;
    }

    public void getCornerPath(float, float, android.support.design.shape.ShapePath)
    {
        android.support.design.shape.CutCornerTreatment r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.support.design.shape.ShapePath r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: android.support.design.shape.CutCornerTreatment;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: android.support.design.shape.ShapePath;

        $f2 = r0.<android.support.design.shape.CutCornerTreatment: float size>;

        $f3 = $f2 * f1;

        virtualinvoke r1.<android.support.design.shape.ShapePath: void reset(float,float)>(0.0F, $f3);

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f4 = r0.<android.support.design.shape.CutCornerTreatment: float size>;

        $d2 = (double) $f4;

        $d4 = $d1 * $d2;

        $d3 = (double) f1;

        $d5 = $d4 * $d3;

        $f5 = (float) $d5;

        $d6 = (double) f0;

        $d7 = staticinvoke <java.lang.Math: double cos(double)>($d6);

        $f6 = r0.<android.support.design.shape.CutCornerTreatment: float size>;

        $d8 = (double) $f6;

        $d10 = $d7 * $d8;

        $d9 = (double) f1;

        $d11 = $d10 * $d9;

        $f7 = (float) $d11;

        virtualinvoke r1.<android.support.design.shape.ShapePath: void lineTo(float,float)>($f5, $f7);

        return;
    }

