android.support.v17.leanback.widget.picker.TimePicker
<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String TAG>
<android.support.v17.leanback.widget.picker.TimePicker: int AM_INDEX>
<android.support.v17.leanback.widget.picker.TimePicker: int PM_INDEX>
<android.support.v17.leanback.widget.picker.TimePicker: int HOURS_IN_HALF_DAY>
<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn>
<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn>
<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>
<android.support.v17.leanback.widget.picker.TimePicker: int mColHourIndex>
<android.support.v17.leanback.widget.picker.TimePicker: int mColMinuteIndex>
<android.support.v17.leanback.widget.picker.TimePicker: int mColAmPmIndex>
<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>
<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>
<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>
<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentMinute>
<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex>
<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String mTimePickerFormat>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4;
        android.content.res.TypedArray r3;
        boolean z0, $z1, $z2;
        java.util.Calendar r4;
        java.util.Locale $r5, $r10;
        android.content.res.Resources $r6;
        android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant $r7, $r9;
        int[] $r8;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v17.leanback.widget.picker.Picker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <android.support.v17.leanback.widget.picker.PickerUtility: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant getTimeConstantInstance(java.util.Locale,android.content.res.Resources)>($r5, $r6);

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant> = $r7;

        $r8 = <android.support.v17.leanback.R$styleable: int[] lbTimePicker>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        $i1 = <android.support.v17.leanback.R$styleable: int lbTimePicker_is24HourFormat>;

        $z1 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r1);

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, $z1);

        r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat> = $z2;

        $i2 = <android.support.v17.leanback.R$styleable: int lbTimePicker_useCurrentTime>;

        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void updateColumns()>();

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void updateColumnsRange()>();

        if z0 == 0 goto label1;

        $r9 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r10 = $r9.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale>;

        r4 = staticinvoke <android.support.v17.leanback.widget.picker.PickerUtility: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>(null, $r10);

        $i3 = virtualinvoke r4.<java.util.Calendar: int get(int)>(11);

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setHour(int)>($i3);

        $i4 = virtualinvoke r4.<java.util.Calendar: int get(int)>(12);

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setMinute(int)>($i4);

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setAmPmValue()>();

     label1:
        return;
    }

    private static boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn, int)
    {
        android.support.v17.leanback.widget.picker.PickerColumn r0;
        int i0, $i1;

        r0 := @parameter0: android.support.v17.leanback.widget.picker.PickerColumn;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.PickerColumn: int getMinValue()>();

        if i0 == $i1 goto label1;

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.PickerColumn: void setMinValue(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    private static boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn, int)
    {
        android.support.v17.leanback.widget.picker.PickerColumn r0;
        int i0, $i1;

        r0 := @parameter0: android.support.v17.leanback.widget.picker.PickerColumn;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.PickerColumn: int getMaxValue()>();

        if i0 == $i1 goto label1;

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.PickerColumn: void setMaxValue(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    java.lang.String getBestHourMinutePattern()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        java.text.DateFormat r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant $r2, $r6;
        java.util.Locale $r3, $r7;
        java.text.SimpleDateFormat $r4;
        java.lang.String $r5, $r8, r9, r10, r11, $r12, $r13;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $z0 = <android.support.v17.leanback.widget.picker.PickerUtility: boolean SUPPORTS_BEST_DATE_TIME_PATTERN>;

        if $z0 == 0 goto label03;

        $r6 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r7 = $r6.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale>;

        $z4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z4 == 0 goto label01;

        $r8 = "Hma";

        goto label02;

     label01:
        $r8 = "hma";

     label02:
        r9 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r7, $r8);

        goto label08;

     label03:
        $r2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r3 = $r2.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale>;

        r1 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(3, $r3);

        $z1 = r1 instanceof java.text.SimpleDateFormat;

        if $z1 == 0 goto label05;

        $r4 = (java.text.SimpleDateFormat) r1;

        r10 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        r11 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("s", "");

        $z3 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z3 == 0 goto label04;

        $r5 = virtualinvoke r11.<java.lang.String: java.lang.String replace(char,char)>(104, 72);

        r11 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("a", "");

     label04:
        r9 = r11;

        goto label08;

     label05:
        $z2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z2 == 0 goto label06;

        $r12 = "H:mma";

        goto label07;

     label06:
        $r12 = "h:mma";

     label07:
        r9 = $r12;

     label08:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z5 == 0 goto label09;

        $r13 = "h:mma";

        goto label10;

     label09:
        $r13 = r9;

     label10:
        return $r13;
    }

    java.util.List extractSeparators()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        java.lang.String r1, $r8, $r10;
        java.util.ArrayList r2, $r5;
        java.lang.StringBuilder r3, $r6;
        char[] r4, $r7;
        char c0, c2;
        int $i1, i3;
        boolean $z1, z3;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        r1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String getBestHourMinutePattern()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = $r6;

        c2 = 0;

        $r7 = newarray (char)[7];

        $r7[0] = 72;

        $r7[1] = 104;

        $r7[2] = 75;

        $r7[3] = 107;

        $r7[4] = 109;

        $r7[5] = 77;

        $r7[6] = 97;

        r4 = $r7;

        z3 = 0;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i1 goto label9;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c0 != 32 goto label2;

        goto label8;

     label2:
        if c0 != 39 goto label4;

        if z3 != 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        z3 = 1;

        goto label8;

     label3:
        z3 = 0;

        goto label8;

     label4:
        if z3 == 0 goto label5;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        goto label7;

     label5:
        $z1 = staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean isAnyOf(char,char[])>(c0, r4);

        if $z1 == 0 goto label6;

        if c0 == c2 goto label7;

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label7;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label7:
        c2 = c0;

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        return r2;
    }

    private static boolean isAnyOf(char, char[])
    {
        char c0, $c2;
        char[] r0;
        int $i1, i3;

        c0 := @parameter0: char;

        r0 := @parameter1: char[];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label3;

        $c2 = r0[i3];

        if c0 != $c2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private java.lang.String extractTimeFields()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        java.lang.String r1, r2, $r11, $r12;
        boolean z0, z1, $z2, $z3, $z4;
        android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant $r3;
        java.util.Locale $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        r1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String getBestHourMinutePattern()>();

        $r3 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r4 = $r3.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.util.Locale locale>;

        $i0 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>($r4);

        if $i0 != 1 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(97);

        if $i1 < 0 goto label04;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("a");

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("m");

        if $i2 <= $i3 goto label03;

        $z4 = 1;

        goto label05;

     label03:
        $z4 = 0;

        goto label05;

     label04:
        $z4 = 1;

     label05:
        z1 = $z4;

        if z0 == 0 goto label06;

        $r11 = "mh";

        goto label07;

     label06:
        $r11 = "hm";

     label07:
        r2 = $r11;

        $z2 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean is24Hour()>();

        if $z2 == 0 goto label08;

        return r2;

     label08:
        if z1 == 0 goto label09;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r12;
    }

    private void updateColumns()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        java.lang.String r1, $r4, $r29, r30, r31;
        java.util.List r2;
        java.util.ArrayList r3, $r5;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, i7;
        char $c4;
        android.support.v17.leanback.widget.picker.PickerColumn $r6, $r9, $r10, $r13, $r14, $r17, $r18, $r19;
        android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant $r7, $r11, $r15;
        java.lang.String[] $r8, $r12, $r16;
        java.lang.IllegalArgumentException $r20;
        java.lang.IllegalStateException $r21;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        r1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String getBestHourMinutePattern()>();

        $r4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String mTimePickerFormat>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String mTimePickerFormat> = r1;

        r30 = specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: java.lang.String extractTimeFields()>();

        r2 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: java.util.List extractSeparators()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = virtualinvoke r30.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        if $i0 == $i2 goto label2;

        $r21 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Separators size: ");

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must equal");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the size of timeFieldsPattern: ");

        $i6 = virtualinvoke r30.<java.lang.String: int length()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + 1");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r21;

     label2:
        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setSeparators(java.util.List)>(r2);

        r31 = virtualinvoke r30.<java.lang.String: java.lang.String toUpperCase()>();

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn> = null;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn> = null;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn> = null;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColAmPmIndex> = -1;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColMinuteIndex> = -1;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColHourIndex> = -1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(3);

        r3 = $r5;

        i7 = 0;

     label3:
        $i3 = virtualinvoke r31.<java.lang.String: int length()>();

        if i7 >= $i3 goto label9;

        $c4 = virtualinvoke r31.<java.lang.String: char charAt(int)>(i7);

        lookupswitch($c4)
        {
            case 65: goto label6;
            case 72: goto label4;
            case 77: goto label5;
            default: goto label7;
        };

     label4:
        $r10 = new android.support.v17.leanback.widget.picker.PickerColumn;

        specialinvoke $r10.<android.support.v17.leanback.widget.picker.PickerColumn: void <init>()>();

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn> = $r10;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r13 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn>;

        $r11 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r12 = $r11.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] hours24>;

        virtualinvoke $r13.<android.support.v17.leanback.widget.picker.PickerColumn: void setStaticLabels(java.lang.CharSequence[])>($r12);

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColHourIndex> = i7;

        goto label8;

     label5:
        $r6 = new android.support.v17.leanback.widget.picker.PickerColumn;

        specialinvoke $r6.<android.support.v17.leanback.widget.picker.PickerColumn: void <init>()>();

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn> = $r6;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r9 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn>;

        $r7 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r8 = $r7.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] minutes>;

        virtualinvoke $r9.<android.support.v17.leanback.widget.picker.PickerColumn: void setStaticLabels(java.lang.CharSequence[])>($r8);

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColMinuteIndex> = i7;

        goto label8;

     label6:
        $r14 = new android.support.v17.leanback.widget.picker.PickerColumn;

        specialinvoke $r14.<android.support.v17.leanback.widget.picker.PickerColumn: void <init>()>();

        r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn> = $r14;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r17 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        $r15 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant mConstant>;

        $r16 = $r15.<android.support.v17.leanback.widget.picker.PickerUtility$TimeConstant: java.lang.String[] ampm>;

        virtualinvoke $r17.<android.support.v17.leanback.widget.picker.PickerColumn: void setStaticLabels(java.lang.CharSequence[])>($r16);

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColAmPmIndex> = i7;

        $r18 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r18, 0);

        $r19 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r19, 1);

        goto label8;

     label7:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid time picker format.");

        throw $r20;

     label8:
        i7 = i7 + 1;

        goto label3;

     label9:
        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setColumns(java.util.List)>(r3);

        return;
    }

    private void updateColumnsRange()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        boolean $z0, $z2;
        android.support.v17.leanback.widget.picker.PickerColumn $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b0, $b1;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $r1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn>;

        $z0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r1, $b0);

        $r2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mHourColumn>;

        $z2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z2 == 0 goto label3;

        $b1 = 23;

        goto label4;

     label3:
        $b1 = 12;

     label4:
        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r2, $b1);

        $r3 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r3, 0);

        $r4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mMinuteColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r4, 59);

        $r5 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        if $r5 == null goto label5;

        $r6 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMin(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r6, 0);

        $r7 = r0.<android.support.v17.leanback.widget.picker.TimePicker: android.support.v17.leanback.widget.picker.PickerColumn mAmPmColumn>;

        staticinvoke <android.support.v17.leanback.widget.picker.TimePicker: boolean updateMax(android.support.v17.leanback.widget.picker.PickerColumn,int)>($r7, 1);

     label5:
        return;
    }

    private void setAmPmValue()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $z0 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean is24Hour()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColAmPmIndex>;

        $i0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex>;

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setColumnValue(int,int,boolean)>($i1, $i0, 0);

     label1:
        return;
    }

    public void setHour(int)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 23 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hour: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in [0-23] range in");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour> = i0;

        $z0 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean is24Hour()>();

        if $z0 != 0 goto label5;

        $i1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        if $i1 < 12 goto label3;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex> = 1;

        $i3 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        if $i3 <= 12 goto label4;

        $i4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        $i5 = $i4 - 12;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour> = $i5;

        goto label4;

     label3:
        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex> = 0;

        $i2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        if $i2 != 0 goto label4;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour> = 12;

     label4:
        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setAmPmValue()>();

     label5:
        $i6 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColHourIndex>;

        $i7 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setColumnValue(int,int,boolean)>($i6, $i7, 0);

        return;
    }

    public int getHour()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $z0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z0 == 0 goto label1;

        $i6 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        return $i6;

     label1:
        $i0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex>;

        if $i0 != 0 goto label2;

        $i4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        $i5 = $i4 % 12;

        return $i5;

     label2:
        $i1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour>;

        $i2 = $i1 % 12;

        $i3 = $i2 + 12;

        return $i3;
    }

    public void setMinute(int)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 59 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minute: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in [0-59] range.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentMinute> = i0;

        $i2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColMinuteIndex>;

        $i1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentMinute>;

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setColumnValue(int,int,boolean)>($i2, $i1, 0);

        return;
    }

    public int getMinute()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $i0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentMinute>;

        return $i0;
    }

    public void setIs24Hour(boolean)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        boolean z0, $z1;
        int i0, i1;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        if $z1 != z0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: int getHour()>();

        i1 = virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: int getMinute()>();

        r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat> = z0;

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void updateColumns()>();

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void updateColumnsRange()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setHour(int)>(i0);

        virtualinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setMinute(int)>(i1);

        specialinvoke r0.<android.support.v17.leanback.widget.picker.TimePicker: void setAmPmValue()>();

        return;
    }

    public boolean is24Hour()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $z0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: boolean mIs24hFormat>;

        return $z0;
    }

    public boolean isPm()
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        $i0 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onColumnValueChanged(int, int)
    {
        android.support.v17.leanback.widget.picker.TimePicker r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.v17.leanback.widget.picker.TimePicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColHourIndex>;

        if i0 != $i2 goto label1;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentHour> = i1;

        goto label4;

     label1:
        $i3 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColMinuteIndex>;

        if i0 != $i3 goto label2;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentMinute> = i1;

        goto label4;

     label2:
        $i4 = r0.<android.support.v17.leanback.widget.picker.TimePicker: int mColAmPmIndex>;

        if i0 != $i4 goto label3;

        r0.<android.support.v17.leanback.widget.picker.TimePicker: int mCurrentAmPmIndex> = i1;

        goto label4;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid column index.");

        throw $r1;

     label4:
        return;
    }

