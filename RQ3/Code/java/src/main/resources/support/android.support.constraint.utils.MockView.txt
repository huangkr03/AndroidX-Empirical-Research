android.support.constraint.utils.MockView
<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>
<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText>
<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground>
<android.support.constraint.utils.MockView: boolean mDrawDiagonals>
<android.support.constraint.utils.MockView: boolean mDrawLabel>
<android.support.constraint.utils.MockView: java.lang.String mText>
<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>
<android.support.constraint.utils.MockView: int mDiagonalsColor>
<android.support.constraint.utils.MockView: int mTextColor>
<android.support.constraint.utils.MockView: int mTextBackgroundColor>
<android.support.constraint.utils.MockView: int mMargin>
    public void <init>(android.content.Context)
    {
        android.support.constraint.utils.MockView r0;
        android.content.Context r1;
        android.graphics.Paint $r2, $r3, $r4;
        android.graphics.Rect $r5;
        int $i0, $i1, $i2;

        r0 := @this: android.support.constraint.utils.MockView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground> = $r4;

        r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals> = 1;

        r0.<android.support.constraint.utils.MockView: boolean mDrawLabel> = 1;

        r0.<android.support.constraint.utils.MockView: java.lang.String mText> = null;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds> = $r5;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 0, 0, 0);

        r0.<android.support.constraint.utils.MockView: int mDiagonalsColor> = $i0;

        $i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 200, 200, 200);

        r0.<android.support.constraint.utils.MockView: int mTextColor> = $i1;

        $i2 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 50, 50, 50);

        r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor> = $i2;

        r0.<android.support.constraint.utils.MockView: int mMargin> = 4;

        specialinvoke r0.<android.support.constraint.utils.MockView: void init(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.utils.MockView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Paint $r3, $r4, $r5;
        android.graphics.Rect $r6;
        int $i0, $i1, $i2;

        r0 := @this: android.support.constraint.utils.MockView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground> = $r5;

        r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals> = 1;

        r0.<android.support.constraint.utils.MockView: boolean mDrawLabel> = 1;

        r0.<android.support.constraint.utils.MockView: java.lang.String mText> = null;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds> = $r6;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 0, 0, 0);

        r0.<android.support.constraint.utils.MockView: int mDiagonalsColor> = $i0;

        $i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 200, 200, 200);

        r0.<android.support.constraint.utils.MockView: int mTextColor> = $i1;

        $i2 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 50, 50, 50);

        r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor> = $i2;

        r0.<android.support.constraint.utils.MockView: int mMargin> = 4;

        specialinvoke r0.<android.support.constraint.utils.MockView: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.utils.MockView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3;
        android.graphics.Paint $r3, $r4, $r5;
        android.graphics.Rect $r6;

        r0 := @this: android.support.constraint.utils.MockView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground> = $r5;

        r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals> = 1;

        r0.<android.support.constraint.utils.MockView: boolean mDrawLabel> = 1;

        r0.<android.support.constraint.utils.MockView: java.lang.String mText> = null;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds> = $r6;

        $i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 0, 0, 0);

        r0.<android.support.constraint.utils.MockView: int mDiagonalsColor> = $i1;

        $i2 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 200, 200, 200);

        r0.<android.support.constraint.utils.MockView: int mTextColor> = $i2;

        $i3 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 50, 50, 50);

        r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor> = $i3;

        r0.<android.support.constraint.utils.MockView: int mMargin> = 4;

        specialinvoke r0.<android.support.constraint.utils.MockView: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void init(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.utils.MockView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r3, $r5, $r7;
        android.content.res.Resources $r4, $r16;
        int[] $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r8, r10;
        android.content.res.TypedArray r9;
        android.graphics.Paint $r11, $r12, $r13, $r14, $r15;
        float $f0, $f1, $f2, $f3;
        android.util.DisplayMetrics $r17;

        r0 := @this: android.support.constraint.utils.MockView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        if r2 == null goto label09;

        $r6 = <android.support.constraint.R$styleable: int[] MockView>;

        r9 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        i0 = virtualinvoke r9.<android.content.res.TypedArray: int getIndexCount()>();

        i15 = 0;

     label01:
        if i15 >= i0 goto label08;

        i1 = virtualinvoke r9.<android.content.res.TypedArray: int getIndex(int)>(i15);

        $i3 = <android.support.constraint.R$styleable: int MockView_mock_label>;

        if i1 != $i3 goto label02;

        $r7 = virtualinvoke r9.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r0.<android.support.constraint.utils.MockView: java.lang.String mText> = $r7;

        goto label07;

     label02:
        $i4 = <android.support.constraint.R$styleable: int MockView_mock_showDiagonals>;

        if i1 != $i4 goto label03;

        $z2 = r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals>;

        $z3 = virtualinvoke r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z2);

        r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals> = $z3;

        goto label07;

     label03:
        $i5 = <android.support.constraint.R$styleable: int MockView_mock_diagonalsColor>;

        if i1 != $i5 goto label04;

        $i13 = r0.<android.support.constraint.utils.MockView: int mDiagonalsColor>;

        $i14 = virtualinvoke r9.<android.content.res.TypedArray: int getColor(int,int)>(i1, $i13);

        r0.<android.support.constraint.utils.MockView: int mDiagonalsColor> = $i14;

        goto label07;

     label04:
        $i6 = <android.support.constraint.R$styleable: int MockView_mock_labelBackgroundColor>;

        if i1 != $i6 goto label05;

        $i11 = r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor>;

        $i12 = virtualinvoke r9.<android.content.res.TypedArray: int getColor(int,int)>(i1, $i11);

        r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor> = $i12;

        goto label07;

     label05:
        $i7 = <android.support.constraint.R$styleable: int MockView_mock_labelColor>;

        if i1 != $i7 goto label06;

        $i9 = r0.<android.support.constraint.utils.MockView: int mTextColor>;

        $i10 = virtualinvoke r9.<android.content.res.TypedArray: int getColor(int,int)>(i1, $i9);

        r0.<android.support.constraint.utils.MockView: int mTextColor> = $i10;

        goto label07;

     label06:
        $i8 = <android.support.constraint.R$styleable: int MockView_mock_showLabel>;

        if i1 != $i8 goto label07;

        $z0 = r0.<android.support.constraint.utils.MockView: boolean mDrawLabel>;

        $z1 = virtualinvoke r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        r0.<android.support.constraint.utils.MockView: boolean mDrawLabel> = $z1;

     label07:
        i15 = i15 + 1;

        goto label01;

     label08:
        virtualinvoke r9.<android.content.res.TypedArray: void recycle()>();

     label09:
        $r3 = r0.<android.support.constraint.utils.MockView: java.lang.String mText>;

        if $r3 != null goto label13;

     label10:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r0.<android.support.constraint.utils.MockView: int getId()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>($i2);

        r0.<android.support.constraint.utils.MockView: java.lang.String mText> = $r5;

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

        r10 = $r8;

     label13:
        $r11 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        $i16 = r0.<android.support.constraint.utils.MockView: int mDiagonalsColor>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i16);

        $r12 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke $r12.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r13 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText>;

        $i17 = r0.<android.support.constraint.utils.MockView: int mTextColor>;

        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i17);

        $r14 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText>;

        virtualinvoke $r14.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r15 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground>;

        $i18 = r0.<android.support.constraint.utils.MockView: int mTextBackgroundColor>;

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>($i18);

        $i19 = r0.<android.support.constraint.utils.MockView: int mMargin>;

        $f0 = (float) $i19;

        $r16 = virtualinvoke r0.<android.support.constraint.utils.MockView: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r17.<android.util.DisplayMetrics: float xdpi>;

        $f2 = $f1 / 160.0F;

        $f3 = $f0 * $f2;

        $i20 = staticinvoke <java.lang.Math: int round(float)>($f3);

        r0.<android.support.constraint.utils.MockView: int mMargin> = $i20;

        return;

        catch java.lang.Exception from label10 to label11 with label12;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.support.constraint.utils.MockView r0;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r5, $r19;
        android.graphics.Paint $r4, $r16, $r18, $r20, $r21, $r22, $r23, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;
        android.graphics.Rect $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17;

        r0 := @this: android.support.constraint.utils.MockView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        i20 = virtualinvoke r0.<android.support.constraint.utils.MockView: int getWidth()>();

        i21 = virtualinvoke r0.<android.support.constraint.utils.MockView: int getHeight()>();

        $z0 = r0.<android.support.constraint.utils.MockView: boolean mDrawDiagonals>;

        if $z0 == 0 goto label1;

        i20 = i20 + -1;

        i21 = i21 + -1;

        $f7 = (float) i20;

        $f6 = (float) i21;

        $r20 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f7, $f6, $r20);

        $f9 = (float) i21;

        $f8 = (float) i20;

        $r21 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f9, $f8, 0.0F, $r21);

        $f10 = (float) i20;

        $r22 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f10, 0.0F, $r22);

        $f13 = (float) i20;

        $f12 = (float) i20;

        $f11 = (float) i21;

        $r23 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f13, 0.0F, $f12, $f11, $r23);

        $f16 = (float) i20;

        $f15 = (float) i21;

        $f14 = (float) i21;

        $r24 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f16, $f15, 0.0F, $f14, $r24);

        $f17 = (float) i21;

        $r25 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintDiagonals>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f17, 0.0F, 0.0F, $r25);

     label1:
        $r2 = r0.<android.support.constraint.utils.MockView: java.lang.String mText>;

        if $r2 == null goto label2;

        $z1 = r0.<android.support.constraint.utils.MockView: boolean mDrawLabel>;

        if $z1 == 0 goto label2;

        $r4 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText>;

        $r5 = r0.<android.support.constraint.utils.MockView: java.lang.String mText>;

        $r3 = r0.<android.support.constraint.utils.MockView: java.lang.String mText>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r6 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        virtualinvoke $r4.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r5, 0, $i0, $r6);

        $r7 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i1 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $i2 = i20 - $i1;

        $f2 = (float) $i2;

        f0 = $f2 / 2.0F;

        $r8 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i3 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $i4 = i21 - $i3;

        $f3 = (float) $i4;

        $f4 = $f3 / 2.0F;

        $r9 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i5 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $f5 = (float) $i5;

        f1 = $f4 + $f5;

        $r10 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i7 = (int) f0;

        $i6 = (int) f1;

        virtualinvoke $r10.<android.graphics.Rect: void offset(int,int)>($i7, $i6);

        $r15 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $r11 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i9 = $r11.<android.graphics.Rect: int left>;

        $i8 = r0.<android.support.constraint.utils.MockView: int mMargin>;

        $i19 = $i9 - $i8;

        $r12 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i11 = $r12.<android.graphics.Rect: int top>;

        $i10 = r0.<android.support.constraint.utils.MockView: int mMargin>;

        $i18 = $i11 - $i10;

        $r13 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i13 = $r13.<android.graphics.Rect: int right>;

        $i12 = r0.<android.support.constraint.utils.MockView: int mMargin>;

        $i17 = $i13 + $i12;

        $r14 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $i15 = $r14.<android.graphics.Rect: int bottom>;

        $i14 = r0.<android.support.constraint.utils.MockView: int mMargin>;

        $i16 = $i15 + $i14;

        virtualinvoke $r15.<android.graphics.Rect: void set(int,int,int,int)>($i19, $i18, $i17, $i16);

        $r17 = r0.<android.support.constraint.utils.MockView: android.graphics.Rect mTextBounds>;

        $r16 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintTextBackground>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r17, $r16);

        $r19 = r0.<android.support.constraint.utils.MockView: java.lang.String mText>;

        $r18 = r0.<android.support.constraint.utils.MockView: android.graphics.Paint mPaintText>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r19, f0, f1, $r18);

     label2:
        return;
    }

