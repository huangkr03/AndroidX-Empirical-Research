android.support.test.espresso.intent.matcher.ComponentNameMatchers
    private void <init>()
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers r0;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hamcrest.Matcher hasClassName(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasClassName(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasClassName(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, $r3, r5;
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r4 = new android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        specialinvoke r4.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.intent.matcher.ComponentNameMatchers$1)>(r0, $r2, $r3, null);

        r5 = (org.hamcrest.Matcher) r4;

        return r5;
    }

    public static org.hamcrest.Matcher hasPackageName(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasPackageName(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasPackageName(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, $r3, r5;
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r4 = new android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        specialinvoke r4.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.intent.matcher.ComponentNameMatchers$1)>($r2, r0, $r3, null);

        r5 = (org.hamcrest.Matcher) r4;

        return r5;
    }

    public static org.hamcrest.Matcher hasShortClassName(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasShortClassName(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasShortClassName(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, $r3, r5;
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r4 = new android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        specialinvoke r4.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.intent.matcher.ComponentNameMatchers$1)>($r2, $r3, r0, null);

        r5 = (org.hamcrest.Matcher) r4;

        return r5;
    }

    public static org.hamcrest.Matcher hasMyPackageName()
    {
        android.content.Context $r0;
        java.lang.String $r1;
        org.hamcrest.Matcher $r2, $r3;

        $r0 = staticinvoke <android.support.test.InstrumentationRegistry: android.content.Context getTargetContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasPackageName(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

android.support.test.espresso.intent.matcher.ComponentNameMatchers$1
android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher
<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher classNameMatcher>
<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher packageNameMatcher>
<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher shortClassNameMatcher>
    private void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r0;
        org.hamcrest.Matcher r1, r2, r3, $r5, $r7, $r9;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>(java.lang.Class)>(class "Landroid/content/ComponentName;");

        $r4 = staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (org.hamcrest.Matcher) $r4;

        r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher classNameMatcher> = $r5;

        $r6 = staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (org.hamcrest.Matcher) $r6;

        r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher packageNameMatcher> = $r7;

        $r8 = staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (org.hamcrest.Matcher) $r8;

        r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher shortClassNameMatcher> = $r9;

        return;
    }

    public boolean matchesSafely(android.content.ComponentName)
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r0;
        android.content.ComponentName r1;
        org.hamcrest.Matcher $r2, $r4, $r6;
        java.lang.String $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher classNameMatcher>;

        $r3 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher packageNameMatcher>;

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = interfaceinvoke $r4.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r6 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher shortClassNameMatcher>;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getShortClassName()>();

        $z2 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r7);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3, $r6, $r9;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has component with: class name: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher classNameMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" package name: ");

        $r6 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher packageNameMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" short class name: ");

        $r9 = r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: org.hamcrest.Matcher shortClassNameMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r9);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r0;
        java.lang.Object r1;
        android.content.ComponentName $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.ComponentName) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: boolean matchesSafely(android.content.ComponentName)>($r2);

        return $z0;
    }

    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, android.support.test.espresso.intent.matcher.ComponentNameMatchers$1)
    {
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher r0;
        org.hamcrest.Matcher r1, r2, r3;
        android.support.test.espresso.intent.matcher.ComponentNameMatchers$1 r4;

        r0 := @this: android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: org.hamcrest.Matcher;

        r4 := @parameter3: android.support.test.espresso.intent.matcher.ComponentNameMatchers$1;

        specialinvoke r0.<android.support.test.espresso.intent.matcher.ComponentNameMatchers$ComponentMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r1, r2, r3);

        return;
    }

