android.support.v7.util.DiffUtil
<android.support.v7.util.DiffUtil: java.util.Comparator SNAKE_COMPARATOR>
    private void <init>()
    {
        android.support.v7.util.DiffUtil r0;

        r0 := @this: android.support.v7.util.DiffUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback)
    {
        android.support.v7.util.DiffUtil$Callback r0;
        android.support.v7.util.DiffUtil$DiffResult $r1;

        r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        $r1 = staticinvoke <android.support.v7.util.DiffUtil: android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean)>(r0, 1);

        return $r1;
    }

    public static android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback, boolean)
    {
        android.support.v7.util.DiffUtil$Callback r0;
        boolean z0, $z2, $z4, $z5, $z6, $z9, $z11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        java.util.ArrayList r1, r2, r5, $r10, $r11, $r13;
        int[] r3, r4;
        android.support.v7.util.DiffUtil$Range r6, r8, r9, $r12, $r20;
        android.support.v7.util.DiffUtil$Snake r7;
        java.util.Comparator $r14;
        android.support.v7.util.DiffUtil$DiffResult $r15;
        java.lang.Object $r16, $r17;

        r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<android.support.v7.util.DiffUtil$Callback: int getOldListSize()>();

        i1 = virtualinvoke r0.<android.support.v7.util.DiffUtil$Callback: int getNewListSize()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r1 = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

        $r12 = new android.support.v7.util.DiffUtil$Range;

        specialinvoke $r12.<android.support.v7.util.DiffUtil$Range: void <init>(int,int,int,int)>(0, i0, 0, i1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        $i4 = i0 + i1;

        $i3 = i0 - i1;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        i2 = $i4 + $i5;

        $i6 = i2 * 2;

        r3 = newarray (int)[$i6];

        $i7 = i2 * 2;

        r4 = newarray (int)[$i7];

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r5 = $r13;

     label01:
        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label13;

        $i8 = interfaceinvoke r2.<java.util.List: int size()>();

        $i9 = $i8 - 1;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>($i9);

        r6 = (android.support.v7.util.DiffUtil$Range) $r16;

        $i13 = r6.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        $i12 = r6.<android.support.v7.util.DiffUtil$Range: int oldListEnd>;

        $i11 = r6.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        $i10 = r6.<android.support.v7.util.DiffUtil$Range: int newListEnd>;

        r7 = staticinvoke <android.support.v7.util.DiffUtil: android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int)>(r0, $i13, $i12, $i11, $i10, r3, r4, i2);

        if r7 == null goto label11;

        $i14 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        if $i14 <= 0 goto label02;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r7);

     label02:
        $i16 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i15 = r6.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        $i17 = $i16 + $i15;

        r7.<android.support.v7.util.DiffUtil$Snake: int x> = $i17;

        $i19 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i18 = r6.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        $i20 = $i19 + $i18;

        r7.<android.support.v7.util.DiffUtil$Snake: int y> = $i20;

        $z4 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label03;

        $r20 = new android.support.v7.util.DiffUtil$Range;

        specialinvoke $r20.<android.support.v7.util.DiffUtil$Range: void <init>()>();

        goto label04;

     label03:
        $i21 = interfaceinvoke r5.<java.util.List: int size()>();

        $i22 = $i21 - 1;

        $r17 = interfaceinvoke r5.<java.util.List: java.lang.Object remove(int)>($i22);

        $r20 = (android.support.v7.util.DiffUtil$Range) $r17;

     label04:
        r8 = $r20;

        $i23 = r6.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        r8.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i23;

        $i24 = r6.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        r8.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i24;

        $z5 = r7.<android.support.v7.util.DiffUtil$Snake: boolean reverse>;

        if $z5 == 0 goto label05;

        $i51 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        r8.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i51;

        $i52 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        r8.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i52;

        goto label07;

     label05:
        $z6 = r7.<android.support.v7.util.DiffUtil$Snake: boolean removal>;

        if $z6 == 0 goto label06;

        $i48 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i49 = $i48 - 1;

        r8.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i49;

        $i50 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        r8.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i50;

        goto label07;

     label06:
        $i25 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        r8.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i25;

        $i26 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i27 = $i26 - 1;

        r8.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i27;

     label07:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r8);

        r9 = r6;

        $z11 = r7.<android.support.v7.util.DiffUtil$Snake: boolean reverse>;

        if $z11 == 0 goto label09;

        $z9 = r7.<android.support.v7.util.DiffUtil$Snake: boolean removal>;

        if $z9 == 0 goto label08;

        $i42 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i41 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i43 = $i42 + $i41;

        $i44 = $i43 + 1;

        r9.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i44;

        $i46 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i45 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i47 = $i46 + $i45;

        r9.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i47;

        goto label10;

     label08:
        $i35 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i34 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i36 = $i35 + $i34;

        r9.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i36;

        $i38 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i37 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i39 = $i38 + $i37;

        $i40 = $i39 + 1;

        r9.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i40;

        goto label10;

     label09:
        $i29 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i28 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i30 = $i29 + $i28;

        r9.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i30;

        $i32 = r7.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i31 = r7.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i33 = $i32 + $i31;

        r9.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i33;

     label10:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label12;

     label11:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6);

     label12:
        goto label01;

     label13:
        $r14 = <android.support.v7.util.DiffUtil: java.util.Comparator SNAKE_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r14);

        $r15 = new android.support.v7.util.DiffUtil$DiffResult;

        specialinvoke $r15.<android.support.v7.util.DiffUtil$DiffResult: void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean)>(r0, r1, r3, r4, z0);

        return $r15;
    }

    private static android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback, int, int, int, int, int[], int[], int)
    {
        android.support.v7.util.DiffUtil$Callback r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, i90, i91, i92, $i93, i94, i95, i96, i97, $i98;
        int[] r1, r2;
        boolean z0, $z1, $z2, $z3, z4, z5;
        android.support.v7.util.DiffUtil$Snake r3, $r5, $r6, r7;
        java.lang.IllegalStateException $r4;

        r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: int[];

        r2 := @parameter6: int[];

        i4 := @parameter7: int;

        i5 = i1 - i0;

        i6 = i3 - i2;

        $i9 = i1 - i0;

        if $i9 < 1 goto label01;

        $i10 = i3 - i2;

        if $i10 >= 1 goto label02;

     label01:
        return null;

     label02:
        i7 = i5 - i6;

        $i11 = i5 + i6;

        $i12 = $i11 + 1;

        i8 = $i12 / 2;

        $i13 = i4 - i8;

        $i16 = $i13 - 1;

        $i14 = i4 + i8;

        $i15 = $i14 + 1;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r1, $i16, $i15, 0);

        $i17 = i4 - i8;

        $i18 = $i17 - 1;

        $i22 = $i18 + i7;

        $i19 = i4 + i8;

        $i20 = $i19 + 1;

        $i21 = $i20 + i7;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r2, $i22, $i21, i5);

        $i23 = i7 % 2;

        if $i23 == 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z0 = $z3;

        i89 = 0;

     label05:
        if i89 > i8 goto label22;

        i90 = neg i89;

     label06:
        if i90 > i89 goto label13;

        $i58 = neg i89;

        if i90 == $i58 goto label07;

        if i90 == i89 goto label08;

        $i83 = i4 + i90;

        $i84 = $i83 - 1;

        $i88 = r1[$i84];

        $i85 = i4 + i90;

        $i86 = $i85 + 1;

        $i87 = r1[$i86];

        if $i88 >= $i87 goto label08;

     label07:
        $i59 = i4 + i90;

        $i60 = $i59 + 1;

        i91 = r1[$i60];

        z4 = 0;

        goto label09;

     label08:
        $i80 = i4 + i90;

        $i81 = $i80 - 1;

        $i82 = r1[$i81];

        i91 = $i82 + 1;

        z4 = 1;

     label09:
        i92 = i91 - i90;

     label10:
        if i91 >= i5 goto label11;

        if i92 >= i6 goto label11;

        $i79 = i0 + i91;

        $i78 = i2 + i92;

        $z2 = virtualinvoke r0.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>($i79, $i78);

        if $z2 == 0 goto label11;

        i91 = i91 + 1;

        i92 = i92 + 1;

        goto label10;

     label11:
        $i93 = i4 + i90;

        r1[$i93] = i91;

        if z0 == 0 goto label12;

        $i61 = i7 - i89;

        $i62 = $i61 + 1;

        if i90 < $i62 goto label12;

        $i63 = i7 + i89;

        $i64 = $i63 - 1;

        if i90 > $i64 goto label12;

        $i65 = i4 + i90;

        $i68 = r1[$i65];

        $i66 = i4 + i90;

        $i67 = r2[$i66];

        if $i68 < $i67 goto label12;

        $r6 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke $r6.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        r7 = $r6;

        $i69 = i4 + i90;

        $i70 = r2[$i69];

        r7.<android.support.v7.util.DiffUtil$Snake: int x> = $i70;

        $i71 = r7.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i72 = $i71 - i90;

        r7.<android.support.v7.util.DiffUtil$Snake: int y> = $i72;

        $i73 = i4 + i90;

        $i76 = r1[$i73];

        $i74 = i4 + i90;

        $i75 = r2[$i74];

        $i77 = $i76 - $i75;

        r7.<android.support.v7.util.DiffUtil$Snake: int size> = $i77;

        r7.<android.support.v7.util.DiffUtil$Snake: boolean removal> = z4;

        r7.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 0;

        return r7;

     label12:
        i90 = i90 + 2;

        goto label06;

     label13:
        i94 = neg i89;

     label14:
        if i94 > i89 goto label21;

        i95 = i94 + i7;

        $i24 = i89 + i7;

        if i95 == $i24 goto label15;

        $i47 = neg i89;

        $i48 = $i47 + i7;

        if i95 == $i48 goto label16;

        $i52 = i4 + i95;

        $i53 = $i52 - 1;

        $i57 = r2[$i53];

        $i54 = i4 + i95;

        $i55 = $i54 + 1;

        $i56 = r2[$i55];

        if $i57 >= $i56 goto label16;

     label15:
        $i25 = i4 + i95;

        $i26 = $i25 - 1;

        i96 = r2[$i26];

        z5 = 0;

        goto label17;

     label16:
        $i49 = i4 + i95;

        $i50 = $i49 + 1;

        $i51 = r2[$i50];

        i96 = $i51 - 1;

        z5 = 1;

     label17:
        i97 = i96 - i95;

     label18:
        if i96 <= 0 goto label19;

        if i97 <= 0 goto label19;

        $i43 = i0 + i96;

        $i46 = $i43 - 1;

        $i44 = i2 + i97;

        $i45 = $i44 - 1;

        $z1 = virtualinvoke r0.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>($i46, $i45);

        if $z1 == 0 goto label19;

        i96 = i96 + -1;

        i97 = i97 + -1;

        goto label18;

     label19:
        $i98 = i4 + i95;

        r2[$i98] = i96;

        if z0 != 0 goto label20;

        $i28 = i94 + i7;

        $i27 = neg i89;

        if $i28 < $i27 goto label20;

        $i29 = i94 + i7;

        if $i29 > i89 goto label20;

        $i30 = i4 + i95;

        $i33 = r1[$i30];

        $i31 = i4 + i95;

        $i32 = r2[$i31];

        if $i33 < $i32 goto label20;

        $r5 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke $r5.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        r3 = $r5;

        $i34 = i4 + i95;

        $i35 = r2[$i34];

        r3.<android.support.v7.util.DiffUtil$Snake: int x> = $i35;

        $i36 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i37 = $i36 - i95;

        r3.<android.support.v7.util.DiffUtil$Snake: int y> = $i37;

        $i38 = i4 + i95;

        $i41 = r1[$i38];

        $i39 = i4 + i95;

        $i40 = r2[$i39];

        $i42 = $i41 - $i40;

        r3.<android.support.v7.util.DiffUtil$Snake: int size> = $i42;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean removal> = z5;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 1;

        return r3;

     label20:
        i94 = i94 + 2;

        goto label14;

     label21:
        i89 = i89 + 1;

        goto label05;

     label22:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DiffUtil hit an unexpected case while trying to calculate the optimal path. Please make sure your data is not changing during the diff calculation.");

        throw $r4;
    }

    static void <clinit>()
    {
        android.support.v7.util.DiffUtil$1 $r0;

        $r0 = new android.support.v7.util.DiffUtil$1;

        specialinvoke $r0.<android.support.v7.util.DiffUtil$1: void <init>()>();

        <android.support.v7.util.DiffUtil: java.util.Comparator SNAKE_COMPARATOR> = $r0;

        return;
    }

android.support.v7.util.DiffUtil$1
    void <init>()
    {
        android.support.v7.util.DiffUtil$1 r0;

        r0 := @this: android.support.v7.util.DiffUtil$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.support.v7.util.DiffUtil$Snake, android.support.v7.util.DiffUtil$Snake)
    {
        android.support.v7.util.DiffUtil$1 r0;
        android.support.v7.util.DiffUtil$Snake r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.support.v7.util.DiffUtil$1;

        r1 := @parameter0: android.support.v7.util.DiffUtil$Snake;

        r2 := @parameter1: android.support.v7.util.DiffUtil$Snake;

        $i2 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i1 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        i0 = $i2 - $i1;

        if i0 != 0 goto label1;

        $i4 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i3 = r2.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i5 = $i4 - $i3;

        goto label2;

     label1:
        $i5 = i0;

     label2:
        return $i5;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.support.v7.util.DiffUtil$1 r0;
        java.lang.Object r1, r2;
        android.support.v7.util.DiffUtil$Snake $r3, $r4;
        int $i0;

        r0 := @this: android.support.v7.util.DiffUtil$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v7.util.DiffUtil$Snake) r1;

        $r3 = (android.support.v7.util.DiffUtil$Snake) r2;

        $i0 = virtualinvoke r0.<android.support.v7.util.DiffUtil$1: int compare(android.support.v7.util.DiffUtil$Snake,android.support.v7.util.DiffUtil$Snake)>($r4, $r3);

        return $i0;
    }

android.support.v7.util.DiffUtil$Callback
    public void <init>()
    {
        android.support.v7.util.DiffUtil$Callback r0;

        r0 := @this: android.support.v7.util.DiffUtil$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.v7.util.DiffUtil$Callback: int getOldListSize()>
<android.support.v7.util.DiffUtil$Callback: int getNewListSize()>
<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>
<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>
    public java.lang.Object getChangePayload(int, int)
    {
        android.support.v7.util.DiffUtil$Callback r0;
        int i0, i1;

        r0 := @this: android.support.v7.util.DiffUtil$Callback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

android.support.v7.util.DiffUtil$DiffResult
<android.support.v7.util.DiffUtil$DiffResult: int NO_POSITION>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_NOT_CHANGED>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_CHANGED>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_MOVED_CHANGED>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_MOVED_NOT_CHANGED>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_IGNORE>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_OFFSET>
<android.support.v7.util.DiffUtil$DiffResult: int FLAG_MASK>
<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>
<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>
<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>
<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>
<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize>
<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize>
<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>
    void <init>(android.support.v7.util.DiffUtil$Callback, java.util.List, int[], int[], boolean)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.util.DiffUtil$Callback r1;
        java.util.List r2;
        int[] r3, r4, $r5, $r6;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes> = r2;

        r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses> = r3;

        r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses> = r4;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r5, 0);

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r6, 0);

        r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback> = r1;

        $i0 = virtualinvoke r1.<android.support.v7.util.DiffUtil$Callback: int getOldListSize()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize> = $i0;

        $i1 = virtualinvoke r1.<android.support.v7.util.DiffUtil$Callback: int getNewListSize()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize> = $i1;

        r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves> = z0;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void addRootSnake()>();

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findMatchingItems()>();

        return;
    }

    private void addRootSnake()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.util.DiffUtil$Snake r1, r2, $r6, $r7;
        java.util.List $r3, $r4, $r8;
        boolean $z0;
        java.lang.Object $r5;
        int $i0, $i1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.support.v7.util.DiffUtil$Snake) $r5;

     label2:
        r1 = $r6;

        if r1 == null goto label3;

        $i0 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        if $i0 != 0 goto label3;

        $i1 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        if $i1 == 0 goto label4;

     label3:
        $r7 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke $r7.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        r2 = $r7;

        r2.<android.support.v7.util.DiffUtil$Snake: int x> = 0;

        r2.<android.support.v7.util.DiffUtil$Snake: int y> = 0;

        r2.<android.support.v7.util.DiffUtil$Snake: boolean removal> = 0;

        r2.<android.support.v7.util.DiffUtil$Snake: int size> = 0;

        r2.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 0;

        $r8 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, r2);

     label4:
        return;
    }

    private void findMatchingItems()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.util.DiffUtil$Snake r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, $i20;
        boolean z0, $z1;
        byte b4, $b21;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        android.support.v7.util.DiffUtil$Callback $r5;
        int[] $r6, $r7;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i16 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize>;

        i17 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize>;

        $r2 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $i5 = interfaceinvoke $r2.<java.util.List: int size()>();

        i18 = $i5 - 1;

     label1:
        if i18 < 0 goto label9;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i18);

        r1 = (android.support.v7.util.DiffUtil$Snake) $r4;

        $i7 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i6 = r1.<android.support.v7.util.DiffUtil$Snake: int size>;

        i0 = $i7 + $i6;

        $i9 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i8 = r1.<android.support.v7.util.DiffUtil$Snake: int size>;

        i1 = $i9 + $i8;

        $z1 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z1 == 0 goto label4;

     label2:
        if i16 <= i0 goto label3;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findAddition(int,int,int)>(i16, i17, i18);

        i16 = i16 + -1;

        goto label2;

     label3:
        if i17 <= i1 goto label4;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findRemoval(int,int,int)>(i16, i17, i18);

        i17 = i17 + -1;

        goto label3;

     label4:
        i19 = 0;

     label5:
        $i20 = r1.<android.support.v7.util.DiffUtil$Snake: int size>;

        if i19 >= $i20 goto label8;

        $i10 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        i2 = $i10 + i19;

        $i11 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        i3 = $i11 + i19;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        z0 = virtualinvoke $r5.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i2, i3);

        if z0 == 0 goto label6;

        $b21 = 1;

        goto label7;

     label6:
        $b21 = 2;

     label7:
        b4 = $b21;

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i12 = i3 << 5;

        $i13 = $i12 | b4;

        $r6[i2] = $i13;

        $r7 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i14 = i2 << 5;

        $i15 = $i14 | b4;

        $r7[i3] = $i15;

        i19 = i19 + 1;

        goto label5;

     label8:
        i16 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        i17 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        i18 = i18 + -1;

        goto label1;

     label9:
        return;
    }

    private void findAddition(int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i3 = i0 - 1;

        $i4 = $r1[$i3];

        if $i4 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: boolean findMatchingItem(int,int,int,boolean)>(i0, i1, i2, 0);

        return;
    }

    private void findRemoval(int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i3 = i1 - 1;

        $i4 = $r1[$i3];

        if $i4 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: boolean findMatchingItem(int,int,int,boolean)>(i0, i1, i2, 1);

        return;
    }

    public int convertOldPositionToNew(int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        int[] $r6, $r9, $r10;
        java.lang.String $r8;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r9 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i3 = lengthof $r9;

        if i0 < $i3 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds - passed position = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", old list size = ");

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i2 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        $r10 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i1 = $r10[i0];

        $i4 = i1 & 31;

        if $i4 != 0 goto label3;

        return -1;

     label3:
        $i5 = i1 >> 5;

        return $i5;
    }

    public int convertNewPositionToOld(int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        int[] $r6, $r9, $r10;
        java.lang.String $r8;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r9 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i3 = lengthof $r9;

        if i0 < $i3 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds - passed position = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new list size = ");

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i2 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        $r10 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i1 = $r10[i0];

        $i4 = i1 & 31;

        if $i4 != 0 goto label3;

        return -1;

     label3:
        $i5 = i1 >> 5;

        return $i5;
    }

    private boolean findMatchingItem(int, int, int, boolean)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i26;
        boolean z0, $z1, $z2, z3, z4;
        android.support.v7.util.DiffUtil$Snake r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.support.v7.util.DiffUtil$Callback $r4, $r5, $r8, $r9;
        int[] $r6, $r7, $r10, $r11;
        byte $b24, b25, $b27, b28;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label01;

        i19 = i1 - 1;

        i20 = i0;

        i21 = i1 - 1;

        goto label02;

     label01:
        i19 = i0 - 1;

        i20 = i0 - 1;

        i21 = i1;

     label02:
        i22 = i2;

     label03:
        if i22 < 0 goto label15;

        $r2 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i22);

        r1 = (android.support.v7.util.DiffUtil$Snake) $r3;

        $i6 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i5 = r1.<android.support.v7.util.DiffUtil$Snake: int size>;

        i3 = $i6 + $i5;

        $i8 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i7 = r1.<android.support.v7.util.DiffUtil$Snake: int size>;

        i4 = $i8 + $i7;

        if z0 == 0 goto label09;

        i23 = i20 - 1;

     label04:
        if i23 < i3 goto label08;

        $r8 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z2 = virtualinvoke $r8.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i23, i19);

        if $z2 == 0 goto label07;

        $r9 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        z3 = virtualinvoke $r9.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i23, i19);

        if z3 == 0 goto label05;

        $b24 = 8;

        goto label06;

     label05:
        $b24 = 4;

     label06:
        b25 = $b24;

        $r10 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i15 = i23 << 5;

        $i16 = $i15 | 16;

        $r10[i19] = $i16;

        $r11 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i17 = i19 << 5;

        $i18 = $i17 | b25;

        $r11[i23] = $i18;

        return 1;

     label07:
        i23 = i23 + -1;

        goto label04;

     label08:
        goto label14;

     label09:
        i26 = i21 - 1;

     label10:
        if i26 < i4 goto label14;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z1 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i19, i26);

        if $z1 == 0 goto label13;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        z4 = virtualinvoke $r5.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i19, i26);

        if z4 == 0 goto label11;

        $b27 = 8;

        goto label12;

     label11:
        $b27 = 4;

     label12:
        b28 = $b27;

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i11 = i0 - 1;

        $i9 = i26 << 5;

        $i10 = $i9 | 16;

        $r6[$i11] = $i10;

        $r7 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i12 = i0 - 1;

        $i13 = $i12 << 5;

        $i14 = $i13 | b28;

        $r7[i26] = $i14;

        return 1;

     label13:
        i26 = i26 + -1;

        goto label10;

     label14:
        i20 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        i21 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        i22 = i22 + -1;

        goto label03;

     label15:
        return 0;
    }

    public void dispatchUpdatesTo(android.support.v7.widget.RecyclerView$Adapter)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.widget.RecyclerView$Adapter r1;
        android.support.v7.util.AdapterListUpdateCallback $r2;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        $r2 = new android.support.v7.util.AdapterListUpdateCallback;

        specialinvoke $r2.<android.support.v7.util.AdapterListUpdateCallback: void <init>(android.support.v7.widget.RecyclerView$Adapter)>(r1);

        virtualinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback)>($r2);

        return;
    }

    public void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.ArrayList r1, $r4;
        android.support.v7.util.DiffUtil$Snake r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        boolean $z0;
        android.support.v7.util.BatchingListUpdateCallback $r3, r12, r13;
        java.util.List $r5, $r6;
        java.lang.Object $r7, $r10;
        int[] $r8;
        android.support.v7.util.DiffUtil$Callback $r9;
        android.support.v7.util.ListUpdateCallback r11;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r11 := @parameter0: android.support.v7.util.ListUpdateCallback;

        $z0 = r11 instanceof android.support.v7.util.BatchingListUpdateCallback;

        if $z0 == 0 goto label1;

        r12 = (android.support.v7.util.BatchingListUpdateCallback) r11;

        goto label2;

     label1:
        $r3 = new android.support.v7.util.BatchingListUpdateCallback;

        specialinvoke $r3.<android.support.v7.util.BatchingListUpdateCallback: void <init>(android.support.v7.util.ListUpdateCallback)>(r11);

        r12 = $r3;

        r13 = r12;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        i18 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize>;

        i19 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize>;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();

        i20 = $i3 - 1;

     label3:
        if i20 < 0 goto label9;

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i20);

        r2 = (android.support.v7.util.DiffUtil$Snake) $r7;

        i0 = r2.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i4 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        i1 = $i4 + i0;

        $i5 = r2.<android.support.v7.util.DiffUtil$Snake: int y>;

        i2 = $i5 + i0;

        if i1 >= i18 goto label4;

        $i17 = i18 - i1;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)>(r1, r12, i1, $i17, i1);

     label4:
        if i2 >= i19 goto label5;

        $i16 = i19 - i2;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)>(r1, r12, i1, $i16, i2);

     label5:
        i21 = i0 - 1;

     label6:
        if i21 < 0 goto label8;

        $r8 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i6 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i7 = $i6 + i21;

        $i8 = $r8[$i7];

        $i9 = $i8 & 31;

        if $i9 != 2 goto label7;

        $i10 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i15 = $i10 + i21;

        $r9 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $i11 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i14 = $i11 + i21;

        $i12 = r2.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i13 = $i12 + i21;

        $r10 = virtualinvoke $r9.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>($i14, $i13);

        virtualinvoke r12.<android.support.v7.util.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)>($i15, 1, $r10);

     label7:
        i21 = i21 + -1;

        goto label6;

     label8:
        i18 = r2.<android.support.v7.util.DiffUtil$Snake: int x>;

        i19 = r2.<android.support.v7.util.DiffUtil$Snake: int y>;

        i20 = i20 + -1;

        goto label3;

     label9:
        virtualinvoke r12.<android.support.v7.util.BatchingListUpdateCallback: void dispatchLastEvent()>();

        return;
    }

    private static android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List, int, boolean)
    {
        java.util.List r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean z0, $z1;
        android.support.v7.util.DiffUtil$PostponedUpdate r1, $r5;
        java.lang.Object $r2, $r4;
        byte $b8;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i6 = $i1 - 1;

     label1:
        if i6 < 0 goto label7;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        r1 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r2;

        $i2 = r1.<android.support.v7.util.DiffUtil$PostponedUpdate: int posInOwnerList>;

        if $i2 != i0 goto label6;

        $z1 = r1.<android.support.v7.util.DiffUtil$PostponedUpdate: boolean removal>;

        if $z1 != z0 goto label6;

        interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>(i6);

        i7 = i6;

     label2:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i7 >= $i3 goto label5;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i7);

        $r5 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r4;

        $i4 = $r5.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        if z0 == 0 goto label3;

        $b8 = 1;

        goto label4;

     label3:
        $b8 = -1;

     label4:
        $i5 = $i4 + $b8;

        $r5.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = $i5;

        i7 = i7 + 1;

        goto label2;

     label5:
        return r1;

     label6:
        i6 = i6 + -1;

        goto label1;

     label7:
        return null;
    }

    private void dispatchAdditions(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List r1;
        android.support.v7.util.ListUpdateCallback r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, i16;
        boolean $z0, $z2;
        int[] $r3, $r5;
        android.support.v7.util.DiffUtil$PostponedUpdate $r4, r18, r19;
        android.support.v7.util.DiffUtil$Callback $r6;
        java.lang.Object $r7, $r8;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15;
        long $l14;
        java.lang.String $r14, $r16;
        java.util.Iterator r17;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.v7.util.ListUpdateCallback;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z0 != 0 goto label01;

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onInserted(int,int)>(i0, i1);

        return;

     label01:
        i15 = i1 - 1;

     label02:
        if i15 < 0 goto label10;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i4 = i2 + i15;

        $i5 = $r3[$i4];

        i3 = $i5 & 31;

        lookupswitch(i3)
        {
            case 0: goto label03;
            case 4: goto label06;
            case 8: goto label06;
            case 16: goto label07;
            default: goto label08;
        };

     label03:
        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onInserted(int,int)>(i0, 1);

        r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r8;

        $i11 = r18.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        $i12 = $i11 + 1;

        r18.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = $i12;

        goto label04;

     label05:
        goto label09;

     label06:
        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i7 = i2 + i15;

        $i8 = $r5[$i7];

        i16 = $i8 >> 5;

        r19 = staticinvoke <android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean)>(r1, i16, 1);

        $i9 = r19.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onMoved(int,int)>($i9, i0);

        if i3 != 4 goto label09;

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $i10 = i2 + i15;

        $r7 = virtualinvoke $r6.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i16, $i10);

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onChanged(int,int,java.lang.Object)>(i0, 1, $r7);

        goto label09;

     label07:
        $r4 = new android.support.v7.util.DiffUtil$PostponedUpdate;

        $i6 = i2 + i15;

        specialinvoke $r4.<android.support.v7.util.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>($i6, i0, 0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label09;

     label08:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flag for pos ");

        $i13 = i2 + i15;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l14 = (long) i3;

        $r14 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label09:
        i15 = i15 + -1;

        goto label02;

     label10:
        return;
    }

    private void dispatchRemovals(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List r1;
        android.support.v7.util.ListUpdateCallback r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i21, i22;
        boolean $z0, $z2;
        int[] $r3, $r5;
        android.support.v7.util.DiffUtil$PostponedUpdate $r4, r18, r19;
        android.support.v7.util.DiffUtil$Callback $r6;
        java.lang.Object $r7, $r8;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15;
        long $l20;
        java.lang.String $r14, $r16;
        java.util.Iterator r17;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.v7.util.ListUpdateCallback;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z0 != 0 goto label01;

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onRemoved(int,int)>(i0, i1);

        return;

     label01:
        i21 = i1 - 1;

     label02:
        if i21 < 0 goto label10;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i4 = i2 + i21;

        $i5 = $r3[$i4];

        i3 = $i5 & 31;

        lookupswitch(i3)
        {
            case 0: goto label03;
            case 4: goto label06;
            case 8: goto label06;
            case 16: goto label07;
            default: goto label08;
        };

     label03:
        $i16 = i0 + i21;

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onRemoved(int,int)>($i16, 1);

        r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r8;

        $i17 = r18.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        $i18 = $i17 - 1;

        r18.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = $i18;

        goto label04;

     label05:
        goto label09;

     label06:
        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i8 = i2 + i21;

        $i9 = $r5[$i8];

        i22 = $i9 >> 5;

        r19 = staticinvoke <android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean)>(r1, i22, 0);

        $i12 = i0 + i21;

        $i10 = r19.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        $i11 = $i10 - 1;

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onMoved(int,int)>($i12, $i11);

        if i3 != 4 goto label09;

        $i13 = r19.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        $i15 = $i13 - 1;

        $r6 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $i14 = i2 + i21;

        $r7 = virtualinvoke $r6.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>($i14, i22);

        interfaceinvoke r2.<android.support.v7.util.ListUpdateCallback: void onChanged(int,int,java.lang.Object)>($i15, 1, $r7);

        goto label09;

     label07:
        $r4 = new android.support.v7.util.DiffUtil$PostponedUpdate;

        $i7 = i2 + i21;

        $i6 = i0 + i21;

        specialinvoke $r4.<android.support.v7.util.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>($i7, $i6, 1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label09;

     label08:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flag for pos ");

        $i19 = i2 + i21;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l20 = (long) i3;

        $r14 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l20);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label09:
        i21 = i21 + -1;

        goto label02;

     label10:
        return;
    }

    java.util.List getSnakes()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List $r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        return $r1;
    }

android.support.v7.util.DiffUtil$ItemCallback
    public void <init>()
    {
        android.support.v7.util.DiffUtil$ItemCallback r0;

        r0 := @this: android.support.v7.util.DiffUtil$ItemCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.v7.util.DiffUtil$ItemCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>
<android.support.v7.util.DiffUtil$ItemCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)>
    public java.lang.Object getChangePayload(java.lang.Object, java.lang.Object)
    {
        android.support.v7.util.DiffUtil$ItemCallback r0;
        java.lang.Object r1, r2;

        r0 := @this: android.support.v7.util.DiffUtil$ItemCallback;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return null;
    }

android.support.v7.util.DiffUtil$PostponedUpdate
<android.support.v7.util.DiffUtil$PostponedUpdate: int posInOwnerList>
<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>
<android.support.v7.util.DiffUtil$PostponedUpdate: boolean removal>
    public void <init>(int, int, boolean)
    {
        android.support.v7.util.DiffUtil$PostponedUpdate r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.support.v7.util.DiffUtil$PostponedUpdate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.util.DiffUtil$PostponedUpdate: int posInOwnerList> = i0;

        r0.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = i1;

        r0.<android.support.v7.util.DiffUtil$PostponedUpdate: boolean removal> = z0;

        return;
    }

android.support.v7.util.DiffUtil$Range
<android.support.v7.util.DiffUtil$Range: int oldListStart>
<android.support.v7.util.DiffUtil$Range: int oldListEnd>
<android.support.v7.util.DiffUtil$Range: int newListStart>
<android.support.v7.util.DiffUtil$Range: int newListEnd>
    public void <init>()
    {
        android.support.v7.util.DiffUtil$Range r0;

        r0 := @this: android.support.v7.util.DiffUtil$Range;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, int, int, int)
    {
        android.support.v7.util.DiffUtil$Range r0;
        int i0, i1, i2, i3;

        r0 := @this: android.support.v7.util.DiffUtil$Range;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.util.DiffUtil$Range: int oldListStart> = i0;

        r0.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = i1;

        r0.<android.support.v7.util.DiffUtil$Range: int newListStart> = i2;

        r0.<android.support.v7.util.DiffUtil$Range: int newListEnd> = i3;

        return;
    }

android.support.v7.util.DiffUtil$Snake
<android.support.v7.util.DiffUtil$Snake: int x>
<android.support.v7.util.DiffUtil$Snake: int y>
<android.support.v7.util.DiffUtil$Snake: int size>
<android.support.v7.util.DiffUtil$Snake: boolean removal>
<android.support.v7.util.DiffUtil$Snake: boolean reverse>
    void <init>()
    {
        android.support.v7.util.DiffUtil$Snake r0;

        r0 := @this: android.support.v7.util.DiffUtil$Snake;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

