android.support.design.internal.FlexboxHelper
<android.support.design.internal.FlexboxHelper: int INITIAL_CAPACITY>
<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>
<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>
    void <init>(android.support.design.internal.FlexContainer)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexContainer r1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer> = r1;

        return;
    }

    int[] createReorderedIndices(android.view.View, int, android.view.ViewGroup$LayoutParams, android.util.SparseIntArray)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7;
        android.view.ViewGroup$LayoutParams r2;
        android.util.SparseIntArray r3;
        java.util.List r4;
        android.support.design.internal.FlexboxHelper$Order r5, $r7, $r10;
        android.support.design.internal.FlexContainer $r6, $r8;
        java.lang.Object $r9;
        boolean $z1;
        android.support.design.internal.FlexItem $r11;
        int[] $r12;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        r3 := @parameter3: android.util.SparseIntArray;

        $r6 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i1 = interfaceinvoke $r6.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        r4 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: java.util.List createOrders(int)>(i1);

        $r7 = new android.support.design.internal.FlexboxHelper$Order;

        specialinvoke $r7.<android.support.design.internal.FlexboxHelper$Order: void <init>(android.support.design.internal.FlexboxHelper$1)>(null);

        r5 = $r7;

        if r1 == null goto label1;

        $z1 = r2 instanceof android.support.design.internal.FlexItem;

        if $z1 == 0 goto label1;

        $r11 = (android.support.design.internal.FlexItem) r2;

        $i5 = interfaceinvoke $r11.<android.support.design.internal.FlexItem: int getOrder()>();

        r5.<android.support.design.internal.FlexboxHelper$Order: int order> = $i5;

        goto label2;

     label1:
        r5.<android.support.design.internal.FlexboxHelper$Order: int order> = 1;

     label2:
        if i0 == -1 goto label3;

        if i0 != i1 goto label4;

     label3:
        r5.<android.support.design.internal.FlexboxHelper$Order: int index> = i1;

        goto label8;

     label4:
        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i2 = interfaceinvoke $r8.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        if i0 >= $i2 goto label7;

        r5.<android.support.design.internal.FlexboxHelper$Order: int index> = i0;

        i6 = i0;

     label5:
        if i6 >= i1 goto label6;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i6);

        $r10 = (android.support.design.internal.FlexboxHelper$Order) $r9;

        $i3 = $r10.<android.support.design.internal.FlexboxHelper$Order: int index>;

        $i4 = $i3 + 1;

        $r10.<android.support.design.internal.FlexboxHelper$Order: int index> = $i4;

        i6 = i6 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        r5.<android.support.design.internal.FlexboxHelper$Order: int index> = i1;

     label8:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        $i7 = i1 + 1;

        $r12 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int[] sortOrdersIntoReorderedIndices(int,java.util.List,android.util.SparseIntArray)>($i7, r4, r3);

        return $r12;
    }

    int[] createReorderedIndices(android.util.SparseIntArray)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.util.SparseIntArray r1;
        int i0;
        java.util.List r2;
        android.support.design.internal.FlexContainer $r3;
        int[] $r4;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.util.SparseIntArray;

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i0 = interfaceinvoke $r3.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        r2 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: java.util.List createOrders(int)>(i0);

        $r4 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int[] sortOrdersIntoReorderedIndices(int,java.util.List,android.util.SparseIntArray)>(i0, r2, r1);

        return $r4;
    }

    private java.util.List createOrders(int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, $i1, i2;
        java.util.ArrayList r1, $r5;
        android.view.View r2;
        android.support.design.internal.FlexItem r3;
        android.support.design.internal.FlexboxHelper$Order r4, $r8;
        android.support.design.internal.FlexContainer $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r1 = $r5;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r6 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r2 = interfaceinvoke $r6.<android.support.design.internal.FlexContainer: android.view.View getFlexItemAt(int)>(i2);

        $r7 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.internal.FlexItem) $r7;

        $r8 = new android.support.design.internal.FlexboxHelper$Order;

        specialinvoke $r8.<android.support.design.internal.FlexboxHelper$Order: void <init>(android.support.design.internal.FlexboxHelper$1)>(null);

        r4 = $r8;

        $i1 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getOrder()>();

        r4.<android.support.design.internal.FlexboxHelper$Order: int order> = $i1;

        r4.<android.support.design.internal.FlexboxHelper$Order: int index> = i2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    boolean isOrderChangedFromLastMeasurement(android.util.SparseIntArray)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.util.SparseIntArray r1;
        int i0, $i1, $i2, $i3, i4;
        android.view.View r2;
        android.support.design.internal.FlexItem r3;
        android.support.design.internal.FlexContainer $r4, $r5;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.util.SparseIntArray;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i0 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        $i1 = virtualinvoke r1.<android.util.SparseIntArray: int size()>();

        if $i1 == i0 goto label1;

        return 1;

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label5;

        $r5 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r2 = interfaceinvoke $r5.<android.support.design.internal.FlexContainer: android.view.View getFlexItemAt(int)>(i4);

        if r2 != null goto label3;

        goto label4;

     label3:
        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.internal.FlexItem) $r6;

        $i2 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getOrder()>();

        $i3 = virtualinvoke r1.<android.util.SparseIntArray: int get(int)>(i4);

        if $i2 == $i3 goto label4;

        return 1;

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        return 0;
    }

    private int[] sortOrdersIntoReorderedIndices(int, java.util.List, android.util.SparseIntArray)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, $i1, $i2, $i3, i4;
        java.util.List r1;
        android.util.SparseIntArray r2;
        int[] r3;
        java.util.Iterator r4;
        android.support.design.internal.FlexboxHelper$Order r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.util.SparseIntArray;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r1);

        virtualinvoke r2.<android.util.SparseIntArray: void clear()>();

        r3 = newarray (int)[i0];

        i4 = 0;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.support.design.internal.FlexboxHelper$Order) $r6;

        $i1 = r5.<android.support.design.internal.FlexboxHelper$Order: int index>;

        r3[i4] = $i1;

        $i3 = r5.<android.support.design.internal.FlexboxHelper$Order: int index>;

        $i2 = r5.<android.support.design.internal.FlexboxHelper$Order: int order>;

        virtualinvoke r2.<android.util.SparseIntArray: void append(int,int)>($i3, $i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return r3;
    }

    void calculateHorizontalFlexLines(android.support.design.internal.FlexboxHelper$FlexLinesResult, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexboxHelper$FlexLinesResult r1;
        int i0, i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexboxHelper$FlexLinesResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void calculateFlexLines(android.support.design.internal.FlexboxHelper$FlexLinesResult,int,int,int,int,int,java.util.List)>(r1, i0, i1, 2147483647, 0, -1, null);

        return;
    }

    private void calculateFlexLines(android.support.design.internal.FlexboxHelper$FlexLinesResult, int, int, int, int, int, java.util.List)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexboxHelper$FlexLinesResult r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, $i109, i110, i111, $i112;
        java.util.List r2, $r10, r40, r41, r42, r43, r44, r45, r46, r47;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.view.View r3;
        android.support.design.internal.FlexItem r4;
        android.support.design.internal.FlexContainer $r5, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r22, $r23, $r24, $r25, $r26, $r27, $r31, $r32;
        android.view.ViewGroup$LayoutParams $r9;
        java.lang.Integer $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b14;
        java.lang.Object $r17, $r28, r34;
        android.support.design.internal.FlexLine $r18, $r29, r35, r38, r39;
        java.util.ArrayList r37;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexboxHelper$FlexLinesResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.util.List;

        $r5 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        z0 = interfaceinvoke $r5.<android.support.design.internal.FlexContainer: boolean isMainAxisDirectionHorizontal()>();

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i6 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i100 = 0;

        if r2 != null goto label01;

        r37 = new java.util.ArrayList;

        specialinvoke r37.<java.util.ArrayList: void <init>()>();

        r34 = r37;

        goto label02;

     label01:
        r34 = r2;

     label02:
        r40 = (java.util.List) r34;

        r1.<android.support.design.internal.FlexboxHelper$FlexLinesResult: java.util.List flexLines> = r40;

        if i4 != -1 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z8 = $z7;

        i7 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getPaddingStartMain(boolean)>(z0);

        i8 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getPaddingEndMain(boolean)>(z0);

        i9 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getPaddingStartCross(boolean)>(z0);

        i10 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getPaddingEndCross(boolean)>(z0);

        i101 = -2147483648;

        i102 = 0;

        i103 = 0;

        r38 = new android.support.design.internal.FlexLine;

        specialinvoke r38.<android.support.design.internal.FlexLine: void <init>()>();

        r35 = r38;

        r35.<android.support.design.internal.FlexLine: int firstIndex> = i3;

        $i12 = i7 + i8;

        r35.<android.support.design.internal.FlexLine: int mainSize> = $i12;

        $r7 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i11 = interfaceinvoke $r7.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        i104 = i3;

     label05:
        if i104 >= i11 goto label22;

        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r3 = interfaceinvoke $r8.<android.support.design.internal.FlexContainer: android.view.View getReorderedFlexItemAt(int)>(i104);

        if r3 != null goto label06;

        $z6 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: boolean isLastFlexItem(int,int,android.support.design.internal.FlexLine)>(i104, i11, r35);

        if $z6 == 0 goto label21;

        r41 = (java.util.List) r34;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void addFlexLine(java.util.List,android.support.design.internal.FlexLine,int,int)>(r41, r35, i104, i102);

        goto label21;

     label06:
        $i13 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label07;

        $i96 = r35.<android.support.design.internal.FlexLine: int goneItemCount>;

        $i97 = $i96 + 1;

        r35.<android.support.design.internal.FlexLine: int goneItemCount> = $i97;

        $i98 = r35.<android.support.design.internal.FlexLine: int itemCount>;

        $i99 = $i98 + 1;

        r35.<android.support.design.internal.FlexLine: int itemCount> = $i99;

        $z5 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: boolean isLastFlexItem(int,int,android.support.design.internal.FlexLine)>(i104, i11, r35);

        if $z5 == 0 goto label21;

        r42 = (java.util.List) r34;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void addFlexLine(java.util.List,android.support.design.internal.FlexLine,int,int)>(r42, r35, i104, i102);

        goto label21;

     label07:
        $r9 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.internal.FlexItem) $r9;

        $r10 = r35.<android.support.design.internal.FlexLine: java.util.List indicesAlignSelfStretch>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i104);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        i105 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemSizeMain(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $f0 = interfaceinvoke r4.<android.support.design.internal.FlexItem: float getFlexBasisPercent()>();

        $b14 = $f0 cmpl -1.0F;

        if $b14 == 0 goto label08;

        if i5 != 1073741824 goto label08;

        $f7 = (float) i6;

        $f8 = interfaceinvoke r4.<android.support.design.internal.FlexItem: float getFlexBasisPercent()>();

        $f9 = $f7 * $f8;

        i105 = staticinvoke <java.lang.Math: int round(float)>($f9);

     label08:
        if z0 == 0 goto label09;

        $r31 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i84 = i7 + i8;

        $i85 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartMain(android.support.design.internal.FlexItem,boolean)>(r4, 1);

        $i86 = $i84 + $i85;

        $i87 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndMain(android.support.design.internal.FlexItem,boolean)>(r4, 1);

        $i88 = $i86 + $i87;

        i106 = interfaceinvoke $r31.<android.support.design.internal.FlexContainer: int getChildWidthMeasureSpec(int,int,int)>(i0, $i88, i105);

        $r32 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i89 = i9 + i10;

        $i90 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartCross(android.support.design.internal.FlexItem,boolean)>(r4, 1);

        $i91 = $i89 + $i90;

        $i92 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndCross(android.support.design.internal.FlexItem,boolean)>(r4, 1);

        $i93 = $i91 + $i92;

        $i94 = $i93 + i102;

        $i95 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemSizeCross(android.support.design.internal.FlexItem,boolean)>(r4, 1);

        i107 = interfaceinvoke $r32.<android.support.design.internal.FlexContainer: int getChildHeightMeasureSpec(int,int,int)>(i1, $i94, $i95);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i106, i107);

        goto label10;

     label09:
        $r12 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i15 = i9 + i10;

        $i16 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartCross(android.support.design.internal.FlexItem,boolean)>(r4, 0);

        $i17 = $i15 + $i16;

        $i18 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndCross(android.support.design.internal.FlexItem,boolean)>(r4, 0);

        $i19 = $i17 + $i18;

        $i20 = $i19 + i102;

        $i21 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemSizeCross(android.support.design.internal.FlexItem,boolean)>(r4, 0);

        i108 = interfaceinvoke $r12.<android.support.design.internal.FlexContainer: int getChildWidthMeasureSpec(int,int,int)>(i1, $i20, $i21);

        $r13 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i22 = i7 + i8;

        $i23 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartMain(android.support.design.internal.FlexItem,boolean)>(r4, 0);

        $i24 = $i22 + $i23;

        $i25 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndMain(android.support.design.internal.FlexItem,boolean)>(r4, 0);

        $i26 = $i24 + $i25;

        i106 = interfaceinvoke $r13.<android.support.design.internal.FlexContainer: int getChildHeightMeasureSpec(int,int,int)>(i0, $i26, i105);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i108, i106);

     label10:
        $r14 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r14.<android.support.design.internal.FlexContainer: void updateViewCache(int,android.view.View)>(i104, r3);

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void checkSizeConstraints(android.view.View,int)>(r3, i104);

        $i27 = virtualinvoke r3.<android.view.View: int getMeasuredState()>();

        i100 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(i100, $i27);

        $i28 = r35.<android.support.design.internal.FlexLine: int mainSize>;

        $i29 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getViewMeasuredSizeMain(android.view.View,boolean)>(r3, z0);

        $i30 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartMain(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i31 = $i29 + $i30;

        $i32 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndMain(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i33 = $i31 + $i32;

        $z2 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: boolean isWrapRequired(android.view.View,int,int,int,int,android.support.design.internal.FlexItem,int,int)>(r3, i5, i6, $i28, $i33, r4, i104, i103);

        if $z2 == 0 goto label16;

        $i62 = virtualinvoke r35.<android.support.design.internal.FlexLine: int getItemCountNotGone()>();

        if $i62 <= 0 goto label13;

        $r28 = r34;

        $r29 = r35;

        if i104 <= 0 goto label11;

        $i109 = i104 - 1;

        goto label12;

     label11:
        $i109 = 0;

     label12:
        r43 = (java.util.List) $r28;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void addFlexLine(java.util.List,android.support.design.internal.FlexLine,int,int)>(r43, $r29, $i109, i102);

        $i83 = r35.<android.support.design.internal.FlexLine: int crossSize>;

        i102 = i102 + $i83;

     label13:
        if z0 == 0 goto label14;

        $i73 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getHeight()>();

        if $i73 != -1 goto label15;

        $r26 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $r25 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i74 = interfaceinvoke $r25.<android.support.design.internal.FlexContainer: int getPaddingTop()>();

        $r27 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i75 = interfaceinvoke $r27.<android.support.design.internal.FlexContainer: int getPaddingBottom()>();

        $i76 = $i74 + $i75;

        $i77 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i78 = $i76 + $i77;

        $i79 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        $i80 = $i78 + $i79;

        $i81 = $i80 + i102;

        $i82 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getHeight()>();

        i110 = interfaceinvoke $r26.<android.support.design.internal.FlexContainer: int getChildHeightMeasureSpec(int,int,int)>(i1, $i81, $i82);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i106, i110);

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void checkSizeConstraints(android.view.View,int)>(r3, i104);

        goto label15;

     label14:
        $i63 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getWidth()>();

        if $i63 != -1 goto label15;

        $r23 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $r22 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i64 = interfaceinvoke $r22.<android.support.design.internal.FlexContainer: int getPaddingLeft()>();

        $r24 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i65 = interfaceinvoke $r24.<android.support.design.internal.FlexContainer: int getPaddingRight()>();

        $i66 = $i64 + $i65;

        $i67 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getMarginLeft()>();

        $i68 = $i66 + $i67;

        $i69 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getMarginRight()>();

        $i70 = $i68 + $i69;

        $i71 = $i70 + i102;

        $i72 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getWidth()>();

        i111 = interfaceinvoke $r23.<android.support.design.internal.FlexContainer: int getChildWidthMeasureSpec(int,int,int)>(i1, $i71, $i72);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i111, i106);

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void checkSizeConstraints(android.view.View,int)>(r3, i104);

     label15:
        r39 = new android.support.design.internal.FlexLine;

        specialinvoke r39.<android.support.design.internal.FlexLine: void <init>()>();

        r35 = r39;

        r35.<android.support.design.internal.FlexLine: int itemCount> = 1;

        $i112 = i7 + i8;

        r35.<android.support.design.internal.FlexLine: int mainSize> = $i112;

        r35.<android.support.design.internal.FlexLine: int firstIndex> = i104;

        i103 = 0;

        i101 = -2147483648;

        goto label17;

     label16:
        $i34 = r35.<android.support.design.internal.FlexLine: int itemCount>;

        $i35 = $i34 + 1;

        r35.<android.support.design.internal.FlexLine: int itemCount> = $i35;

        i103 = i103 + 1;

     label17:
        $i36 = r35.<android.support.design.internal.FlexLine: int mainSize>;

        $i37 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getViewMeasuredSizeMain(android.view.View,boolean)>(r3, z0);

        $i38 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartMain(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i39 = $i37 + $i38;

        $i40 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndMain(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i41 = $i39 + $i40;

        $i42 = $i36 + $i41;

        r35.<android.support.design.internal.FlexLine: int mainSize> = $i42;

        $f1 = r35.<android.support.design.internal.FlexLine: float motalFlexGrow>;

        $f2 = interfaceinvoke r4.<android.support.design.internal.FlexItem: float getFlexGrow()>();

        $f3 = $f1 + $f2;

        r35.<android.support.design.internal.FlexLine: float motalFlexGrow> = $f3;

        $f4 = r35.<android.support.design.internal.FlexLine: float totalFlexShrink>;

        $f5 = interfaceinvoke r4.<android.support.design.internal.FlexItem: float getFlexShrink()>();

        $f6 = $f4 + $f5;

        r35.<android.support.design.internal.FlexLine: float totalFlexShrink> = $f6;

        $r15 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r15.<android.support.design.internal.FlexContainer: void onNewFlexItemAdded(android.view.View,int,int,android.support.design.internal.FlexLine)>(r3, i104, i103, r35);

        $i43 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getViewMeasuredSizeCross(android.view.View,boolean)>(r3, z0);

        $i44 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginStartCross(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i45 = $i43 + $i44;

        $i46 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getFlexItemMarginEndCross(android.support.design.internal.FlexItem,boolean)>(r4, z0);

        $i47 = $i45 + $i46;

        $r16 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i48 = interfaceinvoke $r16.<android.support.design.internal.FlexContainer: int getDecorationLengthCrossAxis(android.view.View)>(r3);

        $i49 = $i47 + $i48;

        i101 = staticinvoke <java.lang.Math: int max(int,int)>(i101, $i49);

        $i50 = r35.<android.support.design.internal.FlexLine: int crossSize>;

        $i51 = staticinvoke <java.lang.Math: int max(int,int)>($i50, i101);

        r35.<android.support.design.internal.FlexLine: int crossSize> = $i51;

        if z0 == 0 goto label18;

        $i57 = r35.<android.support.design.internal.FlexLine: int maxBaseline>;

        $i58 = virtualinvoke r3.<android.view.View: int getBaseline()>();

        $i59 = interfaceinvoke r4.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i60 = $i58 + $i59;

        $i61 = staticinvoke <java.lang.Math: int max(int,int)>($i57, $i60);

        r35.<android.support.design.internal.FlexLine: int maxBaseline> = $i61;

     label18:
        $z3 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: boolean isLastFlexItem(int,int,android.support.design.internal.FlexLine)>(i104, i11, r35);

        if $z3 == 0 goto label19;

        r44 = (java.util.List) r34;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void addFlexLine(java.util.List,android.support.design.internal.FlexLine,int,int)>(r44, r35, i104, i102);

        $i56 = r35.<android.support.design.internal.FlexLine: int crossSize>;

        i102 = i102 + $i56;

     label19:
        if i4 == -1 goto label20;

        r45 = (java.util.List) r34;

        $z4 = interfaceinvoke r45.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label20;

        r46 = (java.util.List) r34;

        $i52 = interfaceinvoke r46.<java.util.List: int size()>();

        $i53 = $i52 - 1;

        r47 = (java.util.List) r34;

        $r17 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>($i53);

        $r18 = (android.support.design.internal.FlexLine) $r17;

        $i54 = $r18.<android.support.design.internal.FlexLine: int lastIndex>;

        if $i54 < i4 goto label20;

        if i104 < i4 goto label20;

        if z8 != 0 goto label20;

        $i55 = virtualinvoke r35.<android.support.design.internal.FlexLine: int getCrossSize()>();

        i102 = neg $i55;

        z8 = 1;

     label20:
        if i102 <= i2 goto label21;

        if z8 == 0 goto label21;

        goto label22;

     label21:
        i104 = i104 + 1;

        goto label05;

     label22:
        r1.<android.support.design.internal.FlexboxHelper$FlexLinesResult: int childState> = i100;

        return;
    }

    private int getPaddingStartMain(boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        boolean z0;
        android.support.design.internal.FlexContainer $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i1 = interfaceinvoke $r2.<android.support.design.internal.FlexContainer: int getPaddingStart()>();

        return $i1;

     label1:
        $r1 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i0 = interfaceinvoke $r1.<android.support.design.internal.FlexContainer: int getPaddingTop()>();

        return $i0;
    }

    private int getPaddingEndMain(boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        boolean z0;
        android.support.design.internal.FlexContainer $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i1 = interfaceinvoke $r2.<android.support.design.internal.FlexContainer: int getPaddingEnd()>();

        return $i1;

     label1:
        $r1 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i0 = interfaceinvoke $r1.<android.support.design.internal.FlexContainer: int getPaddingBottom()>();

        return $i0;
    }

    private int getPaddingStartCross(boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        boolean z0;
        android.support.design.internal.FlexContainer $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i1 = interfaceinvoke $r2.<android.support.design.internal.FlexContainer: int getPaddingTop()>();

        return $i1;

     label1:
        $r1 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i0 = interfaceinvoke $r1.<android.support.design.internal.FlexContainer: int getPaddingStart()>();

        return $i0;
    }

    private int getPaddingEndCross(boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        boolean z0;
        android.support.design.internal.FlexContainer $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i1 = interfaceinvoke $r2.<android.support.design.internal.FlexContainer: int getPaddingBottom()>();

        return $i1;

     label1:
        $r1 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i0 = interfaceinvoke $r1.<android.support.design.internal.FlexContainer: int getPaddingEnd()>();

        return $i0;
    }

    private int getViewMeasuredSizeMain(android.view.View, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        return $i1;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        return $i0;
    }

    private int getViewMeasuredSizeCross(android.view.View, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        return $i1;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        return $i0;
    }

    private int getFlexItemSizeMain(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getWidth()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getHeight()>();

        return $i0;
    }

    private int getFlexItemSizeCross(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getHeight()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getWidth()>();

        return $i0;
    }

    private int getFlexItemMarginStartMain(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginLeft()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginTop()>();

        return $i0;
    }

    private int getFlexItemMarginEndMain(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginRight()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        return $i0;
    }

    private int getFlexItemMarginStartCross(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginTop()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginLeft()>();

        return $i0;
    }

    private int getFlexItemMarginEndCross(android.support.design.internal.FlexItem, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.support.design.internal.FlexItem r1;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.support.design.internal.FlexItem;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        return $i1;

     label1:
        $i0 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginRight()>();

        return $i0;
    }

    private boolean isWrapRequired(android.view.View, int, int, int, int, android.support.design.internal.FlexItem, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, i8;
        android.support.design.internal.FlexItem r2;
        android.support.design.internal.FlexContainer $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i8 := @parameter4: int;

        r2 := @parameter5: android.support.design.internal.FlexItem;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i6 = interfaceinvoke $r3.<android.support.design.internal.FlexContainer: int getFlexWrap()>();

        if $i6 != 0 goto label1;

        return 0;

     label1:
        $z0 = interfaceinvoke r2.<android.support.design.internal.FlexItem: boolean isWrapBefore()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        if i0 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i5 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getDecorationLengthMainAxis(android.view.View,int,int)>(r1, i3, i4);

        if i5 <= 0 goto label4;

        i8 = i8 + i5;

     label4:
        $i7 = i2 + i8;

        if i1 >= $i7 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    private boolean isLastFlexItem(int, int, android.support.design.internal.FlexLine)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, $i2, $i3;
        android.support.design.internal.FlexLine r1;
        boolean $z0;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.design.internal.FlexLine;

        $i2 = i1 - 1;

        if i0 != $i2 goto label1;

        $i3 = virtualinvoke r1.<android.support.design.internal.FlexLine: int getItemCountNotGone()>();

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void addFlexLine(java.util.List, android.support.design.internal.FlexLine, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        java.util.List r1;
        android.support.design.internal.FlexLine r2;
        int i0, i1;
        android.support.design.internal.FlexContainer $r3;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.design.internal.FlexLine;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2.<android.support.design.internal.FlexLine: int sumCrossSizeBefore> = i1;

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r3.<android.support.design.internal.FlexContainer: void onNewFlexLineAdded(android.support.design.internal.FlexLine)>(r2);

        r2.<android.support.design.internal.FlexLine: int lastIndex> = i0;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    private void checkSizeConstraints(android.view.View, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, $i8;
        android.support.design.internal.FlexItem r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.internal.FlexContainer $r4;
        boolean z0;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        z0 = 0;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.internal.FlexItem) $r3;

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i3 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMinWidth()>();

        if i6 >= $i3 goto label1;

        z0 = 1;

        i6 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMinWidth()>();

        goto label2;

     label1:
        $i4 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMaxWidth()>();

        if i6 <= $i4 goto label2;

        z0 = 1;

        i6 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMaxWidth()>();

     label2:
        $i8 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMinHeight()>();

        if i7 >= $i8 goto label3;

        z0 = 1;

        i7 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMinHeight()>();

        goto label4;

     label3:
        $i5 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMaxHeight()>();

        if i7 <= $i5 goto label4;

        z0 = 1;

        i7 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMaxHeight()>();

     label4:
        if z0 == 0 goto label5;

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, 1073741824);

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i1, i2);

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r4.<android.support.design.internal.FlexContainer: void updateViewCache(int,android.view.View)>(i0, r1);

     label5:
        return;
    }

    void determineMainSize(int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void determineMainSize(int,int,int)>(i0, i1, 0);

        return;
    }

    private void determineMainSize(int, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, i2, i3, i4, i5, i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        byte b6;
        java.util.List r1;
        android.support.design.internal.FlexLine r2;
        android.support.design.internal.FlexContainer $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object $r9;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i8 = interfaceinvoke $r3.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void ensureChildrenFrozen(int)>($i8);

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i9 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        if i2 < $i9 goto label1;

        return;

     label1:
        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        if i3 != 1073741824 goto label2;

        i13 = i4;

        goto label3;

     label2:
        $r5 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        i13 = interfaceinvoke $r5.<android.support.design.internal.FlexContainer: int getLargestMainSize()>();

     label3:
        $r6 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i10 = interfaceinvoke $r6.<android.support.design.internal.FlexContainer: int getPaddingLeft()>();

        $r7 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i11 = interfaceinvoke $r7.<android.support.design.internal.FlexContainer: int getPaddingRight()>();

        i5 = $i10 + $i11;

        b6 = 0;

        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r1 = interfaceinvoke $r8.<android.support.design.internal.FlexContainer: java.util.List getFlexLinesInternal()>();

        i14 = b6;

        i7 = interfaceinvoke r1.<java.util.List: int size()>();

     label4:
        if i14 >= i7 goto label7;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i14);

        r2 = (android.support.design.internal.FlexLine) $r9;

        $i12 = r2.<android.support.design.internal.FlexLine: int mainSize>;

        if $i12 >= i13 goto label5;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void expandFlexItems(int,android.support.design.internal.FlexLine,int,int,boolean)>(i1, r2, i13, i5, 0);

        goto label6;

     label5:
        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void shrinkFlexItems(int,android.support.design.internal.FlexLine,int,int,boolean)>(i1, r2, i13, i5, 0);

     label6:
        i14 = i14 + 1;

        goto label4;

     label7:
        return;
    }

    private void ensureChildrenFrozen(int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        if $r1 != null goto label1;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(10, i0);

        $r6 = newarray (boolean)[$i5];

        r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen> = $r6;

        goto label3;

     label1:
        $r2 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $i2 = lengthof $r2;

        if $i2 >= i0 goto label2;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $i3 = lengthof $r4;

        i1 = $i3 * 2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i0);

        $r5 = newarray (boolean)[$i4];

        r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen> = $r5;

        goto label3;

     label2:
        $r3 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($r3, 0);

     label3:
        return;
    }

    private void expandFlexItems(int, android.support.design.internal.FlexLine, int, int, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, i22, i23, $i24, i25, i26, i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        android.support.design.internal.FlexLine r1;
        boolean z0, $z1, z2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14;
        android.view.View r2;
        android.support.design.internal.FlexItem r3;
        byte $b7, $b16, $b20, $b21;
        android.support.design.internal.FlexContainer $r4, $r8, $r9;
        android.view.ViewGroup$LayoutParams $r5;
        boolean[] $r6, $r7;
        double $d0, $d1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.design.internal.FlexLine;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $f1 = r1.<android.support.design.internal.FlexLine: float motalFlexGrow>;

        $b7 = $f1 cmpg 0.0F;

        if $b7 <= 0 goto label01;

        $i8 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        if i1 >= $i8 goto label02;

     label01:
        return;

     label02:
        i3 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        z2 = 0;

        $i9 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        $i10 = i1 - $i9;

        $f3 = (float) $i10;

        $f2 = r1.<android.support.design.internal.FlexLine: float motalFlexGrow>;

        f0 = $f3 / $f2;

        $i11 = r1.<android.support.design.internal.FlexLine: int dividerLengthInMainSize>;

        $i12 = i2 + $i11;

        r1.<android.support.design.internal.FlexLine: int mainSize> = $i12;

        i22 = 0;

        if z0 != 0 goto label03;

        r1.<android.support.design.internal.FlexLine: int crossSize> = -2147483648;

     label03:
        f13 = 0.0F;

        i23 = 0;

     label04:
        $i24 = r1.<android.support.design.internal.FlexLine: int itemCount>;

        if i23 >= $i24 goto label12;

        $i14 = r1.<android.support.design.internal.FlexLine: int firstIndex>;

        i4 = $i14 + i23;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r2 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: android.view.View getReorderedFlexItemAt(int)>(i4);

        if r2 == null goto label11;

        $i15 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i15 != 8 goto label05;

        goto label11;

     label05:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.internal.FlexItem) $r5;

        i25 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i26 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $r6 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $z1 = $r6[i4];

        if $z1 != 0 goto label10;

        $f4 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexGrow()>();

        $b16 = $f4 cmpl 0.0F;

        if $b16 <= 0 goto label10;

        $f5 = (float) i25;

        $f6 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexGrow()>();

        $f7 = f0 * $f6;

        f14 = $f5 + $f7;

        $i17 = r1.<android.support.design.internal.FlexLine: int itemCount>;

        $i18 = $i17 - 1;

        if i23 != $i18 goto label06;

        f14 = f14 + f13;

        f13 = 0.0F;

     label06:
        i27 = staticinvoke <java.lang.Math: int round(float)>(f14);

        $i19 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMaxWidth()>();

        if i27 <= $i19 goto label07;

        z2 = 1;

        i27 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMaxWidth()>();

        $r7 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $r7[i4] = 1;

        $f10 = r1.<android.support.design.internal.FlexLine: float motalFlexGrow>;

        $f11 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexGrow()>();

        $f12 = $f10 - $f11;

        r1.<android.support.design.internal.FlexLine: float motalFlexGrow> = $f12;

        goto label09;

     label07:
        $f8 = (float) i27;

        $f9 = f14 - $f8;

        f13 = f13 + $f9;

        $d0 = (double) f13;

        $b20 = $d0 cmpl 1.0;

        if $b20 <= 0 goto label08;

        i27 = i27 + 1;

        f13 = f13 - 1.0F;

        goto label09;

     label08:
        $d1 = (double) f13;

        $b21 = $d1 cmpg -1.0;

        if $b21 >= 0 goto label09;

        i27 = i27 + -1;

        f13 = f13 + 1.0F;

     label09:
        $i28 = r1.<android.support.design.internal.FlexLine: int sumCrossSizeBefore>;

        i5 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getChildHeightMeasureSpecInternal(int,android.support.design.internal.FlexItem,int)>(i0, r3, $i28);

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i27, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i6, i5);

        i25 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i26 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r8.<android.support.design.internal.FlexContainer: void updateViewCache(int,android.view.View)>(i4, r2);

     label10:
        $i29 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i30 = i26 + $i29;

        $i31 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        $i32 = $i30 + $i31;

        $r9 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i33 = interfaceinvoke $r9.<android.support.design.internal.FlexContainer: int getDecorationLengthCrossAxis(android.view.View)>(r2);

        $i34 = $i32 + $i33;

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i34);

        $i35 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        $i36 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginLeft()>();

        $i37 = i25 + $i36;

        $i38 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginRight()>();

        $i39 = $i37 + $i38;

        $i40 = $i35 + $i39;

        r1.<android.support.design.internal.FlexLine: int mainSize> = $i40;

        $i41 = r1.<android.support.design.internal.FlexLine: int crossSize>;

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>($i41, i22);

        r1.<android.support.design.internal.FlexLine: int crossSize> = $i42;

     label11:
        i23 = i23 + 1;

        goto label04;

     label12:
        if z2 == 0 goto label13;

        $i13 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        if i3 == $i13 goto label13;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void expandFlexItems(int,android.support.design.internal.FlexLine,int,int,boolean)>(i0, r1, i1, i2, 1);

     label13:
        return;
    }

    private void shrinkFlexItems(int, android.support.design.internal.FlexLine, int, int, boolean)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, i22, i23, $i24, i25, i26, i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        android.support.design.internal.FlexLine r1;
        boolean z0, $z1, z2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14;
        android.view.View r2;
        android.support.design.internal.FlexItem r3;
        byte $b7, $b16, $b20, $b21;
        android.support.design.internal.FlexContainer $r4, $r8, $r9;
        android.view.ViewGroup$LayoutParams $r5;
        boolean[] $r6, $r7;
        double $d0, $d1;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.design.internal.FlexLine;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        i3 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        $f1 = r1.<android.support.design.internal.FlexLine: float totalFlexShrink>;

        $b7 = $f1 cmpg 0.0F;

        if $b7 <= 0 goto label01;

        $i8 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        if i1 <= $i8 goto label02;

     label01:
        return;

     label02:
        z2 = 0;

        $i9 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        $i10 = $i9 - i1;

        $f3 = (float) $i10;

        $f2 = r1.<android.support.design.internal.FlexLine: float totalFlexShrink>;

        f0 = $f3 / $f2;

        f13 = 0.0F;

        $i11 = r1.<android.support.design.internal.FlexLine: int dividerLengthInMainSize>;

        $i12 = i2 + $i11;

        r1.<android.support.design.internal.FlexLine: int mainSize> = $i12;

        i22 = 0;

        if z0 != 0 goto label03;

        r1.<android.support.design.internal.FlexLine: int crossSize> = -2147483648;

     label03:
        i23 = 0;

     label04:
        $i24 = r1.<android.support.design.internal.FlexLine: int itemCount>;

        if i23 >= $i24 goto label12;

        $i14 = r1.<android.support.design.internal.FlexLine: int firstIndex>;

        i4 = $i14 + i23;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r2 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: android.view.View getReorderedFlexItemAt(int)>(i4);

        if r2 == null goto label11;

        $i15 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i15 != 8 goto label05;

        goto label11;

     label05:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.internal.FlexItem) $r5;

        i25 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i26 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $r6 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $z1 = $r6[i4];

        if $z1 != 0 goto label10;

        $f4 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexShrink()>();

        $b16 = $f4 cmpl 0.0F;

        if $b16 <= 0 goto label10;

        $f5 = (float) i25;

        $f6 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexShrink()>();

        $f7 = f0 * $f6;

        f14 = $f5 - $f7;

        $i17 = r1.<android.support.design.internal.FlexLine: int itemCount>;

        $i18 = $i17 - 1;

        if i23 != $i18 goto label06;

        f14 = f14 + f13;

        f13 = 0.0F;

     label06:
        i27 = staticinvoke <java.lang.Math: int round(float)>(f14);

        $i19 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMinWidth()>();

        if i27 >= $i19 goto label07;

        z2 = 1;

        i27 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMinWidth()>();

        $r7 = r0.<android.support.design.internal.FlexboxHelper: boolean[] childrenFrozen>;

        $r7[i4] = 1;

        $f10 = r1.<android.support.design.internal.FlexLine: float totalFlexShrink>;

        $f11 = interfaceinvoke r3.<android.support.design.internal.FlexItem: float getFlexShrink()>();

        $f12 = $f10 - $f11;

        r1.<android.support.design.internal.FlexLine: float totalFlexShrink> = $f12;

        goto label09;

     label07:
        $f8 = (float) i27;

        $f9 = f14 - $f8;

        f13 = f13 + $f9;

        $d0 = (double) f13;

        $b20 = $d0 cmpl 1.0;

        if $b20 <= 0 goto label08;

        i27 = i27 + 1;

        f13 = f13 - 1.0F;

        goto label09;

     label08:
        $d1 = (double) f13;

        $b21 = $d1 cmpg -1.0;

        if $b21 >= 0 goto label09;

        i27 = i27 + -1;

        f13 = f13 + 1.0F;

     label09:
        $i28 = r1.<android.support.design.internal.FlexLine: int sumCrossSizeBefore>;

        i5 = specialinvoke r0.<android.support.design.internal.FlexboxHelper: int getChildHeightMeasureSpecInternal(int,android.support.design.internal.FlexItem,int)>(i0, r3, $i28);

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i27, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i6, i5);

        i25 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i26 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r8.<android.support.design.internal.FlexContainer: void updateViewCache(int,android.view.View)>(i4, r2);

     label10:
        $i29 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i30 = i26 + $i29;

        $i31 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        $i32 = $i30 + $i31;

        $r9 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i33 = interfaceinvoke $r9.<android.support.design.internal.FlexContainer: int getDecorationLengthCrossAxis(android.view.View)>(r2);

        $i34 = $i32 + $i33;

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i34);

        $i35 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        $i36 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginLeft()>();

        $i37 = i25 + $i36;

        $i38 = interfaceinvoke r3.<android.support.design.internal.FlexItem: int getMarginRight()>();

        $i39 = $i37 + $i38;

        $i40 = $i35 + $i39;

        r1.<android.support.design.internal.FlexLine: int mainSize> = $i40;

        $i41 = r1.<android.support.design.internal.FlexLine: int crossSize>;

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>($i41, i22);

        r1.<android.support.design.internal.FlexLine: int crossSize> = $i42;

     label11:
        i23 = i23 + 1;

        goto label04;

     label12:
        if z2 == 0 goto label13;

        $i13 = r1.<android.support.design.internal.FlexLine: int mainSize>;

        if i3 == $i13 goto label13;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void shrinkFlexItems(int,android.support.design.internal.FlexLine,int,int,boolean)>(i0, r1, i1, i2, 1);

     label13:
        return;
    }

    private int getChildHeightMeasureSpecInternal(int, android.support.design.internal.FlexItem, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        android.support.design.internal.FlexItem r1;
        android.support.design.internal.FlexContainer $r2, $r3, $r4;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.design.internal.FlexItem;

        i1 := @parameter2: int;

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $r2 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i3 = interfaceinvoke $r2.<android.support.design.internal.FlexContainer: int getPaddingTop()>();

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i4 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getPaddingBottom()>();

        $i5 = $i3 + $i4;

        $i6 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i7 = $i5 + $i6;

        $i8 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        $i9 = $i7 + $i8;

        $i10 = $i9 + i1;

        $i11 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getHeight()>();

        i18 = interfaceinvoke $r3.<android.support.design.internal.FlexContainer: int getChildHeightMeasureSpec(int,int,int)>(i0, $i10, $i11);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i18);

        $i12 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMaxHeight()>();

        if i2 <= $i12 goto label1;

        $i16 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMaxHeight()>();

        $i17 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i18);

        i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i16, $i17);

        goto label2;

     label1:
        $i13 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMinHeight()>();

        if i2 >= $i13 goto label2;

        $i14 = interfaceinvoke r1.<android.support.design.internal.FlexItem: int getMinHeight()>();

        $i15 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i18);

        i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, $i15);

     label2:
        return i18;
    }

    void determineCrossSize(int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, i17, i18;
        java.util.List r1;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7;
        android.support.design.internal.FlexLine r2, $r7;
        android.support.design.internal.FlexContainer $r3, $r4;
        java.lang.Object $r5, $r6;
        byte $b14, $b15;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $r3 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r1 = interfaceinvoke $r3.<android.support.design.internal.FlexContainer: java.util.List getFlexLinesInternal()>();

        if i2 != 1073741824 goto label6;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i6 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getSumOfCrossSize()>();

        i4 = $i6 + i1;

        $i7 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i7 != 1 goto label1;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.support.design.internal.FlexLine) $r6;

        $i16 = i3 - i1;

        $r7.<android.support.design.internal.FlexLine: int crossSize> = $i16;

        goto label6;

     label1:
        $i8 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i8 < 2 goto label6;

        if i4 >= i3 goto label6;

        $i9 = i3 - i4;

        $f1 = (float) $i9;

        $i10 = interfaceinvoke r1.<java.util.List: int size()>();

        $f2 = (float) $i10;

        f0 = $f1 / $f2;

        f6 = 0.0F;

        i17 = 0;

        i5 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        if i17 >= i5 goto label6;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i17);

        r2 = (android.support.design.internal.FlexLine) $r5;

        $i11 = r2.<android.support.design.internal.FlexLine: int crossSize>;

        $f3 = (float) $i11;

        f7 = $f3 + f0;

        $i12 = interfaceinvoke r1.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        if i17 != $i13 goto label3;

        f7 = f7 + f6;

        f6 = 0.0F;

     label3:
        i18 = staticinvoke <java.lang.Math: int round(float)>(f7);

        $f4 = (float) i18;

        $f5 = f7 - $f4;

        f6 = f6 + $f5;

        $b14 = f6 cmpl 1.0F;

        if $b14 <= 0 goto label4;

        i18 = i18 + 1;

        f6 = f6 - 1.0F;

        goto label5;

     label4:
        $b15 = f6 cmpg -1.0F;

        if $b15 >= 0 goto label5;

        i18 = i18 + -1;

        f6 = f6 + 1.0F;

     label5:
        r2.<android.support.design.internal.FlexLine: int crossSize> = i18;

        i17 = i17 + 1;

        goto label2;

     label6:
        return;
    }

    void stretchViews()
    {
        android.support.design.internal.FlexboxHelper r0;
        byte b0;
        java.util.List r1;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.support.design.internal.FlexLine r2;
        android.view.View r3;
        android.support.design.internal.FlexContainer $r4, $r5, $r7, $r8;
        java.lang.Object $r6;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i4 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        if 0 < $i4 goto label1;

        return;

     label1:
        b0 = 0;

        $r5 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r1 = interfaceinvoke $r5.<android.support.design.internal.FlexContainer: java.util.List getFlexLinesInternal()>();

        i9 = b0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        if i9 >= i1 goto label8;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        r2 = (android.support.design.internal.FlexLine) $r6;

        i10 = 0;

        i2 = r2.<android.support.design.internal.FlexLine: int itemCount>;

     label3:
        if i10 >= i2 goto label7;

        $i5 = r2.<android.support.design.internal.FlexLine: int firstIndex>;

        i3 = $i5 + i10;

        $r7 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i6 = interfaceinvoke $r7.<android.support.design.internal.FlexContainer: int getFlexItemCount()>();

        if i10 < $i6 goto label4;

        goto label6;

     label4:
        $r8 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        r3 = interfaceinvoke $r8.<android.support.design.internal.FlexContainer: android.view.View getReorderedFlexItemAt(int)>(i3);

        if r3 == null goto label6;

        $i7 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i7 != 8 goto label5;

        goto label6;

     label5:
        $i8 = r2.<android.support.design.internal.FlexLine: int crossSize>;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper: void stretchViewVertically(android.view.View,int,int)>(r3, $i8, i3);

     label6:
        i10 = i10 + 1;

        goto label3;

     label7:
        i9 = i9 + 1;

        goto label2;

     label8:
        return;
    }

    private void stretchViewVertically(android.view.View, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        android.support.design.internal.FlexItem r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.internal.FlexContainer $r4, $r5;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.internal.FlexItem) $r3;

        $i5 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i6 = i0 - $i5;

        $i7 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMarginBottom()>();

        $i8 = $i6 - $i7;

        $r4 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        $i9 = interfaceinvoke $r4.<android.support.design.internal.FlexContainer: int getDecorationLengthCrossAxis(android.view.View)>(r1);

        i12 = $i8 - $i9;

        $i10 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMinHeight()>();

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i10);

        $i11 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMaxHeight()>();

        i14 = staticinvoke <java.lang.Math: int min(int,int)>(i13, $i11);

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, 1073741824);

        i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i14, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i3, i4);

        $r5 = r0.<android.support.design.internal.FlexboxHelper: android.support.design.internal.FlexContainer flexContainer>;

        interfaceinvoke $r5.<android.support.design.internal.FlexContainer: void updateViewCache(int,android.view.View)>(i1, r1);

        return;
    }

    void layoutSingleChildHorizontal(android.view.View, int, int, int, int)
    {
        android.support.design.internal.FlexboxHelper r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.support.design.internal.FlexItem r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.internal.FlexboxHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.internal.FlexItem) $r3;

        $i4 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i5 = i1 + $i4;

        $i6 = interfaceinvoke r2.<android.support.design.internal.FlexItem: int getMarginTop()>();

        $i7 = i3 + $i6;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, $i5, i2, $i7);

        return;
    }

android.support.design.internal.FlexboxHelper$1
android.support.design.internal.FlexboxHelper$FlexLinesResult
<android.support.design.internal.FlexboxHelper$FlexLinesResult: java.util.List flexLines>
<android.support.design.internal.FlexboxHelper$FlexLinesResult: int childState>
    void <init>()
    {
        android.support.design.internal.FlexboxHelper$FlexLinesResult r0;

        r0 := @this: android.support.design.internal.FlexboxHelper$FlexLinesResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void reset()
    {
        android.support.design.internal.FlexboxHelper$FlexLinesResult r0;

        r0 := @this: android.support.design.internal.FlexboxHelper$FlexLinesResult;

        r0.<android.support.design.internal.FlexboxHelper$FlexLinesResult: java.util.List flexLines> = null;

        r0.<android.support.design.internal.FlexboxHelper$FlexLinesResult: int childState> = 0;

        return;
    }

android.support.design.internal.FlexboxHelper$Order
<android.support.design.internal.FlexboxHelper$Order: int index>
<android.support.design.internal.FlexboxHelper$Order: int order>
    private void <init>()
    {
        android.support.design.internal.FlexboxHelper$Order r0;

        r0 := @this: android.support.design.internal.FlexboxHelper$Order;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compareTo(android.support.design.internal.FlexboxHelper$Order)
    {
        android.support.design.internal.FlexboxHelper$Order r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.support.design.internal.FlexboxHelper$Order;

        r1 := @parameter0: android.support.design.internal.FlexboxHelper$Order;

        $i1 = r0.<android.support.design.internal.FlexboxHelper$Order: int order>;

        $i0 = r1.<android.support.design.internal.FlexboxHelper$Order: int order>;

        if $i1 == $i0 goto label1;

        $i6 = r0.<android.support.design.internal.FlexboxHelper$Order: int order>;

        $i5 = r1.<android.support.design.internal.FlexboxHelper$Order: int order>;

        $i7 = $i6 - $i5;

        return $i7;

     label1:
        $i3 = r0.<android.support.design.internal.FlexboxHelper$Order: int index>;

        $i2 = r1.<android.support.design.internal.FlexboxHelper$Order: int index>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    public java.lang.String toString()
    {
        android.support.design.internal.FlexboxHelper$Order r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: android.support.design.internal.FlexboxHelper$Order;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Order{order=");

        $i0 = r0.<android.support.design.internal.FlexboxHelper$Order: int order>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", index=");

        $i1 = r0.<android.support.design.internal.FlexboxHelper$Order: int index>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.support.design.internal.FlexboxHelper$Order r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.support.design.internal.FlexboxHelper$Order;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.design.internal.FlexboxHelper$Order) r1;

        $i0 = virtualinvoke r0.<android.support.design.internal.FlexboxHelper$Order: int compareTo(android.support.design.internal.FlexboxHelper$Order)>($r2);

        return $i0;
    }

    void <init>(android.support.design.internal.FlexboxHelper$1)
    {
        android.support.design.internal.FlexboxHelper$Order r0;
        android.support.design.internal.FlexboxHelper$1 r1;

        r0 := @this: android.support.design.internal.FlexboxHelper$Order;

        r1 := @parameter0: android.support.design.internal.FlexboxHelper$1;

        specialinvoke r0.<android.support.design.internal.FlexboxHelper$Order: void <init>()>();

        return;
    }

