android.support.test.internal.runner.TestSize
<android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize SMALL>
<android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize MEDIUM>
<android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize LARGE>
<android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize NONE>
<android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES>
<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName>
<android.support.test.internal.runner.TestSize: java.lang.Class mPlatformAnnotationClass>
<android.support.test.internal.runner.TestSize: java.lang.Class mRunnerFilterAnnotationClass>
<android.support.test.internal.runner.TestSize: float mTestSizeRunTimeThreshold>
    public void <init>(java.lang.String, java.lang.Class, java.lang.Class, float)
    {
        android.support.test.internal.runner.TestSize r0;
        java.lang.String r1;
        java.lang.Class r2, r3;
        float f0;

        r0 := @this: android.support.test.internal.runner.TestSize;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        f0 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName> = r1;

        r0.<android.support.test.internal.runner.TestSize: java.lang.Class mPlatformAnnotationClass> = r2;

        r0.<android.support.test.internal.runner.TestSize: java.lang.Class mRunnerFilterAnnotationClass> = r3;

        r0.<android.support.test.internal.runner.TestSize: float mTestSizeRunTimeThreshold> = f0;

        return;
    }

    public java.lang.String getSizeQualifierName()
    {
        android.support.test.internal.runner.TestSize r0;
        java.lang.String $r1;

        r0 := @this: android.support.test.internal.runner.TestSize;

        $r1 = r0.<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName>;

        return $r1;
    }

    public boolean testMethodIsAnnotatedWithTestSize(org.junit.runner.Description)
    {
        android.support.test.internal.runner.TestSize r0;
        org.junit.runner.Description r1;
        java.lang.Class $r2, $r4;
        java.lang.'annotation'.Annotation $r3, $r5;

        r0 := @this: android.support.test.internal.runner.TestSize;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mRunnerFilterAnnotationClass>;

        $r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r2);

        if $r3 != null goto label1;

        $r4 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mPlatformAnnotationClass>;

        $r5 = virtualinvoke r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r4);

        if $r5 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean testClassIsAnnotatedWithTestSize(org.junit.runner.Description)
    {
        android.support.test.internal.runner.TestSize r0;
        org.junit.runner.Description r1;
        java.lang.Class r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.test.internal.runner.TestSize;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        if null != r2 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mRunnerFilterAnnotationClass>;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>($r3);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mPlatformAnnotationClass>;

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>($r4);

        if $z1 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public float getRunTimeThreshold()
    {
        android.support.test.internal.runner.TestSize r0;
        float $f0;

        r0 := @this: android.support.test.internal.runner.TestSize;

        $f0 = r0.<android.support.test.internal.runner.TestSize: float mTestSizeRunTimeThreshold>;

        return $f0;
    }

    public static android.support.test.internal.runner.TestSize getTestSizeForRunTime(float)
    {
        float f0, $f1, $f2;
        android.support.test.internal.runner.TestSize $r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        f0 := @parameter0: float;

        $r0 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize SMALL>;

        $f1 = virtualinvoke $r0.<android.support.test.internal.runner.TestSize: float getRunTimeThreshold()>();

        $z0 = staticinvoke <android.support.test.internal.runner.TestSize: boolean runTimeSmallerThanThreshold(float,float)>(f0, $f1);

        if $z0 == 0 goto label1;

        $r4 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize SMALL>;

        return $r4;

     label1:
        $r1 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize MEDIUM>;

        $f2 = virtualinvoke $r1.<android.support.test.internal.runner.TestSize: float getRunTimeThreshold()>();

        $z1 = staticinvoke <android.support.test.internal.runner.TestSize: boolean runTimeSmallerThanThreshold(float,float)>(f0, $f2);

        if $z1 == 0 goto label2;

        $r3 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize MEDIUM>;

        return $r3;

     label2:
        $r2 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize LARGE>;

        return $r2;
    }

    public static boolean isAnyTestSize(java.lang.Class)
    {
        java.lang.Class r0, $r5, $r6;
        java.util.Iterator r1;
        android.support.test.internal.runner.TestSize r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.Class;

        $r3 = <android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.test.internal.runner.TestSize) $r4;

        $r5 = specialinvoke r2.<android.support.test.internal.runner.TestSize: java.lang.Class getRunnerAnnotation()>();

        if $r5 == r0 goto label2;

        $r6 = specialinvoke r2.<android.support.test.internal.runner.TestSize: java.lang.Class getFrameworkAnnotation()>();

        if $r6 != r0 goto label3;

     label2:
        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public static android.support.test.internal.runner.TestSize fromString(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.util.Iterator r1;
        android.support.test.internal.runner.TestSize r2, r6;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r6 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize NONE>;

        $r3 = <android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.test.internal.runner.TestSize) $r4;

        $r5 = virtualinvoke r2.<android.support.test.internal.runner.TestSize: java.lang.String getSizeQualifierName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        r6 = r2;

     label2:
        goto label1;

     label3:
        return r6;
    }

    public static android.support.test.internal.runner.TestSize fromDescription(org.junit.runner.Description)
    {
        org.junit.runner.Description r0;
        java.util.Set $r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.support.test.internal.runner.TestSize $r2, r6, r8, r10;
        java.lang.Object $r4, $r5;
        java.util.Iterator r7, r9;

        r0 := @parameter0: org.junit.runner.Description;

        r6 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize NONE>;

        $r1 = <android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES>;

        r7 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.support.test.internal.runner.TestSize) $r5;

        $z4 = virtualinvoke r8.<android.support.test.internal.runner.TestSize: boolean testMethodIsAnnotatedWithTestSize(org.junit.runner.Description)>(r0);

        if $z4 == 0 goto label2;

        r6 = r8;

        goto label3;

     label2:
        goto label1;

     label3:
        $r2 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize NONE>;

        $z1 = virtualinvoke $r2.<android.support.test.internal.runner.TestSize: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label6;

        $r3 = <android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES>;

        r9 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.support.test.internal.runner.TestSize) $r4;

        $z3 = virtualinvoke r10.<android.support.test.internal.runner.TestSize: boolean testClassIsAnnotatedWithTestSize(org.junit.runner.Description)>(r0);

        if $z3 == 0 goto label5;

        r6 = r10;

        goto label6;

     label5:
        goto label4;

     label6:
        return r6;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.test.internal.runner.TestSize r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: android.support.test.internal.runner.TestSize;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.support.test.internal.runner.TestSize) r1;

        $r6 = r0.<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName>;

        $r5 = r2.<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        android.support.test.internal.runner.TestSize r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.support.test.internal.runner.TestSize;

        $r1 = r0.<android.support.test.internal.runner.TestSize: java.lang.String mSizeQualifierName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    private static boolean runTimeSmallerThanThreshold(float, float)
    {
        float f0, f1;
        int $i0;
        boolean $z0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>(f0, f1);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.Class getFrameworkAnnotation()
    {
        android.support.test.internal.runner.TestSize r0;
        java.lang.Class $r1;

        r0 := @this: android.support.test.internal.runner.TestSize;

        $r1 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mPlatformAnnotationClass>;

        return $r1;
    }

    private java.lang.Class getRunnerAnnotation()
    {
        android.support.test.internal.runner.TestSize r0;
        java.lang.Class $r1;

        r0 := @this: android.support.test.internal.runner.TestSize;

        $r1 = r0.<android.support.test.internal.runner.TestSize: java.lang.Class mRunnerFilterAnnotationClass>;

        return $r1;
    }

    static void <clinit>()
    {
        android.support.test.internal.runner.TestSize $r0, $r1, $r2, $r3, $r6, $r7, $r8;
        java.util.HashSet $r4;
        android.support.test.internal.runner.TestSize[] $r5;
        java.util.List $r9;
        java.util.Set $r10;

        $r0 = new android.support.test.internal.runner.TestSize;

        specialinvoke $r0.<android.support.test.internal.runner.TestSize: void <init>(java.lang.String,java.lang.Class,java.lang.Class,float)>("small", class "Landroid/support/test/filters/SmallTest;", class "Landroid/test/suitebuilder/annotation/SmallTest;", 200.0F);

        <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize SMALL> = $r0;

        $r1 = new android.support.test.internal.runner.TestSize;

        specialinvoke $r1.<android.support.test.internal.runner.TestSize: void <init>(java.lang.String,java.lang.Class,java.lang.Class,float)>("medium", class "Landroid/support/test/filters/MediumTest;", class "Landroid/test/suitebuilder/annotation/MediumTest;", 1000.0F);

        <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize MEDIUM> = $r1;

        $r2 = new android.support.test.internal.runner.TestSize;

        specialinvoke $r2.<android.support.test.internal.runner.TestSize: void <init>(java.lang.String,java.lang.Class,java.lang.Class,float)>("large", class "Landroid/support/test/filters/LargeTest;", class "Landroid/test/suitebuilder/annotation/LargeTest;", 3.4028235E38F);

        <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize LARGE> = $r2;

        $r3 = new android.support.test.internal.runner.TestSize;

        specialinvoke $r3.<android.support.test.internal.runner.TestSize: void <init>(java.lang.String,java.lang.Class,java.lang.Class,float)>("", null, null, 0.0F);

        <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize NONE> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = newarray (android.support.test.internal.runner.TestSize)[3];

        $r6 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize SMALL>;

        $r5[0] = $r6;

        $r7 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize MEDIUM>;

        $r5[1] = $r7;

        $r8 = <android.support.test.internal.runner.TestSize: android.support.test.internal.runner.TestSize LARGE>;

        $r5[2] = $r8;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        $r10 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r4);

        <android.support.test.internal.runner.TestSize: java.util.Set ALL_SIZES> = $r10;

        return;
    }

