android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection
<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY>
    void <init>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator iterator()>
    public final java.lang.Object[] toArray()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        int i0;
        java.lang.Object[] r1, $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        i0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: int size()>();

        if i0 != 0 goto label1;

        $r2 = <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY>;

        return $r2;

     label1:
        r1 = newarray (java.lang.Object)[i0];

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: int copyIntoArray(java.lang.Object[],int)>(r1, 0);

        return r1;
    }

    public final java.lang.Object[] toArray(java.lang.Object[])
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        int i0, $i1, $i2;
        java.lang.Object[] r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r2 := @parameter0: java.lang.Object[];

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        i0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: int size()>();

        $i1 = lengthof r2;

        if $i1 >= i0 goto label1;

        r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r2, i0);

        goto label2;

     label1:
        $i2 = lengthof r2;

        if $i2 <= i0 goto label2;

        r2[i0] = null;

     label2:
        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: int copyIntoArray(java.lang.Object[],int)>(r2, 0);

        return r2;
    }

<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: boolean contains(java.lang.Object)>
    public final boolean add(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean remove(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean addAll(java.util.Collection)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean removeAll(java.util.Collection)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean retainAll(java.util.Collection)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final void clear()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList asList()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        boolean $z0;
        java.lang.Object[] $r1;
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        $z0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList of()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: java.lang.Object[] toArray()>();

        $r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList asImmutableList(java.lang.Object[])>($r1);

     label2:
        return $r2;
    }

    int copyIntoArray(java.lang.Object[], int)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        java.lang.Object[] r1;
        android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator r2;
        java.lang.Object r3;
        boolean $z0;
        int $i0, i1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object[];

        i1 := @parameter1: int;

        r2 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i1;

        i1 = i1 + 1;

        r1[$i0] = r3;

        goto label1;

     label2:
        return i1;
    }

    java.lang.Object writeReplace()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList$SerializedForm $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        $r1 = new android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList$SerializedForm;

        $r2 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: java.lang.Object[] toArray()>();

        specialinvoke $r1.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableList$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection r0;
        android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection;

        $r1 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY> = $r0;

        return;
    }

android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder
<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>
<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>
<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: boolean forceCopy>
    void <init>(int)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder r0;
        int i0;
        java.lang.Object[] $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder: void <init>()>();

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "initialCapacity");

        $r1 = newarray (java.lang.Object)[i0];

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents> = $r1;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size> = 0;

        return;
    }

    private void getReadyToExpandTo(int)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1, $r2, $r4, $r5, $r6, $r7;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i1 = lengthof $r1;

        if $i1 >= i0 goto label1;

        $r6 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $r5 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i2 = lengthof $r5;

        $i3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int expandedCapacity(int,int)>($i2, i0);

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r6, $i3);

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents> = $r7;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: boolean forceCopy> = 0;

        goto label2;

     label1:
        $z0 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: boolean forceCopy>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.Object[]) $r3;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents> = $r4;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: boolean forceCopy> = 0;

     label2:
        return;
    }

    public android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i1 = $i0 + 1;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>($i1);

        $r3 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i2 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i3 = $i2 + 1;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size> = $i3;

        $r3[$i2] = r1;

        return r0;
    }

    public transient android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder r0;
        java.lang.Object[] r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>(r1);

        $i1 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>($i2);

        $r3 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i4 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, $i4, $i3);

        $i6 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i5 = lengthof r1;

        $i7 = $i6 + $i5;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: int size> = $i7;

        return r0;
    }

    public volatile android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder add(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder r0, $r2;
        java.lang.Object r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)>(r1);

        return $r2;
    }

android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder
    static int expandedCapacity(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.AssertionError $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>("cannot store more than MAX_VALUE elements");

        throw $r0;

     label1:
        $i2 = i0 >> 1;

        $i3 = i0 + $i2;

        i6 = $i3 + 1;

        if i6 >= i1 goto label2;

        $i4 = i1 - 1;

        $i5 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i4);

        i6 = $i5 << 1;

     label2:
        if i6 >= 0 goto label3;

        i6 = 2147483647;

     label3:
        return i6;
    }

    void <init>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder r0;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder add(java.lang.Object)>
    public transient android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder r0;
        java.lang.Object[] r1, r2;
        int i0, i1;
        java.lang.Object r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder;

        r1 := @parameter0: java.lang.Object[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableCollection$Builder add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

