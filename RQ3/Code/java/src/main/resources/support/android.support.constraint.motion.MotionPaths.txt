android.support.constraint.motion.MotionPaths
<android.support.constraint.motion.MotionPaths: java.lang.String TAG>
<android.support.constraint.motion.MotionPaths: boolean DEBUG>
<android.support.constraint.motion.MotionPaths: boolean OLD_WAY>
<android.support.constraint.motion.MotionPaths: int OFF_POSITION>
<android.support.constraint.motion.MotionPaths: int OFF_X>
<android.support.constraint.motion.MotionPaths: int OFF_Y>
<android.support.constraint.motion.MotionPaths: int OFF_WIDTH>
<android.support.constraint.motion.MotionPaths: int OFF_HEIGHT>
<android.support.constraint.motion.MotionPaths: int OFF_PATH_ROTATE>
<android.support.constraint.motion.MotionPaths: int PERPENDICULAR>
<android.support.constraint.motion.MotionPaths: int CARTESIAN>
<android.support.constraint.motion.MotionPaths: int SCREEN>
<android.support.constraint.motion.MotionPaths: java.lang.String[] names>
<android.support.constraint.motion.MotionPaths: android.support.constraint.motion.utils.Easing mKeyFrameEasing>
<android.support.constraint.motion.MotionPaths: int mDrawPath>
<android.support.constraint.motion.MotionPaths: float time>
<android.support.constraint.motion.MotionPaths: float position>
<android.support.constraint.motion.MotionPaths: float x>
<android.support.constraint.motion.MotionPaths: float y>
<android.support.constraint.motion.MotionPaths: float width>
<android.support.constraint.motion.MotionPaths: float height>
<android.support.constraint.motion.MotionPaths: float mPathRotate>
<android.support.constraint.motion.MotionPaths: float mProgress>
<android.support.constraint.motion.MotionPaths: int mPathMotionArc>
<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes>
<android.support.constraint.motion.MotionPaths: int mMode>
<android.support.constraint.motion.MotionPaths: double[] mTempValue>
<android.support.constraint.motion.MotionPaths: double[] mTempDelta>
    public void <init>()
    {
        android.support.constraint.motion.MotionPaths r0;
        int $i0;
        java.util.LinkedHashMap $r1;
        double[] $r2, $r3;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.motion.MotionPaths: int mDrawPath> = 0;

        r0.<android.support.constraint.motion.MotionPaths: float mPathRotate> = #NaNF;

        r0.<android.support.constraint.motion.MotionPaths: float mProgress> = #NaNF;

        $i0 = <android.support.constraint.motion.Key: int UNSET>;

        r0.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes> = $r1;

        r0.<android.support.constraint.motion.MotionPaths: int mMode> = 0;

        $r2 = newarray (double)[18];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue> = $r2;

        $r3 = newarray (double)[18];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempDelta> = $r3;

        return;
    }

    void initCartesian(android.support.constraint.motion.KeyPosition, android.support.constraint.motion.MotionPaths, android.support.constraint.motion.MotionPaths)
    {
        android.support.constraint.motion.MotionPaths r0, r2, r3, r4;
        android.support.constraint.motion.KeyPosition r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r5;
        android.support.constraint.motion.utils.Easing $r6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.support.constraint.motion.KeyPosition;

        r2 := @parameter1: android.support.constraint.motion.MotionPaths;

        r3 := @parameter2: android.support.constraint.motion.MotionPaths;

        $i0 = r1.<android.support.constraint.motion.KeyPosition: int mFramePosition>;

        $f16 = (float) $i0;

        f0 = $f16 / 100.0F;

        r4 = r0;

        r4.<android.support.constraint.motion.MotionPaths: float time> = f0;

        $i1 = r1.<android.support.constraint.motion.KeyPosition: int mDrawPath>;

        r0.<android.support.constraint.motion.MotionPaths: int mDrawPath> = $i1;

        $f17 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f17);

        if $z0 == 0 goto label01;

        $f80 = f0;

        goto label02;

     label01:
        $f80 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

     label02:
        f1 = $f80;

        $f18 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f18);

        if $z1 == 0 goto label03;

        $f81 = f0;

        goto label04;

     label03:
        $f81 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

     label04:
        f2 = $f81;

        $f20 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f19 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        f3 = $f20 - $f19;

        $f22 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f21 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        f4 = $f22 - $f21;

        $f23 = r4.<android.support.constraint.motion.MotionPaths: float time>;

        r4.<android.support.constraint.motion.MotionPaths: float position> = $f23;

        f5 = f0;

        $f26 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f24 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f25 = $f24 / 2.0F;

        f6 = $f26 + $f25;

        $f29 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f27 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f28 = $f27 / 2.0F;

        f7 = $f29 + $f28;

        $f32 = r3.<android.support.constraint.motion.MotionPaths: float x>;

        $f30 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f31 = $f30 / 2.0F;

        f8 = $f32 + $f31;

        $f35 = r3.<android.support.constraint.motion.MotionPaths: float y>;

        $f33 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f34 = $f33 / 2.0F;

        f9 = $f35 + $f34;

        f10 = f8 - f6;

        f11 = f9 - f7;

        $f37 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f36 = f10 * f5;

        $f40 = $f37 + $f36;

        $f38 = f3 * f1;

        $f39 = $f38 / 2.0F;

        $f41 = $f40 - $f39;

        $i2 = (int) $f41;

        $f42 = (float) $i2;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f42;

        $f44 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f43 = f11 * f5;

        $f47 = $f44 + $f43;

        $f45 = f4 * f2;

        $f46 = $f45 / 2.0F;

        $f48 = $f47 - $f46;

        $i3 = (int) $f48;

        $f49 = (float) $i3;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f49;

        $f51 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f50 = f3 * f1;

        $f52 = $f51 + $f50;

        $i4 = (int) $f52;

        $f53 = (float) $i4;

        r4.<android.support.constraint.motion.MotionPaths: float width> = $f53;

        $f55 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f54 = f4 * f2;

        $f56 = $f55 + $f54;

        $i5 = (int) $f56;

        $f57 = (float) $i5;

        r4.<android.support.constraint.motion.MotionPaths: float height> = $f57;

        $f58 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f58);

        if $z2 == 0 goto label05;

        $f82 = f0;

        goto label06;

     label05:
        $f82 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

     label06:
        f12 = $f82;

        $f59 = r1.<android.support.constraint.motion.KeyPosition: float mAltPercentY>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f59);

        if $z3 == 0 goto label07;

        $f83 = 0.0F;

        goto label08;

     label07:
        $f83 = r1.<android.support.constraint.motion.KeyPosition: float mAltPercentY>;

     label08:
        f13 = $f83;

        $f60 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f60);

        if $z4 == 0 goto label09;

        $f84 = f0;

        goto label10;

     label09:
        $f84 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

     label10:
        f14 = $f84;

        $f61 = r1.<android.support.constraint.motion.KeyPosition: float mAltPercentX>;

        $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f61);

        if $z5 == 0 goto label11;

        $f85 = 0.0F;

        goto label12;

     label11:
        $f85 = r1.<android.support.constraint.motion.KeyPosition: float mAltPercentX>;

     label12:
        f15 = $f85;

        r4.<android.support.constraint.motion.MotionPaths: int mMode> = 2;

        $f63 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f62 = f10 * f12;

        $f65 = $f63 + $f62;

        $f64 = f11 * f15;

        $f68 = $f65 + $f64;

        $f66 = f3 * f1;

        $f67 = $f66 / 2.0F;

        $f69 = $f68 - $f67;

        $i6 = (int) $f69;

        $f70 = (float) $i6;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f70;

        $f72 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f71 = f10 * f13;

        $f74 = $f72 + $f71;

        $f73 = f11 * f14;

        $f77 = $f74 + $f73;

        $f75 = f4 * f2;

        $f76 = $f75 / 2.0F;

        $f78 = $f77 - $f76;

        $i7 = (int) $f78;

        $f79 = (float) $i7;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f79;

        $r5 = r1.<android.support.constraint.motion.KeyPosition: java.lang.String mTransitionEasing>;

        $r6 = staticinvoke <android.support.constraint.motion.utils.Easing: android.support.constraint.motion.utils.Easing getInterpolator(java.lang.String)>($r5);

        r4.<android.support.constraint.motion.MotionPaths: android.support.constraint.motion.utils.Easing mKeyFrameEasing> = $r6;

        $i8 = r1.<android.support.constraint.motion.KeyPosition: int mPathMotionArc>;

        r4.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i8;

        return;
    }

    public void <init>(int, int, android.support.constraint.motion.KeyPosition, android.support.constraint.motion.MotionPaths, android.support.constraint.motion.MotionPaths)
    {
        android.support.constraint.motion.MotionPaths r0, r2, r3;
        int i0, i1, $i2, $i3;
        android.support.constraint.motion.KeyPosition r1;
        java.util.LinkedHashMap $r4;
        double[] $r5, $r6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.constraint.motion.KeyPosition;

        r2 := @parameter3: android.support.constraint.motion.MotionPaths;

        r3 := @parameter4: android.support.constraint.motion.MotionPaths;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.motion.MotionPaths: int mDrawPath> = 0;

        r0.<android.support.constraint.motion.MotionPaths: float mPathRotate> = #NaNF;

        r0.<android.support.constraint.motion.MotionPaths: float mProgress> = #NaNF;

        $i2 = <android.support.constraint.motion.Key: int UNSET>;

        r0.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i2;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes> = $r4;

        r0.<android.support.constraint.motion.MotionPaths: int mMode> = 0;

        $r5 = newarray (double)[18];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue> = $r5;

        $r6 = newarray (double)[18];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempDelta> = $r6;

        $i3 = r1.<android.support.constraint.motion.KeyPosition: int mPositionType>;

        tableswitch($i3)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<android.support.constraint.motion.MotionPaths: void initScreen(int,int,android.support.constraint.motion.KeyPosition,android.support.constraint.motion.MotionPaths,android.support.constraint.motion.MotionPaths)>(i0, i1, r1, r2, r3);

        return;

     label2:
        virtualinvoke r0.<android.support.constraint.motion.MotionPaths: void initPath(android.support.constraint.motion.KeyPosition,android.support.constraint.motion.MotionPaths,android.support.constraint.motion.MotionPaths)>(r1, r2, r3);

        return;

     label3:
        virtualinvoke r0.<android.support.constraint.motion.MotionPaths: void initCartesian(android.support.constraint.motion.KeyPosition,android.support.constraint.motion.MotionPaths,android.support.constraint.motion.MotionPaths)>(r1, r2, r3);

        return;
    }

    void initScreen(int, int, android.support.constraint.motion.KeyPosition, android.support.constraint.motion.MotionPaths, android.support.constraint.motion.MotionPaths)
    {
        android.support.constraint.motion.MotionPaths r0, r2, r3, r4;
        android.support.constraint.motion.KeyPosition r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r5;
        android.support.constraint.motion.utils.Easing $r6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        i9 := @parameter0: int;

        i10 := @parameter1: int;

        r1 := @parameter2: android.support.constraint.motion.KeyPosition;

        r2 := @parameter3: android.support.constraint.motion.MotionPaths;

        r3 := @parameter4: android.support.constraint.motion.MotionPaths;

        $i0 = r1.<android.support.constraint.motion.KeyPosition: int mFramePosition>;

        $f12 = (float) $i0;

        f0 = $f12 / 100.0F;

        r4 = r0;

        r4.<android.support.constraint.motion.MotionPaths: float time> = f0;

        $i1 = r1.<android.support.constraint.motion.KeyPosition: int mDrawPath>;

        r0.<android.support.constraint.motion.MotionPaths: int mDrawPath> = $i1;

        $f13 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f13);

        if $z0 == 0 goto label1;

        $f70 = f0;

        goto label2;

     label1:
        $f70 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

     label2:
        f1 = $f70;

        $f14 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f14);

        if $z1 == 0 goto label3;

        $f71 = f0;

        goto label4;

     label3:
        $f71 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

     label4:
        f2 = $f71;

        $f16 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f15 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        f3 = $f16 - $f15;

        $f18 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f17 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        f4 = $f18 - $f17;

        $f19 = r4.<android.support.constraint.motion.MotionPaths: float time>;

        r4.<android.support.constraint.motion.MotionPaths: float position> = $f19;

        f5 = f0;

        $f22 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f20 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f21 = $f20 / 2.0F;

        f6 = $f22 + $f21;

        $f25 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f23 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f24 = $f23 / 2.0F;

        f7 = $f25 + $f24;

        $f28 = r3.<android.support.constraint.motion.MotionPaths: float x>;

        $f26 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f27 = $f26 / 2.0F;

        f8 = $f28 + $f27;

        $f31 = r3.<android.support.constraint.motion.MotionPaths: float y>;

        $f29 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f30 = $f29 / 2.0F;

        f9 = $f31 + $f30;

        f10 = f8 - f6;

        f11 = f9 - f7;

        $f33 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f32 = f10 * f5;

        $f36 = $f33 + $f32;

        $f34 = f3 * f1;

        $f35 = $f34 / 2.0F;

        $f37 = $f36 - $f35;

        $i2 = (int) $f37;

        $f38 = (float) $i2;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f38;

        $f40 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f39 = f11 * f5;

        $f43 = $f40 + $f39;

        $f41 = f4 * f2;

        $f42 = $f41 / 2.0F;

        $f44 = $f43 - $f42;

        $i3 = (int) $f44;

        $f45 = (float) $i3;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f45;

        $f47 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f46 = f3 * f1;

        $f48 = $f47 + $f46;

        $i4 = (int) $f48;

        $f49 = (float) $i4;

        r4.<android.support.constraint.motion.MotionPaths: float width> = $f49;

        $f51 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f50 = f4 * f2;

        $f52 = $f51 + $f50;

        $i5 = (int) $f52;

        $f53 = (float) $i5;

        r4.<android.support.constraint.motion.MotionPaths: float height> = $f53;

        r4.<android.support.constraint.motion.MotionPaths: int mMode> = 3;

        $f54 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f54);

        if $z2 != 0 goto label5;

        $f64 = (float) i9;

        $f63 = r4.<android.support.constraint.motion.MotionPaths: float width>;

        $f65 = $f64 - $f63;

        i11 = (int) $f65;

        $f67 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

        $f66 = (float) i11;

        $f68 = $f67 * $f66;

        $i8 = (int) $f68;

        $f69 = (float) $i8;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f69;

     label5:
        $f55 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f55);

        if $z3 != 0 goto label6;

        $f57 = (float) i10;

        $f56 = r4.<android.support.constraint.motion.MotionPaths: float height>;

        $f58 = $f57 - $f56;

        i12 = (int) $f58;

        $f60 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

        $f59 = (float) i12;

        $f61 = $f60 * $f59;

        $i7 = (int) $f61;

        $f62 = (float) $i7;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f62;

     label6:
        $r5 = r1.<android.support.constraint.motion.KeyPosition: java.lang.String mTransitionEasing>;

        $r6 = staticinvoke <android.support.constraint.motion.utils.Easing: android.support.constraint.motion.utils.Easing getInterpolator(java.lang.String)>($r5);

        r4.<android.support.constraint.motion.MotionPaths: android.support.constraint.motion.utils.Easing mKeyFrameEasing> = $r6;

        $i6 = r1.<android.support.constraint.motion.KeyPosition: int mPathMotionArc>;

        r4.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i6;

        return;
    }

    void initPath(android.support.constraint.motion.KeyPosition, android.support.constraint.motion.MotionPaths, android.support.constraint.motion.MotionPaths)
    {
        android.support.constraint.motion.MotionPaths r0, r2, r3, r4;
        android.support.constraint.motion.KeyPosition r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r5;
        android.support.constraint.motion.utils.Easing $r6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.support.constraint.motion.KeyPosition;

        r2 := @parameter1: android.support.constraint.motion.MotionPaths;

        r3 := @parameter2: android.support.constraint.motion.MotionPaths;

        $i0 = r1.<android.support.constraint.motion.KeyPosition: int mFramePosition>;

        $f17 = (float) $i0;

        f0 = $f17 / 100.0F;

        r4 = r0;

        r4.<android.support.constraint.motion.MotionPaths: float time> = f0;

        $i1 = r1.<android.support.constraint.motion.KeyPosition: int mDrawPath>;

        r0.<android.support.constraint.motion.MotionPaths: int mDrawPath> = $i1;

        $f18 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f18);

        if $z0 == 0 goto label1;

        $f79 = f0;

        goto label2;

     label1:
        $f79 = r1.<android.support.constraint.motion.KeyPosition: float mPercentWidth>;

     label2:
        f1 = $f79;

        $f19 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f19);

        if $z1 == 0 goto label3;

        $f80 = f0;

        goto label4;

     label3:
        $f80 = r1.<android.support.constraint.motion.KeyPosition: float mPercentHeight>;

     label4:
        f2 = $f80;

        $f21 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f20 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        f3 = $f21 - $f20;

        $f23 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f22 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        f4 = $f23 - $f22;

        $f24 = r4.<android.support.constraint.motion.MotionPaths: float time>;

        r4.<android.support.constraint.motion.MotionPaths: float position> = $f24;

        $f25 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f25);

        if $z2 == 0 goto label5;

        $f81 = f0;

        goto label6;

     label5:
        $f81 = r1.<android.support.constraint.motion.KeyPosition: float mPercentX>;

     label6:
        f5 = $f81;

        $f28 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f26 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f27 = $f26 / 2.0F;

        f6 = $f28 + $f27;

        $f31 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f29 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f30 = $f29 / 2.0F;

        f7 = $f31 + $f30;

        $f34 = r3.<android.support.constraint.motion.MotionPaths: float x>;

        $f32 = r3.<android.support.constraint.motion.MotionPaths: float width>;

        $f33 = $f32 / 2.0F;

        f8 = $f34 + $f33;

        $f37 = r3.<android.support.constraint.motion.MotionPaths: float y>;

        $f35 = r3.<android.support.constraint.motion.MotionPaths: float height>;

        $f36 = $f35 / 2.0F;

        f9 = $f37 + $f36;

        f10 = f8 - f6;

        f11 = f9 - f7;

        $f39 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f38 = f10 * f5;

        $f42 = $f39 + $f38;

        $f40 = f3 * f1;

        $f41 = $f40 / 2.0F;

        $f43 = $f42 - $f41;

        $i2 = (int) $f43;

        $f44 = (float) $i2;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f44;

        $f46 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f45 = f11 * f5;

        $f49 = $f46 + $f45;

        $f47 = f4 * f2;

        $f48 = $f47 / 2.0F;

        $f50 = $f49 - $f48;

        $i3 = (int) $f50;

        $f51 = (float) $i3;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f51;

        $f53 = r2.<android.support.constraint.motion.MotionPaths: float width>;

        $f52 = f3 * f1;

        $f54 = $f53 + $f52;

        $i4 = (int) $f54;

        $f55 = (float) $i4;

        r4.<android.support.constraint.motion.MotionPaths: float width> = $f55;

        $f57 = r2.<android.support.constraint.motion.MotionPaths: float height>;

        $f56 = f4 * f2;

        $f58 = $f57 + $f56;

        $i5 = (int) $f58;

        $f59 = (float) $i5;

        r4.<android.support.constraint.motion.MotionPaths: float height> = $f59;

        $f60 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f60);

        if $z3 == 0 goto label7;

        $f82 = 0.0F;

        goto label8;

     label7:
        $f82 = r1.<android.support.constraint.motion.KeyPosition: float mPercentY>;

     label8:
        f12 = $f82;

        f13 = neg f11;

        f14 = f10;

        f15 = f13 * f12;

        f16 = f14 * f12;

        r4.<android.support.constraint.motion.MotionPaths: int mMode> = 1;

        $f62 = r2.<android.support.constraint.motion.MotionPaths: float x>;

        $f61 = f10 * f5;

        $f65 = $f62 + $f61;

        $f63 = f3 * f1;

        $f64 = $f63 / 2.0F;

        $f66 = $f65 - $f64;

        $i6 = (int) $f66;

        $f67 = (float) $i6;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f67;

        $f69 = r2.<android.support.constraint.motion.MotionPaths: float y>;

        $f68 = f11 * f5;

        $f72 = $f69 + $f68;

        $f70 = f4 * f2;

        $f71 = $f70 / 2.0F;

        $f73 = $f72 - $f71;

        $i7 = (int) $f73;

        $f74 = (float) $i7;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f74;

        $f75 = r4.<android.support.constraint.motion.MotionPaths: float x>;

        $f76 = $f75 + f15;

        r4.<android.support.constraint.motion.MotionPaths: float x> = $f76;

        $f77 = r4.<android.support.constraint.motion.MotionPaths: float y>;

        $f78 = $f77 + f16;

        r4.<android.support.constraint.motion.MotionPaths: float y> = $f78;

        $r5 = r1.<android.support.constraint.motion.KeyPosition: java.lang.String mTransitionEasing>;

        $r6 = staticinvoke <android.support.constraint.motion.utils.Easing: android.support.constraint.motion.utils.Easing getInterpolator(java.lang.String)>($r5);

        r4.<android.support.constraint.motion.MotionPaths: android.support.constraint.motion.utils.Easing mKeyFrameEasing> = $r6;

        $i8 = r1.<android.support.constraint.motion.KeyPosition: int mPathMotionArc>;

        r4.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i8;

        return;
    }

    private static final float xRotate(float, float, float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f8 := @parameter4: float;

        f9 := @parameter5: float;

        f10 = f8 - f2;

        f11 = f9 - f3;

        $f5 = f10 * f1;

        $f4 = f11 * f0;

        $f6 = $f5 - $f4;

        $f7 = $f6 + f2;

        return $f7;
    }

    private static final float yRotate(float, float, float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f8 := @parameter4: float;

        f9 := @parameter5: float;

        f10 = f8 - f2;

        f11 = f9 - f3;

        $f5 = f10 * f0;

        $f4 = f11 * f1;

        $f6 = $f5 + $f4;

        $f7 = $f6 + f3;

        return $f7;
    }

    private boolean diff(float, float)
    {
        android.support.constraint.motion.MotionPaths r0;
        float f0, f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z3 == 0 goto label4;

     label1:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 == $z2 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $f2 = f0 - f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $b0 = $f3 cmpl 1.0E-6F;

        if $b0 <= 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    void different(android.support.constraint.motion.MotionPaths, boolean[], java.lang.String[], boolean)
    {
        android.support.constraint.motion.MotionPaths r0, r1;
        boolean[] r2;
        java.lang.String[] r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte b5;
        int i6, i7, i8, i9, i10;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.support.constraint.motion.MotionPaths;

        r2 := @parameter1: boolean[];

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        b5 = 0;

        i6 = b5 + 1;

        $z1 = r2[b5];

        $f1 = r0.<android.support.constraint.motion.MotionPaths: float position>;

        $f0 = r1.<android.support.constraint.motion.MotionPaths: float position>;

        $z2 = specialinvoke r0.<android.support.constraint.motion.MotionPaths: boolean diff(float,float)>($f1, $f0);

        $z3 = $z1 | $z2;

        r2[b5] = $z3;

        i7 = i6 + 1;

        $z4 = r2[i6];

        $f3 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        $f2 = r1.<android.support.constraint.motion.MotionPaths: float x>;

        $z5 = specialinvoke r0.<android.support.constraint.motion.MotionPaths: boolean diff(float,float)>($f3, $f2);

        $z6 = $z5 | z0;

        $z7 = $z4 | $z6;

        r2[i6] = $z7;

        i8 = i7 + 1;

        $z8 = r2[i7];

        $f5 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        $f4 = r1.<android.support.constraint.motion.MotionPaths: float y>;

        $z9 = specialinvoke r0.<android.support.constraint.motion.MotionPaths: boolean diff(float,float)>($f5, $f4);

        $z10 = $z9 | z0;

        $z11 = $z8 | $z10;

        r2[i7] = $z11;

        i9 = i8 + 1;

        $z12 = r2[i8];

        $f7 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        $f6 = r1.<android.support.constraint.motion.MotionPaths: float width>;

        $z13 = specialinvoke r0.<android.support.constraint.motion.MotionPaths: boolean diff(float,float)>($f7, $f6);

        $z14 = $z12 | $z13;

        r2[i8] = $z14;

        i10 = i9 + 1;

        $z15 = r2[i9];

        $f9 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        $f8 = r1.<android.support.constraint.motion.MotionPaths: float height>;

        $z16 = specialinvoke r0.<android.support.constraint.motion.MotionPaths: boolean diff(float,float)>($f9, $f8);

        $z17 = $z15 | $z16;

        r2[i9] = $z17;

        return;
    }

    void getCenter(int[], double[], float[], int)
    {
        android.support.constraint.motion.MotionPaths r0;
        int[] r1;
        double[] r2;
        float[] r3;
        int i0, $i1, $i2, $i3, i4;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11, f12;
        double $d0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: int[];

        r2 := @parameter1: double[];

        r3 := @parameter2: float[];

        i0 := @parameter3: int;

        f9 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        f10 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        f11 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        f12 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        f0 = 0.0F;

        f1 = 0.0F;

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label7;

        $d0 = r2[i4];

        f2 = (float) $d0;

        $i3 = r1[i4];

        tableswitch($i3)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        f9 = f2;

        goto label6;

     label3:
        f10 = f2;

        goto label6;

     label4:
        f11 = f2;

        goto label6;

     label5:
        f12 = f2;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $f3 = f11 / 2.0F;

        $f4 = f9 + $f3;

        $f5 = $f4 + f0;

        r3[i0] = $f5;

        $i2 = i0 + 1;

        $f6 = f12 / 2.0F;

        $f7 = f10 + $f6;

        $f8 = $f7 + f1;

        r3[$i2] = $f8;

        return;
    }

    void getBounds(int[], double[], float[], int)
    {
        android.support.constraint.motion.MotionPaths r0;
        int[] r1;
        double[] r2;
        float[] r3;
        int i0, $i1, $i2, $i3, i4;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8;
        double $d0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: int[];

        r2 := @parameter1: double[];

        r3 := @parameter2: float[];

        i0 := @parameter3: int;

        f3 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        f4 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        f5 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        f6 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        f0 = 0.0F;

        f1 = 0.0F;

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label7;

        $d0 = r2[i4];

        f2 = (float) $d0;

        $i3 = r1[i4];

        tableswitch($i3)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        f7 = f2;

        goto label6;

     label3:
        f8 = f2;

        goto label6;

     label4:
        f5 = f2;

        goto label6;

     label5:
        f6 = f2;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        r3[i0] = f5;

        $i2 = i0 + 1;

        r3[$i2] = f6;

        return;
    }

    void setView(android.view.View, int[], double[], double[], double[])
    {
        android.support.constraint.motion.MotionPaths r0;
        android.view.View r1;
        int[] r2;
        double[] r3, r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        float f0, $f1, $f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, $f16, f17, f18, f19, f20, $f21, $f22, $f23, $f24, $f25, $f26;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, i19, i20, i21, i22, i23, i24, $i25;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17;
        byte $b6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: int[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        f3 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        f4 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        f5 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        f6 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        f7 = 0.0F;

        f8 = 0.0F;

        f9 = 0.0F;

        f10 = 0.0F;

        f11 = 0.0F;

        f0 = #NaNF;

        f12 = #NaNF;

        $i3 = lengthof r2;

        if $i3 == 0 goto label01;

        $r13 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $i12 = lengthof $r13;

        $i9 = lengthof r2;

        $i10 = $i9 - 1;

        $i11 = r2[$i10];

        if $i12 > $i11 goto label01;

        $i13 = lengthof r2;

        $i14 = $i13 - 1;

        $i15 = r2[$i14];

        i16 = $i15 + 1;

        $r14 = newarray (double)[i16];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue> = $r14;

        $r15 = newarray (double)[i16];

        r0.<android.support.constraint.motion.MotionPaths: double[] mTempDelta> = $r15;

     label01:
        $r16 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r16, #NaN);

        i17 = 0;

     label02:
        $i18 = lengthof r2;

        if i17 >= $i18 goto label03;

        $r11 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $i7 = r2[i17];

        $d13 = r3[i17];

        $r11[$i7] = $d13;

        $r12 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempDelta>;

        $i8 = r2[i17];

        $d14 = r4[i17];

        $r12[$i8] = $d14;

        i17 = i17 + 1;

        goto label02;

     label03:
        i19 = 0;

     label04:
        $r6 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $i4 = lengthof $r6;

        if i19 >= $i4 goto label17;

        $r7 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $d8 = $r7[i19];

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d8);

        if $z4 == 0 goto label05;

        if r5 == null goto label16;

        $d12 = r5[i19];

        $b6 = $d12 cmpl 0.0;

        if $b6 != 0 goto label05;

        goto label16;

     label05:
        if r5 == null goto label06;

        $d15 = r5[i19];

        goto label07;

     label06:
        $d15 = 0.0;

     label07:
        d16 = $d15;

        $r8 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $d9 = $r8[i19];

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d9);

        if $z5 == 0 goto label08;

        $d17 = d16;

        goto label09;

     label08:
        $r9 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempValue>;

        $d10 = $r9[i19];

        $d17 = $d10 + d16;

     label09:
        f13 = (float) $d17;

        $r10 = r0.<android.support.constraint.motion.MotionPaths: double[] mTempDelta>;

        $d11 = $r10[i19];

        f14 = (float) $d11;

        tableswitch(i19)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            default: goto label16;
        };

     label10:
        f15 = f13;

        goto label16;

     label11:
        f3 = f13;

        f7 = f14;

        goto label16;

     label12:
        f4 = f13;

        f8 = f14;

        goto label16;

     label13:
        f5 = f13;

        f9 = f14;

        goto label16;

     label14:
        f6 = f13;

        f10 = f14;

        goto label16;

     label15:
        f12 = f13;

     label16:
        i19 = i19 + 1;

        goto label04;

     label17:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f12);

        if $z1 == 0 goto label18;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z3 != 0 goto label21;

        virtualinvoke r1.<android.view.View: void setRotation(float)>(f0);

        goto label21;

     label18:
        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z2 == 0 goto label19;

        $f16 = 0.0F;

        goto label20;

     label19:
        $f16 = f0;

     label20:
        f17 = $f16;

        $f1 = f9 / 2.0F;

        f18 = f7 + $f1;

        $f2 = f10 / 2.0F;

        f19 = f8 + $f2;

        $d2 = (double) f17;

        $d3 = (double) f12;

        $d1 = (double) f19;

        $d0 = (double) f18;

        $d4 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        $d6 = $d3 + $d5;

        $d7 = $d2 + $d6;

        f20 = (float) $d7;

        virtualinvoke r1.<android.view.View: void setRotation(float)>(f20);

     label21:
        $f21 = 0.5F + f3;

        i20 = (int) $f21;

        $f22 = 0.5F + f4;

        i21 = (int) $f22;

        $f23 = 0.5F + f3;

        $f24 = $f23 + f5;

        i22 = (int) $f24;

        $f25 = 0.5F + f4;

        $f26 = $f25 + f6;

        i23 = (int) $f26;

        i24 = i22 - i20;

        i0 = i23 - i21;

        $i25 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        if i24 != $i25 goto label22;

        $i5 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i0 == $i5 goto label23;

     label22:
        $z6 = 1;

        goto label24;

     label23:
        $z6 = 0;

     label24:
        z0 = $z6;

        if z0 == 0 goto label25;

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i24, 1073741824);

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i0, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i1, i2);

     label25:
        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i20, i21, i22, i23);

        return;
    }

    void getRect(int[], double[], float[], int)
    {
        android.support.constraint.motion.MotionPaths r0;
        int[] r1;
        double[] r2;
        float[] r3;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63, f64, f65, f66, f67, f68, f69, f70;
        int $i0, $i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0, $z1;
        byte $b1, $b2, $b3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: int[];

        r2 := @parameter1: double[];

        r3 := @parameter2: float[];

        i5 := @parameter3: int;

        f43 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        f44 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        f45 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        f46 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        f47 = 0.0F;

        f0 = 0.0F;

        f1 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        f4 = 1.0F;

        f5 = 1.0F;

        f6 = #NaNF;

        f7 = #NaNF;

        f8 = 0.0F;

        f9 = 0.0F;

        i6 = 0;

     label01:
        $i0 = lengthof r1;

        if i6 >= $i0 goto label08;

        $d6 = r2[i6];

        f48 = (float) $d6;

        $i4 = r1[i6];

        tableswitch($i4)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            default: goto label07;
        };

     label02:
        f49 = f48;

        goto label07;

     label03:
        f43 = f48;

        goto label07;

     label04:
        f44 = f48;

        goto label07;

     label05:
        f45 = f48;

        goto label07;

     label06:
        f46 = f48;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        f50 = f43;

        f51 = f44;

        f52 = f43 + f45;

        f53 = f51;

        f54 = f52;

        f55 = f44 + f46;

        f56 = f50;

        f57 = f55;

        $f19 = f45 / 2.0F;

        f58 = f50 + $f19;

        $f20 = f46 / 2.0F;

        f59 = f51 + $f20;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f6);

        if $z0 != 0 goto label09;

        $f41 = f52 - f50;

        $f42 = $f41 * f6;

        f58 = f50 + $f42;

     label09:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f7);

        if $z1 != 0 goto label10;

        $f39 = f55 - f51;

        $f40 = $f39 * f7;

        f59 = f51 + $f40;

     label10:
        $b1 = f4 cmpl 1.0F;

        if $b1 == 0 goto label11;

        $f30 = f50 + f52;

        f60 = $f30 / 2.0F;

        $f31 = f50 - f60;

        $f32 = $f31 * f4;

        f50 = $f32 + f60;

        $f33 = f52 - f60;

        $f34 = $f33 * f4;

        f52 = $f34 + f60;

        $f35 = f54 - f60;

        $f36 = $f35 * f4;

        f54 = $f36 + f60;

        $f37 = f56 - f60;

        $f38 = $f37 * f4;

        f56 = $f38 + f60;

     label11:
        $b2 = f5 cmpl 1.0F;

        if $b2 == 0 goto label12;

        $f21 = f51 + f55;

        f61 = $f21 / 2.0F;

        $f22 = f51 - f61;

        $f23 = $f22 * f5;

        f51 = $f23 + f61;

        $f24 = f53 - f61;

        $f25 = $f24 * f5;

        f53 = $f25 + f61;

        $f26 = f55 - f61;

        $f27 = $f26 * f5;

        f55 = $f27 + f61;

        $f28 = f57 - f61;

        $f29 = $f28 * f5;

        f57 = $f29 + f61;

     label12:
        $b3 = f0 cmpl 0.0F;

        if $b3 == 0 goto label13;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        f62 = (float) $d2;

        $d3 = (double) f0;

        $d4 = staticinvoke <java.lang.Math: double toRadians(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        f10 = (float) $d5;

        f11 = staticinvoke <android.support.constraint.motion.MotionPaths: float xRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f50, f51);

        f12 = staticinvoke <android.support.constraint.motion.MotionPaths: float yRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f50, f51);

        f13 = staticinvoke <android.support.constraint.motion.MotionPaths: float xRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f52, f53);

        f14 = staticinvoke <android.support.constraint.motion.MotionPaths: float yRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f52, f53);

        f15 = staticinvoke <android.support.constraint.motion.MotionPaths: float xRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f54, f55);

        f16 = staticinvoke <android.support.constraint.motion.MotionPaths: float yRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f54, f55);

        f17 = staticinvoke <android.support.constraint.motion.MotionPaths: float xRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f56, f57);

        f18 = staticinvoke <android.support.constraint.motion.MotionPaths: float yRotate(float,float,float,float,float,float)>(f62, f10, f58, f59, f56, f57);

        f50 = f11;

        f51 = f12;

        f52 = f13;

        f53 = f14;

        f54 = f15;

        f55 = f16;

        f56 = f17;

        f57 = f18;

     label13:
        f63 = f50 + f8;

        f64 = f51 + f9;

        f65 = f52 + f8;

        f66 = f53 + f9;

        f67 = f54 + f8;

        f68 = f55 + f9;

        f69 = f56 + f8;

        f70 = f57 + f9;

        i7 = i5 + 1;

        r3[i5] = f63;

        i8 = i7 + 1;

        r3[i7] = f64;

        i9 = i8 + 1;

        r3[i8] = f65;

        i10 = i9 + 1;

        r3[i9] = f66;

        i11 = i10 + 1;

        r3[i10] = f67;

        i12 = i11 + 1;

        r3[i11] = f68;

        i13 = i12 + 1;

        r3[i12] = f69;

        i14 = i13 + 1;

        r3[i13] = f70;

        return;
    }

    void setDpDt(float, float, float[], int[], double[], double[])
    {
        android.support.constraint.motion.MotionPaths r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26, f27, f28, f29, f30, f31, f32, f33, f34;
        float[] r1;
        int[] r2;
        double[] r3, r4;
        java.lang.String r5;
        int $i0, $i1, i2;
        double $d0, $d1;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: float[];

        r2 := @parameter3: int[];

        r3 := @parameter4: double[];

        r4 := @parameter5: double[];

        f26 = 0.0F;

        f27 = 0.0F;

        f28 = 0.0F;

        f29 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        f4 = #NaNF;

        f5 = 0.0F;

        f6 = 0.0F;

        r5 = " dd = ";

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label8;

        $d0 = r3[i2];

        f30 = (float) $d0;

        $d1 = r4[i2];

        f31 = (float) $d1;

        $i1 = r2[i2];

        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label2:
        goto label7;

     label3:
        f26 = f30;

        goto label7;

     label4:
        f27 = f30;

        goto label7;

     label5:
        f28 = f30;

        goto label7;

     label6:
        f29 = f30;

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        $f10 = f2 * f28;

        $f11 = $f10 / 2.0F;

        f32 = f26 - $f11;

        $f12 = f3 * f29;

        $f13 = $f12 / 2.0F;

        f33 = f27 - $f13;

        $f14 = 1.0F + f2;

        f34 = f28 * $f14;

        $f15 = 1.0F + f3;

        f7 = f29 * $f15;

        f8 = f32 + f34;

        f9 = f33 + f7;

        $f16 = 1.0F - f0;

        $f18 = f32 * $f16;

        $f17 = f8 * f0;

        $f19 = $f18 + $f17;

        $f20 = $f19 + f5;

        r1[0] = $f20;

        $f21 = 1.0F - f1;

        $f23 = f33 * $f21;

        $f22 = f9 * f1;

        $f24 = $f23 + $f22;

        $f25 = $f24 + f6;

        r1[1] = $f25;

        return;
    }

    void fillStandard(double[], int[])
    {
        android.support.constraint.motion.MotionPaths r0;
        double[] r1;
        int[] r2;
        float[] r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        double $d0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: double[];

        r2 := @parameter1: int[];

        $r4 = newarray (float)[6];

        $f0 = r0.<android.support.constraint.motion.MotionPaths: float position>;

        $r4[0] = $f0;

        $f1 = r0.<android.support.constraint.motion.MotionPaths: float x>;

        $r4[1] = $f1;

        $f2 = r0.<android.support.constraint.motion.MotionPaths: float y>;

        $r4[2] = $f2;

        $f3 = r0.<android.support.constraint.motion.MotionPaths: float width>;

        $r4[3] = $f3;

        $f4 = r0.<android.support.constraint.motion.MotionPaths: float height>;

        $r4[4] = $f4;

        $f5 = r0.<android.support.constraint.motion.MotionPaths: float mPathRotate>;

        $r4[5] = $f5;

        r3 = $r4;

        i5 = 0;

        i6 = 0;

     label1:
        $i0 = lengthof r2;

        if i6 >= $i0 goto label3;

        $i2 = r2[i6];

        $i1 = lengthof r3;

        if $i2 >= $i1 goto label2;

        $i3 = i5;

        i5 = i5 + 1;

        $i4 = r2[i6];

        $f6 = r3[$i4];

        $d0 = (double) $f6;

        r1[$i3] = $d0;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    boolean hasCustomData(java.lang.String)
    {
        android.support.constraint.motion.MotionPaths r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes>;

        $z0 = virtualinvoke $r2.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    int getCustomDataCount(java.lang.String)
    {
        android.support.constraint.motion.MotionPaths r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r2;
        java.lang.Object $r3;
        android.support.constraint.ConstraintAttribute $r4;
        int $i0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.support.constraint.ConstraintAttribute) $r3;

        $i0 = virtualinvoke $r4.<android.support.constraint.ConstraintAttribute: int noOfInterpValues()>();

        return $i0;
    }

    int getCustomData(java.lang.String, double[], int)
    {
        android.support.constraint.motion.MotionPaths r0;
        java.lang.String r1;
        double[] r2;
        android.support.constraint.ConstraintAttribute r3;
        int i0, $i1, $i2, i3, i4;
        float[] r4;
        java.util.LinkedHashMap $r5;
        java.lang.Object $r6;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        i3 := @parameter2: int;

        $r5 = r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.support.constraint.ConstraintAttribute) $r6;

        $i1 = virtualinvoke r3.<android.support.constraint.ConstraintAttribute: int noOfInterpValues()>();

        if $i1 != 1 goto label1;

        $f1 = virtualinvoke r3.<android.support.constraint.ConstraintAttribute: float getValueToInterpolate()>();

        $d1 = (double) $f1;

        r2[i3] = $d1;

        return 1;

     label1:
        i0 = virtualinvoke r3.<android.support.constraint.ConstraintAttribute: int noOfInterpValues()>();

        r4 = newarray (float)[i0];

        virtualinvoke r3.<android.support.constraint.ConstraintAttribute: void getValuesToInterpolate(float[])>(r4);

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $i2 = i3;

        i3 = i3 + 1;

        $f0 = r4[i4];

        $d0 = (double) $f0;

        r2[$i2] = $d0;

        i4 = i4 + 1;

        goto label2;

     label3:
        return i0;
    }

    void setBounds(float, float, float, float)
    {
        android.support.constraint.motion.MotionPaths r0;
        float f0, f1, f2, f3;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0.<android.support.constraint.motion.MotionPaths: float x> = f0;

        r0.<android.support.constraint.motion.MotionPaths: float y> = f1;

        r0.<android.support.constraint.motion.MotionPaths: float width> = f2;

        r0.<android.support.constraint.motion.MotionPaths: float height> = f3;

        return;
    }

    public int compareTo(android.support.constraint.motion.MotionPaths)
    {
        android.support.constraint.motion.MotionPaths r0, r1;
        float $f0, $f1;
        int $i0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.support.constraint.motion.MotionPaths;

        $f1 = r0.<android.support.constraint.motion.MotionPaths: float position>;

        $f0 = r1.<android.support.constraint.motion.MotionPaths: float position>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        return $i0;
    }

    public void applyParameters(android.support.constraint.ConstraintSet$Constraint)
    {
        android.support.constraint.motion.MotionPaths r0, r2;
        android.support.constraint.ConstraintSet$Constraint r1;
        java.util.Set r3;
        java.util.Iterator r4;
        java.lang.String r5, $r8;
        android.support.constraint.ConstraintAttribute r6;
        android.support.constraint.ConstraintSet$Motion $r7, $r10, $r11, $r12;
        android.support.constraint.motion.utils.Easing $r9;
        int $i0, $i1;
        float $f0, $f1;
        android.support.constraint.ConstraintSet$PropertySet $r13;
        java.util.HashMap $r14, $r16;
        boolean $z0;
        java.lang.Object $r15, $r17;
        android.support.constraint.ConstraintAttribute$AttributeType $r18, $r19;
        java.util.LinkedHashMap $r20;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: android.support.constraint.ConstraintSet$Constraint;

        r2 = r0;

        $r7 = r1.<android.support.constraint.ConstraintSet$Constraint: android.support.constraint.ConstraintSet$Motion motion>;

        $r8 = $r7.<android.support.constraint.ConstraintSet$Motion: java.lang.String mTransitionEasing>;

        $r9 = staticinvoke <android.support.constraint.motion.utils.Easing: android.support.constraint.motion.utils.Easing getInterpolator(java.lang.String)>($r8);

        r2.<android.support.constraint.motion.MotionPaths: android.support.constraint.motion.utils.Easing mKeyFrameEasing> = $r9;

        $r10 = r1.<android.support.constraint.ConstraintSet$Constraint: android.support.constraint.ConstraintSet$Motion motion>;

        $i0 = $r10.<android.support.constraint.ConstraintSet$Motion: int mPathMotionArc>;

        r2.<android.support.constraint.motion.MotionPaths: int mPathMotionArc> = $i0;

        $r11 = r1.<android.support.constraint.ConstraintSet$Constraint: android.support.constraint.ConstraintSet$Motion motion>;

        $f0 = $r11.<android.support.constraint.ConstraintSet$Motion: float mPathRotate>;

        r2.<android.support.constraint.motion.MotionPaths: float mPathRotate> = $f0;

        $r12 = r1.<android.support.constraint.ConstraintSet$Constraint: android.support.constraint.ConstraintSet$Motion motion>;

        $i1 = $r12.<android.support.constraint.ConstraintSet$Motion: int mDrawPath>;

        r2.<android.support.constraint.motion.MotionPaths: int mDrawPath> = $i1;

        $r13 = r1.<android.support.constraint.ConstraintSet$Constraint: android.support.constraint.ConstraintSet$PropertySet propertySet>;

        $f1 = $r13.<android.support.constraint.ConstraintSet$PropertySet: float mProgress>;

        r2.<android.support.constraint.motion.MotionPaths: float mProgress> = $f1;

        $r14 = r1.<android.support.constraint.ConstraintSet$Constraint: java.util.HashMap mCustomConstraints>;

        r3 = virtualinvoke $r14.<java.util.HashMap: java.util.Set keySet()>();

        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r15;

        $r16 = r1.<android.support.constraint.ConstraintSet$Constraint: java.util.HashMap mCustomConstraints>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.support.constraint.ConstraintAttribute) $r17;

        $r18 = virtualinvoke r6.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType getType()>();

        $r19 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE>;

        if $r18 == $r19 goto label2;

        $r20 = r0.<android.support.constraint.motion.MotionPaths: java.util.LinkedHashMap attributes>;

        virtualinvoke $r20.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label2:
        goto label1;

     label3:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.support.constraint.motion.MotionPaths r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.support.constraint.motion.MotionPaths;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.constraint.motion.MotionPaths) r1;

        $i0 = virtualinvoke r0.<android.support.constraint.motion.MotionPaths: int compareTo(android.support.constraint.motion.MotionPaths)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "position";

        $r0[1] = "x";

        $r0[2] = "y";

        $r0[3] = "width";

        $r0[4] = "height";

        $r0[5] = "pathRotate";

        <android.support.constraint.motion.MotionPaths: java.lang.String[] names> = $r0;

        return;
    }

