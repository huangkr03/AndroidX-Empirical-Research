android.support.v4.view.ViewConfigurationCompat
<android.support.v4.view.ViewConfigurationCompat: java.lang.String TAG>
<android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration r0;
        int $i0;

        r0 := @parameter0: android.view.ViewConfiguration;

        $i0 = virtualinvoke r0.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        return $i0;
    }

    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration r0;
        boolean $z0;

        r0 := @parameter0: android.view.ViewConfiguration;

        $z0 = virtualinvoke r0.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        return $z0;
    }

    public static float getScaledHorizontalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration r0;
        android.content.Context r1;
        int $i0;
        float $f0, $f1;

        r0 := @parameter0: android.view.ViewConfiguration;

        r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $f1 = virtualinvoke r0.<android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>();

        return $f1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r0, r1);

        return $f0;
    }

    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration r0;
        android.content.Context r1;
        int $i0;
        float $f0, $f1;

        r0 := @parameter0: android.view.ViewConfiguration;

        r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $f1 = virtualinvoke r0.<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>();

        return $f1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r0, r1);

        return $f0;
    }

    private static float getLegacyScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration r0;
        android.content.Context r1;
        int $i0, $i1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0, $f1;
        java.lang.reflect.Method $r4, $r6;
        java.lang.Object[] $r5;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        java.lang.Throwable $r9, r10;
        android.util.TypedValue $r11, r12;
        android.content.res.Resources$Theme $r13;
        boolean $z0;

        r0 := @parameter0: android.view.ViewConfiguration;

        r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 25 goto label4;

        $r4 = <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>;

        if $r4 == null goto label4;

     label1:
        $r6 = <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i1;

     label2:
        return $f1;

     label3:
        $r9 := @caughtexception;

        r10 = $r9;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        $r11 = new android.util.TypedValue;

        specialinvoke $r11.<android.util.TypedValue: void <init>()>();

        r12 = $r11;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r13.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, r12, 1);

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r12.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r3);

        return $f0;

     label5:
        return 0.0F;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getScaledHoverSlop(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: android.view.ViewConfiguration;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $i3 = virtualinvoke r0.<android.view.ViewConfiguration: int getScaledHoverSlop()>();

        return $i3;

     label1:
        $i1 = virtualinvoke r0.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $i2 = $i1 / 2;

        return $i2;
    }

    public static boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.view.ViewConfiguration;

        r1 := @parameter1: android.content.Context;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $z1 = virtualinvoke r0.<android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>();

        return $z1;

     label1:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_showMenuShortcutsWhenKeyboardPresent", "bool", "android");

        if i0 == 0 goto label2;

        $z0 = virtualinvoke r2.<android.content.res.Resources: boolean getBoolean(int)>(i0);

        if $z0 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void <init>()
    {
        android.support.v4.view.ViewConfigurationCompat r0;

        r0 := @this: android.support.v4.view.ViewConfigurationCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Throwable r0, $r4;
        int $i0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 25 goto label4;

     label1:
        $r2 = class "Landroid/view/ViewConfiguration;";

        $r1 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getScaledScrollFactor", $r1);

        <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0 = $r4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

