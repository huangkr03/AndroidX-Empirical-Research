android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite
<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int memoizedHashCode>
<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: boolean usingExperimentalRuntime>
    public void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int memoizedHashCode> = 0;

        return;
    }

    static void useExperimentalRuntime()
    {
        <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: boolean usingExperimentalRuntime> = 1;

        return;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.ByteString toByteString()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        int $i0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString $r2;
        java.lang.Throwable $r3, r7, r9;
        java.lang.String $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r6;
        java.lang.RuntimeException r8;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

     label1:
        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize()>();

        r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ByteString: android.support.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder newCodedBuilder(int)>($i0);

        $r1 = virtualinvoke r6.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream getCodedOutput()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>($r1);

        $r2 = virtualinvoke r6.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: android.support.test.espresso.remote.internal.deps.protobuf.ByteString build()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r7 = $r3;

        r8 = new java.lang.RuntimeException;

        $r5 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: java.lang.String getSerializingExceptionMessage(java.lang.String)>("ByteString");

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] toByteArray()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r1;
        int $i0;
        java.lang.Throwable $r2, r6, r8;
        java.lang.String $r4;
        byte[] r5;
        java.lang.RuntimeException r7;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

     label1:
        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize()>();

        r5 = newarray (byte)[$i0];

        r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[])>(r5);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r1);

        virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void checkNoSpaceLeft()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        r6 = $r2;

        r7 = new java.lang.RuntimeException;

        $r4 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: java.lang.String getSerializingExceptionMessage(java.lang.String)>("byte array");

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.io.OutputStream r1;
        int i0, $i1;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: java.io.OutputStream;

        $i1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize()>();

        i0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>($i1);

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>(r1, i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r2);

        virtualinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void flush()>();

        return;
    }

    public void writeDelimitedTo(java.io.OutputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: java.io.OutputStream;

        i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize()>();

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>(i0);

        $i3 = $i2 + i0;

        i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>($i3);

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>(r1, i1);

        virtualinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeRawVarint32(int)>(i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r2);

        virtualinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void flush()>();

        return;
    }

    int getMemoizedSerializedSize()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void setMemoizedSerializedSize(int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.MutableMessageLite mutableCopy()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("mutableCopy() is not implemented.");

        throw $r1;
    }

    protected final boolean isInitializedInternal()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r2 = virtualinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Object)>(r0);

        $z0 = interfaceinvoke $r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: boolean isInitialized(java.lang.Object)>(r0);

        return $z0;
    }

    protected final int getSerializedSizeInternal()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r2;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r2 = virtualinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Object)>(r0);

        $i0 = interfaceinvoke $r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: int getSerializedSize(java.lang.Object)>(r0);

        return $i0;
    }

    int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r1;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getMemoizedSerializedSize()>();

        if i0 != -1 goto label1;

        i0 = interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: int getSerializedSize(java.lang.Object)>(r0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: void setMemoizedSerializedSize(int)>(i0);

     label1:
        return i0;
    }

    protected final void writeToInternal(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r2;
        java.lang.Class $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r4;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r5;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r3 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: java.lang.Class getClassInternal()>();

        $r4 = virtualinvoke $r2.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>($r3);

        $r5 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter forCodedOutput(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r1);

        interfaceinvoke $r4.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Writer)>(r0, $r5);

        return;
    }

    protected void mergeFromInternal(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Throwable r3, $r8, r12;
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r4;
        java.lang.Class $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r6;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStreamReader $r7;
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r10, r11;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

     label1:
        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r5 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: java.lang.Class getClassInternal()>();

        $r6 = virtualinvoke $r4.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>($r5);

        $r7 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStreamReader: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStreamReader forCodedInput(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream)>(r1);

        interfaceinvoke $r6.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void mergeFrom(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Reader,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r0, $r7, r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        r11 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke r11.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.io.IOException)>(r3);

        $r10 = virtualinvoke r11.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException setUnfinishedMessage(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r0);

        r12 = (java.lang.Throwable) $r10;

        throw r12;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void makeImmutableInternal()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r1;
        java.lang.Class $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r2 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: java.lang.Class getClassInternal()>();

        $r3 = virtualinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>($r2);

        interfaceinvoke $r3.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void makeImmutable(java.lang.Object)>(r0);

        return;
    }

    private java.lang.Class getClassInternal()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.lang.Class $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException newUninitializedMessageException()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        $r1 = new android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r0);

        return $r1;
    }

    private java.lang.String getSerializingExceptionMessage(java.lang.String)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite r0;
        java.lang.String r1, r2, $r4, $r5, $r12;
        java.lang.Class $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = 62 + $i0;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Serializing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw an IOException (should never happen).");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    protected static void checkByteStringIsUtf8(android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.lang.IllegalArgumentException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $z0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: boolean isValidUtf8()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Byte string is not UTF-8.");

        throw $r1;

     label1:
        return;
    }

    protected static void addAll(java.lang.Iterable, java.util.Collection)
    {
        java.lang.Iterable r0;
        java.util.Collection r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.Collection;

        $r2 = (java.util.List) r1;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.List)>(r0, $r2);

        return;
    }

    protected static void addAll(java.lang.Iterable, java.util.List)
    {
        java.lang.Iterable r0;
        java.util.List r1;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.List;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.List)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: boolean usingExperimentalRuntime> = 0;

        return;
    }

android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream
<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>
    void <init>(java.io.InputStream, int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        java.io.InputStream r1;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = i0;

        return;
    }

    public int available() throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int available()>();

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i2;
    }

    public int read() throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        if $i1 > 0 goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        if i0 < 0 goto label2;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i3 = $i2 - 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i3;

     label2:
        return i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i6 := @parameter2: int;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        if $i2 > 0 goto label1;

        return -1;

     label1:
        $i3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i3);

        i1 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>(r1, i0, i7);

        if i1 < 0 goto label2;

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i5 = $i4 - i1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i5;

     label2:
        return i1;
    }

    public long skip(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        long l0, l1, $l3, $l4, $l7, $l8;
        int $i2, $i6, $i9;
        byte $b5;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        l0 := @parameter0: long;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $l3 = (long) $i2;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l3);

        l1 = specialinvoke r0.<java.io.FilterInputStream: long skip(long)>($l4);

        $b5 = l1 cmp 0L;

        if $b5 < 0 goto label1;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $l7 = (long) $i6;

        $l8 = $l7 - l1;

        $i9 = (int) $l8;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i9;

     label1:
        return l1;
    }

android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder
    public void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder clone()>
    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, $r2);

        return $r3;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>
    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        java.lang.Throwable $r3, r7, r9;
        java.lang.String $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r6;
        java.lang.RuntimeException r8;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

     label1:
        r6 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newCodedInput()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream)>(r6);

        virtualinvoke r6.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

     label2:
        return r0;

     label3:
        $r3 := @caughtexception;

        r7 = $r3;

        r8 = new java.lang.RuntimeException;

        $r5 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: java.lang.String getReadingExceptionMessage(java.lang.String)>("ByteString");

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Throwable $r4, r8, r10;
        java.lang.String $r6;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r7;
        java.lang.RuntimeException r9;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

     label1:
        r7 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newCodedInput()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r7, r2);

        virtualinvoke r7.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

     label2:
        return r0;

     label3:
        $r4 := @caughtexception;

        r8 = $r4;

        r9 = new java.lang.RuntimeException;

        $r6 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: java.lang.String getReadingExceptionMessage(java.lang.String)>("ByteString");

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r8);

        r10 = (java.lang.Throwable) r9;

        throw r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[]) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        byte[] r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int)>(r1, 0, $i0);

        return $r2;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[], int, int) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        byte[] r1;
        int i0, i1;
        java.lang.Throwable $r3, r7, r9;
        java.lang.String $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r6;
        java.lang.RuntimeException r8;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream)>(r6);

        virtualinvoke r6.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

     label2:
        return r0;

     label3:
        $r3 := @caughtexception;

        r7 = $r3;

        r8 = new java.lang.RuntimeException;

        $r5 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: java.lang.String getReadingExceptionMessage(java.lang.String)>("byte array");

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[], android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        byte[] r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $i0 = lengthof r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, 0, $i0, r2);

        return $r3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[], int, int, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        byte[] r1;
        int i0, i1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Throwable $r4, r8, r10;
        java.lang.String $r6;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r7;
        java.lang.RuntimeException r9;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

     label1:
        r7 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r7, r2);

        virtualinvoke r7.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

     label2:
        return r0;

     label3:
        $r4 := @caughtexception;

        r8 = $r4;

        r9 = new java.lang.RuntimeException;

        $r6 = specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: java.lang.String getReadingExceptionMessage(java.lang.String)>("byte array");

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r8);

        r10 = (java.lang.Throwable) r9;

        throw r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        java.io.InputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.io.InputStream)>(r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream)>(r2);

        virtualinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

        return r0;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        java.io.InputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.io.InputStream)>(r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r3, r2);

        virtualinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

        return r0;
    }

    public boolean mergeDelimitedFrom(java.io.InputStream, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        java.io.InputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        int i0, i1;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream r3, $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if i0 != -1 goto label1;

        return 0;

     label1:
        i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readRawVarint32(int,java.io.InputStream)>(i0, r1);

        $r4 = new android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        specialinvoke $r4.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder$LimitedInputStream: void <init>(java.io.InputStream,int)>(r1, i1);

        r3 = $r4;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r3, r2);

        return 1;
    }

    public boolean mergeDelimitedFrom(java.io.InputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        java.io.InputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $z0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: boolean mergeDelimitedFrom(java.io.InputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, $r2);

        return $z0;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1, $r2;
        java.lang.Class $r3;
        boolean $z0;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite getDefaultInstanceForType()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mergeFrom(MessageLite) can only merge messages of the same type.");

        throw $r6;

     label1:
        $r4 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $r5 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder internalMergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite)>($r4);

        return $r5;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder internalMergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite)>
    private java.lang.String getReadingExceptionMessage(java.lang.String)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0;
        java.lang.String r1, r2, $r4, $r5, $r12;
        java.lang.Class $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = 60 + $i0;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from a ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw an IOException (should never happen).");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private static void addAllCheckingNulls(java.lang.Iterable, java.util.List)
    {
        java.lang.Iterable r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.lang.String r4;
        boolean $z0, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.NullPointerException $r9;
        java.util.ArrayList $r11;
        java.util.Collection $r12;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.List;

        $z0 = r1 instanceof java.util.ArrayList;

        if $z0 == 0 goto label1;

        $z2 = r0 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r11 = (java.util.ArrayList) r1;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $r12 = (java.util.Collection) r0;

        $i4 = interfaceinvoke $r12.<java.util.Collection: int size()>();

        $i5 = $i3 + $i4;

        virtualinvoke $r11.<java.util.ArrayList: void ensureCapacity(int)>($i5);

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r3 != null goto label5;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i6 = $i1 - i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(37);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Element at index ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null.");

        r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i7 = $i2 - 1;

     label3:
        if i7 < i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i7);

        i7 = i7 + -1;

        goto label3;

     label4:
        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>(r4);

        throw $r9;

     label5:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label2;

     label6:
        return;
    }

    protected static android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException newUninitializedMessageException(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException $r1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $r1 = new android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.UninitializedMessageException: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r0);

        return $r1;
    }

    protected static void addAll(java.lang.Iterable, java.util.Collection)
    {
        java.lang.Iterable r0;
        java.util.Collection r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.Collection;

        $r2 = (java.util.List) r1;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.List)>(r0, $r2);

        return;
    }

    protected static void addAll(java.lang.Iterable, java.util.List)
    {
        java.lang.Iterable r0;
        java.util.List r1, r2;
        android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList r3, $r9;
        int i0, $i1, $i2, i3, i4;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.lang.String r6, $r10;
        boolean $z0, $z1, $z3, $z4;
        java.util.Collection $r8;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.lang.NullPointerException $r16;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.List;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList;

        if $z0 == 0 goto label08;

        $r9 = (android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList) r0;

        r2 = interfaceinvoke $r9.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: java.util.List getUnderlyingElements()>();

        r3 = (android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList) r1;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        if r5 != null goto label04;

        $i1 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: int size()>();

        i3 = $i1 - i0;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(37);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Element at index ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null.");

        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < i0 goto label03;

        interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: java.lang.Object remove(int)>(i4);

        i4 = i4 + -1;

        goto label02;

     label03:
        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>(r6);

        throw $r16;

     label04:
        $z4 = r5 instanceof android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        if $z4 == 0 goto label05;

        $r11 = (android.support.test.espresso.remote.internal.deps.protobuf.ByteString) r5;

        interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: void add(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>($r11);

        goto label06;

     label05:
        $r10 = (java.lang.String) r5;

        interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.LazyStringList: boolean add(java.lang.Object)>($r10);

     label06:
        goto label01;

     label07:
        goto label10;

     label08:
        $z1 = r0 instanceof android.support.test.espresso.remote.internal.deps.protobuf.PrimitiveNonBoxingCollection;

        if $z1 == 0 goto label09;

        $r8 = (java.util.Collection) r0;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label10;

     label09:
        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: void addAllCheckingNulls(java.lang.Iterable,java.util.List)>(r0, r1);

     label10:
        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder clone()>();

        return $r1;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        java.io.InputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        java.io.InputStream r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream)>(r1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(byte[], int, int, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        byte[] r1;
        int i0, i1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, i0, i1, r2);

        return $r3;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(byte[], android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        byte[] r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(byte[], int, int) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(byte[]) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        byte[] r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(byte[])>(r1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(r1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r1;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder mergeFrom(android.support.test.espresso.remote.internal.deps.protobuf.CodedInputStream)>(r1);

        return $r2;
    }

    public volatile android.support.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder clone()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder r0, $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder: android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite$Builder clone()>();

        return $r1;
    }

