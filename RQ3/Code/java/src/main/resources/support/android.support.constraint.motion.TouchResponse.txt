android.support.constraint.motion.TouchResponse
<android.support.constraint.motion.TouchResponse: java.lang.String TAG>
<android.support.constraint.motion.TouchResponse: boolean DEBUG>
<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>
<android.support.constraint.motion.TouchResponse: int mTouchSide>
<android.support.constraint.motion.TouchResponse: int mOnTouchUp>
<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>
<android.support.constraint.motion.TouchResponse: int mTouchRegionId>
<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo>
<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>
<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>
<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>
<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>
<android.support.constraint.motion.TouchResponse: boolean mDragStarted>
<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>
<android.support.constraint.motion.TouchResponse: float mLastTouchX>
<android.support.constraint.motion.TouchResponse: float mLastTouchY>
<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>
<android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>
<android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>
<android.support.constraint.motion.TouchResponse: int TOUCH_UP>
<android.support.constraint.motion.TouchResponse: int TOUCH_DOWN>
<android.support.constraint.motion.TouchResponse: int TOUCH_LEFT>
<android.support.constraint.motion.TouchResponse: int TOUCH_RIGHT>
<android.support.constraint.motion.TouchResponse: int TOUCH_START>
<android.support.constraint.motion.TouchResponse: int TOUCH_END>
<android.support.constraint.motion.TouchResponse: int SIDE_TOP>
<android.support.constraint.motion.TouchResponse: int SIDE_LEFT>
<android.support.constraint.motion.TouchResponse: int SIDE_RIGHT>
<android.support.constraint.motion.TouchResponse: int SIDE_BOTTOM>
<android.support.constraint.motion.TouchResponse: int SIDE_MIDDLE>
<android.support.constraint.motion.TouchResponse: int SIDE_START>
<android.support.constraint.motion.TouchResponse: int SIDE_END>
<android.support.constraint.motion.TouchResponse: float mMaxVelocity>
<android.support.constraint.motion.TouchResponse: float mMaxAcceleration>
<android.support.constraint.motion.TouchResponse: boolean mMoveWhenScrollAtTop>
<android.support.constraint.motion.TouchResponse: float mDragScale>
<android.support.constraint.motion.TouchResponse: int mFlags>
<android.support.constraint.motion.TouchResponse: int FLAG_DISABLE_POST_SCROLL>
<android.support.constraint.motion.TouchResponse: int FLAG_DISABLE_SCROLL>
<android.support.constraint.motion.TouchResponse: float mDragThreshold>
    void <init>(android.content.Context, android.support.constraint.motion.MotionLayout, org.xmlpull.v1.XmlPullParser)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.content.Context r1;
        android.support.constraint.motion.MotionLayout r2;
        org.xmlpull.v1.XmlPullParser r3;
        float[] $r4;
        android.util.AttributeSet $r5;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.constraint.motion.MotionLayout;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide> = 0;

        r0.<android.support.constraint.motion.TouchResponse: int mTouchSide> = 0;

        r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp> = 0;

        r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId> = -1;

        r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId> = -1;

        r0.<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo> = -1;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY> = 0.5F;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX> = 0.5F;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX> = 0.0F;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY> = 1.0F;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 0;

        $r4 = newarray (float)[2];

        r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt> = $r4;

        r0.<android.support.constraint.motion.TouchResponse: float mMaxVelocity> = 4.0F;

        r0.<android.support.constraint.motion.TouchResponse: float mMaxAcceleration> = 1.2F;

        r0.<android.support.constraint.motion.TouchResponse: boolean mMoveWhenScrollAtTop> = 1;

        r0.<android.support.constraint.motion.TouchResponse: float mDragScale> = 1.0F;

        r0.<android.support.constraint.motion.TouchResponse: int mFlags> = 0;

        r0.<android.support.constraint.motion.TouchResponse: float mDragThreshold> = 10.0F;

        r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout> = r2;

        $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r3);

        specialinvoke r0.<android.support.constraint.motion.TouchResponse: void fillFromAttributeList(android.content.Context,android.util.AttributeSet)>(r1, $r5);

        return;
    }

    public void setRTL(boolean)
    {
        android.support.constraint.motion.TouchResponse r0;
        boolean z0;
        float[][] $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r19, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32;
        float[] $r2, $r5, $r8, $r11, $r14, $r16, $r18, $r20, $r22, $r25, $r28, $r31;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r23 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r21 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r22 = $r21[3];

        $r23[4] = $r22;

        $r26 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r24 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r25 = $r24[2];

        $r26[5] = $r25;

        $r29 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r27 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r28 = $r27[2];

        $r29[5] = $r28;

        $r32 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r30 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r31 = $r30[1];

        $r32[6] = $r31;

        goto label2;

     label1:
        $r3 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r1 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r2 = $r1[2];

        $r3[4] = $r2;

        $r6 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r4 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r5 = $r4[3];

        $r6[5] = $r5;

        $r9 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r7 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r8 = $r7[1];

        $r9[5] = $r8;

        $r12 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r10 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $r11 = $r10[2];

        $r12[6] = $r11;

     label2:
        $r13 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>;

        $r14 = $r13[$i0];

        $f0 = $r14[0];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX> = $f0;

        $r15 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $i1 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>;

        $r16 = $r15[$i1];

        $f1 = $r16[1];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY> = $f1;

        $r17 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i2 = r0.<android.support.constraint.motion.TouchResponse: int mTouchSide>;

        $r18 = $r17[$i2];

        $f2 = $r18[0];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX> = $f2;

        $r19 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i3 = r0.<android.support.constraint.motion.TouchResponse: int mTouchSide>;

        $r20 = $r19[$i3];

        $f3 = $r20[1];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY> = $f3;

        return;
    }

    private void fillFromAttributeList(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int[] $r4;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r4 = <android.support.constraint.R$styleable: int[] OnSwipe>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        specialinvoke r0.<android.support.constraint.motion.TouchResponse: void fill(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void fill(android.content.res.TypedArray)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.content.res.TypedArray r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean $z0, $z1;
        float[][] $r2, $r4, $r6, $r8;
        float[] $r3, $r5, $r7, $r9;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.content.res.TypedArray;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getIndexCount()>();

        i30 = 0;

     label01:
        if i30 >= i0 goto label14;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getIndex(int)>(i30);

        $i2 = <android.support.constraint.R$styleable: int OnSwipe_touchAnchorId>;

        if i1 != $i2 goto label02;

        $i28 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $i29 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i28);

        r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId> = $i29;

        goto label13;

     label02:
        $i3 = <android.support.constraint.R$styleable: int OnSwipe_touchAnchorSide>;

        if i1 != $i3 goto label03;

        $i24 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>;

        $i25 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i24);

        r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide> = $i25;

        $r6 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $i26 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>;

        $r7 = $r6[$i26];

        $f10 = $r7[0];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX> = $f10;

        $r8 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES>;

        $i27 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorSide>;

        $r9 = $r8[$i27];

        $f11 = $r9[1];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY> = $f11;

        goto label13;

     label03:
        $i4 = <android.support.constraint.R$styleable: int OnSwipe_dragDirection>;

        if i1 != $i4 goto label04;

        $i20 = r0.<android.support.constraint.motion.TouchResponse: int mTouchSide>;

        $i21 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i20);

        r0.<android.support.constraint.motion.TouchResponse: int mTouchSide> = $i21;

        $r2 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i22 = r0.<android.support.constraint.motion.TouchResponse: int mTouchSide>;

        $r3 = $r2[$i22];

        $f8 = $r3[0];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX> = $f8;

        $r4 = <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i23 = r0.<android.support.constraint.motion.TouchResponse: int mTouchSide>;

        $r5 = $r4[$i23];

        $f9 = $r5[1];

        r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY> = $f9;

        goto label13;

     label04:
        $i5 = <android.support.constraint.R$styleable: int OnSwipe_maxVelocity>;

        if i1 != $i5 goto label05;

        $f6 = r0.<android.support.constraint.motion.TouchResponse: float mMaxVelocity>;

        $f7 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f6);

        r0.<android.support.constraint.motion.TouchResponse: float mMaxVelocity> = $f7;

        goto label13;

     label05:
        $i6 = <android.support.constraint.R$styleable: int OnSwipe_maxAcceleration>;

        if i1 != $i6 goto label06;

        $f4 = r0.<android.support.constraint.motion.TouchResponse: float mMaxAcceleration>;

        $f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f4);

        r0.<android.support.constraint.motion.TouchResponse: float mMaxAcceleration> = $f5;

        goto label13;

     label06:
        $i7 = <android.support.constraint.R$styleable: int OnSwipe_moveWhenScrollAtTop>;

        if i1 != $i7 goto label07;

        $z0 = r0.<android.support.constraint.motion.TouchResponse: boolean mMoveWhenScrollAtTop>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        r0.<android.support.constraint.motion.TouchResponse: boolean mMoveWhenScrollAtTop> = $z1;

        goto label13;

     label07:
        $i8 = <android.support.constraint.R$styleable: int OnSwipe_dragScale>;

        if i1 != $i8 goto label08;

        $f2 = r0.<android.support.constraint.motion.TouchResponse: float mDragScale>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f2);

        r0.<android.support.constraint.motion.TouchResponse: float mDragScale> = $f3;

        goto label13;

     label08:
        $i9 = <android.support.constraint.R$styleable: int OnSwipe_dragThreshold>;

        if i1 != $i9 goto label09;

        $f0 = r0.<android.support.constraint.motion.TouchResponse: float mDragThreshold>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f0);

        r0.<android.support.constraint.motion.TouchResponse: float mDragThreshold> = $f1;

        goto label13;

     label09:
        $i10 = <android.support.constraint.R$styleable: int OnSwipe_touchRegionId>;

        if i1 != $i10 goto label10;

        $i18 = r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId>;

        $i19 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i18);

        r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId> = $i19;

        goto label13;

     label10:
        $i11 = <android.support.constraint.R$styleable: int OnSwipe_onTouchUp>;

        if i1 != $i11 goto label11;

        $i16 = r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp>;

        $i17 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i16);

        r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp> = $i17;

        goto label13;

     label11:
        $i12 = <android.support.constraint.R$styleable: int OnSwipe_nestedScrollFlags>;

        if i1 != $i12 goto label12;

        $i15 = virtualinvoke r1.<android.content.res.TypedArray: int getInteger(int,int)>(i1, 0);

        r0.<android.support.constraint.motion.TouchResponse: int mFlags> = $i15;

        goto label13;

     label12:
        $i13 = <android.support.constraint.R$styleable: int OnSwipe_limitBoundsTo>;

        if i1 != $i13 goto label13;

        $i14 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        r0.<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo> = $i14;

     label13:
        i30 = i30 + 1;

        goto label01;

     label14:
        return;
    }

    void setUpTouchEvent(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchX> = f0;

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchY> = f1;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 0;

        return;
    }

    void processTouchEvent(android.view.MotionEvent, android.support.constraint.motion.MotionLayout$MotionTracker, int, android.support.constraint.motion.MotionScene)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.view.MotionEvent r1;
        android.support.constraint.motion.MotionLayout$MotionTracker r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i11, $i12, $i13, $i14, $i15, $i20, $i22, $i25;
        android.support.constraint.motion.MotionScene r3;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, f56, f57, f58, f59, f60, f61, f62, f63, $f64, f65, f66, f67, f68, f69, f70, f71, f72, $f73;
        byte $b2, $b7, $b8, $b9, $b10, $b16, $b17, $b18, $b19, $b21, $b23, $b24, $b26;
        android.support.constraint.motion.MotionLayout $r4, $r5, $r6, $r12, $r13, $r14, $r16, $r22, $r23, $r24, $r25, $r26, $r33, $r34, $r36, $r39;
        boolean $z0, $z1, $z2;
        float[] $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r18, $r19, $r20, $r21, $r27, $r28, $r29, $r30, $r31, $r37, $r38;
        double $d0, $d1;
        android.support.constraint.motion.MotionLayout$TransitionState $r32, $r35;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.support.constraint.motion.MotionLayout$MotionTracker;

        i0 := @parameter2: int;

        r3 := @parameter3: android.support.constraint.motion.MotionScene;

        interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label14;
            case 2: goto label02;
            default: goto label25;
        };

     label01:
        $f54 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchX> = $f54;

        $f55 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchY> = $f55;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 0;

        goto label25;

     label02:
        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f4 = r0.<android.support.constraint.motion.TouchResponse: float mLastTouchY>;

        f0 = $f3 - $f4;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f6 = r0.<android.support.constraint.motion.TouchResponse: float mLastTouchX>;

        f1 = $f5 - $f6;

        $f7 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f10 = f1 * $f7;

        $f8 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f9 = f0 * $f8;

        f2 = $f10 + $f9;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>(f2);

        $f12 = r0.<android.support.constraint.motion.TouchResponse: float mDragThreshold>;

        $b2 = $f11 cmpl $f12;

        if $b2 > 0 goto label03;

        $z1 = r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted>;

        if $z1 == 0 goto label25;

     label03:
        $r4 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        f56 = virtualinvoke $r4.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $z0 = r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted>;

        if $z0 != 0 goto label04;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 1;

        $r23 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        virtualinvoke $r23.<android.support.constraint.motion.MotionLayout: void setProgress(float)>(f56);

     label04:
        $i3 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        if $i3 == -1 goto label05;

        $r22 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i11 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $f37 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>;

        $f36 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>;

        $r21 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r22.<android.support.constraint.motion.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i11, f56, $f37, $f36, $r21);

        goto label06;

     label05:
        $r5 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i4 = virtualinvoke $r5.<android.support.constraint.motion.MotionLayout: int getWidth()>();

        $r6 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i5 = virtualinvoke $r6.<android.support.constraint.motion.MotionLayout: int getHeight()>();

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        f57 = (float) $i6;

        $r7 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f13 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f14 = f57 * $f13;

        $r7[1] = $f14;

        $r8 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f15 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f16 = f57 * $f15;

        $r8[0] = $f16;

     label06:
        $f18 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $r9 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f17 = $r9[0];

        $f22 = $f18 * $f17;

        $f20 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $r10 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f19 = $r10[1];

        $f21 = $f20 * $f19;

        f58 = $f22 + $f21;

        $f23 = r0.<android.support.constraint.motion.TouchResponse: float mDragScale>;

        f59 = f58 * $f23;

        $f24 = staticinvoke <java.lang.Math: float abs(float)>(f59);

        $d0 = (double) $f24;

        $b7 = $d0 cmpg 0.01;

        if $b7 >= 0 goto label07;

        $r19 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r19[0] = 0.01F;

        $r20 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r20[1] = 0.01F;

     label07:
        $f25 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b8 = $f25 cmpl 0.0F;

        if $b8 == 0 goto label08;

        $r18 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f35 = $r18[0];

        f60 = f1 / $f35;

        goto label09;

     label08:
        $r11 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f26 = $r11[1];

        f60 = f0 / $f26;

     label09:
        $f27 = f56 + f60;

        $f28 = staticinvoke <java.lang.Math: float min(float,float)>($f27, 1.0F);

        f61 = staticinvoke <java.lang.Math: float max(float,float)>($f28, 0.0F);

        $r12 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $f29 = virtualinvoke $r12.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $b9 = f61 cmpl $f29;

        if $b9 == 0 goto label12;

        $r14 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        virtualinvoke $r14.<android.support.constraint.motion.MotionLayout: void setProgress(float)>(f61);

        interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        f62 = interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: float getXVelocity()>();

        f63 = interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: float getYVelocity()>();

        $f32 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b10 = $f32 cmpl 0.0F;

        if $b10 == 0 goto label10;

        $r17 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f34 = $r17[0];

        $f64 = f62 / $f34;

        goto label11;

     label10:
        $r15 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f33 = $r15[1];

        $f64 = f63 / $f33;

     label11:
        f65 = $f64;

        $r16 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $r16.<android.support.constraint.motion.MotionLayout: float mLastVelocity> = f65;

        goto label13;

     label12:
        $r13 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $r13.<android.support.constraint.motion.MotionLayout: float mLastVelocity> = 0.0F;

     label13:
        $f30 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchX> = $f30;

        $f31 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchY> = $f31;

        goto label25;

     label14:
        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 0;

        interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        f66 = interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: float getXVelocity()>();

        f67 = interfaceinvoke r2.<android.support.constraint.motion.MotionLayout$MotionTracker: float getYVelocity()>();

        $r24 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        f68 = virtualinvoke $r24.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        f69 = f68;

        $i12 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        if $i12 == -1 goto label15;

        $r39 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i25 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $f53 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>;

        $f52 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>;

        $r38 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r39.<android.support.constraint.motion.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i25, f69, $f53, $f52, $r38);

        goto label16;

     label15:
        $r25 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i13 = virtualinvoke $r25.<android.support.constraint.motion.MotionLayout: int getWidth()>();

        $r26 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i14 = virtualinvoke $r26.<android.support.constraint.motion.MotionLayout: int getHeight()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        f70 = (float) $i15;

        $r27 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f38 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f39 = f70 * $f38;

        $r27[1] = $f39;

        $r28 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f40 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f41 = f70 * $f40;

        $r28[0] = $f41;

     label16:
        $f43 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $r29 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f42 = $r29[0];

        $f47 = $f43 * $f42;

        $f45 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $r30 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f44 = $r30[1];

        $f46 = $f45 * $f44;

        f71 = $f47 + $f46;

        $f48 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b16 = $f48 cmpl 0.0F;

        if $b16 == 0 goto label17;

        $r37 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f51 = $r37[0];

        f72 = f66 / $f51;

        goto label18;

     label17:
        $r31 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f49 = $r31[1];

        f72 = f67 / $f49;

     label18:
        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f72);

        if $z2 != 0 goto label19;

        $f50 = f72 / 3.0F;

        f69 = f69 + $f50;

     label19:
        $b17 = f69 cmpl 0.0F;

        if $b17 == 0 goto label23;

        $b19 = f69 cmpl 1.0F;

        if $b19 == 0 goto label23;

        $i20 = r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp>;

        if $i20 == 3 goto label23;

        $r34 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i22 = r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp>;

        $d1 = (double) f69;

        $b21 = $d1 cmpg 0.5;

        if $b21 >= 0 goto label20;

        $f73 = 0.0F;

        goto label21;

     label20:
        $f73 = 1.0F;

     label21:
        virtualinvoke $r34.<android.support.constraint.motion.MotionLayout: void touchAnimateTo(int,float,float)>($i22, $f73, f72);

        $b23 = 0.0F cmpl f68;

        if $b23 >= 0 goto label22;

        $b24 = 1.0F cmpg f68;

        if $b24 > 0 goto label25;

     label22:
        $r36 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $r35 = <android.support.constraint.motion.MotionLayout$TransitionState: android.support.constraint.motion.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r36.<android.support.constraint.motion.MotionLayout: void setState(android.support.constraint.motion.MotionLayout$TransitionState)>($r35);

        goto label25;

     label23:
        $b26 = 0.0F cmpl f69;

        if $b26 >= 0 goto label24;

        $b18 = 1.0F cmpg f69;

        if $b18 > 0 goto label25;

     label24:
        $r33 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $r32 = <android.support.constraint.motion.MotionLayout$TransitionState: android.support.constraint.motion.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r33.<android.support.constraint.motion.MotionLayout: void setState(android.support.constraint.motion.MotionLayout$TransitionState)>($r32);

     label25:
        return;
    }

    void setDown(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchX> = f0;

        r0.<android.support.constraint.motion.TouchResponse: float mLastTouchY> = f1;

        return;
    }

    float getProgressDirection(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14;
        android.support.constraint.motion.MotionLayout $r1, $r3;
        float[] $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0;
        byte $b1, $b2, $b3;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        f2 = virtualinvoke $r1.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $r3 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $f4 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>;

        $f3 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<android.support.constraint.motion.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f2, $f4, $f3, $r2);

        $f5 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b1 = $f5 cmpl 0.0F;

        if $b1 == 0 goto label2;

        $r7 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f10 = $r7[0];

        $b3 = $f10 cmpl 0.0F;

        if $b3 != 0 goto label1;

        $r9 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r9[0] = 1.0E-7F;

     label1:
        $f11 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f13 = f0 * $f11;

        $r8 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f12 = $r8[0];

        f14 = $f13 / $f12;

        goto label4;

     label2:
        $r4 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f6 = $r4[1];

        $b2 = $f6 cmpl 0.0F;

        if $b2 != 0 goto label3;

        $r6 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r6[1] = 1.0E-7F;

     label3:
        $f7 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f9 = f1 * $f7;

        $r5 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f8 = $r5[1];

        f14 = $f9 / $f8;

     label4:
        return f14;
    }

    void scrollUp(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, $f21;
        android.support.constraint.motion.MotionLayout $r1, $r3, $r7;
        float[] $r2, $r4, $r5, $r6, $r8;
        int $i0, $i4, $i6;
        byte $b1, $b2, $b3, $b5;
        boolean $z0, $z1, $z2, $z3;
        double $d0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 0;

        $r1 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        f19 = virtualinvoke $r1.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $r3 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $f4 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>;

        $f3 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<android.support.constraint.motion.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f19, $f4, $f3, $r2);

        $f6 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $r4 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f5 = $r4[0];

        $f10 = $f6 * $f5;

        $f8 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $r5 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f7 = $r5[1];

        $f9 = $f8 * $f7;

        f2 = $f10 + $f9;

        $f11 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b1 = $f11 cmpl 0.0F;

        if $b1 == 0 goto label01;

        $f16 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f18 = f0 * $f16;

        $r8 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f17 = $r8[0];

        f20 = $f18 / $f17;

        goto label02;

     label01:
        $f12 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f14 = f1 * $f12;

        $r6 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f13 = $r6[1];

        f20 = $f14 / $f13;

     label02:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f20);

        if $z0 != 0 goto label03;

        $f15 = f20 / 3.0F;

        f19 = f19 + $f15;

     label03:
        $b2 = f19 cmpl 0.0F;

        if $b2 == 0 goto label10;

        $b3 = f19 cmpl 1.0F;

        if $b3 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $i4 = r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp>;

        if $i4 == 3 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z3 = $z1 & $z2;

        if $z3 == 0 goto label10;

        $r7 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i6 = r0.<android.support.constraint.motion.TouchResponse: int mOnTouchUp>;

        $d0 = (double) f19;

        $b5 = $d0 cmpg 0.5;

        if $b5 >= 0 goto label08;

        $f21 = 0.0F;

        goto label09;

     label08:
        $f21 = 1.0F;

     label09:
        virtualinvoke $r7.<android.support.constraint.motion.MotionLayout: void touchAnimateTo(int,float,float)>($i6, $f21, f20);

     label10:
        return;
    }

    void scrollMove(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, f27, f28, f29;
        android.support.constraint.motion.MotionLayout $r1, $r3, $r7, $r8, $r12;
        boolean $z0;
        float[] $r2, $r4, $r5, $r6, $r9, $r10, $r11;
        int $i0;
        double $d0;
        byte $b1, $b2, $b3;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f4 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f7 = f0 * $f4;

        $f5 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f6 = f1 * $f5;

        f2 = $f7 + $f6;

        $r1 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        f27 = virtualinvoke $r1.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $z0 = r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted>;

        if $z0 != 0 goto label1;

        r0.<android.support.constraint.motion.TouchResponse: boolean mDragStarted> = 1;

        $r12 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        virtualinvoke $r12.<android.support.constraint.motion.MotionLayout: void setProgress(float)>(f27);

     label1:
        $r3 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $f9 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX>;

        $f8 = r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<android.support.constraint.motion.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f27, $f9, $f8, $r2);

        $f11 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $r4 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f10 = $r4[0];

        $f15 = $f11 * $f10;

        $f13 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $r5 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f12 = $r5[1];

        $f14 = $f13 * $f12;

        f3 = $f15 + $f14;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        $d0 = (double) $f16;

        $b1 = $d0 cmpg 0.01;

        if $b1 >= 0 goto label2;

        $r10 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r10[0] = 0.01F;

        $r11 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $r11[1] = 0.01F;

     label2:
        $f17 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $b2 = $f17 cmpl 0.0F;

        if $b2 == 0 goto label3;

        $f24 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f26 = f0 * $f24;

        $r9 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f25 = $r9[0];

        f28 = $f26 / $f25;

        goto label4;

     label3:
        $f18 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f20 = f1 * $f18;

        $r6 = r0.<android.support.constraint.motion.TouchResponse: float[] mAnchorDpDt>;

        $f19 = $r6[1];

        f28 = $f20 / $f19;

     label4:
        $f21 = f27 + f28;

        $f22 = staticinvoke <java.lang.Math: float min(float,float)>($f21, 1.0F);

        f29 = staticinvoke <java.lang.Math: float max(float,float)>($f22, 0.0F);

        $r7 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $f23 = virtualinvoke $r7.<android.support.constraint.motion.MotionLayout: float getProgress()>();

        $b3 = f29 cmpl $f23;

        if $b3 == 0 goto label5;

        $r8 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        virtualinvoke $r8.<android.support.constraint.motion.MotionLayout: void setProgress(float)>(f29);

     label5:
        return;
    }

    void setupTouch()
    {
        android.support.constraint.motion.TouchResponse r0;
        android.support.v4.widget.NestedScrollView r1;
        int $i0, $i1, $i2;
        android.support.constraint.motion.TouchResponse$1 $r2;
        android.support.constraint.motion.TouchResponse$2 $r3;
        android.support.constraint.motion.MotionLayout $r4, $r7;
        java.lang.StringBuilder $r5, $r6, $r10;
        android.content.Context $r8;
        java.lang.String $r9, $r11;
        android.view.View r12;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r12 = null;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        if $i0 == -1 goto label1;

        $r4 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $i1 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        r12 = virtualinvoke $r4.<android.support.constraint.motion.MotionLayout: android.view.View findViewById(int)>($i1);

        if r12 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find TouchAnchorId @id/");

        $r7 = r0.<android.support.constraint.motion.TouchResponse: android.support.constraint.motion.MotionLayout mMotionLayout>;

        $r8 = virtualinvoke $r7.<android.support.constraint.motion.MotionLayout: android.content.Context getContext()>();

        $i2 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        $r9 = staticinvoke <android.support.constraint.motion.Debug: java.lang.String getName(android.content.Context,int)>($r8, $i2);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TouchResponse", $r11);

     label1:
        $z0 = r12 instanceof android.support.v4.widget.NestedScrollView;

        if $z0 == 0 goto label2;

        r1 = (android.support.v4.widget.NestedScrollView) r12;

        $r2 = new android.support.constraint.motion.TouchResponse$1;

        specialinvoke $r2.<android.support.constraint.motion.TouchResponse$1: void <init>(android.support.constraint.motion.TouchResponse)>(r0);

        virtualinvoke r1.<android.support.v4.widget.NestedScrollView: void setOnTouchListener(android.view.View$OnTouchListener)>($r2);

        $r3 = new android.support.constraint.motion.TouchResponse$2;

        specialinvoke $r3.<android.support.constraint.motion.TouchResponse$2: void <init>(android.support.constraint.motion.TouchResponse)>(r0);

        virtualinvoke r1.<android.support.v4.widget.NestedScrollView: void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener)>($r3);

     label2:
        return;
    }

    public void setAnchorId(int)
    {
        android.support.constraint.motion.TouchResponse r0;
        int i0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        i0 := @parameter0: int;

        r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId> = i0;

        return;
    }

    public int getAnchorId()
    {
        android.support.constraint.motion.TouchResponse r0;
        int $i0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchAnchorId>;

        return $i0;
    }

    public void setTouchAnchorLocation(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorX> = f0;

        r0.<android.support.constraint.motion.TouchResponse: float mTouchAnchorY> = f1;

        return;
    }

    public void setMaxVelocity(float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        r0.<android.support.constraint.motion.TouchResponse: float mMaxVelocity> = f0;

        return;
    }

    public void setMaxAcceleration(float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        r0.<android.support.constraint.motion.TouchResponse: float mMaxAcceleration> = f0;

        return;
    }

    float getMaxAcceleration()
    {
        android.support.constraint.motion.TouchResponse r0;
        float $f0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $f0 = r0.<android.support.constraint.motion.TouchResponse: float mMaxAcceleration>;

        return $f0;
    }

    public float getMaxVelocity()
    {
        android.support.constraint.motion.TouchResponse r0;
        float $f0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $f0 = r0.<android.support.constraint.motion.TouchResponse: float mMaxVelocity>;

        return $f0;
    }

    boolean getMoveWhenScrollAtTop()
    {
        android.support.constraint.motion.TouchResponse r0;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $z0 = r0.<android.support.constraint.motion.TouchResponse: boolean mMoveWhenScrollAtTop>;

        return $z0;
    }

    android.graphics.RectF getTouchRegion(android.view.ViewGroup, android.graphics.RectF)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.view.ViewGroup r1;
        android.graphics.RectF r2;
        android.view.View r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.RectF;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i1 = r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId>;

        r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>($i1);

        if r3 != null goto label2;

        return null;

     label2:
        $i2 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f0 = (float) $i2;

        $i3 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f1 = (float) $i3;

        $i4 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f2 = (float) $i4;

        $i5 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        return r2;
    }

    int getTouchRegionId()
    {
        android.support.constraint.motion.TouchResponse r0;
        int $i0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mTouchRegionId>;

        return $i0;
    }

    android.graphics.RectF getLimitBoundsTo(android.view.ViewGroup, android.graphics.RectF)
    {
        android.support.constraint.motion.TouchResponse r0;
        android.view.ViewGroup r1;
        android.graphics.RectF r2;
        android.view.View r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.RectF;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i1 = r0.<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo>;

        r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>($i1);

        if r3 != null goto label2;

        return null;

     label2:
        $i2 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f0 = (float) $i2;

        $i3 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f1 = (float) $i3;

        $i4 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f2 = (float) $i4;

        $i5 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        return r2;
    }

    int getLimitBoundsToId()
    {
        android.support.constraint.motion.TouchResponse r0;
        int $i0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mLimitBoundsTo>;

        return $i0;
    }

    float dot(float, float)
    {
        android.support.constraint.motion.TouchResponse r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $f5 = f0 * $f2;

        $f3 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $f4 = f1 * $f3;

        $f6 = $f5 + $f4;

        return $f6;
    }

    public java.lang.String toString()
    {
        android.support.constraint.motion.TouchResponse r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        float $f0, $f1;
        java.lang.String $r5;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $f0 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionX>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $f1 = r0.<android.support.constraint.motion.TouchResponse: float mTouchDirectionY>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int getFlags()
    {
        android.support.constraint.motion.TouchResponse r0;
        int $i0;

        r0 := @this: android.support.constraint.motion.TouchResponse;

        $i0 = r0.<android.support.constraint.motion.TouchResponse: int mFlags>;

        return $i0;
    }

    static void <clinit>()
    {
        float[][] $r0, $r8;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newarray (float[])[7];

        $r1 = newarray (float)[2];

        $r1[0] = 0.5F;

        $r1[1] = 0.0F;

        $r0[0] = $r1;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 0.5F;

        $r0[1] = $r2;

        $r3 = newarray (float)[2];

        $r3[0] = 1.0F;

        $r3[1] = 0.5F;

        $r0[2] = $r3;

        $r4 = newarray (float)[2];

        $r4[0] = 0.5F;

        $r4[1] = 1.0F;

        $r0[3] = $r4;

        $r5 = newarray (float)[2];

        $r5[0] = 0.5F;

        $r5[1] = 0.5F;

        $r0[4] = $r5;

        $r6 = newarray (float)[2];

        $r6[0] = 0.0F;

        $r6[1] = 0.5F;

        $r0[5] = $r6;

        $r7 = newarray (float)[2];

        $r7[0] = 1.0F;

        $r7[1] = 0.5F;

        $r0[6] = $r7;

        <android.support.constraint.motion.TouchResponse: float[][] TOUCH_SIDES> = $r0;

        $r8 = newarray (float[])[6];

        $r9 = newarray (float)[2];

        $r9[0] = 0.0F;

        $r9[1] = -1.0F;

        $r8[0] = $r9;

        $r10 = newarray (float)[2];

        $r10[0] = 0.0F;

        $r10[1] = 1.0F;

        $r8[1] = $r10;

        $r11 = newarray (float)[2];

        $r11[0] = -1.0F;

        $r11[1] = 0.0F;

        $r8[2] = $r11;

        $r12 = newarray (float)[2];

        $r12[0] = 1.0F;

        $r12[1] = 0.0F;

        $r8[3] = $r12;

        $r13 = newarray (float)[2];

        $r13[0] = -1.0F;

        $r13[1] = 0.0F;

        $r8[4] = $r13;

        $r14 = newarray (float)[2];

        $r14[0] = 1.0F;

        $r14[1] = 0.0F;

        $r8[5] = $r14;

        <android.support.constraint.motion.TouchResponse: float[][] TOUCH_DIRECTION> = $r8;

        return;
    }

android.support.constraint.motion.TouchResponse$1
<android.support.constraint.motion.TouchResponse$1: android.support.constraint.motion.TouchResponse this$0>
    void <init>(android.support.constraint.motion.TouchResponse)
    {
        android.support.constraint.motion.TouchResponse$1 r0;
        android.support.constraint.motion.TouchResponse r1;

        r0 := @this: android.support.constraint.motion.TouchResponse$1;

        r1 := @parameter0: android.support.constraint.motion.TouchResponse;

        r0.<android.support.constraint.motion.TouchResponse$1: android.support.constraint.motion.TouchResponse this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        android.support.constraint.motion.TouchResponse$1 r0;
        android.view.View r1;
        android.view.MotionEvent r2;

        r0 := @this: android.support.constraint.motion.TouchResponse$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        return 0;
    }

android.support.constraint.motion.TouchResponse$2
<android.support.constraint.motion.TouchResponse$2: android.support.constraint.motion.TouchResponse this$0>
    void <init>(android.support.constraint.motion.TouchResponse)
    {
        android.support.constraint.motion.TouchResponse$2 r0;
        android.support.constraint.motion.TouchResponse r1;

        r0 := @this: android.support.constraint.motion.TouchResponse$2;

        r1 := @parameter0: android.support.constraint.motion.TouchResponse;

        r0.<android.support.constraint.motion.TouchResponse$2: android.support.constraint.motion.TouchResponse this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onScrollChange(android.support.v4.widget.NestedScrollView, int, int, int, int)
    {
        android.support.constraint.motion.TouchResponse$2 r0;
        android.support.v4.widget.NestedScrollView r1;
        int i0, i1, i2, i3;

        r0 := @this: android.support.constraint.motion.TouchResponse$2;

        r1 := @parameter0: android.support.v4.widget.NestedScrollView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

