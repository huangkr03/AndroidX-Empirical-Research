android.support.media2.SessionPlaylistAgentImplBase
<android.support.media2.SessionPlaylistAgentImplBase: int END_OF_PLAYLIST>
<android.support.media2.SessionPlaylistAgentImplBase: int NO_VALID_ITEMS>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>
<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2ImplBase mSession>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback mPlayerCallback>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper>
<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>
<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>
<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaMetadata2 mMetadata>
<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode>
<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>
<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaSession2ImplBase r1, $r9;
        android.support.media2.MediaPlayerConnector r2, $r10;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r3;
        java.lang.Object $r4;
        java.util.ArrayList $r5, $r6;
        android.support.v4.util.ArrayMap $r7;
        android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback $r8, $r12;
        java.util.concurrent.Executor $r11;
        java.lang.IllegalArgumentException $r13, $r14;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        specialinvoke r0.<android.support.media2.MediaPlaylistAgent: void <init>()>();

        $r3 = new android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        specialinvoke $r3.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: void <init>(android.support.media2.SessionPlaylistAgentImplBase,int,android.support.media2.DataSourceDesc2)>(r0, -1, null);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList> = $r6;

        $r7 = new android.support.v4.util.ArrayMap;

        specialinvoke $r7.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap> = $r7;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionImpl shouldn\'t be null");

        throw $r14;

     label1:
        if r2 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("player shouldn\'t be null");

        throw $r13;

     label2:
        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2ImplBase mSession> = r1;

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer> = r2;

        $r8 = new android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback;

        specialinvoke $r8.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: void <init>(android.support.media2.SessionPlaylistAgentImplBase)>(r0);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback mPlayerCallback> = $r8;

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2ImplBase mSession>;

        $r11 = virtualinvoke $r9.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r12 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback mPlayerCallback>;

        virtualinvoke $r10.<android.support.media2.MediaPlayerConnector: void registerPlayerEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r11, $r12);

        return;
    }

    void setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaPlayerConnector r1, $r5, $r8;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback $r6, $r10;
        android.support.media2.MediaSession2ImplBase $r7;
        java.util.concurrent.Executor $r9;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        if r1 != $r5 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback mPlayerCallback>;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void unregisterPlayerEventCallback(android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r6);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer> = r1;

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2ImplBase mSession>;

        $r9 = virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback mPlayerCallback>;

        virtualinvoke $r8.<android.support.media2.MediaPlayerConnector: void registerPlayerEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r9, $r10);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaSession2$OnDataSourceMissingHelper r1;
        java.lang.Object r2, $r3;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$OnDataSourceMissingHelper;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void clearOnDataSourceMissingHelper()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper> = null;

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    public java.util.List getPlaylist()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.ArrayList $r4;
        java.util.List $r5;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPlaylist(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.util.List r1;
        android.support.media2.MediaMetadata2 r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r11;
        java.util.Map $r6;
        java.util.ArrayList $r7, $r8;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list shouldn\'t be null");

        throw $r10;

     label1:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        virtualinvoke $r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void applyShuffleModeLocked()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaMetadata2 mMetadata> = r2;

        $r9 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>(-1, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r9;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyPlaylistChanged()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.support.media2.MediaMetadata2 getPlaylistMetadata()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaMetadata2 $r3;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaMetadata2 mMetadata>;

        exitmonitor r1;

        return $r3;
    }

    public void updatePlaylistMetadata(android.support.media2.MediaMetadata2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaMetadata2 r1, $r4;
        java.lang.Object r2, $r3;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaMetadata2 mMetadata>;

        if r1 != $r4 goto label1;

        exitmonitor r2;

        return;

     label1:
        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaMetadata2 mMetadata> = r1;

        exitmonitor r2;

        goto label2;

     label2:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyPlaylistMetadataChanged()>();

        return;
    }

    public android.support.media2.MediaItem2 getCurrentMediaItem()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r3, $r4;
        android.support.media2.MediaItem2 $r5;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r5 = $r4.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

     label2:
        exitmonitor r1;

        return $r5;
    }

    public void addPlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaItem2 r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r12;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        double $d0, $d1, $d2;
        boolean $z0;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        i4 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if r1 != null goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r11;

     label01:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label02:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i5 = staticinvoke <android.support.media2.SessionPlaylistAgentImplBase: int clamp(int,int)>(i4, $i0);

        i6 = i5;

        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i5, r1);

        $i1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>;

        if $i1 != 0 goto label03;

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>(i5, r1);

        goto label04;

     label03:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i3 = $i2 + 1;

        $d1 = (double) $i3;

        $d2 = $d0 * $d1;

        i7 = (int) $d2;

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        virtualinvoke $r8.<java.util.ArrayList: void add(int,java.lang.Object)>(i7, r1);

     label04:
        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 != 0 goto label05;

        $r9 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>(-1, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r9;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

        goto label06;

     label05:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyPlaylistChanged()>();

        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removePlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaItem2 r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r10;
        java.util.ArrayList $r5, $r6;
        boolean $z0;
        java.util.Map $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r9;

     label1:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyPlaylistChanged()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void replacePlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaItem2 r1;
        java.lang.Object r2, $r4, $r9, $r12;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Throwable r3, $r20;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r10, $r14, $r16;
        java.util.Map $r11;
        boolean $z0;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r18;
        java.lang.IllegalArgumentException $r19;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        i4 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if r1 != null goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r19;

     label01:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label02:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i1 > 0 goto label04;

        exitmonitor r2;

     label03:
        return;

     label04:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        i5 = staticinvoke <android.support.media2.SessionPlaylistAgentImplBase: int clamp(int,int)>(i4, $i3);

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        i0 = virtualinvoke $r8.<java.util.ArrayList: int indexOf(java.lang.Object)>($r9);

        $r11 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12);

        $r14 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        $r16 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i5, r1);

        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 != 0 goto label05;

        $r18 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>(-1, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r18;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

        goto label06;

     label05:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyPlaylistChanged()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void skipToPlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaItem2 r1, $r6;
        java.lang.Object r2, $r4;
        int i0;
        java.lang.Throwable r3, $r10;
        boolean $z0, $z1;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r5, $r8;
        java.util.ArrayList $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label01;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r9;

     label01:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label02:
        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 == 0 goto label03;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r6 = $r5.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $z1 = virtualinvoke r1.<android.support.media2.MediaItem2: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 >= 0 goto label07;

        exitmonitor r2;

     label06:
        return;

     label07:
        $r8 = new android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        specialinvoke $r8.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: void <init>(android.support.media2.SessionPlaylistAgentImplBase,int)>(r0, i0);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r8;

        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label02 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void skipToPreviousItem()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r4;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem r2, $r5, $r6;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i0 = $r5.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        r2 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>($i0, -1);

        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if r2 == $r6 goto label4;

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = r2;

        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void skipToNextItem()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r4;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem r2, $r5, $r6, $r7, $r8;
        java.lang.Throwable r3, $r9;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if $r6 != $r5 goto label4;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i0 = $r7.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        r2 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>($i0, 1);

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if r2 == $r8 goto label5;

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = r2;

        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getRepeatMode()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode>;

        exitmonitor r1;

        return $i0;
    }

    public void setRepeatMode(int)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r11;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r4, $r5, $r6, $r7, $r8, $r9;
        android.support.media2.MediaPlayerConnector $r10, $r12;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        i0 := @parameter0: int;

        if i0 < 0 goto label01;

        if i0 <= 3 goto label02;

     label01:
        return;

     label02:
        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label03:
        $i1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode>;

        if $i1 != i0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        r0.<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode> = i0;

        tableswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label07;
            default: goto label09;
        };

     label06:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        if $r7 == null goto label09;

        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if $r9 == $r8 goto label09;

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        virtualinvoke $r10.<android.support.media2.MediaPlayerConnector: void loopCurrent(boolean)>(1);

        goto label09;

     label07:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if $r5 != $r4 goto label08;

        $r6 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>(-1, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r6;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

     label08:
        $r12 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        virtualinvoke $r12.<android.support.media2.MediaPlayerConnector: void loopCurrent(boolean)>(0);

     label09:
        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label12:
        throw r2;

     label13:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyRepeatModeChanged()>();

        return;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public int getShuffleMode()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>;

        exitmonitor r1;

        return $i0;
    }

    public void setShuffleMode(int)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label3:
        $i1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>;

        if $i1 != i0 goto label5;

        exitmonitor r1;

     label4:
        return;

     label5:
        r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode> = i0;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void applyShuffleModeLocked()>();

        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label8:
        throw r2;

     label9:
        virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void notifyShuffleModeChanged()>();

        return;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.support.media2.MediaItem2 getMediaItem(android.support.media2.DataSourceDesc2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.DataSourceDesc2 r1;
        java.lang.Object r2, $r6, $r10, $r11, $r12;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.Throwable r5, $r14;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0;
        android.support.media2.MediaItem2 $r9, $r13;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.DataSourceDesc2;

        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r11 != r1 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (android.support.media2.MediaItem2) $r12;

        exitmonitor r2;

     label3:
        return $r13;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        $r9 = specialinvoke r0.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaItem2 getMediaItem(android.support.media2.DataSourceDesc2)>(r1);

        return $r9;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getCurShuffledIndex()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r4;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i0 = $r4.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        goto label3;

     label2:
        $i0 = -2;

     label3:
        exitmonitor r1;

     label4:
        return $i0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean hasValidItem()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r3;
        boolean $z0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        exitmonitor r1;

        return $z0;
    }

    android.support.media2.DataSourceDesc2 retrieveDataSourceDescLocked(android.support.media2.MediaItem2)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaSession2$OnDataSourceMissingHelper r2;
        java.util.Map $r3, $r7, $r9;
        java.lang.Object $r4;
        android.support.media2.MediaSession2ImplBase $r5;
        android.support.media2.MediaSession2 $r6;
        android.support.media2.DataSourceDesc2 r11, r12;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        r11 = virtualinvoke r1.<android.support.media2.MediaItem2: android.support.media2.DataSourceDesc2 getDataSourceDesc()>();

        if r11 == null goto label1;

        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

        return r11;

     label1:
        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (android.support.media2.DataSourceDesc2) $r4;

        if r12 == null goto label2;

        return r12;

     label2:
        r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper>;

        if r2 == null goto label3;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaSession2ImplBase mSession>;

        $r6 = virtualinvoke $r5.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        r12 = interfaceinvoke r2.<android.support.media2.MediaSession2$OnDataSourceMissingHelper: android.support.media2.DataSourceDesc2 onDataSourceMissing(android.support.media2.MediaSession2,android.support.media2.MediaItem2)>($r6, r1);

        if r12 == null goto label3;

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.Map mItemDsdMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

     label3:
        return r12;
    }

    android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int, int)
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7, i8, $i9;
        android.support.media2.DataSourceDesc2 r1;
        java.util.ArrayList $r2, $r4, $r5, $r7;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r3, $r6;
        java.lang.Object $r8;
        android.support.media2.MediaItem2 $r9;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i6 != -1 goto label03;

        if i0 <= 0 goto label01;

        $i7 = -1;

        goto label02;

     label01:
        $i7 = i1;

     label02:
        i6 = $i7;

     label03:
        i8 = 0;

     label04:
        if i8 >= i1 goto label13;

        i6 = i6 + i0;

        if i6 < 0 goto label05;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i6 < $i5 goto label11;

     label05:
        $i2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode>;

        if $i2 != 0 goto label08;

        $i4 = i1 - 1;

        if i8 != $i4 goto label06;

        $r6 = null;

        goto label07;

     label06:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

     label07:
        return $r6;

     label08:
        if i6 >= 0 goto label09;

        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i9 = $i3 - 1;

        goto label10;

     label09:
        $i9 = 0;

     label10:
        i6 = $i9;

     label11:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r9 = (android.support.media2.MediaItem2) $r8;

        r1 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.DataSourceDesc2 retrieveDataSourceDescLocked(android.support.media2.MediaItem2)>($r9);

        if r1 == null goto label12;

        $r3 = new android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        specialinvoke $r3.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: void <init>(android.support.media2.SessionPlaylistAgentImplBase,int,android.support.media2.DataSourceDesc2)>(r0, i6, r1);

        return $r3;

     label12:
        i8 = i8 + 1;

        goto label04;

     label13:
        return null;
    }

    void updateCurrentIfNeededLocked()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r1, $r2, $r5, $r7, $r9, $r12, $r15, $r16, $r18, $r19;
        android.support.media2.MediaItem2 $r3, $r11, $r13;
        java.util.ArrayList $r4, $r6, $r8, $r17;
        java.lang.Object $r10;
        android.support.media2.DataSourceDesc2 $r14;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $z0 = specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: boolean hasValidItem()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $z1 = virtualinvoke $r1.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: boolean isValid()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r3 = $r2.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>($r3);

        if i0 < 0 goto label3;

        $r19 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r19.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx> = i0;

        return;

     label3:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i1 = $r5.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 < $i2 goto label4;

        $r17 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $i5 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r18 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>($i6, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r18;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

        goto label5;

     label4:
        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i3 = $r7.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r11 = (android.support.media2.MediaItem2) $r10;

        $r9.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem> = $r11;

        $r12 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r13 = $r12.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $r14 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.DataSourceDesc2 retrieveDataSourceDescLocked(android.support.media2.MediaItem2)>($r13);

        if $r14 != null goto label5;

        $r15 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i4 = $r15.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r16 = virtualinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>($i4, 1);

        r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r16;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase: void updatePlayerDataSourceLocked()>();

     label5:
        return;
    }

    private void updatePlayerDataSourceLocked()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r1, $r2, $r3, $r5, $r10;
        android.support.media2.MediaPlayerConnector $r4, $r7, $r8, $r9, $r12;
        int $i0, $i1;
        android.support.media2.DataSourceDesc2 $r6, $r11;
        boolean $z0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if $r3 != $r2 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $i0 = virtualinvoke $r4.<android.support.media2.MediaPlayerConnector: int getPlayerState()>();

        if $i0 != 0 goto label3;

        $r12 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r10 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r11 = $r10.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd>;

        virtualinvoke $r12.<android.support.media2.MediaPlayerConnector: void setDataSource(android.support.media2.DataSourceDesc2)>($r11);

        goto label4;

     label3:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $r6 = $r5.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd>;

        virtualinvoke $r7.<android.support.media2.MediaPlayerConnector: void setNextDataSource(android.support.media2.DataSourceDesc2)>($r6);

        $r8 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        virtualinvoke $r8.<android.support.media2.MediaPlayerConnector: void skipToNext()>();

     label4:
        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $i1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mRepeatMode>;

        if $i1 != 1 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        virtualinvoke $r9.<android.support.media2.MediaPlayerConnector: void loopCurrent(boolean)>($z0);

        return;
    }

    private void applyShuffleModeLocked()
    {
        android.support.media2.SessionPlaylistAgentImplBase r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase;

        $r1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r2 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mPlaylist>;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        $i0 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>;

        if $i0 == 1 goto label1;

        $i1 = r0.<android.support.media2.SessionPlaylistAgentImplBase: int mShuffleMode>;

        if $i1 != 2 goto label2;

     label1:
        $r4 = r0.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r4);

     label2:
        return;
    }

    private static int clamp(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        return 0;

     label1:
        if i0 <= i1 goto label2;

        $i2 = i1;

        goto label3;

     label2:
        $i2 = i0;

     label3:
        return $i2;
    }

android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback
<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>
    void <init>(android.support.media2.SessionPlaylistAgentImplBase)
    {
        android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback r0;
        android.support.media2.SessionPlaylistAgentImplBase r1;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.SessionPlaylistAgentImplBase;

        r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0> = r1;

        specialinvoke r0.<android.support.media2.MediaPlayerConnector$PlayerEventCallback: void <init>()>();

        return;
    }

    public void onCurrentDataSourceChanged(android.support.media2.MediaPlayerConnector, android.support.media2.DataSourceDesc2)
    {
        android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1, $r8;
        android.support.media2.DataSourceDesc2 r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r17;
        android.support.media2.SessionPlaylistAgentImplBase $r5, $r7, $r9, $r11, $r13, $r14, $r16;
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem $r10, $r12, $r15;
        int $i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r6 = $r5.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r8 = $r7.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        if $r8 == r1 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        if r2 != null goto label4;

        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r10 = $r9.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        if $r10 == null goto label4;

        $r14 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r13 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r11 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r12 = $r11.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent>;

        $i0 = $r12.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r15 = virtualinvoke $r13.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem getNextValidPlayItemLocked(int,int)>($i0, 1);

        $r14.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mCurrent> = $r15;

        $r16 = r0.<android.support.media2.SessionPlaylistAgentImplBase$MyPlayerEventCallback: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        virtualinvoke $r16.<android.support.media2.SessionPlaylistAgentImplBase: void updateCurrentIfNeededLocked()>();

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

android.support.media2.SessionPlaylistAgentImplBase$PlayItem
<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>
<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd>
<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>
<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0>
    void <init>(android.support.media2.SessionPlaylistAgentImplBase, int)
    {
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem r0;
        android.support.media2.SessionPlaylistAgentImplBase r1;
        int i0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        r1 := @parameter0: android.support.media2.SessionPlaylistAgentImplBase;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: void <init>(android.support.media2.SessionPlaylistAgentImplBase,int,android.support.media2.DataSourceDesc2)>(r1, i0, null);

        return;
    }

    void <init>(android.support.media2.SessionPlaylistAgentImplBase, int, android.support.media2.DataSourceDesc2)
    {
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem r0;
        android.support.media2.SessionPlaylistAgentImplBase r1;
        int i0;
        android.support.media2.DataSourceDesc2 r2, $r10;
        java.lang.Object r3, $r6, $r8;
        java.lang.Throwable r4, $r11;
        java.util.ArrayList $r5;
        android.support.media2.MediaItem2 $r7, $r9;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        r1 := @parameter0: android.support.media2.SessionPlaylistAgentImplBase;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.media2.DataSourceDesc2;

        r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx> = i0;

        if i0 < 0 goto label7;

        $r5 = r1.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (android.support.media2.MediaItem2) $r6;

        r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem> = $r7;

        if r2 != null goto label6;

        $r8 = r1.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label1:
        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $r10 = virtualinvoke r1.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.DataSourceDesc2 retrieveDataSourceDescLocked(android.support.media2.MediaItem2)>($r9);

        r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd> = $r10;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        goto label7;

     label6:
        r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd> = r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    boolean isValid()
    {
        android.support.media2.SessionPlaylistAgentImplBase$PlayItem r0, $r4;
        java.lang.Object r1, $r10, $r16;
        java.lang.Throwable r2, $r20;
        android.support.media2.SessionPlaylistAgentImplBase $r3, $r9, $r11, $r13;
        android.support.media2.MediaItem2 $r5, $r7, $r15, $r17;
        android.support.media2.DataSourceDesc2 $r6, $r8, $r18, $r19;
        java.util.ArrayList $r12, $r14;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.support.media2.SessionPlaylistAgentImplBase$PlayItem;

        $r3 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r4 = $r3.<android.support.media2.SessionPlaylistAgentImplBase: android.support.media2.SessionPlaylistAgentImplBase$PlayItem mEopPlayItem>;

        if r0 != $r4 goto label01;

        return 1;

     label01:
        $r5 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        if $r5 != null goto label02;

        return 0;

     label02:
        $r6 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd>;

        if $r6 != null goto label03;

        return 0;

     label03:
        $r7 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $r8 = virtualinvoke $r7.<android.support.media2.MediaItem2: android.support.media2.DataSourceDesc2 getDataSourceDesc()>();

        if $r8 == null goto label04;

        $r17 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $r18 = virtualinvoke $r17.<android.support.media2.MediaItem2: android.support.media2.DataSourceDesc2 getDataSourceDesc()>();

        $r19 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.DataSourceDesc2 dsd>;

        $z0 = virtualinvoke $r18.<java.lang.Object: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        $r9 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r10 = $r9.<android.support.media2.SessionPlaylistAgentImplBase: java.lang.Object mLock>;

        r1 = $r10;

        entermonitor $r10;

     label05:
        $i0 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r11 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r12 = $r11.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i0 < $i1 goto label07;

        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r15 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.MediaItem2 mediaItem>;

        $r13 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: android.support.media2.SessionPlaylistAgentImplBase this$0>;

        $r14 = $r13.<android.support.media2.SessionPlaylistAgentImplBase: java.util.ArrayList mShuffledList>;

        $i2 = r0.<android.support.media2.SessionPlaylistAgentImplBase$PlayItem: int shuffledIdx>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        if $r15 == $r16 goto label09;

        exitmonitor r1;

     label08:
        return 0;

     label09:
        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r1;

     label12:
        throw r2;

     label13:
        return 1;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

