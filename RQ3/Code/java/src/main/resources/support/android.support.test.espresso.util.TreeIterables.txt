android.support.test.espresso.util.TreeIterables
<android.support.test.espresso.util.TreeIterables: android.support.test.espresso.util.TreeIterables$TreeViewer VIEW_TREE_VIEWER>
    private void <init>()
    {
        android.support.test.espresso.util.TreeIterables r0;

        r0 := @this: android.support.test.espresso.util.TreeIterables;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Iterable depthFirstViewTraversalWithDistance(android.view.View)
    {
        android.view.View r0;
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer r1, $r2;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r3;
        java.lang.Iterable $r4, $r6;
        android.support.test.espresso.util.TreeIterables$1 $r5;

        r0 := @parameter0: android.view.View;

        $r2 = new android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer;

        $r3 = <android.support.test.espresso.util.TreeIterables: android.support.test.espresso.util.TreeIterables$TreeViewer VIEW_TREE_VIEWER>;

        specialinvoke $r2.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: void <init>(java.lang.Object,android.support.test.espresso.util.TreeIterables$TreeViewer)>(r0, $r3);

        r1 = $r2;

        $r4 = staticinvoke <android.support.test.espresso.util.TreeIterables: java.lang.Iterable depthFirstTraversal(java.lang.Object,android.support.test.espresso.util.TreeIterables$TreeViewer)>(r0, r1);

        $r5 = new android.support.test.espresso.util.TreeIterables$1;

        specialinvoke $r5.<android.support.test.espresso.util.TreeIterables$1: void <init>(android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer)>(r1);

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,android.support.test.espresso.core.internal.deps.guava.base.Function)>($r4, $r5);

        return $r6;
    }

    public static java.lang.Iterable depthFirstViewTraversal(android.view.View)
    {
        android.view.View r0;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r1;
        java.lang.Iterable $r2;

        r0 := @parameter0: android.view.View;

        $r1 = <android.support.test.espresso.util.TreeIterables: android.support.test.espresso.util.TreeIterables$TreeViewer VIEW_TREE_VIEWER>;

        $r2 = staticinvoke <android.support.test.espresso.util.TreeIterables: java.lang.Iterable depthFirstTraversal(java.lang.Object,android.support.test.espresso.util.TreeIterables$TreeViewer)>(r0, $r1);

        return $r2;
    }

    public static java.lang.Iterable breadthFirstViewTraversal(android.view.View)
    {
        android.view.View r0;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r1;
        java.lang.Iterable $r2;

        r0 := @parameter0: android.view.View;

        $r1 = <android.support.test.espresso.util.TreeIterables: android.support.test.espresso.util.TreeIterables$TreeViewer VIEW_TREE_VIEWER>;

        $r2 = staticinvoke <android.support.test.espresso.util.TreeIterables: java.lang.Iterable breadthFirstTraversal(java.lang.Object,android.support.test.espresso.util.TreeIterables$TreeViewer)>(r0, $r1);

        return $r2;
    }

    static java.lang.Iterable depthFirstTraversal(java.lang.Object, android.support.test.espresso.util.TreeIterables$TreeViewer)
    {
        java.lang.Object r0;
        android.support.test.espresso.util.TreeIterables$TreeViewer r1;
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable $r4;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.support.test.espresso.util.TreeIterables$TreeViewer;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        $r5 = <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy DEPTH_FIRST>;

        specialinvoke $r4.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: void <init>(java.lang.Object,android.support.test.espresso.util.TreeIterables$TraversalStrategy,android.support.test.espresso.util.TreeIterables$TreeViewer,android.support.test.espresso.util.TreeIterables$1)>(r0, $r5, r1, null);

        return $r4;
    }

    static java.lang.Iterable breadthFirstTraversal(java.lang.Object, android.support.test.espresso.util.TreeIterables$TreeViewer)
    {
        java.lang.Object r0;
        android.support.test.espresso.util.TreeIterables$TreeViewer r1;
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable $r4;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.support.test.espresso.util.TreeIterables$TreeViewer;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        $r5 = <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy BREADTH_FIRST>;

        specialinvoke $r4.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: void <init>(java.lang.Object,android.support.test.espresso.util.TreeIterables$TraversalStrategy,android.support.test.espresso.util.TreeIterables$TreeViewer,android.support.test.espresso.util.TreeIterables$1)>(r0, $r5, r1, null);

        return $r4;
    }

    static void <clinit>()
    {
        android.support.test.espresso.util.TreeIterables$ViewTreeViewer $r0;

        $r0 = new android.support.test.espresso.util.TreeIterables$ViewTreeViewer;

        specialinvoke $r0.<android.support.test.espresso.util.TreeIterables$ViewTreeViewer: void <init>()>();

        <android.support.test.espresso.util.TreeIterables: android.support.test.espresso.util.TreeIterables$TreeViewer VIEW_TREE_VIEWER> = $r0;

        return;
    }

android.support.test.espresso.util.TreeIterables$1
<android.support.test.espresso.util.TreeIterables$1: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer val$distanceRecorder>
    void <init>(android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer)
    {
        android.support.test.espresso.util.TreeIterables$1 r0;
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer r1;

        r0 := @this: android.support.test.espresso.util.TreeIterables$1;

        r1 := @parameter0: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer;

        r0.<android.support.test.espresso.util.TreeIterables$1: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer val$distanceRecorder> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.espresso.util.TreeIterables$ViewAndDistance apply(android.view.View)
    {
        android.support.test.espresso.util.TreeIterables$1 r0;
        android.view.View r1;
        android.support.test.espresso.util.TreeIterables$ViewAndDistance $r2;
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer $r3;
        int $i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$1;

        r1 := @parameter0: android.view.View;

        $r2 = new android.support.test.espresso.util.TreeIterables$ViewAndDistance;

        $r3 = r0.<android.support.test.espresso.util.TreeIterables$1: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer val$distanceRecorder>;

        $i0 = virtualinvoke $r3.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: int getDistance(java.lang.Object)>(r1);

        specialinvoke $r2.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: void <init>(android.view.View,int,android.support.test.espresso.util.TreeIterables$1)>(r1, $i0, null);

        return $r2;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        android.support.test.espresso.util.TreeIterables$1 r0;
        java.lang.Object r1;
        android.view.View $r2;
        android.support.test.espresso.util.TreeIterables$ViewAndDistance $r3;

        r0 := @this: android.support.test.espresso.util.TreeIterables$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.util.TreeIterables$1: android.support.test.espresso.util.TreeIterables$ViewAndDistance apply(android.view.View)>($r2);

        return $r3;
    }

android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer
<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.lang.Object root>
<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.util.Map nodeToDistance>
<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: android.support.test.espresso.util.TreeIterables$TreeViewer delegateViewer>
    void <init>(java.lang.Object, android.support.test.espresso.util.TreeIterables$TreeViewer)
    {
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer r0;
        java.lang.Object r1, $r4, $r5;
        android.support.test.espresso.util.TreeIterables$TreeViewer r2, $r6;
        java.util.HashMap $r3;
        java.util.Map r7;

        r0 := @this: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.test.espresso.util.TreeIterables$TreeViewer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r7 = (java.util.Map) $r3;

        r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.util.Map nodeToDistance> = r7;

        $r4 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.lang.Object root> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.support.test.espresso.util.TreeIterables$TreeViewer) $r5;

        r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: android.support.test.espresso.util.TreeIterables$TreeViewer delegateViewer> = $r6;

        return;
    }

    int getDistance(java.lang.Object)
    {
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer r0;
        java.lang.Object r1, $r3, $r5;
        java.util.Map $r2;
        java.lang.Integer $r4, $r6;
        int $i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.util.Map nodeToDistance>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>($r4, "Never seen %s before", r1);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public java.util.Collection children(java.lang.Object)
    {
        android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer r0;
        java.lang.Object r1, r4, $r5;
        int i0, i1;
        java.util.Collection r2;
        java.util.Iterator r3;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r6;
        java.util.Map $r7, $r10;
        java.lang.Integer $r8, $r11;
        boolean $z0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer;

        r1 := @parameter0: java.lang.Object;

        $r5 = r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.lang.Object root>;

        if r1 != $r5 goto label1;

        $r10 = r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.util.Map nodeToDistance>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label1:
        i0 = virtualinvoke r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: int getDistance(java.lang.Object)>(r1);

        i1 = i0 + 1;

        $r6 = r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: android.support.test.espresso.util.TreeIterables$TreeViewer delegateViewer>;

        r2 = interfaceinvoke $r6.<android.support.test.espresso.util.TreeIterables$TreeViewer: java.util.Collection children(java.lang.Object)>(r1);

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = r0.<android.support.test.espresso.util.TreeIterables$DistanceRecordingTreeViewer: java.util.Map nodeToDistance>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r8);

        goto label2;

     label3:
        return r2;
    }

android.support.test.espresso.util.TreeIterables$TraversalStrategy$1
    void <init>(java.lang.String, int)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$1 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.util.TreeIterables$TraversalStrategy: void <init>(java.lang.String,int,android.support.test.espresso.util.TreeIterables$1)>(r1, i0, null);

        return;
    }

    void combineNewChildren(java.util.LinkedList, java.util.Collection)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$1 r0;
        java.util.LinkedList r1;
        java.util.Collection r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy$1;

        r1 := @parameter0: java.util.LinkedList;

        r2 := @parameter1: java.util.Collection;

        virtualinvoke r1.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r2);

        return;
    }

android.support.test.espresso.util.TreeIterables$TraversalStrategy$2
    void <init>(java.lang.String, int)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$2 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.util.TreeIterables$TraversalStrategy: void <init>(java.lang.String,int,android.support.test.espresso.util.TreeIterables$1)>(r1, i0, null);

        return;
    }

    void combineNewChildren(java.util.LinkedList, java.util.Collection)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$2 r0;
        java.util.LinkedList r1;
        java.util.Collection r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy$2;

        r1 := @parameter0: java.util.LinkedList;

        r2 := @parameter1: java.util.Collection;

        virtualinvoke r1.<java.util.LinkedList: boolean addAll(int,java.util.Collection)>(0, r2);

        return;
    }

android.support.test.espresso.util.TreeIterables$TraversalStrategy
<android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy BREADTH_FIRST>
<android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy DEPTH_FIRST>
<android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy[] $VALUES>
    public static android.support.test.espresso.util.TreeIterables$TraversalStrategy[] values()
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.test.espresso.util.TreeIterables$TraversalStrategy[]) $r1;

        return $r2;
    }

    public static android.support.test.espresso.util.TreeIterables$TraversalStrategy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/test/espresso/util/TreeIterables$TraversalStrategy;", r0);

        $r2 = (android.support.test.espresso.util.TreeIterables$TraversalStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

<android.support.test.espresso.util.TreeIterables$TraversalStrategy: void combineNewChildren(java.util.LinkedList,java.util.Collection)>
    java.lang.Object next(java.util.LinkedList)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy r0;
        java.util.LinkedList r1;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy;

        r1 := @parameter0: java.util.LinkedList;

        $r2 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        return $r2;
    }

    void <init>(java.lang.String, int, android.support.test.espresso.util.TreeIterables$1)
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy r0;
        java.lang.String r1;
        int i0;
        android.support.test.espresso.util.TreeIterables$1 r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TraversalStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.test.espresso.util.TreeIterables$1;

        specialinvoke r0.<android.support.test.espresso.util.TreeIterables$TraversalStrategy: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$1 $r0;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy$2 $r1;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy[] $r2;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r3, $r4;

        $r0 = new android.support.test.espresso.util.TreeIterables$TraversalStrategy$1;

        specialinvoke $r0.<android.support.test.espresso.util.TreeIterables$TraversalStrategy$1: void <init>(java.lang.String,int)>("BREADTH_FIRST", 0);

        <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy BREADTH_FIRST> = $r0;

        $r1 = new android.support.test.espresso.util.TreeIterables$TraversalStrategy$2;

        specialinvoke $r1.<android.support.test.espresso.util.TreeIterables$TraversalStrategy$2: void <init>(java.lang.String,int)>("DEPTH_FIRST", 1);

        <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy DEPTH_FIRST> = $r1;

        $r2 = newarray (android.support.test.espresso.util.TreeIterables$TraversalStrategy)[2];

        $r3 = <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy BREADTH_FIRST>;

        $r2[0] = $r3;

        $r4 = <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy DEPTH_FIRST>;

        $r2[1] = $r4;

        <android.support.test.espresso.util.TreeIterables$TraversalStrategy: android.support.test.espresso.util.TreeIterables$TraversalStrategy[] $VALUES> = $r2;

        return;
    }

android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1
<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.util.LinkedList val$nodes>
<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable this$0>
    void <init>(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable, java.util.LinkedList)
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1 r0;
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r1;
        java.util.LinkedList r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1;

        r1 := @parameter0: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        r2 := @parameter1: java.util.LinkedList;

        r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable this$0> = r1;

        r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.util.LinkedList val$nodes> = r2;

        specialinvoke r0.<android.support.test.espresso.core.internal.deps.guava.collect.AbstractIterator: void <init>()>();

        return;
    }

    public java.lang.Object computeNext()
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1 r0;
        java.lang.Object r1, $r6, $r13;
        java.util.LinkedList $r2, $r5, $r10;
        boolean $z0;
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable $r3, $r7, $r9;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r4, $r8;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r11;
        java.util.Collection $r12;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1;

        $r2 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.util.LinkedList val$nodes>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.lang.Object endOfData()>();

        return $r13;

     label1:
        $r3 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable this$0>;

        $r4 = staticinvoke <android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TraversalStrategy access$200(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable)>($r3);

        $r5 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.util.LinkedList val$nodes>;

        $r6 = virtualinvoke $r4.<android.support.test.espresso.util.TreeIterables$TraversalStrategy: java.lang.Object next(java.util.LinkedList)>($r5);

        r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r6, "Null items not allowed!");

        $r7 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable this$0>;

        $r8 = staticinvoke <android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TraversalStrategy access$200(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable)>($r7);

        $r10 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: java.util.LinkedList val$nodes>;

        $r9 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable this$0>;

        $r11 = staticinvoke <android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TreeViewer access$300(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable)>($r9);

        $r12 = interfaceinvoke $r11.<android.support.test.espresso.util.TreeIterables$TreeViewer: java.util.Collection children(java.lang.Object)>(r1);

        virtualinvoke $r8.<android.support.test.espresso.util.TreeIterables$TraversalStrategy: void combineNewChildren(java.util.LinkedList,java.util.Collection)>($r10, $r12);

        return r1;
    }

android.support.test.espresso.util.TreeIterables$TreeTraversalIterable
<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: java.lang.Object root>
<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TraversalStrategy traversalStrategy>
<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TreeViewer treeViewer>
    private void <init>(java.lang.Object, android.support.test.espresso.util.TreeIterables$TraversalStrategy, android.support.test.espresso.util.TreeIterables$TreeViewer)
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r0;
        java.lang.Object r1, $r4, $r5, $r7;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy r2, $r6;
        android.support.test.espresso.util.TreeIterables$TreeViewer r3, $r8;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.test.espresso.util.TreeIterables$TraversalStrategy;

        r3 := @parameter2: android.support.test.espresso.util.TreeIterables$TreeViewer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: java.lang.Object root> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.support.test.espresso.util.TreeIterables$TraversalStrategy) $r5;

        r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TraversalStrategy traversalStrategy> = $r6;

        $r7 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r8 = (android.support.test.espresso.util.TreeIterables$TreeViewer) $r7;

        r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TreeViewer treeViewer> = $r8;

        return;
    }

    public java.util.Iterator iterator()
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r0;
        java.util.LinkedList r1;
        java.lang.Object $r2;
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1 $r3;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r2 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: java.lang.Object root>;

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        $r3 = new android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1;

        specialinvoke $r3.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable$1: void <init>(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable,java.util.LinkedList)>(r0, r1);

        return $r3;
    }

    void <init>(java.lang.Object, android.support.test.espresso.util.TreeIterables$TraversalStrategy, android.support.test.espresso.util.TreeIterables$TreeViewer, android.support.test.espresso.util.TreeIterables$1)
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r0;
        java.lang.Object r1;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy r2;
        android.support.test.espresso.util.TreeIterables$TreeViewer r3;
        android.support.test.espresso.util.TreeIterables$1 r4;

        r0 := @this: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.test.espresso.util.TreeIterables$TraversalStrategy;

        r3 := @parameter2: android.support.test.espresso.util.TreeIterables$TreeViewer;

        r4 := @parameter3: android.support.test.espresso.util.TreeIterables$1;

        specialinvoke r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: void <init>(java.lang.Object,android.support.test.espresso.util.TreeIterables$TraversalStrategy,android.support.test.espresso.util.TreeIterables$TreeViewer)>(r1, r2, r3);

        return;
    }

    static android.support.test.espresso.util.TreeIterables$TraversalStrategy access$200(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable)
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r0;
        android.support.test.espresso.util.TreeIterables$TraversalStrategy $r1;

        r0 := @parameter0: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        $r1 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TraversalStrategy traversalStrategy>;

        return $r1;
    }

    static android.support.test.espresso.util.TreeIterables$TreeViewer access$300(android.support.test.espresso.util.TreeIterables$TreeTraversalIterable)
    {
        android.support.test.espresso.util.TreeIterables$TreeTraversalIterable r0;
        android.support.test.espresso.util.TreeIterables$TreeViewer $r1;

        r0 := @parameter0: android.support.test.espresso.util.TreeIterables$TreeTraversalIterable;

        $r1 = r0.<android.support.test.espresso.util.TreeIterables$TreeTraversalIterable: android.support.test.espresso.util.TreeIterables$TreeViewer treeViewer>;

        return $r1;
    }

android.support.test.espresso.util.TreeIterables$TreeViewer
<android.support.test.espresso.util.TreeIterables$TreeViewer: java.util.Collection children(java.lang.Object)>
android.support.test.espresso.util.TreeIterables$ViewAndDistance
<android.support.test.espresso.util.TreeIterables$ViewAndDistance: android.view.View view>
<android.support.test.espresso.util.TreeIterables$ViewAndDistance: int distanceFromRoot>
    private void <init>(android.view.View, int)
    {
        android.support.test.espresso.util.TreeIterables$ViewAndDistance r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewAndDistance;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: android.view.View view> = r1;

        r0.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: int distanceFromRoot> = i0;

        return;
    }

    public android.view.View getView()
    {
        android.support.test.espresso.util.TreeIterables$ViewAndDistance r0;
        android.view.View $r1;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewAndDistance;

        $r1 = r0.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: android.view.View view>;

        return $r1;
    }

    public int getDistanceFromRoot()
    {
        android.support.test.espresso.util.TreeIterables$ViewAndDistance r0;
        int $i0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewAndDistance;

        $i0 = r0.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: int distanceFromRoot>;

        return $i0;
    }

    void <init>(android.view.View, int, android.support.test.espresso.util.TreeIterables$1)
    {
        android.support.test.espresso.util.TreeIterables$ViewAndDistance r0;
        android.view.View r1;
        int i0;
        android.support.test.espresso.util.TreeIterables$1 r2;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewAndDistance;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.test.espresso.util.TreeIterables$1;

        specialinvoke r0.<android.support.test.espresso.util.TreeIterables$ViewAndDistance: void <init>(android.view.View,int)>(r1, i0);

        return;
    }

android.support.test.espresso.util.TreeIterables$ViewTreeViewer
    void <init>()
    {
        android.support.test.espresso.util.TreeIterables$ViewTreeViewer r0;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewTreeViewer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Collection children(android.view.View)
    {
        android.support.test.espresso.util.TreeIterables$ViewTreeViewer r0;
        android.view.View r1, $r6;
        android.view.ViewGroup r2;
        int i0, i1;
        java.util.ArrayList r3;
        boolean $z0;
        java.util.List $r5, r7;
        java.util.Collection r8;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewTreeViewer;

        r1 := @parameter0: android.view.View;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i0 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        r7 = (java.util.List) r3;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;

     label3:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r8 = (java.util.Collection) $r5;

        return r8;
    }

    public volatile java.util.Collection children(java.lang.Object)
    {
        android.support.test.espresso.util.TreeIterables$ViewTreeViewer r0;
        java.lang.Object r1;
        android.view.View $r2;
        java.util.Collection $r3;

        r0 := @this: android.support.test.espresso.util.TreeIterables$ViewTreeViewer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.util.TreeIterables$ViewTreeViewer: java.util.Collection children(android.view.View)>($r2);

        return $r3;
    }

