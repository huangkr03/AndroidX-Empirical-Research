android.support.design.transformation.FabTransformationScrimBehavior
<android.support.design.transformation.FabTransformationScrimBehavior: long EXPAND_DELAY>
<android.support.design.transformation.FabTransformationScrimBehavior: long EXPAND_DURATION>
<android.support.design.transformation.FabTransformationScrimBehavior: long COLLAPSE_DELAY>
<android.support.design.transformation.FabTransformationScrimBehavior: long COLLAPSE_DURATION>
<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming expandTiming>
<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming collapseTiming>
    public void <init>()
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.support.design.animation.MotionTiming $r1, $r2;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        specialinvoke r0.<android.support.design.transformation.ExpandableTransformationBehavior: void <init>()>();

        $r1 = new android.support.design.animation.MotionTiming;

        specialinvoke $r1.<android.support.design.animation.MotionTiming: void <init>(long,long)>(75L, 150L);

        r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming expandTiming> = $r1;

        $r2 = new android.support.design.animation.MotionTiming;

        specialinvoke $r2.<android.support.design.animation.MotionTiming: void <init>(long,long)>(0L, 150L);

        r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming collapseTiming> = $r2;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.support.design.animation.MotionTiming $r3, $r4;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.transformation.ExpandableTransformationBehavior: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.support.design.animation.MotionTiming;

        specialinvoke $r3.<android.support.design.animation.MotionTiming: void <init>(long,long)>(75L, 150L);

        r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming expandTiming> = $r3;

        $r4 = new android.support.design.animation.MotionTiming;

        specialinvoke $r4.<android.support.design.animation.MotionTiming: void <init>(long,long)>(0L, 150L);

        r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming collapseTiming> = $r4;

        return;
    }

    public boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.support.design.widget.CoordinatorLayout r1;
        android.view.View r2, r3;
        boolean $z0;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.View;

        $z0 = r3 instanceof android.support.design.widget.FloatingActionButton;

        return $z0;
    }

    public boolean onTouchEvent(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.support.design.widget.CoordinatorLayout r1;
        android.view.View r2;
        android.view.MotionEvent r3;
        boolean $z0;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.support.design.transformation.ExpandableTransformationBehavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r1, r2, r3);

        return $z0;
    }

    protected android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View, android.view.View, boolean, boolean)
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.view.View r1, r2;
        boolean z0, z1;
        java.util.ArrayList r3, r4, r10, r11;
        android.animation.AnimatorSet r5, r12;
        android.support.design.transformation.FabTransformationScrimBehavior$1 r13;
        android.animation.Animator$AnimatorListener r14;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r3 = r10;

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r4 = r11;

        specialinvoke r0.<android.support.design.transformation.FabTransformationScrimBehavior: void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List)>(r2, z0, z1, r3, r4);

        r12 = new android.animation.AnimatorSet;

        specialinvoke r12.<android.animation.AnimatorSet: void <init>()>();

        r5 = r12;

        staticinvoke <android.support.design.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>(r5, r3);

        r13 = new android.support.design.transformation.FabTransformationScrimBehavior$1;

        specialinvoke r13.<android.support.design.transformation.FabTransformationScrimBehavior$1: void <init>(android.support.design.transformation.FabTransformationScrimBehavior,boolean,android.view.View)>(r0, z0, r2);

        r14 = (android.animation.Animator$AnimatorListener) r13;

        virtualinvoke r5.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r14);

        return r5;
    }

    private void createScrimAnimation(android.view.View, boolean, boolean, java.util.List, java.util.List)
    {
        android.support.design.transformation.FabTransformationScrimBehavior r0;
        android.view.View r1;
        boolean z0, z1;
        java.util.List r2, r3;
        android.support.design.animation.MotionTiming r4, $r9;
        float[] $r5, $r7;
        android.util.Property $r6, $r8;
        android.animation.ObjectAnimator r10;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.util.List;

        if z0 == 0 goto label1;

        $r9 = r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming expandTiming>;

        goto label2;

     label1:
        $r9 = r0.<android.support.design.transformation.FabTransformationScrimBehavior: android.support.design.animation.MotionTiming collapseTiming>;

     label2:
        r4 = $r9;

        if z0 == 0 goto label4;

        if z1 != 0 goto label3;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

     label3:
        $r8 = <android.view.View: android.util.Property ALPHA>;

        $r7 = newarray (float)[1];

        $r7[0] = 1.0F;

        r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r8, $r7);

        goto label5;

     label4:
        $r6 = <android.view.View: android.util.Property ALPHA>;

        $r5 = newarray (float)[1];

        $r5[0] = 0.0F;

        r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r6, $r5);

     label5:
        virtualinvoke r4.<android.support.design.animation.MotionTiming: void apply(android.animation.Animator)>(r10);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10);

        return;
    }

android.support.design.transformation.FabTransformationScrimBehavior$1
<android.support.design.transformation.FabTransformationScrimBehavior$1: boolean val$expanded>
<android.support.design.transformation.FabTransformationScrimBehavior$1: android.view.View val$child>
<android.support.design.transformation.FabTransformationScrimBehavior$1: android.support.design.transformation.FabTransformationScrimBehavior this$0>
    void <init>(android.support.design.transformation.FabTransformationScrimBehavior, boolean, android.view.View)
    {
        android.support.design.transformation.FabTransformationScrimBehavior$1 r0;
        android.support.design.transformation.FabTransformationScrimBehavior r1;
        boolean z0;
        android.view.View r2;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior$1;

        r1 := @parameter0: android.support.design.transformation.FabTransformationScrimBehavior;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.view.View;

        r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: android.support.design.transformation.FabTransformationScrimBehavior this$0> = r1;

        r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: boolean val$expanded> = z0;

        r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: android.view.View val$child> = r2;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.design.transformation.FabTransformationScrimBehavior$1 r0;
        android.animation.Animator r1;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior$1;

        r1 := @parameter0: android.animation.Animator;

        $z0 = r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: boolean val$expanded>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: android.view.View val$child>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

     label1:
        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.design.transformation.FabTransformationScrimBehavior$1 r0;
        android.animation.Animator r1;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.support.design.transformation.FabTransformationScrimBehavior$1;

        r1 := @parameter0: android.animation.Animator;

        $z0 = r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: boolean val$expanded>;

        if $z0 != 0 goto label1;

        $r2 = r0.<android.support.design.transformation.FabTransformationScrimBehavior$1: android.view.View val$child>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(4);

     label1:
        return;
    }

