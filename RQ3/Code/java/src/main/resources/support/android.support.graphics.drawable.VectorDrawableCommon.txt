android.support.graphics.drawable.VectorDrawableCommon
<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>
    void <init>()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        return;
    }

    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        int i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        return;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        return;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.ColorFilter $r3;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $r3 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>($r2);

        return $r3;

     label1:
        return null;
    }

    protected boolean onLevelChange(int)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>(i0);

        return $z0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        return;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        return;
    }

    public void setHotspot(float, float)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r2, f0, f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r2, i0, i1, i2, i3);

        return;

     label1:
        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>(z0);

        return;

     label1:
        return;
    }

    public void jumpToCurrentState()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>($r2);

        return;

     label1:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>($r3, r1);

        return;

     label1:
        return;
    }

    public void clearColorFilter()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r2;
    }

    public int getMinimumWidth()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public int[] getState()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r3;
        int[] $r2, $r4;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r2;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.Region $r2, $r4;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r2;
    }

    public void setChangingConfigurations(int)
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>(i0);

        return;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>(i0);

        return;
    }

    public boolean setState(int[])
    {
        android.support.graphics.drawable.VectorDrawableCommon r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCommon;

        r1 := @parameter0: int[];

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        $z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z0;
    }

