android.support.test.espresso.util.ActivityLifecycles
    private void <init>()
    {
        android.support.test.espresso.util.ActivityLifecycles r0;

        r0 := @this: android.support.test.espresso.util.ActivityLifecycles;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean hasForegroundActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor r0;
        android.support.test.runner.lifecycle.Stage $r1;
        java.util.Collection $r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.support.test.runner.lifecycle.ActivityLifecycleMonitor;

        $r1 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage RESUMED>;

        $r2 = interfaceinvoke r0.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean hasVisibleActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.support.test.runner.lifecycle.ActivityLifecycleMonitor;

        $z0 = staticinvoke <android.support.test.espresso.util.ActivityLifecycles: boolean hasForegroundActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.support.test.espresso.util.ActivityLifecycles: boolean hasTransitioningActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean hasTransitioningActivities(android.support.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        android.support.test.runner.lifecycle.ActivityLifecycleMonitor r0;
        android.support.test.runner.lifecycle.Stage $r1, $r3, $r5;
        java.util.Collection $r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.support.test.runner.lifecycle.ActivityLifecycleMonitor;

        $r1 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage RESTARTED>;

        $r2 = interfaceinvoke r0.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage STARTED>;

        $r4 = interfaceinvoke r0.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)>($r3);

        $z1 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r5 = <android.support.test.runner.lifecycle.Stage: android.support.test.runner.lifecycle.Stage PAUSED>;

        $r6 = interfaceinvoke r0.<android.support.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)>($r5);

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

