android.support.content.LoaderQueryRunner
<android.support.content.LoaderQueryRunner: boolean DEBUG>
<android.support.content.LoaderQueryRunner: java.lang.String TAG>
<android.support.content.LoaderQueryRunner: java.lang.String CONTENT_URI_KEY>
<android.support.content.LoaderQueryRunner: android.content.Context mContext>
<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr>
    public void <init>(android.content.Context, android.app.LoaderManager)
    {
        android.support.content.LoaderQueryRunner r0;
        android.content.Context r1;
        android.app.LoaderManager r2;

        r0 := @this: android.support.content.LoaderQueryRunner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.LoaderManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.content.LoaderQueryRunner: android.content.Context mContext> = r1;

        r0.<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr> = r2;

        return;
    }

    public void query(android.support.content.Query, android.support.content.ContentPager$QueryRunner$Callback)
    {
        android.support.content.LoaderQueryRunner r0;
        android.support.content.Query r1;
        android.support.content.ContentPager$QueryRunner$Callback r2;
        android.support.content.LoaderQueryRunner$1 r3, $r4;
        android.app.LoaderManager $r5;
        int $i0;

        r0 := @this: android.support.content.LoaderQueryRunner;

        r1 := @parameter0: android.support.content.Query;

        r2 := @parameter1: android.support.content.ContentPager$QueryRunner$Callback;

        $r4 = new android.support.content.LoaderQueryRunner$1;

        specialinvoke $r4.<android.support.content.LoaderQueryRunner$1: void <init>(android.support.content.LoaderQueryRunner,android.support.content.Query,android.support.content.ContentPager$QueryRunner$Callback)>(r0, r1, r2);

        r3 = $r4;

        $r5 = r0.<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr>;

        $i0 = virtualinvoke r1.<android.support.content.Query: int getId()>();

        virtualinvoke $r5.<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>($i0, null, r3);

        return;
    }

    public boolean isRunning(android.support.content.Query)
    {
        android.support.content.LoaderQueryRunner r0;
        android.support.content.Query r1;
        android.content.Loader r2;
        android.app.LoaderManager $r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: android.support.content.LoaderQueryRunner;

        r1 := @parameter0: android.support.content.Query;

        $r3 = r0.<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr>;

        $i0 = virtualinvoke r1.<android.support.content.Query: int getId()>();

        r2 = virtualinvoke $r3.<android.app.LoaderManager: android.content.Loader getLoader(int)>($i0);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.Loader: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void cancel(android.support.content.Query)
    {
        android.support.content.LoaderQueryRunner r0;
        android.support.content.Query r1;
        android.app.LoaderManager $r2;
        int $i0;

        r0 := @this: android.support.content.LoaderQueryRunner;

        r1 := @parameter0: android.support.content.Query;

        $r2 = r0.<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr>;

        $i0 = virtualinvoke r1.<android.support.content.Query: int getId()>();

        virtualinvoke $r2.<android.app.LoaderManager: void destroyLoader(int)>($i0);

        return;
    }

    static android.content.Context access$000(android.support.content.LoaderQueryRunner)
    {
        android.support.content.LoaderQueryRunner r0;
        android.content.Context $r1;

        r0 := @parameter0: android.support.content.LoaderQueryRunner;

        $r1 = r0.<android.support.content.LoaderQueryRunner: android.content.Context mContext>;

        return $r1;
    }

    static android.app.LoaderManager access$100(android.support.content.LoaderQueryRunner)
    {
        android.support.content.LoaderQueryRunner r0;
        android.app.LoaderManager $r1;

        r0 := @parameter0: android.support.content.LoaderQueryRunner;

        $r1 = r0.<android.support.content.LoaderQueryRunner: android.app.LoaderManager mLoaderMgr>;

        return $r1;
    }

android.support.content.LoaderQueryRunner$1$1
<android.support.content.LoaderQueryRunner$1$1: android.support.content.LoaderQueryRunner$1 this$1>
    void <init>(android.support.content.LoaderQueryRunner$1, android.content.Context)
    {
        android.support.content.LoaderQueryRunner$1$1 r0;
        android.support.content.LoaderQueryRunner$1 r1;
        android.content.Context r2;

        r0 := @this: android.support.content.LoaderQueryRunner$1$1;

        r1 := @parameter0: android.support.content.LoaderQueryRunner$1;

        r2 := @parameter1: android.content.Context;

        r0.<android.support.content.LoaderQueryRunner$1$1: android.support.content.LoaderQueryRunner$1 this$1> = r1;

        specialinvoke r0.<android.content.CursorLoader: void <init>(android.content.Context)>(r2);

        return;
    }

    public android.database.Cursor loadInBackground()
    {
        android.support.content.LoaderQueryRunner$1$1 r0;
        android.support.content.LoaderQueryRunner$1 $r1, $r2;
        android.support.content.Query $r3;
        android.support.content.ContentPager$QueryRunner$Callback $r4;
        android.database.Cursor $r5;

        r0 := @this: android.support.content.LoaderQueryRunner$1$1;

        $r1 = r0.<android.support.content.LoaderQueryRunner$1$1: android.support.content.LoaderQueryRunner$1 this$1>;

        $r4 = $r1.<android.support.content.LoaderQueryRunner$1: android.support.content.ContentPager$QueryRunner$Callback val$callback>;

        $r2 = r0.<android.support.content.LoaderQueryRunner$1$1: android.support.content.LoaderQueryRunner$1 this$1>;

        $r3 = $r2.<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query>;

        $r5 = interfaceinvoke $r4.<android.support.content.ContentPager$QueryRunner$Callback: android.database.Cursor runQueryInBackground(android.support.content.Query)>($r3);

        return $r5;
    }

    public volatile java.lang.Object loadInBackground()
    {
        android.support.content.LoaderQueryRunner$1$1 r0;
        android.database.Cursor $r1;

        r0 := @this: android.support.content.LoaderQueryRunner$1$1;

        $r1 = virtualinvoke r0.<android.support.content.LoaderQueryRunner$1$1: android.database.Cursor loadInBackground()>();

        return $r1;
    }

android.support.content.LoaderQueryRunner$1
<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query>
<android.support.content.LoaderQueryRunner$1: android.support.content.ContentPager$QueryRunner$Callback val$callback>
<android.support.content.LoaderQueryRunner$1: android.support.content.LoaderQueryRunner this$0>
    void <init>(android.support.content.LoaderQueryRunner, android.support.content.Query, android.support.content.ContentPager$QueryRunner$Callback)
    {
        android.support.content.LoaderQueryRunner$1 r0;
        android.support.content.LoaderQueryRunner r1;
        android.support.content.Query r2;
        android.support.content.ContentPager$QueryRunner$Callback r3;

        r0 := @this: android.support.content.LoaderQueryRunner$1;

        r1 := @parameter0: android.support.content.LoaderQueryRunner;

        r2 := @parameter1: android.support.content.Query;

        r3 := @parameter2: android.support.content.ContentPager$QueryRunner$Callback;

        r0.<android.support.content.LoaderQueryRunner$1: android.support.content.LoaderQueryRunner this$0> = r1;

        r0.<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query> = r2;

        r0.<android.support.content.LoaderQueryRunner$1: android.support.content.ContentPager$QueryRunner$Callback val$callback> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.content.Loader onCreateLoader(int, android.os.Bundle)
    {
        android.support.content.LoaderQueryRunner$1 r0;
        int i0, $i1;
        android.os.Bundle r1;
        android.support.content.Query $r2;
        android.support.content.LoaderQueryRunner $r4;
        android.content.Context $r5;
        boolean $z0;
        android.support.content.LoaderQueryRunner$1$1 r6;
        android.content.Loader r7;

        r0 := @this: android.support.content.LoaderQueryRunner$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query>;

        $i1 = virtualinvoke $r2.<android.support.content.Query: int getId()>();

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Id doesn\'t match query id.");

        r6 = new android.support.content.LoaderQueryRunner$1$1;

        $r4 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.LoaderQueryRunner this$0>;

        $r5 = staticinvoke <android.support.content.LoaderQueryRunner: android.content.Context access$000(android.support.content.LoaderQueryRunner)>($r4);

        specialinvoke r6.<android.support.content.LoaderQueryRunner$1$1: void <init>(android.support.content.LoaderQueryRunner$1,android.content.Context)>(r0, $r5);

        r7 = (android.content.Loader) r6;

        return r7;
    }

    public void onLoadFinished(android.content.Loader, android.database.Cursor)
    {
        android.support.content.LoaderQueryRunner$1 r0;
        android.content.Loader r1;
        android.database.Cursor r2;
        android.support.content.LoaderQueryRunner $r3;
        android.app.LoaderManager $r4;
        android.support.content.Query $r5, $r6;
        int $i0;
        android.support.content.ContentPager$QueryRunner$Callback $r7;

        r0 := @this: android.support.content.LoaderQueryRunner$1;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: android.database.Cursor;

        $r3 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.LoaderQueryRunner this$0>;

        $r4 = staticinvoke <android.support.content.LoaderQueryRunner: android.app.LoaderManager access$100(android.support.content.LoaderQueryRunner)>($r3);

        $r5 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query>;

        $i0 = virtualinvoke $r5.<android.support.content.Query: int getId()>();

        virtualinvoke $r4.<android.app.LoaderManager: void destroyLoader(int)>($i0);

        $r7 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.ContentPager$QueryRunner$Callback val$callback>;

        $r6 = r0.<android.support.content.LoaderQueryRunner$1: android.support.content.Query val$query>;

        interfaceinvoke $r7.<android.support.content.ContentPager$QueryRunner$Callback: void onQueryFinished(android.support.content.Query,android.database.Cursor)>($r6, r2);

        return;
    }

    public void onLoaderReset(android.content.Loader)
    {
        android.support.content.LoaderQueryRunner$1 r0;
        android.content.Loader r1;

        r0 := @this: android.support.content.LoaderQueryRunner$1;

        r1 := @parameter0: android.content.Loader;

        return;
    }

    public volatile void onLoadFinished(android.content.Loader, java.lang.Object)
    {
        android.support.content.LoaderQueryRunner$1 r0;
        android.content.Loader r1;
        java.lang.Object r2;
        android.database.Cursor $r3;

        r0 := @this: android.support.content.LoaderQueryRunner$1;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) r2;

        virtualinvoke r0.<android.support.content.LoaderQueryRunner$1: void onLoadFinished(android.content.Loader,android.database.Cursor)>(r1, $r3);

        return;
    }

