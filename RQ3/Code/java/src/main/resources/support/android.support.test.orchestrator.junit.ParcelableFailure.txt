android.support.test.orchestrator.junit.ParcelableFailure
<android.support.test.orchestrator.junit.ParcelableFailure: android.os.Parcelable$Creator CREATOR>
<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription mDescription>
<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String mTrace>
    static void <clinit>()
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;

        $r0 = new android.support.test.orchestrator.junit.ParcelableFailure$1;

        specialinvoke $r0.<android.support.test.orchestrator.junit.ParcelableFailure$1: void <init>()>();

        <android.support.test.orchestrator.junit.ParcelableFailure: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        android.os.Parcel $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        android.os.Parcelable $r4;
        android.support.test.orchestrator.junit.ParcelableDescription $r5;
        java.lang.String $r6;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = class "Landroid/support/test/orchestrator/junit/ParcelableDescription;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke $r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r3);

        $r5 = (android.support.test.orchestrator.junit.ParcelableDescription) $r4;

        $r0.<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription mDescription> = $r5;

        $r6 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r0.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String mTrace> = $r6;

        return;
    }

    void <init>(android.os.Parcel, android.support.test.orchestrator.junit.ParcelableFailure$1)
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        android.os.Parcel $r1;
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r2;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        $r1 := @parameter0: android.os.Parcel;

        $r2 := @parameter1: android.support.test.orchestrator.junit.ParcelableFailure$1;

        specialinvoke $r0.<android.support.test.orchestrator.junit.ParcelableFailure: void <init>(android.os.Parcel)>($r1);

        return;
    }

    public void <init>(android.support.test.orchestrator.junit.ParcelableDescription, java.lang.Throwable)
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        android.support.test.orchestrator.junit.ParcelableDescription $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableDescription;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription mDescription> = $r1;

        $r3 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r3 = staticinvoke <android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String trimToLength(java.lang.String)>($r3);

        $r0.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String mTrace> = $r3;

        return;
    }

    private static java.lang.String trimToLength(java.lang.String)
    {
        java.lang.String $r0, $r3;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 16384 goto label1;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16384);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Stack trace too long, trimmed to first %s characters.", $r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ParcelableFailure", $r3);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 16384);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>("\n");

        return $r0;

     label1:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>("\n");

        return $r0;
    }

    public int describeContents()
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        return 0;
    }

    public android.support.test.orchestrator.junit.ParcelableDescription getDescription()
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        android.support.test.orchestrator.junit.ParcelableDescription r1;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        r1 = $r0.<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

        return r1;
    }

    public java.lang.String getTrace()
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        java.lang.String r1;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        r1 = $r0.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String mTrace>;

        return r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.support.test.orchestrator.junit.ParcelableFailure $r0;
        android.os.Parcel $r1;
        int $i0;
        android.support.test.orchestrator.junit.ParcelableDescription $r2;
        java.lang.String $r3;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        $r3 = $r0.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String mTrace>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }

android.support.test.orchestrator.junit.ParcelableFailure$1
    void <init>()
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.orchestrator.junit.ParcelableFailure createFromParcel(android.os.Parcel)
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;
        android.os.Parcel $r1;
        android.support.test.orchestrator.junit.ParcelableFailure $r2;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure$1;

        $r1 := @parameter0: android.os.Parcel;

        $r2 = new android.support.test.orchestrator.junit.ParcelableFailure;

        specialinvoke $r2.<android.support.test.orchestrator.junit.ParcelableFailure: void <init>(android.os.Parcel,android.support.test.orchestrator.junit.ParcelableFailure$1)>($r1, null);

        return $r2;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;
        android.os.Parcel $r1;
        android.support.test.orchestrator.junit.ParcelableFailure $r2;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure$1;

        $r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke $r0.<android.support.test.orchestrator.junit.ParcelableFailure$1: android.support.test.orchestrator.junit.ParcelableFailure createFromParcel(android.os.Parcel)>($r1);

        return $r2;
    }

    public android.support.test.orchestrator.junit.ParcelableFailure[] newArray(int)
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;
        int $i0;
        android.support.test.orchestrator.junit.ParcelableFailure[] $r1;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure$1;

        $i0 := @parameter0: int;

        $r1 = newarray (android.support.test.orchestrator.junit.ParcelableFailure)[$i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        android.support.test.orchestrator.junit.ParcelableFailure$1 $r0;
        int $i0;
        android.support.test.orchestrator.junit.ParcelableFailure[] $r1;

        $r0 := @this: android.support.test.orchestrator.junit.ParcelableFailure$1;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.support.test.orchestrator.junit.ParcelableFailure$1: android.support.test.orchestrator.junit.ParcelableFailure[] newArray(int)>($i0);

        return $r1;
    }

