android.support.text.emoji.widget.EmojiTextWatcher
<android.support.text.emoji.widget.EmojiTextWatcher: android.widget.EditText mEditText>
<android.support.text.emoji.widget.EmojiTextWatcher: android.support.text.emoji.EmojiCompat$InitCallback mInitCallback>
<android.support.text.emoji.widget.EmojiTextWatcher: int mMaxEmojiCount>
<android.support.text.emoji.widget.EmojiTextWatcher: int mEmojiReplaceStrategy>
    void <init>(android.widget.EditText)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        android.widget.EditText r1;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        r1 := @parameter0: android.widget.EditText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mMaxEmojiCount> = 2147483647;

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mEmojiReplaceStrategy> = 0;

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.widget.EditText mEditText> = r1;

        return;
    }

    void setMaxEmojiCount(int)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        int i0;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        i0 := @parameter0: int;

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mMaxEmojiCount> = i0;

        return;
    }

    int getMaxEmojiCount()
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        int $i0;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        $i0 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mMaxEmojiCount>;

        return $i0;
    }

    int getEmojiReplaceStrategy()
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        int $i0;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        $i0 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mEmojiReplaceStrategy>;

        return $i0;
    }

    void setEmojiReplaceStrategy(int)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        int i0;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        i0 := @parameter0: int;

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mEmojiReplaceStrategy> = i0;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.Spannable r2;
        android.widget.EditText $r3;
        boolean $z0, $z1;
        android.support.text.emoji.EmojiCompat $r4, $r5, $r7;
        android.support.text.emoji.EmojiCompat$InitCallback $r8;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.widget.EditText mEditText>;

        $z0 = virtualinvoke $r3.<android.widget.EditText: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        if i1 > i2 goto label4;

        $z1 = r1 instanceof android.text.Spannable;

        if $z1 == 0 goto label4;

        $r4 = staticinvoke <android.support.text.emoji.EmojiCompat: android.support.text.emoji.EmojiCompat get()>();

        $i3 = virtualinvoke $r4.<android.support.text.emoji.EmojiCompat: int getLoadState()>();

        tableswitch($i3)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        r2 = (android.text.Spannable) r1;

        $r5 = staticinvoke <android.support.text.emoji.EmojiCompat: android.support.text.emoji.EmojiCompat get()>();

        $i6 = i0 + i2;

        $i5 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mMaxEmojiCount>;

        $i4 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: int mEmojiReplaceStrategy>;

        virtualinvoke $r5.<android.support.text.emoji.EmojiCompat: java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int)>(r2, i0, $i6, $i5, $i4);

        goto label4;

     label3:
        $r7 = staticinvoke <android.support.text.emoji.EmojiCompat: android.support.text.emoji.EmojiCompat get()>();

        $r8 = specialinvoke r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.support.text.emoji.EmojiCompat$InitCallback getInitCallback()>();

        virtualinvoke $r7.<android.support.text.emoji.EmojiCompat: void registerInitCallback(android.support.text.emoji.EmojiCompat$InitCallback)>($r8);

        goto label4;

     label4:
        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        android.text.Editable r1;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    private android.support.text.emoji.EmojiCompat$InitCallback getInitCallback()
    {
        android.support.text.emoji.widget.EmojiTextWatcher r0;
        android.support.text.emoji.EmojiCompat$InitCallback $r1, $r2;
        android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl $r3;
        android.widget.EditText $r4;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher;

        $r1 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.support.text.emoji.EmojiCompat$InitCallback mInitCallback>;

        if $r1 != null goto label1;

        $r3 = new android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl;

        $r4 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.widget.EditText mEditText>;

        specialinvoke $r3.<android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl: void <init>(android.widget.EditText)>($r4);

        r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.support.text.emoji.EmojiCompat$InitCallback mInitCallback> = $r3;

     label1:
        $r2 = r0.<android.support.text.emoji.widget.EmojiTextWatcher: android.support.text.emoji.EmojiCompat$InitCallback mInitCallback>;

        return $r2;
    }

android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl
<android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef>
    void <init>(android.widget.EditText)
    {
        android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl r0;
        android.widget.EditText r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl;

        r1 := @parameter0: android.widget.EditText;

        specialinvoke r0.<android.support.text.emoji.EmojiCompat$InitCallback: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef> = $r2;

        return;
    }

    public void onInitialized()
    {
        android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl r0;
        android.widget.EditText r1;
        android.text.Editable r2;
        int i0, i1;
        java.lang.ref.Reference $r3;
        java.lang.Object $r4;
        boolean $z0;
        android.support.text.emoji.EmojiCompat $r5;

        r0 := @this: android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl;

        specialinvoke r0.<android.support.text.emoji.EmojiCompat$InitCallback: void onInitialized()>();

        $r3 = r0.<android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        r1 = (android.widget.EditText) $r4;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.EditText: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r1.<android.widget.EditText: android.text.Editable getEditableText()>();

        i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        $r5 = staticinvoke <android.support.text.emoji.EmojiCompat: android.support.text.emoji.EmojiCompat get()>();

        virtualinvoke $r5.<android.support.text.emoji.EmojiCompat: java.lang.CharSequence process(java.lang.CharSequence)>(r2);

        staticinvoke <android.support.text.emoji.widget.EmojiInputFilter: void updateSelection(android.text.Spannable,int,int)>(r2, i0, i1);

     label1:
        return;
    }

