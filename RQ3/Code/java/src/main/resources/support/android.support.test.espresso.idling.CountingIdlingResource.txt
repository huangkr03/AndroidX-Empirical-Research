android.support.test.espresso.idling.CountingIdlingResource
<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String TAG>
<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>
<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter>
<android.support.test.espresso.idling.CountingIdlingResource: boolean debugCounting>
<android.support.test.espresso.idling.CountingIdlingResource: android.support.test.espresso.IdlingResource$ResourceCallback resourceCallback>
<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt>
<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt>
    public void <init>(java.lang.String)
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.support.test.espresso.idling.CountingIdlingResource: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter> = $r2;

        r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt> = 0L;

        r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt> = 0L;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resourceName cannot be empty or null!");

        throw $r3;

     label1:
        r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName> = r1;

        r0.<android.support.test.espresso.idling.CountingIdlingResource: boolean debugCounting> = z0;

        return;
    }

    public java.lang.String getName()
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        java.lang.String $r1;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        $r1 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>;

        return $r1;
    }

    public boolean isIdleNow()
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        $r1 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void registerIdleTransitionCallback(android.support.test.espresso.IdlingResource$ResourceCallback)
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        android.support.test.espresso.IdlingResource$ResourceCallback r1;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        r1 := @parameter0: android.support.test.espresso.IdlingResource$ResourceCallback;

        r0.<android.support.test.espresso.idling.CountingIdlingResource: android.support.test.espresso.IdlingResource$ResourceCallback resourceCallback> = r1;

        return;
    }

    public void increment()
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1, $r3, $r9;
        java.util.concurrent.atomic.AtomicInteger $r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        long $l5;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        $r2 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter>;

        i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        if 0 != i0 goto label1;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt> = $l5;

     label1:
        $z0 = r0.<android.support.test.espresso.idling.CountingIdlingResource: boolean debugCounting>;

        if $z0 == 0 goto label2;

        r1 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>;

        i1 = i0 + 1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = 51 + $i2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in-use-count incremented to: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CountingIdlingResource", $r9);

     label2:
        return;
    }

    public void decrement()
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        int i0, $i2, $i3, $i7, $i8;
        long l1, $l5, $l6, $l10;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String $r6, $r7, $r13, $r14, $r21, r24, r25;
        android.support.test.espresso.IdlingResource$ResourceCallback $r22, $r23;
        boolean $z0;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        $r1 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter>;

        i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if i0 != 0 goto label2;

        $r22 = r0.<android.support.test.espresso.idling.CountingIdlingResource: android.support.test.espresso.IdlingResource$ResourceCallback resourceCallback>;

        if null == $r22 goto label1;

        $r23 = r0.<android.support.test.espresso.idling.CountingIdlingResource: android.support.test.espresso.IdlingResource$ResourceCallback resourceCallback>;

        interfaceinvoke $r23.<android.support.test.espresso.IdlingResource$ResourceCallback: void onTransitionToIdle()>();

     label1:
        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt> = $l10;

     label2:
        $z0 = r0.<android.support.test.espresso.idling.CountingIdlingResource: boolean debugCounting>;

        if $z0 == 0 goto label4;

        if i0 != 0 goto label3;

        r24 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>;

        $l6 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt>;

        $l5 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt>;

        l1 = $l6 - $l5;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r24);

        $i7 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i8 = 65 + $i7;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(int)>($i8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" went idle! (Time spent not idle: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CountingIdlingResource", $r21);

        goto label4;

     label3:
        r25 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r25);

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i3 = 51 + $i2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in-use-count decremented to: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CountingIdlingResource", $r13);

     label4:
        if i0 > -1 goto label5;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(50);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Counter has been corrupted! counterVal=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label5:
        return;
    }

    public void dumpStateToLogs()
    {
        android.support.test.espresso.idling.CountingIdlingResource r0;
        java.lang.StringBuilder r1, $r2, $r4, $r5, $r7, $r9, $r12, $r14;
        java.lang.String $r3, $r11, $r13, $r15;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0;
        long $l1, $l3, $l4, $l6;
        byte $b2, $b5;

        r0 := @this: android.support.test.espresso.idling.CountingIdlingResource;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Resource: ");

        $r3 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.lang.String resourceName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inflight transaction count: ");

        $r6 = r0.<android.support.test.espresso.idling.CountingIdlingResource: java.util.concurrent.atomic.AtomicInteger counter>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $l1 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt>;

        $b2 = 0L cmp $l1;

        if $b2 != 0 goto label1;

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and has never been busy!");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CountingIdlingResource", $r15);

        goto label3;

     label1:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and was last busy at: ");

        $l3 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameBusyAt>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $l4 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt>;

        $b5 = 0L cmp $l4;

        if $b5 != 0 goto label2;

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND NEVER WENT IDLE!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CountingIdlingResource", $r13);

        goto label3;

     label2:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and last went idle at: ");

        $l6 = r0.<android.support.test.espresso.idling.CountingIdlingResource: long becameIdleAt>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CountingIdlingResource", $r11);

     label3:
        return;
    }

