android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl
<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.lang.String TAG>
<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>
    public void <init>()
    {
        android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks> = $r1;

        return;
    }

    public void addLifecycleCallback(android.support.test.runner.lifecycle.ApplicationLifecycleCallback)
    {
        android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.ApplicationLifecycleCallback r1, r4;
        java.util.List r2, $r7, $r8, $r10;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r14;
        boolean $z0, z2;
        java.lang.ref.WeakReference $r9, $r12;
        java.lang.Object $r11, $r13;

        r0 := @this: android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.ApplicationLifecycleCallback;

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        z2 = 1;

        $r8 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.ref.WeakReference) $r11;

        $r13 = virtualinvoke $r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.test.runner.lifecycle.ApplicationLifecycleCallback) $r13;

        if null != r4 goto label03;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label04;

     label03:
        if r4 != r1 goto label04;

        z2 = 0;

     label04:
        goto label02;

     label05:
        if z2 == 0 goto label06;

        $r10 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removeLifecycleCallback(android.support.test.runner.lifecycle.ApplicationLifecycleCallback)
    {
        android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.ApplicationLifecycleCallback r1, r4;
        java.util.List r2, $r7, $r8;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r12;
        boolean $z0;
        java.lang.Object $r9, $r11;
        java.lang.ref.WeakReference $r10;

        r0 := @this: android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.ApplicationLifecycleCallback;

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.ref.WeakReference) $r9;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.test.runner.lifecycle.ApplicationLifecycleCallback) $r11;

        if null != r4 goto label3;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label4;

     label3:
        if r4 != r1 goto label4;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void signalLifecycleChange(android.app.Application, android.support.test.runner.lifecycle.ApplicationStage)
    {
        android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl r0;
        android.app.Application r1;
        android.support.test.runner.lifecycle.ApplicationStage r2;
        java.util.List r3, $r7, $r8;
        java.util.Iterator r4;
        android.support.test.runner.lifecycle.ApplicationLifecycleCallback r5;
        java.lang.Throwable r6, $r22, $r23, r28;
        boolean $z0;
        java.lang.Object $r9, $r11;
        java.lang.ref.WeakReference $r10;
        java.lang.String $r12, $r16, $r17, $r21, $r25, r26, r27;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r20;
        java.lang.Object[] $r24;

        r0 := @this: android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl;

        r1 := @parameter0: android.app.Application;

        r2 := @parameter1: android.support.test.runner.lifecycle.ApplicationStage;

        $r7 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<android.support.test.internal.runner.lifecycle.ApplicationLifecycleMonitorImpl: java.util.List mCallbacks>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.ref.WeakReference) $r9;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.support.test.runner.lifecycle.ApplicationLifecycleCallback) $r11;

        if null != r5 goto label03;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        goto label06;

     label03:
        r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i1 = 18 + $i0;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running callback: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ApplicationLifecycleMonitorImpl", $r16);

        interfaceinvoke r5.<android.support.test.runner.lifecycle.ApplicationLifecycleCallback: void onApplicationLifecycleChanged(android.app.Application,android.support.test.runner.lifecycle.ApplicationStage)>(r1, r2);

        r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r27);

        $i3 = virtualinvoke $r17.<java.lang.String: int length()>();

        $i4 = 20 + $i3;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>($i4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callback completes: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ApplicationLifecycleMonitorImpl", $r21);

     label04:
        goto label06;

     label05:
        $r23 := @caughtexception;

        r28 = $r23;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r5;

        $r24[1] = r2;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Callback threw exception! (callback: %s stage: %s)", $r24);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ApplicationLifecycleMonitorImpl", $r25, r28);

     label06:
        goto label02;

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r6 = $r22;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        return;

        catch java.lang.RuntimeException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

