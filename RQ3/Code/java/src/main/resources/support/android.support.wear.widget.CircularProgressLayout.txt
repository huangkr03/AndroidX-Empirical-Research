android.support.wear.widget.CircularProgressLayout
<android.support.wear.widget.CircularProgressLayout: long DEFAULT_UPDATE_INTERVAL>
<android.support.wear.widget.CircularProgressLayout: float DEFAULT_ROTATION>
<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>
<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>
<android.support.wear.widget.CircularProgressLayout: float mStartingRotation>
<android.support.wear.widget.CircularProgressLayout: long mTotalTime>
    public void <init>(android.content.Context)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.wear.widget.CircularProgressLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.wear.widget.CircularProgressLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.wear.widget.CircularProgressLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.content.res.Resources r3;
        android.content.res.TypedArray r4;
        android.support.v4.widget.CircularProgressDrawable $r5, $r6, $r8, $r9;
        android.graphics.Paint$Cap $r7;
        android.support.wear.widget.CircularProgressLayout$1 $r10;
        android.support.wear.widget.CircularProgressLayoutController $r11;
        int[] $r12, $r13, $r14;
        float $f0;
        boolean $z0, $z1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.support.wear.widget.CircularProgressLayout: float mStartingRotation> = 0.75F;

        $r5 = new android.support.v4.widget.CircularProgressDrawable;

        specialinvoke $r5.<android.support.v4.widget.CircularProgressDrawable: void <init>(android.content.Context)>(r1);

        r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable> = $r5;

        $r6 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke $r6.<android.support.v4.widget.CircularProgressDrawable: void setProgressRotation(float)>(0.75F);

        $r8 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $r7 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        virtualinvoke $r8.<android.support.v4.widget.CircularProgressDrawable: void setStrokeCap(android.graphics.Paint$Cap)>($r7);

        $r9 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setBackground(android.graphics.drawable.Drawable)>($r9);

        $r10 = new android.support.wear.widget.CircularProgressLayout$1;

        specialinvoke $r10.<android.support.wear.widget.CircularProgressLayout$1: void <init>(android.support.wear.widget.CircularProgressLayout)>(r0);

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r10);

        $r11 = new android.support.wear.widget.CircularProgressLayoutController;

        specialinvoke $r11.<android.support.wear.widget.CircularProgressLayoutController: void <init>(android.support.wear.widget.CircularProgressLayout)>(r0);

        r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController> = $r11;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = <android.support.wear.R$styleable: int[] CircularProgressLayout>;

        r4 = virtualinvoke r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r12);

        $i3 = <android.support.wear.R$styleable: int CircularProgressLayout_colorSchemeColors>;

        $i4 = virtualinvoke r4.<android.content.res.TypedArray: int getType(int)>($i3);

        if $i4 == 1 goto label1;

        $i16 = <android.support.wear.R$styleable: int CircularProgressLayout_colorSchemeColors>;

        $z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean hasValue(int)>($i16);

        if $z1 != 0 goto label2;

     label1:
        $i6 = <android.support.wear.R$styleable: int CircularProgressLayout_colorSchemeColors>;

        $i5 = <android.support.wear.R$array: int circular_progress_layout_color_scheme_colors>;

        i2 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i6, $i5);

        $r13 = specialinvoke r0.<android.support.wear.widget.CircularProgressLayout: int[] getColorListFromResources(android.content.res.Resources,int)>(r3, i2);

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setColorSchemeColors(int[])>($r13);

        goto label3;

     label2:
        $r14 = newarray (int)[1];

        $i17 = <android.support.wear.R$styleable: int CircularProgressLayout_colorSchemeColors>;

        $i18 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>($i17, -16777216);

        $r14[0] = $i18;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setColorSchemeColors(int[])>($r14);

     label3:
        $i8 = <android.support.wear.R$styleable: int CircularProgressLayout_strokeWidth>;

        $i7 = <android.support.wear.R$dimen: int circular_progress_layout_stroke_width>;

        $i9 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i7);

        $i10 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i8, $i9);

        $f0 = (float) $i10;

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setStrokeWidth(float)>($f0);

        $i12 = <android.support.wear.R$styleable: int CircularProgressLayout_backgroundColor>;

        $i11 = <android.support.wear.R$color: int circular_progress_layout_background_color>;

        $i13 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r1, $i11);

        $i14 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>($i12, $i13);

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setBackgroundColor(int)>($i14);

        $i15 = <android.support.wear.R$styleable: int CircularProgressLayout_indeterminate>;

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 0);

        virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: void setIndeterminate(boolean)>($z0);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private int[] getColorListFromResources(android.content.res.Resources, int)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.content.res.Resources r1;
        int i0, $i1, $i2, $i3, i4;
        android.content.res.TypedArray r2;
        int[] r3;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

        $i1 = virtualinvoke r2.<android.content.res.TypedArray: int length()>();

        r3 = newarray (int)[$i1];

        i4 = 0;

     label1:
        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int length()>();

        if i4 >= $i2 goto label2;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(i4, 0);

        r3[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.view.View r1;
        android.support.v4.widget.CircularProgressDrawable $r2, $r3;
        float $f0, $f1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $i4 = virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: int getChildCount()>();

        if $i4 == 0 goto label1;

        r1 = virtualinvoke r0.<android.support.wear.widget.CircularProgressLayout: android.view.View getChildAt(int)>(0);

        $r3 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $i5 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i6 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $f0 = (float) $i7;

        $f1 = $f0 / 2.0F;

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setCenterRadius(float)>($f1);

        goto label2;

     label1:
        $r2 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setCenterRadius(float)>(0.0F);

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayoutController $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: void reset()>();

        return;
    }

    public void setBackgroundColor(int)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        int i0;
        android.support.v4.widget.CircularProgressDrawable $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: void setBackgroundColor(int)>(i0);

        return;
    }

    public int getBackgroundColor()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;
        int $i0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $i0 = virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: int getBackgroundColor()>();

        return $i0;
    }

    public android.support.v4.widget.CircularProgressDrawable getProgressDrawable()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        return $r1;
    }

    public void setIndeterminate(boolean)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        boolean z0;
        android.support.wear.widget.CircularProgressLayoutController $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: void setIndeterminate(boolean)>(z0);

        return;
    }

    public boolean isIndeterminate()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayoutController $r1;
        boolean $z0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        $z0 = virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: boolean isIndeterminate()>();

        return $z0;
    }

    public void setTotalTime(long)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Total time should be greater than zero.");

        throw $r1;

     label1:
        r0.<android.support.wear.widget.CircularProgressLayout: long mTotalTime> = l0;

        return;
    }

    public long getTotalTime()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        long $l0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $l0 = r0.<android.support.wear.widget.CircularProgressLayout: long mTotalTime>;

        return $l0;
    }

    public void startTimer()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        long $l0;
        android.support.wear.widget.CircularProgressLayoutController $r1;
        float $f0;
        android.support.v4.widget.CircularProgressDrawable $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        $l0 = r0.<android.support.wear.widget.CircularProgressLayout: long mTotalTime>;

        virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: void startTimer(long,long)>($l0, 16L);

        $r2 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $f0 = r0.<android.support.wear.widget.CircularProgressLayout: float mStartingRotation>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setProgressRotation(float)>($f0);

        return;
    }

    public void stopTimer()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayoutController $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: void stopTimer()>();

        return;
    }

    public boolean isTimerRunning()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayoutController $r1;
        boolean $z0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        $z0 = virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: boolean isTimerRunning()>();

        return $z0;
    }

    public void setStartingRotation(float)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        float f0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        f0 := @parameter0: float;

        r0.<android.support.wear.widget.CircularProgressLayout: float mStartingRotation> = f0;

        return;
    }

    public float getStartingRotation()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        float $f0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $f0 = r0.<android.support.wear.widget.CircularProgressLayout: float mStartingRotation>;

        return $f0;
    }

    public void setStrokeWidth(float)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        float f0;
        android.support.v4.widget.CircularProgressDrawable $r1;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: void setStrokeWidth(float)>(f0);

        return;
    }

    public float getStrokeWidth()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;
        float $f0;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $f0 = virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: float getStrokeWidth()>();

        return $f0;
    }

    public transient void setColorSchemeColors(int[])
    {
        android.support.wear.widget.CircularProgressLayout r0;
        int[] r1;
        android.support.v4.widget.CircularProgressDrawable $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: int[];

        $r2 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setColorSchemeColors(int[])>(r1);

        return;
    }

    public int[] getColorSchemeColors()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;
        int[] $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.v4.widget.CircularProgressDrawable mProgressDrawable>;

        $r2 = virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: int[] getColorSchemeColors()>();

        return $r2;
    }

    public android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener getOnTimerFinishedListener()
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayoutController $r1;
        android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        $r1 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        $r2 = virtualinvoke $r1.<android.support.wear.widget.CircularProgressLayoutController: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener getOnTimerFinishedListener()>();

        return $r2;
    }

    public void setOnTimerFinishedListener(android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener)
    {
        android.support.wear.widget.CircularProgressLayout r0;
        android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener r1;
        android.support.wear.widget.CircularProgressLayoutController $r2;

        r0 := @this: android.support.wear.widget.CircularProgressLayout;

        r1 := @parameter0: android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener;

        $r2 = r0.<android.support.wear.widget.CircularProgressLayout: android.support.wear.widget.CircularProgressLayoutController mController>;

        virtualinvoke $r2.<android.support.wear.widget.CircularProgressLayoutController: void setOnTimerFinishedListener(android.support.wear.widget.CircularProgressLayout$OnTimerFinishedListener)>(r1);

        return;
    }

