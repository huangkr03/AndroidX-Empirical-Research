android.support.v4.media.session.MediaSessionCompatApi24
<android.support.v4.media.session.MediaSessionCompatApi24: java.lang.String TAG>
    public static java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi24$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi24$Callback r0;
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy $r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi24$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy: void <init>(android.support.v4.media.session.MediaSessionCompatApi24$Callback)>(r0);

        return $r1;
    }

    public static java.lang.String getCallingPackage(java.lang.Object)
    {
        java.lang.Object r0, $r5;
        android.media.session.MediaSession r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        java.lang.String $r6;
        java.lang.Throwable $r7, r9;
        java.lang.reflect.Method r8;

        r0 := @parameter0: java.lang.Object;

        r1 = (android.media.session.MediaSession) r0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        r8 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCallingPackage", $r3);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r4);

        $r6 = (java.lang.String) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionCompatApi24", "Cannot execute MediaSession.getCallingPackage()", r9);

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi24 r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.v4.media.session.MediaSessionCompatApi24$Callback
<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepare()>
<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)>
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy
    public void <init>(android.support.v4.media.session.MediaSessionCompatApi24$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi24$Callback r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi24$Callback;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy: void <init>(android.support.v4.media.session.MediaSessionCompatApi23$Callback)>(r1);

        return;
    }

    public void onPrepare()
    {
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;
        android.support.v4.media.session.MediaSessionCompatApi24$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        $r2 = (android.support.v4.media.session.MediaSessionCompatApi24$Callback) $r1;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepare()>();

        return;
    }

    public void onPrepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;
        android.support.v4.media.session.MediaSessionCompatApi24$Callback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        $r4 = (android.support.v4.media.session.MediaSessionCompatApi24$Callback) $r3;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void onPrepareFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;
        android.support.v4.media.session.MediaSessionCompatApi24$Callback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        $r4 = (android.support.v4.media.session.MediaSessionCompatApi24$Callback) $r3;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void onPrepareFromUri(android.net.Uri, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;
        android.support.v4.media.session.MediaSessionCompatApi24$Callback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        $r4 = (android.support.v4.media.session.MediaSessionCompatApi24$Callback) $r3;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)>(r1, r2);

        return;
    }

