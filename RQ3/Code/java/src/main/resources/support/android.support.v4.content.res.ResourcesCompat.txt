android.support.v4.content.res.ResourcesCompat
<android.support.v4.content.res.ResourcesCompat: java.lang.String TAG>
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r3 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, r1);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        return $r2;
    }

    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.content.res.Resources$Theme;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label1;

        $r4 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)>(i0, i1, r1);

        return $r4;

     label1:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 15 goto label2;

        $r3 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>(i0, i1);

        return $r3;

     label2:
        $r2 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        return $r2;
    }

    public static int getColor(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2, $i3;
        android.content.res.Resources$Theme r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(i0, r1);

        return $i3;

     label1:
        $i2 = virtualinvoke r0.<android.content.res.Resources: int getColor(int)>(i0);

        return $i2;
    }

    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1;
        android.content.res.Resources$Theme r1;
        android.content.res.ColorStateList $r2, $r3;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $r3 = virtualinvoke r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>(i0, r1);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>(i0);

        return $r2;
    }

    public static android.graphics.Typeface getFont(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        boolean $z0;
        android.util.TypedValue $r1;
        android.graphics.Typeface $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        $r2 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>(r0, i0, $r1, 0, null, null, 0);

        return $r2;
    }

    public static void getFont(android.content.Context, int, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.support.v4.content.res.ResourcesCompat$FontCallback r1;
        android.os.Handler r2;
        boolean $z0;
        android.util.TypedValue $r4;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.support.v4.content.res.ResourcesCompat$FontCallback;

        r2 := @parameter3: android.os.Handler;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-4, r2);

        return;

     label1:
        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>(r0, i0, $r4, 0, r1, r2, 0);

        return;
    }

    public static android.graphics.Typeface getFont(android.content.Context, int, android.util.TypedValue, int, android.support.v4.content.res.ResourcesCompat$FontCallback) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0, i1;
        android.util.TypedValue r1;
        android.support.v4.content.res.ResourcesCompat$FontCallback r2;
        boolean $z0;
        android.graphics.Typeface $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.util.TypedValue;

        i1 := @parameter3: int;

        r2 := @parameter4: android.support.v4.content.res.ResourcesCompat$FontCallback;

        $z0 = virtualinvoke r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>(r0, i0, r1, i1, r2, null, 1);

        return $r3;
    }

    private static android.graphics.Typeface loadFont(android.content.Context, int, android.util.TypedValue, int, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean)
    {
        android.content.Context r0;
        int i0, i1;
        android.util.TypedValue r1;
        android.support.v4.content.res.ResourcesCompat$FontCallback r2;
        android.os.Handler r3;
        boolean z0;
        android.content.res.Resources r4;
        android.graphics.Typeface r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r9, $r12;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.util.TypedValue;

        i1 := @parameter3: int;

        r2 := @parameter4: android.support.v4.content.res.ResourcesCompat$FontCallback;

        r3 := @parameter5: android.os.Handler;

        z0 := @parameter6: boolean;

        r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        r5 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>(r0, r4, r1, i0, i1, r2, r3, z0);

        if r5 != null goto label1;

        if r2 != null goto label1;

        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Font resource ID #0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be retrieved.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        return r5;
    }

    private static android.graphics.Typeface loadFont(android.content.Context, android.content.res.Resources, android.util.TypedValue, int, int, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean)
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        android.util.TypedValue r2;
        int i0, i1;
        android.support.v4.content.res.ResourcesCompat$FontCallback r3;
        android.os.Handler r4;
        boolean z0, $z1, $z2;
        java.lang.String r5, $r9, $r14, $r17, $r21, $r26, $r31;
        android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry r6;
        java.lang.CharSequence $r7, $r8;
        android.graphics.Typeface $r10, r32, r34;
        android.content.res.Resources$NotFoundException $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r23, $r24, $r25, $r28, $r29, $r30;
        java.lang.Throwable $r22, $r27, r36, r37;
        android.content.res.XmlResourceParser r33;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.util.TypedValue;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: android.support.v4.content.res.ResourcesCompat$FontCallback;

        r4 := @parameter6: android.os.Handler;

        z0 := @parameter7: boolean;

        $r7 = r2.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r7 != null goto label01;

        $r11 = new android.content.res.Resources$NotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource \"");

        $r14 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getResourceName(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" (");

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not a Font: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r21);

        throw $r11;

     label01:
        $r8 = r2.<android.util.TypedValue: java.lang.CharSequence string>;

        r5 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("res/");

        if $z1 != 0 goto label03;

        if r3 == null goto label02;

        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, r4);

     label02:
        return null;

     label03:
        r32 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)>(r1, i0, i1);

        if r32 == null goto label05;

        if r3 == null goto label04;

        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>(r32, r4);

     label04:
        return r32;

     label05:
        $r9 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z2 == 0 goto label09;

        r33 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r6 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r33, r1);

        if r6 != null goto label07;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourcesCompat", "Failed to find font-family tag");

        if r3 == null goto label06;

        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, r4);

     label06:
        return null;

     label07:
        $r10 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>(r0, r6, r1, i0, i1, r3, r4, z0);

     label08:
        return $r10;

     label09:
        r34 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>(r0, r1, i0, r5, i1);

        if r3 == null goto label11;

        if r34 == null goto label10;

        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>(r34, r4);

        goto label11;

     label10:
        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, r4);

     label11:
        return r34;

     label12:
        $r27 := @caughtexception;

        r36 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse xml resource ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r31, r36);

        goto label14;

     label13:
        $r22 := @caughtexception;

        r37 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read xml resource ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r26, r37);

     label14:
        if r3 == null goto label15;

        virtualinvoke r3.<android.support.v4.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, r4);

     label15:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label11 with label12;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label11 with label13;
    }

    private void <init>()
    {
        android.support.v4.content.res.ResourcesCompat r0;

        r0 := @this: android.support.v4.content.res.ResourcesCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

