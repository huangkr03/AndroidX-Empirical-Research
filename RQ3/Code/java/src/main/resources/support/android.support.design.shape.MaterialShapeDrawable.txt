android.support.design.shape.MaterialShapeDrawable
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>
<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix matrix>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>
<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath shapePath>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region scratchRegion>
<android.support.design.shape.MaterialShapeDrawable: float[] scratch>
<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>
<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>
<android.support.design.shape.MaterialShapeDrawable: boolean shadowEnabled>
<android.support.design.shape.MaterialShapeDrawable: boolean useTintColorForShadow>
<android.support.design.shape.MaterialShapeDrawable: float interpolation>
<android.support.design.shape.MaterialShapeDrawable: int shadowColor>
<android.support.design.shape.MaterialShapeDrawable: int shadowElevation>
<android.support.design.shape.MaterialShapeDrawable: int shadowRadius>
<android.support.design.shape.MaterialShapeDrawable: int alpha>
<android.support.design.shape.MaterialShapeDrawable: float scale>
<android.support.design.shape.MaterialShapeDrawable: float strokeWidth>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint$Style paintStyle>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter tintFilter>
<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuff$Mode tintMode>
<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList>
    public void <init>()
    {
        android.support.design.shape.MaterialShapeDrawable r0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void <init>(android.support.design.shape.ShapePathModel)>(null);

        return;
    }

    public void <init>(android.support.design.shape.ShapePathModel)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.support.design.shape.ShapePathModel r1;
        android.graphics.Paint $r2;
        android.graphics.Matrix[] $r3, $r4, $r17, $r19;
        android.support.design.shape.ShapePath[] $r5, $r21;
        android.graphics.Matrix $r6, $r16, $r18;
        android.graphics.Path $r7;
        android.graphics.PointF $r8;
        android.support.design.shape.ShapePath $r9, $r20;
        android.graphics.Region $r10, $r11;
        float[] $r12, $r13;
        android.graphics.Paint$Style $r14;
        android.graphics.PorterDuff$Mode $r15;
        int i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.support.design.shape.ShapePathModel;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint> = $r2;

        $r3 = newarray (android.graphics.Matrix)[4];

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms> = $r3;

        $r4 = newarray (android.graphics.Matrix)[4];

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms> = $r4;

        $r5 = newarray (android.support.design.shape.ShapePath)[4];

        r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths> = $r5;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix matrix> = $r6;

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path> = $r7;

        $r8 = new android.graphics.PointF;

        specialinvoke $r8.<android.graphics.PointF: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF> = $r8;

        $r9 = new android.support.design.shape.ShapePath;

        specialinvoke $r9.<android.support.design.shape.ShapePath: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath shapePath> = $r9;

        $r10 = new android.graphics.Region;

        specialinvoke $r10.<android.graphics.Region: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion> = $r10;

        $r11 = new android.graphics.Region;

        specialinvoke $r11.<android.graphics.Region: void <init>()>();

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region scratchRegion> = $r11;

        $r12 = newarray (float)[2];

        r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch> = $r12;

        $r13 = newarray (float)[2];

        r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2> = $r13;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel> = null;

        r0.<android.support.design.shape.MaterialShapeDrawable: boolean shadowEnabled> = 0;

        r0.<android.support.design.shape.MaterialShapeDrawable: boolean useTintColorForShadow> = 0;

        r0.<android.support.design.shape.MaterialShapeDrawable: float interpolation> = 1.0F;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowColor> = -16777216;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation> = 5;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowRadius> = 10;

        r0.<android.support.design.shape.MaterialShapeDrawable: int alpha> = 255;

        r0.<android.support.design.shape.MaterialShapeDrawable: float scale> = 1.0F;

        r0.<android.support.design.shape.MaterialShapeDrawable: float strokeWidth> = 0.0F;

        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL_AND_STROKE>;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint$Style paintStyle> = $r14;

        $r15 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuff$Mode tintMode> = $r15;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList> = null;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel> = r1;

        i0 = 0;

     label1:
        if i0 >= 4 goto label2;

        $r17 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r16 = new android.graphics.Matrix;

        specialinvoke $r16.<android.graphics.Matrix: void <init>()>();

        $r17[i0] = $r16;

        $r19 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>;

        $r18 = new android.graphics.Matrix;

        specialinvoke $r18.<android.graphics.Matrix: void <init>()>();

        $r19[i0] = $r18;

        $r21 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r20 = new android.support.design.shape.ShapePath;

        specialinvoke $r20.<android.support.design.shape.ShapePath: void <init>()>();

        $r21[i0] = $r20;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private static int modulateAlpha(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i1 >>> 7;

        i2 = i1 + $i3;

        $i4 = i0 * i2;

        $i5 = $i4 >>> 8;

        return $i5;
    }

    public android.support.design.shape.ShapePathModel getShapedViewModel()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.support.design.shape.ShapePathModel $r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        return $r1;
    }

    public void setShapedViewModel(android.support.design.shape.ShapePathModel)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.support.design.shape.ShapePathModel r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.support.design.shape.ShapePathModel;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel> = r1;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public android.content.res.ColorStateList getTintList()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList>;

        return $r1;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList> = r1;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void updateTintFilter()>();

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuff$Mode tintMode> = r1;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void updateTintFilter()>();

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setTint(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void setTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public int getOpacity()
    {
        android.support.design.shape.MaterialShapeDrawable r0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        return -3;
    }

    public void setAlpha(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r0.<android.support.design.shape.MaterialShapeDrawable: int alpha> = i0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.Rect r1;
        android.graphics.Region $r2, $r4, $r6, $r8, $r9, $r10;
        int $i0, $i1;
        android.graphics.Path $r3, $r5;
        android.graphics.Region$Op $r7;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 = virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Rect getBounds()>();

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion>;

        virtualinvoke $r2.<android.graphics.Region: boolean set(android.graphics.Rect)>(r1);

        $i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getPath(int,int,android.graphics.Path)>($i0, $i1, $r3);

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region scratchRegion>;

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path>;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion>;

        virtualinvoke $r6.<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>($r5, $r4);

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion>;

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region scratchRegion>;

        $r7 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke $r9.<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>($r8, $r7);

        $r10 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region transparentRegion>;

        return $r10;
    }

    public boolean isPointInTransparentRegion(int, int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1;
        android.graphics.Region $r1;
        boolean $z0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Region getTransparentRegion()>();

        $z0 = virtualinvoke $r1.<android.graphics.Region: boolean contains(int,int)>(i0, i1);

        return $z0;
    }

    public boolean isShadowEnabled()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        boolean $z0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $z0 = r0.<android.support.design.shape.MaterialShapeDrawable: boolean shadowEnabled>;

        return $z0;
    }

    public void setShadowEnabled(boolean)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        boolean z0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        z0 := @parameter0: boolean;

        r0.<android.support.design.shape.MaterialShapeDrawable: boolean shadowEnabled> = z0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public float getInterpolation()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float $f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $f0 = r0.<android.support.design.shape.MaterialShapeDrawable: float interpolation>;

        return $f0;
    }

    public void setInterpolation(float)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        f0 := @parameter0: float;

        r0.<android.support.design.shape.MaterialShapeDrawable: float interpolation> = f0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public int getShadowElevation()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int $i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $i0 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation>;

        return $i0;
    }

    public void setShadowElevation(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation> = i0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public int getShadowRadius()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int $i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $i0 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowRadius>;

        return $i0;
    }

    public void setShadowRadius(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowRadius> = i0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public float getScale()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float $f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $f0 = r0.<android.support.design.shape.MaterialShapeDrawable: float scale>;

        return $f0;
    }

    public void setScale(float)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        f0 := @parameter0: float;

        r0.<android.support.design.shape.MaterialShapeDrawable: float scale> = f0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setUseTintColorForShadow(boolean)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        boolean z0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        z0 := @parameter0: boolean;

        r0.<android.support.design.shape.MaterialShapeDrawable: boolean useTintColorForShadow> = z0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setShadowColor(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowColor> = i0;

        r0.<android.support.design.shape.MaterialShapeDrawable: boolean useTintColorForShadow> = 0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public android.graphics.Paint$Style getPaintStyle()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.Paint$Style $r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint$Style paintStyle>;

        return $r1;
    }

    public void setPaintStyle(android.graphics.Paint$Style)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.Paint$Style r1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.graphics.Paint$Style;

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint$Style paintStyle> = r1;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public float getStrokeWidth()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float $f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $f0 = r0.<android.support.design.shape.MaterialShapeDrawable: float strokeWidth>;

        return $f0;
    }

    public void setStrokeWidth(float)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        float f0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        f0 := @parameter0: float;

        r0.<android.support.design.shape.MaterialShapeDrawable: float strokeWidth> = f0;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.PorterDuffColorFilter $r2;
        android.graphics.Paint $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.Paint$Style $r8;
        android.graphics.Path $r12, $r14;
        boolean $z0;
        android.support.design.shape.ShapePathModel $r16;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter tintFilter>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r2);

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        i0 = virtualinvoke $r5.<android.graphics.Paint: int getAlpha()>();

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        $i1 = r0.<android.support.design.shape.MaterialShapeDrawable: int alpha>;

        $i2 = staticinvoke <android.support.design.shape.MaterialShapeDrawable: int modulateAlpha(int,int)>(i0, $i1);

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>($i2);

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        $f0 = r0.<android.support.design.shape.MaterialShapeDrawable: float strokeWidth>;

        virtualinvoke $r7.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint$Style paintStyle>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $i3 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation>;

        if $i3 <= 0 goto label1;

        $z0 = r0.<android.support.design.shape.MaterialShapeDrawable: boolean shadowEnabled>;

        if $z0 == 0 goto label1;

        $r15 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        $i8 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowRadius>;

        $f5 = (float) $i8;

        $i9 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation>;

        $f4 = (float) $i9;

        $i10 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowElevation>;

        $f3 = (float) $i10;

        $i11 = r0.<android.support.design.shape.MaterialShapeDrawable: int shadowColor>;

        virtualinvoke $r15.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f5, $f4, $f3, $i11);

     label1:
        $r16 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        if $r16 == null goto label2;

        $i6 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $r12 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getPath(int,int,android.graphics.Path)>($i6, $i7, $r12);

        $r14 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Path path>;

        $r13 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r13);

        goto label3;

     label2:
        $i4 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $f1 = (float) $i4;

        $i5 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $f2 = (float) $i5;

        $r10 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f1, $f2, $r10);

     label3:
        $r11 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Paint paint>;

        virtualinvoke $r11.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void getPathForSize(int, int, android.graphics.Path)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.Path r1;
        android.support.design.shape.ShapePathModel $r2;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Path;

        virtualinvoke r1.<android.graphics.Path: void rewind()>();

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        if $r2 != null goto label1;

        return;

     label1:
        i2 = 0;

     label2:
        if i2 >= 4 goto label3;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void setCornerPathAndTransform(int,int,int)>(i2, i0, i1);

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void setEdgeTransform(int,int,int)>(i2, i0, i1);

        i2 = i2 + 1;

        goto label2;

     label3:
        i3 = 0;

     label4:
        if i3 >= 4 goto label5;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void appendCornerPath(int,android.graphics.Path)>(i3, r1);

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void appendEdgePath(int,android.graphics.Path)>(i3, r1);

        i3 = i3 + 1;

        goto label4;

     label5:
        virtualinvoke r1.<android.graphics.Path: void close()>();

        return;
    }

    private void setCornerPathAndTransform(int, int, int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2, $i3, $i4, $i5;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.PointF $r1, $r8, $r9;
        android.support.design.shape.CornerTreatment $r2;
        android.support.design.shape.ShapePath[] $r3;
        android.support.design.shape.ShapePath $r4;
        android.graphics.Matrix[] $r5, $r7, $r11;
        android.graphics.Matrix $r6, $r10, $r12;
        double $d0, $d1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>(i0, i1, i2, $r1);

        f0 = specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: float angleOfCorner(int,int,int)>(i0, i1, i2);

        $r2 = specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.CornerTreatment getCornerTreatmentForIndex(int)>(i0);

        $f2 = r0.<android.support.design.shape.MaterialShapeDrawable: float interpolation>;

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r4 = $r3[i0];

        virtualinvoke $r2.<android.support.design.shape.CornerTreatment: void getCornerPath(float,float,android.support.design.shape.ShapePath)>(f0, $f2, $r4);

        $i3 = i0 - 1;

        $i4 = $i3 + 4;

        $i5 = $i4 % 4;

        $f3 = specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: float angleOfEdge(int,int,int)>($i5, i1, i2);

        f1 = $f3 + 1.5707964F;

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r6 = $r5[i0];

        virtualinvoke $r6.<android.graphics.Matrix: void reset()>();

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r10 = $r7[i0];

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        $f5 = $r8.<android.graphics.PointF: float x>;

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        $f4 = $r9.<android.graphics.PointF: float y>;

        virtualinvoke $r10.<android.graphics.Matrix: void setTranslate(float,float)>($f5, $f4);

        $r11 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r12 = $r11[i0];

        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f6 = (float) $d1;

        virtualinvoke $r12.<android.graphics.Matrix: boolean preRotate(float)>($f6);

        return;
    }

    private void setEdgeTransform(int, int, int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.support.design.shape.ShapePath[] $r1, $r4;
        android.support.design.shape.ShapePath $r2, $r5;
        float[] $r3, $r6, $r8, $r13, $r14;
        android.graphics.Matrix[] $r7, $r10, $r12, $r16;
        android.graphics.Matrix $r9, $r11, $r15, $r17;
        double $d0, $d1;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r2 = $r1[i0];

        $f1 = $r2.<android.support.design.shape.ShapePath: float endX>;

        $r3[0] = $f1;

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r5 = $r4[i0];

        $f2 = $r5.<android.support.design.shape.ShapePath: float endY>;

        $r6[1] = $f2;

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r9 = $r7[i0];

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        virtualinvoke $r9.<android.graphics.Matrix: void mapPoints(float[])>($r8);

        f0 = specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: float angleOfEdge(int,int,int)>(i0, i1, i2);

        $r10 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>;

        $r11 = $r10[i0];

        virtualinvoke $r11.<android.graphics.Matrix: void reset()>();

        $r12 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>;

        $r15 = $r12[i0];

        $r13 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f4 = $r13[0];

        $r14 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f3 = $r14[1];

        virtualinvoke $r15.<android.graphics.Matrix: void setTranslate(float,float)>($f4, $f3);

        $r16 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>;

        $r17 = $r16[i0];

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f5 = (float) $d1;

        virtualinvoke $r17.<android.graphics.Matrix: boolean preRotate(float)>($f5);

        return;
    }

    private void appendCornerPath(int, android.graphics.Path)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;
        android.graphics.Path r1;
        android.support.design.shape.ShapePath[] $r2, $r5, $r13;
        android.support.design.shape.ShapePath $r3, $r6, $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        float[] $r4, $r7, $r9, $r11, $r12, $r17, $r18;
        android.graphics.Matrix[] $r8, $r14;
        android.graphics.Matrix $r10, $r15;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Path;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r3 = $r2[i0];

        $f0 = $r3.<android.support.design.shape.ShapePath: float startX>;

        $r4[0] = $f0;

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r6 = $r5[i0];

        $f1 = $r6.<android.support.design.shape.ShapePath: float startY>;

        $r7[1] = $f1;

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r10 = $r8[i0];

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        virtualinvoke $r10.<android.graphics.Matrix: void mapPoints(float[])>($r9);

        if i0 != 0 goto label1;

        $r17 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f5 = $r17[0];

        $r18 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f4 = $r18[1];

        virtualinvoke r1.<android.graphics.Path: void moveTo(float,float)>($f5, $f4);

        goto label2;

     label1:
        $r11 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f3 = $r11[0];

        $r12 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f2 = $r12[1];

        virtualinvoke r1.<android.graphics.Path: void lineTo(float,float)>($f3, $f2);

     label2:
        $r13 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r16 = $r13[i0];

        $r14 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r15 = $r14[i0];

        virtualinvoke $r16.<android.support.design.shape.ShapePath: void applyToPath(android.graphics.Matrix,android.graphics.Path)>($r15, r1);

        return;
    }

    private void appendEdgePath(int, android.graphics.Path)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, $i2;
        android.graphics.Path r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.support.design.shape.ShapePath[] $r2, $r5, $r11, $r14;
        android.support.design.shape.ShapePath $r3, $r6, $r12, $r15, $r24, $r26, $r29;
        float[] $r4, $r7, $r9, $r13, $r16, $r18, $r20, $r21, $r22, $r23;
        android.graphics.Matrix[] $r8, $r17, $r27;
        android.graphics.Matrix $r10, $r19, $r28;
        double $d0, $d1, $d2;
        android.support.design.shape.EdgeTreatment $r25;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Path;

        $i2 = i0 + 1;

        i1 = $i2 % 4;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r3 = $r2[i0];

        $f1 = $r3.<android.support.design.shape.ShapePath: float endX>;

        $r4[0] = $f1;

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r6 = $r5[i0];

        $f2 = $r6.<android.support.design.shape.ShapePath: float endY>;

        $r7[1] = $f2;

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r10 = $r8[i0];

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        virtualinvoke $r10.<android.graphics.Matrix: void mapPoints(float[])>($r9);

        $r13 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>;

        $r11 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r12 = $r11[i1];

        $f3 = $r12.<android.support.design.shape.ShapePath: float startX>;

        $r13[0] = $f3;

        $r16 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>;

        $r14 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath[] cornerPaths>;

        $r15 = $r14[i1];

        $f4 = $r15.<android.support.design.shape.ShapePath: float startY>;

        $r16[1] = $f4;

        $r17 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] cornerTransforms>;

        $r19 = $r17[i1];

        $r18 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>;

        virtualinvoke $r19.<android.graphics.Matrix: void mapPoints(float[])>($r18);

        $r20 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f6 = $r20[0];

        $r21 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>;

        $f5 = $r21[0];

        $f7 = $f6 - $f5;

        $d1 = (double) $f7;

        $r22 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch>;

        $f9 = $r22[1];

        $r23 = r0.<android.support.design.shape.MaterialShapeDrawable: float[] scratch2>;

        $f8 = $r23[1];

        $f10 = $f9 - $f8;

        $d0 = (double) $f10;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        f0 = (float) $d2;

        $r24 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath shapePath>;

        virtualinvoke $r24.<android.support.design.shape.ShapePath: void reset(float,float)>(0.0F, 0.0F);

        $r25 = specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.EdgeTreatment getEdgeTreatmentForIndex(int)>(i0);

        $f11 = r0.<android.support.design.shape.MaterialShapeDrawable: float interpolation>;

        $r26 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath shapePath>;

        virtualinvoke $r25.<android.support.design.shape.EdgeTreatment: void getEdgePath(float,float,android.support.design.shape.ShapePath)>(f0, $f11, $r26);

        $r29 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePath shapePath>;

        $r27 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix[] edgeTransforms>;

        $r28 = $r27[i0];

        virtualinvoke $r29.<android.support.design.shape.ShapePath: void applyToPath(android.graphics.Matrix,android.graphics.Path)>($r28, r1);

        return;
    }

    private android.support.design.shape.CornerTreatment getCornerTreatmentForIndex(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;
        android.support.design.shape.ShapePathModel $r1, $r3, $r5, $r7;
        android.support.design.shape.CornerTreatment $r2, $r4, $r6, $r8;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r6 = virtualinvoke $r5.<android.support.design.shape.ShapePathModel: android.support.design.shape.CornerTreatment getTopRightCorner()>();

        return $r6;

     label2:
        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r4 = virtualinvoke $r3.<android.support.design.shape.ShapePathModel: android.support.design.shape.CornerTreatment getBottomRightCorner()>();

        return $r4;

     label3:
        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r2 = virtualinvoke $r1.<android.support.design.shape.ShapePathModel: android.support.design.shape.CornerTreatment getBottomLeftCorner()>();

        return $r2;

     label4:
        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r8 = virtualinvoke $r7.<android.support.design.shape.ShapePathModel: android.support.design.shape.CornerTreatment getTopLeftCorner()>();

        return $r8;
    }

    private android.support.design.shape.EdgeTreatment getEdgeTreatmentForIndex(int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;
        android.support.design.shape.ShapePathModel $r1, $r3, $r5, $r7;
        android.support.design.shape.EdgeTreatment $r2, $r4, $r6, $r8;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r6 = virtualinvoke $r5.<android.support.design.shape.ShapePathModel: android.support.design.shape.EdgeTreatment getRightEdge()>();

        return $r6;

     label2:
        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r4 = virtualinvoke $r3.<android.support.design.shape.ShapePathModel: android.support.design.shape.EdgeTreatment getBottomEdge()>();

        return $r4;

     label3:
        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r2 = virtualinvoke $r1.<android.support.design.shape.ShapePathModel: android.support.design.shape.EdgeTreatment getLeftEdge()>();

        return $r2;

     label4:
        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.support.design.shape.ShapePathModel shapedViewModel>;

        $r8 = virtualinvoke $r7.<android.support.design.shape.ShapePathModel: android.support.design.shape.EdgeTreatment getTopEdge()>();

        return $r8;
    }

    private void getCoordinatesOfCorner(int, int, int, android.graphics.PointF)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2;
        android.graphics.PointF r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.graphics.PointF;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $f3 = (float) i1;

        virtualinvoke r1.<android.graphics.PointF: void set(float,float)>($f3, 0.0F);

        goto label5;

     label2:
        $f2 = (float) i1;

        $f1 = (float) i2;

        virtualinvoke r1.<android.graphics.PointF: void set(float,float)>($f2, $f1);

        goto label5;

     label3:
        $f0 = (float) i2;

        virtualinvoke r1.<android.graphics.PointF: void set(float,float)>(0.0F, $f0);

        goto label5;

     label4:
        virtualinvoke r1.<android.graphics.PointF: void set(float,float)>(0.0F, 0.0F);

     label5:
        return;
    }

    private float angleOfCorner(int, int, int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
        android.graphics.PointF $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b8;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 - 1;

        $i4 = $i3 + 4;

        $i5 = $i4 % 4;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>($i5, i1, i2, $r1);

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f0 = $r2.<android.graphics.PointF: float x>;

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f1 = $r3.<android.graphics.PointF: float y>;

        $i6 = i0 + 1;

        $i7 = $i6 % 4;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>($i7, i1, i2, $r4);

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f2 = $r5.<android.graphics.PointF: float x>;

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f3 = $r6.<android.graphics.PointF: float y>;

        $r7 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>(i0, i1, i2, $r7);

        $r8 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f4 = $r8.<android.graphics.PointF: float x>;

        $r9 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f5 = $r9.<android.graphics.PointF: float y>;

        f6 = f0 - f4;

        f7 = f1 - f5;

        f8 = f2 - f4;

        f9 = f3 - f5;

        $d1 = (double) f7;

        $d0 = (double) f6;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        f10 = (float) $d2;

        $d4 = (double) f9;

        $d3 = (double) f8;

        $d5 = staticinvoke <java.lang.Math: double atan2(double,double)>($d4, $d3);

        f11 = (float) $d5;

        f12 = f10 - f11;

        $b8 = f12 cmpg 0.0F;

        if $b8 >= 0 goto label1;

        $d6 = (double) f12;

        $d7 = $d6 + 6.283185307179586;

        f12 = (float) $d7;

     label1:
        return f12;
    }

    private float angleOfEdge(int, int, int)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, i2, i3, i4, $i5;
        float f0, f1, f2, f3, f4, f5, $f6;
        android.graphics.PointF $r1, $r2, $r3, $r4, $r5, $r6;
        double $d0, $d1, $d2;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i0;

        $i5 = i0 + 1;

        i4 = $i5 % 4;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>(i3, i1, i2, $r1);

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f0 = $r2.<android.graphics.PointF: float x>;

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f1 = $r3.<android.graphics.PointF: float y>;

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        specialinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)>(i4, i1, i2, $r4);

        $r5 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f2 = $r5.<android.graphics.PointF: float x>;

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PointF pointF>;

        f3 = $r6.<android.graphics.PointF: float y>;

        f4 = f2 - f0;

        f5 = f3 - f1;

        $d1 = (double) f5;

        $d0 = (double) f4;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $f6 = (float) $d2;

        return $f6;
    }

    private void getPath(int, int, android.graphics.Path)
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0, i1, $i3, $i4;
        android.graphics.Path r1;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b2;
        android.graphics.Matrix $r2, $r3, $r4;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Path;

        virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: void getPathForSize(int,int,android.graphics.Path)>(i0, i1, r1);

        $f0 = r0.<android.support.design.shape.MaterialShapeDrawable: float scale>;

        $b2 = $f0 cmpl 1.0F;

        if $b2 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix matrix>;

        $f4 = r0.<android.support.design.shape.MaterialShapeDrawable: float scale>;

        $f3 = r0.<android.support.design.shape.MaterialShapeDrawable: float scale>;

        $i3 = i0 / 2;

        $f2 = (float) $i3;

        $i4 = i1 / 2;

        $f1 = (float) $i4;

        virtualinvoke $r3.<android.graphics.Matrix: void setScale(float,float,float,float)>($f4, $f3, $f2, $f1);

        $r4 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.Matrix matrix>;

        virtualinvoke r1.<android.graphics.Path: void transform(android.graphics.Matrix)>($r4);

        return;
    }

    private void updateTintFilter()
    {
        android.support.design.shape.MaterialShapeDrawable r0;
        int i0;
        android.content.res.ColorStateList $r1, $r3;
        android.graphics.PorterDuff$Mode $r2, $r6;
        int[] $r4;
        android.graphics.PorterDuffColorFilter $r5;
        boolean $z0;

        r0 := @this: android.support.design.shape.MaterialShapeDrawable;

        $r1 = r0.<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuff$Mode tintMode>;

        if $r2 != null goto label2;

     label1:
        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter tintFilter> = null;

        return;

     label2:
        $r3 = r0.<android.support.design.shape.MaterialShapeDrawable: android.content.res.ColorStateList tintList>;

        $r4 = virtualinvoke r0.<android.support.design.shape.MaterialShapeDrawable: int[] getState()>();

        i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r4, 0);

        $r5 = new android.graphics.PorterDuffColorFilter;

        $r6 = r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuff$Mode tintMode>;

        specialinvoke $r5.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i0, $r6);

        r0.<android.support.design.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter tintFilter> = $r5;

        $z0 = r0.<android.support.design.shape.MaterialShapeDrawable: boolean useTintColorForShadow>;

        if $z0 == 0 goto label3;

        r0.<android.support.design.shape.MaterialShapeDrawable: int shadowColor> = i0;

     label3:
        return;
    }

