android.support.constraint.ConstraintLayout
<android.support.constraint.ConstraintLayout: java.lang.String VERSION>
<android.support.constraint.ConstraintLayout: java.lang.String TAG>
<android.support.constraint.ConstraintLayout: boolean USE_CONSTRAINTS_HELPER>
<android.support.constraint.ConstraintLayout: boolean DEBUG>
<android.support.constraint.ConstraintLayout: boolean DEBUG_DRAW_CONSTRAINTS>
<android.support.constraint.ConstraintLayout: boolean MEASURE>
<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>
<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>
<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>
<android.support.constraint.ConstraintLayout: int mMinWidth>
<android.support.constraint.ConstraintLayout: int mMinHeight>
<android.support.constraint.ConstraintLayout: int mMaxWidth>
<android.support.constraint.ConstraintLayout: int mMaxHeight>
<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy>
<android.support.constraint.ConstraintLayout: int mOptimizationLevel>
<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>
<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec>
<android.support.constraint.ConstraintLayout: int mConstraintSetId>
<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>
<android.support.constraint.ConstraintLayout: int mLastMeasureWidth>
<android.support.constraint.ConstraintLayout: int mLastMeasureHeight>
<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize>
<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize>
<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode>
<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode>
<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>
<android.support.constraint.ConstraintLayout: int DESIGN_INFO_ID>
<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintsChangedListener mConstraintsChangedListener>
<android.support.constraint.ConstraintLayout: android.support.constraint.solver.Metrics mMetrics>
<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>
<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec>
<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec>
    public void setDesignInformation(int, java.lang.Object, java.lang.Object)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, i1, i2, $i3;
        java.lang.Object r1, r2;
        boolean $z0, $z1;
        java.util.HashMap $r3, $r5, $r8;
        java.lang.Integer $r4, $r6;
        java.lang.String r9;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        if i0 != 0 goto label3;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $z1 = r2 instanceof java.lang.Integer;

        if $z1 == 0 goto label3;

        $r3 = r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>;

        if $r3 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds> = $r8;

     label1:
        r9 = (java.lang.String) r1;

        i1 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>("/");

        if i1 == -1 goto label2;

        $i3 = i1 + 1;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        $r4 = (java.lang.Integer) r2;

        i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r6);

     label3:
        return;
    }

    public java.lang.Object getDesignInformation(int, java.lang.Object)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        java.lang.Object r1, $r6;
        java.lang.String r2;
        boolean $z0, $z1;
        java.util.HashMap $r3, $r4, $r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 != 0 goto label1;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) r1;

        $r3 = r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>;

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $r5 = r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        return $r6;

     label1:
        return null;
    }

    public void <init>(android.content.Context)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context r1;
        android.util.SparseArray $r2, $r6;
        java.util.ArrayList $r3;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r4;
        java.util.HashMap $r5;
        android.support.constraint.ConstraintLayout$Measurer $r7;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $r3;

        $r4 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r4;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 257;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId> = -1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $r6;

        $r7 = new android.support.constraint.ConstraintLayout$Measurer;

        specialinvoke $r7.<android.support.constraint.ConstraintLayout$Measurer: void <init>(android.support.constraint.ConstraintLayout,android.support.constraint.ConstraintLayout)>(r0, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer> = $r7;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet,int,int)>(null, 0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.util.SparseArray $r3, $r7;
        java.util.ArrayList $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5;
        java.util.HashMap $r6;
        android.support.constraint.ConstraintLayout$Measurer $r8;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 257;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId> = -1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds> = $r6;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $r7;

        $r8 = new android.support.constraint.ConstraintLayout$Measurer;

        specialinvoke $r8.<android.support.constraint.ConstraintLayout$Measurer: void <init>(android.support.constraint.ConstraintLayout,android.support.constraint.ConstraintLayout)>(r0, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer> = $r8;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet,int,int)>(r2, 0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.util.SparseArray $r3, $r7;
        java.util.ArrayList $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5;
        java.util.HashMap $r6;
        android.support.constraint.ConstraintLayout$Measurer $r8;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 257;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId> = -1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds> = $r6;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $r7;

        $r8 = new android.support.constraint.ConstraintLayout$Measurer;

        specialinvoke $r8.<android.support.constraint.ConstraintLayout$Measurer: void <init>(android.support.constraint.ConstraintLayout,android.support.constraint.ConstraintLayout)>(r0, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer> = $r8;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet,int,int)>(r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.util.SparseArray $r3, $r7;
        java.util.ArrayList $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5;
        java.util.HashMap $r6;
        android.support.constraint.ConstraintLayout$Measurer $r8;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 257;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId> = -1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: java.util.HashMap mDesignIds> = $r6;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget> = $r7;

        $r8 = new android.support.constraint.ConstraintLayout$Measurer;

        specialinvoke $r8.<android.support.constraint.ConstraintLayout$Measurer: void <init>(android.support.constraint.ConstraintLayout,android.support.constraint.ConstraintLayout)>(r0, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer> = $r8;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = 0;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet,int,int)>(r2, i0, i1);

        return;
    }

    public void setId(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, $i1, $i2;
        android.util.SparseArray $r1, $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>($i1);

        specialinvoke r0.<android.view.ViewGroup: void setId(int)>(i0);

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r0);

        return;
    }

    private void init(android.util.AttributeSet, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25;
        android.content.res.TypedArray r2;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r3, $r5, $r7;
        android.support.constraint.ConstraintLayout$Measurer $r4;
        android.util.SparseArray $r6;
        android.content.Context $r8, $r12;
        int[] $r9;
        android.support.constraint.ConstraintSet $r10, $r11;
        java.lang.Throwable $r13, $r14, r15, r16;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.util.AttributeSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setCompanionWidget(java.lang.Object)>(r0);

        $r5 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $r4 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMeasurer(android.support.constraint.solver.widgets.analyzer.BasicMeasure$Measurer)>($r4);

        $r6 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        if r1 == null goto label18;

        $r8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        $r9 = <android.support.constraint.R$styleable: int[] ConstraintLayout_Layout>;

        r2 = virtualinvoke $r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r9, i0, i1);

        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getIndexCount()>();

        i23 = 0;

     label01:
        if i23 >= i2 goto label17;

        i3 = virtualinvoke r2.<android.content.res.TypedArray: int getIndex(int)>(i23);

        $i6 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_minWidth>;

        if i3 != $i6 goto label02;

        $i21 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        $i22 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i3, $i21);

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = $i22;

        goto label16;

     label02:
        $i7 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_minHeight>;

        if i3 != $i7 goto label03;

        $i19 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        $i20 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i3, $i19);

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = $i20;

        goto label16;

     label03:
        $i8 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_maxWidth>;

        if i3 != $i8 goto label04;

        $i17 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i18 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i3, $i17);

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = $i18;

        goto label16;

     label04:
        $i9 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_maxHeight>;

        if i3 != $i9 goto label05;

        $i15 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i16 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i3, $i15);

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = $i16;

        goto label16;

     label05:
        $i10 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel>;

        if i3 != $i10 goto label06;

        $i13 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        $i14 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i3, $i13);

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = $i14;

        goto label16;

     label06:
        $i11 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layoutDescription>;

        if i3 != $i11 goto label11;

        i24 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i3, 0);

        if i24 == 0 goto label10;

     label07:
        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void parseLayoutDescription(int)>(i24);

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r15 = $r13;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

     label10:
        goto label16;

     label11:
        $i12 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_constraintSet>;

        if i3 != $i12 goto label16;

        i25 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i3, 0);

     label12:
        $r10 = new android.support.constraint.ConstraintSet;

        specialinvoke $r10.<android.support.constraint.ConstraintSet: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = $r10;

        $r11 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        $r12 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        virtualinvoke $r11.<android.support.constraint.ConstraintSet: void load(android.content.Context,int)>($r12, i25);

     label13:
        goto label15;

     label14:
        $r14 := @caughtexception;

        r16 = $r14;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

     label15:
        r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId> = i25;

     label16:
        i23 = i23 + 1;

        goto label01;

     label17:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

     label18:
        $r7 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i5 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        virtualinvoke $r7.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>($i5);

        return;

        catch android.content.res.Resources$NotFoundException from label07 to label08 with label09;
        catch android.content.res.Resources$NotFoundException from label12 to label13 with label14;
    }

    protected void parseLayoutDescription(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        android.support.constraint.ConstraintLayoutStates $r1;
        android.content.Context $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $r1 = new android.support.constraint.ConstraintLayoutStates;

        $r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.constraint.ConstraintLayoutStates: void <init>(android.content.Context,android.support.constraint.ConstraintLayout,int)>($r2, r0, i0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = $r1;

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 14 goto label1;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void onViewAdded(android.view.View)>(r1);

     label1:
        return;
    }

    public void removeView(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View r1;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>(r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label1;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void onViewRemoved(android.view.View)>(r1);

     label1:
        return;
    }

    public void onViewAdded(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View r1;
        android.support.constraint.solver.widgets.ConstraintWidget r2, $r9;
        android.support.constraint.ConstraintLayout$LayoutParams r3, r11;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z3, $z4;
        android.view.ViewGroup$LayoutParams $r4, $r7;
        java.util.ArrayList $r5, $r6;
        android.support.constraint.solver.widgets.Guideline $r8, $r10;
        android.support.constraint.ConstraintHelper r12;
        android.util.SparseArray $r13;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onViewAdded(android.view.View)>(r1);

     label1:
        r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>(r1);

        $z0 = r1 instanceof android.support.constraint.Guideline;

        if $z0 == 0 goto label2;

        $z3 = r2 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z3 != 0 goto label2;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r11 = (android.support.constraint.ConstraintLayout$LayoutParams) $r7;

        $r8 = new android.support.constraint.solver.widgets.Guideline;

        specialinvoke $r8.<android.support.constraint.solver.widgets.Guideline: void <init>()>();

        r11.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r8;

        r11.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 1;

        $r9 = r11.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $r10 = (android.support.constraint.solver.widgets.Guideline) $r9;

        $i1 = r11.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation>;

        virtualinvoke $r10.<android.support.constraint.solver.widgets.Guideline: void setOrientation(int)>($i1);

     label2:
        $z4 = r1 instanceof android.support.constraint.ConstraintHelper;

        if $z4 == 0 goto label3;

        r12 = (android.support.constraint.ConstraintHelper) r1;

        virtualinvoke r12.<android.support.constraint.ConstraintHelper: void validateParams()>();

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.constraint.ConstraintLayout$LayoutParams) $r4;

        r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isHelper> = 1;

        $r5 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r12);

        if $z1 != 0 goto label3;

        $r6 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label3:
        $r13 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i2 = virtualinvoke r1.<android.view.View: int getId()>();

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r1);

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }

    public void onViewRemoved(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View r1;
        android.support.constraint.solver.widgets.ConstraintWidget r2;
        int $i0, $i1;
        android.util.SparseArray $r3;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onViewRemoved(android.view.View)>(r1);

     label1:
        $r3 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i1 = virtualinvoke r1.<android.view.View: int getId()>();

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i1);

        r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>(r1);

        $r4 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void remove(android.support.constraint.solver.widgets.ConstraintWidget)>(r2);

        $r5 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }

    public void setMinWidth(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setMinHeight(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }

    public int getMinWidth()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        return $i0;
    }

    public int getMinHeight()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        return $i0;
    }

    public void setMaxWidth(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }

    public void setMaxHeight(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }

    public int getMaxWidth()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        return $i0;
    }

    public int getMaxHeight()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        return $i0;
    }

    private boolean updateHierarchy()
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0, z1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        z1 = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i1);

        $z0 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z0 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z1 == 0 goto label4;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void setChildrenConstraints()>();

     label4:
        return z1;
    }

    private void setChildrenConstraints()
    {
        android.support.constraint.ConstraintLayout r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        android.support.constraint.ConstraintLayout$LayoutParams r1;
        android.support.constraint.ConstraintSet $r2, $r17, $r19;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r3, $r6, $r9, $r11;
        java.util.ArrayList $r4, $r15;
        android.util.SparseArray $r5, $r7, $r8, $r12, $r13;
        android.view.ViewGroup$LayoutParams $r10;
        android.support.constraint.Placeholder $r14;
        java.lang.Object $r16;
        android.support.constraint.Constraints $r18;
        android.content.res.Resources $r20;
        java.lang.Integer $r21;
        android.support.constraint.solver.widgets.ConstraintWidget $r22, r25, r33, r35;
        java.lang.Throwable $r23, r28;
        android.view.View r24, r26, r29, r31, r32, r34;
        java.lang.String r27;
        android.support.constraint.ConstraintHelper r30;

        r0 := @this: android.support.constraint.ConstraintLayout;

        z0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isInEditMode()>();

        i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        i10 = 0;

     label01:
        if i10 >= i0 goto label04;

        r24 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i10);

        r25 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>(r24);

        if r25 != null goto label02;

        goto label03;

     label02:
        virtualinvoke r25.<android.support.constraint.solver.widgets.ConstraintWidget: void reset()>();

     label03:
        i10 = i10 + 1;

        goto label01;

     label04:
        if z0 == 0 goto label11;

        i11 = 0;

     label05:
        if i11 >= i0 goto label11;

        r26 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i11);

     label06:
        $r20 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.res.Resources getResources()>();

        $i6 = virtualinvoke r26.<android.view.View: int getId()>();

        r27 = virtualinvoke $r20.<android.content.res.Resources: java.lang.String getResourceName(int)>($i6);

        $i7 = virtualinvoke r26.<android.view.View: int getId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setDesignInformation(int,java.lang.Object,java.lang.Object)>(0, r27, $r21);

        i12 = virtualinvoke r27.<java.lang.String: int indexOf(int)>(47);

        if i12 == -1 goto label07;

        $i9 = i12 + 1;

        r27 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int)>($i9);

     label07:
        $i8 = virtualinvoke r26.<android.view.View: int getId()>();

        $r22 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i8);

        virtualinvoke $r22.<android.support.constraint.solver.widgets.ConstraintWidget: void setDebugName(java.lang.String)>(r27);

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        r28 = $r23;

     label10:
        i11 = i11 + 1;

        goto label05;

     label11:
        $i1 = r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId>;

        if $i1 == -1 goto label14;

        i13 = 0;

     label12:
        if i13 >= i0 goto label14;

        r29 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i13);

        $i4 = virtualinvoke r29.<android.view.View: int getId()>();

        $i5 = r0.<android.support.constraint.ConstraintLayout: int mConstraintSetId>;

        if $i4 != $i5 goto label13;

        $z2 = r29 instanceof android.support.constraint.Constraints;

        if $z2 == 0 goto label13;

        $r18 = (android.support.constraint.Constraints) r29;

        $r19 = virtualinvoke $r18.<android.support.constraint.Constraints: android.support.constraint.ConstraintSet getConstraintSet()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = $r19;

     label13:
        i13 = i13 + 1;

        goto label12;

     label14:
        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        if $r2 == null goto label15;

        $r17 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        virtualinvoke $r17.<android.support.constraint.ConstraintSet: void applyToInternal(android.support.constraint.ConstraintLayout,boolean)>(r0, 1);

     label15:
        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void removeAllChildren()>();

        $r4 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        i14 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i14 <= 0 goto label17;

        i15 = 0;

     label16:
        if i15 >= i14 goto label17;

        $r15 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r30 = (android.support.constraint.ConstraintHelper) $r16;

        virtualinvoke r30.<android.support.constraint.ConstraintHelper: void updatePreLayout(android.support.constraint.ConstraintLayout)>(r0);

        i15 = i15 + 1;

        goto label16;

     label17:
        i16 = 0;

     label18:
        if i16 >= i0 goto label20;

        r31 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i16);

        $z1 = r31 instanceof android.support.constraint.Placeholder;

        if $z1 == 0 goto label19;

        $r14 = (android.support.constraint.Placeholder) r31;

        virtualinvoke $r14.<android.support.constraint.Placeholder: void updatePreLayout(android.support.constraint.ConstraintLayout)>(r0);

     label19:
        i16 = i16 + 1;

        goto label18;

     label20:
        $r5 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        virtualinvoke $r5.<android.util.SparseArray: void clear()>();

        $r7 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        $r6 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(0, $r6);

        $r8 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        $i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        $r9 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r9);

        i17 = 0;

     label21:
        if i17 >= i0 goto label22;

        r32 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i17);

        r33 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>(r32);

        $r13 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        $i3 = virtualinvoke r32.<android.view.View: int getId()>();

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r33);

        i17 = i17 + 1;

        goto label21;

     label22:
        i18 = 0;

     label23:
        if i18 >= i0 goto label26;

        r34 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i18);

        r35 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>(r34);

        if r35 != null goto label24;

        goto label25;

     label24:
        $r10 = virtualinvoke r34.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.constraint.ConstraintLayout$LayoutParams) $r10;

        $r11 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r11.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void add(android.support.constraint.solver.widgets.ConstraintWidget)>(r35);

        $r12 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mTempMapIdToWidget>;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void applyConstraintsFromLayoutParams(boolean,android.view.View,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.ConstraintLayout$LayoutParams,android.util.SparseArray)>(z0, r34, r35, r1, $r12);

     label25:
        i18 = i18 + 1;

        goto label23;

     label26:
        return;

        catch android.content.res.Resources$NotFoundException from label06 to label08 with label09;
    }

    protected void applyConstraintsFromLayoutParams(boolean, android.view.View, android.support.constraint.solver.widgets.ConstraintWidget, android.support.constraint.ConstraintLayout$LayoutParams, android.util.SparseArray)
    {
        android.support.constraint.ConstraintLayout r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10;
        android.view.View r1, r76;
        android.support.constraint.solver.widgets.ConstraintWidget r2, r5, $r34, r67, r68, r69, r70, r71, r72, r73, r74, r75;
        android.support.constraint.ConstraintLayout$LayoutParams r3, r6;
        android.util.SparseArray r4, $r27;
        android.support.constraint.solver.widgets.ConstraintAnchor r7, r8, $r15, $r17, $r23, $r25, $r36, $r38;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i45, i46, i47, i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        float $f0, $f1, $f2, f3, f4, $f5, $f6, $f7, $f8;
        byte $b4, $b44, $b57;
        android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21, $r26;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r14, $r16, $r22, $r24, $r32, $r33, $r35, $r37, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r50, $r52, $r53, $r55, $r56, $r58, $r59, $r61, $r62;
        java.lang.Object $r28, $r29, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63;
        android.view.ViewGroup$LayoutParams $r30, $r31;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r64;
        android.support.constraint.ConstraintHelper r65;
        android.support.constraint.solver.widgets.Guideline r66;
        java.lang.String $r77;

        r0 := @this: android.support.constraint.ConstraintLayout;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.support.constraint.solver.widgets.ConstraintWidget;

        r3 := @parameter3: android.support.constraint.ConstraintLayout$LayoutParams;

        r4 := @parameter4: android.util.SparseArray;

        virtualinvoke r3.<android.support.constraint.ConstraintLayout$LayoutParams: void validate()>();

        r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean helped> = 0;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVisibility(int)>($i0);

        $z1 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isInPlaceholder>;

        if $z1 == 0 goto label01;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setInPlaceholder(boolean)>(1);

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVisibility(int)>(8);

     label01:
        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setCompanionWidget(java.lang.Object)>(r1);

        $z2 = r1 instanceof android.support.constraint.ConstraintHelper;

        if $z2 == 0 goto label02;

        r65 = (android.support.constraint.ConstraintHelper) r1;

        $r64 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z8 = virtualinvoke $r64.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        virtualinvoke r65.<android.support.constraint.ConstraintHelper: void resolveRtl(android.support.constraint.solver.widgets.ConstraintWidget,boolean)>(r2, $z8);

     label02:
        $z3 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if $z3 == 0 goto label07;

        r66 = (android.support.constraint.solver.widgets.Guideline) r2;

        i45 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedGuideBegin>;

        i46 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedGuideEnd>;

        f3 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedGuidePercent>;

        $i43 = <android.os.Build$VERSION: int SDK_INT>;

        if $i43 >= 17 goto label03;

        i45 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        i46 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        f3 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

     label03:
        $b44 = f3 cmpl -1.0F;

        if $b44 == 0 goto label04;

        virtualinvoke r66.<android.support.constraint.solver.widgets.Guideline: void setGuidePercent(float)>(f3);

        goto label06;

     label04:
        if i45 == -1 goto label05;

        virtualinvoke r66.<android.support.constraint.solver.widgets.Guideline: void setGuideBegin(int)>(i45);

        goto label06;

     label05:
        if i46 == -1 goto label06;

        virtualinvoke r66.<android.support.constraint.solver.widgets.Guideline: void setGuideEnd(int)>(i46);

     label06:
        goto label41;

     label07:
        i47 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft>;

        i48 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight>;

        i49 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft>;

        i50 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight>;

        i51 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin>;

        i52 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin>;

        f4 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias>;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 17 goto label11;

        i47 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        i48 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        i49 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        i50 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        i51 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        i52 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin>;

        f4 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        if i47 != -1 goto label09;

        if i48 != -1 goto label09;

        $i41 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i41 == -1 goto label08;

        i47 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        goto label09;

     label08:
        $i42 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i42 == -1 goto label09;

        i48 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

     label09:
        if i49 != -1 goto label11;

        if i50 != -1 goto label11;

        $i39 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i39 == -1 goto label10;

        i49 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        goto label11;

     label10:
        $i40 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i40 == -1 goto label11;

        i50 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

     label11:
        $i53 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int circleConstraint>;

        if $i53 == -1 goto label13;

        $i37 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int circleConstraint>;

        $r63 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i37);

        r67 = (android.support.constraint.solver.widgets.ConstraintWidget) $r63;

        if r67 == null goto label12;

        $f2 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float circleAngle>;

        $i38 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int circleRadius>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void connectCircularConstraint(android.support.constraint.solver.widgets.ConstraintWidget,float,int)>(r67, $f2, $i38);

     label12:
        goto label28;

     label13:
        if i47 == -1 goto label15;

        $r60 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i47);

        r68 = (android.support.constraint.solver.widgets.ConstraintWidget) $r60;

        if r68 == null goto label14;

        $r62 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r61 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $i36 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r62, r68, $r61, $i36, i51);

     label14:
        goto label16;

     label15:
        if i48 == -1 goto label16;

        $r57 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i48);

        r69 = (android.support.constraint.solver.widgets.ConstraintWidget) $r57;

        if r69 == null goto label16;

        $r59 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r58 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $i35 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r59, r69, $r58, $i35, i51);

     label16:
        if i49 == -1 goto label18;

        $r54 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i49);

        r70 = (android.support.constraint.solver.widgets.ConstraintWidget) $r54;

        if r70 == null goto label17;

        $r56 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r55 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $i34 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r56, r70, $r55, $i34, i52);

     label17:
        goto label19;

     label18:
        if i50 == -1 goto label19;

        $r51 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i50);

        r71 = (android.support.constraint.solver.widgets.ConstraintWidget) $r51;

        if r71 == null goto label19;

        $r53 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r52 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $i33 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r53, r71, $r52, $i33, i52);

     label19:
        $i54 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        if $i54 == -1 goto label21;

        $i30 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        $r48 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i30);

        r72 = (android.support.constraint.solver.widgets.ConstraintWidget) $r48;

        if r72 == null goto label20;

        $r50 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r49 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $i32 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        $i31 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r50, r72, $r49, $i32, $i31);

     label20:
        goto label22;

     label21:
        $i2 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        if $i2 == -1 goto label22;

        $i27 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        $r45 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i27);

        r73 = (android.support.constraint.solver.widgets.ConstraintWidget) $r45;

        if r73 == null goto label22;

        $r47 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r46 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $i29 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        $i28 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r47, r73, $r46, $i29, $i28);

     label22:
        $i55 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        if $i55 == -1 goto label24;

        $i24 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        $r42 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i24);

        r74 = (android.support.constraint.solver.widgets.ConstraintWidget) $r42;

        if r74 == null goto label23;

        $r44 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r43 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $i26 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        $i25 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r44, r74, $r43, $i26, $i25);

     label23:
        goto label25;

     label24:
        $i3 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        if $i3 == -1 goto label25;

        $i21 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        $r39 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i21);

        r75 = (android.support.constraint.solver.widgets.ConstraintWidget) $r39;

        if r75 == null goto label25;

        $r41 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r40 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $i23 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        $i22 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r41, r75, $r40, $i23, $i22);

     label25:
        $i56 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        if $i56 == -1 goto label26;

        $r27 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i19 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $r28 = virtualinvoke $r27.<android.util.SparseArray: java.lang.Object get(int)>($i19);

        r76 = (android.view.View) $r28;

        $i20 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $r29 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i20);

        r5 = (android.support.constraint.solver.widgets.ConstraintWidget) $r29;

        if r5 == null goto label26;

        if r76 == null goto label26;

        $r30 = virtualinvoke r76.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z6 = $r30 instanceof android.support.constraint.ConstraintLayout$LayoutParams;

        if $z6 == 0 goto label26;

        $r31 = virtualinvoke r76.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.constraint.ConstraintLayout$LayoutParams) $r31;

        r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        $r32 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        r7 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r32);

        $r33 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        r8 = virtualinvoke r5.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r33);

        virtualinvoke r7.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,boolean)>(r8, 0, -1, 1);

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHasBaseline(boolean)>(1);

        $r34 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        virtualinvoke $r34.<android.support.constraint.solver.widgets.ConstraintWidget: void setHasBaseline(boolean)>(1);

        $r35 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r36 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r35);

        virtualinvoke $r36.<android.support.constraint.solver.widgets.ConstraintAnchor: void reset()>();

        $r37 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r38 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r37);

        virtualinvoke $r38.<android.support.constraint.solver.widgets.ConstraintAnchor: void reset()>();

     label26:
        $b57 = f4 cmpl 0.0F;

        if $b57 < 0 goto label27;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)>(f4);

     label27:
        $f0 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        $b4 = $f0 cmpl 0.0F;

        if $b4 < 0 goto label28;

        $f1 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)>($f1);

     label28:
        if z0 == 0 goto label30;

        $i15 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        if $i15 != -1 goto label29;

        $i18 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        if $i18 == -1 goto label30;

     label29:
        $i17 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        $i16 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setOrigin(int,int)>($i17, $i16);

     label30:
        $z9 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $z9 != 0 goto label34;

        $i12 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i12 != -1 goto label33;

        $z5 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean constrainedWidth>;

        if $z5 == 0 goto label31;

        $r26 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r26);

        goto label32;

     label31:
        $r21 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r21);

     label32:
        $r22 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r23 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r22);

        $i13 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        $r23.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i13;

        $r24 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r25 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r24);

        $i14 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        $r25.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i14;

        goto label35;

     label33:
        $r20 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r20);

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>(0);

        goto label35;

     label34:
        $r9 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r9);

        $i5 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>($i5);

        $i6 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i6 != -2 goto label35;

        $r19 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r19);

     label35:
        $z10 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $z10 != 0 goto label39;

        $i9 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i9 != -1 goto label38;

        $z4 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: boolean constrainedHeight>;

        if $z4 == 0 goto label36;

        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        goto label37;

     label36:
        $r13 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r13);

     label37:
        $r14 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r15 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r14);

        $i10 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i10;

        $r16 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r17 = virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r16);

        $i11 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        $r17.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i11;

        goto label40;

     label38:
        $r12 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r12);

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>(0);

        goto label40;

     label39:
        $r10 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r10);

        $i7 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>($i7);

        $i8 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i8 != -2 goto label40;

        $r11 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r11);

     label40:
        $r77 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setDimensionRatio(java.lang.String)>($r77);

        $f5 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalWeight(float)>($f5);

        $f6 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalWeight(float)>($f6);

        $i58 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)>($i58);

        $i59 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)>($i59);

        $i60 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth>;

        $i61 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth>;

        $i62 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth>;

        $f7 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float matchConstraintPercentWidth>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalMatchStyle(int,int,int,float)>($i60, $i61, $i62, $f7);

        $i63 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight>;

        $i64 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight>;

        $i65 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight>;

        $f8 = r3.<android.support.constraint.ConstraintLayout$LayoutParams: float matchConstraintPercentHeight>;

        virtualinvoke r2.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalMatchStyle(int,int,int,float)>($i63, $i64, $i65, $f8);

     label41:
        return;
    }

    private final android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.constraint.ConstraintLayout$LayoutParams $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5, $r7;
        android.view.ViewParent $r6;
        android.view.View r8;
        android.support.constraint.solver.widgets.ConstraintWidget $r9;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r7 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return $r7;

     label1:
        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (android.view.View) $r2;

        if r8 != null goto label2;

        r8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View findViewById(int)>(i0);

        if r8 == null goto label2;

        if r8 == r0 goto label2;

        $r6 = virtualinvoke r8.<android.view.View: android.view.ViewParent getParent()>();

        if $r6 != r0 goto label2;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void onViewAdded(android.view.View)>(r8);

     label2:
        if r8 != r0 goto label3;

        $r5 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return $r5;

     label3:
        if r8 != null goto label4;

        $r9 = null;

        goto label5;

     label4:
        $r3 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.constraint.ConstraintLayout$LayoutParams) $r3;

        $r9 = $r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

     label5:
        return $r9;
    }

    public final android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.constraint.ConstraintLayout$LayoutParams $r3;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r4;
        android.support.constraint.solver.widgets.ConstraintWidget $r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.View;

        if r1 != r0 goto label1;

        $r4 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return $r4;

     label1:
        if r1 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.constraint.ConstraintLayout$LayoutParams) $r2;

        $r5 = $r3.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

     label3:
        return $r5;
    }

    public void fillMetrics(android.support.constraint.solver.Metrics)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.solver.Metrics r1;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.support.constraint.solver.Metrics;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.Metrics mMetrics> = r1;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void fillMetrics(android.support.constraint.solver.Metrics)>(r1);

        return;
    }

    protected void resolveSystem(android.support.constraint.solver.widgets.ConstraintWidgetContainer, int, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, i21, i22, i23, i24, i25;
        android.support.constraint.ConstraintLayout$Measurer $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i21 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i2);

        i22 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i2);

        $i11 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingTop()>();

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $i12 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingBottom()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        i7 = i5 + i6;

        i8 = specialinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingWidth()>();

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        virtualinvoke $r2.<android.support.constraint.ConstraintLayout$Measurer: void captureLayoutInfos(int,int,int,int,int,int)>(i1, i2, i5, i6, i8, i7);

        $i13 = <android.os.Build$VERSION: int SDK_INT>;

        if $i13 < 17 goto label5;

        $i18 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingStart()>();

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i18);

        $i19 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingEnd()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i19);

        if i9 > 0 goto label1;

        if i10 <= 0 goto label3;

     label1:
        $z0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isRtl()>();

        if $z0 == 0 goto label2;

        i23 = i10;

        goto label4;

     label2:
        i23 = i9;

        goto label4;

     label3:
        $i20 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        i23 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i20);

     label4:
        goto label6;

     label5:
        $i14 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        i23 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i14);

     label6:
        i24 = i21 - i8;

        i25 = i22 - i7;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setSelfDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidgetContainer,int,int,int,int)>(r1, i3, i24, i4, i25);

        $i16 = r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth>;

        $i15 = r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight>;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: long measure(int,int,int,int,int,int,int,int,int)>(i0, i3, i24, i4, i25, $i16, $i15, i23, i5);

        return;
    }

    protected void resolveMeasuredDimension(int, int, int, int, boolean, boolean)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, i1, i2, i3, i5, i6, i7, i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18;
        boolean z0, z1;
        byte b4;
        android.support.constraint.ConstraintLayout$Measurer $r1, $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        b4 = 0;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        i5 = $r1.<android.support.constraint.ConstraintLayout$Measurer: int paddingHeight>;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        i6 = $r2.<android.support.constraint.ConstraintLayout$Measurer: int paddingWidth>;

        i7 = i2 + i6;

        i8 = i3 + i5;

        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 < 11 goto label3;

        i13 = staticinvoke <android.support.constraint.ConstraintLayout: int resolveSizeAndState(int,int,int)>(i7, i0, b4);

        $i10 = b4 << 16;

        i14 = staticinvoke <android.support.constraint.ConstraintLayout: int resolveSizeAndState(int,int,int)>(i8, i1, $i10);

        i15 = i13 & 16777215;

        i16 = i14 & 16777215;

        $i11 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        i17 = staticinvoke <java.lang.Math: int min(int,int)>($i11, i15);

        $i12 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        i18 = staticinvoke <java.lang.Math: int min(int,int)>($i12, i16);

        if z0 == 0 goto label1;

        i17 = i17 | 16777216;

     label1:
        if z1 == 0 goto label2;

        i18 = i18 | 16777216;

     label2:
        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setMeasuredDimension(int,int)>(i17, i18);

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = i17;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = i18;

        goto label4;

     label3:
        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setMeasuredDimension(int,int)>(i7, i8);

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = i7;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = i8;

     label4:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, $i18, $i19, $i20;
        long l2;
        android.view.View r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 = 0L;

        $z0 = r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy>;

        if $z0 != 0 goto label3;

        i15 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        i16 = 0;

     label1:
        if i16 >= i15 goto label3;

        r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i16);

        $z6 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z6 == 0 goto label2;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        goto label3;

     label2:
        i16 = i16 + 1;

        goto label1;

     label3:
        $z7 = r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy>;

        if $z7 != 0 goto label5;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec>;

        if $i3 != i0 goto label4;

        $i12 = r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec>;

        if $i12 != i1 goto label4;

        $r8 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i13 = virtualinvoke $r8.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r9 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i14 = virtualinvoke $r9.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r10 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z4 = virtualinvoke $r10.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()>();

        $r11 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z5 = virtualinvoke $r11.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()>();

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void resolveMeasuredDimension(int,int,int,int,boolean,boolean)>(i0, i1, $i13, $i14, $z4, $z5);

        return;

     label4:
        $i4 = r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec>;

        if $i4 != i0 goto label5;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if $i5 != 1073741824 goto label5;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if $i6 != -2147483648 goto label5;

        $i7 = r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec>;

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i7);

        if $i8 != -2147483648 goto label5;

        i17 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i9 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if i17 < $i9 goto label5;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = i0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = i1;

        $r4 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i10 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r5 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i11 = virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r6 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z2 = virtualinvoke $r6.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()>();

        $r7 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z3 = virtualinvoke $r7.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()>();

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void resolveMeasuredDimension(int,int,int,int,boolean,boolean)>(i0, i1, $i10, $i11, $z2, $z3);

        return;

     label5:
        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureWidthMeasureSpec> = i0;

        r0.<android.support.constraint.ConstraintLayout: int mOnMeasureHeightMeasureSpec> = i1;

        $r12 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isRtl()>();

        virtualinvoke $r12.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setRtl(boolean)>($z8);

        $z9 = r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy>;

        if $z9 == 0 goto label6;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 0;

        $z1 = specialinvoke r0.<android.support.constraint.ConstraintLayout: boolean updateHierarchy()>();

        if $z1 == 0 goto label6;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void updateHierarchy()>();

     label6:
        $r13 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i18 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void resolveSystem(android.support.constraint.solver.widgets.ConstraintWidgetContainer,int,int,int)>($r13, $i18, i0, i1);

        $r14 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i19 = virtualinvoke $r14.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r15 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i20 = virtualinvoke $r15.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r16 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z10 = virtualinvoke $r16.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()>();

        $r17 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z11 = virtualinvoke $r17.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()>();

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void resolveMeasuredDimension(int,int,int,int,boolean,boolean)>(i0, i1, $i19, $i20, $z10, $z11);

        return;
    }

    protected boolean isRtl()
    {
        android.support.constraint.ConstraintLayout r0;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label5;

        $r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 4194304;

        if $i2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $i3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getLayoutDirection()>();

        if 1 != $i3 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        return 0;
    }

    private int getPaddingWidth()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingRight()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        i9 = $i1 + $i3;

        i10 = 0;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 17 goto label1;

        $i5 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingStart()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i7 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingEnd()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        i10 = $i6 + $i8;

     label1:
        if i10 <= 0 goto label2;

        i9 = i10;

     label2:
        return i9;
    }

    protected void setSelfDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidgetContainer, int, int, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.support.constraint.ConstraintLayout$Measurer $r2, $r3;
        android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour r4, r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        i4 = $r2.<android.support.constraint.ConstraintLayout$Measurer: int paddingHeight>;

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$Measurer mMeasurer>;

        i5 = $r3.<android.support.constraint.ConstraintLayout$Measurer: int paddingWidth>;

        r4 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r5 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        i16 = 0;

        i17 = 0;

        i6 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        lookupswitch(i0)
        {
            case -2147483648: goto label01;
            case 0: goto label02;
            case 1073741824: goto label03;
            default: goto label04;
        };

     label01:
        r4 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        i16 = i1;

        if i6 != 0 goto label04;

        $i15 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        goto label04;

     label02:
        r4 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if i6 != 0 goto label04;

        $i14 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i14);

        goto label04;

     label03:
        $i7 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i8 = $i7 - i5;

        i16 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i1);

     label04:
        lookupswitch(i2)
        {
            case -2147483648: goto label05;
            case 0: goto label06;
            case 1073741824: goto label07;
            default: goto label08;
        };

     label05:
        r5 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        i17 = i3;

        if i6 != 0 goto label08;

        $i13 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        goto label08;

     label06:
        r5 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if i6 != 0 goto label08;

        $i12 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        goto label08;

     label07:
        $i9 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i10 = $i9 - i4;

        i17 = staticinvoke <java.lang.Math: int min(int,int)>($i10, i3);

     label08:
        $i18 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if i16 != $i18 goto label09;

        $i11 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if i17 == $i11 goto label10;

     label09:
        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void invalidateMeasures()>();

     label10:
        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setX(int)>(0);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setY(int)>(0);

        $i19 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i20 = $i19 - i5;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMaxWidth(int)>($i20);

        $i21 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i22 = $i21 - i4;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMaxHeight(int)>($i22);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>(0);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>(0);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>(r4);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>(i16);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>(r5);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(i17);

        $i23 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        $i24 = $i23 - i5;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>($i24);

        $i25 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        $i26 = $i25 - i4;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>($i26);

        return;
    }

    public void setState(int, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0, i1, i2;
        android.support.constraint.ConstraintLayoutStates $r1, $r2;
        float $f0, $f1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec>;

        $f1 = (float) i1;

        $f0 = (float) i2;

        virtualinvoke $r2.<android.support.constraint.ConstraintLayoutStates: void updateConstraints(int,float,float)>(i0, $f1, $f0);

     label1:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, i12, i13, i14;
        android.support.constraint.solver.widgets.ConstraintWidget r1;
        android.support.constraint.Placeholder r2;
        android.view.View r3, r8;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.view.ViewGroup$LayoutParams $r7;
        android.support.constraint.ConstraintLayout$LayoutParams r9;
        android.support.constraint.ConstraintHelper r10;

        r0 := @this: android.support.constraint.ConstraintLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        z1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isInEditMode()>();

        i12 = 0;

     label1:
        if i12 >= i4 goto label5;

        r8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i12);

        $r7 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.support.constraint.ConstraintLayout$LayoutParams) $r7;

        r1 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $i9 = virtualinvoke r8.<android.view.View: int getVisibility()>();

        if $i9 != 8 goto label2;

        $z3 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if $z3 != 0 goto label2;

        $z4 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isHelper>;

        if $z4 != 0 goto label2;

        $z5 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isVirtualGroup>;

        if $z5 != 0 goto label2;

        if z1 != 0 goto label2;

        goto label4;

     label2:
        $z6 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isInPlaceholder>;

        if $z6 == 0 goto label3;

        goto label4;

     label3:
        i5 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getX()>();

        i6 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getY()>();

        $i10 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getWidth()>();

        i7 = i5 + $i10;

        $i11 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getHeight()>();

        i8 = i6 + $i11;

        virtualinvoke r8.<android.view.View: void layout(int,int,int,int)>(i5, i6, i7, i8);

        $z2 = r8 instanceof android.support.constraint.Placeholder;

        if $z2 == 0 goto label4;

        r2 = (android.support.constraint.Placeholder) r8;

        r3 = virtualinvoke r2.<android.support.constraint.Placeholder: android.view.View getContent()>();

        if r3 == null goto label4;

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r3.<android.view.View: void layout(int,int,int,int)>(i5, i6, i7, i8);

     label4:
        i12 = i12 + 1;

        goto label1;

     label5:
        $r4 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        i13 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i13 <= 0 goto label7;

        i14 = 0;

     label6:
        if i14 >= i13 goto label7;

        $r5 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r10 = (android.support.constraint.ConstraintHelper) $r6;

        virtualinvoke r10.<android.support.constraint.ConstraintHelper: void updatePostLayout(android.support.constraint.ConstraintLayout)>(r0);

        i14 = i14 + 1;

        goto label6;

     label7:
        return;
    }

    public void setOptimizationLevel(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = i0;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>(i0);

        return;
    }

    public int getOptimizationLevel()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r1;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getOptimizationLevel()>();

        return $i0;
    }

    public android.support.constraint.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet r1;
        android.support.constraint.ConstraintLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.constraint.ConstraintLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.support.constraint.ConstraintLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintLayout$LayoutParams $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = new android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke $r1.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.ViewGroup$LayoutParams r1, r4;
        android.support.constraint.ConstraintLayout$LayoutParams r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        r3 = new android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke r3.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        r4 = (android.view.ViewGroup$LayoutParams) r3;

        return r4;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.constraint.ConstraintLayout$LayoutParams;

        return $z0;
    }

    public void setConstraintSet(android.support.constraint.ConstraintSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintSet r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.support.constraint.ConstraintSet;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = r1;

        return;
    }

    public android.view.View getViewById(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.view.View $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.view.View) $r2;

        return $r3;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.support.constraint.ConstraintLayout r0;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38, f39;
        android.view.View r2;
        java.lang.Object r3, $r15;
        java.lang.String r4, $r8, $r9, $r10, $r11;
        java.lang.String[] r5;
        android.graphics.Paint r6, $r12;
        java.util.ArrayList $r7, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;
        boolean $z0, $z1;
        android.support.constraint.ConstraintHelper r16;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.graphics.Canvas;

        $r7 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        if $r7 == null goto label2;

        $r13 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        i16 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if i16 <= 0 goto label2;

        i17 = 0;

     label1:
        if i17 >= i16 goto label2;

        $r14 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r16 = (android.support.constraint.ConstraintHelper) $r15;

        virtualinvoke r16.<android.support.constraint.ConstraintHelper: void updatePreDraw(android.support.constraint.ConstraintLayout)>(r0);

        i17 = i17 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>(r1);

        $z1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isInEditMode()>();

        if $z1 == 0 goto label6;

        i18 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getWidth()>();

        f38 = (float) $i0;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getHeight()>();

        f39 = (float) $i1;

        f0 = 1080.0F;

        f1 = 1920.0F;

        i19 = 0;

     label3:
        if i19 >= i18 goto label6;

        r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i19);

        $i2 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i2 != 8 goto label4;

        goto label5;

     label4:
        r3 = virtualinvoke r2.<android.view.View: java.lang.Object getTag()>();

        if r3 == null goto label5;

        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        r4 = (java.lang.String) r3;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i3 = lengthof r5;

        if $i3 != 4 goto label5;

        $r8 = r5[0];

        i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = r5[1];

        i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = r5[2];

        i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = r5[3];

        i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $f2 = (float) i20;

        $f3 = $f2 / f0;

        $f4 = $f3 * f38;

        i24 = (int) $f4;

        $f5 = (float) i21;

        $f6 = $f5 / f1;

        $f7 = $f6 * f39;

        i25 = (int) $f7;

        $f8 = (float) i22;

        $f9 = $f8 / f0;

        $f10 = $f9 * f38;

        i26 = (int) $f10;

        $f11 = (float) i23;

        $f12 = $f11 / f1;

        $f13 = $f12 * f39;

        i27 = (int) $f13;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>()>();

        r6 = $r12;

        virtualinvoke r6.<android.graphics.Paint: void setColor(int)>(-65536);

        $f17 = (float) i24;

        $f16 = (float) i25;

        $i4 = i24 + i26;

        $f15 = (float) $i4;

        $f14 = (float) i25;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f17, $f16, $f15, $f14, r6);

        $i5 = i24 + i26;

        $f21 = (float) $i5;

        $f20 = (float) i25;

        $i6 = i24 + i26;

        $f19 = (float) $i6;

        $i7 = i25 + i27;

        $f18 = (float) $i7;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f21, $f20, $f19, $f18, r6);

        $i8 = i24 + i26;

        $f25 = (float) $i8;

        $i9 = i25 + i27;

        $f24 = (float) $i9;

        $f23 = (float) i24;

        $i10 = i25 + i27;

        $f22 = (float) $i10;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f25, $f24, $f23, $f22, r6);

        $f29 = (float) i24;

        $i11 = i25 + i27;

        $f28 = (float) $i11;

        $f27 = (float) i24;

        $f26 = (float) i25;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f29, $f28, $f27, $f26, r6);

        virtualinvoke r6.<android.graphics.Paint: void setColor(int)>(-16711936);

        $f33 = (float) i24;

        $f32 = (float) i25;

        $i12 = i24 + i26;

        $f31 = (float) $i12;

        $i13 = i25 + i27;

        $f30 = (float) $i13;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f33, $f32, $f31, $f30, r6);

        $f37 = (float) i24;

        $i14 = i25 + i27;

        $f36 = (float) $i14;

        $i15 = i24 + i26;

        $f35 = (float) $i15;

        $f34 = (float) i25;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f37, $f36, $f35, $f34, r6);

     label5:
        i19 = i19 + 1;

        goto label3;

     label6:
        return;
    }

    public void setOnConstraintsChanged(android.support.constraint.ConstraintsChangedListener)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintsChangedListener r1;
        android.support.constraint.ConstraintLayoutStates $r2, $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.support.constraint.ConstraintsChangedListener;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintsChangedListener mConstraintsChangedListener> = r1;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec>;

        virtualinvoke $r3.<android.support.constraint.ConstraintLayoutStates: void setOnConstraintsChanged(android.support.constraint.ConstraintsChangedListener)>(r1);

     label1:
        return;
    }

    public void loadLayoutDescription(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;
        java.lang.Throwable r1, $r4;
        android.support.constraint.ConstraintLayoutStates $r2;
        android.content.Context $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

     label1:
        $r2 = new android.support.constraint.ConstraintLayoutStates;

        $r3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.constraint.ConstraintLayoutStates: void <init>(android.content.Context,android.support.constraint.ConstraintLayout,int)>($r3, r0, i0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = $r2;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

        goto label5;

     label4:
        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayoutStates mConstraintLayoutSpec> = null;

     label5:
        return;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    public void requestLayout()
    {
        android.support.constraint.ConstraintLayout r0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void markHierarchyDirty()>();

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void forceLayout()
    {
        android.support.constraint.ConstraintLayout r0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void markHierarchyDirty()>();

        specialinvoke r0.<android.view.ViewGroup: void forceLayout()>();

        return;
    }

    private void markHierarchyDirty()
    {
        android.support.constraint.ConstraintLayout r0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidth> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeight> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightSize> = -1;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureWidthMode> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mLastMeasureHeightMode> = 0;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.support.constraint.ConstraintLayout r0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        return 0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$LayoutParams generateDefaultLayoutParams()>();

        r2 = (android.view.ViewGroup$LayoutParams) $r1;

        return r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet r1;
        android.support.constraint.ConstraintLayout$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    static int access$000(android.support.constraint.ConstraintLayout)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;

        r0 := @parameter0: android.support.constraint.ConstraintLayout;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        return $i0;
    }

    static java.util.ArrayList access$100(android.support.constraint.ConstraintLayout)
    {
        android.support.constraint.ConstraintLayout r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.support.constraint.ConstraintLayout;

        $r1 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mConstraintHelpers>;

        return $r1;
    }

