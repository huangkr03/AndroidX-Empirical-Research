android.support.test.espresso.remote.InteractionRequest
<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.remote.EspressoRemoteMessage$From FROM>
<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher rootMatcher>
<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAction viewAction>
<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAssertion viewAssertion>
    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, android.support.test.espresso.ViewAction, android.support.test.espresso.ViewAssertion)
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        org.hamcrest.Matcher r1, r2;
        android.support.test.espresso.ViewAction r3;
        android.support.test.espresso.ViewAssertion r4;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: android.support.test.espresso.ViewAction;

        r4 := @parameter3: android.support.test.espresso.ViewAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher rootMatcher> = r1;

        r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher viewMatcher> = r2;

        r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAction viewAction> = r3;

        r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAssertion viewAssertion> = r4;

        return;
    }

    private void <init>(android.support.test.espresso.remote.InteractionRequest$Builder)
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        android.support.test.espresso.remote.InteractionRequest$Builder r1;
        org.hamcrest.Matcher $r2, $r3;
        android.support.test.espresso.ViewAction $r4;
        android.support.test.espresso.ViewAssertion $r5;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        r1 := @parameter0: android.support.test.espresso.remote.InteractionRequest$Builder;

        $r2 = staticinvoke <android.support.test.espresso.remote.InteractionRequest$Builder: org.hamcrest.Matcher access$000(android.support.test.espresso.remote.InteractionRequest$Builder)>(r1);

        $r3 = staticinvoke <android.support.test.espresso.remote.InteractionRequest$Builder: org.hamcrest.Matcher access$100(android.support.test.espresso.remote.InteractionRequest$Builder)>(r1);

        $r4 = staticinvoke <android.support.test.espresso.remote.InteractionRequest$Builder: android.support.test.espresso.ViewAction access$200(android.support.test.espresso.remote.InteractionRequest$Builder)>(r1);

        $r5 = staticinvoke <android.support.test.espresso.remote.InteractionRequest$Builder: android.support.test.espresso.ViewAssertion access$300(android.support.test.espresso.remote.InteractionRequest$Builder)>(r1);

        specialinvoke r0.<android.support.test.espresso.remote.InteractionRequest: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.ViewAction,android.support.test.espresso.ViewAssertion)>($r2, $r3, $r4, $r5);

        return;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.MessageLite toProto()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        org.hamcrest.Matcher $r1, $r4, $r14;
        android.support.test.espresso.remote.internal.deps.protobuf.Any $r2, $r9, $r12, $r15;
        android.support.test.espresso.ViewAction $r5, $r11;
        android.support.test.espresso.ViewAssertion $r6, $r8;
        android.support.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite $r7;
        java.lang.Throwable $r17, r20;
        android.support.test.espresso.remote.RemoteProtocolException $r18;
        android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder r19;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

     label1:
        r19 = staticinvoke <android.support.test.espresso.proto.UiInteraction$InteractionRequestProto: android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder newBuilder()>();

        $r1 = r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher rootMatcher>;

        $r2 = staticinvoke <android.support.test.espresso.remote.TypeProtoConverters: android.support.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>($r1);

        virtualinvoke r19.<android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder: android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder setRootMatcher(android.support.test.espresso.remote.internal.deps.protobuf.Any)>($r2);

        $r4 = r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher viewMatcher>;

        if $r4 == null goto label2;

        $r14 = r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher viewMatcher>;

        $r15 = staticinvoke <android.support.test.espresso.remote.TypeProtoConverters: android.support.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>($r14);

        virtualinvoke r19.<android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder: android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder setViewMatcher(android.support.test.espresso.remote.internal.deps.protobuf.Any)>($r15);

     label2:
        $r5 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAction viewAction>;

        if $r5 == null goto label3;

        $r11 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAction viewAction>;

        $r12 = staticinvoke <android.support.test.espresso.remote.TypeProtoConverters: android.support.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>($r11);

        virtualinvoke r19.<android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder: android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder setViewAction(android.support.test.espresso.remote.internal.deps.protobuf.Any)>($r12);

     label3:
        $r6 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAssertion viewAssertion>;

        if $r6 == null goto label4;

        $r8 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAssertion viewAssertion>;

        $r9 = staticinvoke <android.support.test.espresso.remote.TypeProtoConverters: android.support.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>($r8);

        virtualinvoke r19.<android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder: android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder setViewAssertion(android.support.test.espresso.remote.internal.deps.protobuf.Any)>($r9);

     label4:
        $r7 = virtualinvoke r19.<android.support.test.espresso.proto.UiInteraction$InteractionRequestProto$Builder: android.support.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite build()>();

     label5:
        return $r7;

     label6:
        $r17 := @caughtexception;

        r20 = $r17;

        $r18 = new android.support.test.espresso.remote.RemoteProtocolException;

        specialinvoke $r18.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Type does not implement the EspressoRemoteMessage.TO interface", r20);

        throw $r18;

        catch java.lang.ClassCastException from label1 to label5 with label6;
    }

    public org.hamcrest.Matcher getRootMatcher()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        $r1 = r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher rootMatcher>;

        return $r1;
    }

    public org.hamcrest.Matcher getViewMatcher()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        $r1 = r0.<android.support.test.espresso.remote.InteractionRequest: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    public android.support.test.espresso.ViewAction getViewAction()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        android.support.test.espresso.ViewAction $r1;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        $r1 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAction viewAction>;

        return $r1;
    }

    public android.support.test.espresso.ViewAssertion getViewAssertion()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        android.support.test.espresso.ViewAssertion $r1;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        $r1 = r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.ViewAssertion viewAssertion>;

        return $r1;
    }

    public volatile java.lang.Object toProto()
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite $r1;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite toProto()>();

        return $r1;
    }

    static android.support.test.espresso.remote.EspressoRemoteMessage$From access$400()
    {
        android.support.test.espresso.remote.EspressoRemoteMessage$From $r0;

        $r0 = <android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.remote.EspressoRemoteMessage$From FROM>;

        return $r0;
    }

    void <init>(android.support.test.espresso.remote.InteractionRequest$Builder, android.support.test.espresso.remote.InteractionRequest$1)
    {
        android.support.test.espresso.remote.InteractionRequest r0;
        android.support.test.espresso.remote.InteractionRequest$Builder r1;
        android.support.test.espresso.remote.InteractionRequest$1 r2;

        r0 := @this: android.support.test.espresso.remote.InteractionRequest;

        r1 := @parameter0: android.support.test.espresso.remote.InteractionRequest$Builder;

        r2 := @parameter1: android.support.test.espresso.remote.InteractionRequest$1;

        specialinvoke r0.<android.support.test.espresso.remote.InteractionRequest: void <init>(android.support.test.espresso.remote.InteractionRequest$Builder)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.support.test.espresso.remote.InteractionRequest$1 $r0;

        $r0 = new android.support.test.espresso.remote.InteractionRequest$1;

        specialinvoke $r0.<android.support.test.espresso.remote.InteractionRequest$1: void <init>()>();

        <android.support.test.espresso.remote.InteractionRequest: android.support.test.espresso.remote.EspressoRemoteMessage$From FROM> = $r0;

        return;
    }

