android.support.test.internal.runner.listener.SuiteAssignmentPrinter
<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: float SMALL_SUITE_MAX_RUNTIME>
<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: float MEDIUM_SUITE_MAX_RUNTIME>
<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: long mStartTime>
<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid>
    public void <init>()
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        specialinvoke r0.<android.support.test.internal.runner.listener.InstrumentationRunListener: void <init>()>();

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        long $l0;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: long mStartTime> = $l0;

        return;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        long l0, $l2, $l4, l8, l9;
        java.lang.String r2, $r4, $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r16, r17, r18;
        boolean $z0, $z1;
        java.lang.Object[] $r3, $r7, $r12;
        byte $b3, $b5, $b6;
        float $f0, $f1;
        java.lang.Long $r10, $r15;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z0 = r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid>;

        if $z0 == 0 goto label1;

        $l2 = r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: long mStartTime>;

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label2;

     label1:
        r17 = "NA";

        l8 = -1L;

        virtualinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>("F");

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s#%s: skipping suite assignment due to test failure\n", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SuiteAssignmentPrinter", $r6);

        goto label7;

     label2:
        $l4 = r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: long mStartTime>;

        l9 = l0 - $l4;

        $f0 = (float) l9;

        $b5 = $f0 cmpg 200.0F;

        if $b5 >= 0 goto label3;

        r18 = "small";

        goto label5;

     label3:
        $f1 = (float) l9;

        $b6 = $f1 cmpg 1000.0F;

        if $b6 >= 0 goto label4;

        r18 = "medium";

        goto label5;

     label4:
        r18 = "large";

     label5:
        r2 = specialinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: java.lang.String getTestSize(org.junit.runner.Description)>(r1);

        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label6;

        $r12 = newarray (java.lang.Object)[5];

        $r13 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r12[0] = $r13;

        $r14 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r12[1] = $r14;

        $r12[2] = r2;

        $r12[3] = r18;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        $r12[4] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s#%s: current size: %s. suggested: %s runTime: %d ms\n", $r12);

        virtualinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>($r16);

        goto label7;

     label6:
        virtualinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>(".");

        $r7 = newarray (java.lang.Object)[4];

        $r8 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r7[1] = $r9;

        $r7[2] = r18;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        $r7[3] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s#%s assigned correctly as %s. runTime: %d ms\n", $r7);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SuiteAssignmentPrinter", $r11);

     label7:
        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: long mStartTime> = -1L;

        return;
    }

    private java.lang.String getTestSize(org.junit.runner.Description)
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        java.lang.String r2, $r3;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: java.lang.String getTestSizeFromMethod(org.junit.runner.Description)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = virtualinvoke r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: java.lang.String getTestSizeFromClass(org.junit.runner.Description)>(r1);

        return $r3;
    }

    java.lang.String getTestSizeFromMethod(org.junit.runner.Description)
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        java.lang.'annotation'.Annotation $r2, $r3, $r4;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/SmallTest;");

        if $r2 == null goto label1;

        return "small";

     label1:
        $r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/MediumTest;");

        if $r3 == null goto label2;

        return "medium";

     label2:
        $r4 = virtualinvoke r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/LargeTest;");

        if $r4 == null goto label3;

        return "large";

     label3:
        return null;
    }

    java.lang.String getTestSizeFromClass(org.junit.runner.Description)
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        java.lang.Class r2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/SmallTest;");

        if $z0 == 0 goto label2;

        return "small";

     label2:
        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/MediumTest;");

        if $z1 == 0 goto label3;

        return "medium";

     label3:
        $z2 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/test/suitebuilder/annotation/LargeTest;");

        if $z2 == 0 goto label4;

        return "large";

     label4:
        return null;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void testIgnored(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;

        r0 := @this: android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

