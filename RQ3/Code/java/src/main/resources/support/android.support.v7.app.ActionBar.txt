android.support.v7.app.ActionBar
<android.support.v7.app.ActionBar: int NAVIGATION_MODE_STANDARD>
<android.support.v7.app.ActionBar: int NAVIGATION_MODE_LIST>
<android.support.v7.app.ActionBar: int NAVIGATION_MODE_TABS>
<android.support.v7.app.ActionBar: int DISPLAY_USE_LOGO>
<android.support.v7.app.ActionBar: int DISPLAY_SHOW_HOME>
<android.support.v7.app.ActionBar: int DISPLAY_HOME_AS_UP>
<android.support.v7.app.ActionBar: int DISPLAY_SHOW_TITLE>
<android.support.v7.app.ActionBar: int DISPLAY_SHOW_CUSTOM>
    public void <init>()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.v7.app.ActionBar: void setCustomView(android.view.View)>
<android.support.v7.app.ActionBar: void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)>
<android.support.v7.app.ActionBar: void setCustomView(int)>
<android.support.v7.app.ActionBar: void setIcon(int)>
<android.support.v7.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)>
<android.support.v7.app.ActionBar: void setLogo(int)>
<android.support.v7.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)>
<android.support.v7.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)>
<android.support.v7.app.ActionBar: void setSelectedNavigationItem(int)>
<android.support.v7.app.ActionBar: int getSelectedNavigationIndex()>
<android.support.v7.app.ActionBar: int getNavigationItemCount()>
<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>
<android.support.v7.app.ActionBar: void setTitle(int)>
<android.support.v7.app.ActionBar: void setSubtitle(java.lang.CharSequence)>
<android.support.v7.app.ActionBar: void setSubtitle(int)>
<android.support.v7.app.ActionBar: void setDisplayOptions(int)>
<android.support.v7.app.ActionBar: void setDisplayOptions(int,int)>
<android.support.v7.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>
<android.support.v7.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>
<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<android.support.v7.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>
<android.support.v7.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>
<android.support.v7.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.app.ActionBar r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.app.ActionBar r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

<android.support.v7.app.ActionBar: android.view.View getCustomView()>
<android.support.v7.app.ActionBar: java.lang.CharSequence getTitle()>
<android.support.v7.app.ActionBar: java.lang.CharSequence getSubtitle()>
<android.support.v7.app.ActionBar: int getNavigationMode()>
<android.support.v7.app.ActionBar: void setNavigationMode(int)>
<android.support.v7.app.ActionBar: int getDisplayOptions()>
<android.support.v7.app.ActionBar: android.support.v7.app.ActionBar$Tab newTab()>
<android.support.v7.app.ActionBar: void addTab(android.support.v7.app.ActionBar$Tab)>
<android.support.v7.app.ActionBar: void addTab(android.support.v7.app.ActionBar$Tab,boolean)>
<android.support.v7.app.ActionBar: void addTab(android.support.v7.app.ActionBar$Tab,int)>
<android.support.v7.app.ActionBar: void addTab(android.support.v7.app.ActionBar$Tab,int,boolean)>
<android.support.v7.app.ActionBar: void removeTab(android.support.v7.app.ActionBar$Tab)>
<android.support.v7.app.ActionBar: void removeTabAt(int)>
<android.support.v7.app.ActionBar: void removeAllTabs()>
<android.support.v7.app.ActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>
<android.support.v7.app.ActionBar: android.support.v7.app.ActionBar$Tab getSelectedTab()>
<android.support.v7.app.ActionBar: android.support.v7.app.ActionBar$Tab getTabAt(int)>
<android.support.v7.app.ActionBar: int getTabCount()>
<android.support.v7.app.ActionBar: int getHeight()>
<android.support.v7.app.ActionBar: void show()>
<android.support.v7.app.ActionBar: void hide()>
<android.support.v7.app.ActionBar: boolean isShowing()>
<android.support.v7.app.ActionBar: void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)>
<android.support.v7.app.ActionBar: void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)>
    public void setHomeButtonEnabled(boolean)
    {
        android.support.v7.app.ActionBar r0;
        boolean z0;

        r0 := @this: android.support.v7.app.ActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public android.content.Context getThemedContext()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return null;
    }

    public boolean isTitleTruncated()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        android.support.v7.app.ActionBar r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        android.support.v7.app.ActionBar r0;
        int i0;

        r0 := @this: android.support.v7.app.ActionBar;

        i0 := @parameter0: int;

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        android.support.v7.app.ActionBar r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        android.support.v7.app.ActionBar r0;
        int i0;

        r0 := @this: android.support.v7.app.ActionBar;

        i0 := @parameter0: int;

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        android.support.v7.app.ActionBar r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.app.ActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Hide on content scroll is not supported in this action bar configuration.");

        throw $r1;

     label1:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public int getHideOffset()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public void setHideOffset(int)
    {
        android.support.v7.app.ActionBar r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.app.ActionBar;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting an explicit action bar hide offset is not supported in this action bar configuration.");

        throw $r1;

     label1:
        return;
    }

    public void setElevation(float)
    {
        android.support.v7.app.ActionBar r0;
        float f0;
        byte $b0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.app.ActionBar;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting a non-zero elevation is not supported in this action bar configuration.");

        throw $r1;

     label1:
        return;
    }

    public float getElevation()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0.0F;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        android.support.v7.app.ActionBar r0;
        boolean z0;

        r0 := @this: android.support.v7.app.ActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        android.support.v7.app.ActionBar r0;
        boolean z0;

        r0 := @this: android.support.v7.app.ActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.app.ActionBar r0;
        android.content.res.Configuration r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        android.support.v7.app.ActionBar r0;
        boolean z0;

        r0 := @this: android.support.v7.app.ActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback)
    {
        android.support.v7.app.ActionBar r0;
        android.support.v7.view.ActionMode$Callback r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.support.v7.view.ActionMode$Callback;

        return null;
    }

    public boolean openOptionsMenu()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public boolean closeOptionsMenu()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public boolean invalidateOptionsMenu()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public boolean onMenuKeyEvent(android.view.KeyEvent)
    {
        android.support.v7.app.ActionBar r0;
        android.view.KeyEvent r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.support.v7.app.ActionBar r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.support.v7.app.ActionBar;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean collapseActionView()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        android.support.v7.app.ActionBar r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.v7.app.ActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    boolean requestFocus()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return 0;
    }

    void onDestroy()
    {
        android.support.v7.app.ActionBar r0;

        r0 := @this: android.support.v7.app.ActionBar;

        return;
    }

android.support.v7.app.ActionBar$DisplayOptions
android.support.v7.app.ActionBar$LayoutParams
<android.support.v7.app.ActionBar$LayoutParams: int gravity>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.app.ActionBar$LayoutParams r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int[] $r4;
        int $i0, $i1;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 0;

        $r4 = <android.support.v7.appcompat.R$styleable: int[] ActionBarLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity>;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = $i1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(int, int)
    {
        android.support.v7.app.ActionBar$LayoutParams r0;
        int i0, i1;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(i0, i1);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 0;

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 8388627;

        return;
    }

    public void <init>(int, int, int)
    {
        android.support.v7.app.ActionBar$LayoutParams r0;
        int i0, i1, i2;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(i0, i1);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 0;

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = i2;

        return;
    }

    public void <init>(int)
    {
        android.support.v7.app.ActionBar$LayoutParams r0;
        int i0;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.v7.app.ActionBar$LayoutParams: void <init>(int,int,int)>(-2, -1, i0);

        return;
    }

    public void <init>(android.support.v7.app.ActionBar$LayoutParams)
    {
        android.support.v7.app.ActionBar$LayoutParams r0, r1;
        int $i0;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        r1 := @parameter0: android.support.v7.app.ActionBar$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 0;

        $i0 = r1.<android.support.v7.app.ActionBar$LayoutParams: int gravity>;

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = $i0;

        return;
    }

    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.app.ActionBar$LayoutParams r0;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @this: android.support.v7.app.ActionBar$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        r0.<android.support.v7.app.ActionBar$LayoutParams: int gravity> = 0;

        return;
    }

android.support.v7.app.ActionBar$NavigationMode
android.support.v7.app.ActionBar$OnMenuVisibilityListener
<android.support.v7.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>
android.support.v7.app.ActionBar$OnNavigationListener
<android.support.v7.app.ActionBar$OnNavigationListener: boolean onNavigationItemSelected(int,long)>
android.support.v7.app.ActionBar$Tab
<android.support.v7.app.ActionBar$Tab: int INVALID_POSITION>
    public void <init>()
    {
        android.support.v7.app.ActionBar$Tab r0;

        r0 := @this: android.support.v7.app.ActionBar$Tab;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.v7.app.ActionBar$Tab: int getPosition()>
<android.support.v7.app.ActionBar$Tab: android.graphics.drawable.Drawable getIcon()>
<android.support.v7.app.ActionBar$Tab: java.lang.CharSequence getText()>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setIcon(int)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setText(int)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setCustomView(android.view.View)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setCustomView(int)>
<android.support.v7.app.ActionBar$Tab: android.view.View getCustomView()>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setTag(java.lang.Object)>
<android.support.v7.app.ActionBar$Tab: java.lang.Object getTag()>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener)>
<android.support.v7.app.ActionBar$Tab: void select()>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setContentDescription(int)>
<android.support.v7.app.ActionBar$Tab: android.support.v7.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>
<android.support.v7.app.ActionBar$Tab: java.lang.CharSequence getContentDescription()>
android.support.v7.app.ActionBar$TabListener
<android.support.v7.app.ActionBar$TabListener: void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<android.support.v7.app.ActionBar$TabListener: void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<android.support.v7.app.ActionBar$TabListener: void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
