android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams
<android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: java.io.OutputStream NULL_OUTPUT_STREAM>
    static byte[] createBuffer()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8192];

        return $r0;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        byte[] r2;
        int i0;
        long $l1, l2;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] createBuffer()>();

        l2 = 0L;

     label1:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2);

        if i0 != -1 goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i0);

        $l1 = (long) i0;

        l2 = l2 + $l1;

        goto label1;

     label3:
        return l2;
    }

    private static byte[] toByteArrayInternal(java.io.InputStream, java.util.Deque, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.util.Deque r1;
        byte[] r2, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.lang.OutOfMemoryError $r3;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.util.Deque;

        i7 := @parameter2: int;

        i8 = 8192;

     label1:
        if i7 >= 2147483639 goto label5;

        $i2 = 2147483639 - i7;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i2);

        r2 = newarray (byte)[$i3];

        interfaceinvoke r1.<java.util.Deque: boolean add(java.lang.Object)>(r2);

        i9 = 0;

     label2:
        $i4 = lengthof r2;

        if i9 >= $i4 goto label4;

        $i5 = lengthof r2;

        $i6 = $i5 - i9;

        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i9, $i6);

        if i0 != -1 goto label3;

        $r5 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] combineBuffers(java.util.Deque,int)>(r1, i7);

        return $r5;

     label3:
        i9 = i9 + i0;

        i7 = i7 + i0;

        goto label2;

     label4:
        i8 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.math.IntMath: int saturatedMultiply(int,int)>(i8, 2);

        goto label1;

     label5:
        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i1 != -1 goto label6;

        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] combineBuffers(java.util.Deque,int)>(r1, 2147483639);

        return $r4;

     label6:
        $r3 = new java.lang.OutOfMemoryError;

        specialinvoke $r3.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("input is too large to fit in a byte array");

        throw $r3;
    }

    private static byte[] combineBuffers(java.util.Deque, int)
    {
        java.util.Deque r0;
        int i0, i1, i2, $i3, i4;
        byte[] r1, r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.Deque;

        i0 := @parameter1: int;

        r1 = newarray (byte)[i0];

        i4 = i0;

     label1:
        if i4 <= 0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Deque: java.lang.Object removeFirst()>();

        r2 = (byte[]) $r3;

        $i3 = lengthof r2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i3);

        i2 = i0 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i2, i1);

        i4 = i4 - i1;

        goto label1;

     label2:
        return r1;
    }

    public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.util.ArrayDeque $r2;
        byte[] $r3;

        r0 := @parameter0: java.io.InputStream;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>(int)>(20);

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: byte[] toByteArrayInternal(java.io.InputStream,java.util.Deque,int)>(r0, $r2, 0);

        return $r3;
    }

    static void <clinit>()
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1: void <init>()>();

        <android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams: java.io.OutputStream NULL_OUTPUT_STREAM> = $r0;

        return;
    }

android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1
    void <init>()
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int)
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        i0 := @parameter0: int;

        return;
    }

    public void write(byte[])
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        byte[] r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        r1 := @parameter0: byte[];

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return;
    }

    public void write(byte[], int, int)
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1 r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.io.ByteStreams$1;

        return "ByteStreams.nullOutputStream()";
    }

