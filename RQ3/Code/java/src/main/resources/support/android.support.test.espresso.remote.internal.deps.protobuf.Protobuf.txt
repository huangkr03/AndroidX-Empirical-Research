android.support.test.espresso.remote.internal.deps.protobuf.Protobuf
<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf INSTANCE>
<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory schemaFactory>
<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: java.util.concurrent.ConcurrentMap schemaCache>
    public static android.support.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r0;

        $r0 = <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf INSTANCE>;

        return $r0;
    }

    public void mergeFrom(java.lang.Object, android.support.test.espresso.remote.internal.deps.protobuf.Reader, android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf r0;
        java.lang.Object r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Reader r2;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r3;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Reader;

        r3 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r4 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Object)>(r1);

        interfaceinvoke $r4.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void mergeFrom(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Reader,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2, r3);

        return;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf r0;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2, r7;
        java.util.concurrent.ConcurrentMap $r4;
        java.lang.Object $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory $r6;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "messageType");

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: java.util.concurrent.ConcurrentMap schemaCache>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (android.support.test.espresso.remote.internal.deps.protobuf.Schema) $r5;

        if r7 != null goto label1;

        $r6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory schemaFactory>;

        r7 = interfaceinvoke $r6.<android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.Schema createSchema(java.lang.Class)>(r1);

        r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema registerSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r1, r7);

        if r2 == null goto label1;

        r7 = r2;

     label1:
        return r7;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Object)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>($r2);

        return $r3;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.Schema registerSchema(java.lang.Class, android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf r0;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2, $r7;
        java.util.concurrent.ConcurrentMap $r5;
        java.lang.Object $r6;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "messageType");

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r2, "schema");

        $r5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: java.util.concurrent.ConcurrentMap schemaCache>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r2);

        $r7 = (android.support.test.espresso.remote.internal.deps.protobuf.Schema) $r6;

        return $r7;
    }

    private void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf r0;
        java.lang.String[] r1, $r4;
        int i0, i1;
        java.lang.String r2;
        android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory r6;
        java.util.concurrent.ConcurrentHashMap r7;
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory r8;
        java.util.concurrent.ConcurrentMap r9;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r7 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r7.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r9 = (java.util.concurrent.ConcurrentMap) r7;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: java.util.concurrent.ConcurrentMap schemaCache> = r9;

        r6 = null;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "android.support.test.espresso.remote.internal.deps.protobuf.AndroidProto3SchemaFactory";

        r1 = $r4;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory newSchemaFactory(java.lang.String)>(r2);

        if r6 == null goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r6 != null goto label4;

        r8 = new android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory;

        specialinvoke r8.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: void <init>()>();

        r6 = r8;

     label4:
        r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory schemaFactory> = r6;

        return;
    }

    private static android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory newSchemaFactory(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Throwable r1, $r8;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory $r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = (android.support.test.espresso.remote.internal.deps.protobuf.SchemaFactory) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.Protobuf $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.Protobuf;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: void <init>()>();

        <android.support.test.espresso.remote.internal.deps.protobuf.Protobuf: android.support.test.espresso.remote.internal.deps.protobuf.Protobuf INSTANCE> = $r0;

        return;
    }

