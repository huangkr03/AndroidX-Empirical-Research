android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture
<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>
<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>
    static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction r1;
        java.util.concurrent.Executor r2, $r6;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r3, $r5;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = new android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        specialinvoke $r5.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction)>(r0, r1);

        r3 = $r5;

        $r6 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractFuture)>(r2, r3);

        interfaceinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r3, $r6);

        return r3;
    }

    static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0;
        android.support.test.espresso.web.internal.deps.guava.base.Function r1;
        java.util.concurrent.Executor r2, $r6;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r3, $r5;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.support.test.espresso.web.internal.deps.guava.base.Function;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = new android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        specialinvoke $r5.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.web.internal.deps.guava.base.Function)>(r0, r1);

        r3 = $r5;

        $r6 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractFuture)>(r2, r3);

        interfaceinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r3, $r6);

        return r3;
    }

    void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1, $r4;
        java.lang.Object r2, $r3, $r5;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>();

        $r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture) $r3;

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = $r5;

        return;
    }

    public final void run()
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1;
        java.lang.Object r2, r3, r18;
        java.lang.Throwable r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r14, r15, r16, r17, r19, r20;
        boolean $z0, $z1, $z2, $z9, $z10;
        java.util.concurrent.ExecutionException r21;
        java.lang.reflect.UndeclaredThrowableException r22;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r1 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        r2 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>;

        $z0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean isCancelled()>();

        if r1 != null goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        $z1 = $z0 | $z9;

        if r2 != null goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        $z2 = $z1 | $z10;

        if $z2 == 0 goto label05;

        return;

     label05:
        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = null;

     label06:
        r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r1);

     label07:
        goto label12;

     label08:
        $r11 := @caughtexception;

        r14 = $r11;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean cancel(boolean)>(0);

        return;

     label09:
        $r12 := @caughtexception;

        r15 = $r12;

        r21 = (java.util.concurrent.ExecutionException) r15;

        $r13 = virtualinvoke r21.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>($r13);

        return;

     label10:
        $r10 := @caughtexception;

        r16 = $r10;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r16);

        return;

     label11:
        $r6 := @caughtexception;

        r17 = $r6;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r17);

        return;

     label12:
        r18 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>(r2, r3);

     label13:
        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        goto label20;

     label14:
        $r8 := @caughtexception;

        r19 = $r8;

        r22 = (java.lang.reflect.UndeclaredThrowableException) r19;

        $r9 = virtualinvoke r22.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()>();

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>($r9);

     label15:
        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        return;

     label16:
        $r5 := @caughtexception;

        r20 = $r5;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r20);

     label17:
        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        return;

     label18:
        $r7 := @caughtexception;

        r4 = $r7;

     label19:
        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        throw r4;

     label20:
        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: void setResult(java.lang.Object)>(r18);

        return;

        catch java.util.concurrent.CancellationException from label06 to label07 with label08;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label10;
        catch java.lang.Error from label06 to label07 with label11;
        catch java.lang.reflect.UndeclaredThrowableException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>
<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: void setResult(java.lang.Object)>
    protected final void afterDone()
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        $r1 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>($r1);

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = null;

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        return;
    }

    protected java.lang.String pendingToString()
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1;
        java.lang.Object r2;
        java.lang.String r3, r4, $r5, $r6, $r7, $r8, $r14, $r15, r20, r21, r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r1 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        r2 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>;

        r3 = specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture: java.lang.String pendingToString()>();

        r20 = "";

        if r1 == null goto label1;

        r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21);

        $i5 = virtualinvoke $r15.<java.lang.String: int length()>();

        $i6 = 16 + $i5;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>($i6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inputFuture=[");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if r2 == null goto label2;

        r22 = r20;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r22);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = 11 + $i1;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("function=[");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label2:
        if r3 == null goto label5;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r20);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r23 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>($r6);

        goto label4;

     label3:
        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(java.lang.String)>($r5);

     label4:
        return $r23;

     label5:
        return null;
    }

android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture
    void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Object)>(r1, r2);

        return;
    }

    android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture doTransform(android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction, java.lang.Object) throws java.lang.Exception
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction r1;
        java.lang.Object r2;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction;

        r2 := @parameter1: java.lang.Object;

        r3 = interfaceinvoke r1.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture apply(java.lang.Object)>(r2);

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "AsyncFunction.apply returned null instead of a Future. Did you mean to return immediateFuture(null)?");

        return r3;
    }

    void setResult(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: boolean setFuture(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture)>(r1);

        return;
    }

    volatile void setResult(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        java.lang.Object r1;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture) r1;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: void setResult(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture)>($r2);

        return;
    }

    volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        java.lang.Object r1, r2;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction $r3;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture $r4;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction) r1;

        $r4 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture doTransform(android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction,java.lang.Object)>($r3, r2);

        return $r4;
    }

android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture
    void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.base.Function)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r1;
        android.support.test.espresso.web.internal.deps.guava.base.Function r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: android.support.test.espresso.web.internal.deps.guava.base.Function;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: void <init>(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Object)>(r1, r2);

        return;
    }

    java.lang.Object doTransform(android.support.test.espresso.web.internal.deps.guava.base.Function, java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        android.support.test.espresso.web.internal.deps.guava.base.Function r1;
        java.lang.Object r2, $r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: android.support.test.espresso.web.internal.deps.guava.base.Function;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r1.<android.support.test.espresso.web.internal.deps.guava.base.Function: java.lang.Object apply(java.lang.Object)>(r2);

        return $r3;
    }

    void setResult(java.lang.Object)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        java.lang.Object r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: boolean set(java.lang.Object)>(r1);

        return;
    }

    volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        java.lang.Object r1, r2, $r4;
        android.support.test.espresso.web.internal.deps.guava.base.Function $r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.support.test.espresso.web.internal.deps.guava.base.Function) r1;

        $r4 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(android.support.test.espresso.web.internal.deps.guava.base.Function,java.lang.Object)>($r3, r2);

        return $r4;
    }

