android.support.test.uiautomator.UiSelector
<android.support.test.uiautomator.UiSelector: int SELECTOR_NIL>
<android.support.test.uiautomator.UiSelector: int SELECTOR_TEXT>
<android.support.test.uiautomator.UiSelector: int SELECTOR_START_TEXT>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CONTAINS_TEXT>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CLASS>
<android.support.test.uiautomator.UiSelector: int SELECTOR_DESCRIPTION>
<android.support.test.uiautomator.UiSelector: int SELECTOR_START_DESCRIPTION>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CONTAINS_DESCRIPTION>
<android.support.test.uiautomator.UiSelector: int SELECTOR_INDEX>
<android.support.test.uiautomator.UiSelector: int SELECTOR_INSTANCE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_ENABLED>
<android.support.test.uiautomator.UiSelector: int SELECTOR_FOCUSED>
<android.support.test.uiautomator.UiSelector: int SELECTOR_FOCUSABLE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_SCROLLABLE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CLICKABLE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CHECKED>
<android.support.test.uiautomator.UiSelector: int SELECTOR_SELECTED>
<android.support.test.uiautomator.UiSelector: int SELECTOR_ID>
<android.support.test.uiautomator.UiSelector: int SELECTOR_PACKAGE_NAME>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CHILD>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CONTAINER>
<android.support.test.uiautomator.UiSelector: int SELECTOR_PATTERN>
<android.support.test.uiautomator.UiSelector: int SELECTOR_PARENT>
<android.support.test.uiautomator.UiSelector: int SELECTOR_COUNT>
<android.support.test.uiautomator.UiSelector: int SELECTOR_LONG_CLICKABLE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_TEXT_REGEX>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CLASS_REGEX>
<android.support.test.uiautomator.UiSelector: int SELECTOR_DESCRIPTION_REGEX>
<android.support.test.uiautomator.UiSelector: int SELECTOR_PACKAGE_NAME_REGEX>
<android.support.test.uiautomator.UiSelector: int SELECTOR_RESOURCE_ID>
<android.support.test.uiautomator.UiSelector: int SELECTOR_CHECKABLE>
<android.support.test.uiautomator.UiSelector: int SELECTOR_RESOURCE_ID_REGEX>
<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>
    public void <init>()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes> = $r1;

        return;
    }

    void <init>(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r3;
        android.util.SparseArray $r2, $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.support.test.uiautomator.UiSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes> = $r2;

        $r3 = virtualinvoke r1.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector cloneSelector()>();

        $r4 = $r3.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes> = $r4;

        return;
    }

    protected android.support.test.uiautomator.UiSelector cloneSelector()
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2, $r5, $r7, $r8, $r10, $r11, $r13;
        android.util.SparseArray $r3, $r4, $r6, $r9, $r12;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r2 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r2.<android.support.test.uiautomator.UiSelector: void <init>()>();

        r1 = $r2;

        $r3 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: android.util.SparseArray clone()>();

        r1.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes> = $r4;

        $z0 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean hasChildSelector()>();

        if $z0 == 0 goto label1;

        $r12 = r1.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r11 = new android.support.test.uiautomator.UiSelector;

        $r13 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getChildSelector()>();

        specialinvoke $r11.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>($r13);

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(19, $r11);

     label1:
        $z1 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean hasParentSelector()>();

        if $z1 == 0 goto label2;

        $r9 = r1.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r8 = new android.support.test.uiautomator.UiSelector;

        $r10 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getParentSelector()>();

        specialinvoke $r8.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>($r10);

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(22, $r8);

     label2:
        $z2 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean hasPatternSelector()>();

        if $z2 == 0 goto label3;

        $r6 = r1.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r5 = new android.support.test.uiautomator.UiSelector;

        $r7 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getPatternSelector()>();

        specialinvoke $r5.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>($r7);

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(21, $r5);

     label3:
        return r1;
    }

    static android.support.test.uiautomator.UiSelector patternBuilder(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.support.test.uiautomator.UiSelector;

        $z0 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean hasPatternSelector()>();

        if $z0 != 0 goto label1;

        $r1 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r1.<android.support.test.uiautomator.UiSelector: void <init>()>();

        $r2 = specialinvoke $r1.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector patternSelector(android.support.test.uiautomator.UiSelector)>(r0);

        return $r2;

     label1:
        return r0;
    }

    static android.support.test.uiautomator.UiSelector patternBuilder(android.support.test.uiautomator.UiSelector, android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2, $r3, $r4, $r5;

        r0 := @parameter0: android.support.test.uiautomator.UiSelector;

        r1 := @parameter1: android.support.test.uiautomator.UiSelector;

        $r2 = new android.support.test.uiautomator.UiSelector;

        $r3 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r3.<android.support.test.uiautomator.UiSelector: void <init>()>();

        $r4 = specialinvoke $r3.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector containerSelector(android.support.test.uiautomator.UiSelector)>(r0);

        $r5 = specialinvoke $r4.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector patternSelector(android.support.test.uiautomator.UiSelector)>(r1);

        specialinvoke $r2.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>($r5);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector text(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(1, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector textMatches(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regex cannot be null");

        throw $r4;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(25, $r2);

        return $r3;
    }

    public android.support.test.uiautomator.UiSelector textStartsWith(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(2, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector textContains(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(3, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector className(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("className cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(4, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector classNameMatches(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regex cannot be null");

        throw $r4;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(26, $r2);

        return $r3;
    }

    public android.support.test.uiautomator.UiSelector className(java.lang.Class)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.Class r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.Class;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type cannot be null");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(4, $r2);

        return $r3;
    }

    public android.support.test.uiautomator.UiSelector description(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("desc cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(5, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector descriptionMatches(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regex cannot be null");

        throw $r4;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(27, $r2);

        return $r3;
    }

    public android.support.test.uiautomator.UiSelector descriptionStartsWith(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("desc cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(6, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector descriptionContains(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("desc cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(7, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector resourceId(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(29, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector resourceIdMatches(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regex cannot be null");

        throw $r4;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(31, $r2);

        return $r3;
    }

    public android.support.test.uiautomator.UiSelector index(int)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        int i0;
        java.lang.Integer $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(8, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector instance(int)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        int i0;
        java.lang.Integer $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(9, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector enabled(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(10, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector focused(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(11, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector focusable(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(12, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector scrollable(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(13, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector selected(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(16, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector checked(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(15, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector clickable(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(14, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector checkable(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(30, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector longClickable(boolean)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(24, $r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector childSelector(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.support.test.uiautomator.UiSelector;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selector cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(19, r1);

        return $r2;
    }

    private android.support.test.uiautomator.UiSelector patternSelector(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.support.test.uiautomator.UiSelector;

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(21, r1);

        return $r2;
    }

    private android.support.test.uiautomator.UiSelector containerSelector(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.support.test.uiautomator.UiSelector;

        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(20, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector fromParent(android.support.test.uiautomator.UiSelector)
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.support.test.uiautomator.UiSelector;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selector cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(22, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector packageName(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r2;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name cannot be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(18, r1);

        return $r2;
    }

    public android.support.test.uiautomator.UiSelector packageNameMatches(java.lang.String)
    {
        android.support.test.uiautomator.UiSelector r0, $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regex cannot be null");

        throw $r4;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector buildSelector(int,java.lang.Object)>(28, $r2);

        return $r3;
    }

    private android.support.test.uiautomator.UiSelector buildSelector(int, java.lang.Object)
    {
        android.support.test.uiautomator.UiSelector r0, r2, $r3, $r4;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r5, $r6;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r3.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>(r0);

        r2 = $r3;

        if i0 == 19 goto label1;

        if i0 != 22 goto label2;

     label1:
        $r4 = specialinvoke r2.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getLastSubSelector()>();

        $r5 = $r4.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        goto label3;

     label2:
        $r6 = r2.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label3:
        return r2;
    }

    android.support.test.uiautomator.UiSelector getChildSelector()
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r4;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(19, null);

        r1 = (android.support.test.uiautomator.UiSelector) $r3;

        if r1 == null goto label1;

        $r4 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r4.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>(r1);

        return $r4;

     label1:
        return null;
    }

    android.support.test.uiautomator.UiSelector getPatternSelector()
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r4;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(21, null);

        r1 = (android.support.test.uiautomator.UiSelector) $r3;

        if r1 == null goto label1;

        $r4 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r4.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>(r1);

        return $r4;

     label1:
        return null;
    }

    android.support.test.uiautomator.UiSelector getContainerSelector()
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r4;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(20, null);

        r1 = (android.support.test.uiautomator.UiSelector) $r3;

        if r1 == null goto label1;

        $r4 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r4.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>(r1);

        return $r4;

     label1:
        return null;
    }

    android.support.test.uiautomator.UiSelector getParentSelector()
    {
        android.support.test.uiautomator.UiSelector r0, r1, $r4;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(22, null);

        r1 = (android.support.test.uiautomator.UiSelector) $r3;

        if r1 == null goto label1;

        $r4 = new android.support.test.uiautomator.UiSelector;

        specialinvoke $r4.<android.support.test.uiautomator.UiSelector: void <init>(android.support.test.uiautomator.UiSelector)>(r1);

        return $r4;

     label1:
        return null;
    }

    int getInstance()
    {
        android.support.test.uiautomator.UiSelector r0;
        int $i0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $i0 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: int getInt(int)>(9);

        return $i0;
    }

    java.lang.String getString(int)
    {
        android.support.test.uiautomator.UiSelector r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, null);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    boolean getBoolean(int)
    {
        android.support.test.uiautomator.UiSelector r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, $r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    int getInt(int)
    {
        android.support.test.uiautomator.UiSelector r0;
        int i0, $i1;
        android.util.SparseArray $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    java.util.regex.Pattern getPattern(int)
    {
        android.support.test.uiautomator.UiSelector r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.util.regex.Pattern $r3;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, null);

        $r3 = (java.util.regex.Pattern) $r2;

        return $r3;
    }

    boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo, int)
    {
        android.support.test.uiautomator.UiSelector r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, i1, i2, $i3, i4;
        android.util.SparseArray $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        java.util.regex.Pattern $r4, $r8, $r10, $r12, $r14;
        java.util.regex.Matcher $r5, $r9, $r11, $r13, $r15;
        java.lang.String $r6, $r7, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, r52, r53;
        java.lang.CharSequence r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i4 = 0;

     label01:
        if i4 >= i1 goto label42;

        $r3 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        i2 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i4);

        tableswitch(i2)
        {
            case 1: goto label23;
            case 2: goto label21;
            case 3: goto label19;
            case 4: goto label04;
            case 5: goto label15;
            case 6: goto label13;
            case 7: goto label11;
            case 8: goto label02;
            case 9: goto label41;
            case 10: goto label27;
            case 11: goto label29;
            case 12: goto label28;
            case 13: goto label35;
            case 14: goto label08;
            case 15: goto label03;
            case 16: goto label36;
            case 17: goto label30;
            case 18: goto label31;
            case 19: goto label41;
            case 20: goto label41;
            case 21: goto label41;
            case 22: goto label41;
            case 23: goto label41;
            case 24: goto label10;
            case 25: goto label25;
            case 26: goto label06;
            case 27: goto label17;
            case 28: goto label33;
            case 29: goto label37;
            case 30: goto label09;
            case 31: goto label39;
            default: goto label41;
        };

     label02:
        $i3 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: int getInt(int)>(i2);

        if i0 == $i3 goto label41;

        return 0;

     label03:
        $z14 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        $z15 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z14 == $z15 goto label41;

        return 0;

     label04:
        r40 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>();

        if r40 == null goto label05;

        $r28 = interfaceinvoke r40.<java.lang.CharSequence: java.lang.String toString()>();

        $r29 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $z29 = virtualinvoke $r28.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r29);

        if $z29 != 0 goto label41;

     label05:
        return 0;

     label06:
        r41 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>();

        if r41 == null goto label07;

        $r12 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.util.regex.Pattern getPattern(int)>(i2);

        $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r41);

        $z7 = virtualinvoke $r13.<java.util.regex.Matcher: boolean matches()>();

        if $z7 != 0 goto label41;

     label07:
        return 0;

     label08:
        $z16 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        $z17 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z16 == $z17 goto label41;

        return 0;

     label09:
        $z2 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        $z3 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z2 == $z3 goto label41;

        return 0;

     label10:
        $z9 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        $z10 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z9 == $z10 goto label41;

        return 0;

     label11:
        r42 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        if r42 == null goto label12;

        $r18 = interfaceinvoke r42.<java.lang.CharSequence: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase()>();

        $r20 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>();

        $z26 = virtualinvoke $r19.<java.lang.String: boolean contains(java.lang.CharSequence)>($r21);

        if $z26 != 0 goto label41;

     label12:
        return 0;

     label13:
        r43 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        if r43 == null goto label14;

        $r22 = interfaceinvoke r43.<java.lang.CharSequence: java.lang.String toString()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String toLowerCase()>();

        $r24 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String toLowerCase()>();

        $z27 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>($r25);

        if $z27 != 0 goto label41;

     label14:
        return 0;

     label15:
        r44 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        if r44 == null goto label16;

        $r26 = interfaceinvoke r44.<java.lang.CharSequence: java.lang.String toString()>();

        $r27 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $z28 = virtualinvoke $r26.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r27);

        if $z28 != 0 goto label41;

     label16:
        return 0;

     label17:
        r45 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        if r45 == null goto label18;

        $r10 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.util.regex.Pattern getPattern(int)>(i2);

        $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r45);

        $z6 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>();

        if $z6 != 0 goto label41;

     label18:
        return 0;

     label19:
        r46 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        if r46 == null goto label20;

        $r30 = interfaceinvoke r46.<java.lang.CharSequence: java.lang.String toString()>();

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String toLowerCase()>();

        $r32 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String toLowerCase()>();

        $z30 = virtualinvoke $r31.<java.lang.String: boolean contains(java.lang.CharSequence)>($r33);

        if $z30 != 0 goto label41;

     label20:
        return 0;

     label21:
        r47 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        if r47 == null goto label22;

        $r34 = interfaceinvoke r47.<java.lang.CharSequence: java.lang.String toString()>();

        $r35 = virtualinvoke $r34.<java.lang.String: java.lang.String toLowerCase()>();

        $r36 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String toLowerCase()>();

        $z31 = virtualinvoke $r35.<java.lang.String: boolean startsWith(java.lang.String)>($r37);

        if $z31 != 0 goto label41;

     label22:
        return 0;

     label23:
        r48 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        if r48 == null goto label24;

        $r38 = interfaceinvoke r48.<java.lang.CharSequence: java.lang.String toString()>();

        $r39 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $z32 = virtualinvoke $r38.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r39);

        if $z32 != 0 goto label41;

     label24:
        return 0;

     label25:
        r49 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        if r49 == null goto label26;

        $r14 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.util.regex.Pattern getPattern(int)>(i2);

        $r15 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r49);

        $z8 = virtualinvoke $r15.<java.util.regex.Matcher: boolean matches()>();

        if $z8 != 0 goto label41;

     label26:
        return 0;

     label27:
        $z24 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        $z25 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z24 == $z25 goto label41;

        return 0;

     label28:
        $z20 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        $z21 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z20 == $z21 goto label41;

        return 0;

     label29:
        $z22 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        $z23 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z22 == $z23 goto label41;

        return 0;

     label30:
        goto label41;

     label31:
        r50 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        if r50 == null goto label32;

        $r16 = interfaceinvoke r50.<java.lang.CharSequence: java.lang.String toString()>();

        $r17 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $z11 = virtualinvoke $r16.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r17);

        if $z11 != 0 goto label41;

     label32:
        return 0;

     label33:
        r51 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        if r51 == null goto label34;

        $r8 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.util.regex.Pattern getPattern(int)>(i2);

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r51);

        $z5 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>();

        if $z5 != 0 goto label41;

     label34:
        return 0;

     label35:
        $z18 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        $z19 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z18 == $z19 goto label41;

        return 0;

     label36:
        $z12 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        $z13 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: boolean getBoolean(int)>(i2);

        if $z12 == $z13 goto label41;

        return 0;

     label37:
        r52 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>();

        if r52 == null goto label38;

        $r6 = interfaceinvoke r52.<java.lang.CharSequence: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String getString(int)>(i2);

        $z4 = virtualinvoke $r6.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r7);

        if $z4 != 0 goto label41;

     label38:
        return 0;

     label39:
        r53 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>();

        if r53 == null goto label40;

        $r4 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.util.regex.Pattern getPattern(int)>(i2);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r53);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label41;

     label40:
        return 0;

     label41:
        i4 = i4 + 1;

        goto label01;

     label42:
        $z0 = specialinvoke r0.<android.support.test.uiautomator.UiSelector: boolean matchOrUpdateInstance()>();

        return $z0;
    }

    private boolean matchOrUpdateInstance()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1, $r2, $r3, $r5, $r8;
        int $i0, $i1, i2, i3, i4;
        java.lang.Integer $r4, $r7, $r10;
        java.lang.Object $r6, $r9;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        i2 = 0;

        i3 = 0;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(9);

        if $i0 < 0 goto label1;

        $r8 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(9);

        $r10 = (java.lang.Integer) $r9;

        i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

     label1:
        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(23);

        if $i1 < 0 goto label2;

        $r5 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(23);

        $r7 = (java.lang.Integer) $r6;

        i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label2:
        if i3 != i2 goto label3;

        return 1;

     label3:
        if i3 <= i2 goto label4;

        $r3 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        i4 = i2 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(23, $r4);

     label4:
        return 0;
    }

    boolean isLeaf()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(19);

        if $i0 >= 0 goto label1;

        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(22);

        if $i1 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean hasChildSelector()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1;
        int $i0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(19);

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean hasPatternSelector()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1;
        int $i0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(21);

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean hasContainerSelector()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1;
        int $i0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(20);

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean hasParentSelector()
    {
        android.support.test.uiautomator.UiSelector r0;
        android.util.SparseArray $r1;
        int $i0;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(22);

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private android.support.test.uiautomator.UiSelector getLastSubSelector()
    {
        android.support.test.uiautomator.UiSelector r0, $r5, $r6, $r9, $r10, r11, r12;
        android.util.SparseArray $r1, $r2, $r3, $r7;
        int $i0, $i1;
        java.lang.Object $r4, $r8;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(19);

        if $i0 < 0 goto label2;

        $r7 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(19);

        r11 = (android.support.test.uiautomator.UiSelector) $r8;

        $r9 = specialinvoke r11.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getLastSubSelector()>();

        if $r9 != null goto label1;

        return r11;

     label1:
        $r10 = specialinvoke r11.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getLastSubSelector()>();

        return $r10;

     label2:
        $r2 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(22);

        if $i1 < 0 goto label4;

        $r3 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(22);

        r12 = (android.support.test.uiautomator.UiSelector) $r4;

        $r5 = specialinvoke r12.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getLastSubSelector()>();

        if $r5 != null goto label3;

        return r12;

     label3:
        $r6 = specialinvoke r12.<android.support.test.uiautomator.UiSelector: android.support.test.uiautomator.UiSelector getLastSubSelector()>();

        return $r6;

     label4:
        return r0;
    }

    public java.lang.String toString()
    {
        android.support.test.uiautomator.UiSelector r0;
        java.lang.String $r1;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        $r1 = virtualinvoke r0.<android.support.test.uiautomator.UiSelector: java.lang.String dumpToString(boolean)>(1);

        return $r1;
    }

    java.lang.String dumpToString(boolean)
    {
        android.support.test.uiautomator.UiSelector r0;
        boolean z0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42, $r46, $r51, $r56, $r61, $r66, $r70, $r74, $r78, $r82, $r86, $r90, $r94, $r98, $r102, $r106, $r110, $r114, $r118, $r122, $r126, $r130, $r134, $r138, $r142, $r143, $r144, $r145, $r147;
        int i0, i1, i2;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r12, $r146;
        android.util.SparseArray $r10, $r13, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43, $r47, $r52, $r57, $r62, $r67, $r71, $r75, $r79, $r83, $r87, $r91, $r95, $r99, $r103, $r107, $r111, $r115, $r119, $r123, $r127, $r131, $r135, $r139, $r148;
        java.lang.Object $r16, $r20, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r53, $r58, $r63, $r68, $r72, $r76, $r80, $r84, $r88, $r92, $r96, $r100, $r104, $r108, $r112, $r116, $r120, $r124, $r128, $r132, $r136, $r140, $r149;

        r0 := @this: android.support.test.uiautomator.UiSelector;

        z0 := @parameter0: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = class "Landroid/support/test/uiautomator/UiSelector;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        i0 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        i2 = 0;

     label01:
        if i2 >= i0 goto label40;

        if i2 <= 0 goto label02;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label02:
        $r13 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        i1 = virtualinvoke $r13.<android.util.SparseArray: int keyAt(int)>(i2);

        tableswitch(i1)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label14;
            case 10: goto label15;
            case 11: goto label16;
            case 12: goto label17;
            case 13: goto label18;
            case 14: goto label19;
            case 15: goto label22;
            case 16: goto label23;
            case 17: goto label24;
            case 18: goto label34;
            case 19: goto label25;
            case 20: goto label29;
            case 21: goto label27;
            case 22: goto label31;
            case 23: goto label33;
            case 24: goto label21;
            case 25: goto label04;
            case 26: goto label08;
            case 27: goto label10;
            case 28: goto label35;
            case 29: goto label36;
            case 30: goto label20;
            case 31: goto label37;
            default: goto label38;
        };

     label03:
        $r138 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TEXT=");

        $r139 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r140 = virtualinvoke $r139.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r140);

        goto label39;

     label04:
        $r38 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TEXT_REGEX=");

        $r39 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r40 = virtualinvoke $r39.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        goto label39;

     label05:
        $r134 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START_TEXT=");

        $r135 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r136 = virtualinvoke $r135.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r136);

        goto label39;

     label06:
        $r130 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONTAINS_TEXT=");

        $r131 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r132 = virtualinvoke $r131.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132);

        goto label39;

     label07:
        $r126 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CLASS=");

        $r127 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r128 = virtualinvoke $r127.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r128);

        goto label39;

     label08:
        $r34 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CLASS_REGEX=");

        $r35 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r36 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        goto label39;

     label09:
        $r122 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DESCRIPTION=");

        $r123 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r124 = virtualinvoke $r123.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r124);

        goto label39;

     label10:
        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DESCRIPTION_REGEX=");

        $r31 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r32 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        goto label39;

     label11:
        $r118 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START_DESCRIPTION=");

        $r119 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r120 = virtualinvoke $r119.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r120);

        goto label39;

     label12:
        $r114 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONTAINS_DESCRIPTION=");

        $r115 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r116 = virtualinvoke $r115.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r116);

        goto label39;

     label13:
        $r110 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INDEX=");

        $r111 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r112 = virtualinvoke $r111.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r112);

        goto label39;

     label14:
        $r106 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTANCE=");

        $r107 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r108 = virtualinvoke $r107.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r108);

        goto label39;

     label15:
        $r102 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENABLED=");

        $r103 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r104 = virtualinvoke $r103.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r104);

        goto label39;

     label16:
        $r98 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOCUSED=");

        $r99 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r100 = virtualinvoke $r99.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r100);

        goto label39;

     label17:
        $r94 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOCUSABLE=");

        $r95 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r96 = virtualinvoke $r95.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r96);

        goto label39;

     label18:
        $r90 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCROLLABLE=");

        $r91 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r92 = virtualinvoke $r91.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r92);

        goto label39;

     label19:
        $r86 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CLICKABLE=");

        $r87 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r88 = virtualinvoke $r87.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        goto label39;

     label20:
        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHECKABLE=");

        $r19 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        goto label39;

     label21:
        $r42 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LONG_CLICKABLE=");

        $r43 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r44 = virtualinvoke $r43.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        goto label39;

     label22:
        $r82 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHECKED=");

        $r83 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r84 = virtualinvoke $r83.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84);

        goto label39;

     label23:
        $r78 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECTED=");

        $r79 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r80 = virtualinvoke $r79.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        goto label39;

     label24:
        $r74 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ID=");

        $r75 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r76 = virtualinvoke $r75.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r76);

        goto label39;

     label25:
        if z0 == 0 goto label26;

        $r66 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHILD=");

        $r67 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r68 = virtualinvoke $r67.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);

        goto label39;

     label26:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHILD[..]");

        goto label39;

     label27:
        if z0 == 0 goto label28;

        $r56 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PATTERN=");

        $r57 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r58 = virtualinvoke $r57.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        goto label39;

     label28:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PATTERN[..]");

        goto label39;

     label29:
        if z0 == 0 goto label30;

        $r61 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONTAINER=");

        $r62 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r63 = virtualinvoke $r62.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        goto label39;

     label30:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONTAINER[..]");

        goto label39;

     label31:
        if z0 == 0 goto label32;

        $r51 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARENT=");

        $r52 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r53 = virtualinvoke $r52.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        goto label39;

     label32:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARENT[..]");

        goto label39;

     label33:
        $r46 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COUNT=");

        $r47 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r48 = virtualinvoke $r47.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        goto label39;

     label34:
        $r70 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PACKAGE NAME=");

        $r71 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r72 = virtualinvoke $r71.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        goto label39;

     label35:
        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PACKAGE_NAME_REGEX=");

        $r27 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r28 = virtualinvoke $r27.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        goto label39;

     label36:
        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESOURCE_ID=");

        $r23 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r24 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        goto label39;

     label37:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESOURCE_ID_REGEX=");

        $r15 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        goto label39;

     label38:
        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNDEFINED=");

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        $r147 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r148 = r0.<android.support.test.uiautomator.UiSelector: android.util.SparseArray mSelectorAttributes>;

        $r149 = virtualinvoke $r148.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r149);

     label39:
        i2 = i2 + 1;

        goto label01;

     label40:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

