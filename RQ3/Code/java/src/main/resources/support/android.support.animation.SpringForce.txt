android.support.animation.SpringForce
<android.support.animation.SpringForce: float STIFFNESS_HIGH>
<android.support.animation.SpringForce: float STIFFNESS_MEDIUM>
<android.support.animation.SpringForce: float STIFFNESS_LOW>
<android.support.animation.SpringForce: float STIFFNESS_VERY_LOW>
<android.support.animation.SpringForce: float DAMPING_RATIO_HIGH_BOUNCY>
<android.support.animation.SpringForce: float DAMPING_RATIO_MEDIUM_BOUNCY>
<android.support.animation.SpringForce: float DAMPING_RATIO_LOW_BOUNCY>
<android.support.animation.SpringForce: float DAMPING_RATIO_NO_BOUNCY>
<android.support.animation.SpringForce: double VELOCITY_THRESHOLD_MULTIPLIER>
<android.support.animation.SpringForce: double mNaturalFreq>
<android.support.animation.SpringForce: double mDampingRatio>
<android.support.animation.SpringForce: double UNSET>
<android.support.animation.SpringForce: boolean mInitialized>
<android.support.animation.SpringForce: double mValueThreshold>
<android.support.animation.SpringForce: double mVelocityThreshold>
<android.support.animation.SpringForce: double mGammaPlus>
<android.support.animation.SpringForce: double mGammaMinus>
<android.support.animation.SpringForce: double mDampedFreq>
<android.support.animation.SpringForce: double mFinalPosition>
<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState>
    public void <init>()
    {
        android.support.animation.SpringForce r0;
        double $d0;
        android.support.animation.DynamicAnimation$MassState $r1;

        r0 := @this: android.support.animation.SpringForce;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(1500.0);

        r0.<android.support.animation.SpringForce: double mNaturalFreq> = $d0;

        r0.<android.support.animation.SpringForce: double mDampingRatio> = 0.5;

        r0.<android.support.animation.SpringForce: boolean mInitialized> = 0;

        r0.<android.support.animation.SpringForce: double mFinalPosition> = 1.7976931348623157E308;

        $r1 = new android.support.animation.DynamicAnimation$MassState;

        specialinvoke $r1.<android.support.animation.DynamicAnimation$MassState: void <init>()>();

        r0.<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState> = $r1;

        return;
    }

    public void <init>(float)
    {
        android.support.animation.SpringForce r0;
        float f0;
        double $d0, $d1;
        android.support.animation.DynamicAnimation$MassState $r1;

        r0 := @this: android.support.animation.SpringForce;

        f0 := @parameter0: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(1500.0);

        r0.<android.support.animation.SpringForce: double mNaturalFreq> = $d0;

        r0.<android.support.animation.SpringForce: double mDampingRatio> = 0.5;

        r0.<android.support.animation.SpringForce: boolean mInitialized> = 0;

        r0.<android.support.animation.SpringForce: double mFinalPosition> = 1.7976931348623157E308;

        $r1 = new android.support.animation.DynamicAnimation$MassState;

        specialinvoke $r1.<android.support.animation.DynamicAnimation$MassState: void <init>()>();

        r0.<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState> = $r1;

        $d1 = (double) f0;

        r0.<android.support.animation.SpringForce: double mFinalPosition> = $d1;

        return;
    }

    public android.support.animation.SpringForce setStiffness(float)
    {
        android.support.animation.SpringForce r0;
        float f0;
        byte $b0;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.animation.SpringForce;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Spring stiffness constant must be positive.");

        throw $r1;

     label1:
        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        r0.<android.support.animation.SpringForce: double mNaturalFreq> = $d1;

        r0.<android.support.animation.SpringForce: boolean mInitialized> = 0;

        return r0;
    }

    public float getStiffness()
    {
        android.support.animation.SpringForce r0;
        double $d0, $d1, $d2;
        float $f0;

        r0 := @this: android.support.animation.SpringForce;

        $d1 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d0 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d2 = $d1 * $d0;

        $f0 = (float) $d2;

        return $f0;
    }

    public android.support.animation.SpringForce setDampingRatio(float)
    {
        android.support.animation.SpringForce r0;
        float f0;
        byte $b0;
        double $d0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.animation.SpringForce;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Damping ratio must be non-negative");

        throw $r1;

     label1:
        $d0 = (double) f0;

        r0.<android.support.animation.SpringForce: double mDampingRatio> = $d0;

        r0.<android.support.animation.SpringForce: boolean mInitialized> = 0;

        return r0;
    }

    public float getDampingRatio()
    {
        android.support.animation.SpringForce r0;
        double $d0;
        float $f0;

        r0 := @this: android.support.animation.SpringForce;

        $d0 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $f0 = (float) $d0;

        return $f0;
    }

    public android.support.animation.SpringForce setFinalPosition(float)
    {
        android.support.animation.SpringForce r0;
        float f0;
        double $d0;

        r0 := @this: android.support.animation.SpringForce;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        r0.<android.support.animation.SpringForce: double mFinalPosition> = $d0;

        return r0;
    }

    public float getFinalPosition()
    {
        android.support.animation.SpringForce r0;
        double $d0;
        float $f0;

        r0 := @this: android.support.animation.SpringForce;

        $d0 = r0.<android.support.animation.SpringForce: double mFinalPosition>;

        $f0 = (float) $d0;

        return $f0;
    }

    public float getAcceleration(float, float)
    {
        android.support.animation.SpringForce r0;
        float f0, $f1, $f2, f3, f4;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;

        r0 := @this: android.support.animation.SpringForce;

        f3 := @parameter0: float;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.animation.SpringForce: float getFinalPosition()>();

        f4 = f3 - $f1;

        $d3 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d2 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        d0 = $d3 * $d2;

        $d4 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d6 = 2.0 * $d4;

        $d5 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        d1 = $d6 * $d5;

        $d8 = neg d0;

        $d7 = (double) f4;

        $d11 = $d8 * $d7;

        $d9 = (double) f0;

        $d10 = d1 * $d9;

        $d12 = $d11 - $d10;

        $f2 = (float) $d12;

        return $f2;
    }

    public boolean isAtEquilibrium(float, float)
    {
        android.support.animation.SpringForce r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;

        r0 := @this: android.support.animation.SpringForce;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $d1 = (double) $f2;

        $d0 = r0.<android.support.animation.SpringForce: double mVelocityThreshold>;

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label1;

        $f3 = virtualinvoke r0.<android.support.animation.SpringForce: float getFinalPosition()>();

        $f4 = f0 - $f3;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $d3 = (double) $f5;

        $d2 = r0.<android.support.animation.SpringForce: double mValueThreshold>;

        $b1 = $d3 cmpg $d2;

        if $b1 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void init()
    {
        android.support.animation.SpringForce r0;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34;
        byte $b0, $b1, $b2, $b3;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.support.animation.SpringForce;

        $z0 = r0.<android.support.animation.SpringForce: boolean mInitialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $d0 = r0.<android.support.animation.SpringForce: double mFinalPosition>;

        $b0 = $d0 cmpl 1.7976931348623157E308;

        if $b0 != 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error: Final position of the spring must be set before the animation starts");

        throw $r1;

     label2:
        $d1 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $b1 = $d1 cmpl 1.0;

        if $b1 <= 0 goto label3;

        $d11 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d13 = neg $d11;

        $d12 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d18 = $d13 * $d12;

        $d19 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d15 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d14 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d16 = $d15 * $d14;

        $d17 = $d16 - 1.0;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d17);

        $d21 = $d19 * $d20;

        $d22 = $d18 + $d21;

        r0.<android.support.animation.SpringForce: double mGammaPlus> = $d22;

        $d23 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d25 = neg $d23;

        $d24 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d30 = $d25 * $d24;

        $d31 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d27 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d26 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d28 = $d27 * $d26;

        $d29 = $d28 - 1.0;

        $d32 = staticinvoke <java.lang.Math: double sqrt(double)>($d29);

        $d33 = $d31 * $d32;

        $d34 = $d30 - $d33;

        r0.<android.support.animation.SpringForce: double mGammaMinus> = $d34;

        goto label4;

     label3:
        $d2 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $b2 = $d2 cmpl 0.0;

        if $b2 < 0 goto label4;

        $d3 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $b3 = $d3 cmpg 1.0;

        if $b3 >= 0 goto label4;

        $d8 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d5 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d4 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d6 = $d5 * $d4;

        $d7 = 1.0 - $d6;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $d10 = $d8 * $d9;

        r0.<android.support.animation.SpringForce: double mDampedFreq> = $d10;

     label4:
        r0.<android.support.animation.SpringForce: boolean mInitialized> = 1;

        return;
    }

    android.support.animation.DynamicAnimation$MassState updateValues(double, double, long)
    {
        android.support.animation.SpringForce r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, d110, d111, d112, d113, d114, d115, d116, d117, d118, d119, $d120, $d121;
        long l0;
        byte $b1, $b2;
        android.support.animation.DynamicAnimation$MassState $r1, $r2, $r3;
        float $f0, $f1;

        r0 := @this: android.support.animation.SpringForce;

        d110 := @parameter0: double;

        d0 := @parameter1: double;

        l0 := @parameter2: long;

        specialinvoke r0.<android.support.animation.SpringForce: void init()>();

        $d2 = (double) l0;

        d1 = $d2 / 1000.0;

        $d3 = r0.<android.support.animation.SpringForce: double mFinalPosition>;

        d111 = d110 - $d3;

        $d4 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $b1 = $d4 cmpl 1.0;

        if $b1 <= 0 goto label1;

        $d77 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d78 = $d77 * d111;

        $d82 = $d78 - d0;

        $d80 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d79 = r0.<android.support.animation.SpringForce: double mGammaPlus>;

        $d81 = $d80 - $d79;

        $d83 = $d82 / $d81;

        d112 = d111 - $d83;

        $d84 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d85 = $d84 * d111;

        $d89 = $d85 - d0;

        $d87 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d86 = r0.<android.support.animation.SpringForce: double mGammaPlus>;

        $d88 = $d87 - $d86;

        d113 = $d89 / $d88;

        $d90 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d91 = $d90 * d1;

        $d92 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d91);

        $d95 = d112 * $d92;

        $d93 = r0.<android.support.animation.SpringForce: double mGammaPlus>;

        $d94 = $d93 * d1;

        $d96 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d94);

        $d97 = d113 * $d96;

        d114 = $d95 + $d97;

        $d98 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d101 = d112 * $d98;

        $d99 = r0.<android.support.animation.SpringForce: double mGammaMinus>;

        $d100 = $d99 * d1;

        $d102 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d100);

        $d106 = $d101 * $d102;

        $d103 = r0.<android.support.animation.SpringForce: double mGammaPlus>;

        $d107 = d113 * $d103;

        $d104 = r0.<android.support.animation.SpringForce: double mGammaPlus>;

        $d105 = $d104 * d1;

        $d108 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d105);

        $d109 = $d107 * $d108;

        d115 = $d106 + $d109;

        goto label3;

     label1:
        $d5 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $b2 = $d5 cmpl 1.0;

        if $b2 != 0 goto label2;

        d116 = d111;

        $d54 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d55 = $d54 * d111;

        d117 = d0 + $d55;

        $d56 = d117 * d1;

        $d60 = d116 + $d56;

        $d57 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d58 = neg $d57;

        $d59 = $d58 * d1;

        $d61 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d59);

        d114 = $d60 * $d61;

        $d62 = d117 * d1;

        $d66 = d116 + $d62;

        $d63 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d64 = neg $d63;

        $d65 = $d64 * d1;

        $d67 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d65);

        $d70 = $d66 * $d67;

        $d68 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d69 = neg $d68;

        $d74 = $d70 * $d69;

        $d71 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d72 = neg $d71;

        $d73 = $d72 * d1;

        $d75 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d73);

        $d76 = d117 * $d75;

        d115 = $d74 + $d76;

        goto label3;

     label2:
        d118 = d111;

        $d6 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d12 = 1.0 / $d6;

        $d8 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d7 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d9 = $d8 * $d7;

        $d10 = $d9 * d111;

        $d11 = $d10 + d0;

        d119 = $d12 * $d11;

        $d13 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d15 = neg $d13;

        $d14 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d16 = $d15 * $d14;

        $d17 = $d16 * d1;

        $d18 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d17);

        $d19 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d20 = $d19 * d1;

        $d21 = staticinvoke <java.lang.Math: double cos(double)>($d20);

        $d24 = d118 * $d21;

        $d22 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d23 = $d22 * d1;

        $d25 = staticinvoke <java.lang.Math: double sin(double)>($d23);

        $d26 = d119 * $d25;

        $d27 = $d24 + $d26;

        d114 = $d18 * $d27;

        $d28 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d29 = neg $d28;

        $d31 = d114 * $d29;

        $d30 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d37 = $d31 * $d30;

        $d32 = r0.<android.support.animation.SpringForce: double mDampingRatio>;

        $d34 = neg $d32;

        $d33 = r0.<android.support.animation.SpringForce: double mNaturalFreq>;

        $d35 = $d34 * $d33;

        $d36 = $d35 * d1;

        $d38 = staticinvoke <java.lang.Math: double pow(double,double)>(2.718281828459045, $d36);

        $d39 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d40 = neg $d39;

        $d43 = $d40 * d118;

        $d41 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d42 = $d41 * d1;

        $d44 = staticinvoke <java.lang.Math: double sin(double)>($d42);

        $d48 = $d43 * $d44;

        $d45 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d49 = $d45 * d119;

        $d46 = r0.<android.support.animation.SpringForce: double mDampedFreq>;

        $d47 = $d46 * d1;

        $d50 = staticinvoke <java.lang.Math: double cos(double)>($d47);

        $d51 = $d49 * $d50;

        $d52 = $d48 + $d51;

        $d53 = $d38 * $d52;

        d115 = $d37 + $d53;

     label3:
        $r1 = r0.<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState>;

        $d120 = r0.<android.support.animation.SpringForce: double mFinalPosition>;

        $d121 = d114 + $d120;

        $f0 = (float) $d121;

        $r1.<android.support.animation.DynamicAnimation$MassState: float mValue> = $f0;

        $r2 = r0.<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState>;

        $f1 = (float) d115;

        $r2.<android.support.animation.DynamicAnimation$MassState: float mVelocity> = $f1;

        $r3 = r0.<android.support.animation.SpringForce: android.support.animation.DynamicAnimation$MassState mMassState>;

        return $r3;
    }

    void setValueThreshold(double)
    {
        android.support.animation.SpringForce r0;
        double d0, $d1, $d2, $d3;

        r0 := @this: android.support.animation.SpringForce;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        r0.<android.support.animation.SpringForce: double mValueThreshold> = $d1;

        $d2 = r0.<android.support.animation.SpringForce: double mValueThreshold>;

        $d3 = $d2 * 62.5;

        r0.<android.support.animation.SpringForce: double mVelocityThreshold> = $d3;

        return;
    }

