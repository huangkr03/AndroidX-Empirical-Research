android.support.content.Query
<android.support.content.Query: boolean DEBUG>
<android.support.content.Query: java.lang.String TAG>
<android.support.content.Query: android.net.Uri mUri>
<android.support.content.Query: java.lang.String[] mProjection>
<android.support.content.Query: android.os.Bundle mQueryArgs>
<android.support.content.Query: int mId>
<android.support.content.Query: int mOffset>
<android.support.content.Query: int mLimit>
<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>
<android.support.content.Query: android.support.content.ContentPager$ContentCallback mCallback>
    void <init>(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal, android.support.content.ContentPager$ContentCallback)
    {
        android.support.content.Query r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;
        android.support.content.ContentPager$ContentCallback r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.content.Query;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.CancellationSignal;

        r5 := @parameter4: android.support.content.ContentPager$ContentCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z0);

        if r3 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z1);

        if r5 == null goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z2);

        r0.<android.support.content.Query: android.net.Uri mUri> = r1;

        r0.<android.support.content.Query: java.lang.String[] mProjection> = r2;

        r0.<android.support.content.Query: android.os.Bundle mQueryArgs> = r3;

        r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal> = r4;

        r0.<android.support.content.Query: android.support.content.ContentPager$ContentCallback mCallback> = r5;

        $i0 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("android:query-arg-offset", -1);

        r0.<android.support.content.Query: int mOffset> = $i0;

        $i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("android:query-arg-limit", -1);

        r0.<android.support.content.Query: int mLimit> = $i1;

        $i2 = virtualinvoke r1.<android.net.Uri: int hashCode()>();

        $i7 = $i2 << 16;

        $i5 = r0.<android.support.content.Query: int mOffset>;

        $i3 = r0.<android.support.content.Query: int mLimit>;

        $i4 = $i3 << 8;

        $i6 = $i5 | $i4;

        $i8 = $i7 | $i6;

        r0.<android.support.content.Query: int mId> = $i8;

        $i9 = r0.<android.support.content.Query: int mOffset>;

        if $i9 < 0 goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        staticinvoke <android.support.v4.util.Preconditions: void checkArgument(boolean)>($z3);

        return;
    }

    public int getId()
    {
        android.support.content.Query r0;
        int $i0;

        r0 := @this: android.support.content.Query;

        $i0 = r0.<android.support.content.Query: int mId>;

        return $i0;
    }

    public android.net.Uri getUri()
    {
        android.support.content.Query r0;
        android.net.Uri $r1;

        r0 := @this: android.support.content.Query;

        $r1 = r0.<android.support.content.Query: android.net.Uri mUri>;

        return $r1;
    }

    public int getOffset()
    {
        android.support.content.Query r0;
        int $i0;

        r0 := @this: android.support.content.Query;

        $i0 = r0.<android.support.content.Query: int mOffset>;

        return $i0;
    }

    public int getLimit()
    {
        android.support.content.Query r0;
        int $i0;

        r0 := @this: android.support.content.Query;

        $i0 = r0.<android.support.content.Query: int mLimit>;

        return $i0;
    }

    android.support.content.ContentPager$ContentCallback getCallback()
    {
        android.support.content.Query r0;
        android.support.content.ContentPager$ContentCallback $r1;

        r0 := @this: android.support.content.Query;

        $r1 = r0.<android.support.content.Query: android.support.content.ContentPager$ContentCallback mCallback>;

        return $r1;
    }

    android.database.Cursor run(android.content.ContentResolver)
    {
        android.support.content.Query r0;
        android.content.ContentResolver r1;
        int $i0, $i1;
        java.lang.String[] $r2, $r6, $r11;
        android.net.Uri $r3, $r7, $r12;
        android.database.Cursor $r4, $r8, $r13;
        android.os.CancellationSignal $r5, $r9;
        android.os.Bundle $r10;

        r0 := @this: android.support.content.Query;

        r1 := @parameter0: android.content.ContentResolver;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r12 = r0.<android.support.content.Query: android.net.Uri mUri>;

        $r11 = r0.<android.support.content.Query: java.lang.String[] mProjection>;

        $r10 = r0.<android.support.content.Query: android.os.Bundle mQueryArgs>;

        $r9 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        $r13 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>($r12, $r11, $r10, $r9);

        return $r13;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Query", "Falling back to pre-O query method.");

        $r7 = r0.<android.support.content.Query: android.net.Uri mUri>;

        $r6 = r0.<android.support.content.Query: java.lang.String[] mProjection>;

        $r5 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        $r8 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>($r7, $r6, null, null, null, $r5);

        return $r8;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Query", "Falling back to pre-jellybean query method.");

        $r3 = r0.<android.support.content.Query: android.net.Uri mUri>;

        $r2 = r0.<android.support.content.Query: java.lang.String[] mProjection>;

        $r4 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, $r2, null, null, null);

        return $r4;
    }

    void cancel()
    {
        android.support.content.Query r0;
        int $i0;
        android.os.CancellationSignal $r1, $r2, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.content.Query;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $r1 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        $z0 = virtualinvoke $r2.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attemping to cancel query provider processings: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Query", $r6);

        $r7 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        virtualinvoke $r7.<android.os.CancellationSignal: void cancel()>();

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.content.Query r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.net.Uri $r3, $r4;

        r0 := @this: android.support.content.Query;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof android.support.content.Query;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (android.support.content.Query) r1;

        $i1 = r0.<android.support.content.Query: int mId>;

        $i0 = r2.<android.support.content.Query: int mId>;

        if $i1 != $i0 goto label4;

        $r4 = r0.<android.support.content.Query: android.net.Uri mUri>;

        $r3 = r2.<android.support.content.Query: android.net.Uri mUri>;

        $z1 = virtualinvoke $r4.<android.net.Uri: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $i3 = r0.<android.support.content.Query: int mOffset>;

        $i2 = r2.<android.support.content.Query: int mOffset>;

        if $i3 != $i2 goto label4;

        $i5 = r0.<android.support.content.Query: int mLimit>;

        $i4 = r2.<android.support.content.Query: int mLimit>;

        if $i5 != $i4 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public int hashCode()
    {
        android.support.content.Query r0;
        int $i0;

        r0 := @this: android.support.content.Query;

        $i0 = virtualinvoke r0.<android.support.content.Query: int getId()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        android.support.content.Query r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21;
        int $i0, $i1, $i2;
        android.net.Uri $r5;
        java.lang.String[] $r8;
        java.lang.String $r9, $r22;
        android.os.CancellationSignal $r16;
        android.support.content.ContentPager$ContentCallback $r19;

        r0 := @this: android.support.content.Query;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query{id:");

        $i0 = r0.<android.support.content.Query: int mId>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri:");

        $r5 = r0.<android.support.content.Query: android.net.Uri mUri>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" projection:");

        $r8 = r0.<android.support.content.Query: java.lang.String[] mProjection>;

        $r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset:");

        $i1 = r0.<android.support.content.Query: int mOffset>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit:");

        $i2 = r0.<android.support.content.Query: int mLimit>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cancellationSignal:");

        $r16 = r0.<android.support.content.Query: android.os.CancellationSignal mCancellationSignal>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback:");

        $r19 = r0.<android.support.content.Query: android.support.content.ContentPager$ContentCallback mCallback>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

