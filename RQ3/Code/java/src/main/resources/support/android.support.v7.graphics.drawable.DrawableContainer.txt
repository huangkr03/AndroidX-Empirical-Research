android.support.v7.graphics.drawable.DrawableContainer
<android.support.v7.graphics.drawable.DrawableContainer: boolean DEBUG>
<android.support.v7.graphics.drawable.DrawableContainer: java.lang.String TAG>
<android.support.v7.graphics.drawable.DrawableContainer: boolean DEFAULT_DITHER>
<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>
<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>
<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>
<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>
<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>
<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha>
<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>
<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex>
<android.support.v7.graphics.drawable.DrawableContainer: boolean mMutated>
<android.support.v7.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>
<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>
<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>
<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>
    void <init>()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha> = 255;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    public int getChangingConfigurations()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int $i0, $i1, $i2;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    private boolean needsMirroring()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $z0 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r3;
        android.graphics.drawable.Drawable $r4, $r5;
        boolean $z0, z1, $z2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r2 = virtualinvoke $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        if r2 == null goto label3;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $i3 = r2.<android.graphics.Rect: int left>;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i5 = $i3 | $i2;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i7 = $i5 | $i4;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i8 = $i7 | $i6;

        if $i8 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        goto label5;

     label3:
        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label4;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        z1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label5;

     label4:
        z1 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

     label5:
        $z2 = specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean needsMirroring()>();

        if $z2 == 0 goto label6;

        i0 = r1.<android.graphics.Rect: int left>;

        i1 = r1.<android.graphics.Rect: int right>;

        r1.<android.graphics.Rect: int left> = i1;

        r1.<android.graphics.Rect: int right> = i0;

     label6:
        return z1;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.Outline r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0, $i3;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r2;
        long $l1;
        byte $b2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z0 == 0 goto label1;

        $i3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        if $i3 == i0 goto label3;

     label1:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha> = i0;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label3;

        $l1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void animate(boolean)>(0);

     label3:
        return;
    }

    public int getAlpha()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        return $i0;
    }

    public void setDither(boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1, $z2;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r4;
        android.graphics.drawable.Drawable $r3, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = z0;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z2 = $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setDither(boolean)>($z2);

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.ColorFilter r1, $r4;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3, $r5;
        android.graphics.drawable.Drawable $r6, $r7;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter> = 1;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r4 = $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        if $r4 == r1 goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter> = r1;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r6 == null goto label1;

        $r7 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label1:
        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.content.res.ColorStateList r1, $r4;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3, $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList> = 1;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r4 = $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        if $r4 == r1 goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList> = r1;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r6, r1);

     label1:
        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.PorterDuff$Mode r1, $r4;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3, $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode> = 1;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r4 = $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>;

        if $r4 == r1 goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode> = r1;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r6, r1);

     label1:
        return;
    }

    public void setEnterFadeDuration(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public void setExitFadeDuration(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label1:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public boolean isStateful()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        return $z0;
    }

    public void setAutoMirrored(boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1, $z2;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r4;
        android.graphics.drawable.Drawable $r3, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = z0;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z2 = $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r5, $z2);

     label1:
        return;
    }

    public boolean isAutoMirrored()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        return $z0;
    }

    public void jumpToCurrentState()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4, $r5;
        long $l0, $l3;
        byte $b1, $b4;
        boolean $z0, z1;
        int $i2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        z1 = 0;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        z1 = 1;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2);

     label2:
        $l3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label3;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        z1 = 1;

     label3:
        $l0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label4;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z1 = 1;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void invalidateSelf()>();

     label5:
        return;
    }

    public void setHotspot(float, float)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r2, f0, f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0, i1, i2, i3;
        android.graphics.Rect $r1, $r2, $r5;
        android.graphics.drawable.Drawable $r3, $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if $r1 != null goto label1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds> = $r5;

        goto label2;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label3;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r4, i0, i1, i2, i3);

     label3:
        return;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1, $r2, $r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    protected boolean onStateChange(int[])
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: int[];

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $z1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z1;

     label1:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z0;

     label2:
        return 0;
    }

    protected boolean onLevelChange(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $z1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z1;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z0;

     label2:
        return 0;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0, $i1;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int getCurrentIndex()>();

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)>(i0, $i1);

        return $z0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        return $i0;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label3;

     label2:
        $i1 = -1;

     label3:
        return $i1;
    }

    public int getIntrinsicHeight()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        return $i0;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label3;

     label2:
        $i1 = -1;

     label3:
        return $i1;
    }

    public int getMinimumWidth()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        return $i0;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        return $i1;
    }

    public int getMinimumHeight()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r4.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        return $i0;

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        return $i1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r6;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        if $r2 == null goto label1;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r6.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>();

     label1:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label2;

        $r4 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label2:
        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        boolean z0, z1, z2;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label1:
        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label2:
        return z2;
    }

    public int getOpacity()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r3;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label2;

     label1:
        $i0 = -2;

        goto label3;

     label2:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

     label3:
        return $i0;
    }

    void setCurrentIndex(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>(i0);

        return;
    }

    int getCurrentIndex()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>;

        return $i0;
    }

    boolean selectDrawable(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        int i0, $i2, $i3, $i6, $i7, $i8, $i11, $i12;
        long l1, $l4, $l9, $l10, $l13, $l14, $l15;
        android.graphics.drawable.Drawable r1, $r3, $r11, $r12, $r13, $r14, $r16;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r7, $r8, $r9, $r10, $r15;
        java.lang.Runnable $r4, $r5;
        android.support.v7.graphics.drawable.DrawableContainer$1 $r6;
        byte $b5, $b16;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>;

        if i0 != $i2 goto label01;

        return 0;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i3 = $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        if $i3 <= 0 goto label04;

        $r12 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r12 == null goto label02;

        $r16 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label02:
        $r13 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r13 == null goto label03;

        $r14 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = $r14;

        $i11 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = $i11;

        $r15 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i12 = $r15.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        $l13 = (long) $i12;

        $l14 = l1 + $l13;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = $l14;

        goto label05;

     label03:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label05;

     label04:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label05;

        $r11 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r11.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label05:
        if i0 < 0 goto label08;

        $r7 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i6 = $r7.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        if i0 >= $i6 goto label08;

        $r8 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r1 = virtualinvoke $r8.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>(i0);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = r1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex> = i0;

        if r1 == null goto label07;

        $r9 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i7 = $r9.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i7 <= 0 goto label06;

        $r10 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i8 = $r10.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        $l9 = (long) $i8;

        $l10 = l1 + $l9;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = $l10;

     label06:
        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>(r1);

     label07:
        goto label09;

     label08:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = null;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

     label09:
        $l15 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label10;

        $l4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label13;

     label10:
        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        if $r4 != null goto label11;

        $r6 = new android.support.v7.graphics.drawable.DrawableContainer$1;

        specialinvoke $r6.<android.support.v7.graphics.drawable.DrawableContainer$1: void <init>(android.support.v7.graphics.drawable.DrawableContainer)>(r0);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable> = $r6;

        goto label12;

     label11:
        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>($r5);

     label12:
        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void animate(boolean)>(1);

     label13:
        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void invalidateSelf()>();

        return 1;
    }

    private void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Rect r2, $r25;
        java.lang.Throwable r3, $r19;
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback $r4, $r5, $r7, $r18, $r20, $r26;
        android.graphics.drawable.Drawable$Callback $r6, $r21, $r27;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z5, $z7, $z8, $z9, $z10;
        android.graphics.PorterDuff$Mode $r13;
        android.content.res.ColorStateList $r15;
        android.graphics.ColorFilter $r17;
        int[] $r24;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        if $r4 != null goto label01;

        $r18 = new android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        specialinvoke $r18.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback> = $r18;

     label01:
        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r6 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        $r7 = virtualinvoke $r5.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)>($r6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r7);

     label02:
        $r8 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = $r8.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i0 > 0 goto label03;

        $z7 = r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z7 == 0 goto label03;

        $i8 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i8);

     label03:
        $r22 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z8 = $r22.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>;

        if $z8 == 0 goto label04;

        $r16 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r17 = $r16.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r17);

        goto label06;

     label04:
        $r9 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r9.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>;

        if $z0 == 0 goto label05;

        $r14 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r15 = $r14.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>(r1, $r15);

     label05:
        $r10 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r10.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>;

        if $z1 == 0 goto label06;

        $r12 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r13 = $r12.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>(r1, $r13);

     label06:
        $z9 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean isVisible()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z9, 1);

        $r23 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z10 = $r23.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z10);

        $r24 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int[] getState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r24);

        $i9 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int getLevel()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i9);

        $r25 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r25);

        $i10 = <android.os.Build$VERSION: int SDK_INT>;

        if $i10 < 23 goto label07;

        $i7 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i7);

     label07:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 19 goto label08;

        $r11 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z5 = $r11.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z5);

     label08:
        r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label09;

        if r2 == null goto label09;

        $i6 = r2.<android.graphics.Rect: int left>;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i6, $i5, $i4, $i3);

     label09:
        $r26 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r27 = virtualinvoke $r26.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r27);

        goto label11;

     label10:
        $r19 := @caughtexception;

        r3 = $r19;

        $r20 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r21 = virtualinvoke $r20.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r21);

        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
    }

    void animate(boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        boolean z0, z2;
        long l0, $l1, $l2, $l4, $l6, $l7, $l8, $l14, $l16, $l18, $l19, $l20;
        android.graphics.drawable.Drawable $r1, $r4, $r5, $r7, $r8, $r9;
        java.lang.Runnable $r2;
        byte $b3, $b5, $b15, $b17;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r3, $r6;
        int $i9, $i10, $i11, $i12, $i13, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z2 = 0;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $l14 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label3;

        $l16 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b17 = $l16 cmp l0;

        if $b17 > 0 goto label1;

        $r8 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i27 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>($i27);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        goto label3;

     label1:
        $l18 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $l19 = $l18 - l0;

        $l20 = $l19 * 255L;

        $i22 = (int) $l20;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i21 = $r6.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        i28 = $i22 / $i21;

        $r7 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i24 = 255 - i28;

        $i23 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        $i25 = $i24 * $i23;

        $i26 = $i25 / 255;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setAlpha(int)>($i26);

        z2 = 1;

        goto label3;

     label2:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

     label3:
        $r9 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r9 == null goto label5;

        $l2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label6;

        $l4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b5 = $l4 cmp l0;

        if $b5 > 0 goto label4;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label6;

     label4:
        $l6 = r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $l7 = $l6 - l0;

        $l8 = $l7 * 255L;

        $i10 = (int) $l8;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i9 = $r3.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        i29 = $i10 / $i9;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $i11 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mAlpha>;

        $i12 = i29 * $i11;

        $i13 = $i12 / 255;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setAlpha(int)>($i13);

        z2 = 1;

        goto label6;

     label5:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

     label6:
        if z0 == 0 goto label7;

        if z2 == 0 goto label7;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        $l1 = l0 + 16L;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void scheduleSelf(java.lang.Runnable,long)>($r2, $l1);

     label7:
        return;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        return $r1;
    }

    final void updateDensity(android.content.res.Resources)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.content.res.Resources r1;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>(r1);

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.content.res.Resources$Theme r1;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)>(r1);

        return;
    }

    public boolean canApplyTheme()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()>();

        return $z0;
    }

    public final android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: int getChangingConfigurations()>();

        $r2.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label1;

        r1 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>();

        virtualinvoke r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()>();

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mMutated> = 1;

     label1:
        return r0;
    }

    android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r1;
    }

    void clearMutated()
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void clearMutated()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer: boolean mMutated> = 0;

        return;
    }

    protected void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.support.v7.graphics.drawable.DrawableContainer r0;
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r2, $r3, $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState> = r1;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>;

        if $i0 < 0 goto label1;

        $i1 = r0.<android.support.v7.graphics.drawable.DrawableContainer: int mCurIndex>;

        $r2 = virtualinvoke r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>($i1);

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = $r2;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>($r4);

     label1:
        r0.<android.support.v7.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        return;
    }

    static int resolveDensity(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3;
        android.util.DisplayMetrics $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i2 = $r1.<android.util.DisplayMetrics: int densityDpi>;

     label2:
        i1 = $i2;

        if i1 != 0 goto label3;

        $i3 = 160;

        goto label4;

     label3:
        $i3 = i1;

     label4:
        return $i3;
    }

android.support.v7.graphics.drawable.DrawableContainer$1
<android.support.v7.graphics.drawable.DrawableContainer$1: android.support.v7.graphics.drawable.DrawableContainer this$0>
    void <init>(android.support.v7.graphics.drawable.DrawableContainer)
    {
        android.support.v7.graphics.drawable.DrawableContainer$1 r0;
        android.support.v7.graphics.drawable.DrawableContainer r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$1;

        r1 := @parameter0: android.support.v7.graphics.drawable.DrawableContainer;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$1: android.support.v7.graphics.drawable.DrawableContainer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.v7.graphics.drawable.DrawableContainer$1 r0;
        android.support.v7.graphics.drawable.DrawableContainer $r1, $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$1;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$1: android.support.v7.graphics.drawable.DrawableContainer this$0>;

        virtualinvoke $r1.<android.support.v7.graphics.drawable.DrawableContainer: void animate(boolean)>(1);

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$1: android.support.v7.graphics.drawable.DrawableContainer this$0>;

        virtualinvoke $r2.<android.support.v7.graphics.drawable.DrawableContainer: void invalidateSelf()>();

        return;
    }

android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback
<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>
    void <init>()
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;
        android.graphics.drawable.Drawable$Callback r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        r1 := @parameter0: android.graphics.drawable.Drawable$Callback;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback> = r1;

        return r0;
    }

    public android.graphics.drawable.Drawable$Callback unwrap()
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;
        android.graphics.drawable.Drawable$Callback r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback> = null;

        return r1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback $r3, $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r1, r2, l0);

     label1:
        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback $r3, $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r1, r2);

     label1:
        return;
    }

android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.support.v7.graphics.drawable.DrawableContainer mOwner>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>
<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>
    void <init>(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState, android.support.v7.graphics.drawable.DrawableContainer, android.content.res.Resources)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0, r1;
        android.support.v7.graphics.drawable.DrawableContainer r2;
        android.content.res.Resources r3, $r24;
        android.graphics.drawable.Drawable[] r4, $r7, $r11, $r16;
        android.util.SparseArray r5, $r12, $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        android.graphics.drawable.Drawable$ConstantState r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.graphics.ColorFilter $r8;
        android.content.res.ColorStateList $r9;
        android.graphics.PorterDuff$Mode $r10;
        android.graphics.drawable.Drawable $r13, $r14, $r15;
        android.graphics.Rect $r19, $r20;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r2 := @parameter1: android.support.v7.graphics.drawable.DrawableContainer;

        r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = 160;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = 1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.support.v7.graphics.drawable.DrawableContainer mOwner> = r2;

        if r3 == null goto label01;

        $r24 = r3;

        goto label03;

     label01:
        if r1 == null goto label02;

        $r24 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        goto label03;

     label02:
        $r24 = null;

     label03:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes> = $r24;

        if r1 == null goto label04;

        $i17 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        goto label05;

     label04:
        $i17 = 0;

     label05:
        $i1 = staticinvoke <android.support.v7.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>(r3, $i17);

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = $i1;

        if r1 == null goto label16;

        $i2 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i2;

        $i3 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i3;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        $z0 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = $z0;

        $z1 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = $z1;

        $z2 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = $z2;

        $z3 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = $z3;

        $i4 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = $i4;

        $i5 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = $i5;

        $i6 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = $i6;

        $z4 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = $z4;

        $r8 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter> = $r8;

        $z5 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter> = $z5;

        $r9 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList> = $r9;

        $r10 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode> = $r10;

        $z6 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList> = $z6;

        $z7 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode> = $z7;

        $i8 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        $i7 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        if $i8 != $i7 goto label07;

        $z10 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding>;

        if $z10 == 0 goto label06;

        $r19 = new android.graphics.Rect;

        $r20 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        specialinvoke $r19.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r20);

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = $r19;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 1;

     label06:
        $z11 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z11 == 0 goto label07;

        $i13 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = $i13;

        $i14 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = $i14;

        $i15 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = $i15;

        $i16 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = $i16;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 1;

     label07:
        $z12 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>;

        if $z12 == 0 goto label08;

        $i12 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = $i12;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

     label08:
        $z8 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>;

        if $z8 == 0 goto label09;

        $z9 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = $z9;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

     label09:
        r4 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i9 = lengthof r4;

        $r11 = newarray (android.graphics.drawable.Drawable)[$i9];

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r11;

        $i10 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i10;

        r5 = r1.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if r5 == null goto label10;

        $r18 = virtualinvoke r5.<android.util.SparseArray: android.util.SparseArray clone()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r18;

        goto label11;

     label10:
        $r12 = new android.util.SparseArray;

        $i11 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        specialinvoke $r12.<android.util.SparseArray: void <init>(int)>($i11);

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r12;

     label11:
        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        i18 = 0;

     label12:
        if i18 >= i0 goto label15;

        $r13 = r4[i18];

        if $r13 == null goto label14;

        $r14 = r4[i18];

        r6 = virtualinvoke $r14.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r6 == null goto label13;

        $r17 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(i18, r6);

        goto label14;

     label13:
        $r16 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r15 = r4[i18];

        $r16[i18] = $r15;

     label14:
        i18 = i18 + 1;

        goto label12;

     label15:
        goto label17;

     label16:
        $r7 = newarray (android.graphics.drawable.Drawable)[10];

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r7;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = 0;

     label17:
        return;
    }

    public int getChangingConfigurations()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i2 = $i1 | $i0;

        return $i2;
    }

    public final int addChild(android.graphics.drawable.Drawable)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.Drawable[] $r2, $r5;
        android.support.v7.graphics.drawable.DrawableContainer $r4;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $i7 = i0 + 10;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>(i0, $i7);

     label1:
        virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1);

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.support.v7.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r4);

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r5[i0] = r1;

        $i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i3 = $i2 + 1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i3;

        $i4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i6 = $i4 | $i5;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i6;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = null;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 0;

        return i0;
    }

    void invalidateCache()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 0;

        return;
    }

    final int getCapacity()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable[] $r1;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i0 = lengthof $r1;

        return $i0;
    }

    private void createAllFutures()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2;
        android.graphics.drawable.Drawable$ConstantState r1;
        android.util.SparseArray $r2, $r3, $r4, $r5;
        java.lang.Object $r6;
        android.content.res.Resources $r7;
        android.graphics.drawable.Drawable[] $r8;
        android.graphics.drawable.Drawable $r9, $r10;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if $r2 == null goto label3;

        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i2);

        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (android.graphics.drawable.Drawable$ConstantState) $r6;

        $r8 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r7 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        $r9 = virtualinvoke r1.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r7);

        $r10 = specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r9);

        $r8[i1] = $r10;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = null;

     label3:
        return;
    }

    private android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0, $i1;
        android.support.v7.graphics.drawable.DrawableContainer $r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $i1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i1);

     label1:
        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.support.v7.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r1);

        return r3;
    }

    public final int getChildCount()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        return $i0;
    }

    public final android.graphics.drawable.Drawable getChild(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, $i2;
        android.graphics.drawable.Drawable r1, r3, $r10;
        android.graphics.drawable.Drawable$ConstantState r2;
        android.graphics.drawable.Drawable[] $r4, $r11;
        android.util.SparseArray $r5, $r6, $r7, $r12, $r13;
        java.lang.Object $r8;
        android.content.res.Resources $r9;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r1 = $r4[i0];

        if r1 == null goto label1;

        return r1;

     label1:
        $r5 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if $r5 == null goto label3;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label3;

        $r7 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (android.graphics.drawable.Drawable$ConstantState) $r8;

        $r9 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        $r10 = virtualinvoke r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r9);

        r3 = specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r10);

        $r11 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r11[i0] = r3;

        $r12 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        virtualinvoke $r12.<android.util.SparseArray: void removeAt(int)>(i1);

        $r13 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $i2 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if $i2 != 0 goto label2;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = null;

     label2:
        return r3;

     label3:
        return null;
    }

    final boolean setLayoutDirection(int, int)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2, $i3, i4;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;
        boolean z0, z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i4 = 0;

     label1:
        if i4 >= i2 goto label4;

        $r2 = r1[i4];

        if $r2 == null goto label3;

        z1 = 0;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 23 goto label2;

        $r3 = r1[i4];

        z1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>(i0);

     label2:
        if i4 != i1 goto label3;

        z0 = z1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = i0;

        return z0;
    }

    final void updateDensity(android.content.res.Resources)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.content.res.Resources;

        if r1 == null goto label1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes> = r1;

        $i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        i0 = staticinvoke <android.support.v7.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)>(r1, $i2);

        i1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = i0;

        if i1 == i0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 0;

     label1:
        return;
    }

    final void applyTheme(android.content.res.Resources$Theme)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.content.res.Resources$Theme r1;
        int i0, $i1, $i2, $i3, i4;
        android.graphics.drawable.Drawable[] r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.content.res.Resources$Theme;

        if r1 == null goto label4;

        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $r4 = r2[i4];

        if $r4 == null goto label2;

        $r5 = r2[i4];

        $z0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label2;

        $r6 = r2[i4];

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $i1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $r7 = r2[i4];

        $i2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>($r3);

     label4:
        return;
    }

    public boolean canApplyTheme()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.Drawable$ConstantState r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label3;

        return 1;

     label2:
        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (android.graphics.drawable.Drawable$ConstantState) $r5;

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    void mutate()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        if $r2 == null goto label2;

        $r3 = r1[i1];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = 1;

        return;
    }

    final void clearMutated()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = 0;

        return;
    }

    public final void setVariablePadding(boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = z0;

        return;
    }

    public final android.graphics.Rect getConstantPadding()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.Rect r1, $r3, $r4, $r5, $r7, r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.drawable.Drawable[] r2;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        if $r3 != null goto label02;

        $z1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding>;

        if $z1 == 0 goto label03;

     label02:
        $r4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        return $r4;

     label03:
        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r8 = null;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r1 = $r5;

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i13 = 0;

     label04:
        if i13 >= i0 goto label10;

        $r6 = r2[i13];

        $z2 = virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        if $z2 == 0 goto label09;

        if r8 != null goto label05;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r8 = $r7;

     label05:
        $i2 = r1.<android.graphics.Rect: int left>;

        $i1 = r8.<android.graphics.Rect: int left>;

        if $i2 <= $i1 goto label06;

        $i12 = r1.<android.graphics.Rect: int left>;

        r8.<android.graphics.Rect: int left> = $i12;

     label06:
        $i4 = r1.<android.graphics.Rect: int top>;

        $i3 = r8.<android.graphics.Rect: int top>;

        if $i4 <= $i3 goto label07;

        $i11 = r1.<android.graphics.Rect: int top>;

        r8.<android.graphics.Rect: int top> = $i11;

     label07:
        $i6 = r1.<android.graphics.Rect: int right>;

        $i5 = r8.<android.graphics.Rect: int right>;

        if $i6 <= $i5 goto label08;

        $i10 = r1.<android.graphics.Rect: int right>;

        r8.<android.graphics.Rect: int right> = $i10;

     label08:
        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i7 = r8.<android.graphics.Rect: int bottom>;

        if $i8 <= $i7 goto label09;

        $i9 = r1.<android.graphics.Rect: int bottom>;

        r8.<android.graphics.Rect: int bottom> = $i9;

     label09:
        i13 = i13 + 1;

        goto label04;

     label10:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = r8;

        return r8;
    }

    public final void setConstantSize(boolean)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = z0;

        return;
    }

    public final boolean isConstantSize()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        return $z0;
    }

    public final int getConstantWidth()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        return $i0;
    }

    public final int getConstantHeight()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        return $i0;
    }

    public final int getConstantMinimumWidth()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        return $i0;
    }

    public final int getConstantMinimumHeight()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        return $i0;
    }

    protected void computeConstantSize()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 1;

        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = -1;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = 0;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = 0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label6;

        r2 = r1[i7];

        i8 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        if i8 <= $i3 goto label2;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = i8;

     label2:
        i9 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i4 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        if i9 <= $i4 goto label3;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = i9;

     label3:
        i10 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        $i5 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        if i10 <= $i5 goto label4;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = i10;

     label4:
        i11 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i6 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        if i11 <= $i6 goto label5;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = i11;

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        return;
    }

    public final void setEnterFadeDuration(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public final int getEnterFadeDuration()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        return $i0;
    }

    public final void setExitFadeDuration(int)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    public final int getExitFadeDuration()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        return $i0;
    }

    public final int getOpacity()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, $i1, $i2, $i3, i4, i5;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        return $i2;

     label1:
        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        if i0 <= 0 goto label2;

        $r3 = r1[0];

        $i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getOpacity()>();

        goto label3;

     label2:
        $i3 = -2;

     label3:
        i4 = $i3;

        i5 = 1;

     label4:
        if i5 >= i0 goto label5;

        $r2 = r1[i5];

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i4 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i4, $i1);

        i5 = i5 + 1;

        goto label4;

     label5:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = i4;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

        return i4;
    }

    public final boolean isStateful()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0, $z1, $z2, z3;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>;

        if $z0 == 0 goto label1;

        $z2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        return $z2;

     label1:
        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        z3 = 0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = z3;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

        return z3;
    }

    public void growArray(int, int)
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1, $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (android.graphics.drawable.Drawable)[i1];

        $r2 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = r1;

        return;
    }

    public synchronized boolean canConstantState()
    {
        android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r2;
        android.graphics.drawable.Drawable$ConstantState $r3;

        r0 := @this: android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState>;

        return $z1;

     label1:
        specialinvoke r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        i0 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r3 != null goto label3;

        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 0;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        return 1;
    }

