android.support.constraint.ConstraintAttribute
<android.support.constraint.ConstraintAttribute: java.lang.String TAG>
<android.support.constraint.ConstraintAttribute: java.lang.String mName>
<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>
<android.support.constraint.ConstraintAttribute: int mIntegerValue>
<android.support.constraint.ConstraintAttribute: float mFloatValue>
<android.support.constraint.ConstraintAttribute: java.lang.String mStringValue>
<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>
<android.support.constraint.ConstraintAttribute: int mColorValue>
    public android.support.constraint.ConstraintAttribute$AttributeType getType()
    {
        android.support.constraint.ConstraintAttribute r0;
        android.support.constraint.ConstraintAttribute$AttributeType $r1;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        $r1 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        return $r1;
    }

    public void setFloatValue(float)
    {
        android.support.constraint.ConstraintAttribute r0;
        float f0;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        f0 := @parameter0: float;

        r0.<android.support.constraint.ConstraintAttribute: float mFloatValue> = f0;

        return;
    }

    public void setColorValue(int)
    {
        android.support.constraint.ConstraintAttribute r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        i0 := @parameter0: int;

        r0.<android.support.constraint.ConstraintAttribute: int mColorValue> = i0;

        return;
    }

    public void setIntValue(int)
    {
        android.support.constraint.ConstraintAttribute r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        i0 := @parameter0: int;

        r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue> = i0;

        return;
    }

    public void setStringValue(java.lang.String)
    {
        android.support.constraint.ConstraintAttribute r0;
        java.lang.String r1;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: java.lang.String;

        r0.<android.support.constraint.ConstraintAttribute: java.lang.String mStringValue> = r1;

        return;
    }

    public int noOfInterpValues()
    {
        android.support.constraint.ConstraintAttribute r0;
        android.support.constraint.ConstraintAttribute$AttributeType $r1;
        int[] $r2;
        int $i0, $i1;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        $r2 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r1 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r1.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        return 4;

     label2:
        return 1;
    }

    public float getValueToInterpolate()
    {
        android.support.constraint.ConstraintAttribute r0;
        android.support.constraint.ConstraintAttribute$AttributeType $r1;
        int[] $r2;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        java.lang.RuntimeException $r3, $r4;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        $r2 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r1 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r1.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $i2 = r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        $f2 = (float) $i2;

        return $f2;

     label2:
        $f1 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        return $f1;

     label3:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Color does not have a single color to interpolate");

        throw $r4;

     label4:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot interpolate String");

        throw $r3;

     label5:
        $z0 = r0.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>;

        if $z0 == 0 goto label6;

        $f3 = 1.0F;

        goto label7;

     label6:
        $f3 = 0.0F;

     label7:
        return $f3;

     label8:
        $f0 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        return $f0;

     label9:
        return #NaNF;
    }

    public void getValuesToInterpolate(float[])
    {
        android.support.constraint.ConstraintAttribute r0;
        float[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        android.support.constraint.ConstraintAttribute$AttributeType $r2;
        int[] $r3;
        boolean $z0;
        java.lang.RuntimeException $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: float[];

        $r3 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r2 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i4 = virtualinvoke $r2.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i5 = $r3[$i4];

        tableswitch($i5)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $i7 = r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        $f5 = (float) $i7;

        r1[0] = $f5;

        goto label9;

     label2:
        $f4 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        r1[0] = $f4;

        goto label9;

     label3:
        $i8 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $i9 = $i8 >> 24;

        i0 = 255 & $i9;

        $i10 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $i11 = $i10 >> 16;

        i1 = 255 & $i11;

        $i12 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $i13 = $i12 >> 8;

        i2 = 255 & $i13;

        $i14 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        i3 = 255 & $i14;

        $f6 = (float) i1;

        $f7 = $f6 / 255.0F;

        $d0 = (double) $f7;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.2);

        f0 = (float) $d1;

        $f8 = (float) i2;

        $f9 = $f8 / 255.0F;

        $d2 = (double) $f9;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.2);

        f1 = (float) $d3;

        $f10 = (float) i3;

        $f11 = $f10 / 255.0F;

        $d4 = (double) $f11;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 2.2);

        f2 = (float) $d5;

        r1[0] = f0;

        r1[1] = f1;

        r1[2] = f2;

        $f12 = (float) i0;

        $f13 = $f12 / 255.0F;

        r1[3] = $f13;

        goto label9;

     label4:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Color does not have a single color to interpolate");

        throw $r5;

     label5:
        $z0 = r0.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>;

        if $z0 == 0 goto label6;

        $f14 = 1.0F;

        goto label7;

     label6:
        $f14 = 0.0F;

     label7:
        r1[0] = $f14;

        goto label9;

     label8:
        $f3 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        r1[0] = $f3;

     label9:
        return;
    }

    public void setValue(float[])
    {
        android.support.constraint.ConstraintAttribute r0;
        float[] r1;
        android.support.constraint.ConstraintAttribute$AttributeType $r2;
        int[] $r3;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0;
        byte $b2;
        java.lang.RuntimeException $r5;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: float[];

        $r3 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r2 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $f3 = r1[0];

        $i3 = (int) $f3;

        r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue> = $i3;

        goto label9;

     label2:
        $f2 = r1[0];

        r0.<android.support.constraint.ConstraintAttribute: float mFloatValue> = $f2;

        goto label9;

     label3:
        $i4 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>(r1);

        r0.<android.support.constraint.ConstraintAttribute: int mColorValue> = $i4;

        $i5 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $i7 = $i5 & 16777215;

        $f4 = r1[3];

        $f5 = 255.0F * $f4;

        $i6 = (int) $f5;

        $i8 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i6);

        $i9 = $i8 << 24;

        $i10 = $i7 | $i9;

        r0.<android.support.constraint.ConstraintAttribute: int mColorValue> = $i10;

        goto label9;

     label4:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Color does not have a single color to interpolate");

        throw $r5;

     label5:
        $f1 = r1[0];

        $d0 = (double) $f1;

        $b2 = $d0 cmpl 0.5;

        if $b2 <= 0 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        r0.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue> = $z0;

        goto label9;

     label8:
        $f0 = r1[0];

        r0.<android.support.constraint.ConstraintAttribute: float mFloatValue> = $f0;

     label9:
        return;
    }

    public boolean diff(android.support.constraint.ConstraintAttribute)
    {
        android.support.constraint.ConstraintAttribute r0, r1;
        android.support.constraint.ConstraintAttribute$AttributeType $r2, $r3, $r4;
        int[] $r5;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2, $f3;
        byte $b2, $b5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: android.support.constraint.ConstraintAttribute;

        if r1 == null goto label01;

        $r3 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $r2 = r1.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        if $r3 == $r2 goto label02;

     label01:
        return 0;

     label02:
        $r5 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r4 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r4.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label09;
            case 2: goto label09;
            case 3: goto label03;
            case 4: goto label06;
            case 5: goto label12;
            case 6: goto label15;
            case 7: goto label18;
            default: goto label21;
        };

     label03:
        $i7 = r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        $i6 = r1.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        if $i7 != $i6 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        return $z2;

     label06:
        $f3 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $f2 = r1.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $b5 = $f3 cmpl $f2;

        if $b5 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        return $z3;

     label09:
        $i9 = r0.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $i8 = r1.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        if $i9 != $i8 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        return $z4;

     label12:
        $i4 = r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        $i3 = r1.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        if $i4 != $i3 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        return $z5;

     label15:
        $z1 = r0.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>;

        $z0 = r1.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>;

        if $z1 != $z0 goto label16;

        $z6 = 1;

        goto label17;

     label16:
        $z6 = 0;

     label17:
        return $z6;

     label18:
        $f1 = r0.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $f0 = r1.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $b2 = $f1 cmpl $f0;

        if $b2 != 0 goto label19;

        $z7 = 1;

        goto label20;

     label19:
        $z7 = 0;

     label20:
        return $z7;

     label21:
        return 0;
    }

    public void <init>(java.lang.String, android.support.constraint.ConstraintAttribute$AttributeType)
    {
        android.support.constraint.ConstraintAttribute r0;
        java.lang.String r1;
        android.support.constraint.ConstraintAttribute$AttributeType r2;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.ConstraintAttribute: java.lang.String mName> = r1;

        r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType> = r2;

        return;
    }

    public void <init>(java.lang.String, android.support.constraint.ConstraintAttribute$AttributeType, java.lang.Object)
    {
        android.support.constraint.ConstraintAttribute r0;
        java.lang.String r1;
        android.support.constraint.ConstraintAttribute$AttributeType r2;
        java.lang.Object r3;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.constraint.ConstraintAttribute$AttributeType;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.ConstraintAttribute: java.lang.String mName> = r1;

        r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType> = r2;

        virtualinvoke r0.<android.support.constraint.ConstraintAttribute: void setValue(java.lang.Object)>(r3);

        return;
    }

    public void <init>(android.support.constraint.ConstraintAttribute, java.lang.Object)
    {
        android.support.constraint.ConstraintAttribute r0, r1;
        java.lang.Object r2;
        java.lang.String $r3;
        android.support.constraint.ConstraintAttribute$AttributeType $r4;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: android.support.constraint.ConstraintAttribute;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r1.<android.support.constraint.ConstraintAttribute: java.lang.String mName>;

        r0.<android.support.constraint.ConstraintAttribute: java.lang.String mName> = $r3;

        $r4 = r1.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType> = $r4;

        virtualinvoke r0.<android.support.constraint.ConstraintAttribute: void setValue(java.lang.Object)>(r2);

        return;
    }

    public void setValue(java.lang.Object)
    {
        android.support.constraint.ConstraintAttribute r0;
        java.lang.Object r1;
        android.support.constraint.ConstraintAttribute$AttributeType $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Float $r4, $r7;
        float $f0, $f1;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.String $r6;
        java.lang.Integer $r8, $r9;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: java.lang.Object;

        $r3 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r2 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label7;
        };

     label1:
        $r8 = (java.lang.Integer) r1;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        r0.<android.support.constraint.ConstraintAttribute: int mIntegerValue> = $i2;

        goto label7;

     label2:
        $r7 = (java.lang.Float) r1;

        $f1 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        r0.<android.support.constraint.ConstraintAttribute: float mFloatValue> = $f1;

        goto label7;

     label3:
        $r9 = (java.lang.Integer) r1;

        $i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        r0.<android.support.constraint.ConstraintAttribute: int mColorValue> = $i3;

        goto label7;

     label4:
        $r6 = (java.lang.String) r1;

        r0.<android.support.constraint.ConstraintAttribute: java.lang.String mStringValue> = $r6;

        goto label7;

     label5:
        $r5 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        r0.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue> = $z0;

        goto label7;

     label6:
        $r4 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        r0.<android.support.constraint.ConstraintAttribute: float mFloatValue> = $f0;

     label7:
        return;
    }

    public static java.util.HashMap extractAttributes(java.util.HashMap, android.view.View)
    {
        java.util.HashMap r0, r2, $r7;
        android.view.View r1;
        java.lang.Class r3;
        java.util.Iterator r4;
        java.lang.String r5, $r14;
        android.support.constraint.ConstraintAttribute r6, $r17, $r20;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, r28;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.Class[] $r15;
        java.lang.Object[] $r16;
        android.graphics.drawable.Drawable $r19;
        int $i0;
        java.lang.Throwable $r22, $r23, $r24, r29, r30, r31;
        android.graphics.drawable.ColorDrawable r25;
        java.lang.Integer r26;
        java.lang.reflect.Method r27;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: android.view.View;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r2 = $r7;

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.support.constraint.ConstraintAttribute) $r10;

     label2:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("BackgroundColor");

        if $z1 == 0 goto label3;

        $r19 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        r25 = (android.graphics.drawable.ColorDrawable) $r19;

        $i0 = virtualinvoke r25.<android.graphics.drawable.ColorDrawable: int getColor()>();

        r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r20 = new android.support.constraint.ConstraintAttribute;

        specialinvoke $r20.<android.support.constraint.ConstraintAttribute: void <init>(android.support.constraint.ConstraintAttribute,java.lang.Object)>(r6, r26);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r20);

        goto label4;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMap");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Class)[0];

        r27 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r14, $r15);

        $r16 = newarray (java.lang.Object)[0];

        r28 = virtualinvoke r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r16);

        $r17 = new android.support.constraint.ConstraintAttribute;

        specialinvoke $r17.<android.support.constraint.ConstraintAttribute: void <init>(android.support.constraint.ConstraintAttribute,java.lang.Object)>(r6, r28);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r17);

     label4:
        goto label8;

     label5:
        $r24 := @caughtexception;

        r29 = $r24;

        virtualinvoke r29.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label8;

     label6:
        $r22 := @caughtexception;

        r30 = $r22;

        virtualinvoke r30.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label8;

     label7:
        $r23 := @caughtexception;

        r31 = $r23;

        virtualinvoke r31.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

     label8:
        goto label1;

     label9:
        return r2;

        catch java.lang.NoSuchMethodException from label2 to label4 with label5;
        catch java.lang.IllegalAccessException from label2 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label2 to label4 with label7;
    }

    public static void setAttributes(android.view.View, java.util.HashMap)
    {
        android.view.View r0;
        java.util.HashMap r1;
        java.lang.Class r2, $r17, $r22, $r31, $r36, $r45;
        java.util.Iterator r3;
        java.lang.String r4, r6, $r28, $r54, $r56, $r62, $r64, $r66, $r71, $r73, $r75, $r79;
        android.support.constraint.ConstraintAttribute r5;
        android.graphics.drawable.ColorDrawable r7, $r41;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r50, $r51, $r52, $r53, $r55, $r58, $r59, $r60, $r61, $r63, $r67, $r68, $r69, $r70, $r72, $r74, $r76, $r77, $r78;
        android.support.constraint.ConstraintAttribute$AttributeType $r14;
        int[] $r15;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Class[] $r16, $r21, $r26, $r30, $r35, $r40, $r44;
        java.lang.Object[] $r18, $r23, $r27, $r32, $r37, $r42, $r46;
        float $f0, $f1;
        java.lang.Float $r19, $r33;
        java.lang.Boolean $r24;
        java.lang.Integer $r38, $r47;
        java.lang.Throwable $r49, $r57, $r65, r87, r88, r89;
        java.lang.reflect.Method r80, r81, r82, r83, r84, r85, r86;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.HashMap;

        r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r9;

        $r10 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.support.constraint.ConstraintAttribute) $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r15 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r14 = r5.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r14.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r15[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label05;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            default: goto label10;
        };

     label03:
        $r35 = newarray (java.lang.Class)[1];

        $r36 = <java.lang.Integer: java.lang.Class TYPE>;

        $r35[0] = $r36;

        r80 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r35);

        $r37 = newarray (java.lang.Object)[1];

        $i2 = r5.<android.support.constraint.ConstraintAttribute: int mIntegerValue>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r37[0] = $r38;

        virtualinvoke r80.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r37);

        goto label10;

     label04:
        $r30 = newarray (java.lang.Class)[1];

        $r31 = <java.lang.Float: java.lang.Class TYPE>;

        $r30[0] = $r31;

        r81 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r30);

        $r32 = newarray (java.lang.Object)[1];

        $f1 = r5.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $r33 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r32[0] = $r33;

        virtualinvoke r81.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r32);

        goto label10;

     label05:
        $r40 = newarray (java.lang.Class)[1];

        $r40[0] = class "Landroid/graphics/drawable/Drawable;";

        r82 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r40);

        $r41 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r41.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r7 = $r41;

        $i3 = r5.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        virtualinvoke r7.<android.graphics.drawable.ColorDrawable: void setColor(int)>($i3);

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r7;

        virtualinvoke r82.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r42);

        goto label10;

     label06:
        $r44 = newarray (java.lang.Class)[1];

        $r45 = <java.lang.Integer: java.lang.Class TYPE>;

        $r44[0] = $r45;

        r83 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r44);

        $r46 = newarray (java.lang.Object)[1];

        $i4 = r5.<android.support.constraint.ConstraintAttribute: int mColorValue>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r46[0] = $r47;

        virtualinvoke r83.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r46);

        goto label10;

     label07:
        $r26 = newarray (java.lang.Class)[1];

        $r26[0] = class "Ljava/lang/CharSequence;";

        r84 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r26);

        $r27 = newarray (java.lang.Object)[1];

        $r28 = r5.<android.support.constraint.ConstraintAttribute: java.lang.String mStringValue>;

        $r27[0] = $r28;

        virtualinvoke r84.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r27);

        goto label10;

     label08:
        $r21 = newarray (java.lang.Class)[1];

        $r22 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r21[0] = $r22;

        r85 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r21);

        $r23 = newarray (java.lang.Object)[1];

        $z1 = r5.<android.support.constraint.ConstraintAttribute: boolean mBooleanValue>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r23[0] = $r24;

        virtualinvoke r85.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r23);

        goto label10;

     label09:
        $r16 = newarray (java.lang.Class)[1];

        $r17 = <java.lang.Float: java.lang.Class TYPE>;

        $r16[0] = $r17;

        r86 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r16);

        $r18 = newarray (java.lang.Object)[1];

        $f0 = r5.<android.support.constraint.ConstraintAttribute: float mFloatValue>;

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r18[0] = $r19;

        virtualinvoke r86.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r18);

     label10:
        goto label14;

     label11:
        $r65 := @caughtexception;

        r87 = $r65;

        $r66 = virtualinvoke r87.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r66);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Custom Attribute \"");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found on ");

        $r71 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r73);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have a method ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r79);

        goto label14;

     label12:
        $r49 := @caughtexception;

        r88 = $r49;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Custom Attribute \"");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found on ");

        $r54 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r56);

        virtualinvoke r88.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label14;

     label13:
        $r57 := @caughtexception;

        r89 = $r57;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Custom Attribute \"");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found on ");

        $r62 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r64);

        virtualinvoke r89.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

     label14:
        goto label01;

     label15:
        return;

        catch java.lang.NoSuchMethodException from label02 to label10 with label11;
        catch java.lang.IllegalAccessException from label02 to label10 with label12;
        catch java.lang.reflect.InvocationTargetException from label02 to label10 with label13;
    }

    private static int clamp(int)
    {
        short s0;
        int $i1, $i2, $i3, i4, i5, i6, i7, i8;

        i4 := @parameter0: int;

        s0 = 255;

        $i1 = i4 >> 31;

        $i2 = $i1 ^ -1;

        i5 = i4 & $i2;

        i6 = i5 - s0;

        $i3 = i6 >> 31;

        i7 = i6 & $i3;

        i8 = i7 + s0;

        return i8;
    }

    public void setInterpolatedValue(android.view.View, float[])
    {
        android.support.constraint.ConstraintAttribute r0;
        android.view.View r1;
        float[] r2;
        java.lang.Class r3, $r13, $r18, $r31, $r36, $r45;
        java.lang.String r4, $r8, $r27, $r29, $r54, $r57, $r63, $r66;
        android.graphics.drawable.ColorDrawable r5, $r41;
        java.lang.StringBuilder $r6, $r7, $r9, $r25, $r26, $r28, $r50, $r51, $r52, $r53, $r55, $r56, $r59, $r60, $r61, $r62, $r64, $r65;
        android.support.constraint.ConstraintAttribute$AttributeType $r10;
        int[] $r11;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        java.lang.Class[] $r12, $r17, $r30, $r35, $r40, $r44;
        java.lang.Object[] $r14, $r19, $r32, $r37, $r42, $r46;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        java.lang.Float $r15, $r33;
        byte $b2;
        java.lang.Boolean $r20;
        java.lang.RuntimeException $r24;
        java.lang.Integer $r38, $r47;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        java.lang.Throwable $r49, $r58, $r67, r74, r75, r76;
        java.lang.reflect.Method r68, r69, r70, r71, r72, r73;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintAttribute;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: float[];

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r8 = r0.<android.support.constraint.ConstraintAttribute: java.lang.String mName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r11 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r10 = r0.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType mType>;

        $i0 = virtualinvoke $r10.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label04;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label10;
            default: goto label11;
        };

     label02:
        $r35 = newarray (java.lang.Class)[1];

        $r36 = <java.lang.Integer: java.lang.Class TYPE>;

        $r35[0] = $r36;

        r68 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r35);

        $r37 = newarray (java.lang.Object)[1];

        $f3 = r2[0];

        $i4 = (int) $f3;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r37[0] = $r38;

        virtualinvoke r68.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r37);

        goto label11;

     label03:
        $r30 = newarray (java.lang.Class)[1];

        $r31 = <java.lang.Float: java.lang.Class TYPE>;

        $r30[0] = $r31;

        r69 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r30);

        $r32 = newarray (java.lang.Object)[1];

        $f2 = r2[0];

        $r33 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r32[0] = $r33;

        virtualinvoke r69.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r32);

        goto label11;

     label04:
        $r40 = newarray (java.lang.Class)[1];

        $r40[0] = class "Landroid/graphics/drawable/Drawable;";

        r70 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r40);

        $f4 = r2[0];

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.45454545454545453);

        $f5 = (float) $d1;

        $f6 = $f5 * 255.0F;

        $i5 = (int) $f6;

        i25 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i5);

        $f7 = r2[1];

        $d2 = (double) $f7;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 0.45454545454545453);

        $f8 = (float) $d3;

        $f9 = $f8 * 255.0F;

        $i6 = (int) $f9;

        i26 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i6);

        $f10 = r2[2];

        $d4 = (double) $f10;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 0.45454545454545453);

        $f11 = (float) $d5;

        $f12 = $f11 * 255.0F;

        $i7 = (int) $f12;

        i27 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i7);

        $f13 = r2[3];

        $f14 = $f13 * 255.0F;

        $i8 = (int) $f14;

        i28 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i8);

        $i10 = i28 << 24;

        $i9 = i25 << 16;

        $i12 = $i10 | $i9;

        $i11 = i26 << 8;

        $i13 = $i12 | $i11;

        i29 = $i13 | i27;

        $r41 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r41.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r5 = $r41;

        virtualinvoke r5.<android.graphics.drawable.ColorDrawable: void setColor(int)>(i29);

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r5;

        virtualinvoke r70.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r42);

        goto label11;

     label05:
        $r44 = newarray (java.lang.Class)[1];

        $r45 = <java.lang.Integer: java.lang.Class TYPE>;

        $r44[0] = $r45;

        r71 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r44);

        $f15 = r2[0];

        $d6 = (double) $f15;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, 0.45454545454545453);

        $f16 = (float) $d7;

        $f17 = $f16 * 255.0F;

        $i14 = (int) $f17;

        i30 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i14);

        $f18 = r2[1];

        $d8 = (double) $f18;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 0.45454545454545453);

        $f19 = (float) $d9;

        $f20 = $f19 * 255.0F;

        $i15 = (int) $f20;

        i31 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i15);

        $f21 = r2[2];

        $d10 = (double) $f21;

        $d11 = staticinvoke <java.lang.Math: double pow(double,double)>($d10, 0.45454545454545453);

        $f22 = (float) $d11;

        $f23 = $f22 * 255.0F;

        $i16 = (int) $f23;

        i32 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i16);

        $f24 = r2[3];

        $f25 = $f24 * 255.0F;

        $i17 = (int) $f25;

        i33 = staticinvoke <android.support.constraint.ConstraintAttribute: int clamp(int)>($i17);

        $i19 = i33 << 24;

        $i18 = i30 << 16;

        $i21 = $i19 | $i18;

        $i20 = i31 << 8;

        $i22 = $i21 | $i20;

        i34 = $i22 | i32;

        $r46 = newarray (java.lang.Object)[1];

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i34);

        $r46[0] = $r47;

        virtualinvoke r71.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r46);

        goto label11;

     label06:
        $r24 = new java.lang.RuntimeException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to interpolate strings ");

        $r27 = r0.<android.support.constraint.ConstraintAttribute: java.lang.String mName>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label07:
        $r17 = newarray (java.lang.Class)[1];

        $r18 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r17[0] = $r18;

        r72 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r17);

        $r19 = newarray (java.lang.Object)[1];

        $f1 = r2[0];

        $b2 = $f1 cmpl 0.5F;

        if $b2 <= 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r19[0] = $r20;

        virtualinvoke r72.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r19);

        goto label11;

     label10:
        $r12 = newarray (java.lang.Class)[1];

        $r13 = <java.lang.Float: java.lang.Class TYPE>;

        $r12[0] = $r13;

        r73 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, $r12);

        $r14 = newarray (java.lang.Object)[1];

        $f0 = r2[0];

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r14[0] = $r15;

        virtualinvoke r73.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r14);

     label11:
        goto label15;

     label12:
        $r49 := @caughtexception;

        r74 = $r49;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no method ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on View \"");

        $r54 = staticinvoke <android.support.constraint.motion.Debug: java.lang.String getName(android.view.View)>(r1);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r57);

        virtualinvoke r74.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label15;

     label13:
        $r58 := @caughtexception;

        r75 = $r58;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot access method ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on View \"");

        $r63 = staticinvoke <android.support.constraint.motion.Debug: java.lang.String getName(android.view.View)>(r1);

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TransitionLayout", $r66);

        virtualinvoke r75.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label15;

     label14:
        $r67 := @caughtexception;

        r76 = $r67;

        virtualinvoke r76.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

     label15:
        return;

        catch java.lang.NoSuchMethodException from label01 to label11 with label12;
        catch java.lang.IllegalAccessException from label01 to label11 with label13;
        catch java.lang.reflect.InvocationTargetException from label01 to label11 with label14;
    }

    public static void parse(android.content.Context, org.xmlpull.v1.XmlPullParser, java.util.HashMap)
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.HashMap r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i17;
        int[] $r5;
        android.support.constraint.ConstraintAttribute $r6;
        float $f0, $f1, $f2, $f3;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r13;
        char $c15, $c16;
        java.lang.String $r12, r14;
        java.lang.Object r15;
        android.support.constraint.ConstraintAttribute$AttributeType r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.util.HashMap;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r5 = <android.support.constraint.R$styleable: int[] CustomAttribute>;

        r4 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r3, $r5);

        r14 = null;

        r15 = null;

        r16 = null;

        i0 = virtualinvoke r4.<android.content.res.TypedArray: int getIndexCount()>();

        i17 = 0;

     label01:
        if i17 >= i0 goto label11;

        i1 = virtualinvoke r4.<android.content.res.TypedArray: int getIndex(int)>(i17);

        $i2 = <android.support.constraint.R$styleable: int CustomAttribute_attributeName>;

        if i1 != $i2 goto label02;

        r14 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        if r14 == null goto label10;

        $i14 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i14 <= 0 goto label10;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $c15 = virtualinvoke r14.<java.lang.String: char charAt(int)>(0);

        $c16 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c16);

        $r12 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label02:
        $i3 = <android.support.constraint.R$styleable: int CustomAttribute_customBoolean>;

        if i1 != $i3 goto label03;

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, 0);

        r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType BOOLEAN_TYPE>;

        goto label10;

     label03:
        $i4 = <android.support.constraint.R$styleable: int CustomAttribute_customColorValue>;

        if i1 != $i4 goto label04;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_TYPE>;

        $i13 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>(i1, 0);

        r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        goto label10;

     label04:
        $i5 = <android.support.constraint.R$styleable: int CustomAttribute_customColorDrawableValue>;

        if i1 != $i5 goto label05;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE>;

        $i12 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>(i1, 0);

        r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        goto label10;

     label05:
        $i6 = <android.support.constraint.R$styleable: int CustomAttribute_customPixelDimension>;

        if i1 != $i6 goto label06;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE>;

        $f2 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(i1, 0.0F);

        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f3 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f2, $r9);

        r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        goto label10;

     label06:
        $i7 = <android.support.constraint.R$styleable: int CustomAttribute_customDimension>;

        if i1 != $i7 goto label07;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE>;

        $f1 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(i1, 0.0F);

        r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        goto label10;

     label07:
        $i8 = <android.support.constraint.R$styleable: int CustomAttribute_customFloatValue>;

        if i1 != $i8 goto label08;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType FLOAT_TYPE>;

        $f0 = virtualinvoke r4.<android.content.res.TypedArray: float getFloat(int,float)>(i1, #NaNF);

        r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label10;

     label08:
        $i9 = <android.support.constraint.R$styleable: int CustomAttribute_customIntegerValue>;

        if i1 != $i9 goto label09;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType INT_TYPE>;

        $i11 = virtualinvoke r4.<android.content.res.TypedArray: int getInteger(int,int)>(i1, -1);

        r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        goto label10;

     label09:
        $i10 = <android.support.constraint.R$styleable: int CustomAttribute_customStringValue>;

        if i1 != $i10 goto label10;

        r16 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE>;

        r15 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

     label10:
        i17 = i17 + 1;

        goto label01;

     label11:
        if r14 == null goto label12;

        if r15 == null goto label12;

        $r6 = new android.support.constraint.ConstraintAttribute;

        specialinvoke $r6.<android.support.constraint.ConstraintAttribute: void <init>(java.lang.String,android.support.constraint.ConstraintAttribute$AttributeType,java.lang.Object)>(r14, r16, r15);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r6);

     label12:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

android.support.constraint.ConstraintAttribute$1
<android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>
    static void <clinit>()
    {
        android.support.constraint.ConstraintAttribute$AttributeType[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        android.support.constraint.ConstraintAttribute$AttributeType $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, $r19, $r20, $r21, $r22, r23, r24, r25, r26, r27, r28, r29;

        $r0 = staticinvoke <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType> = $r1;

     label01:
        $r3 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r2 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_TYPE>;

        $i1 = virtualinvoke $r2.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        r23 = $r22;

     label04:
        $r5 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r4 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE>;

        $i2 = virtualinvoke $r4.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

        r24 = $r21;

     label07:
        $r7 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r6 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType INT_TYPE>;

        $i3 = virtualinvoke $r6.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r18 := @caughtexception;

        r25 = $r18;

     label10:
        $r9 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r8 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType FLOAT_TYPE>;

        $i4 = virtualinvoke $r8.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        r26 = $r16;

     label13:
        $r11 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r10 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE>;

        $i5 = virtualinvoke $r10.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r11[$i5] = 5;

     label14:
        goto label16;

     label15:
        $r17 := @caughtexception;

        r27 = $r17;

     label16:
        $r13 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r12 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType BOOLEAN_TYPE>;

        $i6 = virtualinvoke $r12.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r13[$i6] = 6;

     label17:
        goto label19;

     label18:
        $r19 := @caughtexception;

        r28 = $r19;

     label19:
        $r15 = <android.support.constraint.ConstraintAttribute$1: int[] $SwitchMap$android$support$constraint$ConstraintAttribute$AttributeType>;

        $r14 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE>;

        $i7 = virtualinvoke $r14.<android.support.constraint.ConstraintAttribute$AttributeType: int ordinal()>();

        $r15[$i7] = 7;

     label20:
        goto label22;

     label21:
        $r20 := @caughtexception;

        r29 = $r20;

     label22:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label16 to label17 with label18;
        catch java.lang.NoSuchFieldError from label19 to label20 with label21;
    }

android.support.constraint.ConstraintAttribute$AttributeType
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType INT_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType FLOAT_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType BOOLEAN_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE>
<android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType[] $VALUES>
    public static android.support.constraint.ConstraintAttribute$AttributeType[] values()
    {
        android.support.constraint.ConstraintAttribute$AttributeType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.constraint.ConstraintAttribute$AttributeType[]) $r1;

        return $r2;
    }

    public static android.support.constraint.ConstraintAttribute$AttributeType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.constraint.ConstraintAttribute$AttributeType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/constraint/ConstraintAttribute$AttributeType;", r0);

        $r2 = (android.support.constraint.ConstraintAttribute$AttributeType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.constraint.ConstraintAttribute$AttributeType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.constraint.ConstraintAttribute$AttributeType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.constraint.ConstraintAttribute$AttributeType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.support.constraint.ConstraintAttribute$AttributeType[] $r7;

        $r0 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r0.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("INT_TYPE", 0);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType INT_TYPE> = $r0;

        $r1 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r1.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("FLOAT_TYPE", 1);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType FLOAT_TYPE> = $r1;

        $r2 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r2.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("COLOR_TYPE", 2);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_TYPE> = $r2;

        $r3 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r3.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("COLOR_DRAWABLE_TYPE", 3);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE> = $r3;

        $r4 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r4.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("STRING_TYPE", 4);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE> = $r4;

        $r5 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r5.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("BOOLEAN_TYPE", 5);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType BOOLEAN_TYPE> = $r5;

        $r6 = new android.support.constraint.ConstraintAttribute$AttributeType;

        specialinvoke $r6.<android.support.constraint.ConstraintAttribute$AttributeType: void <init>(java.lang.String,int)>("DIMENSION_TYPE", 6);

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE> = $r6;

        $r7 = newarray (android.support.constraint.ConstraintAttribute$AttributeType)[7];

        $r8 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType INT_TYPE>;

        $r7[0] = $r8;

        $r9 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType FLOAT_TYPE>;

        $r7[1] = $r9;

        $r10 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_TYPE>;

        $r7[2] = $r10;

        $r11 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE>;

        $r7[3] = $r11;

        $r12 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType STRING_TYPE>;

        $r7[4] = $r12;

        $r13 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType BOOLEAN_TYPE>;

        $r7[5] = $r13;

        $r14 = <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType DIMENSION_TYPE>;

        $r7[6] = $r14;

        <android.support.constraint.ConstraintAttribute$AttributeType: android.support.constraint.ConstraintAttribute$AttributeType[] $VALUES> = $r7;

        return;
    }

