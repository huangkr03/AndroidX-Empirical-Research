android.support.test.espresso.base.UiControllerImpl
<android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>
<android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>
<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.EventInjector eventInjector>
<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>
<android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>
<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>
<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry>
<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>
<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>
<android.support.test.espresso.base.UiControllerImpl: int generation>
<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>
<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>
<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>
    void <init>(android.support.test.espresso.base.EventInjector, android.support.test.espresso.base.IdleNotifier, android.support.test.espresso.base.IdleNotifier, javax.inject.Provider, android.os.Looper, android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.EventInjector r1, $r12;
        android.support.test.espresso.base.IdleNotifier r2, r3, $r14, $r16;
        javax.inject.Provider r4, $r19;
        android.os.Looper r5, $r21;
        android.support.test.espresso.base.IdlingResourceRegistry r6, $r23;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder $r7, $r8;
        java.util.concurrent.ThreadFactory $r9;
        java.util.concurrent.ExecutorService $r10;
        java.lang.Object $r11, $r13, $r15, $r18, $r20, $r22;
        java.util.BitSet $r17;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: android.support.test.espresso.base.EventInjector;

        r2 := @parameter1: android.support.test.espresso.base.IdleNotifier;

        r3 := @parameter2: android.support.test.espresso.base.IdleNotifier;

        r4 := @parameter3: javax.inject.Provider;

        r5 := @parameter4: android.os.Looper;

        r6 := @parameter5: android.support.test.espresso.base.IdlingResourceRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        specialinvoke $r7.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("Espresso Key Event #%d");

        $r9 = virtualinvoke $r8.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>();

        $r10 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r9);

        r0.<android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor> = $r10;

        r0.<android.support.test.espresso.base.UiControllerImpl: int generation> = 0;

        $r11 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r12 = (android.support.test.espresso.base.EventInjector) $r11;

        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.EventInjector eventInjector> = $r12;

        $r13 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r14 = (android.support.test.espresso.base.IdleNotifier) $r13;

        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle> = $r14;

        $r15 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r16 = (android.support.test.espresso.base.IdleNotifier) $r15;

        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle> = $r16;

        $r17 = staticinvoke <android.support.test.espresso.base.UiControllerImpl$IdleCondition: java.util.BitSet createConditionSet()>();

        r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet> = $r17;

        $r18 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r19 = (javax.inject.Provider) $r18;

        r0.<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider> = $r19;

        $r20 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r21 = (android.os.Looper) $r20;

        r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper> = $r21;

        $r22 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r23 = (android.support.test.espresso.base.IdlingResourceRegistry) $r22;

        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry> = $r23;

        return;
    }

    public boolean injectKeyEvent(android.view.KeyEvent) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.view.KeyEvent r1;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r2, r28;
        android.os.Looper $r5, $r6;
        int $i0;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r9, $r12;
        java.util.concurrent.ExecutorService $r10;
        javax.inject.Provider $r11;
        java.lang.Object $r13, $r15;
        android.support.test.espresso.base.IdleNotifier $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r16;
        java.lang.Throwable $r17, $r18, $r20, $r21, $r23, r25, r26, r34, r35;
        android.support.test.espresso.InjectEventSecurityException $r22;
        android.support.test.espresso.base.UiControllerImpl$2 r27;
        java.lang.RuntimeException r29, r30;
        java.util.concurrent.ExecutionException r31, r32, r33;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: android.view.KeyEvent;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r6 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r5 != $r6 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z3, "Expecting to be on main thread!");

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        r28 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        r27 = new android.support.test.espresso.base.UiControllerImpl$2;

        specialinvoke r27.<android.support.test.espresso.base.UiControllerImpl$2: void <init>(android.support.test.espresso.base.UiControllerImpl,android.view.KeyEvent)>(r0, r1);

        $r9 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r28.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, r27, $r9, $i0);

        r2 = r28;

        $r10 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>;

        interfaceinvoke $r10.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r2);

        $r12 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        $r11 = r0.<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r13 = interfaceinvoke $r11.<javax.inject.Provider: java.lang.Object get()>();

        $r14 = (android.support.test.espresso.base.IdleNotifier) $r13;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopUntil(android.support.test.espresso.base.UiControllerImpl$IdleCondition,android.support.test.espresso.base.IdleNotifier)>($r12, $r14);

     label3:
        $z0 = virtualinvoke r2.<java.util.concurrent.FutureTask: boolean isDone()>();

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Key injection was signaled - but it wasnt done.");

        $r15 = virtualinvoke r2.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r16 = (java.lang.Boolean) $r15;

        $z1 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z1;

     label5:
        $r17 := @caughtexception;

        r25 = $r17;

        r31 = (java.util.concurrent.ExecutionException) r25;

        $r18 = virtualinvoke r31.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z2 = $r18 instanceof android.support.test.espresso.InjectEventSecurityException;

        if $z2 == 0 goto label6;

        r32 = (java.util.concurrent.ExecutionException) r25;

        $r21 = virtualinvoke r32.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r22 = (android.support.test.espresso.InjectEventSecurityException) $r21;

        throw $r22;

     label6:
        r29 = new java.lang.RuntimeException;

        r33 = (java.util.concurrent.ExecutionException) r25;

        $r20 = virtualinvoke r33.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke r29.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r20);

        r34 = (java.lang.Throwable) r29;

        throw r34;

     label7:
        $r23 := @caughtexception;

        r26 = $r23;

        r30 = new java.lang.RuntimeException;

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("impossible.", r26);

        r35 = (java.lang.Throwable) r30;

        throw r35;

        catch java.util.concurrent.ExecutionException from label3 to label4 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label7;
    }

    public boolean injectMotionEvent(android.view.MotionEvent) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.view.MotionEvent r1;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r2, r33;
        java.lang.Throwable r4, $r18, $r19, $r20, $r22, $r23, $r25, $r27, r28, $r29, $r30, r31, r42, r43;
        android.os.Looper $r6, $r7;
        int $i0;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r10, $r13;
        java.util.concurrent.ExecutorService $r11;
        javax.inject.Provider $r12;
        java.lang.Object $r14, $r16;
        android.support.test.espresso.base.IdleNotifier $r15;
        boolean $z0, $z1, $z2, z3;
        java.lang.Boolean $r17;
        android.support.test.espresso.InjectEventSecurityException $r24;
        android.support.test.espresso.base.UiControllerImpl$3 r32;
        java.lang.RuntimeException r34, r35;
        java.util.concurrent.ExecutionException r36, r37, r38, r39, r40, r41;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r7 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r6 != $r7 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Expecting to be on main thread!");

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        r33 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        r32 = new android.support.test.espresso.base.UiControllerImpl$3;

        specialinvoke r32.<android.support.test.espresso.base.UiControllerImpl$3: void <init>(android.support.test.espresso.base.UiControllerImpl,android.view.MotionEvent)>(r0, r1);

        $r10 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r33.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, r32, $r10, $i0);

        r2 = r33;

        $r11 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>;

        interfaceinvoke $r11.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r2);

        $r13 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $r12 = r0.<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r14 = interfaceinvoke $r12.<javax.inject.Provider: java.lang.Object get()>();

        $r15 = (android.support.test.espresso.base.IdleNotifier) $r14;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopUntil(android.support.test.espresso.base.UiControllerImpl$IdleCondition,android.support.test.espresso.base.IdleNotifier)>($r13, $r15);

     label03:
        $z0 = virtualinvoke r2.<java.util.concurrent.FutureTask: boolean isDone()>();

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Key injection was signaled - but it wasnt done.");

        $r16 = virtualinvoke r2.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r17 = (java.lang.Boolean) $r16;

        z3 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

     label04:
        virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        return z3;

     label05:
        $r18 := @caughtexception;

        r28 = $r18;

        r36 = (java.util.concurrent.ExecutionException) r28;

        $r19 = virtualinvoke r36.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z1 = $r19 instanceof android.support.test.espresso.InjectEventSecurityException;

        if $z1 == 0 goto label06;

        r37 = (java.util.concurrent.ExecutionException) r28;

        $r23 = virtualinvoke r37.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r24 = (android.support.test.espresso.InjectEventSecurityException) $r23;

        throw $r24;

     label06:
        r38 = (java.util.concurrent.ExecutionException) r28;

        $r20 = virtualinvoke r38.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if $r20 == null goto label07;

        r39 = (java.util.concurrent.ExecutionException) r28;

        $r29 = virtualinvoke r39.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        goto label08;

     label07:
        $r29 = r28;

     label08:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r29);

        r34 = new java.lang.RuntimeException;

        r40 = (java.util.concurrent.ExecutionException) r28;

        $r22 = virtualinvoke r40.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if $r22 == null goto label09;

        r41 = (java.util.concurrent.ExecutionException) r28;

        $r30 = virtualinvoke r41.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        goto label10;

     label09:
        $r30 = r28;

     label10:
        specialinvoke r34.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        r42 = (java.lang.Throwable) r34;

        throw r42;

     label11:
        $r25 := @caughtexception;

        r31 = $r25;

        r35 = new java.lang.RuntimeException;

        specialinvoke r35.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r31);

        r43 = (java.lang.Throwable) r35;

        throw r43;

     label12:
        $r27 := @caughtexception;

        r4 = $r27;

     label13:
        virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        throw r4;

        catch java.util.concurrent.ExecutionException from label03 to label04 with label05;
        catch java.lang.InterruptedException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label13 with label12;
    }

    public boolean injectString(java.lang.String) throws android.support.test.espresso.InjectEventSecurityException
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        java.lang.String r1, $r10, $r11, $r15, $r18, $r21, $r24, $r25;
        android.view.KeyCharacterMap r2;
        android.view.KeyEvent[] r3, r4;
        int i0, $i1, $i3, $i4, $i5, $i6, i10, i11;
        android.os.Looper $r6, $r7;
        char[] $r8;
        java.lang.Object[] $r9, $r12, $r17, $r23;
        java.lang.Integer $r13, $r14, $r19, $r20;
        long $l8;
        boolean $z0, z1;
        android.view.KeyEvent r26;
        java.lang.RuntimeException r27;
        java.lang.Throwable r28;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r7 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r6 != $r7 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Expecting to be on main thread!");

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        $r25 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r25, "Supplied string is empty resulting in no-op (nothing is typed).");

        return 1;

     label3:
        z1 = 0;

        r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.view.KeyCharacterMap getKeyCharacterMap()>();

        $r8 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r3 = virtualinvoke r2.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r8);

        if r3 != null goto label4;

        r27 = new java.lang.RuntimeException;

        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r1;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get key events for string %s (i.e. current IME does not understand how to translate the string into key events). As a workaround, you can use replaceText action to set the text directly in the EditText field.", $r23);

        specialinvoke r27.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        r28 = (java.lang.Throwable) r27;

        throw r28;

     label4:
        $r10 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Injecting string: \"%s\"", $r9);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, $r11);

        r4 = r3;

        i0 = lengthof r4;

        i10 = 0;

     label5:
        if i10 >= i0 goto label9;

        r26 = r4[i10];

        $r12 = newarray (java.lang.Object)[2];

        $i3 = virtualinvoke r26.<android.view.KeyEvent: int getKeyCode()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[0] = $r13;

        $i4 = virtualinvoke r26.<android.view.KeyEvent: int getUnicodeChar()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r12[1] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get event for character (%c) with key code (%s)", $r12);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r26, $r15);

        z1 = 0;

        i11 = 0;

     label6:
        if z1 != 0 goto label7;

        if i11 >= 4 goto label7;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r26 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r26, $l8, 0);

        z1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl: boolean injectKeyEvent(android.view.KeyEvent)>(r26);

        i11 = i11 + 1;

        goto label6;

     label7:
        if z1 != 0 goto label8;

        $r18 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        $r17 = newarray (java.lang.Object)[2];

        $i5 = virtualinvoke r26.<android.view.KeyEvent: int getUnicodeChar()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r17[0] = $r19;

        $i6 = virtualinvoke r26.<android.view.KeyEvent: int getKeyCode()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r17[1] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to inject event for character (%c) with key code (%s)", $r17);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r18, $r21);

        goto label9;

     label8:
        i10 = i10 + 1;

        goto label5;

     label9:
        return z1;
    }

    public static android.view.KeyCharacterMap getKeyCharacterMap()
    {
        int $i0;
        android.view.KeyCharacterMap r0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        r0 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(0);

        goto label2;

     label1:
        r0 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

     label2:
        return r0;
    }

    public android.support.test.espresso.base.IdlingResourceRegistry getIdlingResourceRegistry()
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.IdlingResourceRegistry $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry>;

        return $r1;
    }

    public void loopMainThreadUntilIdle()
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        java.util.EnumSet r1;
        android.support.test.espresso.IdlingPolicy r2, r3;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r4, $r15, $r20, $r25;
        java.lang.Throwable r5, $r30;
        android.os.Looper $r6, $r7;
        javax.inject.Provider $r8;
        java.lang.Object $r9;
        android.support.test.espresso.base.IdleNotifier $r10, $r11, $r12, $r13, $r14, $r23, $r28, $r31, $r32, r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z8, $z9;
        int $i0, $i1, $i2;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r16, $r19, $r21, $r24, $r26, $r29;
        java.util.concurrent.Callable $r17, $r22, $r27;
        android.support.test.espresso.base.UiControllerImpl$4 $r18;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r7 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r6 != $r7 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z8, "Expecting to be on main thread!");

        $r8 = r0.<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r9 = interfaceinvoke $r8.<javax.inject.Provider: java.lang.Object get()>();

        r33 = (android.support.test.espresso.base.IdleNotifier) $r9;

     label03:
        r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Landroid/support/test/espresso/base/UiControllerImpl$IdleCondition;");

        $r34 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>;

        $z9 = interfaceinvoke $r34.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z9 != 0 goto label04;

        $r28 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>;

        $r25 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        $r27 = <android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r26 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        $i2 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke $r25.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r27, $r26, $i2);

        interfaceinvoke $r28.<android.support.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>($r25);

        $r29 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        virtualinvoke r1.<java.util.EnumSet: boolean add(java.lang.Object)>($r29);

     label04:
        $r10 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>;

        $z0 = interfaceinvoke $r10.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z0 != 0 goto label05;

        $r23 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>;

        $r20 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        $r22 = <android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r21 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        $i1 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke $r20.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r22, $r21, $i1);

        interfaceinvoke $r23.<android.support.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>($r20);

        $r24 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        virtualinvoke r1.<java.util.EnumSet: boolean add(java.lang.Object)>($r24);

     label05:
        $z1 = interfaceinvoke r33.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z1 != 0 goto label06;

        r2 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()>();

        r3 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()>();

        $r15 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        $r17 = <android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r16 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke $r15.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r17, $r16, $i0);

        r4 = $r15;

        $r18 = new android.support.test.espresso.base.UiControllerImpl$4;

        specialinvoke $r18.<android.support.test.espresso.base.UiControllerImpl$4: void <init>(android.support.test.espresso.base.UiControllerImpl,android.support.test.espresso.IdlingPolicy,android.support.test.espresso.IdlingPolicy,android.support.test.espresso.base.UiControllerImpl$SignalingTask)>(r0, r2, r3, r4);

        interfaceinvoke r33.<android.support.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>($r18);

        $r19 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        virtualinvoke r1.<java.util.EnumSet: boolean add(java.lang.Object)>($r19);

     label06:
        r33 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet,android.support.test.espresso.base.IdleNotifier)>(r1, r33);

     label07:
        $r11 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>;

        interfaceinvoke $r11.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        $r12 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>;

        interfaceinvoke $r12.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        interfaceinvoke r33.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        goto label10;

     label08:
        $r30 := @caughtexception;

        r5 = $r30;

     label09:
        $r31 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>;

        interfaceinvoke $r31.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        $r32 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>;

        interfaceinvoke $r32.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        interfaceinvoke r33.<android.support.test.espresso.base.IdleNotifier: void cancelCallback()>();

        throw r5;

     label10:
        $r13 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier asyncIdle>;

        $z2 = interfaceinvoke $r13.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z2 == 0 goto label03;

        $r14 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier compatIdle>;

        $z3 = interfaceinvoke $r14.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z3 == 0 goto label03;

        $z4 = interfaceinvoke r33.<android.support.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z4 == 0 goto label03;

        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void loopMainThreadForAtLeast(long)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        long l0, $l4, $l5;
        android.os.Looper $r1, $r2;
        java.util.BitSet $r3;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r4, $r6, $r11;
        boolean $z0, $z2, $z3, $z4;
        byte $b1;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask $r5;
        int $i2, $i3;
        java.util.concurrent.Callable $r7;
        android.os.Handler $r8;
        java.lang.Integer $r9;
        javax.inject.Provider $r10;
        java.lang.Object $r12;
        android.support.test.espresso.base.IdleNotifier $r13;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r1 != $r2 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Expecting to be on main thread!");

        $r4 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        $z0 = virtualinvoke $r4.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r3);

        if $z0 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z3, "recursion detected!");

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>($z4);

        $r8 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        $r5 = new android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        $r7 = <android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r6 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $i2 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke $r5.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(android.support.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,android.support.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r7, $r6, $i2);

        $i3 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $l4 + l0;

        virtualinvoke $r8.<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>($r5, $r9, $l5);

        $r11 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $r10 = r0.<android.support.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r12 = interfaceinvoke $r10.<javax.inject.Provider: java.lang.Object get()>();

        $r13 = (android.support.test.espresso.base.IdleNotifier) $r12;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopUntil(android.support.test.espresso.base.UiControllerImpl$IdleCondition,android.support.test.espresso.base.IdleNotifier)>($r11, $r13);

        virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.os.Message r1;
        java.lang.String r2, $r4, $r5, $r9;
        int $i0, $i1, $i2;
        java.util.BitSet $r3;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        $z0 = staticinvoke <android.support.test.espresso.base.UiControllerImpl$IdleCondition: boolean handleMessage(android.os.Message,java.util.BitSet,int)>(r1, $r3, $i0);

        if $z0 != 0 goto label1;

        $r4 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i2 = 22 + $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r9);

        return 0;

     label1:
        return 1;
    }

    private void loopUntil(android.support.test.espresso.base.UiControllerImpl$IdleCondition, android.support.test.espresso.base.IdleNotifier)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r1;
        android.support.test.espresso.base.IdleNotifier r2;
        java.util.EnumSet $r3;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r2 := @parameter1: android.support.test.espresso.base.IdleNotifier;

        $r3 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>(r1);

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet,android.support.test.espresso.base.IdleNotifier)>($r3, r2);

        return;
    }

    private android.support.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet, android.support.test.espresso.base.IdleNotifier)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        java.util.EnumSet r1;
        android.support.test.espresso.base.IdleNotifier r2, r35;
        android.support.test.espresso.IdlingPolicy r3;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r4, r8, r37, r40;
        long l0, $l1, $l2, $l4, l12;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus r5, $r14, $r15;
        java.lang.Throwable r6, $r32, r44;
        java.util.Iterator r7, r36, r39, r41;
        java.util.concurrent.TimeUnit $r9, $r20;
        java.util.BitSet $r11, $r24, $r26, $r31, $r34;
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r12, $r17, r42;
        java.lang.Object $r13, $r23, $r25, $r30, $r33;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.lang.Object[] $r16;
        int $i3, $i5, $i6, $i8, $i9, $i10, $i11;
        java.lang.Integer $r18;
        java.lang.Long $r19;
        java.lang.String $r21, $r22, $r27, $r28;
        java.util.ArrayList r38;
        java.lang.RuntimeException r43;
        java.util.List r45, r46;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: java.util.EnumSet;

        r2 := @parameter1: android.support.test.espresso.base.IdleNotifier;

        r3 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getMasterIdlingPolicy()>();

     label01:
        l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r9 = virtualinvoke r3.<android.support.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l1 = virtualinvoke r3.<android.support.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $l2 = virtualinvoke $r9.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1);

        l0 = l12 + $l2;

        r42 = new android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r11 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        specialinvoke r42.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: void <init>(java.util.EnumSet,java.util.BitSet,long)>(r1, $r11, l0);

        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = r42;

        $r12 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        $r13 = staticinvoke <android.support.test.espresso.base.Interrogator: java.lang.Object loopAndInterrogate(android.support.test.espresso.base.Interrogator$InterrogationHandler)>($r12);

        r5 = (android.support.test.espresso.base.UiControllerImpl$InterrogationStatus) $r13;

        $r14 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

        if $r14 != r5 goto label05;

        r35 = r2;

     label02:
        $i8 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        $i9 = $i8 + 1;

        r0.<android.support.test.espresso.base.UiControllerImpl: int generation> = $i9;

        r36 = virtualinvoke r1.<java.util.EnumSet: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r30 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r30;

        $r31 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke r37.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r31);

        goto label03;

     label04:
        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        return r35;

     label05:
        $r15 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        if $r15 != r5 goto label06;

        $r28 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r28, "Espresso interrogation of the main thread is interrupted");

        r43 = new java.lang.RuntimeException;

        specialinvoke r43.<java.lang.RuntimeException: void <init>(java.lang.String)>("Espresso interrogation of the main thread is interrupted");

        r44 = (java.lang.Throwable) r43;

        throw r44;

     label06:
        r38 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r39 = virtualinvoke r1.<java.util.EnumSet: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r25 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r25;

        $r26 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        $z2 = virtualinvoke r40.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r26);

        if $z2 != 0 goto label08;

        $r27 = virtualinvoke r40.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: java.lang.String name()>();

        r45 = (java.util.List) r38;

        interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27);

     label08:
        goto label07;

     label09:
        $r16 = newarray (java.lang.Object)[3];

        $r17 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        $i3 = staticinvoke <android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int access$300(android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation)>($r17);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r16[0] = $r18;

        $l4 = virtualinvoke r3.<android.support.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r16[1] = $r19;

        $r20 = virtualinvoke r3.<android.support.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $r21 = virtualinvoke $r20.<java.util.concurrent.TimeUnit: java.lang.String name()>();

        $r16[2] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Looped for %s iterations over %s %s.", $r16);

        r46 = (java.util.List) r38;

        virtualinvoke r3.<android.support.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r46, $r22);

     label10:
        $i5 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        $i6 = $i5 + 1;

        r0.<android.support.test.espresso.base.UiControllerImpl: int generation> = $i6;

        r41 = virtualinvoke r1.<java.util.EnumSet: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r23 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r23;

        $r24 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke r4.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r24);

        goto label11;

     label12:
        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        goto label17;

     label13:
        $r32 := @caughtexception;

        r6 = $r32;

     label14:
        $i10 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.base.UiControllerImpl: int generation> = $i11;

        r7 = virtualinvoke r1.<java.util.EnumSet: java.util.Iterator iterator()>();

     label15:
        $z5 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label16;

        $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r33;

        $r34 = r0.<android.support.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke r8.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r34);

        goto label15;

     label16:
        r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        throw r6;

     label17:
        return r2;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label05 to label10 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void interruptEspressoTasks()
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.UiControllerImpl$5 $r1;
        android.os.Handler $r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl: void initialize()>();

        $r2 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        $r1 = new android.support.test.espresso.base.UiControllerImpl$5;

        specialinvoke $r1.<android.support.test.espresso.base.UiControllerImpl$5: void <init>(android.support.test.espresso.base.UiControllerImpl)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void initialize()
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.os.Handler $r1, $r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        if $r1 != null goto label1;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Handler$Callback)>(r0);

        r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler> = $r2;

     label1:
        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        return $r0;
    }

    static android.support.test.espresso.base.EventInjector access$100(android.support.test.espresso.base.UiControllerImpl)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.EventInjector $r1;

        r0 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.EventInjector eventInjector>;

        return $r1;
    }

    static android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        return $r1;
    }

    static android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation access$400(android.support.test.espresso.base.UiControllerImpl)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r1;

        r0 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        return $r1;
    }

    static int access$500(android.support.test.espresso.base.UiControllerImpl)
    {
        android.support.test.espresso.base.UiControllerImpl r0;
        int $i0;

        r0 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl: int generation>;

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.support.test.espresso.base.UiControllerImpl$1 $r2;

        $r0 = class "Landroid/support/test/espresso/base/UiControllerImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.base.UiControllerImpl: java.lang.String TAG> = $r1;

        $r2 = new android.support.test.espresso.base.UiControllerImpl$1;

        specialinvoke $r2.<android.support.test.espresso.base.UiControllerImpl$1: void <init>()>();

        <android.support.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP> = $r2;

        return;
    }

android.support.test.espresso.base.UiControllerImpl$1
    void <init>()
    {
        android.support.test.espresso.base.UiControllerImpl$1 r0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call()
    {
        android.support.test.espresso.base.UiControllerImpl$1 r0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$1;

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.UiControllerImpl$1 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$1;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$1: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.base.UiControllerImpl$2
<android.support.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event>
<android.support.test.espresso.base.UiControllerImpl$2: android.support.test.espresso.base.UiControllerImpl this$0>
    void <init>(android.support.test.espresso.base.UiControllerImpl, android.view.KeyEvent)
    {
        android.support.test.espresso.base.UiControllerImpl$2 r0;
        android.support.test.espresso.base.UiControllerImpl r1;
        android.view.KeyEvent r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$2;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: android.view.KeyEvent;

        r0.<android.support.test.espresso.base.UiControllerImpl$2: android.support.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<android.support.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Boolean call() throws java.lang.Exception
    {
        android.support.test.espresso.base.UiControllerImpl$2 r0;
        android.support.test.espresso.base.UiControllerImpl $r1;
        android.support.test.espresso.base.EventInjector $r2;
        android.view.KeyEvent $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$2;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$2: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.EventInjector access$100(android.support.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event>;

        $z0 = virtualinvoke $r2.<android.support.test.espresso.base.EventInjector: boolean injectKeyEvent(android.view.KeyEvent)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.UiControllerImpl$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$2: java.lang.Boolean call()>();

        return $r1;
    }

android.support.test.espresso.base.UiControllerImpl$3
<android.support.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event>
<android.support.test.espresso.base.UiControllerImpl$3: android.support.test.espresso.base.UiControllerImpl this$0>
    void <init>(android.support.test.espresso.base.UiControllerImpl, android.view.MotionEvent)
    {
        android.support.test.espresso.base.UiControllerImpl$3 r0;
        android.support.test.espresso.base.UiControllerImpl r1;
        android.view.MotionEvent r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$3;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: android.view.MotionEvent;

        r0.<android.support.test.espresso.base.UiControllerImpl$3: android.support.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<android.support.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Boolean call() throws java.lang.Exception
    {
        android.support.test.espresso.base.UiControllerImpl$3 r0;
        android.support.test.espresso.base.UiControllerImpl $r1;
        android.support.test.espresso.base.EventInjector $r2;
        android.view.MotionEvent $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$3;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$3: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.EventInjector access$100(android.support.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event>;

        $z0 = virtualinvoke $r2.<android.support.test.espresso.base.EventInjector: boolean injectMotionEvent(android.view.MotionEvent)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.UiControllerImpl$3 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$3;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$3: java.lang.Boolean call()>();

        return $r1;
    }

android.support.test.espresso.base.UiControllerImpl$4
<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$warning>
<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$error>
<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>
<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl this$0>
    void <init>(android.support.test.espresso.base.UiControllerImpl, android.support.test.espresso.IdlingPolicy, android.support.test.espresso.IdlingPolicy, android.support.test.espresso.base.UiControllerImpl$SignalingTask)
    {
        android.support.test.espresso.base.UiControllerImpl$4 r0;
        android.support.test.espresso.base.UiControllerImpl r1;
        android.support.test.espresso.IdlingPolicy r2, r3;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r4;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$4;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: android.support.test.espresso.IdlingPolicy;

        r3 := @parameter2: android.support.test.espresso.IdlingPolicy;

        r4 := @parameter3: android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$warning> = r2;

        r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$error> = r3;

        r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void resourcesStillBusyWarning(java.util.List)
    {
        android.support.test.espresso.base.UiControllerImpl$4 r0;
        java.util.List r1;
        android.support.test.espresso.IdlingPolicy $r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$4;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$warning>;

        virtualinvoke $r2.<android.support.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r1, "IdlingResources are still busy!");

        return;
    }

    public void resourcesHaveTimedOut(java.util.List)
    {
        android.support.test.espresso.base.UiControllerImpl$4 r0;
        java.util.List r1;
        android.support.test.espresso.IdlingPolicy $r2;
        android.support.test.espresso.base.UiControllerImpl $r3;
        android.os.Handler $r4;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask $r5;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$4;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.IdlingPolicy val$error>;

        virtualinvoke $r2.<android.support.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r1, "IdlingResources have timed out!");

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r4 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)>($r3);

        $r5 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void allResourcesIdle()
    {
        android.support.test.espresso.base.UiControllerImpl$4 r0;
        android.support.test.espresso.base.UiControllerImpl $r1;
        android.os.Handler $r2;
        android.support.test.espresso.base.UiControllerImpl$SignalingTask $r3;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$4;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$4: android.support.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

android.support.test.espresso.base.UiControllerImpl$5
<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0>
    void <init>(android.support.test.espresso.base.UiControllerImpl)
    {
        android.support.test.espresso.base.UiControllerImpl$5 r0;
        android.support.test.espresso.base.UiControllerImpl r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$5;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        r0.<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.espresso.base.UiControllerImpl$5 r0;
        android.support.test.espresso.base.UiControllerImpl $r1, $r3, $r5, $r7;
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r2, $r4;
        android.os.Handler $r6;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$5;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation access$400(android.support.test.espresso.base.UiControllerImpl)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r4 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation access$400(android.support.test.espresso.base.UiControllerImpl)>($r3);

        virtualinvoke $r4.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: void interruptInterrogation()>();

        $r5 = r0.<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r6 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)>($r5);

        $r7 = r0.<android.support.test.espresso.base.UiControllerImpl$5: android.support.test.espresso.base.UiControllerImpl this$0>;

        $i0 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: int access$500(android.support.test.espresso.base.UiControllerImpl)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r8);

     label1:
        return;
    }

android.support.test.espresso.base.UiControllerImpl$IdleCondition
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>
<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES>
    public static android.support.test.espresso.base.UiControllerImpl$IdleCondition[] values()
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition[]) $r1;

        return $r2;
    }

    public static android.support.test.espresso.base.UiControllerImpl$IdleCondition valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/test/espresso/base/UiControllerImpl$IdleCondition;", r0);

        $r2 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean isSignaled(java.util.BitSet)
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $z0 = virtualinvoke r1.<java.util.BitSet: boolean get(int)>($i0);

        return $z0;
    }

    public void reset(java.util.BitSet)
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        virtualinvoke r1.<java.util.BitSet: void set(int,boolean)>($i0, 0);

        return;
    }

    public android.os.Message createSignal(android.os.Handler, int)
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r0;
        android.os.Handler r1;
        int i0, $i1;
        android.os.Message $r2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>(r1, $i1, i0, 0, null);

        return $r2;
    }

    public static boolean handleMessage(android.os.Message, java.util.BitSet, int)
    {
        android.os.Message r0;
        java.util.BitSet r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition[] r2;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r3;
        java.lang.String r4, $r5, $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @parameter0: android.os.Message;

        r1 := @parameter1: java.util.BitSet;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition[] values()>();

        $i2 = r0.<android.os.Message: int what>;

        if $i2 < 0 goto label1;

        $i4 = r0.<android.os.Message: int what>;

        $i3 = lengthof r2;

        if $i4 < $i3 goto label2;

     label1:
        return 0;

     label2:
        $i5 = r0.<android.os.Message: int what>;

        r3 = r2[$i5];

        $i6 = r0.<android.os.Message: int arg1>;

        if $i6 != i0 goto label3;

        virtualinvoke r3.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void signal(java.util.BitSet)>(r1);

        goto label4;

     label3:
        $r5 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: java.lang.String access$000()>();

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        i1 = r0.<android.os.Message: int arg1>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $i7 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i8 = 90 + $i7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring signal of: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from previous generation: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current generation: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r14);

     label4:
        return 1;
    }

    public static java.util.BitSet createConditionSet()
    {
        java.util.BitSet $r0;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $r1;
        int $i0;

        $r0 = new java.util.BitSet;

        $r1 = staticinvoke <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition[] values()>();

        $i0 = lengthof $r1;

        specialinvoke $r0.<java.util.BitSet: void <init>(int)>($i0);

        return $r0;
    }

    protected void signal(java.util.BitSet)
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        virtualinvoke r1.<java.util.BitSet: void set(int)>($i0);

        return;
    }

    static void <clinit>()
    {
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $r6;

        $r0 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r0.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("DELAY_HAS_PAST", 0);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST> = $r0;

        $r1 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r1.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("ASYNC_TASKS_HAVE_IDLED", 1);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED> = $r1;

        $r2 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r2.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("COMPAT_TASKS_HAVE_IDLED", 2);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED> = $r2;

        $r3 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r3.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("KEY_INJECT_HAS_COMPLETED", 3);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED> = $r3;

        $r4 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r4.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("MOTION_INJECTION_HAS_COMPLETED", 4);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED> = $r4;

        $r5 = new android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke $r5.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("DYNAMIC_TASKS_HAVE_IDLED", 5);

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED> = $r5;

        $r6 = newarray (android.support.test.espresso.base.UiControllerImpl$IdleCondition)[6];

        $r7 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $r6[0] = $r7;

        $r8 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        $r6[1] = $r8;

        $r9 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        $r6[2] = $r9;

        $r10 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        $r6[3] = $r10;

        $r11 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $r6[4] = $r11;

        $r12 = <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        $r6[5] = $r12;

        <android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.support.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES> = $r6;

        return;
    }

android.support.test.espresso.base.UiControllerImpl$InterrogationStatus
<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>
<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>
<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>
<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES>
    public static android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] values()
    {
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[]) $r1;

        return $r2;
    }

    public static android.support.test.espresso.base.UiControllerImpl$InterrogationStatus valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/test/espresso/base/UiControllerImpl$InterrogationStatus;", r0);

        $r2 = (android.support.test.espresso.base.UiControllerImpl$InterrogationStatus) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r0, $r1, $r2, $r4, $r5, $r6;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] $r3;

        $r0 = new android.support.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke $r0.<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("TIMED_OUT", 0);

        <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT> = $r0;

        $r1 = new android.support.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke $r1.<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("COMPLETED", 1);

        <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED> = $r1;

        $r2 = new android.support.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke $r2.<android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("INTERRUPTED", 2);

        <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED> = $r2;

        $r3 = newarray (android.support.test.espresso.base.UiControllerImpl$InterrogationStatus)[3];

        $r4 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>;

        $r3[0] = $r4;

        $r5 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

        $r3[1] = $r5;

        $r6 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        $r3[2] = $r6;

        <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES> = $r3;

        return;
    }

android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation
<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions>
<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet>
<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs>
<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status>
<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>
    void <init>(java.util.EnumSet, java.util.BitSet, long)
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        java.util.EnumSet r1;
        java.util.BitSet r2;
        long l0;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r3;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        r1 := @parameter0: java.util.EnumSet;

        r2 := @parameter1: java.util.BitSet;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r3;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount> = 0;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions> = r1;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet> = r2;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs> = l0;

        return;
    }

    public void quitting()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        return;
    }

    public boolean barrierUp()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

    public boolean queueEmpty()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean conditionsMet()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean taskDueSoon()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

    public boolean taskDueLong()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean conditionsMet()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean beforeTaskDispatch()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        $i1 = $i0 + 1;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount> = $i1;

        $z0 = specialinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

    private boolean continueOrTimeout()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r1, $r2, $r3;
        long $l0, $l1;
        byte $b2;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r2 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs>;

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label2;

        $r3 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r3;

        return 0;

     label2:
        return 1;
    }

    void interruptInterrogation()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r1;

        return;
    }

    public android.support.test.espresso.base.UiControllerImpl$InterrogationStatus get()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        return $r1;
    }

    private boolean conditionsMet()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean z0, $z1, z2, $z3, $z4;
        java.util.Iterator r1;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r2;
        java.lang.String r3, $r8, $r9, $r16;
        int i0, $i1, $i2, $i3, $i5, $i6;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r4, $r5;
        java.lang.Object $r6;
        java.util.BitSet $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15;
        java.util.EnumSet $r17;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r5 = <android.support.test.espresso.base.UiControllerImpl$InterrogationStatus: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        $r4 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        if $r5 != $r4 goto label1;

        return 1;

     label1:
        z2 = 1;

        $i1 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        if $i1 <= 0 goto label2;

        $i5 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        $i6 = $i5 % 100;

        if $i6 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        $r17 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions>;

        r1 = virtualinvoke $r17.<java.util.EnumSet: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r6;

        $r7 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet>;

        $z1 = virtualinvoke r2.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r7);

        if $z1 != 0 goto label5;

        z2 = 0;

        if z0 == 0 goto label6;

        $r8 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: java.lang.String access$000()>();

        r3 = virtualinvoke r2.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: java.lang.String name()>();

        i0 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i3 = 41 + $i2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iterations.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r16);

     label5:
        goto label4;

     label6:
        return z2;
    }

    public volatile java.lang.Object get()
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        android.support.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: android.support.test.espresso.base.UiControllerImpl$InterrogationStatus get()>();

        return $r1;
    }

    static int access$300(android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation)
    {
        android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        int $i0;

        r0 := @parameter0: android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        return $i0;
    }

android.support.test.espresso.base.UiControllerImpl$SignalingTask
<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl$IdleCondition condition>
<android.support.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration>
<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl this$0>
    public void <init>(android.support.test.espresso.base.UiControllerImpl, java.util.concurrent.Callable, android.support.test.espresso.base.UiControllerImpl$IdleCondition, int)
    {
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r0;
        android.support.test.espresso.base.UiControllerImpl r1;
        java.util.concurrent.Callable r2;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition r3, $r5;
        int i0;
        java.lang.Object $r4;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        r1 := @parameter0: android.support.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: java.util.concurrent.Callable;

        r3 := @parameter2: android.support.test.espresso.base.UiControllerImpl$IdleCondition;

        i0 := @parameter3: int;

        r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl this$0> = r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r2);

        $r4 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (android.support.test.espresso.base.UiControllerImpl$IdleCondition) $r4;

        r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl$IdleCondition condition> = $r5;

        r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration> = i0;

        return;
    }

    protected void done()
    {
        android.support.test.espresso.base.UiControllerImpl$SignalingTask r0;
        android.support.test.espresso.base.UiControllerImpl $r1, $r3;
        android.os.Handler $r2, $r5;
        android.support.test.espresso.base.UiControllerImpl$IdleCondition $r4;
        int $i0;
        android.os.Message $r6;

        r0 := @this: android.support.test.espresso.base.UiControllerImpl$SignalingTask;

        $r1 = r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)>($r1);

        $r4 = r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl$IdleCondition condition>;

        $r3 = r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: android.support.test.espresso.base.UiControllerImpl this$0>;

        $r5 = staticinvoke <android.support.test.espresso.base.UiControllerImpl: android.os.Handler access$200(android.support.test.espresso.base.UiControllerImpl)>($r3);

        $i0 = r0.<android.support.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration>;

        $r6 = virtualinvoke $r4.<android.support.test.espresso.base.UiControllerImpl$IdleCondition: android.os.Message createSignal(android.os.Handler,int)>($r5, $i0);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

