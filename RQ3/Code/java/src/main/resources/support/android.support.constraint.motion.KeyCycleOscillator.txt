android.support.constraint.motion.KeyCycleOscillator
<android.support.constraint.motion.KeyCycleOscillator: java.lang.String TAG>
<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>
<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator>
<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.ConstraintAttribute mCustom>
<android.support.constraint.motion.KeyCycleOscillator: java.lang.String mType>
<android.support.constraint.motion.KeyCycleOscillator: int mWaveShape>
<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy>
<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>
    public void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator: int mWaveShape> = 0;

        r0.<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints> = $r1;

        return;
    }

    public boolean variesByPath()
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        $i0 = r0.<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        java.text.DecimalFormat r1, $r4;
        java.util.Iterator r2;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint r3;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        int $i0;
        float $f0;
        double $d0;
        java.lang.String $r12, r15;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        r15 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.lang.String mType>;

        $r4 = new java.text.DecimalFormat;

        specialinvoke $r4.<java.text.DecimalFormat: void <init>(java.lang.String)>("##.##");

        r1 = $r4;

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.constraint.motion.KeyCycleOscillator$WavePoint) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r3.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $f0 = r3.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mValue>;

        $d0 = (double) $f0;

        $r12 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r15;
    }

    public void setType(java.lang.String)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        java.lang.String r1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        r1 := @parameter0: java.lang.String;

        r0.<android.support.constraint.motion.KeyCycleOscillator: java.lang.String mType> = r1;

        return;
    }

<android.support.constraint.motion.KeyCycleOscillator: void setProperty(android.view.View,float)>
    public float get(float)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        float f0, $f1;
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator $r1;
        double $d0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $d0 = virtualinvoke $r1.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double getValues(float)>(f0);

        $f1 = (float) $d0;

        return $f1;
    }

    public float getSlope(float)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        float f0, $f1;
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator $r1;
        double $d0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $d0 = virtualinvoke $r1.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double getSlope(float)>(f0);

        $f1 = (float) $d0;

        return $f1;
    }

    public android.support.constraint.motion.utils.CurveFit getCurveFit()
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        android.support.constraint.motion.utils.CurveFit $r1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        return $r1;
    }

    static android.support.constraint.motion.KeyCycleOscillator makeSpline(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int $i0;
        android.support.constraint.motion.KeyCycleOscillator$ProgressSet $r2;
        android.support.constraint.motion.KeyCycleOscillator$TranslationZset $r3;
        android.support.constraint.motion.KeyCycleOscillator$TranslationYset $r4;
        android.support.constraint.motion.KeyCycleOscillator$TranslationXset $r5;
        android.support.constraint.motion.KeyCycleOscillator$AlphaSet $r6, $r7, $r15;
        android.support.constraint.motion.KeyCycleOscillator$ScaleYset $r8;
        android.support.constraint.motion.KeyCycleOscillator$ScaleXset $r9;
        android.support.constraint.motion.KeyCycleOscillator$PathRotateSet $r10;
        android.support.constraint.motion.KeyCycleOscillator$RotationYset $r11;
        android.support.constraint.motion.KeyCycleOscillator$RotationXset $r12;
        android.support.constraint.motion.KeyCycleOscillator$RotationSet $r13;
        android.support.constraint.motion.KeyCycleOscillator$ElevationSet $r14;
        android.support.constraint.motion.KeyCycleOscillator$CustomSet $r16;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("CUSTOM");

        if $z0 == 0 goto label01;

        $r16 = new android.support.constraint.motion.KeyCycleOscillator$CustomSet;

        specialinvoke $r16.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: void <init>()>();

        return $r16;

     label01:
        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1249320806: goto label05;
            case -1249320805: goto label06;
            case -1225497657: goto label12;
            case -1225497656: goto label13;
            case -1225497655: goto label14;
            case -1001078227: goto label15;
            case -908189618: goto label08;
            case -908189617: goto label09;
            case -797520672: goto label11;
            case -40300674: goto label04;
            case -4379043: goto label03;
            case 37232917: goto label07;
            case 92909918: goto label02;
            case 156108012: goto label10;
            default: goto label16;
        };

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z2 == 0 goto label16;

        b1 = 0;

        goto label16;

     label03:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("elevation");

        if $z4 == 0 goto label16;

        b1 = 1;

        goto label16;

     label04:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotation");

        if $z5 == 0 goto label16;

        b1 = 2;

        goto label16;

     label05:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotationX");

        if $z14 == 0 goto label16;

        b1 = 3;

        goto label16;

     label06:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotationY");

        if $z13 == 0 goto label16;

        b1 = 4;

        goto label16;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("transitionPathRotate");

        if $z3 == 0 goto label16;

        b1 = 5;

        goto label16;

     label08:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z8 == 0 goto label16;

        b1 = 6;

        goto label16;

     label09:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z7 == 0 goto label16;

        b1 = 7;

        goto label16;

     label10:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("waveOffset");

        if $z1 == 0 goto label16;

        b1 = 8;

        goto label16;

     label11:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("waveVariesBy");

        if $z6 == 0 goto label16;

        b1 = 9;

        goto label16;

     label12:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationX");

        if $z12 == 0 goto label16;

        b1 = 10;

        goto label16;

     label13:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationY");

        if $z11 == 0 goto label16;

        b1 = 11;

        goto label16;

     label14:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationZ");

        if $z10 == 0 goto label16;

        b1 = 12;

        goto label16;

     label15:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("progress");

        if $z9 == 0 goto label16;

        b1 = 13;

     label16:
        tableswitch(b1)
        {
            case 0: goto label17;
            case 1: goto label18;
            case 2: goto label19;
            case 3: goto label20;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label23;
            case 7: goto label24;
            case 8: goto label25;
            case 9: goto label26;
            case 10: goto label27;
            case 11: goto label28;
            case 12: goto label29;
            case 13: goto label30;
            default: goto label31;
        };

     label17:
        $r15 = new android.support.constraint.motion.KeyCycleOscillator$AlphaSet;

        specialinvoke $r15.<android.support.constraint.motion.KeyCycleOscillator$AlphaSet: void <init>()>();

        return $r15;

     label18:
        $r14 = new android.support.constraint.motion.KeyCycleOscillator$ElevationSet;

        specialinvoke $r14.<android.support.constraint.motion.KeyCycleOscillator$ElevationSet: void <init>()>();

        return $r14;

     label19:
        $r13 = new android.support.constraint.motion.KeyCycleOscillator$RotationSet;

        specialinvoke $r13.<android.support.constraint.motion.KeyCycleOscillator$RotationSet: void <init>()>();

        return $r13;

     label20:
        $r12 = new android.support.constraint.motion.KeyCycleOscillator$RotationXset;

        specialinvoke $r12.<android.support.constraint.motion.KeyCycleOscillator$RotationXset: void <init>()>();

        return $r12;

     label21:
        $r11 = new android.support.constraint.motion.KeyCycleOscillator$RotationYset;

        specialinvoke $r11.<android.support.constraint.motion.KeyCycleOscillator$RotationYset: void <init>()>();

        return $r11;

     label22:
        $r10 = new android.support.constraint.motion.KeyCycleOscillator$PathRotateSet;

        specialinvoke $r10.<android.support.constraint.motion.KeyCycleOscillator$PathRotateSet: void <init>()>();

        return $r10;

     label23:
        $r9 = new android.support.constraint.motion.KeyCycleOscillator$ScaleXset;

        specialinvoke $r9.<android.support.constraint.motion.KeyCycleOscillator$ScaleXset: void <init>()>();

        return $r9;

     label24:
        $r8 = new android.support.constraint.motion.KeyCycleOscillator$ScaleYset;

        specialinvoke $r8.<android.support.constraint.motion.KeyCycleOscillator$ScaleYset: void <init>()>();

        return $r8;

     label25:
        $r7 = new android.support.constraint.motion.KeyCycleOscillator$AlphaSet;

        specialinvoke $r7.<android.support.constraint.motion.KeyCycleOscillator$AlphaSet: void <init>()>();

        return $r7;

     label26:
        $r6 = new android.support.constraint.motion.KeyCycleOscillator$AlphaSet;

        specialinvoke $r6.<android.support.constraint.motion.KeyCycleOscillator$AlphaSet: void <init>()>();

        return $r6;

     label27:
        $r5 = new android.support.constraint.motion.KeyCycleOscillator$TranslationXset;

        specialinvoke $r5.<android.support.constraint.motion.KeyCycleOscillator$TranslationXset: void <init>()>();

        return $r5;

     label28:
        $r4 = new android.support.constraint.motion.KeyCycleOscillator$TranslationYset;

        specialinvoke $r4.<android.support.constraint.motion.KeyCycleOscillator$TranslationYset: void <init>()>();

        return $r4;

     label29:
        $r3 = new android.support.constraint.motion.KeyCycleOscillator$TranslationZset;

        specialinvoke $r3.<android.support.constraint.motion.KeyCycleOscillator$TranslationZset: void <init>()>();

        return $r3;

     label30:
        $r2 = new android.support.constraint.motion.KeyCycleOscillator$ProgressSet;

        specialinvoke $r2.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: void <init>()>();

        return $r2;

     label31:
        return null;
    }

    public void setPoint(int, int, int, float, float, float, android.support.constraint.ConstraintAttribute)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        int i0, i1, i2;
        float f0, f1, f2;
        android.support.constraint.ConstraintAttribute r1;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        r1 := @parameter6: android.support.constraint.ConstraintAttribute;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r2 = new android.support.constraint.motion.KeyCycleOscillator$WavePoint;

        specialinvoke $r2.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: void <init>(int,float,float,float)>(i0, f0, f1, f2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if i2 == -1 goto label1;

        r0.<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy> = i2;

     label1:
        r0.<android.support.constraint.motion.KeyCycleOscillator: int mWaveShape> = i1;

        r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.ConstraintAttribute mCustom> = r1;

        return;
    }

    public void setPoint(int, int, int, float, float, float)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        int i0, i1, i2;
        float f0, f1, f2;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r1 = new android.support.constraint.motion.KeyCycleOscillator$WavePoint;

        specialinvoke $r1.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: void <init>(int,float,float,float)>(i0, f0, f1, f2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        if i2 == -1 goto label1;

        r0.<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy> = i2;

     label1:
        r0.<android.support.constraint.motion.KeyCycleOscillator: int mWaveShape> = i1;

        return;
    }

    public void setup(float)
    {
        android.support.constraint.motion.KeyCycleOscillator r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int i0, $i1, $i2, $i3, i4;
        double[] r1, $r13, $r14;
        double[][] r2;
        java.util.Iterator r3;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint r4;
        java.util.ArrayList $r5, $r7, $r9;
        android.support.constraint.motion.KeyCycleOscillator$1 $r6;
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator $r8, $r10, $r15;
        boolean $z0;
        android.support.constraint.motion.utils.CurveFit $r11;
        java.lang.Object $r12;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r6 = new android.support.constraint.motion.KeyCycleOscillator$1;

        specialinvoke $r6.<android.support.constraint.motion.KeyCycleOscillator$1: void <init>(android.support.constraint.motion.KeyCycleOscillator)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r7, $r6);

        r1 = newarray (double)[i0];

        r2 = newmultiarray (double)[i0][2];

        $r8 = new android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        $i2 = r0.<android.support.constraint.motion.KeyCycleOscillator: int mWaveShape>;

        $i1 = r0.<android.support.constraint.motion.KeyCycleOscillator: int mVariesBy>;

        specialinvoke $r8.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: void <init>(int,int,int)>($i2, $i1, i0);

        r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator> = $r8;

        i4 = 0;

        $r9 = r0.<android.support.constraint.motion.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.support.constraint.motion.KeyCycleOscillator$WavePoint) $r12;

        $f1 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mPeriod>;

        $d0 = (double) $f1;

        $d1 = $d0 * 0.01;

        r1[i4] = $d1;

        $r13 = r2[i4];

        $f2 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mValue>;

        $d2 = (double) $f2;

        $r13[0] = $d2;

        $r14 = r2[i4];

        $f3 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mOffset>;

        $d3 = (double) $f3;

        $r14[1] = $d3;

        $r15 = r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $i3 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition>;

        $f6 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mPeriod>;

        $f5 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mOffset>;

        $f4 = r4.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mValue>;

        virtualinvoke $r15.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: void setPoint(int,int,float,float,float)>(i4, $i3, $f6, $f5, $f4);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r10 = r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        virtualinvoke $r10.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: void setup(float)>(f0);

        $r11 = staticinvoke <android.support.constraint.motion.utils.CurveFit: android.support.constraint.motion.utils.CurveFit get(int,double[],double[][])>(0, r1, r2);

        r0.<android.support.constraint.motion.KeyCycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit> = $r11;

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$1
<android.support.constraint.motion.KeyCycleOscillator$1: android.support.constraint.motion.KeyCycleOscillator this$0>
    void <init>(android.support.constraint.motion.KeyCycleOscillator)
    {
        android.support.constraint.motion.KeyCycleOscillator$1 r0;
        android.support.constraint.motion.KeyCycleOscillator r1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$1;

        r1 := @parameter0: android.support.constraint.motion.KeyCycleOscillator;

        r0.<android.support.constraint.motion.KeyCycleOscillator$1: android.support.constraint.motion.KeyCycleOscillator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.support.constraint.motion.KeyCycleOscillator$WavePoint, android.support.constraint.motion.KeyCycleOscillator$WavePoint)
    {
        android.support.constraint.motion.KeyCycleOscillator$1 r0;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$1;

        r1 := @parameter0: android.support.constraint.motion.KeyCycleOscillator$WavePoint;

        r2 := @parameter1: android.support.constraint.motion.KeyCycleOscillator$WavePoint;

        $i1 = r1.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition>;

        $i0 = r2.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.support.constraint.motion.KeyCycleOscillator$1 r0;
        java.lang.Object r1, r2;
        android.support.constraint.motion.KeyCycleOscillator$WavePoint $r3, $r4;
        int $i0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.constraint.motion.KeyCycleOscillator$WavePoint) r1;

        $r3 = (android.support.constraint.motion.KeyCycleOscillator$WavePoint) r2;

        $i0 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$1: int compare(android.support.constraint.motion.KeyCycleOscillator$WavePoint,android.support.constraint.motion.KeyCycleOscillator$WavePoint)>($r4, $r3);

        return $i0;
    }

android.support.constraint.motion.KeyCycleOscillator$AlphaSet
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$AlphaSet r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$AlphaSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$AlphaSet r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$AlphaSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$AlphaSet: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$CustomSet
<android.support.constraint.motion.KeyCycleOscillator$CustomSet: float[] value>
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$CustomSet r0;
        float[] $r1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CustomSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        $r1 = newarray (float)[1];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: float[] value> = $r1;

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$CustomSet r0;
        android.view.View r1;
        float f0, $f1;
        float[] $r2, $r3;
        android.support.constraint.ConstraintAttribute $r4;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CustomSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: float[] value>;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: float get(float)>(f0);

        $r2[0] = $f1;

        $r4 = r0.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: android.support.constraint.ConstraintAttribute mCustom>;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CustomSet: float[] value>;

        virtualinvoke $r4.<android.support.constraint.ConstraintAttribute: void setInterpolatedValue(android.view.View,float[])>(r1, $r3);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$CycleOscillator
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: int UNSET>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.lang.String TAG>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: int mVariesBy>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mOffset>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mScale>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: int mWaveShape>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float mPathLength>
<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.util.HashMap mCustomConstraints>
    void <init>(int, int, int)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        int i0, i1, i2;
        android.support.constraint.motion.utils.Oscillator $r1, $r3;
        java.util.HashMap $r2;
        float[] $r4, $r6, $r7, $r8;
        double[] $r5;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.support.constraint.motion.utils.Oscillator;

        specialinvoke $r1.<android.support.constraint.motion.utils.Oscillator: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.util.HashMap mCustomConstraints> = $r2;

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: int mWaveShape> = i0;

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: int mVariesBy> = i1;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        virtualinvoke $r3.<android.support.constraint.motion.utils.Oscillator: void setType(int)>(i0);

        $r4 = newarray (float)[i2];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues> = $r4;

        $r5 = newarray (double)[i2];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition> = $r5;

        $r6 = newarray (float)[i2];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod> = $r6;

        $r7 = newarray (float)[i2];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mOffset> = $r7;

        $r8 = newarray (float)[i2];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mScale> = $r8;

        return;
    }

    public double getValues(float)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        float f0, $f1, $f2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        android.support.constraint.motion.utils.CurveFit $r1, $r10;
        float[] $r2, $r4;
        double[] $r3, $r5, $r6, $r8, $r9;
        android.support.constraint.motion.utils.Oscillator $r7;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        if $r1 == null goto label1;

        $r10 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        $d8 = (double) f0;

        $r9 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        virtualinvoke $r10.<android.support.constraint.motion.utils.CurveFit: void getPos(double,double[])>($d8, $r9);

        goto label2;

     label1:
        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $f1 = $r2[0];

        $d2 = (double) $f1;

        $r3[0] = $d2;

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $r4 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $f2 = $r4[0];

        $d3 = (double) $f2;

        $r5[1] = $d3;

     label2:
        $r6 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        d0 = $r6[0];

        $r7 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $d4 = (double) f0;

        d1 = virtualinvoke $r7.<android.support.constraint.motion.utils.Oscillator: double getValue(double)>($d4);

        $r8 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d5 = $r8[1];

        $d6 = d1 * $d5;

        $d7 = d0 + $d6;

        return $d7;
    }

    public double getSlope(float)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        float f0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        android.support.constraint.motion.utils.CurveFit $r1, $r10, $r12;
        double[] $r2, $r3, $r6, $r7, $r8, $r9, $r11;
        android.support.constraint.motion.utils.Oscillator $r4, $r5;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        if $r1 == null goto label1;

        $r10 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        $d11 = (double) f0;

        $r9 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        virtualinvoke $r10.<android.support.constraint.motion.utils.CurveFit: void getSlope(double,double[])>($d11, $r9);

        $r12 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        $d12 = (double) f0;

        $r11 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        virtualinvoke $r12.<android.support.constraint.motion.utils.CurveFit: void getPos(double,double[])>($d12, $r11);

        goto label2;

     label1:
        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $r2[0] = 0.0;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $r3[1] = 0.0;

     label2:
        $r4 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $d2 = (double) f0;

        d0 = virtualinvoke $r4.<android.support.constraint.motion.utils.Oscillator: double getValue(double)>($d2);

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $d3 = (double) f0;

        d1 = virtualinvoke $r5.<android.support.constraint.motion.utils.Oscillator: double getSlope(double)>($d3);

        $r6 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $d6 = $r6[0];

        $r7 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $d4 = $r7[1];

        $d5 = d0 * $d4;

        $d9 = $d6 + $d5;

        $r8 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d7 = $r8[1];

        $d8 = d1 * $d7;

        $d10 = $d9 + $d8;

        return $d10;
    }

    private android.support.constraint.ConstraintAttribute get(java.lang.String, android.support.constraint.ConstraintAttribute$AttributeType)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        java.lang.String r1, $r14, $r16;
        android.support.constraint.ConstraintAttribute$AttributeType r2, $r9, $r13;
        java.util.HashMap $r3, $r5, $r7;
        boolean $z0;
        android.support.constraint.ConstraintAttribute $r4, r17;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r15;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.constraint.ConstraintAttribute$AttributeType;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.util.HashMap mCustomConstraints>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.util.HashMap mCustomConstraints>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (android.support.constraint.ConstraintAttribute) $r8;

        $r9 = virtualinvoke r17.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType getType()>();

        if $r9 == r2 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConstraintAttribute is already a ");

        $r13 = virtualinvoke r17.<android.support.constraint.ConstraintAttribute: android.support.constraint.ConstraintAttribute$AttributeType getType()>();

        $r14 = virtualinvoke $r13.<android.support.constraint.ConstraintAttribute$AttributeType: java.lang.String name()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        $r4 = new android.support.constraint.ConstraintAttribute;

        specialinvoke $r4.<android.support.constraint.ConstraintAttribute: void <init>(java.lang.String,android.support.constraint.ConstraintAttribute$AttributeType)>(r1, r2);

        r17 = $r4;

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: java.util.HashMap mCustomConstraints>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r17);

     label2:
        return r17;
    }

    public void setPoint(int, int, float, float, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        int i0, i1;
        float f0, f1, f2;
        double $d0, $d1;
        double[] $r1;
        float[] $r2, $r3, $r4;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        $r1 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d0 = (double) i1;

        $d1 = $d0 / 100.0;

        $r1[i0] = $d1;

        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $r2[i0] = f0;

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $r3[i0] = f1;

        $r4 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $r4[i0] = f2;

        return;
    }

    public void setup(float)
    {
        android.support.constraint.motion.KeyCycleOscillator$CycleOscillator r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        double[][] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, i11, $i12, i13;
        double[] $r2, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r17, $r21;
        float[] $r3, $r5, $r14, $r16, $r18, $r20, $r22, $r24;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b6, $b8;
        android.support.constraint.motion.utils.Oscillator $r10, $r19, $r23, $r25;
        android.support.constraint.motion.utils.CurveFit $r13;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float mPathLength> = f0;

        $r2 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i1 = lengthof $r2;

        r1 = newmultiarray (double)[$i1][2];

        $r3 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $i2 = lengthof $r3;

        $i3 = 1 + $i2;

        $r4 = newarray (double)[$i3];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache> = $r4;

        $r5 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $i4 = lengthof $r5;

        $i5 = 1 + $i4;

        $r6 = newarray (double)[$i5];

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache> = $r6;

        $r7 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d0 = $r7[0];

        $b6 = $d0 cmpl 0.0;

        if $b6 <= 0 goto label1;

        $r25 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $r24 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f5 = $r24[0];

        virtualinvoke $r25.<android.support.constraint.motion.utils.Oscillator: void addPoint(double,float)>(0.0, $f5);

     label1:
        $r8 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i7 = lengthof $r8;

        i0 = $i7 - 1;

        $r9 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d1 = $r9[i0];

        $b8 = $d1 cmpg 1.0;

        if $b8 >= 0 goto label2;

        $r23 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $r22 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f4 = $r22[i0];

        virtualinvoke $r23.<android.support.constraint.motion.utils.Oscillator: void addPoint(double,float)>(1.0, $f4);

     label2:
        i11 = 0;

     label3:
        $i12 = lengthof r1;

        if i11 >= $i12 goto label6;

        $r15 = r1[i11];

        $r14 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $f1 = $r14[i11];

        $d2 = (double) $f1;

        $r15[0] = $d2;

        i13 = 0;

     label4:
        $r16 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $i10 = lengthof $r16;

        if i13 >= $i10 goto label5;

        $r21 = r1[i13];

        $r20 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $f3 = $r20[i13];

        $d4 = (double) $f3;

        $r21[1] = $d4;

        i13 = i13 + 1;

        goto label4;

     label5:
        $r19 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        $r17 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d3 = $r17[i11];

        $r18 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f2 = $r18[i11];

        virtualinvoke $r19.<android.support.constraint.motion.utils.Oscillator: void addPoint(double,float)>($d3, $f2);

        i11 = i11 + 1;

        goto label3;

     label6:
        $r10 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.Oscillator mOscillator>;

        virtualinvoke $r10.<android.support.constraint.motion.utils.Oscillator: void normalize()>();

        $r11 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i9 = lengthof $r11;

        if $i9 <= 1 goto label7;

        $r12 = r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $r13 = staticinvoke <android.support.constraint.motion.utils.CurveFit: android.support.constraint.motion.utils.CurveFit get(int,double[],double[][])>(0, $r12, r1);

        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit> = $r13;

        goto label8;

     label7:
        r0.<android.support.constraint.motion.KeyCycleOscillator$CycleOscillator: android.support.constraint.motion.utils.CurveFit mCurveFit> = null;

     label8:
        return;
    }

android.support.constraint.motion.KeyCycleOscillator$ElevationSet
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$ElevationSet r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ElevationSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$ElevationSet r0;
        android.view.View r1;
        float f0, $f1;
        int $i0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ElevationSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$ElevationSet: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setElevation(float)>($f1);

     label1:
        return;
    }

android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort
    private void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void sort(int[], float[], int, int)
    {
        int[] r0, r2;
        float[] r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i8, i9, i10, i11, i12, i13, i14, i15;
        byte b7;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        $i1 = lengthof r0;

        $i2 = $i1 + 10;

        r2 = newarray (int)[$i2];

        b7 = 0;

        i8 = b7 + 1;

        r2[b7] = i6;

        i9 = i8 + 1;

        r2[i8] = i5;

     label1:
        if i9 <= 0 goto label2;

        i10 = i9 + -1;

        i11 = r2[i10];

        i9 = i10 + -1;

        i12 = r2[i9];

        if i11 >= i12 goto label1;

        i0 = staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort: int partition(int[],float[],int,int)>(r0, r1, i11, i12);

        i13 = i9 + 1;

        $i3 = i0 - 1;

        r2[i9] = $i3;

        i14 = i13 + 1;

        r2[i13] = i11;

        i15 = i14 + 1;

        r2[i14] = i12;

        i9 = i15 + 1;

        $i4 = i0 + 1;

        r2[i15] = $i4;

        goto label1;

     label2:
        return;
    }

    private static int partition(int[], float[], int, int)
    {
        int[] r0;
        float[] r1;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = r0[i1];

        i4 = i0;

        i5 = i0;

     label1:
        if i5 >= i1 goto label3;

        $i3 = r0[i5];

        if $i3 > i2 goto label2;

        staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort: void swap(int[],float[],int,int)>(r0, r1, i4, i5);

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntDoubleSort: void swap(int[],float[],int,int)>(r0, r1, i4, i1);

        return i4;
    }

    private static void swap(int[], float[], int, int)
    {
        int[] r0;
        float[] r1;
        int i0, i1, i2, $i3;
        float f0, $f1;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = r0[i0];

        $i3 = r0[i1];

        r0[i0] = $i3;

        r0[i1] = i2;

        f0 = r1[i0];

        $f1 = r1[i1];

        r1[i0] = $f1;

        r1[i1] = f0;

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort
    private void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void sort(int[], float[], float[], int, int)
    {
        int[] r0, r3;
        float[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i8, i9, i10, i11, i12, i13, i14, i15;
        byte b7;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i5 := @parameter3: int;

        i6 := @parameter4: int;

        $i1 = lengthof r0;

        $i2 = $i1 + 10;

        r3 = newarray (int)[$i2];

        b7 = 0;

        i8 = b7 + 1;

        r3[b7] = i6;

        i9 = i8 + 1;

        r3[i8] = i5;

     label1:
        if i9 <= 0 goto label2;

        i10 = i9 + -1;

        i11 = r3[i10];

        i9 = i10 + -1;

        i12 = r3[i9];

        if i11 >= i12 goto label1;

        i0 = staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort: int partition(int[],float[],float[],int,int)>(r0, r1, r2, i11, i12);

        i13 = i9 + 1;

        $i3 = i0 - 1;

        r3[i9] = $i3;

        i14 = i13 + 1;

        r3[i13] = i11;

        i15 = i14 + 1;

        r3[i14] = i12;

        i9 = i15 + 1;

        $i4 = i0 + 1;

        r3[i15] = $i4;

        goto label1;

     label2:
        return;
    }

    private static int partition(int[], float[], float[], int, int)
    {
        int[] r0;
        float[] r1, r2;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = r0[i1];

        i4 = i0;

        i5 = i0;

     label1:
        if i5 >= i1 goto label3;

        $i3 = r0[i5];

        if $i3 > i2 goto label2;

        staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>(r0, r1, r2, i4, i5);

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        staticinvoke <android.support.constraint.motion.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>(r0, r1, r2, i4, i1);

        return i4;
    }

    private static void swap(int[], float[], float[], int, int)
    {
        int[] r0;
        float[] r1, r2;
        int i0, i1, i2, $i3;
        float $f0, $f1, f2, f3;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = r0[i0];

        $i3 = r0[i1];

        r0[i0] = $i3;

        r0[i1] = i2;

        f2 = r1[i0];

        $f0 = r1[i1];

        r1[i0] = $f0;

        r1[i1] = f2;

        f3 = r2[i0];

        $f1 = r2[i1];

        r2[i0] = $f1;

        r2[i1] = f3;

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$PathRotateSet
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$PathRotateSet r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$PathRotateSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$PathRotateSet r0;
        android.view.View r1;
        float f0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$PathRotateSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        return;
    }

    public void setPathRotate(android.view.View, float, double, double)
    {
        android.support.constraint.motion.KeyCycleOscillator$PathRotateSet r0;
        android.view.View r1;
        float f0, $f1, $f2, $f3;
        double d0, d1, $d2, $d3;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$PathRotateSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$PathRotateSet: float get(float)>(f0);

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>(d1, d0);

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        $f2 = (float) $d3;

        $f3 = $f1 + $f2;

        virtualinvoke r1.<android.view.View: void setRotation(float)>($f3);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$ProgressSet
<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: boolean mNoMethod>
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$ProgressSet r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ProgressSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: boolean mNoMethod> = 0;

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$ProgressSet r0;
        android.view.View r1;
        float f0, $f1, $f2;
        boolean $z0, $z1;
        java.lang.Class $r2, $r4;
        java.lang.Class[] $r3;
        java.lang.Object[] $r5;
        java.lang.Float $r6;
        android.support.constraint.motion.MotionLayout $r8;
        java.lang.Throwable $r9, $r10, $r11, r13, r14, r15;
        java.lang.reflect.Method r12;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ProgressSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $z0 = r1 instanceof android.support.constraint.motion.MotionLayout;

        if $z0 == 0 goto label01;

        $r8 = (android.support.constraint.motion.MotionLayout) r1;

        $f2 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: float get(float)>(f0);

        virtualinvoke $r8.<android.support.constraint.motion.MotionLayout: void setProgress(float)>($f2);

        goto label11;

     label01:
        $z1 = r0.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: boolean mNoMethod>;

        if $z1 == 0 goto label02;

        return;

     label02:
        r12 = null;

     label03:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        $r3[0] = $r4;

        r12 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setProgress", $r3);

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

        r13 = $r10;

        r0.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: boolean mNoMethod> = 1;

     label06:
        if r12 == null goto label11;

     label07:
        $r5 = newarray (java.lang.Object)[1];

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$ProgressSet: float get(float)>(f0);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r5[0] = $r6;

        virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyCycleOscillator", "unable to setProgress", r14);

        goto label11;

     label10:
        $r9 := @caughtexception;

        r15 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyCycleOscillator", "unable to setProgress", r15);

     label11:
        return;

        catch java.lang.NoSuchMethodException from label03 to label04 with label05;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
    }

android.support.constraint.motion.KeyCycleOscillator$RotationSet
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationSet r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationSet;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationSet r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationSet;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$RotationSet: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setRotation(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$RotationXset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationXset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationXset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationXset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationXset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$RotationXset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setRotationX(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$RotationYset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationYset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationYset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$RotationYset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$RotationYset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$RotationYset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setRotationY(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$ScaleXset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$ScaleXset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ScaleXset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$ScaleXset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ScaleXset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$ScaleXset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$ScaleYset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$ScaleYset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ScaleYset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$ScaleYset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$ScaleYset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$ScaleYset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$TranslationXset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationXset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationXset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationXset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationXset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$TranslationXset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$TranslationYset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationYset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationYset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationYset r0;
        android.view.View r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationYset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$TranslationYset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>($f1);

        return;
    }

android.support.constraint.motion.KeyCycleOscillator$TranslationZset
    void <init>()
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationZset r0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationZset;

        specialinvoke r0.<android.support.constraint.motion.KeyCycleOscillator: void <init>()>();

        return;
    }

    public void setProperty(android.view.View, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$TranslationZset r0;
        android.view.View r1;
        float f0, $f1;
        int $i0;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$TranslationZset;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $f1 = virtualinvoke r0.<android.support.constraint.motion.KeyCycleOscillator$TranslationZset: float get(float)>(f0);

        virtualinvoke r1.<android.view.View: void setTranslationZ(float)>($f1);

     label1:
        return;
    }

android.support.constraint.motion.KeyCycleOscillator$WavePoint
<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition>
<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mValue>
<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mOffset>
<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mPeriod>
    public void <init>(int, float, float, float)
    {
        android.support.constraint.motion.KeyCycleOscillator$WavePoint r0;
        int i0;
        float f0, f1, f2;

        r0 := @this: android.support.constraint.motion.KeyCycleOscillator$WavePoint;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: int mPosition> = i0;

        r0.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mValue> = f2;

        r0.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mOffset> = f1;

        r0.<android.support.constraint.motion.KeyCycleOscillator$WavePoint: float mPeriod> = f0;

        return;
    }

