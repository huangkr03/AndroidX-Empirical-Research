android.support.test.espresso.web.assertion.WebViewAssertions
<android.support.test.espresso.web.assertion.WebViewAssertions: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber TO_STRING_DESCRIBER>
    private void <init>()
    {
        android.support.test.espresso.web.assertion.WebViewAssertions r0;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.web.assertion.WebAssertion webMatches(android.support.test.espresso.web.model.Atom, org.hamcrest.Matcher, android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber)
    {
        android.support.test.espresso.web.model.Atom r0;
        org.hamcrest.Matcher r1;
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber r2;
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion $r6;

        r0 := @parameter0: android.support.test.espresso.web.model.Atom;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r6 = new android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion;

        specialinvoke $r6.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: void <init>(android.support.test.espresso.web.model.Atom,org.hamcrest.Matcher,android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber)>(r0, r1, r2);

        return $r6;
    }

    public static android.support.test.espresso.web.assertion.WebAssertion webMatches(android.support.test.espresso.web.model.Atom, org.hamcrest.Matcher)
    {
        android.support.test.espresso.web.model.Atom r0;
        org.hamcrest.Matcher r1;
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber $r2;
        android.support.test.espresso.web.assertion.WebAssertion $r3;

        r0 := @parameter0: android.support.test.espresso.web.model.Atom;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = <android.support.test.espresso.web.assertion.WebViewAssertions: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber TO_STRING_DESCRIBER>;

        $r3 = staticinvoke <android.support.test.espresso.web.assertion.WebViewAssertions: android.support.test.espresso.web.assertion.WebAssertion webMatches(android.support.test.espresso.web.model.Atom,org.hamcrest.Matcher,android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber)>(r0, r1, $r2);

        return $r3;
    }

    public static android.support.test.espresso.web.assertion.WebAssertion webContent(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        android.support.test.espresso.web.model.Atom $r2, $r4;
        android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom $r3;
        android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber $r5;
        android.support.test.espresso.web.assertion.WebAssertion $r6;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.web.model.Atoms: android.support.test.espresso.web.model.Atom script(java.lang.String)>("return document.documentElement.outerHTML;");

        $r3 = new android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom;

        specialinvoke $r3.<android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom: void <init>()>();

        $r4 = staticinvoke <android.support.test.espresso.web.model.Atoms: android.support.test.espresso.web.model.Atom transform(android.support.test.espresso.web.model.Atom,android.support.test.espresso.web.model.TransformingAtom$Transformer)>($r2, $r3);

        $r5 = new android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber;

        specialinvoke $r5.<android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber: void <init>()>();

        $r6 = staticinvoke <android.support.test.espresso.web.assertion.WebViewAssertions: android.support.test.espresso.web.assertion.WebAssertion webMatches(android.support.test.espresso.web.model.Atom,org.hamcrest.Matcher,android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber)>($r4, r0, $r5);

        return $r6;
    }

    static void <clinit>()
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber $r0;

        $r0 = new android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber;

        specialinvoke $r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber: void <init>()>();

        <android.support.test.espresso.web.assertion.WebViewAssertions: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber TO_STRING_DESCRIBER> = $r0;

        return;
    }

android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom
    public void <init>()
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom r0;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.w3c.dom.Document apply(android.support.test.espresso.web.model.Evaluation)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom r0;
        android.support.test.espresso.web.model.Evaluation r1;
        java.lang.Object $r2, $r10, $r15, $r23;
        boolean $z0;
        java.lang.String $r4, $r8, $r11, $r16, $r20, $r24, $r28, r30, r32, r33;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r6, $r7, $r18, $r19, $r26, $r27, r34, r36, r38;
        android.support.test.espresso.web.assertion.TagSoupDocumentParser $r9;
        org.w3c.dom.Document $r12;
        java.lang.Throwable $r13, $r21, r29, r31, r40, r41, r42;
        java.lang.RuntimeException r35, r37, r39;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom;

        r1 := @parameter0: android.support.test.espresso.web.model.Evaluation;

        $r2 = virtualinvoke r1.<android.support.test.espresso.web.model.Evaluation: java.lang.Object getValue()>();

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label5;

     label1:
        $r9 = staticinvoke <android.support.test.espresso.web.assertion.TagSoupDocumentParser: android.support.test.espresso.web.assertion.TagSoupDocumentParser newInstance()>();

        $r10 = virtualinvoke r1.<android.support.test.espresso.web.model.Evaluation: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke $r9.<android.support.test.espresso.web.assertion.TagSoupDocumentParser: org.w3c.dom.Document parse(java.lang.String)>($r11);

     label2:
        return $r12;

     label3:
        $r21 := @caughtexception;

        r29 = $r21;

        r35 = new java.lang.RuntimeException;

        $r23 = virtualinvoke r1.<android.support.test.espresso.web.model.Evaluation: java.lang.Object getValue()>();

        r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r30);

        $i4 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i5 = 14 + $i4;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>(int)>($i5);

        $r26 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse failed: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r29);

        r40 = (java.lang.Throwable) r35;

        throw r40;

     label4:
        $r13 := @caughtexception;

        r31 = $r13;

        r37 = new java.lang.RuntimeException;

        $r15 = virtualinvoke r1.<android.support.test.espresso.web.model.Evaluation: java.lang.Object getValue()>();

        r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15);

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r32);

        $i2 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i3 = 14 + $i2;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r18 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse failed: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r31);

        r41 = (java.lang.Throwable) r37;

        throw r41;

     label5:
        r39 = new java.lang.RuntimeException;

        r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r33);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = 33 + $i0;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r6 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value should have been a string: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        r42 = (java.lang.Throwable) r39;

        throw r42;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom r0;
        java.lang.Object r1;
        android.support.test.espresso.web.model.Evaluation $r2;
        org.w3c.dom.Document $r3;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.test.espresso.web.model.Evaluation) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.web.assertion.WebViewAssertions$DocumentParserAtom: org.w3c.dom.Document apply(android.support.test.espresso.web.model.Evaluation)>($r2);

        return $r3;
    }

android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion
<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: android.support.test.espresso.web.model.Atom atom>
<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: org.hamcrest.Matcher resultMatcher>
<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber resultDescriber>
    void <init>(android.support.test.espresso.web.model.Atom, org.hamcrest.Matcher, android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion r0;
        android.support.test.espresso.web.model.Atom r1;
        org.hamcrest.Matcher r2;
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber r3;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion;

        r1 := @parameter0: android.support.test.espresso.web.model.Atom;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber;

        specialinvoke r0.<android.support.test.espresso.web.assertion.WebAssertion: void <init>(android.support.test.espresso.web.model.Atom)>(r1);

        r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: android.support.test.espresso.web.model.Atom atom> = r1;

        r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: org.hamcrest.Matcher resultMatcher> = r2;

        r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber resultDescriber> = r3;

        return;
    }

    protected void checkResult(android.webkit.WebView, java.lang.Object)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion r0;
        android.webkit.WebView r1;
        java.lang.Object r2;
        org.hamcrest.StringDescription r3, $r4;
        org.hamcrest.Matcher $r6, $r11;
        android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber $r8;
        java.lang.String $r10, $r13;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.Object;

        $r4 = new org.hamcrest.StringDescription;

        specialinvoke $r4.<org.hamcrest.StringDescription: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\'");

        $r6 = r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: org.hamcrest.Matcher resultMatcher>;

        interfaceinvoke $r6.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r3);

        virtualinvoke r3.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\' doesn\'t match: ");

        if null != r2 goto label1;

        $r13 = "null";

        goto label2;

     label1:
        $r8 = r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber resultDescriber>;

        $r13 = interfaceinvoke $r8.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber: java.lang.String apply(java.lang.Object)>(r2);

     label2:
        virtualinvoke r3.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>($r13);

        $r10 = virtualinvoke r3.<org.hamcrest.StringDescription: java.lang.String toString()>();

        $r11 = r0.<android.support.test.espresso.web.assertion.WebViewAssertions$ResultCheckingWebAssertion: org.hamcrest.Matcher resultMatcher>;

        staticinvoke <android.support.test.espresso.matcher.ViewMatchers: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>($r10, r2, $r11);

        return;
    }

android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber
<android.support.test.espresso.web.assertion.WebViewAssertions$ResultDescriber: java.lang.String apply(java.lang.Object)>
android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber
    public void <init>()
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber r0;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String apply(java.lang.Object)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$ToStringResultDescriber;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber
    public void <init>()
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber r0;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String apply(org.w3c.dom.Document)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber r0;
        org.w3c.dom.Document r1;
        java.io.StringWriter r2, $r6;
        javax.xml.transform.stream.StreamResult r3, $r7;
        javax.xml.transform.dom.DOMSource $r4, r15;
        javax.xml.transform.TransformerFactory $r5;
        java.lang.String $r8, $r10, $r14, r18;
        java.lang.Throwable $r9, r17;
        int $i0, $i1;
        java.lang.StringBuilder $r11, $r12, $r13;
        javax.xml.transform.Transformer r16;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber;

        r1 := @parameter0: org.w3c.dom.Document;

     label1:
        $r4 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r4.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1);

        r15 = $r4;

        $r5 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        r16 = virtualinvoke $r5.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        $r6 = new java.io.StringWriter;

        specialinvoke $r6.<java.io.StringWriter: void <init>()>();

        r2 = $r6;

        $r7 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r7.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r2);

        r3 = $r7;

        virtualinvoke r16.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r15, r3);

        $r8 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r17 = $r9;

        r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r17);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r18);

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = 22 + $i0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not transform!!!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public volatile java.lang.String apply(java.lang.Object)
    {
        android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        java.lang.String $r3;

        r0 := @this: android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.web.assertion.WebViewAssertions$WebContentResultDescriber: java.lang.String apply(org.w3c.dom.Document)>($r2);

        return $r3;
    }

