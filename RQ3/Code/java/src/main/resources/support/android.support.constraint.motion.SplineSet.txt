android.support.constraint.motion.SplineSet
<android.support.constraint.motion.SplineSet: java.lang.String TAG>
<android.support.constraint.motion.SplineSet: android.support.constraint.motion.utils.CurveFit mCurveFit>
<android.support.constraint.motion.SplineSet: int[] mTimePoints>
<android.support.constraint.motion.SplineSet: float[] mValues>
<android.support.constraint.motion.SplineSet: int count>
<android.support.constraint.motion.SplineSet: java.lang.String mType>
    public void <init>()
    {
        android.support.constraint.motion.SplineSet r0;
        int[] $r1;
        float[] $r2;

        r0 := @this: android.support.constraint.motion.SplineSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints> = $r1;

        $r2 = newarray (float)[10];

        r0.<android.support.constraint.motion.SplineSet: float[] mValues> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        android.support.constraint.motion.SplineSet r0;
        java.text.DecimalFormat r1, $r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r11, $r12;
        int[] $r6;
        float[] $r9;
        float $f0;
        double $d0;
        java.lang.String $r10, r13;

        r0 := @this: android.support.constraint.motion.SplineSet;

        r13 = r0.<android.support.constraint.motion.SplineSet: java.lang.String mType>;

        $r2 = new java.text.DecimalFormat;

        specialinvoke $r2.<java.text.DecimalFormat: void <init>(java.lang.String)>("##.##");

        r1 = $r2;

        i2 = 0;

     label1:
        $i0 = r0.<android.support.constraint.motion.SplineSet: int count>;

        if i2 >= $i0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i1 = $r6[i2];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $r9 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $f0 = $r9[i2];

        $d0 = (double) $f0;

        $r10 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        return r13;
    }

    public void setType(java.lang.String)
    {
        android.support.constraint.motion.SplineSet r0;
        java.lang.String r1;

        r0 := @this: android.support.constraint.motion.SplineSet;

        r1 := @parameter0: java.lang.String;

        r0.<android.support.constraint.motion.SplineSet: java.lang.String mType> = r1;

        return;
    }

<android.support.constraint.motion.SplineSet: void setProperty(android.view.View,float)>
    public float get(float)
    {
        android.support.constraint.motion.SplineSet r0;
        float f0, $f1;
        double $d0, $d1;
        android.support.constraint.motion.utils.CurveFit $r1;

        r0 := @this: android.support.constraint.motion.SplineSet;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.SplineSet: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        $d0 = (double) f0;

        $d1 = virtualinvoke $r1.<android.support.constraint.motion.utils.CurveFit: double getPos(double,int)>($d0, 0);

        $f1 = (float) $d1;

        return $f1;
    }

    public float getSlope(float)
    {
        android.support.constraint.motion.SplineSet r0;
        float f0, $f1;
        double $d0, $d1;
        android.support.constraint.motion.utils.CurveFit $r1;

        r0 := @this: android.support.constraint.motion.SplineSet;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.motion.SplineSet: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        $d0 = (double) f0;

        $d1 = virtualinvoke $r1.<android.support.constraint.motion.utils.CurveFit: double getSlope(double,int)>($d0, 0);

        $f1 = (float) $d1;

        return $f1;
    }

    public android.support.constraint.motion.utils.CurveFit getCurveFit()
    {
        android.support.constraint.motion.SplineSet r0;
        android.support.constraint.motion.utils.CurveFit $r1;

        r0 := @this: android.support.constraint.motion.SplineSet;

        $r1 = r0.<android.support.constraint.motion.SplineSet: android.support.constraint.motion.utils.CurveFit mCurveFit>;

        return $r1;
    }

    static android.support.constraint.motion.SplineSet makeCustomSpline(java.lang.String, android.util.SparseArray)
    {
        java.lang.String r0;
        android.util.SparseArray r1;
        android.support.constraint.motion.SplineSet$CustomSet $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.util.SparseArray;

        $r2 = new android.support.constraint.motion.SplineSet$CustomSet;

        specialinvoke $r2.<android.support.constraint.motion.SplineSet$CustomSet: void <init>(java.lang.String,android.util.SparseArray)>(r0, r1);

        return $r2;
    }

    static android.support.constraint.motion.SplineSet makeSpline(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        android.support.constraint.motion.SplineSet$ProgressSet $r2;
        android.support.constraint.motion.SplineSet$TranslationZset $r3;
        android.support.constraint.motion.SplineSet$TranslationYset $r4;
        android.support.constraint.motion.SplineSet$TranslationXset $r5;
        android.support.constraint.motion.SplineSet$AlphaSet $r6, $r7, $r17;
        android.support.constraint.motion.SplineSet$ScaleYset $r8;
        android.support.constraint.motion.SplineSet$ScaleXset $r9;
        android.support.constraint.motion.SplineSet$PathRotate $r10;
        android.support.constraint.motion.SplineSet$PivotYset $r11;
        android.support.constraint.motion.SplineSet$PivotXset $r12;
        android.support.constraint.motion.SplineSet$RotationYset $r13;
        android.support.constraint.motion.SplineSet$RotationXset $r14;
        android.support.constraint.motion.SplineSet$RotationSet $r15;
        android.support.constraint.motion.SplineSet$ElevationSet $r16;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1249320806: goto label04;
            case -1249320805: goto label05;
            case -1225497657: goto label13;
            case -1225497656: goto label14;
            case -1225497655: goto label15;
            case -1001078227: goto label16;
            case -908189618: goto label09;
            case -908189617: goto label10;
            case -797520672: goto label12;
            case -760884510: goto label06;
            case -760884509: goto label07;
            case -40300674: goto label03;
            case -4379043: goto label02;
            case 37232917: goto label08;
            case 92909918: goto label01;
            case 156108012: goto label11;
            default: goto label17;
        };

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z1 == 0 goto label17;

        b1 = 0;

        goto label17;

     label02:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("elevation");

        if $z3 == 0 goto label17;

        b1 = 1;

        goto label17;

     label03:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotation");

        if $z4 == 0 goto label17;

        b1 = 2;

        goto label17;

     label04:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotationX");

        if $z15 == 0 goto label17;

        b1 = 3;

        goto label17;

     label05:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotationY");

        if $z14 == 0 goto label17;

        b1 = 4;

        goto label17;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("transformPivotX");

        if $z6 == 0 goto label17;

        b1 = 5;

        goto label17;

     label07:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("transformPivotY");

        if $z5 == 0 goto label17;

        b1 = 6;

        goto label17;

     label08:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("transitionPathRotate");

        if $z2 == 0 goto label17;

        b1 = 7;

        goto label17;

     label09:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z9 == 0 goto label17;

        b1 = 8;

        goto label17;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z8 == 0 goto label17;

        b1 = 9;

        goto label17;

     label11:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("waveOffset");

        if $z0 == 0 goto label17;

        b1 = 10;

        goto label17;

     label12:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("waveVariesBy");

        if $z7 == 0 goto label17;

        b1 = 11;

        goto label17;

     label13:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationX");

        if $z13 == 0 goto label17;

        b1 = 12;

        goto label17;

     label14:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationY");

        if $z12 == 0 goto label17;

        b1 = 13;

        goto label17;

     label15:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("translationZ");

        if $z11 == 0 goto label17;

        b1 = 14;

        goto label17;

     label16:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("progress");

        if $z10 == 0 goto label17;

        b1 = 15;

     label17:
        tableswitch(b1)
        {
            case 0: goto label18;
            case 1: goto label19;
            case 2: goto label20;
            case 3: goto label21;
            case 4: goto label22;
            case 5: goto label23;
            case 6: goto label24;
            case 7: goto label25;
            case 8: goto label26;
            case 9: goto label27;
            case 10: goto label28;
            case 11: goto label29;
            case 12: goto label30;
            case 13: goto label31;
            case 14: goto label32;
            case 15: goto label33;
            default: goto label34;
        };

     label18:
        $r17 = new android.support.constraint.motion.SplineSet$AlphaSet;

        specialinvoke $r17.<android.support.constraint.motion.SplineSet$AlphaSet: void <init>()>();

        return $r17;

     label19:
        $r16 = new android.support.constraint.motion.SplineSet$ElevationSet;

        specialinvoke $r16.<android.support.constraint.motion.SplineSet$ElevationSet: void <init>()>();

        return $r16;

     label20:
        $r15 = new android.support.constraint.motion.SplineSet$RotationSet;

        specialinvoke $r15.<android.support.constraint.motion.SplineSet$RotationSet: void <init>()>();

        return $r15;

     label21:
        $r14 = new android.support.constraint.motion.SplineSet$RotationXset;

        specialinvoke $r14.<android.support.constraint.motion.SplineSet$RotationXset: void <init>()>();

        return $r14;

     label22:
        $r13 = new android.support.constraint.motion.SplineSet$RotationYset;

        specialinvoke $r13.<android.support.constraint.motion.SplineSet$RotationYset: void <init>()>();

        return $r13;

     label23:
        $r12 = new android.support.constraint.motion.SplineSet$PivotXset;

        specialinvoke $r12.<android.support.constraint.motion.SplineSet$PivotXset: void <init>()>();

        return $r12;

     label24:
        $r11 = new android.support.constraint.motion.SplineSet$PivotYset;

        specialinvoke $r11.<android.support.constraint.motion.SplineSet$PivotYset: void <init>()>();

        return $r11;

     label25:
        $r10 = new android.support.constraint.motion.SplineSet$PathRotate;

        specialinvoke $r10.<android.support.constraint.motion.SplineSet$PathRotate: void <init>()>();

        return $r10;

     label26:
        $r9 = new android.support.constraint.motion.SplineSet$ScaleXset;

        specialinvoke $r9.<android.support.constraint.motion.SplineSet$ScaleXset: void <init>()>();

        return $r9;

     label27:
        $r8 = new android.support.constraint.motion.SplineSet$ScaleYset;

        specialinvoke $r8.<android.support.constraint.motion.SplineSet$ScaleYset: void <init>()>();

        return $r8;

     label28:
        $r7 = new android.support.constraint.motion.SplineSet$AlphaSet;

        specialinvoke $r7.<android.support.constraint.motion.SplineSet$AlphaSet: void <init>()>();

        return $r7;

     label29:
        $r6 = new android.support.constraint.motion.SplineSet$AlphaSet;

        specialinvoke $r6.<android.support.constraint.motion.SplineSet$AlphaSet: void <init>()>();

        return $r6;

     label30:
        $r5 = new android.support.constraint.motion.SplineSet$TranslationXset;

        specialinvoke $r5.<android.support.constraint.motion.SplineSet$TranslationXset: void <init>()>();

        return $r5;

     label31:
        $r4 = new android.support.constraint.motion.SplineSet$TranslationYset;

        specialinvoke $r4.<android.support.constraint.motion.SplineSet$TranslationYset: void <init>()>();

        return $r4;

     label32:
        $r3 = new android.support.constraint.motion.SplineSet$TranslationZset;

        specialinvoke $r3.<android.support.constraint.motion.SplineSet$TranslationZset: void <init>()>();

        return $r3;

     label33:
        $r2 = new android.support.constraint.motion.SplineSet$ProgressSet;

        specialinvoke $r2.<android.support.constraint.motion.SplineSet$ProgressSet: void <init>()>();

        return $r2;

     label34:
        return null;
    }

    public void setPoint(int, float)
    {
        android.support.constraint.motion.SplineSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0;
        int[] $r1, $r2, $r4, $r5, $r6;
        float[] $r3, $r7, $r8, $r9;

        r0 := @this: android.support.constraint.motion.SplineSet;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i3 = lengthof $r1;

        $i1 = r0.<android.support.constraint.motion.SplineSet: int count>;

        $i2 = $i1 + 1;

        if $i3 >= $i2 goto label1;

        $r5 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $r4 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i8 = lengthof $r4;

        $i9 = $i8 * 2;

        $r6 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r5, $i9);

        r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints> = $r6;

        $r8 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $r7 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $i10 = lengthof $r7;

        $i11 = $i10 * 2;

        $r9 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r8, $i11);

        r0.<android.support.constraint.motion.SplineSet: float[] mValues> = $r9;

     label1:
        $r2 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i4 = r0.<android.support.constraint.motion.SplineSet: int count>;

        $r2[$i4] = i0;

        $r3 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $i5 = r0.<android.support.constraint.motion.SplineSet: int count>;

        $r3[$i5] = f0;

        $i6 = r0.<android.support.constraint.motion.SplineSet: int count>;

        $i7 = $i6 + 1;

        r0.<android.support.constraint.motion.SplineSet: int count> = $i7;

        return;
    }

    public void setup(int)
    {
        android.support.constraint.motion.SplineSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        double[][] r1;
        float[] $r2, $r6;
        int[] $r3, $r5, $r8, $r9, $r10, $r11;
        android.support.constraint.motion.utils.CurveFit $r4;
        double $d0, $d1, $d2;
        float $f0;
        double[] $r7, r12;

        r0 := @this: android.support.constraint.motion.SplineSet;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.motion.SplineSet: int count>;

        if $i1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $r2 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $i2 = r0.<android.support.constraint.motion.SplineSet: int count>;

        $i3 = $i2 - 1;

        staticinvoke <android.support.constraint.motion.SplineSet$Sort: void doubleQuickSort(int[],float[],int,int)>($r3, $r2, 0, $i3);

        i13 = 1;

        i14 = 1;

     label2:
        $i4 = r0.<android.support.constraint.motion.SplineSet: int count>;

        if i14 >= $i4 goto label4;

        $r10 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i10 = i14 - 1;

        $i12 = $r10[$i10];

        $r11 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i11 = $r11[i14];

        if $i12 == $i11 goto label3;

        i13 = i13 + 1;

     label3:
        i14 = i14 + 1;

        goto label2;

     label4:
        r12 = newarray (double)[i13];

        r1 = newmultiarray (double)[i13][1];

        i15 = 0;

        i16 = 0;

     label5:
        $i5 = r0.<android.support.constraint.motion.SplineSet: int count>;

        if i16 >= $i5 goto label8;

        if i16 <= 0 goto label6;

        $r8 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i9 = $r8[i16];

        $r9 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i7 = i16 - 1;

        $i8 = $r9[$i7];

        if $i9 != $i8 goto label6;

        goto label7;

     label6:
        $r5 = r0.<android.support.constraint.motion.SplineSet: int[] mTimePoints>;

        $i6 = $r5[i16];

        $d0 = (double) $i6;

        $d1 = $d0 * 0.01;

        r12[i15] = $d1;

        $r7 = r1[i15];

        $r6 = r0.<android.support.constraint.motion.SplineSet: float[] mValues>;

        $f0 = $r6[i16];

        $d2 = (double) $f0;

        $r7[0] = $d2;

        i15 = i15 + 1;

     label7:
        i16 = i16 + 1;

        goto label5;

     label8:
        $r4 = staticinvoke <android.support.constraint.motion.utils.CurveFit: android.support.constraint.motion.utils.CurveFit get(int,double[],double[][])>(i0, r12, r1);

        r0.<android.support.constraint.motion.SplineSet: android.support.constraint.motion.utils.CurveFit mCurveFit> = $r4;

        return;
    }

