android.support.test.runner.AndroidJUnitRunner
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_TEST_CLASS>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_TEST_SIZE>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_LOG_ONLY>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_ANNOTATION>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_NOT_ANNOTATION>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_NUM_SHARDS>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_SHARD_INDEX>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_DELAY_MSEC>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_COVERAGE>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_COVERAGE_PATH>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_SUITE_ASSIGNMENT>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_DEBUG>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_LISTENER>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_TEST_PACKAGE>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_TIMEOUT>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_TEST_FILE>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String ARGUMENT_DISABLE_ANALYTICS>
<android.support.test.runner.AndroidJUnitRunner: java.lang.String LOG_TAG>
<android.support.test.runner.AndroidJUnitRunner: char CLASS_SEPARATOR>
<android.support.test.runner.AndroidJUnitRunner: char METHOD_SEPARATOR>
<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle mArguments>
<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter mInstrumentationResultPrinter>
    public void <init>()
    {
        android.support.test.runner.AndroidJUnitRunner r0;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: void <init>()>();

        r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter mInstrumentationResultPrinter> = null;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.os.Bundle r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: void onCreate(android.os.Bundle)>(r1);

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void setArguments(android.os.Bundle)>(r1);

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void specifyDexMakerCacheProperty()>();

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void start()>();

        return;
    }

    public android.os.Bundle getArguments()
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        $r1 = r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle mArguments>;

        return $r1;
    }

    void setArguments(android.os.Bundle)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.os.Bundle r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle mArguments> = r1;

        return;
    }

    private boolean getBooleanArgument(java.lang.String)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.String r1, r2;
        android.os.Bundle $r3;
        boolean $z0, $z1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle getArguments()>();

        r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r1);

        if r2 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    android.support.test.internal.runner.listener.InstrumentationResultPrinter getInstrumentationResultPrinter()
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.support.test.internal.runner.listener.InstrumentationResultPrinter $r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        $r1 = r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter mInstrumentationResultPrinter>;

        return $r1;
    }

    public void onStart()
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.io.ByteArrayOutputStream r1, $r8;
        java.io.PrintStream r2, $r9;
        java.util.ArrayList r3, $r10;
        android.support.test.internal.runner.TestRequest r4;
        org.junit.runner.Result r5;
        java.lang.Throwable r6, $r20, $r25, r35;
        android.os.Bundle r7, $r12, $r16, $r21, $r29, r34, r36;
        boolean $z0;
        org.junit.runner.JUnitCore $r11, r33;
        org.junit.runner.Request $r13;
        java.util.List $r14;
        java.util.Collection $r15;
        java.lang.Object[] $r17, $r22, $r26, $r30;
        java.lang.String $r18, $r19, $r23, $r24, $r27, $r28, $r31, $r32;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: void onStart()>();

        $z0 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("debug");

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label1:
        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void setupDexmakerClassloader()>();

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r8;

        $r9 = new java.io.PrintStream;

        specialinvoke $r9.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r1);

        r2 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

     label2:
        $r11 = new org.junit.runner.JUnitCore;

        specialinvoke $r11.<org.junit.runner.JUnitCore: void <init>()>();

        r33 = $r11;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListeners(java.util.List,org.junit.runner.JUnitCore,java.io.PrintStream)>(r3, r33, r2);

        $r12 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle getArguments()>();

        r4 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.TestRequest buildRequest(android.os.Bundle,java.io.PrintStream)>($r12, r2);

        $r13 = virtualinvoke r4.<android.support.test.internal.runner.TestRequest: org.junit.runner.Request getRequest()>();

        r5 = virtualinvoke r33.<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Request)>($r13);

        $r14 = virtualinvoke r5.<org.junit.runner.Result: java.util.List getFailures()>();

        $r15 = virtualinvoke r4.<android.support.test.internal.runner.TestRequest: java.util.Collection getFailures()>();

        interfaceinvoke $r14.<java.util.List: boolean addAll(java.util.Collection)>($r15);

     label3:
        $r16 = new android.os.Bundle;

        specialinvoke $r16.<android.os.Bundle: void <init>()>();

        r34 = $r16;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void reportRunEnded(java.util.List,java.io.PrintStream,android.os.Bundle)>(r3, r2, r34);

        virtualinvoke r2.<java.io.PrintStream: void close()>();

        $r17 = newarray (java.lang.Object)[1];

        $r18 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s", $r17);

        virtualinvoke r34.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r19);

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void finish(int,android.os.Bundle)>(-1, r34);

        goto label8;

     label4:
        $r25 := @caughtexception;

        r35 = $r25;

        $r26 = newarray (java.lang.Object)[1];

        $r27 = virtualinvoke r35.<java.lang.Throwable: java.lang.String getMessage()>();

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Test run aborted due to unexpected exception: %s", $r26);

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r28);

        virtualinvoke r35.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

     label5:
        $r29 = new android.os.Bundle;

        specialinvoke $r29.<android.os.Bundle: void <init>()>();

        r36 = $r29;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void reportRunEnded(java.util.List,java.io.PrintStream,android.os.Bundle)>(r3, r2, r36);

        virtualinvoke r2.<java.io.PrintStream: void close()>();

        $r30 = newarray (java.lang.Object)[1];

        $r31 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $r30[0] = $r31;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s", $r30);

        virtualinvoke r36.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r32);

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void finish(int,android.os.Bundle)>(-1, r36);

        goto label8;

     label6:
        $r20 := @caughtexception;

        r6 = $r20;

     label7:
        $r21 = new android.os.Bundle;

        specialinvoke $r21.<android.os.Bundle: void <init>()>();

        r7 = $r21;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void reportRunEnded(java.util.List,java.io.PrintStream,android.os.Bundle)>(r3, r2, r7);

        virtualinvoke r2.<java.io.PrintStream: void close()>();

        $r22 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $r22[0] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s", $r22);

        virtualinvoke r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r24);

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void finish(int,android.os.Bundle)>(-1, r7);

        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void finish(int, android.os.Bundle)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        int i0;
        android.os.Bundle r1;
        java.lang.Throwable r2, $r5;
        android.support.test.internal.runner.tracker.UsageTracker $r3, $r4;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r3 = staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: android.support.test.internal.runner.tracker.UsageTracker getInstance()>();

        interfaceinvoke $r3.<android.support.test.internal.runner.tracker.UsageTracker: void trackUsage(java.lang.String)>("AndroidJUnitRunner");

        $r4 = staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: android.support.test.internal.runner.tracker.UsageTracker getInstance()>();

        interfaceinvoke $r4.<android.support.test.internal.runner.tracker.UsageTracker: void sendUsages()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidJUnitRunner", "Failed to send analytics.", r2);

     label4:
        specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: void finish(int,android.os.Bundle)>(i0, r1);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void addListeners(java.util.List, org.junit.runner.JUnitCore, java.io.PrintStream)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        org.junit.runner.JUnitCore r2;
        java.io.PrintStream r3;
        java.util.Iterator r4;
        org.junit.runner.notification.RunListener r5;
        boolean $z0, $z5, $z7;
        org.junit.internal.TextListener $r6;
        android.support.test.internal.runner.listener.LogRunListener $r7;
        android.support.test.internal.runner.listener.InstrumentationResultPrinter $r8, $r9;
        android.support.test.internal.runner.listener.ActivityFinisherRunListener $r10;
        android.support.test.runner.MonitoringInstrumentation$ActivityFinisher $r11;
        java.lang.Object $r12;
        android.support.test.internal.runner.listener.InstrumentationRunListener $r13;
        android.support.test.internal.runner.listener.SuiteAssignmentPrinter $r14;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.junit.runner.JUnitCore;

        r3 := @parameter2: java.io.PrintStream;

        $z0 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("suiteAssignment");

        if $z0 == 0 goto label1;

        $r14 = new android.support.test.internal.runner.listener.SuiteAssignmentPrinter;

        specialinvoke $r14.<android.support.test.internal.runner.listener.SuiteAssignmentPrinter: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label2;

     label1:
        $r6 = new org.junit.internal.TextListener;

        specialinvoke $r6.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new android.support.test.internal.runner.listener.LogRunListener;

        specialinvoke $r7.<android.support.test.internal.runner.listener.LogRunListener: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        specialinvoke $r8.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void <init>()>();

        r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter mInstrumentationResultPrinter> = $r8;

        $r9 = r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter mInstrumentationResultPrinter>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new android.support.test.internal.runner.listener.ActivityFinisherRunListener;

        $r11 = new android.support.test.runner.MonitoringInstrumentation$ActivityFinisher;

        specialinvoke $r11.<android.support.test.runner.MonitoringInstrumentation$ActivityFinisher: void <init>(android.support.test.runner.MonitoringInstrumentation)>(r0);

        specialinvoke $r10.<android.support.test.internal.runner.listener.ActivityFinisherRunListener: void <init>(android.app.Instrumentation,android.support.test.runner.MonitoringInstrumentation$ActivityFinisher)>(r0, $r11);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addDelayListener(java.util.List)>(r1);

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addCoverageListener(java.util.List)>(r1);

     label2:
        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListenersFromArg(java.util.List,java.io.PrintStream)>(r1, r3);

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListenersFromManifest(java.util.List,java.io.PrintStream)>(r1, r3);

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label5;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.junit.runner.notification.RunListener) $r12;

        virtualinvoke r2.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(r5);

        $z5 = r5 instanceof android.support.test.internal.runner.listener.InstrumentationRunListener;

        if $z5 == 0 goto label4;

        $r13 = (android.support.test.internal.runner.listener.InstrumentationRunListener) r5;

        virtualinvoke $r13.<android.support.test.internal.runner.listener.InstrumentationRunListener: void setInstrumentation(android.app.Instrumentation)>(r0);

     label4:
        goto label3;

     label5:
        return;
    }

    private void addCoverageListener(java.util.List)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        java.lang.String r2;
        boolean $z0;
        android.os.Bundle $r3;
        android.support.test.internal.runner.listener.CoverageListener $r4;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        $z0 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("coverage");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle getArguments()>();

        r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");

        $r4 = new android.support.test.internal.runner.listener.CoverageListener;

        specialinvoke $r4.<android.support.test.internal.runner.listener.CoverageListener: void <init>(java.lang.String)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

    private void addDelayListener(java.util.List)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        int i0, $i1;
        android.os.Bundle $r2;
        boolean $z0;
        android.support.test.internal.runner.listener.DelayInjector $r3, $r5;
        java.lang.String $r4;
        java.lang.Throwable $r6, r8;
        java.lang.Object r7;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

     label1:
        $r2 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle getArguments()>();

        r7 = virtualinvoke $r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>("delay_msec");

        if r7 == null goto label2;

        $r4 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = new android.support.test.internal.runner.listener.DelayInjector;

        specialinvoke $r5.<android.support.test.internal.runner.listener.DelayInjector: void <init>(int)>(i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label3;

     label2:
        $z0 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("log");

        if $z0 == 0 goto label3;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 16 goto label3;

        $r3 = new android.support.test.internal.runner.listener.DelayInjector;

        specialinvoke $r3.<android.support.test.internal.runner.listener.DelayInjector: void <init>(int)>(15);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidJUnitRunner", "Invalid delay_msec parameter", r8);

     label5:
        return;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private void addListenersFromArg(java.util.List, java.io.PrintStream)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        java.io.PrintStream r2;
        android.os.Bundle $r3;
        java.lang.String $r4;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.io.PrintStream;

        $r3 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.os.Bundle getArguments()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("listener");

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListenersFromClassString(java.lang.String,java.util.List,java.io.PrintStream)>($r4, r1, r2);

        return;
    }

    private void addListenersFromManifest(java.util.List, java.io.PrintStream)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        java.io.PrintStream r2;
        android.content.pm.PackageManager r3;
        android.os.Bundle r4;
        java.lang.String r5, $r11;
        android.content.Context $r6;
        android.content.ComponentName $r7, $r10;
        java.lang.Throwable $r8, r13;
        java.lang.Object[] $r9;
        android.content.pm.InstrumentationInfo r12;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.io.PrintStream;

        $r6 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.Context getContext()>();

        r3 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r7 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.ComponentName getComponentName()>();

        r12 = virtualinvoke r3.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>($r7, 128);

        r4 = r12.<android.content.pm.InstrumentationInfo: android.os.Bundle metaData>;

        if r4 != null goto label3;

     label2:
        return;

     label3:
        r5 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("listener");

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListenersFromClassString(java.lang.String,java.util.List,java.io.PrintStream)>(r5, r1, r2);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        r13 = $r8;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.ComponentName getComponentName()>();

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find component %s", $r9);

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("AndroidJUnitRunner", $r11);

     label6:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    private void addListenersFromClassString(java.lang.String, java.util.List, java.io.PrintStream)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.String r1, r5;
        java.util.List r2;
        java.io.PrintStream r3;
        java.lang.String[] r4;
        int i0, i1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.io.PrintStream;

        if r1 != null goto label1;

        return;

     label1:
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addListenerByClassName(java.util.List,java.io.PrintStream,java.lang.String)>(r2, r3, r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void addListenerByClassName(java.util.List, java.io.PrintStream, java.lang.String)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        java.io.PrintStream r2;
        java.lang.String r3, $r13, $r18, $r23, $r28;
        java.lang.Class r4, $r6;
        java.lang.Throwable r5, $r14, $r19, $r24, r29, r30;
        int $i0;
        boolean $z0;
        java.lang.Class[] $r7;
        java.lang.reflect.Constructor $r8;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r20, $r21, $r22, $r25, $r26, $r27;
        org.junit.runner.notification.RunListener r31;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.io.PrintStream;

        r3 := @parameter2: java.lang.String;

        if r3 == null goto label01;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return;

     label02:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3);

     label03:
        goto label05;

     label04:
        $r19 := @caughtexception;

        r29 = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find extra RunListener class ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r23);

        return;

     label05:
        $r6 = class "Lorg/junit/runner/notification/RunListener;";

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 != 0 goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extra listeners must extend RunListener class ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return;

     label06:
        $r7 = newarray (java.lang.Class)[0];

        $r8 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        virtualinvoke $r8.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

        r30 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have no argument constructor for class ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;

     label09:
        $r9 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        r31 = (org.junit.runner.notification.RunListener) $r9;

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;

        r5 = $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate extra RunListener class ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r28);

        virtualinvoke r5.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

        return;

     label12:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r31);

        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.NoSuchMethodException from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public boolean onException(java.lang.Object, java.lang.Throwable)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r3;
        boolean $z0;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        r3 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.listener.InstrumentationResultPrinter getInstrumentationResultPrinter()>();

        if r3 == null goto label1;

        virtualinvoke r3.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void reportProcessCrash(java.lang.Throwable)>(r2);

     label1:
        $z0 = specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r1, r2);

        return $z0;
    }

    private void reportRunEnded(java.util.List, java.io.PrintStream, android.os.Bundle)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.util.List r1;
        java.io.PrintStream r2;
        android.os.Bundle r3;
        java.util.Iterator r4;
        org.junit.runner.notification.RunListener r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.support.test.internal.runner.listener.InstrumentationRunListener $r7;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.io.PrintStream;

        r3 := @parameter2: android.os.Bundle;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.junit.runner.notification.RunListener) $r6;

        $z1 = r5 instanceof android.support.test.internal.runner.listener.InstrumentationRunListener;

        if $z1 == 0 goto label2;

        $r7 = (android.support.test.internal.runner.listener.InstrumentationRunListener) r5;

        virtualinvoke $r7.<android.support.test.internal.runner.listener.InstrumentationRunListener: void instrumentationRunFinished(java.io.PrintStream,android.os.Bundle)>(r2, r3);

     label2:
        goto label1;

     label3:
        return;
    }

    android.support.test.internal.runner.TestRequest buildRequest(android.os.Bundle, java.io.PrintStream)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.os.Bundle r1;
        java.io.PrintStream r2;
        android.support.test.internal.runner.TestRequestBuilder r3;
        java.lang.String r4, r5, $r9, $r13, $r14, $r15, r18, r19, r20, r21, r22, r24, r25;
        java.lang.Throwable r6, $r16;
        java.lang.String[] $r7, r17, r23;
        android.content.Context $r8, $r10, $r12;
        boolean $z0, $z1;
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r11;
        int i1, i2, i3, i4, i5, i6;
        java.lang.Object r26, r27;
        android.support.test.internal.runner.tracker.UsageTracker r28;
        android.support.test.internal.runner.TestRequest $r29;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.io.PrintStream;

        $r7 = newarray (java.lang.String)[1];

        $r8 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageCodePath()>();

        $r7[0] = $r9;

        r3 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.support.test.internal.runner.TestRequestBuilder createTestRequestBuilder(java.io.PrintStream,java.lang.String[])>(r2, $r7);

        r4 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("class");

        if r4 == null goto label02;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(44);

        r17 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>($r15);

        i1 = lengthof r17;

        i2 = 0;

     label01:
        if i2 >= i1 goto label02;

        r18 = r17[i2];

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void parseTestClass(java.lang.String,android.support.test.internal.runner.TestRequestBuilder)>(r18, r3);

        i2 = i2 + 1;

        goto label01;

     label02:
        r19 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("testFile");

        if r19 == null goto label03;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void parseTestClassesFromFile(java.lang.String,android.support.test.internal.runner.TestRequestBuilder)>(r19, r3);

     label03:
        r20 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("package");

        if r20 == null goto label04;

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void addTestPackageFilter(java.lang.String)>(r20);

     label04:
        r21 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("size");

        if r21 == null goto label05;

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void addTestSizeFilter(java.lang.String)>(r21);

     label05:
        r22 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("annotation");

        if r22 == null goto label06;

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void addAnnotationInclusionFilter(java.lang.String)>(r22);

     label06:
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("notAnnotation");

        if r5 == null goto label08;

        r23 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i3 = lengthof r23;

        i4 = 0;

     label07:
        if i4 >= i3 goto label08;

        r24 = r23[i4];

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void addAnnotationExclusionFilter(java.lang.String)>(r24);

        i4 = i4 + 1;

        goto label07;

     label08:
        r25 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("timeout_msec");

        if r25 == null goto label09;

        virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void addTimeout(java.lang.String,android.support.test.internal.runner.TestRequestBuilder)>(r25, r3);

     label09:
        r26 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>("numShards");

        r27 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>("shardIndex");

        if r26 == null goto label14;

        if r27 == null goto label14;

        i5 = -1;

        i6 = -1;

     label10:
        $r13 = virtualinvoke r26.<java.lang.Object: java.lang.String toString()>();

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        $r14 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        r6 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidJUnitRunner", "Invalid sharding parameter", r6);

     label13:
        if i5 <= 0 goto label14;

        if i6 < 0 goto label14;

        if i6 >= i5 goto label14;

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void addShardingFilter(int,int)>(i5, i6);

     label14:
        $z1 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("log");

        if $z1 == 0 goto label15;

        virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: void setSkipExecution(boolean)>(1);

     label15:
        $z0 = specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: boolean getBooleanArgument(java.lang.String)>("disableAnalytics");

        if $z0 != 0 goto label16;

        $r10 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.Context getTargetContext()>();

        if null == $r10 goto label16;

        $r11 = new android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r12 = virtualinvoke r0.<android.support.test.runner.AndroidJUnitRunner: android.content.Context getTargetContext()>();

        specialinvoke $r11.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: void <init>(android.content.Context)>($r12);

        r28 = virtualinvoke $r11.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.support.test.internal.runner.tracker.UsageTracker buildIfPossible()>();

        if null == r28 goto label16;

        staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: void registerInstance(android.support.test.internal.runner.tracker.UsageTracker)>(r28);

     label16:
        $r29 = virtualinvoke r3.<android.support.test.internal.runner.TestRequestBuilder: android.support.test.internal.runner.TestRequest build(android.app.Instrumentation,android.os.Bundle)>(r0, r1);

        return $r29;

        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    transient android.support.test.internal.runner.TestRequestBuilder createTestRequestBuilder(java.io.PrintStream, java.lang.String[])
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.io.PrintStream r1;
        java.lang.String[] r2;
        android.support.test.internal.runner.TestRequestBuilder $r3;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.io.PrintStream;

        r2 := @parameter1: java.lang.String[];

        $r3 = new android.support.test.internal.runner.TestRequestBuilder;

        specialinvoke $r3.<android.support.test.internal.runner.TestRequestBuilder: void <init>(java.io.PrintStream,java.lang.String[])>(r1, r2);

        return $r3;
    }

    private void parseTestClass(java.lang.String, android.support.test.internal.runner.TestRequestBuilder)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        android.support.test.internal.runner.TestRequestBuilder r1;
        int i0, $i1;
        java.lang.String r2, r3, r4;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: android.support.test.internal.runner.TestRequestBuilder;

        i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(35);

        if i0 <= 0 goto label1;

        $i1 = i0 + 1;

        r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r1.<android.support.test.internal.runner.TestRequestBuilder: void addTestMethod(java.lang.String,java.lang.String)>(r4, r2);

        goto label2;

     label1:
        virtualinvoke r1.<android.support.test.internal.runner.TestRequestBuilder: void addTestClass(java.lang.String)>(r3);

     label2:
        return;
    }

    private void parseTestClassesFromFile(java.lang.String, android.support.test.internal.runner.TestRequestBuilder)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.String r1, r4, $r10, $r17, $r20, r31;
        android.support.test.internal.runner.TestRequestBuilder r2;
        java.util.ArrayList r3, $r6;
        java.lang.Throwable r5, $r12, $r13, $r14, $r15, $r18, $r21, $r22, r24, r25, r26, r27, r28, r29;
        java.io.BufferedReader $r7, r23;
        java.io.FileReader $r8;
        java.io.File $r9;
        java.lang.Object $r11;
        java.lang.Object[] $r16, $r19;
        java.util.Iterator r30;
        boolean $z1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.test.internal.runner.TestRequestBuilder;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r23 = null;

     label01:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.FileReader;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke $r8.<java.io.FileReader: void <init>(java.io.File)>($r9);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        r23 = $r7;

     label02:
        $r10 = virtualinvoke r23.<java.io.BufferedReader: java.lang.String readLine()>();

        r4 = $r10;

        if $r10 == null goto label03;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label02;

     label03:
        if r23 == null goto label23;

     label04:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label05:
        goto label23;

     label06:
        $r12 := @caughtexception;

        r24 = $r12;

        goto label23;

     label07:
        $r18 := @caughtexception;

        r25 = $r18;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r1;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("File not found: %s", $r19);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidJUnitRunner", $r20, r25);

     label08:
        if r23 == null goto label23;

     label09:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label10:
        goto label23;

     label11:
        $r22 := @caughtexception;

        r26 = $r22;

        goto label23;

     label12:
        $r15 := @caughtexception;

        r27 = $r15;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r1;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Something went wrong reading %s, ignoring file", $r16);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidJUnitRunner", $r17, r27);

     label13:
        if r23 == null goto label23;

     label14:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label15:
        goto label23;

     label16:
        $r21 := @caughtexception;

        r28 = $r21;

        goto label23;

     label17:
        $r14 := @caughtexception;

        r29 = $r14;

     label18:
        if r23 == null goto label22;

     label19:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label20:
        goto label22;

     label21:
        $r13 := @caughtexception;

        r5 = $r13;

     label22:
        throw r29;

     label23:
        r30 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r11 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r11;

        specialinvoke r0.<android.support.test.runner.AndroidJUnitRunner: void parseTestClass(java.lang.String,android.support.test.internal.runner.TestRequestBuilder)>(r31, r2);

        goto label24;

     label25:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label03 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    void addTimeout(java.lang.String, android.support.test.internal.runner.TestRequestBuilder)
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.String r1;
        android.support.test.internal.runner.TestRequestBuilder r2;
        long l0;
        byte $b1;
        java.lang.NumberFormatException $r3;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.test.internal.runner.TestRequestBuilder;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Timeout can not be negative");

        throw $r3;

     label1:
        virtualinvoke r2.<android.support.test.internal.runner.TestRequestBuilder: void setPerTestTimeout(long)>(l0);

        return;
    }

    private void setupDexmakerClassloader()
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.ClassLoader r1, r2;
        java.lang.Thread $r3, $r9;
        java.lang.Class $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7, $r8;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r5[0] = $r6;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Setting context classloader to \'%s\', Original: \'%s\'", $r5);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AndroidJUnitRunner", $r8);

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);

        return;
    }

    public android.app.Activity newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        android.support.test.runner.AndroidJUnitRunner r0;
        java.lang.Class r1;
        android.content.Context r2;
        android.os.IBinder r3;
        android.app.Application r4;
        android.content.Intent r5;
        android.content.pm.ActivityInfo r6;
        java.lang.CharSequence r7;
        android.app.Activity r8, $r20;
        java.lang.String r9, r11, r12, $r15, $r16, $r18;
        java.lang.Object r10;
        android.content.ComponentName r13, $r17;
        java.lang.Package $r14;
        boolean $z0, $z1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Application;

        r5 := @parameter4: android.content.Intent;

        r6 := @parameter5: android.content.pm.ActivityInfo;

        r7 := @parameter6: java.lang.CharSequence;

        r8 := @parameter7: android.app.Activity;

        r9 := @parameter8: java.lang.String;

        r10 := @parameter9: java.lang.Object;

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.Package getPackage()>();

        r11 = virtualinvoke $r14.<java.lang.Package: java.lang.String getName()>();

        r12 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        r13 = virtualinvoke r5.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r15 = virtualinvoke r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label1;

        $r16 = virtualinvoke r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 == 0 goto label1;

        $r17 = new android.content.ComponentName;

        $r18 = virtualinvoke r13.<android.content.ComponentName: java.lang.String getClassName()>();

        specialinvoke $r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r12, $r18);

        virtualinvoke r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r17);

     label1:
        $r20 = specialinvoke r0.<android.support.test.runner.MonitoringInstrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return $r20;
    }

android.support.test.runner.AndroidJUnitRunner$1
<android.support.test.runner.AndroidJUnitRunner$1: android.support.test.runner.AndroidJUnitRunner this$0>
    void <init>(android.support.test.runner.AndroidJUnitRunner)
    {
        android.support.test.runner.AndroidJUnitRunner$1 r0;
        android.support.test.runner.AndroidJUnitRunner r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner$1;

        r1 := @parameter0: android.support.test.runner.AndroidJUnitRunner;

        r0.<android.support.test.runner.AndroidJUnitRunner$1: android.support.test.runner.AndroidJUnitRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.runner.AndroidJUnitRunner$1 r0;
        android.support.test.runner.AndroidJUnitRunner $r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner$1;

        $r1 = r0.<android.support.test.runner.AndroidJUnitRunner$1: android.support.test.runner.AndroidJUnitRunner this$0>;

        virtualinvoke $r1.<android.support.test.runner.AndroidJUnitRunner: void waitForActivitiesToComplete()>();

        return;
    }

android.support.test.runner.AndroidJUnitRunner$2
<android.support.test.runner.AndroidJUnitRunner$2: android.support.test.runner.AndroidJUnitRunner this$0>
    void <init>(android.support.test.runner.AndroidJUnitRunner)
    {
        android.support.test.runner.AndroidJUnitRunner$2 r0;
        android.support.test.runner.AndroidJUnitRunner r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner$2;

        r1 := @parameter0: android.support.test.runner.AndroidJUnitRunner;

        r0.<android.support.test.runner.AndroidJUnitRunner$2: android.support.test.runner.AndroidJUnitRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.runner.AndroidJUnitRunner$2 r0;
        android.support.test.runner.AndroidJUnitRunner $r1;

        r0 := @this: android.support.test.runner.AndroidJUnitRunner$2;

        $r1 = r0.<android.support.test.runner.AndroidJUnitRunner$2: android.support.test.runner.AndroidJUnitRunner this$0>;

        virtualinvoke $r1.<android.support.test.runner.AndroidJUnitRunner: void waitForActivitiesToComplete()>();

        return;
    }

