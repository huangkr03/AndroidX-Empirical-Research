android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId>
    private void <init>(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r0;
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        java.net.URL $r4;
        java.util.HashMap r5;
        java.util.Map r6;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        $r1 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        r6 = (java.util.Map) r5;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion> = r6;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$000(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId> = $r2;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$100(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage> = $r2;

        $r4 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL access$200(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r4 = (java.net.URL) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI> = $r4;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$300(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel> = $r2;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$400(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model> = $r2;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$500(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution> = $r2;

        $r2 = staticinvoke <android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String access$600(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId> = $r2;

        return;
    }

    void <init>(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder, android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$1)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r0;
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r1;
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$1 $r2;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        $r1 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r2 := @parameter1: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$1;

        specialinvoke $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: void <init>(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>($r1);

        return;
    }

    public void sendUsages()
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r0;
        java.util.Map $r1, $r2;
        boolean $z0;
        java.util.HashMap $r3, r23;
        java.lang.StringBuilder $r4, r24;
        java.lang.String $r5, $r13, $r16, $r17;
        long $l0;
        java.util.Set $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        java.util.Map$Entry $r9;
        java.net.URL $r10;
        java.net.URLConnection $r11;
        java.net.HttpURLConnection $r12;
        byte[] $r14;
        int $i1, $i2, $i3;
        java.io.OutputStream $r15;
        java.lang.Throwable $r18, $r19, $r20, $r21, $r22;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        entermonitor $r1;

     label01:
        $r2 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label03;

     label02:
        exitmonitor $r1;

        return;

     label03:
        r23 = new java.util.HashMap;

        $r3 = r23;

        $r2 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        specialinvoke r23.<java.util.HashMap: void <init>(java.util.Map)>($r2);

        $r2 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label04:
        exitmonitor $r1;

        r24 = new java.lang.StringBuilder;

        $r4 = r24;

     label05:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("an=");

     label06:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage>;

     label07:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&tid=");

     label08:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId>;

     label09:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&v=1");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&z=");

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cid=");

     label10:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId>;

     label11:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sr=");

     label12:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution>;

     label13:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd2=");

     label14:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel>;

     label15:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd3=");

     label16:
        $r5 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model>;

     label17:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&t=appview");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sc=start");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r1 = (java.util.Map) $r3;

        $r6 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label49;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r10 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI>;

     label20:
        $r11 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>();

     label21:
        $r12 = (java.net.HttpURLConnection) $r11;

        r24 = new java.lang.StringBuilder;

        $r4 = r24;

     label22:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd=");

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

     label23:
        $r13 = (java.lang.String) $r8;

     label24:
        $r13 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r13, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&av=");

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

     label25:
        $r13 = (java.lang.String) $r8;

     label26:
        $r13 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r13, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r12.<java.net.HttpURLConnection: void setConnectTimeout(int)>(3000);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setReadTimeout(int)>(5000);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label27:
        $i1 = lengthof $r14;

     label28:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        $r15 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r14);

        $i1 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

     label29:
        $i1 = $i1 / 100;

        if $i1 == 2 goto label35;

     label30:
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $i1 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

        $r16 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $i2 = virtualinvoke $r17.<java.lang.String: int length()>();

     label31:
        $i2 = $i2 + 45;

     label32:
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        $i3 = virtualinvoke $r17.<java.lang.String: int length()>();

     label33:
        $i2 = $i2 + $i3;

        r24 = new java.lang.StringBuilder;

        $r4 = r24;

     label34:
        specialinvoke r24.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Analytics post: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. code: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InfraTrack", $r13);

     label35:
        if $r12 == null goto label19;

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        goto label19;

     label36:
        $r18 := @caughtexception;

        exitmonitor $r1;

        throw $r18;

     label37:
        $r19 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Impossible error happened. analytics disabled.", $r19);

        $r5 = null;

        goto label18;

     label38:
        $r20 := @caughtexception;

        $r12 = null;

     label39:
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $i1 = virtualinvoke $r16.<java.lang.String: int length()>();

     label40:
        $i1 = $i1 + 25;

        r24 = new java.lang.StringBuilder;

        $r4 = r24;

     label41:
        specialinvoke r24.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Analytics post: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. ");

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", $r13, $r20);

     label42:
        if $r12 == null goto label19;

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        goto label19;

     label43:
        $r21 := @caughtexception;

        $r12 = null;

     label44:
        if $r12 == null goto label45;

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

     label45:
        throw $r21;

     label46:
        $r21 := @caughtexception;

        goto label44;

     label47:
        $r21 := @caughtexception;

        goto label44;

     label48:
        $r22 := @caughtexception;

        $r20 = $r22;

        goto label39;

     label49:
        return;

        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.io.IOException from label05 to label06 with label37;
        catch java.io.IOException from label07 to label08 with label37;
        catch java.io.IOException from label09 to label10 with label37;
        catch java.io.IOException from label11 to label12 with label37;
        catch java.io.IOException from label13 to label14 with label37;
        catch java.io.IOException from label15 to label16 with label37;
        catch java.io.IOException from label17 to label18 with label37;
        catch java.io.IOException from label20 to label21 with label38;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch java.io.IOException from label22 to label23 with label48;
        catch java.io.IOException from label24 to label25 with label48;
        catch java.io.IOException from label26 to label27 with label48;
        catch java.io.IOException from label28 to label29 with label48;
        catch java.io.IOException from label30 to label31 with label48;
        catch java.io.IOException from label32 to label33 with label48;
        catch java.io.IOException from label34 to label35 with label48;
        catch java.lang.Throwable from label22 to label23 with label46;
        catch java.lang.Throwable from label24 to label25 with label46;
        catch java.lang.Throwable from label26 to label27 with label46;
        catch java.lang.Throwable from label28 to label29 with label46;
        catch java.lang.Throwable from label30 to label31 with label46;
        catch java.lang.Throwable from label32 to label33 with label46;
        catch java.lang.Throwable from label34 to label35 with label46;
        catch java.lang.Throwable from label39 to label40 with label47;
        catch java.lang.Throwable from label41 to label42 with label47;
    }

    public void trackUsage(java.lang.String, java.lang.String)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r0;
        java.lang.String $r1, $r2;
        java.util.Map $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        exitmonitor $r3;

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor $r3;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$1
android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId>
<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>
    public void <init>(android.content.Context)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        android.content.Context $r1;
        android.net.Uri$Builder $r2;
        android.net.Uri $r3;
        int $i0;
        java.lang.String $r4;
        java.lang.NullPointerException $r5;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("https");

        $r2 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("www.google-analytics.com");

        $r2 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>("collect");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri> = $r3;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId> = "UA-36650409-3";

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel> = $r4;

        $r4 = <android.os.Build: java.lang.String MODEL>;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model> = $r4;

        if $r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Context null!?");

        throw $r5;

     label1:
        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext> = $r1;

        return;
    }

    static java.lang.String access$000(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId>;

        return r1;
    }

    static java.lang.String access$100(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        return r1;
    }

    static java.net.URL access$200(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.net.URL r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI>;

        return r1;
    }

    static java.lang.String access$300(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel>;

        return r1;
    }

    static java.lang.String access$400(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model>;

        return r1;
    }

    static java.lang.String access$500(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>;

        return r1;
    }

    static java.lang.String access$600(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>;

        return r1;
    }

    private boolean hasInternetPermission()
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        int $i0;
        android.content.Context $r1;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERNET");

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.support.test.internal.runner.tracker.UsageTracker buildIfPossible()
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String $r1, $r13;
        boolean $z0;
        android.content.Context $r2;
        java.net.URL $r3;
        android.net.Uri $r4;
        java.lang.Object $r5;
        android.view.WindowManager $r6;
        android.view.Display $r7;
        java.util.UUID $r8;
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r9;
        java.security.MessageDigest $r10;
        byte[] $r11;
        java.math.BigInteger $r12;
        int $i0;
        java.lang.Throwable $r14, $r15, $r16;
        java.lang.StringBuilder $r17;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $z0 = specialinvoke $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hasInternetPermission()>();

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InfraTrack", "Tracking disabled due to lack of internet permissions");

        return null;

     label01:
        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        if $r1 != null goto label02;

        $r2 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withTargetPackage(java.lang.String)>($r1);

     label02:
        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.google.analytics");

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InfraTrack", "Refusing to use analytics while testing analytics.");

        return null;

     label03:
        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("com.google.");

     label05:
        if $z0 != 0 goto label10;

        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("com.android.");

     label07:
        if $z0 != 0 goto label10;

        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("android.support.");

     label09:
        if $z0 == 0 goto label15;

     label10:
        $r3 = new java.net.URL;

        $r4 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>;

     label11:
        $r1 = virtualinvoke $r4.<android.net.Uri: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

     label12:
        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI> = $r3;

        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>;

        if $r1 != null goto label13;

        $r2 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $r5 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r6 = (android.view.WindowManager) $r5;

        $r7 = interfaceinvoke $r6.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        if $r7 != null goto label35;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution> = "0x0";

     label13:
        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>;

        if $r1 != null goto label14;

        $r8 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r8.<java.util.UUID: java.lang.String toString()>();

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId> = $r1;

     label14:
        $r9 = new android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        specialinvoke $r9.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker: void <init>(android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder,android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$1)>($r0, null);

        return $r9;

     label15:
        $z0 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed>;

        if $z0 != 0 goto label26;

     label16:
        $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        virtualinvoke $r10.<java.security.MessageDigest: void reset()>();

     label17:
        $r1 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

     label18:
        $r11 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r11);

     label19:
        $r12 = new java.math.BigInteger;

     label20:
        $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r12.<java.math.BigInteger: void <init>(byte[])>($r11);

     label21:
        $r1 = "sha256-";

     label22:
        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

     label23:
        if $i0 == 0 goto label28;

     label24:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String concat(java.lang.String)>($r13);

     label25:
        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage> = $r1;

     label26:
        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed> = 1;

        goto label10;

     label27:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Cannot hash package name.", $r14);

        return null;

     label28:
        $r1 = new java.lang.String;

     label29:
        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>("sha256-");

     label30:
        goto label25;

     label31:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Impossible - no utf-8 encoding?", $r15);

        return null;

     label32:
        $r16 := @caughtexception;

        $r1 = "Tracking disabled bad url: ";

        $r4 = $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>;

        $r13 = virtualinvoke $r4.<android.net.Uri: java.lang.String toString()>();

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 == 0 goto label34;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String concat(java.lang.String)>($r13);

     label33:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", $r1, $r16);

        return null;

     label34:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>("Tracking disabled bad url: ");

        goto label33;

     label35:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r7.<android.view.Display: int getWidth()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i0 = virtualinvoke $r7.<android.view.Display: int getHeight()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution> = $r1;

        goto label13;

        catch java.security.NoSuchAlgorithmException from label04 to label05 with label27;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label27;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label27;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label31;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label31;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label31;
        catch java.net.MalformedURLException from label11 to label12 with label32;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label27;
        catch java.security.NoSuchAlgorithmException from label18 to label19 with label27;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label27;
        catch java.security.NoSuchAlgorithmException from label22 to label23 with label27;
        catch java.security.NoSuchAlgorithmException from label24 to label25 with label27;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label31;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label31;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label31;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label31;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label31;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label27;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label31;
    }

    public android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withTargetPackage(java.lang.String)
    {
        android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder $r0;
        java.lang.String $r1;

        $r0 := @this: android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 := @parameter0: java.lang.String;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed> = 0;

        $r0.<android.support.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage> = $r1;

        return $r0;
    }

