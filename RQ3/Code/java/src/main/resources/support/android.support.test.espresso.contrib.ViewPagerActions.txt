android.support.test.espresso.contrib.ViewPagerActions
<android.support.test.espresso.contrib.ViewPagerActions: boolean DEFAULT_SMOOTH_SCROLL>
    private void <init>()
    {
        android.support.test.espresso.contrib.ViewPagerActions r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.ViewAction scrollRight()
    {
        android.support.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <android.support.test.espresso.contrib.ViewPagerActions: android.support.test.espresso.ViewAction scrollRight(boolean)>(0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollRight(boolean)
    {
        boolean z0;
        android.support.test.espresso.contrib.ViewPagerActions$1 $r0;

        z0 := @parameter0: boolean;

        $r0 = new android.support.test.espresso.contrib.ViewPagerActions$1;

        specialinvoke $r0.<android.support.test.espresso.contrib.ViewPagerActions$1: void <init>(boolean)>(z0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollLeft()
    {
        android.support.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <android.support.test.espresso.contrib.ViewPagerActions: android.support.test.espresso.ViewAction scrollLeft(boolean)>(0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollLeft(boolean)
    {
        boolean z0;
        android.support.test.espresso.contrib.ViewPagerActions$2 $r0;

        z0 := @parameter0: boolean;

        $r0 = new android.support.test.espresso.contrib.ViewPagerActions$2;

        specialinvoke $r0.<android.support.test.espresso.contrib.ViewPagerActions$2: void <init>(boolean)>(z0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToLast()
    {
        android.support.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <android.support.test.espresso.contrib.ViewPagerActions: android.support.test.espresso.ViewAction scrollToLast(boolean)>(0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToLast(boolean)
    {
        boolean z0;
        android.support.test.espresso.contrib.ViewPagerActions$3 $r0;

        z0 := @parameter0: boolean;

        $r0 = new android.support.test.espresso.contrib.ViewPagerActions$3;

        specialinvoke $r0.<android.support.test.espresso.contrib.ViewPagerActions$3: void <init>(boolean)>(z0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToFirst()
    {
        android.support.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <android.support.test.espresso.contrib.ViewPagerActions: android.support.test.espresso.ViewAction scrollToFirst(boolean)>(0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToFirst(boolean)
    {
        boolean z0;
        android.support.test.espresso.contrib.ViewPagerActions$4 $r0;

        z0 := @parameter0: boolean;

        $r0 = new android.support.test.espresso.contrib.ViewPagerActions$4;

        specialinvoke $r0.<android.support.test.espresso.contrib.ViewPagerActions$4: void <init>(boolean)>(z0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToPage(int)
    {
        int i0;
        android.support.test.espresso.ViewAction $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.support.test.espresso.contrib.ViewPagerActions: android.support.test.espresso.ViewAction scrollToPage(int,boolean)>(i0, 0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction scrollToPage(int, boolean)
    {
        int i0;
        boolean z0;
        android.support.test.espresso.contrib.ViewPagerActions$5 $r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r0 = new android.support.test.espresso.contrib.ViewPagerActions$5;

        specialinvoke $r0.<android.support.test.espresso.contrib.ViewPagerActions$5: void <init>(int,boolean)>(i0, z0);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction clickBetweenTwoTitles(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.support.test.espresso.action.Tap $r4;
        android.support.test.espresso.action.Press $r5;
        android.support.test.espresso.contrib.ViewPagerActions$6 r6;
        android.support.test.espresso.action.GeneralClickAction r7;
        android.support.test.espresso.ViewAction r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r7 = new android.support.test.espresso.action.GeneralClickAction;

        $r4 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        r6 = new android.support.test.espresso.contrib.ViewPagerActions$6;

        specialinvoke r6.<android.support.test.espresso.contrib.ViewPagerActions$6: void <init>(java.lang.String,java.lang.String)>(r0, r1);

        $r5 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke r7.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int)>($r4, r6, $r5, 0, 0);

        r8 = (android.support.test.espresso.ViewAction) r7;

        return r8;
    }

android.support.test.espresso.contrib.ViewPagerActions$1
<android.support.test.espresso.contrib.ViewPagerActions$1: boolean val$smoothScroll>
    void <init>(boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$1 r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$1;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$1: boolean val$smoothScroll> = z0;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.contrib.ViewPagerActions$1 r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$1;

        return "ViewPager move one page to the right";
    }

    protected void performScroll(android.support.v4.view.ViewPager)
    {
        android.support.test.espresso.contrib.ViewPagerActions$1 r0;
        android.support.v4.view.ViewPager r1;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$1;

        r1 := @parameter0: android.support.v4.view.ViewPager;

        i0 = virtualinvoke r1.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $i1 = i0 + 1;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$1: boolean val$smoothScroll>;

        virtualinvoke r1.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i1, $z0);

        return;
    }

android.support.test.espresso.contrib.ViewPagerActions$2
<android.support.test.espresso.contrib.ViewPagerActions$2: boolean val$smoothScroll>
    void <init>(boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$2 r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$2;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$2: boolean val$smoothScroll> = z0;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.contrib.ViewPagerActions$2 r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$2;

        return "ViewPager move one page to the left";
    }

    protected void performScroll(android.support.v4.view.ViewPager)
    {
        android.support.test.espresso.contrib.ViewPagerActions$2 r0;
        android.support.v4.view.ViewPager r1;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$2;

        r1 := @parameter0: android.support.v4.view.ViewPager;

        i0 = virtualinvoke r1.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $i1 = i0 - 1;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$2: boolean val$smoothScroll>;

        virtualinvoke r1.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i1, $z0);

        return;
    }

android.support.test.espresso.contrib.ViewPagerActions$3
<android.support.test.espresso.contrib.ViewPagerActions$3: boolean val$smoothScroll>
    void <init>(boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$3 r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$3;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$3: boolean val$smoothScroll> = z0;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.contrib.ViewPagerActions$3 r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$3;

        return "ViewPager move to last page";
    }

    protected void performScroll(android.support.v4.view.ViewPager)
    {
        android.support.test.espresso.contrib.ViewPagerActions$3 r0;
        android.support.v4.view.ViewPager r1;
        int i0, $i1;
        android.support.v4.view.PagerAdapter $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$3;

        r1 := @parameter0: android.support.v4.view.ViewPager;

        $r2 = virtualinvoke r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        i0 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 <= 0 goto label1;

        $i1 = i0 - 1;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$3: boolean val$smoothScroll>;

        virtualinvoke r1.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i1, $z0);

     label1:
        return;
    }

android.support.test.espresso.contrib.ViewPagerActions$4
<android.support.test.espresso.contrib.ViewPagerActions$4: boolean val$smoothScroll>
    void <init>(boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$4 r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$4;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$4: boolean val$smoothScroll> = z0;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.contrib.ViewPagerActions$4 r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$4;

        return "ViewPager move to first page";
    }

    protected void performScroll(android.support.v4.view.ViewPager)
    {
        android.support.test.espresso.contrib.ViewPagerActions$4 r0;
        android.support.v4.view.ViewPager r1;
        int i0;
        android.support.v4.view.PagerAdapter $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$4;

        r1 := @parameter0: android.support.v4.view.ViewPager;

        $r2 = virtualinvoke r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        i0 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 <= 0 goto label1;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$4: boolean val$smoothScroll>;

        virtualinvoke r1.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>(0, $z0);

     label1:
        return;
    }

android.support.test.espresso.contrib.ViewPagerActions$5
<android.support.test.espresso.contrib.ViewPagerActions$5: int val$page>
<android.support.test.espresso.contrib.ViewPagerActions$5: boolean val$smoothScroll>
    void <init>(int, boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$5 r0;
        int i0;
        boolean z0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$5;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$5: int val$page> = i0;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$5: boolean val$smoothScroll> = z0;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.contrib.ViewPagerActions$5 r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$5;

        return "ViewPager move to page";
    }

    protected void performScroll(android.support.v4.view.ViewPager)
    {
        android.support.test.espresso.contrib.ViewPagerActions$5 r0;
        android.support.v4.view.ViewPager r1;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$5;

        r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$5: int val$page>;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$5: boolean val$smoothScroll>;

        virtualinvoke r1.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i0, $z0);

        return;
    }

android.support.test.espresso.contrib.ViewPagerActions$6
<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title1>
<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title2>
    void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.espresso.contrib.ViewPagerActions$6 r0;
        java.lang.String r1, r2;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$6;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title1> = r1;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title2> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float[] calculateCoordinates(android.view.View)
    {
        android.support.test.espresso.contrib.ViewPagerActions$6 r0;
        android.view.View r1, r4;
        android.support.v4.view.PagerTitleStrip r2;
        int[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21;
        android.widget.TextView r5;
        java.lang.CharSequence r6;
        float[] $r7, $r8;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2;
        java.lang.String $r9, $r10;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$6;

        r1 := @parameter0: android.view.View;

        r2 = (android.support.v4.view.PagerTitleStrip) r1;

        r3 = newarray (int)[2];

        virtualinvoke r2.<android.support.v4.view.PagerTitleStrip: void getLocationOnScreen(int[])>(r3);

        i17 = 0;

        i18 = 0;

        i19 = 0;

        i20 = 0;

        i0 = virtualinvoke r2.<android.support.v4.view.PagerTitleStrip: int getChildCount()>();

        i21 = 0;

     label1:
        if i21 >= i0 goto label4;

        r4 = virtualinvoke r2.<android.support.v4.view.PagerTitleStrip: android.view.View getChildAt(int)>(i21);

        $z0 = r4 instanceof android.widget.TextView;

        if $z0 == 0 goto label3;

        r5 = (android.widget.TextView) r4;

        r6 = virtualinvoke r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r9 = r0.<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title1>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        i17 = virtualinvoke r5.<android.widget.TextView: int getLeft()>();

        i18 = virtualinvoke r5.<android.widget.TextView: int getRight()>();

        goto label3;

     label2:
        $r10 = r0.<android.support.test.espresso.contrib.ViewPagerActions$6: java.lang.String val$title2>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label3;

        i19 = virtualinvoke r5.<android.widget.TextView: int getLeft()>();

        i20 = virtualinvoke r5.<android.widget.TextView: int getRight()>();

     label3:
        i21 = i21 + 1;

        goto label1;

     label4:
        if i18 >= i19 goto label5;

        $r8 = newarray (float)[2];

        $i11 = r3[0];

        $i9 = i18 + i19;

        $i10 = $i9 / 2;

        $i12 = $i11 + $i10;

        $f2 = (float) $i12;

        $r8[0] = $f2;

        $i13 = r3[1];

        $i14 = virtualinvoke r2.<android.support.v4.view.PagerTitleStrip: int getHeight()>();

        $i15 = $i14 / 2;

        $i16 = $i13 + $i15;

        $f3 = (float) $i16;

        $r8[1] = $f3;

        return $r8;

     label5:
        $r7 = newarray (float)[2];

        $i3 = r3[0];

        $i1 = i20 + i17;

        $i2 = $i1 / 2;

        $i4 = $i3 + $i2;

        $f0 = (float) $i4;

        $r7[0] = $f0;

        $i5 = r3[1];

        $i6 = virtualinvoke r2.<android.support.v4.view.PagerTitleStrip: int getHeight()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        $f1 = (float) $i8;

        $r7[1] = $f1;

        return $r7;
    }

android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener
<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState>
<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback>
<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean mNeedsIdle>
    private void <init>()
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState> = 0;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean mNeedsIdle> = 0;

        return;
    }

    public void registerIdleTransitionCallback(android.support.test.espresso.IdlingResource$ResourceCallback)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        android.support.test.espresso.IdlingResource$ResourceCallback r1;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        r1 := @parameter0: android.support.test.espresso.IdlingResource$ResourceCallback;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback> = r1;

        return;
    }

    public java.lang.String getName()
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        return "View pager listener";
    }

    public boolean isIdleNow()
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        $z0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean mNeedsIdle>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState>;

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void onPageSelected(int)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        int i0, $i1;
        android.support.test.espresso.IdlingResource$ResourceCallback $r1, $r2;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState>;

        if $i1 != 0 goto label1;

        $r1 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback>;

        interfaceinvoke $r2.<android.support.test.espresso.IdlingResource$ResourceCallback: void onTransitionToIdle()>();

     label1:
        return;
    }

    public void onPageScrollStateChanged(int)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        int i0, $i1;
        android.support.test.espresso.IdlingResource$ResourceCallback $r1, $r2;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        i0 := @parameter0: int;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState> = i0;

        $i1 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: int mCurrState>;

        if $i1 != 0 goto label1;

        $r1 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: android.support.test.espresso.IdlingResource$ResourceCallback mCallback>;

        interfaceinvoke $r2.<android.support.test.espresso.IdlingResource$ResourceCallback: void onTransitionToIdle()>();

     label1:
        return;
    }

    public void onPageScrolled(int, float, int)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        int i0, i1;
        float f0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 := @parameter2: int;

        return;
    }

    void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        android.support.test.espresso.contrib.ViewPagerActions$1 r1;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        r1 := @parameter0: android.support.test.espresso.contrib.ViewPagerActions$1;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: void <init>()>();

        return;
    }

    static boolean access$202(android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener, boolean)
    {
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r0;
        boolean z0;

        r0 := @parameter0: android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        z0 := @parameter1: boolean;

        r0.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean mNeedsIdle> = z0;

        return z0;
    }

android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction
    private void <init>()
    {
        android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction r0;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction;

        $r1 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        return $r1;
    }

    public final void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        android.support.v4.view.ViewPager r3, $r8;
        android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener r4, r12;
        java.lang.Throwable r5, $r10;
        java.lang.Object[] $r7, $r9, $r11;
        android.support.test.espresso.IdlingResource[] r13, r14, r15;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        r3 = (android.support.v4.view.ViewPager) r2;

        r12 = new android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener;

        specialinvoke r12.<android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)>(null);

        r4 = r12;

        virtualinvoke r3.<android.support.v4.view.ViewPager: void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r4);

     label1:
        $r7 = newarray (android.support.test.espresso.IdlingResource)[1];

        $r7[0] = r4;

        r13 = (android.support.test.espresso.IdlingResource[]) $r7;

        staticinvoke <android.support.test.espresso.Espresso: boolean registerIdlingResources(android.support.test.espresso.IdlingResource[])>(r13);

        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        $r8 = (android.support.v4.view.ViewPager) r2;

        virtualinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void performScroll(android.support.v4.view.ViewPager)>($r8);

        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        staticinvoke <android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean access$202(android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener,boolean)>(r4, 1);

        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        staticinvoke <android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener: boolean access$202(android.support.test.espresso.contrib.ViewPagerActions$CustomViewPagerListener,boolean)>(r4, 0);

     label2:
        $r9 = newarray (android.support.test.espresso.IdlingResource)[1];

        $r9[0] = r4;

        r14 = (android.support.test.espresso.IdlingResource[]) $r9;

        staticinvoke <android.support.test.espresso.Espresso: boolean unregisterIdlingResources(android.support.test.espresso.IdlingResource[])>(r14);

        virtualinvoke r3.<android.support.v4.view.ViewPager: void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r4);

        goto label5;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

     label4:
        $r11 = newarray (android.support.test.espresso.IdlingResource)[1];

        $r11[0] = r4;

        r15 = (android.support.test.espresso.IdlingResource[]) $r11;

        staticinvoke <android.support.test.espresso.Espresso: boolean unregisterIdlingResources(android.support.test.espresso.IdlingResource[])>(r15);

        virtualinvoke r3.<android.support.v4.view.ViewPager: void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r4);

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void performScroll(android.support.v4.view.ViewPager)>
    void <init>(android.support.test.espresso.contrib.ViewPagerActions$1)
    {
        android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction r0;
        android.support.test.espresso.contrib.ViewPagerActions$1 r1;

        r0 := @this: android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction;

        r1 := @parameter0: android.support.test.espresso.contrib.ViewPagerActions$1;

        specialinvoke r0.<android.support.test.espresso.contrib.ViewPagerActions$ViewPagerScrollAction: void <init>()>();

        return;
    }

