android.support.media2.MediaController2Stub
<android.support.media2.MediaController2Stub: java.lang.String TAG>
<android.support.media2.MediaController2Stub: boolean DEBUG>
<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController>
    void <init>(android.support.media2.MediaController2ImplBase)
    {
        android.support.media2.MediaController2Stub r0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        specialinvoke r0.<android.support.media2.IMediaController2$Stub: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController> = $r2;

        return;
    }

    public void onCurrentMediaItemChanged(androidx.versionedparcelable.ParcelImpl)
    {
        android.support.media2.MediaController2Stub r0;
        androidx.versionedparcelable.ParcelImpl r1;
        android.support.media2.MediaController2ImplBase r2;
        java.lang.Throwable r3, $r6;
        androidx.versionedparcelable.VersionedParcelable $r4;
        android.support.media2.MediaItem2 $r5;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: androidx.versionedparcelable.ParcelImpl;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        $r4 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r1);

        $r5 = (android.support.media2.MediaItem2) $r4;

        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyCurrentMediaItemChanged(android.support.media2.MediaItem2)>($r5);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onPlayerStateChanged(long, long, int)
    {
        android.support.media2.MediaController2Stub r0;
        long l0, l1;
        int i2;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.support.media2.MediaController2Stub;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

     label1:
        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r1.<android.support.media2.MediaController2ImplBase: void notifyPlayerStateChanges(long,long,int)>(l0, l1, i2);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onPlaybackSpeedChanged(long, long, float)
    {
        android.support.media2.MediaController2Stub r0;
        long l0, l1;
        float f0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.support.media2.MediaController2Stub;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

     label1:
        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r1.<android.support.media2.MediaController2ImplBase: void notifyPlaybackSpeedChanges(long,long,float)>(l0, l1, f0);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onBufferingStateChanged(androidx.versionedparcelable.ParcelImpl, int, long)
    {
        android.support.media2.MediaController2Stub r0;
        androidx.versionedparcelable.ParcelImpl r1;
        int i0;
        long l1;
        android.support.media2.MediaController2ImplBase r2;
        java.lang.Throwable r3, $r6;
        androidx.versionedparcelable.VersionedParcelable $r4;
        android.support.media2.MediaItem2 $r5;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: androidx.versionedparcelable.ParcelImpl;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        $r4 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r1);

        $r5 = (android.support.media2.MediaItem2) $r4;

        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyBufferingStateChanged(android.support.media2.MediaItem2,int,long)>($r5, i0, l1);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onPlaylistChanged(java.util.List, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub r0;
        java.util.List r1;
        android.os.Bundle r2;
        android.support.media2.MediaController2ImplBase r3;
        androidx.versionedparcelable.ParcelImpl r4;
        android.support.media2.MediaItem2 r5;
        java.util.ArrayList $r6, r15;
        boolean $z0;
        java.lang.Object $r7;
        androidx.versionedparcelable.VersionedParcelable $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13, r14;
        java.util.Iterator r16;
        android.support.media2.MediaMetadata2 r17;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.Bundle;

     label1:
        r3 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r14 = $r13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r1 != null goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPlaylistChanged(): Ignoring null playlist from ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", $r12);

        return;

     label5:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r15 = $r6;

        r16 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r7 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.versionedparcelable.ParcelImpl) $r7;

        $r8 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r4);

        r5 = (android.support.media2.MediaItem2) $r8;

        if r5 != null goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onPlaylistChanged(): Ignoring null item in playlist");

        goto label8;

     label7:
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r5);

     label8:
        goto label6;

     label9:
        r17 = staticinvoke <android.support.media2.MediaMetadata2: android.support.media2.MediaMetadata2 fromBundle(android.os.Bundle)>(r2);

        virtualinvoke r3.<android.support.media2.MediaController2ImplBase: void notifyPlaylistChanges(java.util.List,android.support.media2.MediaMetadata2)>(r15, r17);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onPlaylistMetadataChanged(android.os.Bundle) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        android.os.Bundle r1;
        android.support.media2.MediaController2ImplBase r2;
        java.lang.Throwable $r3, r4;
        android.support.media2.MediaMetadata2 r5;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: android.os.Bundle;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        r5 = staticinvoke <android.support.media2.MediaMetadata2: android.support.media2.MediaMetadata2 fromBundle(android.os.Bundle)>(r1);

        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyPlaylistMetadataChanges(android.support.media2.MediaMetadata2)>(r5);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onRepeatModeChanged(int)
    {
        android.support.media2.MediaController2Stub r0;
        int i0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.support.media2.MediaController2Stub;

        i0 := @parameter0: int;

     label1:
        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r1.<android.support.media2.MediaController2ImplBase: void notifyRepeatModeChanges(int)>(i0);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onShuffleModeChanged(int)
    {
        android.support.media2.MediaController2Stub r0;
        int i0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.support.media2.MediaController2Stub;

        i0 := @parameter0: int;

     label1:
        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r1.<android.support.media2.MediaController2ImplBase: void notifyShuffleModeChanges(int)>(i0);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onPlaybackInfoChanged(androidx.versionedparcelable.ParcelImpl) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        androidx.versionedparcelable.ParcelImpl r1;
        android.support.media2.MediaController2ImplBase r2;
        androidx.versionedparcelable.VersionedParcelable $r3;
        java.lang.Throwable $r4, r5;
        android.support.media2.MediaController2$PlaybackInfo r6;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: androidx.versionedparcelable.ParcelImpl;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaController2Stub", "onPlaybackInfoChanged");

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        $r3 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r1);

        r6 = (android.support.media2.MediaController2$PlaybackInfo) $r3;

        if r6 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onPlaybackInfoChanged(): Ignoring null playbackInfo");

        return;

     label5:
        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyPlaybackInfoChanges(android.support.media2.MediaController2$PlaybackInfo)>(r6);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onSeekCompleted(long, long, long)
    {
        android.support.media2.MediaController2Stub r0;
        long l0, l1, l2;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.support.media2.MediaController2Stub;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

     label1:
        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r1.<android.support.media2.MediaController2ImplBase: void notifySeekCompleted(long,long,long)>(l0, l1, l2);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onError(int, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub r0;
        int i0;
        android.os.Bundle r1;
        android.support.media2.MediaController2ImplBase r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.support.media2.MediaController2Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyError(int,android.os.Bundle)>(i0, r1);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onRoutesInfoChanged(java.util.List)
    {
        android.support.media2.MediaController2Stub r0;
        java.util.List r1;
        android.support.media2.MediaController2ImplBase r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.util.List;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        staticinvoke <android.support.media2.MediaUtils2: void keepUnparcelableBundlesOnly(java.util.List)>(r1);

        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void notifyRoutesInfoChanged(java.util.List)>(r1);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onConnected(android.support.media2.IMediaSession2, androidx.versionedparcelable.ParcelImpl, int, androidx.versionedparcelable.ParcelImpl, long, long, float, long, androidx.versionedparcelable.ParcelImpl, int, int, java.util.List, android.app.PendingIntent)
    {
        android.support.media2.MediaController2Stub r0;
        android.support.media2.IMediaSession2 r1;
        androidx.versionedparcelable.ParcelImpl r2, r3, r4;
        int i0, i4, i5, $i6, i8;
        long l1, l2, l3;
        float f0;
        java.util.List r5;
        android.app.PendingIntent r6;
        android.support.media2.MediaController2ImplBase r7;
        android.support.media2.MediaItem2 r8, $r14;
        java.lang.ref.WeakReference $r9;
        java.lang.Object $r10, $r18;
        androidx.versionedparcelable.VersionedParcelable $r11, $r13, $r15, $r20;
        android.support.media2.SessionCommandGroup2 $r12;
        android.support.media2.MediaController2$PlaybackInfo $r16;
        java.util.ArrayList $r17, r21;
        android.os.Parcelable $r19;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: android.support.media2.IMediaSession2;

        r2 := @parameter1: androidx.versionedparcelable.ParcelImpl;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.versionedparcelable.ParcelImpl;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        f0 := @parameter6: float;

        l3 := @parameter7: long;

        r4 := @parameter8: androidx.versionedparcelable.ParcelImpl;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        r5 := @parameter11: java.util.List;

        r6 := @parameter12: android.app.PendingIntent;

        $r9 = r0.<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController>;

        $r10 = virtualinvoke $r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.support.media2.MediaController2ImplBase) $r10;

        if r7 != null goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaController2Stub", "onConnected after MediaController2.close()");

        return;

     label1:
        r21 = null;

        if r5 == null goto label4;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r21 = $r17;

        i8 = 0;

     label2:
        $i6 = interfaceinvoke r5.<java.util.List: int size()>();

        if i8 >= $i6 goto label4;

        $r18 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i8);

        $r19 = (android.os.Parcelable) $r18;

        $r20 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>($r19);

        r8 = (android.support.media2.MediaItem2) $r20;

        if r8 == null goto label3;

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        $r11 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r2);

        $r12 = (android.support.media2.SessionCommandGroup2) $r11;

        $r13 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r3);

        $r14 = (android.support.media2.MediaItem2) $r13;

        $r15 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r4);

        $r16 = (android.support.media2.MediaController2$PlaybackInfo) $r15;

        virtualinvoke r7.<android.support.media2.MediaController2ImplBase: void onConnectedNotLocked(android.support.media2.IMediaSession2,android.support.media2.SessionCommandGroup2,int,android.support.media2.MediaItem2,long,long,float,long,android.support.media2.MediaController2$PlaybackInfo,int,int,java.util.List,android.app.PendingIntent)>(r1, $r12, i0, $r14, l1, l2, f0, l3, $r16, i5, i4, r21, r6);

        return;
    }

    public void onDisconnected()
    {
        android.support.media2.MediaController2Stub r0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.support.media2.MediaController2 $r4;

        r0 := @this: android.support.media2.MediaController2Stub;

        $r2 = r0.<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.support.media2.MediaController2ImplBase) $r3;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaController2Stub", "onDisconnected after MediaController2.close()");

        return;

     label1:
        $r4 = virtualinvoke r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 getInstance()>();

        virtualinvoke $r4.<android.support.media2.MediaController2: void close()>();

        return;
    }

    public void onCustomLayoutChanged(java.util.List)
    {
        android.support.media2.MediaController2Stub r0;
        java.util.List r1;
        android.support.media2.MediaController2ImplBase r2;
        android.support.media2.MediaSession2$CommandButton r3;
        java.util.ArrayList $r4, r10;
        int $i0, i3;
        java.lang.Object $r5;
        android.os.Parcelable $r6;
        androidx.versionedparcelable.VersionedParcelable $r7;
        java.lang.Throwable $r8, r9;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onCustomLayoutChanged(): Ignoring null commandButtonlist");

        return;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r9 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r2 != null goto label5;

        return;

     label5:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r10 = $r4;

        i3 = 0;

     label6:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label8;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (android.os.Parcelable) $r5;

        $r7 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>($r6);

        r3 = (android.support.media2.MediaSession2$CommandButton) $r7;

        if r3 == null goto label7;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3);

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void onCustomLayoutChanged(java.util.List)>(r10);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onAllowedCommandsChanged(androidx.versionedparcelable.ParcelImpl)
    {
        android.support.media2.MediaController2Stub r0;
        androidx.versionedparcelable.ParcelImpl r1;
        android.support.media2.MediaController2ImplBase r2;
        androidx.versionedparcelable.VersionedParcelable $r3;
        java.lang.Throwable $r4, r5;
        android.support.media2.SessionCommandGroup2 r6;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: androidx.versionedparcelable.ParcelImpl;

     label1:
        r2 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r2 != null goto label5;

        return;

     label5:
        $r3 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r1);

        r6 = (android.support.media2.SessionCommandGroup2) $r3;

        if r6 != null goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onAllowedCommandsChanged(): Ignoring null commands");

        return;

     label6:
        virtualinvoke r2.<android.support.media2.MediaController2ImplBase: void onAllowedCommandsChanged(android.support.media2.SessionCommandGroup2)>(r6);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onCustomCommand(androidx.versionedparcelable.ParcelImpl, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2Stub r0;
        androidx.versionedparcelable.ParcelImpl r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        android.support.media2.MediaController2ImplBase r4;
        androidx.versionedparcelable.VersionedParcelable $r5;
        java.lang.Throwable $r6, r7;
        android.support.media2.SessionCommand2 r8;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: androidx.versionedparcelable.ParcelImpl;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

     label1:
        r4 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        $r5 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>(r1);

        r8 = (android.support.media2.SessionCommand2) $r5;

        if r8 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onCustomCommand(): Ignoring null command");

        return;

     label5:
        virtualinvoke r4.<android.support.media2.MediaController2ImplBase: void onCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>(r8, r2, r3);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onGetLibraryRootDone(android.os.Bundle, java.lang.String, android.os.Bundle) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        android.os.Bundle r1, r3;
        java.lang.String r2;
        android.support.media2.MediaBrowser2 r4;
        java.lang.Throwable r5, $r8;
        java.util.concurrent.Executor $r6;
        android.support.media2.MediaController2Stub$1 $r7;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

     label1:
        r4 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r4 != null goto label5;

        return;

     label5:
        $r6 = virtualinvoke r4.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r7 = new android.support.media2.MediaController2Stub$1;

        specialinvoke $r7.<android.support.media2.MediaController2Stub$1: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,android.os.Bundle,java.lang.String,android.os.Bundle)>(r0, r4, r1, r2, r3);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onGetItemDone(java.lang.String, androidx.versionedparcelable.ParcelImpl) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.String r1;
        androidx.versionedparcelable.ParcelImpl r2;
        android.support.media2.MediaBrowser2 r3;
        java.lang.Throwable r4, $r7;
        java.util.concurrent.Executor $r5;
        android.support.media2.MediaController2Stub$2 $r6;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.versionedparcelable.ParcelImpl;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onGetItemDone(): Ignoring null mediaId");

        return;

     label1:
        r3 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r3 != null goto label5;

        return;

     label5:
        $r5 = virtualinvoke r3.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r6 = new android.support.media2.MediaController2Stub$2;

        specialinvoke $r6.<android.support.media2.MediaController2Stub$2: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,java.lang.String,androidx.versionedparcelable.ParcelImpl)>(r0, r3, r1, r2);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onGetChildrenDone(java.lang.String, int, int, java.util.List, android.os.Bundle) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.String r1;
        int i0, i1;
        java.util.List r2;
        android.os.Bundle r3;
        android.support.media2.MediaBrowser2 r4;
        java.lang.Throwable r5, $r8;
        java.util.concurrent.Executor $r6;
        android.support.media2.MediaController2Stub$3 $r7;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.os.Bundle;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onGetChildrenDone(): Ignoring null parentId");

        return;

     label1:
        r4 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r4 != null goto label5;

        return;

     label5:
        $r6 = virtualinvoke r4.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r7 = new android.support.media2.MediaController2Stub$3;

        specialinvoke $r7.<android.support.media2.MediaController2Stub$3: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,java.lang.String,int,int,java.util.List,android.os.Bundle)>(r0, r4, r1, i0, i1, r2, r3);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onSearchResultChanged(java.lang.String, int, android.os.Bundle) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        android.support.media2.MediaBrowser2 r3;
        java.lang.Throwable r4, $r7;
        boolean $z0;
        java.util.concurrent.Executor $r5;
        android.support.media2.MediaController2Stub$4 $r6;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onSearchResultChanged(): Ignoring empty query");

        return;

     label1:
        r3 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r3 != null goto label5;

        return;

     label5:
        $r5 = virtualinvoke r3.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r6 = new android.support.media2.MediaController2Stub$4;

        specialinvoke $r6.<android.support.media2.MediaController2Stub$4: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,java.lang.String,int,android.os.Bundle)>(r0, r3, r1, i0, r2);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onGetSearchResultDone(java.lang.String, int, int, java.util.List, android.os.Bundle) throws java.lang.RuntimeException
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.String r1;
        int i0, i1;
        java.util.List r2;
        android.os.Bundle r3;
        android.support.media2.MediaBrowser2 r4;
        java.lang.Throwable r5, $r8;
        boolean $z0;
        java.util.concurrent.Executor $r6;
        android.support.media2.MediaController2Stub$5 $r7;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onGetSearchResultDone(): Ignoring empty query");

        return;

     label1:
        r4 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r4 != null goto label5;

        return;

     label5:
        $r6 = virtualinvoke r4.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r7 = new android.support.media2.MediaController2Stub$5;

        specialinvoke $r7.<android.support.media2.MediaController2Stub$5: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,java.lang.String,int,int,java.util.List,android.os.Bundle)>(r0, r4, r1, i0, i1, r2, r3);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void onChildrenChanged(java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        android.support.media2.MediaBrowser2 r3;
        java.lang.Throwable r4, $r7;
        java.util.concurrent.Executor $r5;
        android.support.media2.MediaController2Stub$6 $r6;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "onChildrenChanged(): Ignoring null parentId");

        return;

     label1:
        r3 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaBrowser2 getBrowser()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaController2Stub", "Don\'t fail silently here. Highly likely a bug");

        return;

     label4:
        if r3 != null goto label5;

        return;

     label5:
        $r5 = virtualinvoke r3.<android.support.media2.MediaBrowser2: java.util.concurrent.Executor getCallbackExecutor()>();

        $r6 = new android.support.media2.MediaController2Stub$6;

        specialinvoke $r6.<android.support.media2.MediaController2Stub$6: void <init>(android.support.media2.MediaController2Stub,android.support.media2.MediaBrowser2,java.lang.String,int,android.os.Bundle)>(r0, r3, r1, i0, r2);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void destroy()
    {
        android.support.media2.MediaController2Stub r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: android.support.media2.MediaController2Stub;

        $r1 = r0.<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController>;

        virtualinvoke $r1.<java.lang.ref.WeakReference: void clear()>();

        return;
    }

    private android.support.media2.MediaController2ImplBase getController() throws java.lang.IllegalStateException
    {
        android.support.media2.MediaController2Stub r0;
        android.support.media2.MediaController2ImplBase r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaController2Stub;

        $r2 = r0.<android.support.media2.MediaController2Stub: java.lang.ref.WeakReference mController>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.support.media2.MediaController2ImplBase) $r3;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Controller is released");

        throw $r4;

     label1:
        return r1;
    }

    private android.support.media2.MediaBrowser2 getBrowser() throws java.lang.IllegalStateException
    {
        android.support.media2.MediaController2Stub r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.MediaController2 $r2, $r3;
        boolean $z0;
        android.support.media2.MediaBrowser2 $r4;

        r0 := @this: android.support.media2.MediaController2Stub;

        r1 = specialinvoke r0.<android.support.media2.MediaController2Stub: android.support.media2.MediaController2ImplBase getController()>();

        $r2 = virtualinvoke r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 getInstance()>();

        $z0 = $r2 instanceof android.support.media2.MediaBrowser2;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 getInstance()>();

        $r4 = (android.support.media2.MediaBrowser2) $r3;

        return $r4;

     label1:
        return null;
    }

android.support.media2.MediaController2Stub$1
<android.support.media2.MediaController2Stub$1: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootHints>
<android.support.media2.MediaController2Stub$1: java.lang.String val$rootMediaId>
<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootExtra>
<android.support.media2.MediaController2Stub$1: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, android.os.Bundle, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub$1 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        android.os.Bundle r3, r5;
        java.lang.String r4;

        r0 := @this: android.support.media2.MediaController2Stub$1;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.Bundle;

        r0.<android.support.media2.MediaController2Stub$1: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$1: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootHints> = r3;

        r0.<android.support.media2.MediaController2Stub$1: java.lang.String val$rootMediaId> = r4;

        r0.<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootExtra> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$1 r0;
        android.support.media2.MediaBrowser2 $r1, $r6;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        android.os.Bundle $r3, $r5;
        java.lang.String $r4;

        r0 := @this: android.support.media2.MediaController2Stub$1;

        $r1 = r0.<android.support.media2.MediaController2Stub$1: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r6 = r0.<android.support.media2.MediaController2Stub$1: android.support.media2.MediaBrowser2 val$browser>;

        $r5 = r0.<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootHints>;

        $r4 = r0.<android.support.media2.MediaController2Stub$1: java.lang.String val$rootMediaId>;

        $r3 = r0.<android.support.media2.MediaController2Stub$1: android.os.Bundle val$rootExtra>;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onGetLibraryRootDone(android.support.media2.MediaBrowser2,android.os.Bundle,java.lang.String,android.os.Bundle)>($r6, $r5, $r4, $r3);

        return;
    }

android.support.media2.MediaController2Stub$2
<android.support.media2.MediaController2Stub$2: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$2: java.lang.String val$mediaId>
<android.support.media2.MediaController2Stub$2: androidx.versionedparcelable.ParcelImpl val$item>
<android.support.media2.MediaController2Stub$2: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, java.lang.String, androidx.versionedparcelable.ParcelImpl)
    {
        android.support.media2.MediaController2Stub$2 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        java.lang.String r3;
        androidx.versionedparcelable.ParcelImpl r4;

        r0 := @this: android.support.media2.MediaController2Stub$2;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.versionedparcelable.ParcelImpl;

        r0.<android.support.media2.MediaController2Stub$2: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$2: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$2: java.lang.String val$mediaId> = r3;

        r0.<android.support.media2.MediaController2Stub$2: androidx.versionedparcelable.ParcelImpl val$item> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$2 r0;
        android.support.media2.MediaBrowser2 $r1, $r4;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        androidx.versionedparcelable.ParcelImpl $r3;
        java.lang.String $r5;
        androidx.versionedparcelable.VersionedParcelable $r6;
        android.support.media2.MediaItem2 $r7;

        r0 := @this: android.support.media2.MediaController2Stub$2;

        $r1 = r0.<android.support.media2.MediaController2Stub$2: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r4 = r0.<android.support.media2.MediaController2Stub$2: android.support.media2.MediaBrowser2 val$browser>;

        $r5 = r0.<android.support.media2.MediaController2Stub$2: java.lang.String val$mediaId>;

        $r3 = r0.<android.support.media2.MediaController2Stub$2: androidx.versionedparcelable.ParcelImpl val$item>;

        $r6 = staticinvoke <androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)>($r3);

        $r7 = (android.support.media2.MediaItem2) $r6;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onGetItemDone(android.support.media2.MediaBrowser2,java.lang.String,android.support.media2.MediaItem2)>($r4, $r5, $r7);

        return;
    }

android.support.media2.MediaController2Stub$3
<android.support.media2.MediaController2Stub$3: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$3: java.lang.String val$parentId>
<android.support.media2.MediaController2Stub$3: int val$page>
<android.support.media2.MediaController2Stub$3: int val$pageSize>
<android.support.media2.MediaController2Stub$3: java.util.List val$itemList>
<android.support.media2.MediaController2Stub$3: android.os.Bundle val$extras>
<android.support.media2.MediaController2Stub$3: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, java.lang.String, int, int, java.util.List, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub$3 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        java.lang.String r3;
        int i0, i1;
        java.util.List r4;
        android.os.Bundle r5;

        r0 := @this: android.support.media2.MediaController2Stub$3;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: android.os.Bundle;

        r0.<android.support.media2.MediaController2Stub$3: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$3: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$3: java.lang.String val$parentId> = r3;

        r0.<android.support.media2.MediaController2Stub$3: int val$page> = i0;

        r0.<android.support.media2.MediaController2Stub$3: int val$pageSize> = i1;

        r0.<android.support.media2.MediaController2Stub$3: java.util.List val$itemList> = r4;

        r0.<android.support.media2.MediaController2Stub$3: android.os.Bundle val$extras> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$3 r0;
        android.support.media2.MediaBrowser2 $r1, $r4;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        java.util.List $r3, $r6;
        java.lang.String $r5;
        int $i0, $i1;
        android.os.Bundle $r7;

        r0 := @this: android.support.media2.MediaController2Stub$3;

        $r1 = r0.<android.support.media2.MediaController2Stub$3: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r4 = r0.<android.support.media2.MediaController2Stub$3: android.support.media2.MediaBrowser2 val$browser>;

        $r5 = r0.<android.support.media2.MediaController2Stub$3: java.lang.String val$parentId>;

        $i0 = r0.<android.support.media2.MediaController2Stub$3: int val$page>;

        $i1 = r0.<android.support.media2.MediaController2Stub$3: int val$pageSize>;

        $r3 = r0.<android.support.media2.MediaController2Stub$3: java.util.List val$itemList>;

        $r6 = staticinvoke <android.support.media2.MediaUtils2: java.util.List convertParcelImplListToMediaItem2List(java.util.List)>($r3);

        $r7 = r0.<android.support.media2.MediaController2Stub$3: android.os.Bundle val$extras>;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onGetChildrenDone(android.support.media2.MediaBrowser2,java.lang.String,int,int,java.util.List,android.os.Bundle)>($r4, $r5, $i0, $i1, $r6, $r7);

        return;
    }

android.support.media2.MediaController2Stub$4
<android.support.media2.MediaController2Stub$4: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$4: java.lang.String val$query>
<android.support.media2.MediaController2Stub$4: int val$itemCount>
<android.support.media2.MediaController2Stub$4: android.os.Bundle val$extras>
<android.support.media2.MediaController2Stub$4: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub$4 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        java.lang.String r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaController2Stub$4;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        r0.<android.support.media2.MediaController2Stub$4: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$4: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$4: java.lang.String val$query> = r3;

        r0.<android.support.media2.MediaController2Stub$4: int val$itemCount> = i0;

        r0.<android.support.media2.MediaController2Stub$4: android.os.Bundle val$extras> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$4 r0;
        android.support.media2.MediaBrowser2 $r1, $r5;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        android.os.Bundle $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.support.media2.MediaController2Stub$4;

        $r1 = r0.<android.support.media2.MediaController2Stub$4: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r5 = r0.<android.support.media2.MediaController2Stub$4: android.support.media2.MediaBrowser2 val$browser>;

        $r4 = r0.<android.support.media2.MediaController2Stub$4: java.lang.String val$query>;

        $i0 = r0.<android.support.media2.MediaController2Stub$4: int val$itemCount>;

        $r3 = r0.<android.support.media2.MediaController2Stub$4: android.os.Bundle val$extras>;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onSearchResultChanged(android.support.media2.MediaBrowser2,java.lang.String,int,android.os.Bundle)>($r5, $r4, $i0, $r3);

        return;
    }

android.support.media2.MediaController2Stub$5
<android.support.media2.MediaController2Stub$5: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$5: java.lang.String val$query>
<android.support.media2.MediaController2Stub$5: int val$page>
<android.support.media2.MediaController2Stub$5: int val$pageSize>
<android.support.media2.MediaController2Stub$5: java.util.List val$itemList>
<android.support.media2.MediaController2Stub$5: android.os.Bundle val$extras>
<android.support.media2.MediaController2Stub$5: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, java.lang.String, int, int, java.util.List, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub$5 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        java.lang.String r3;
        int i0, i1;
        java.util.List r4;
        android.os.Bundle r5;

        r0 := @this: android.support.media2.MediaController2Stub$5;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: android.os.Bundle;

        r0.<android.support.media2.MediaController2Stub$5: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$5: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$5: java.lang.String val$query> = r3;

        r0.<android.support.media2.MediaController2Stub$5: int val$page> = i0;

        r0.<android.support.media2.MediaController2Stub$5: int val$pageSize> = i1;

        r0.<android.support.media2.MediaController2Stub$5: java.util.List val$itemList> = r4;

        r0.<android.support.media2.MediaController2Stub$5: android.os.Bundle val$extras> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$5 r0;
        android.support.media2.MediaBrowser2 $r1, $r4;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        java.util.List $r3, $r6;
        java.lang.String $r5;
        int $i0, $i1;
        android.os.Bundle $r7;

        r0 := @this: android.support.media2.MediaController2Stub$5;

        $r1 = r0.<android.support.media2.MediaController2Stub$5: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r4 = r0.<android.support.media2.MediaController2Stub$5: android.support.media2.MediaBrowser2 val$browser>;

        $r5 = r0.<android.support.media2.MediaController2Stub$5: java.lang.String val$query>;

        $i0 = r0.<android.support.media2.MediaController2Stub$5: int val$page>;

        $i1 = r0.<android.support.media2.MediaController2Stub$5: int val$pageSize>;

        $r3 = r0.<android.support.media2.MediaController2Stub$5: java.util.List val$itemList>;

        $r6 = staticinvoke <android.support.media2.MediaUtils2: java.util.List convertParcelImplListToMediaItem2List(java.util.List)>($r3);

        $r7 = r0.<android.support.media2.MediaController2Stub$5: android.os.Bundle val$extras>;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onGetSearchResultDone(android.support.media2.MediaBrowser2,java.lang.String,int,int,java.util.List,android.os.Bundle)>($r4, $r5, $i0, $i1, $r6, $r7);

        return;
    }

android.support.media2.MediaController2Stub$6
<android.support.media2.MediaController2Stub$6: android.support.media2.MediaBrowser2 val$browser>
<android.support.media2.MediaController2Stub$6: java.lang.String val$parentId>
<android.support.media2.MediaController2Stub$6: int val$itemCount>
<android.support.media2.MediaController2Stub$6: android.os.Bundle val$extras>
<android.support.media2.MediaController2Stub$6: android.support.media2.MediaController2Stub this$0>
    void <init>(android.support.media2.MediaController2Stub, android.support.media2.MediaBrowser2, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaController2Stub$6 r0;
        android.support.media2.MediaController2Stub r1;
        android.support.media2.MediaBrowser2 r2;
        java.lang.String r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaController2Stub$6;

        r1 := @parameter0: android.support.media2.MediaController2Stub;

        r2 := @parameter1: android.support.media2.MediaBrowser2;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        r0.<android.support.media2.MediaController2Stub$6: android.support.media2.MediaController2Stub this$0> = r1;

        r0.<android.support.media2.MediaController2Stub$6: android.support.media2.MediaBrowser2 val$browser> = r2;

        r0.<android.support.media2.MediaController2Stub$6: java.lang.String val$parentId> = r3;

        r0.<android.support.media2.MediaController2Stub$6: int val$itemCount> = i0;

        r0.<android.support.media2.MediaController2Stub$6: android.os.Bundle val$extras> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2Stub$6 r0;
        android.support.media2.MediaBrowser2 $r1, $r5;
        android.support.media2.MediaBrowser2$BrowserCallback $r2;
        android.os.Bundle $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.support.media2.MediaController2Stub$6;

        $r1 = r0.<android.support.media2.MediaController2Stub$6: android.support.media2.MediaBrowser2 val$browser>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaBrowser2: android.support.media2.MediaBrowser2$BrowserCallback getCallback()>();

        $r5 = r0.<android.support.media2.MediaController2Stub$6: android.support.media2.MediaBrowser2 val$browser>;

        $r4 = r0.<android.support.media2.MediaController2Stub$6: java.lang.String val$parentId>;

        $i0 = r0.<android.support.media2.MediaController2Stub$6: int val$itemCount>;

        $r3 = r0.<android.support.media2.MediaController2Stub$6: android.os.Bundle val$extras>;

        virtualinvoke $r2.<android.support.media2.MediaBrowser2$BrowserCallback: void onChildrenChanged(android.support.media2.MediaBrowser2,java.lang.String,int,android.os.Bundle)>($r5, $r4, $i0, $r3);

        return;
    }

