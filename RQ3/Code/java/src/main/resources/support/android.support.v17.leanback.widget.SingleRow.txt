android.support.v17.leanback.widget.SingleRow
<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Location mTmpLocation>
    void <init>()
    {
        android.support.v17.leanback.widget.SingleRow r0;
        android.support.v17.leanback.widget.Grid$Location $r1;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        specialinvoke r0.<android.support.v17.leanback.widget.Grid: void <init>()>();

        $r1 = new android.support.v17.leanback.widget.Grid$Location;

        specialinvoke $r1.<android.support.v17.leanback.widget.Grid$Location: void <init>(int)>(0);

        r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Location mTmpLocation> = $r1;

        virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: void setNumRows(int)>(1);

        return;
    }

    public final android.support.v17.leanback.widget.Grid$Location getLocation(int)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int i0;
        android.support.v17.leanback.widget.Grid$Location $r1;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Location mTmpLocation>;

        return $r1;
    }

    public final void debugPrint(java.io.PrintWriter)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        java.io.PrintWriter r1;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("SingleRow<");

        $i0 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i1 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(">");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    int getStartIndexForAppend()
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.support.v17.leanback.widget.Grid$Provider $r1;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        $i0 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        if $i0 < 0 goto label1;

        $i6 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        $i7 = $i6 + 1;

        return $i7;

     label1:
        $i1 = r0.<android.support.v17.leanback.widget.SingleRow: int mStartIndex>;

        if $i1 == -1 goto label2;

        $i2 = r0.<android.support.v17.leanback.widget.SingleRow: int mStartIndex>;

        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i3 = interfaceinvoke $r1.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        $i4 = $i3 - 1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

        return $i5;

     label2:
        return 0;
    }

    int getStartIndexForPrepend()
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.support.v17.leanback.widget.Grid$Provider $r1, $r2;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        $i0 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        if $i0 < 0 goto label1;

        $i8 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        $i9 = $i8 - 1;

        return $i9;

     label1:
        $i1 = r0.<android.support.v17.leanback.widget.SingleRow: int mStartIndex>;

        if $i1 == -1 goto label2;

        $i4 = r0.<android.support.v17.leanback.widget.SingleRow: int mStartIndex>;

        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i5 = interfaceinvoke $r2.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        $i6 = $i5 - 1;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i6);

        return $i7;

     label2:
        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i2 = interfaceinvoke $r1.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        $i3 = $i2 - 1;

        return $i3;
    }

    protected final boolean prependVisibleItems(int, boolean)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.support.v17.leanback.widget.Grid$Provider $r1, $r2, $r4, $r5, $r6, $r7;
        java.lang.Object[] $r3, $r8;
        java.lang.Object $r9;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i3 = interfaceinvoke $r1.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        if $i3 != 0 goto label01;

        return 0;

     label01:
        if z0 != 0 goto label02;

        $z4 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: boolean checkPrependOverLimit(int)>(i0);

        if $z4 == 0 goto label02;

        return 0;

     label02:
        z5 = 0;

        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        i1 = interfaceinvoke $r2.<android.support.v17.leanback.widget.Grid$Provider: int getMinIndex()>();

        i15 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getStartIndexForPrepend()>();

     label03:
        if i15 < i1 goto label12;

        $r4 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: java.lang.Object[] mTmpItem>;

        i2 = interfaceinvoke $r4.<android.support.v17.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i15, 0, $r3, 0);

        $i4 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        if $i4 < 0 goto label04;

        $i6 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        if $i6 >= 0 goto label07;

     label04:
        $z1 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z1 == 0 goto label05;

        $i16 = -2147483648;

        goto label06;

     label05:
        $i16 = 2147483647;

     label06:
        i17 = $i16;

        r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex> = i15;

        r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex> = i15;

        goto label10;

     label07:
        $z3 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z3 == 0 goto label08;

        $r6 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i11 = i15 + 1;

        $i12 = interfaceinvoke $r6.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i11);

        $i13 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        $i14 = $i12 + $i13;

        i17 = $i14 + i2;

        goto label09;

     label08:
        $r5 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i7 = i15 + 1;

        $i8 = interfaceinvoke $r5.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i7);

        $i9 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        $i10 = $i8 - $i9;

        i17 = $i10 - i2;

     label09:
        r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex> = i15;

     label10:
        $r7 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $r8 = r0.<android.support.v17.leanback.widget.SingleRow: java.lang.Object[] mTmpItem>;

        $r9 = $r8[0];

        interfaceinvoke $r7.<android.support.v17.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>($r9, i15, i2, 0, i17);

        z5 = 1;

        if z0 != 0 goto label12;

        $z2 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: boolean checkPrependOverLimit(int)>(i0);

        if $z2 == 0 goto label11;

        goto label12;

     label11:
        i15 = i15 + -1;

        goto label03;

     label12:
        return z5;
    }

    protected final boolean appendVisibleItems(int, boolean)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20, i21;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.support.v17.leanback.widget.Grid$Provider $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Object[] $r2, $r10;
        java.lang.Object $r11;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i2 = interfaceinvoke $r1.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        if $i2 != 0 goto label01;

        return 0;

     label01:
        if z0 != 0 goto label02;

        $z4 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: boolean checkAppendOverLimit(int)>(i0);

        if $z4 == 0 goto label02;

        return 0;

     label02:
        z5 = 0;

        i18 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getStartIndexForAppend()>();

     label03:
        $r8 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i19 = interfaceinvoke $r8.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        if i18 >= $i19 goto label12;

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: java.lang.Object[] mTmpItem>;

        i1 = interfaceinvoke $r3.<android.support.v17.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i18, 1, $r2, 0);

        $i3 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        if $i3 < 0 goto label04;

        $i5 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        if $i5 >= 0 goto label07;

     label04:
        $z1 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z1 == 0 goto label05;

        $i20 = 2147483647;

        goto label06;

     label05:
        $i20 = -2147483648;

     label06:
        i21 = $i20;

        r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex> = i18;

        r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex> = i18;

        goto label10;

     label07:
        $z3 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z3 == 0 goto label08;

        $r6 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i12 = i18 - 1;

        $i13 = interfaceinvoke $r6.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i12);

        $r7 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i14 = i18 - 1;

        $i15 = interfaceinvoke $r7.<android.support.v17.leanback.widget.Grid$Provider: int getSize(int)>($i14);

        $i17 = $i13 - $i15;

        $i16 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        i21 = $i17 - $i16;

        goto label09;

     label08:
        $r4 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i6 = i18 - 1;

        $i7 = interfaceinvoke $r4.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i6);

        $r5 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i8 = i18 - 1;

        $i9 = interfaceinvoke $r5.<android.support.v17.leanback.widget.Grid$Provider: int getSize(int)>($i8);

        $i11 = $i7 + $i9;

        $i10 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        i21 = $i11 + $i10;

     label09:
        r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex> = i18;

     label10:
        $r9 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $r10 = r0.<android.support.v17.leanback.widget.SingleRow: java.lang.Object[] mTmpItem>;

        $r11 = $r10[0];

        interfaceinvoke $r9.<android.support.v17.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>($r11, i18, i1, 0, i21);

        z5 = 1;

        if z0 != 0 goto label12;

        $z2 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: boolean checkAppendOverLimit(int)>(i0);

        if $z2 == 0 goto label11;

        goto label12;

     label11:
        i18 = i18 + 1;

        goto label03;

     label12:
        return z5;
    }

    public void collectAdjacentPrefetchPositions(int, int, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, i17, $i18, $i19, i20;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r1;
        boolean $z0, $z1, $z2;
        android.support.v17.leanback.widget.Grid$Provider $r2, $r3, $r4, $r5;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        $z0 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z0 == 0 goto label01;

        if i1 <= 0 goto label06;

        goto label02;

     label01:
        if i1 >= 0 goto label06;

     label02:
        $i10 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getFirstVisibleIndex()>();

        if $i10 != 0 goto label03;

        return;

     label03:
        i14 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getStartIndexForPrepend()>();

        $r5 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i11 = r0.<android.support.v17.leanback.widget.SingleRow: int mFirstVisibleIndex>;

        $i12 = interfaceinvoke $r5.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i11);

        $z2 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z2 == 0 goto label04;

        $i15 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        goto label05;

     label04:
        $i13 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        $i15 = neg $i13;

     label05:
        i16 = $i12 + $i15;

        goto label10;

     label06:
        $i2 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getLastVisibleIndex()>();

        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i3 = interfaceinvoke $r2.<android.support.v17.leanback.widget.Grid$Provider: int getCount()>();

        $i4 = $i3 - 1;

        if $i2 != $i4 goto label07;

        return;

     label07:
        i14 = virtualinvoke r0.<android.support.v17.leanback.widget.SingleRow: int getStartIndexForAppend()>();

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i5 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        $i6 = interfaceinvoke $r3.<android.support.v17.leanback.widget.Grid$Provider: int getSize(int)>($i5);

        $i7 = r0.<android.support.v17.leanback.widget.SingleRow: int mSpacing>;

        i17 = $i6 + $i7;

        $r4 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i8 = r0.<android.support.v17.leanback.widget.SingleRow: int mLastVisibleIndex>;

        $i9 = interfaceinvoke $r4.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>($i8);

        $z1 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z1 == 0 goto label08;

        $i18 = neg i17;

        goto label09;

     label08:
        $i18 = i17;

     label09:
        i16 = $i9 + $i18;

     label10:
        $i19 = i16 - i0;

        i20 = staticinvoke <java.lang.Math: int abs(int)>($i19);

        interfaceinvoke r1.<android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i14, i20);

        return;
    }

    public final android.support.v4.util.CircularIntArray[] getItemPositionsInRows(int, int)
    {
        android.support.v17.leanback.widget.SingleRow r0;
        int i0, i1;
        android.support.v4.util.CircularIntArray[] $r1, $r3, $r5, $r7;
        android.support.v4.util.CircularIntArray $r2, $r4, $r6;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v4.util.CircularIntArray[] mTmpItemPositionsInRows>;

        $r2 = $r1[0];

        virtualinvoke $r2.<android.support.v4.util.CircularIntArray: void clear()>();

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v4.util.CircularIntArray[] mTmpItemPositionsInRows>;

        $r4 = $r3[0];

        virtualinvoke $r4.<android.support.v4.util.CircularIntArray: void addLast(int)>(i0);

        $r5 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v4.util.CircularIntArray[] mTmpItemPositionsInRows>;

        $r6 = $r5[0];

        virtualinvoke $r6.<android.support.v4.util.CircularIntArray: void addLast(int)>(i1);

        $r7 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v4.util.CircularIntArray[] mTmpItemPositionsInRows>;

        return $r7;
    }

    protected final int findRowMin(boolean, int, int[])
    {
        android.support.v17.leanback.widget.SingleRow r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3;
        int[] r1;
        android.support.v17.leanback.widget.Grid$Provider $r2, $r3, $r4;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        if r1 == null goto label1;

        r1[0] = 0;

        r1[1] = i0;

     label1:
        $z1 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z1 == 0 goto label2;

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i1 = interfaceinvoke $r3.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>(i0);

        $r4 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i2 = interfaceinvoke $r4.<android.support.v17.leanback.widget.Grid$Provider: int getSize(int)>(i0);

        $i3 = $i1 - $i2;

        goto label3;

     label2:
        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i3 = interfaceinvoke $r2.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>(i0);

     label3:
        return $i3;
    }

    protected final int findRowMax(boolean, int, int[])
    {
        android.support.v17.leanback.widget.SingleRow r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3;
        int[] r1;
        android.support.v17.leanback.widget.Grid$Provider $r2, $r3, $r4;

        r0 := @this: android.support.v17.leanback.widget.SingleRow;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        if r1 == null goto label1;

        r1[0] = 0;

        r1[1] = i0;

     label1:
        $z1 = r0.<android.support.v17.leanback.widget.SingleRow: boolean mReversedFlow>;

        if $z1 == 0 goto label2;

        $r4 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i3 = interfaceinvoke $r4.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>(i0);

        goto label3;

     label2:
        $r2 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i1 = interfaceinvoke $r2.<android.support.v17.leanback.widget.Grid$Provider: int getEdge(int)>(i0);

        $r3 = r0.<android.support.v17.leanback.widget.SingleRow: android.support.v17.leanback.widget.Grid$Provider mProvider>;

        $i2 = interfaceinvoke $r3.<android.support.v17.leanback.widget.Grid$Provider: int getSize(int)>(i0);

        $i3 = $i1 + $i2;

     label3:
        return $i3;
    }

