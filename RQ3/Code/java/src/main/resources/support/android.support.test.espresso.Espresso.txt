android.support.test.espresso.Espresso
<android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>
<android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry>
<android.support.test.espresso.Espresso: org.hamcrest.Matcher OVERFLOW_BUTTON_MATCHER>
    private void <init>()
    {
        android.support.test.espresso.Espresso r0;

        r0 := @this: android.support.test.espresso.Espresso;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        android.support.test.espresso.ViewInteractionModule $r1;
        android.support.test.espresso.BaseLayerComponent $r2;
        android.support.test.espresso.ViewInteractionComponent $r3;
        android.support.test.espresso.ViewInteraction $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r2 = <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>;

        $r1 = new android.support.test.espresso.ViewInteractionModule;

        specialinvoke $r1.<android.support.test.espresso.ViewInteractionModule: void <init>(org.hamcrest.Matcher)>(r0);

        $r3 = interfaceinvoke $r2.<android.support.test.espresso.BaseLayerComponent: android.support.test.espresso.ViewInteractionComponent plus(android.support.test.espresso.ViewInteractionModule)>($r1);

        $r4 = interfaceinvoke $r3.<android.support.test.espresso.ViewInteractionComponent: android.support.test.espresso.ViewInteraction viewInteraction()>();

        return $r4;
    }

    public static android.support.test.espresso.DataInteraction onData(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        android.support.test.espresso.DataInteraction $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.DataInteraction;

        specialinvoke $r1.<android.support.test.espresso.DataInteraction: void <init>(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static void registerLooperAsIdlingResource(android.os.Looper)
    {
        android.os.Looper r0;

        r0 := @parameter0: android.os.Looper;

        staticinvoke <android.support.test.espresso.Espresso: void registerLooperAsIdlingResource(android.os.Looper,boolean)>(r0, 0);

        return;
    }

    public static void registerLooperAsIdlingResource(android.os.Looper, boolean)
    {
        android.os.Looper r0;
        boolean z0;
        android.support.test.espresso.IdlingRegistry $r1, $r3, $r5;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        java.util.Collection $r4, $r6;
        java.lang.Iterable r7, r8;

        r0 := @parameter0: android.os.Looper;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        virtualinvoke $r1.<android.support.test.espresso.IdlingRegistry: void registerLooperAsIdlingResource(android.os.Looper)>(r0);

        $r2 = <android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry>;

        $r3 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingRegistry: java.util.Collection getResources()>();

        $r5 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r6 = virtualinvoke $r5.<android.support.test.espresso.IdlingRegistry: java.util.Collection getLoopers()>();

        r7 = (java.lang.Iterable) $r4;

        r8 = (java.lang.Iterable) $r6;

        virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: void sync(java.lang.Iterable,java.lang.Iterable)>(r7, r8);

        return;
    }

    public static transient boolean registerIdlingResources(android.support.test.espresso.IdlingResource[])
    {
        android.support.test.espresso.IdlingResource[] r0;
        android.support.test.espresso.IdlingRegistry $r1, $r3, $r5;
        boolean $z0, $z1;
        int $i0;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        java.util.Collection $r4, $r6;
        java.lang.Iterable r7, r8;

        r0 := @parameter0: android.support.test.espresso.IdlingResource[];

        $r1 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $z0 = virtualinvoke $r1.<android.support.test.espresso.IdlingRegistry: boolean register(android.support.test.espresso.IdlingResource[])>(r0);

        if $z0 == 0 goto label1;

        $r2 = <android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry>;

        $r3 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingRegistry: java.util.Collection getResources()>();

        $r5 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r6 = virtualinvoke $r5.<android.support.test.espresso.IdlingRegistry: java.util.Collection getLoopers()>();

        r7 = (java.lang.Iterable) $r4;

        r8 = (java.lang.Iterable) $r6;

        virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: void sync(java.lang.Iterable,java.lang.Iterable)>(r7, r8);

        return 1;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static transient boolean unregisterIdlingResources(android.support.test.espresso.IdlingResource[])
    {
        android.support.test.espresso.IdlingResource[] r0;
        android.support.test.espresso.IdlingRegistry $r1, $r3, $r5;
        boolean $z0, $z1;
        int $i0;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        java.util.Collection $r4, $r6;
        java.lang.Iterable r7, r8;

        r0 := @parameter0: android.support.test.espresso.IdlingResource[];

        $r1 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $z0 = virtualinvoke $r1.<android.support.test.espresso.IdlingRegistry: boolean unregister(android.support.test.espresso.IdlingResource[])>(r0);

        if $z0 == 0 goto label1;

        $r2 = <android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry>;

        $r3 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingRegistry: java.util.Collection getResources()>();

        $r5 = staticinvoke <android.support.test.espresso.IdlingRegistry: android.support.test.espresso.IdlingRegistry getInstance()>();

        $r6 = virtualinvoke $r5.<android.support.test.espresso.IdlingRegistry: java.util.Collection getLoopers()>();

        r7 = (java.lang.Iterable) $r4;

        r8 = (java.lang.Iterable) $r6;

        virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: void sync(java.lang.Iterable,java.lang.Iterable)>(r7, r8);

        return 1;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.util.List getIdlingResources()
    {
        android.support.test.espresso.base.IdlingResourceRegistry $r0;
        java.util.List $r1;

        $r0 = <android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry>;

        $r1 = virtualinvoke $r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List getResources()>();

        return $r1;
    }

    public static void setFailureHandler(android.support.test.espresso.FailureHandler)
    {
        android.support.test.espresso.FailureHandler r0, $r4;
        android.support.test.espresso.BaseLayerComponent $r1;
        android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.support.test.espresso.FailureHandler;

        $r1 = <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.BaseLayerComponent: android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder failureHolder()>();

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = (android.support.test.espresso.FailureHandler) $r3;

        virtualinvoke $r2.<android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder: void update(android.support.test.espresso.FailureHandler)>($r4);

        return;
    }

    public static void closeSoftKeyboard()
    {
        org.hamcrest.Matcher $r0;
        android.support.test.espresso.ViewInteraction $r1;
        android.support.test.espresso.ViewAction[] $r2;
        android.support.test.espresso.ViewAction $r3;

        $r0 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r1 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (android.support.test.espresso.ViewAction)[1];

        $r3 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction closeSoftKeyboard()>();

        $r2[0] = $r3;

        virtualinvoke $r1.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r2);

        return;
    }

    public static void openContextualActionModeOverflowMenu()
    {
        org.hamcrest.Matcher $r0, $r5;
        android.support.test.espresso.ViewInteraction $r1, $r6;
        android.support.test.espresso.ViewAction[] $r2, $r7;
        android.support.test.espresso.Espresso$TransitionBridgingViewAction $r3;
        android.support.test.espresso.ViewAction $r8, $r9;

        $r0 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r1 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (android.support.test.espresso.ViewAction)[1];

        $r3 = new android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        specialinvoke $r3.<android.support.test.espresso.Espresso$TransitionBridgingViewAction: void <init>(android.support.test.espresso.Espresso$1)>(null);

        $r2[0] = $r3;

        virtualinvoke $r1.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r2);

        $r5 = <android.support.test.espresso.Espresso: org.hamcrest.Matcher OVERFLOW_BUTTON_MATCHER>;

        $r6 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r5);

        $r7 = newarray (android.support.test.espresso.ViewAction)[1];

        $r8 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressBack()>();

        $r9 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction click(android.support.test.espresso.ViewAction)>($r8);

        $r7[0] = $r9;

        virtualinvoke $r6.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r7);

        return;
    }

    public static void pressBack()
    {
        org.hamcrest.Matcher $r0;
        android.support.test.espresso.ViewInteraction $r1;
        android.support.test.espresso.ViewAction[] $r2;
        android.support.test.espresso.ViewAction $r3;

        $r0 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r1 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (android.support.test.espresso.ViewAction)[1];

        $r3 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressBack()>();

        $r2[0] = $r3;

        virtualinvoke $r1.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r2);

        return;
    }

    public static void pressBackUnconditionally()
    {
        org.hamcrest.Matcher $r0;
        android.support.test.espresso.ViewInteraction $r1;
        android.support.test.espresso.ViewAction[] $r2;
        android.support.test.espresso.ViewAction $r3;

        $r0 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r1 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (android.support.test.espresso.ViewAction)[1];

        $r3 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressBackUnconditionally()>();

        $r2[0] = $r3;

        virtualinvoke $r1.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r2);

        return;
    }

    public static void openActionBarOverflowOrOptionsMenu(android.content.Context)
    {
        android.content.Context r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0;
        boolean $z0;
        org.hamcrest.Matcher $r2, $r7, $r12, $r17;
        android.support.test.espresso.ViewInteraction $r3, $r8, $r13, $r18;
        android.support.test.espresso.ViewAction[] $r4, $r9, $r14, $r19;
        android.support.test.espresso.ViewAction $r5, $r15, $r20;
        android.support.test.espresso.Espresso$TransitionBridgingViewAction $r10;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 11 goto label1;

        $r17 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r18 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r17);

        $r19 = newarray (android.support.test.espresso.ViewAction)[1];

        $r20 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressMenuKey()>();

        $r19[0] = $r20;

        virtualinvoke $r18.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r19);

        goto label3;

     label1:
        $z0 = staticinvoke <android.support.test.espresso.Espresso: boolean hasVirtualOverflowButton(android.content.Context)>(r0);

        if $z0 == 0 goto label2;

        $r7 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r8 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r7);

        $r9 = newarray (android.support.test.espresso.ViewAction)[1];

        $r10 = new android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        specialinvoke $r10.<android.support.test.espresso.Espresso$TransitionBridgingViewAction: void <init>(android.support.test.espresso.Espresso$1)>(null);

        $r9[0] = $r10;

        virtualinvoke $r8.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r9);

        $r12 = <android.support.test.espresso.Espresso: org.hamcrest.Matcher OVERFLOW_BUTTON_MATCHER>;

        $r13 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r12);

        $r14 = newarray (android.support.test.espresso.ViewAction)[1];

        $r15 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction click()>();

        $r14[0] = $r15;

        virtualinvoke $r13.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r14);

        goto label3;

     label2:
        $r2 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r3 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r2);

        $r4 = newarray (android.support.test.espresso.ViewAction)[1];

        $r5 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressMenuKey()>();

        $r4[0] = $r5;

        virtualinvoke $r3.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])>($r4);

     label3:
        return;
    }

    public static java.lang.Object onIdle(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r0;
        java.util.concurrent.Executor r1;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask r2;
        java.util.concurrent.FutureTask r3, r19;
        android.support.test.espresso.BaseLayerComponent $r4;
        java.lang.Object $r8;
        java.lang.Throwable $r9, $r10, $r12, $r14, r16, r17, r23, r26, r27;
        boolean $z0;
        android.support.test.espresso.AppNotIdleException $r13;
        android.support.test.espresso.Espresso$1 r18;
        java.lang.RuntimeException r20, r21;
        java.lang.Runnable r22;
        java.util.concurrent.ExecutionException r24, r25;

        r0 := @parameter0: java.util.concurrent.Callable;

        $r4 = <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>;

        r1 = interfaceinvoke $r4.<android.support.test.espresso.BaseLayerComponent: java.util.concurrent.Executor mainThreadExecutor()>();

        r18 = new android.support.test.espresso.Espresso$1;

        specialinvoke r18.<android.support.test.espresso.Espresso$1: void <init>()>();

        r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object)>(r18, null);

        r19 = new java.util.concurrent.FutureTask;

        specialinvoke r19.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r0);

        r3 = r19;

        r22 = (java.lang.Runnable) r3;

        virtualinvoke r2.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r22, r1);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label1:
        virtualinvoke r2.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask: java.lang.Object get()>();

        $r8 = virtualinvoke r3.<java.util.concurrent.FutureTask: java.lang.Object get()>();

     label2:
        return $r8;

     label3:
        $r14 := @caughtexception;

        r16 = $r14;

        r20 = new java.lang.RuntimeException;

        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

        r23 = (java.lang.Throwable) r20;

        throw r23;

     label4:
        $r9 := @caughtexception;

        r17 = $r9;

        r24 = (java.util.concurrent.ExecutionException) r17;

        $r10 = virtualinvoke r24.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z0 = $r10 instanceof android.support.test.espresso.AppNotIdleException;

        if $z0 == 0 goto label5;

        r25 = (java.util.concurrent.ExecutionException) r17;

        $r12 = virtualinvoke r25.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r13 = (android.support.test.espresso.AppNotIdleException) $r12;

        r26 = (java.lang.Throwable) $r13;

        throw r26;

     label5:
        r21 = new java.lang.RuntimeException;

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        r27 = (java.lang.Throwable) r21;

        throw r27;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
    }

    public static void onIdle()
    {
        android.support.test.espresso.Espresso$2 $r0;

        $r0 = new android.support.test.espresso.Espresso$2;

        specialinvoke $r0.<android.support.test.espresso.Espresso$2: void <init>()>();

        staticinvoke <android.support.test.espresso.Espresso: java.lang.Object onIdle(java.util.concurrent.Callable)>($r0);

        return;
    }

    private static boolean hasVirtualOverflowButton(android.content.Context)
    {
        android.content.Context r0;
        int $i0, $i1;
        android.view.ViewConfiguration $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label3;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 11 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r0);

        $z0 = virtualinvoke $r1.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $z0 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    static android.support.test.espresso.BaseLayerComponent access$100()
    {
        android.support.test.espresso.BaseLayerComponent $r0;

        $r0 = <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>;

        return $r0;
    }

    static org.hamcrest.Matcher access$200()
    {
        org.hamcrest.Matcher $r0;

        $r0 = <android.support.test.espresso.Espresso: org.hamcrest.Matcher OVERFLOW_BUTTON_MATCHER>;

        return $r0;
    }

    static void <clinit>()
    {
        android.support.test.espresso.BaseLayerComponent $r0, $r1;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        org.hamcrest.Matcher $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.hamcrest.core.AnyOf $r10;

        $r0 = staticinvoke <android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent baseLayer()>();

        <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE> = $r0;

        $r1 = <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent BASE>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.BaseLayerComponent: android.support.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry()>();

        <android.support.test.espresso.Espresso: android.support.test.espresso.base.IdlingResourceRegistry baseRegistry> = $r2;

        $r3 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        $r4 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withContentDescription(java.lang.String)>("More options");

        $r5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r3, $r4);

        $r6 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        $r7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher endsWith(java.lang.String)>("OverflowMenuButton");

        $r8 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withClassName(org.hamcrest.Matcher)>($r7);

        $r9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r6, $r8);

        $r10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r5, $r9);

        <android.support.test.espresso.Espresso: org.hamcrest.Matcher OVERFLOW_BUTTON_MATCHER> = $r10;

        return;
    }

android.support.test.espresso.Espresso$1
    void <init>()
    {
        android.support.test.espresso.Espresso$1 r0;

        r0 := @this: android.support.test.espresso.Espresso$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.espresso.Espresso$1 r0;
        android.support.test.espresso.BaseLayerComponent $r1;
        android.support.test.espresso.UiController $r2;

        r0 := @this: android.support.test.espresso.Espresso$1;

        $r1 = staticinvoke <android.support.test.espresso.Espresso: android.support.test.espresso.BaseLayerComponent access$100()>();

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.BaseLayerComponent: android.support.test.espresso.UiController uiController()>();

        interfaceinvoke $r2.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        return;
    }

android.support.test.espresso.Espresso$2
    void <init>()
    {
        android.support.test.espresso.Espresso$2 r0;

        r0 := @this: android.support.test.espresso.Espresso$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        android.support.test.espresso.Espresso$2 r0;

        r0 := @this: android.support.test.espresso.Espresso$2;

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.Espresso$2 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.Espresso$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.Espresso$2: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.Espresso$TransitionBridgingViewAction
    private void <init>()
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        boolean $z0;
        int i0;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        i0 = 0;

     label1:
        $z0 = specialinvoke r0.<android.support.test.espresso.Espresso$TransitionBridgingViewAction: boolean isTransitioningBetweenActionBars(android.view.View)>(r2);

        if $z0 == 0 goto label2;

        if i0 >= 100 goto label2;

        i0 = i0 + 1;

        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(50L);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        return "Handle transition between action bar and action bar context.";
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        $r1 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        return $r1;
    }

    private boolean isTransitioningBetweenActionBars(android.view.View)
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;
        android.view.View r1, r3;
        java.util.Iterator r2;
        java.lang.Iterable $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        org.hamcrest.Matcher $r6;
        int i0;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        r1 := @parameter0: android.view.View;

        i0 = 0;

        $r4 = staticinvoke <android.support.test.espresso.util.TreeIterables: java.lang.Iterable breadthFirstViewTraversal(android.view.View)>(r1);

        r2 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.View) $r5;

        $r6 = staticinvoke <android.support.test.espresso.Espresso: org.hamcrest.Matcher access$200()>();

        $z1 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        goto label1;

     label3:
        if i0 <= 1 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    void <init>(android.support.test.espresso.Espresso$1)
    {
        android.support.test.espresso.Espresso$TransitionBridgingViewAction r0;
        android.support.test.espresso.Espresso$1 r1;

        r0 := @this: android.support.test.espresso.Espresso$TransitionBridgingViewAction;

        r1 := @parameter0: android.support.test.espresso.Espresso$1;

        specialinvoke r0.<android.support.test.espresso.Espresso$TransitionBridgingViewAction: void <init>()>();

        return;
    }

