android.support.test.espresso.remote.AnyToTypeConverter
<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>
    void <init>(android.support.test.espresso.remote.RemoteDescriptorRegistry)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.RemoteDescriptorRegistry r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.RemoteDescriptorRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "remoteDescriptorRegistry cannot be null!");

        $r3 = (android.support.test.espresso.remote.RemoteDescriptorRegistry) $r2;

        r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry> = $r3;

        return;
    }

    public java.lang.Object convert(android.support.test.espresso.remote.internal.deps.protobuf.Any)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Any r1;
        java.lang.Object r2;
        java.lang.reflect.Field r3;
        android.support.test.espresso.remote.EspressoRemoteMessage$From r4;
        java.lang.Throwable $r6, $r11, r14, r15;
        android.support.test.espresso.remote.RemoteProtocolException $r7, $r12;
        java.lang.Object[] $r8;
        java.lang.String $r9, $r10;
        java.lang.Class r13;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.Any;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "any cannot be null!");

     label1:
        r13 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: java.lang.Class createRemoteTargetClassFromAny(android.support.test.espresso.remote.internal.deps.protobuf.Any)>(r1);

        r3 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: java.lang.reflect.Field accessFromField(java.lang.Class)>(r13);

        r4 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.EspressoRemoteMessage$From createRemoteMessageFromField(java.lang.reflect.Field)>(r3);

        r2 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: java.lang.Object createTargetTypeFromRemoteMessage(android.support.test.espresso.remote.EspressoRemoteMessage$From,android.support.test.espresso.remote.internal.deps.protobuf.Any)>(r4, r1);

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r14 = $r11;

        $r12 = new android.support.test.espresso.remote.RemoteProtocolException;

        specialinvoke $r12.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot unwrap target type instance from any proto: ", r14);

        throw $r12;

     label4:
        $r6 := @caughtexception;

        r15 = $r6;

        $r7 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Something went wrong during any conversion for type url: %s", $r8);

        specialinvoke $r7.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r15);

        throw $r7;

     label5:
        return r2;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    private java.lang.Object createTargetTypeFromRemoteMessage(android.support.test.espresso.remote.EspressoRemoteMessage$From, android.support.test.espresso.remote.internal.deps.protobuf.Any)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.EspressoRemoteMessage$From r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Any r2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r3;
        java.lang.Object $r4;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.EspressoRemoteMessage$From;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Any;

        r3 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(android.support.test.espresso.remote.internal.deps.protobuf.Any)>(r2);

        $r4 = interfaceinvoke r1.<android.support.test.espresso.remote.EspressoRemoteMessage$From: java.lang.Object fromProto(java.lang.Object)>(r3);

        return $r4;
    }

    private android.support.test.espresso.remote.EspressoRemoteMessage$From createRemoteMessageFromField(java.lang.reflect.Field) throws java.lang.IllegalAccessException
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        java.lang.reflect.Field r1;
        java.lang.Throwable r2, $r7;
        java.lang.Class $r3;
        java.lang.Object $r4, $r5;
        android.support.test.espresso.remote.EspressoRemoteMessage$From $r6;
        android.support.test.espresso.remote.RemoteProtocolException $r8;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: java.lang.reflect.Field;

     label1:
        $r3 = class "Landroid/support/test/espresso/remote/EspressoRemoteMessage$From;";

        $r4 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        $r6 = (android.support.test.espresso.remote.EspressoRemoteMessage$From) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new android.support.test.espresso.remote.RemoteProtocolException;

        specialinvoke $r8.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>("Cannot unwrap target type from any proto: Cannot cast\'private static FROM\' field to the EspressoRemoteMessage.From interface.");

        throw $r8;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    private java.lang.reflect.Field accessFromField(java.lang.Class) throws java.lang.IllegalAccessException
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        java.lang.Class r1;
        java.lang.reflect.Field r2;
        java.lang.Throwable r3, $r6;
        java.lang.String r4, $r8, $r13;
        java.lang.IllegalAccessException $r5;
        boolean $z0;
        android.support.test.espresso.remote.RemoteProtocolException $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: java.lang.Class;

     label1:
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("FROM");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new android.support.test.espresso.remote.RemoteProtocolException;

        r4 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = 212 + $i0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot unwrap target type from any proto: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not declare a \'private static FROM\' fromViewMatcherField implementing theEspressoRemoteMessage.From interface. Please ensure that such afromViewMatcherField exists!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r3);

        throw $r7;

     label4:
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        if null == r2 goto label5;

        $z0 = virtualinvoke r2.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z0 != 0 goto label6;

     label5:
        $r5 = new java.lang.IllegalAccessException;

        specialinvoke $r5.<java.lang.IllegalAccessException: void <init>(java.lang.String)>("Failed to make EspressoRemoteMessage.From FROM field accessible");

        throw $r5;

     label6:
        return r2;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }

    private java.lang.Class createRemoteTargetClassFromAny(android.support.test.espresso.remote.internal.deps.protobuf.Any)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Any r1;
        android.support.test.espresso.remote.RemoteDescriptorRegistry $r2;
        java.lang.String $r3;
        android.support.test.espresso.remote.RemoteDescriptor $r4;
        java.lang.Class $r5;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.Any;

        $r2 = r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>;

        $r3 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        $r4 = virtualinvoke $r2.<android.support.test.espresso.remote.RemoteDescriptorRegistry: android.support.test.espresso.remote.RemoteDescriptor argForRemoteTypeUrl(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<android.support.test.espresso.remote.RemoteDescriptor: java.lang.Class getRemoteType()>();

        return $r5;
    }

    private android.support.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(android.support.test.espresso.remote.internal.deps.protobuf.Any, java.lang.Class, android.support.test.espresso.remote.internal.deps.protobuf.Parser) throws android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Any r1;
        java.lang.Class r2, $r13;
        android.support.test.espresso.remote.internal.deps.protobuf.Parser r3;
        java.lang.Object r4, $r9;
        android.support.test.espresso.remote.RemoteProtocolException r5, $r11;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString $r8;
        boolean $z0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite $r10;
        java.lang.Object[] $r12;
        java.lang.String $r14, $r15, $r16;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.Any;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Parser;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "expectedType cannot be null!");

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "parser cannot be null!");

        $r8 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.Any: android.support.test.espresso.remote.internal.deps.protobuf.ByteString getValue()>();

        r4 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.Parser: java.lang.Object parseFrom(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>($r8);

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4);

        if $z0 != 0 goto label1;

        $r11 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r12[0] = $r14;

        $r15 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r12[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Got type: %s, but expected type: %s instead", $r12);

        specialinvoke $r11.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>($r16);

        r5 = $r11;

        throw r5;

     label1:
        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r4);

        $r10 = (android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) $r9;

        return $r10;
    }

    private android.support.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(android.support.test.espresso.remote.internal.deps.protobuf.Any)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Any r1;
        android.support.test.espresso.remote.RemoteDescriptor r2;
        android.support.test.espresso.remote.RemoteDescriptorRegistry $r3;
        java.lang.String $r4;
        android.support.test.espresso.remote.internal.deps.protobuf.Parser $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite $r6;
        java.lang.Throwable $r7, r10;
        android.support.test.espresso.remote.RemoteProtocolException $r8;
        java.lang.Class r9;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.Any;

        $r3 = r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>;

        $r4 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        r2 = virtualinvoke $r3.<android.support.test.espresso.remote.RemoteDescriptorRegistry: android.support.test.espresso.remote.RemoteDescriptor argForRemoteTypeUrl(java.lang.String)>($r4);

     label1:
        r9 = virtualinvoke r2.<android.support.test.espresso.remote.RemoteDescriptor: java.lang.Class getProtoType()>();

        $r5 = virtualinvoke r2.<android.support.test.espresso.remote.RemoteDescriptor: android.support.test.espresso.remote.internal.deps.protobuf.Parser getProtoParser()>();

        $r6 = specialinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(android.support.test.espresso.remote.internal.deps.protobuf.Any,java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.Parser)>(r1, r9, $r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = new android.support.test.espresso.remote.RemoteProtocolException;

        specialinvoke $r8.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Message cannot be casted to type T", r10);

        throw $r8;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        android.support.test.espresso.remote.AnyToTypeConverter r0;
        java.lang.Object r1, $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.Any $r2;

        r0 := @this: android.support.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.test.espresso.remote.internal.deps.protobuf.Any) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.AnyToTypeConverter: java.lang.Object convert(android.support.test.espresso.remote.internal.deps.protobuf.Any)>($r2);

        return $r3;
    }

