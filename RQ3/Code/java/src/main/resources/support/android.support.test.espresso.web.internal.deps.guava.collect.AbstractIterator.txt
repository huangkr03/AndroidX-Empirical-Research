android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>
    protected void <init>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator: void <init>()>();

        $r1 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        return;
    }

<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object computeNext()>
    protected final java.lang.Object endOfData()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r1 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        return null;
    }

    public final boolean hasNext()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1, $r2, $r3;
        int[] $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r2 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $r1 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        if $r2 == $r1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: void checkState(boolean)>($z1);

        $r4 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r3 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $i0 = virtualinvoke $r3.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $i1 = $r4[$i0];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        return 0;

     label4:
        return 1;

     label5:
        $z0 = specialinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean tryToComputeNext()>();

        return $z0;
    }

    private boolean tryToComputeNext()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1, $r3, $r4, $r5;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r1 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        $r2 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object computeNext()>();

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next> = $r2;

        $r4 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $r3 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        if $r4 == $r3 goto label1;

        $r5 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r5;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.Object next()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        java.lang.Object r1;
        boolean $z0;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $z0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $r2 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r2;

        r1 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>;

        r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next> = null;

        return r1;
    }

    public final java.lang.Object peek()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $z0 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>;

        return $r1;
    }

android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>
    static void <clinit>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State> = $r1;

     label1:
        $r3 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r2 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        $i1 = virtualinvoke $r2.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        $r5 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r4 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        $i2 = virtualinvoke $r4.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r9 = $r6;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>
<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES>
    public static android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] values()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[]) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r4;

        $r0 = new android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke $r0.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("READY", 0);

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY> = $r0;

        $r1 = new android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke $r1.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("NOT_READY", 1);

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY> = $r1;

        $r2 = new android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke $r2.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("DONE", 2);

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE> = $r2;

        $r3 = new android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke $r3.<android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("FAILED", 3);

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED> = $r3;

        $r4 = newarray (android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State)[4];

        $r5 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        $r4[0] = $r5;

        $r6 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        $r4[1] = $r6;

        $r7 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        $r4[2] = $r7;

        $r8 = <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        $r4[3] = $r8;

        <android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: android.support.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES> = $r4;

        return;
    }

