android.support.v17.leanback.transition.FadeAndShortSlide
<android.support.v17.leanback.transition.FadeAndShortSlide: android.animation.TimeInterpolator sDecelerate>
<android.support.v17.leanback.transition.FadeAndShortSlide: java.lang.String PROPNAME_SCREEN_POSITION>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>
<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStart>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateEnd>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStartEnd>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateBottom>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTop>
<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTopBottom>
    float getHorizontalDistance(android.view.ViewGroup)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.view.ViewGroup r1;
        float $f0, $f1;
        byte $b0;
        int $i1, $i2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.view.ViewGroup;

        $f0 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $f1 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>;

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $i2 = $i1 / 4;

        $f1 = (float) $i2;

     label2:
        return $f1;
    }

    float getVerticalDistance(android.view.ViewGroup)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.view.ViewGroup r1;
        float $f0, $f1;
        byte $b0;
        int $i1, $i2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.view.ViewGroup;

        $f0 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $f1 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>;

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        $i2 = $i1 / 4;

        $f1 = (float) $i2;

     label2:
        return $f1;
    }

    public void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: void <init>(int)>(8388611);

        return;
    }

    public void <init>(int)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        int i0;
        android.transition.Fade $r1;
        android.support.v17.leanback.transition.FadeAndShortSlide$6 $r2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        i0 := @parameter0: int;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        $r1 = new android.transition.Fade;

        specialinvoke $r1.<android.transition.Fade: void <init>()>();

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade> = $r1;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance> = -1.0F;

        $r2 = new android.support.v17.leanback.transition.FadeAndShortSlide$6;

        specialinvoke $r2.<android.support.v17.leanback.transition.FadeAndShortSlide$6: void <init>(android.support.v17.leanback.transition.FadeAndShortSlide)>(r0);

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTopBottom> = $r2;

        virtualinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: void setSlideEdge(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, $i1;
        android.transition.Fade $r4;
        android.support.v17.leanback.transition.FadeAndShortSlide$6 $r5;
        int[] $r6;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = new android.transition.Fade;

        specialinvoke $r4.<android.transition.Fade: void <init>()>();

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade> = $r4;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance> = -1.0F;

        $r5 = new android.support.v17.leanback.transition.FadeAndShortSlide$6;

        specialinvoke $r5.<android.support.v17.leanback.transition.FadeAndShortSlide$6: void <init>(android.support.v17.leanback.transition.FadeAndShortSlide)>(r0);

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTopBottom> = $r5;

        $r6 = <android.support.v17.leanback.R$styleable: int[] lbSlide>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        $i1 = <android.support.v17.leanback.R$styleable: int lbSlide_lb_slideEdge>;

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i1, 8388611);

        virtualinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: void setSlideEdge(int)>(i0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setEpicenterCallback(android.transition.Transition$EpicenterCallback)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.Transition$EpicenterCallback r1;
        android.transition.Visibility $r2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.Transition$EpicenterCallback;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        virtualinvoke $r2.<android.transition.Visibility: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>(r1);

        specialinvoke r0.<android.transition.Visibility: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>(r1);

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        int[] r3;
        java.util.Map $r4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        r3 = newarray (int)[2];

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>(r3);

        $r4 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:fadeAndShortSlideTransition:screenPosition", r3);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.TransitionValues r1;
        android.transition.Visibility $r2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.TransitionValues;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        virtualinvoke $r2.<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.TransitionValues r1;
        android.transition.Visibility $r2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.TransitionValues;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        virtualinvoke $r2.<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void setSlideEdge(int)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        int i0;
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 48: goto label4;
            case 80: goto label5;
            case 112: goto label6;
            case 8388611: goto label1;
            case 8388613: goto label2;
            case 8388615: goto label3;
            default: goto label7;
        };

     label1:
        $r3 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStart>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r3;

        goto label8;

     label2:
        $r2 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateEnd>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r2;

        goto label8;

     label3:
        $r1 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStartEnd>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r1;

        goto label8;

     label4:
        $r6 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTop>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r6;

        goto label8;

     label5:
        $r5 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateBottom>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r5;

        goto label8;

     label6:
        $r4 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTopBottom>;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator> = $r4;

        goto label8;

     label7:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slide direction");

        throw $r7;

     label8:
        return;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.transition.TransitionValues r3, r4;
        int[] r5, $r11;
        int i0, i1;
        float f0, f1, f2, f3;
        android.animation.Animator r6, r7;
        android.animation.AnimatorSet r8, r19;
        java.util.Map $r9;
        java.lang.Object $r10;
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide $r12, $r13;
        android.animation.TimeInterpolator $r14;
        android.transition.Visibility $r15;
        android.animation.AnimatorSet$Builder $r17;
        android.transition.Transition r20;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.transition.TransitionValues;

        r4 := @parameter3: android.transition.TransitionValues;

        if r4 != null goto label1;

        return null;

     label1:
        if r1 != r2 goto label2;

        return null;

     label2:
        $r9 = r4.<android.transition.TransitionValues: java.util.Map values>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:fadeAndShortSlideTransition:screenPosition");

        $r11 = (int[]) $r10;

        r5 = (int[]) $r11;

        i0 = r5[0];

        i1 = r5[1];

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $r12 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator>;

        f1 = virtualinvoke $r12.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[])>(r0, r1, r2, r5);

        f2 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r13 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator>;

        f3 = virtualinvoke $r13.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[])>(r0, r1, r2, r5);

        $r14 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.animation.TimeInterpolator sDecelerate>;

        r20 = (android.transition.Transition) r0;

        r6 = staticinvoke <android.support.v17.leanback.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r2, r4, i0, i1, f1, f3, f0, f2, $r14, r20);

        $r15 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        r7 = virtualinvoke $r15.<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>(r1, r2, r3, r4);

        if r6 != null goto label3;

        return r7;

     label3:
        if r7 != null goto label4;

        return r6;

     label4:
        r19 = new android.animation.AnimatorSet;

        specialinvoke r19.<android.animation.AnimatorSet: void <init>()>();

        r8 = r19;

        $r17 = virtualinvoke r8.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r6);

        virtualinvoke $r17.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r7);

        return r8;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.transition.TransitionValues r3, r4;
        int[] r5, $r11;
        int i0, i1;
        float f0, f1, f2, f3;
        android.animation.Animator r6, r7;
        android.animation.AnimatorSet r8, r19;
        java.util.Map $r9;
        java.lang.Object $r10;
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide $r12, $r13;
        android.animation.TimeInterpolator $r14;
        android.transition.Visibility $r15;
        android.animation.AnimatorSet$Builder $r17;
        android.transition.Transition r20;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.transition.TransitionValues;

        r4 := @parameter3: android.transition.TransitionValues;

        if r3 != null goto label1;

        return null;

     label1:
        if r1 != r2 goto label2;

        return null;

     label2:
        $r9 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:fadeAndShortSlideTransition:screenPosition");

        $r11 = (int[]) $r10;

        r5 = (int[]) $r11;

        i0 = r5[0];

        i1 = r5[1];

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        $r12 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator>;

        f1 = virtualinvoke $r12.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[])>(r0, r1, r2, r5);

        f2 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r13 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide mSlideCalculator>;

        f3 = virtualinvoke $r13.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide,android.view.ViewGroup,android.view.View,int[])>(r0, r1, r2, r5);

        $r14 = <android.support.v17.leanback.transition.FadeAndShortSlide: android.animation.TimeInterpolator sDecelerate>;

        r20 = (android.transition.Transition) r0;

        r6 = staticinvoke <android.support.v17.leanback.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r2, r3, i0, i1, f0, f2, f1, f3, $r14, r20);

        $r15 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        r7 = virtualinvoke $r15.<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>(r1, r2, r3, r4);

        if r6 != null goto label3;

        return r7;

     label3:
        if r7 != null goto label4;

        return r6;

     label4:
        r19 = new android.animation.AnimatorSet;

        specialinvoke r19.<android.animation.AnimatorSet: void <init>()>();

        r8 = r19;

        $r17 = virtualinvoke r8.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r6);

        virtualinvoke $r17.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r7);

        return r8;
    }

    public android.transition.Transition addListener(android.transition.Transition$TransitionListener)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.Transition$TransitionListener r1;
        android.transition.Visibility $r2;
        android.transition.Transition $r4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.Transition$TransitionListener;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        virtualinvoke $r2.<android.transition.Visibility: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>(r1);

        $r4 = specialinvoke r0.<android.transition.Visibility: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>(r1);

        return $r4;
    }

    public android.transition.Transition removeListener(android.transition.Transition$TransitionListener)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.Transition$TransitionListener r1;
        android.transition.Visibility $r2;
        android.transition.Transition $r4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        r1 := @parameter0: android.transition.Transition$TransitionListener;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        virtualinvoke $r2.<android.transition.Visibility: android.transition.Transition removeListener(android.transition.Transition$TransitionListener)>(r1);

        $r4 = specialinvoke r0.<android.transition.Visibility: android.transition.Transition removeListener(android.transition.Transition$TransitionListener)>(r1);

        return $r4;
    }

    public float getDistance()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        float $f0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        $f0 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance>;

        return $f0;
    }

    public void setDistance(float)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        float f0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        f0 := @parameter0: float;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide: float mDistance> = f0;

        return;
    }

    public android.transition.Transition clone()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0, r5;
        android.transition.Transition $r1, $r3, r6;
        android.transition.Visibility $r2, $r4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        $r1 = specialinvoke r0.<android.transition.Visibility: android.transition.Transition clone()>();

        r5 = (android.support.v17.leanback.transition.FadeAndShortSlide) $r1;

        $r2 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade>;

        $r3 = virtualinvoke $r2.<android.transition.Visibility: android.transition.Transition clone()>();

        $r4 = (android.transition.Visibility) $r3;

        r5.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Visibility mFade> = $r4;

        r6 = (android.transition.Transition) r5;

        return r6;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.support.v17.leanback.transition.FadeAndShortSlide r0;
        android.transition.Transition $r1;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide;

        $r1 = virtualinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide: android.transition.Transition clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator r6;
        android.support.v17.leanback.transition.FadeAndShortSlide$1 r7;
        android.support.v17.leanback.transition.FadeAndShortSlide$2 r8;
        android.support.v17.leanback.transition.FadeAndShortSlide$3 r9;
        android.support.v17.leanback.transition.FadeAndShortSlide$4 r10;
        android.support.v17.leanback.transition.FadeAndShortSlide$5 r11;
        android.animation.TimeInterpolator r12;

        r6 = new android.view.animation.DecelerateInterpolator;

        specialinvoke r6.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r12 = (android.animation.TimeInterpolator) r6;

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.animation.TimeInterpolator sDecelerate> = r12;

        r7 = new android.support.v17.leanback.transition.FadeAndShortSlide$1;

        specialinvoke r7.<android.support.v17.leanback.transition.FadeAndShortSlide$1: void <init>()>();

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStart> = r7;

        r8 = new android.support.v17.leanback.transition.FadeAndShortSlide$2;

        specialinvoke r8.<android.support.v17.leanback.transition.FadeAndShortSlide$2: void <init>()>();

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateEnd> = r8;

        r9 = new android.support.v17.leanback.transition.FadeAndShortSlide$3;

        specialinvoke r9.<android.support.v17.leanback.transition.FadeAndShortSlide$3: void <init>()>();

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateStartEnd> = r9;

        r10 = new android.support.v17.leanback.transition.FadeAndShortSlide$4;

        specialinvoke r10.<android.support.v17.leanback.transition.FadeAndShortSlide$4: void <init>()>();

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateBottom> = r10;

        r11 = new android.support.v17.leanback.transition.FadeAndShortSlide$5;

        specialinvoke r11.<android.support.v17.leanback.transition.FadeAndShortSlide$5: void <init>()>();

        <android.support.v17.leanback.transition.FadeAndShortSlide: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide sCalculateTop> = r11;

        return;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$1
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$1 r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$1;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$1 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        boolean z0, $z1;
        int $i0;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$1;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $i0 = virtualinvoke r2.<android.view.ViewGroup: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $f2 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f3 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        f4 = $f2 + $f3;

        goto label4;

     label3:
        $f0 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        f4 = $f0 - $f1;

     label4:
        return f4;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$2
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$2 r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$2;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$2 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        boolean z0, $z1;
        int $i0;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$2;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $i0 = virtualinvoke r2.<android.view.ViewGroup: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $f2 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f3 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        f4 = $f2 - $f3;

        goto label4;

     label3:
        $f0 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        f4 = $f0 + $f1;

     label4:
        return f4;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$3
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$3 r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$3;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$3 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$3;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $i2 = r4[0];

        $i3 = virtualinvoke r3.<android.view.View: int getWidth()>();

        $i4 = $i3 / 2;

        i0 = $i2 + $i4;

        virtualinvoke r2.<android.view.ViewGroup: void getLocationOnScreen(int[])>(r4);

        r5 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: android.graphics.Rect getEpicenter()>();

        if r5 != null goto label1;

        $i5 = r4[0];

        $i6 = virtualinvoke r2.<android.view.ViewGroup: int getWidth()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        goto label2;

     label1:
        $i8 = virtualinvoke r5.<android.graphics.Rect: int centerX()>();

     label2:
        i1 = $i8;

        if i0 >= i1 goto label3;

        $f3 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f4 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        $f5 = $f3 - $f4;

        return $f5;

     label3:
        $f0 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getHorizontalDistance(android.view.ViewGroup)>(r2);

        $f2 = $f0 + $f1;

        return $f2;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$4
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$4 r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$4;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$4 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        float $f0, $f1, $f2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$4;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getVerticalDistance(android.view.ViewGroup)>(r2);

        $f2 = $f0 + $f1;

        return $f2;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$5
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$5 r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$5;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$5 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        float $f0, $f1, $f2;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$5;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getVerticalDistance(android.view.ViewGroup)>(r2);

        $f2 = $f0 - $f1;

        return $f2;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$6
<android.support.v17.leanback.transition.FadeAndShortSlide$6: android.support.v17.leanback.transition.FadeAndShortSlide this$0>
    void <init>(android.support.v17.leanback.transition.FadeAndShortSlide)
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$6 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$6;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r0.<android.support.v17.leanback.transition.FadeAndShortSlide$6: android.support.v17.leanback.transition.FadeAndShortSlide this$0> = r1;

        specialinvoke r0.<android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide: void <init>()>();

        return;
    }

    public float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$6 r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1, $r6;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$6;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $i2 = r4[1];

        $i3 = virtualinvoke r3.<android.view.View: int getHeight()>();

        $i4 = $i3 / 2;

        i0 = $i2 + $i4;

        virtualinvoke r2.<android.view.ViewGroup: void getLocationOnScreen(int[])>(r4);

        $r6 = r0.<android.support.v17.leanback.transition.FadeAndShortSlide$6: android.support.v17.leanback.transition.FadeAndShortSlide this$0>;

        r5 = virtualinvoke $r6.<android.support.v17.leanback.transition.FadeAndShortSlide: android.graphics.Rect getEpicenter()>();

        if r5 != null goto label1;

        $i5 = r4[1];

        $i6 = virtualinvoke r2.<android.view.ViewGroup: int getHeight()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        goto label2;

     label1:
        $i8 = virtualinvoke r5.<android.graphics.Rect: int centerY()>();

     label2:
        i1 = $i8;

        if i0 >= i1 goto label3;

        $f3 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        $f4 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getVerticalDistance(android.view.ViewGroup)>(r2);

        $f5 = $f3 - $f4;

        return $f5;

     label3:
        $f0 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        $f1 = virtualinvoke r1.<android.support.v17.leanback.transition.FadeAndShortSlide: float getVerticalDistance(android.view.ViewGroup)>(r2);

        $f2 = $f0 + $f1;

        return $f2;
    }

android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide
    void <init>()
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide r0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    float getGoneX(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        float $f0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        return $f0;
    }

    float getGoneY(android.support.v17.leanback.transition.FadeAndShortSlide, android.view.ViewGroup, android.view.View, int[])
    {
        android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide r0;
        android.support.v17.leanback.transition.FadeAndShortSlide r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int[] r4;
        float $f0;

        r0 := @this: android.support.v17.leanback.transition.FadeAndShortSlide$CalculateSlide;

        r1 := @parameter0: android.support.v17.leanback.transition.FadeAndShortSlide;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: int[];

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        return $f0;
    }

