android.support.wearable.view.ScrollManager
<android.support.wearable.view.ScrollManager: int ONE_SEC_IN_MS>
<android.support.wearable.view.ScrollManager: float VELOCITY_MULTIPLIER>
<android.support.wearable.view.ScrollManager: float FLING_EDGE_RATIO>
<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>
<android.support.wearable.view.ScrollManager: float mMinRadiusFractionSquared>
<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen>
<android.support.wearable.view.ScrollManager: float mScrollRadiansPerScreen>
<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>
<android.support.wearable.view.ScrollManager: float mScreenRadiusPxSquared>
<android.support.wearable.view.ScrollManager: float mScrollPixelsPerRadian>
<android.support.wearable.view.ScrollManager: boolean mDown>
<android.support.wearable.view.ScrollManager: boolean mScrolling>
<android.support.wearable.view.ScrollManager: float mLastAngleRadians>
<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>
<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker>
    void <init>()
    {
        android.support.wearable.view.ScrollManager r0;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0, $d1;

        r0 := @this: android.support.wearable.view.ScrollManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction> = 0.0F;

        $f1 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>;

        $f0 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>;

        $f2 = $f1 * $f0;

        r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFractionSquared> = $f2;

        r0.<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen> = 180.0F;

        $f3 = r0.<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen>;

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f4 = (float) $d1;

        r0.<android.support.wearable.view.ScrollManager: float mScrollRadiansPerScreen> = $f4;

        return;
    }

    void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
    {
        android.support.wearable.view.ScrollManager r0;
        androidx.recyclerview.widget.RecyclerView r1, $r5;
        android.graphics.Point r2, $r4;
        android.view.Display r3;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.view.VelocityTracker $r6;

        r0 := @this: android.support.wearable.view.ScrollManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView> = r1;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r2 = $r4;

        $r5 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: android.view.Display getDisplay()>();

        virtualinvoke r3.<android.view.Display: void getSize(android.graphics.Point)>(r2);

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = r2.<android.graphics.Point: int y>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        $f0 = (float) $i2;

        $f1 = $f0 / 2.0F;

        r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx> = $f1;

        $f3 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        $f2 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        $f4 = $f3 * $f2;

        r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPxSquared> = $f4;

        $i3 = r2.<android.graphics.Point: int y>;

        $f6 = (float) $i3;

        $f5 = r0.<android.support.wearable.view.ScrollManager: float mScrollRadiansPerScreen>;

        $f7 = $f6 / $f5;

        r0.<android.support.wearable.view.ScrollManager: float mScrollPixelsPerRadian> = $f7;

        $r6 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker> = $r6;

        return;
    }

    void clearRecyclerView()
    {
        android.support.wearable.view.ScrollManager r0;

        r0 := @this: android.support.wearable.view.ScrollManager;

        r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView> = null;

        return;
    }

    boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.wearable.view.ScrollManager r0;
        android.view.MotionEvent r1, r2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, f36, f37, f38, f39, f40, f41, f42, f43, f44;
        android.view.VelocityTracker $r3, $r8, $r9, $r10;
        int $i0, $i2, $i4, $i5, $i6, i8, i9;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5, $r6, $r7, $r11, $r12;
        byte $b1, $b3, $b7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @this: android.support.wearable.view.ScrollManager;

        r1 := @parameter0: android.view.MotionEvent;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f4 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        f0 = $f3 - $f4;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f6 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        f1 = $f5 - $f6;

        $f8 = f0 * f0;

        $f7 = f1 * f1;

        f2 = $f8 + $f7;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        $r3 = r0.<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label2;
            case 3: goto label8;
            default: goto label9;
        };

     label1:
        $f33 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPxSquared>;

        $f35 = f2 / $f33;

        $f34 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFractionSquared>;

        $b7 = $f35 cmpl $f34;

        if $b7 <= 0 goto label9;

        r0.<android.support.wearable.view.ScrollManager: boolean mDown> = 1;

        return 1;

     label2:
        $z1 = r0.<android.support.wearable.view.ScrollManager: boolean mScrolling>;

        if $z1 == 0 goto label4;

        $d7 = (double) f1;

        $d6 = (double) f0;

        $d8 = staticinvoke <java.lang.Math: double atan2(double,double)>($d7, $d6);

        f36 = (float) $d8;

        $f17 = r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians>;

        f37 = f36 - $f17;

        f38 = staticinvoke <android.support.wearable.view.ScrollManager: float normalizeAngleRadians(float)>(f37);

        $f18 = r0.<android.support.wearable.view.ScrollManager: float mScrollPixelsPerRadian>;

        $f19 = f38 * $f18;

        i8 = staticinvoke <java.lang.Math: int round(float)>($f19);

        if i8 == 0 goto label3;

        $r6 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>(0, i8);

        $f21 = (float) i8;

        $f20 = r0.<android.support.wearable.view.ScrollManager: float mScrollPixelsPerRadian>;

        f39 = $f21 / $f20;

        $f22 = r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians>;

        $f23 = $f22 + f39;

        r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians> = $f23;

        $f24 = r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians>;

        $f25 = staticinvoke <android.support.wearable.view.ScrollManager: float normalizeAngleRadians(float)>($f24);

        r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians> = $f25;

     label3:
        return 1;

     label4:
        $z2 = r0.<android.support.wearable.view.ScrollManager: boolean mDown>;

        if $z2 == 0 goto label5;

        $f12 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f13 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        f40 = $f12 - $f13;

        $f14 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f15 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        f41 = $f14 - $f15;

        $d1 = (double) f40;

        $d0 = (double) f41;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        f42 = (float) $d2;

        f43 = f40 / f42;

        f44 = f41 / f42;

        r0.<android.support.wearable.view.ScrollManager: boolean mScrolling> = 1;

        $r5 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

        $d4 = (double) f44;

        $d3 = (double) f43;

        $d5 = staticinvoke <java.lang.Math: double atan2(double,double)>($d4, $d3);

        $f16 = (float) $d5;

        r0.<android.support.wearable.view.ScrollManager: float mLastAngleRadians> = $f16;

        return 1;

     label5:
        $f9 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPxSquared>;

        $f11 = f2 / $f9;

        $f10 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFractionSquared>;

        $b1 = $f11 cmpl $f10;

        if $b1 <= 0 goto label9;

        r0.<android.support.wearable.view.ScrollManager: boolean mDown> = 1;

        return 1;

     label6:
        r0.<android.support.wearable.view.ScrollManager: boolean mDown> = 0;

        r0.<android.support.wearable.view.ScrollManager: boolean mScrolling> = 0;

        $r8 = r0.<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker>;

        $r7 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i2 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()>();

        $f26 = (float) $i2;

        virtualinvoke $r8.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f26);

        $r9 = r0.<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker>;

        $f27 = virtualinvoke $r9.<android.view.VelocityTracker: float getYVelocity()>();

        i9 = (int) $f27;

        $f28 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f29 = r0.<android.support.wearable.view.ScrollManager: float mScreenRadiusPx>;

        $f30 = 1.5F * $f29;

        $b3 = $f28 cmpg $f30;

        if $b3 >= 0 goto label7;

        i9 = neg i9;

     label7:
        $r10 = r0.<android.support.wearable.view.ScrollManager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r10.<android.view.VelocityTracker: void clear()>();

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i9);

        $r11 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i5 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()>();

        if $i4 <= $i5 goto label9;

        $r12 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $f31 = (float) i9;

        $f32 = 1.5F * $f31;

        $i6 = (int) $f32;

        $z3 = virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>(0, $i6);

        return $z3;

     label8:
        $z0 = r0.<android.support.wearable.view.ScrollManager: boolean mDown>;

        if $z0 == 0 goto label9;

        r0.<android.support.wearable.view.ScrollManager: boolean mDown> = 0;

        r0.<android.support.wearable.view.ScrollManager: boolean mScrolling> = 0;

        $r4 = r0.<android.support.wearable.view.ScrollManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

        return 1;

     label9:
        return 0;
    }

    private static float normalizeAngleRadians(float)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1;
        float f0;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $b0 = $d0 cmpg -3.141592653589793;

        if $b0 >= 0 goto label1;

        $d4 = (double) f0;

        $d5 = $d4 + 6.283185307179586;

        f0 = (float) $d5;

     label1:
        $d1 = (double) f0;

        $b1 = $d1 cmpl 3.141592653589793;

        if $b1 <= 0 goto label2;

        $d2 = (double) f0;

        $d3 = $d2 - 6.283185307179586;

        f0 = (float) $d3;

     label2:
        return f0;
    }

    public void setScrollDegreesPerScreen(float)
    {
        android.support.wearable.view.ScrollManager r0;
        float f0, $f1, $f2;
        double $d0, $d1;

        r0 := @this: android.support.wearable.view.ScrollManager;

        f0 := @parameter0: float;

        r0.<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen> = f0;

        $f1 = r0.<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen>;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f2 = (float) $d1;

        r0.<android.support.wearable.view.ScrollManager: float mScrollRadiansPerScreen> = $f2;

        return;
    }

    public void setBezelWidth(float)
    {
        android.support.wearable.view.ScrollManager r0;
        float f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.support.wearable.view.ScrollManager;

        f0 := @parameter0: float;

        $f1 = 1.0F - f0;

        r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction> = $f1;

        $f3 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>;

        $f2 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>;

        $f4 = $f3 * $f2;

        r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFractionSquared> = $f4;

        return;
    }

    public float getScrollDegreesPerScreen()
    {
        android.support.wearable.view.ScrollManager r0;
        float $f0;

        r0 := @this: android.support.wearable.view.ScrollManager;

        $f0 = r0.<android.support.wearable.view.ScrollManager: float mScrollDegreesPerScreen>;

        return $f0;
    }

    public float getBezelWidth()
    {
        android.support.wearable.view.ScrollManager r0;
        float $f0, $f1;

        r0 := @this: android.support.wearable.view.ScrollManager;

        $f0 = r0.<android.support.wearable.view.ScrollManager: float mMinRadiusFraction>;

        $f1 = 1.0F - $f0;

        return $f1;
    }

