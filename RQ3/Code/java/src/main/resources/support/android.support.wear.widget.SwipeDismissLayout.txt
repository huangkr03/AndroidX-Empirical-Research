android.support.wear.widget.SwipeDismissLayout
<android.support.wear.widget.SwipeDismissLayout: java.lang.String TAG>
<android.support.wear.widget.SwipeDismissLayout: float DEFAULT_DISMISS_DRAG_WIDTH_RATIO>
<android.support.wear.widget.SwipeDismissLayout: float EDGE_SWIPE_THRESHOLD>
<android.support.wear.widget.SwipeDismissLayout: int mSlop>
<android.support.wear.widget.SwipeDismissLayout: int mMinFlingVelocity>
<android.support.wear.widget.SwipeDismissLayout: float mGestureThresholdPx>
<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId>
<android.support.wear.widget.SwipeDismissLayout: float mDownX>
<android.support.wear.widget.SwipeDismissLayout: float mDownY>
<android.support.wear.widget.SwipeDismissLayout: boolean mSwipeable>
<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>
<android.support.wear.widget.SwipeDismissLayout: boolean mCanStartSwipe>
<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed>
<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept>
<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>
<android.support.wear.widget.SwipeDismissLayout: float mTranslationX>
<android.support.wear.widget.SwipeDismissLayout: boolean mDisallowIntercept>
<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener>
<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener>
<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>
<android.support.wear.widget.SwipeDismissLayout: float mLastX>
<android.support.wear.widget.SwipeDismissLayout: float mDismissMinDragWidthRatio>
    void <init>(android.content.Context)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4;
        android.view.ViewConfiguration r3;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0, $f1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mCanStartSwipe> = 1;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDismissMinDragWidthRatio> = 0.33F;

        r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i2 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: int mSlop> = $i2;

        $i3 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: int mMinFlingVelocity> = $i3;

        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i4 = $r5.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i4;

        $f1 = $f0 * 0.1F;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mGestureThresholdPx> = $f1;

        virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void setSwipeable(boolean)>(1);

        return;
    }

    public void setDismissMinDragWidthRatio(float)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        float f0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        f0 := @parameter0: float;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDismissMinDragWidthRatio> = f0;

        return;
    }

    public float getDismissMinDragWidthRatio()
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        float $f0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        $f0 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDismissMinDragWidthRatio>;

        return $f0;
    }

    public void setSwipeable(boolean)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        boolean z0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        z0 := @parameter0: boolean;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwipeable> = z0;

        return;
    }

    public boolean isSwipeable()
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        boolean $z0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        $z0 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwipeable>;

        return $z0;
    }

    void setOnPreSwipeListener(android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener r1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener;

        r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener> = r1;

        return;
    }

    void setOnDismissedListener(android.support.wear.widget.SwipeDismissLayout$OnDismissedListener)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.support.wear.widget.SwipeDismissLayout$OnDismissedListener r1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.support.wear.widget.SwipeDismissLayout$OnDismissedListener;

        r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener> = r1;

        return;
    }

    void setOnSwipeProgressChangedListener(android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener r1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener;

        r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener> = r1;

        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        boolean z0;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        z0 := @parameter0: boolean;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDisallowIntercept> = z0;

        $r1 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: android.view.ViewParent getParent()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(z0);

     label1:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i9, i10, i11, i14;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener $r2, $r6;
        android.view.VelocityTracker $r3, $r4, $r5;
        byte $b6, $b7, $b12, b13;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwipeable>;

        if $z0 != 0 goto label01;

        $z7 = specialinvoke r0.<android.widget.FrameLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z7;

     label01:
        $f3 = r0.<android.support.wear.widget.SwipeDismissLayout: float mTranslationX>;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f3, 0.0F);

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label12;
            case 5: goto label03;
            case 6: goto label04;
            default: goto label12;
        };

     label02:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void resetMembers()>();

        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX> = $f10;

        $f11 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDownY> = $f11;

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId> = $i9;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker> = $r4;

        $r5 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        goto label12;

     label03:
        i10 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i10);

        r0.<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId> = $i4;

        goto label12;

     label04:
        i11 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i11);

        $i2 = r0.<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId>;

        if i0 != $i2 goto label12;

        if i11 != 0 goto label05;

        $b12 = 1;

        goto label06;

     label05:
        $b12 = 0;

     label06:
        b13 = $b12;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b13);

        r0.<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId> = $i3;

        goto label12;

     label07:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void resetMembers()>();

        goto label12;

     label08:
        $r3 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r3 == null goto label12;

        $z5 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept>;

        if $z5 == 0 goto label09;

        goto label12;

     label09:
        $i5 = r0.<android.support.wear.widget.SwipeDismissLayout: int mActiveTouchId>;

        i14 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i5);

        if i14 != -1 goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SwipeDismissLayout", "Invalid pointer index: ignoring.");

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 1;

        goto label12;

     label10:
        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f7 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f6 - $f7;

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i14);

        f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i14);

        $b6 = f0 cmpl 0.0F;

        if $b6 == 0 goto label11;

        $f9 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        $f8 = r0.<android.support.wear.widget.SwipeDismissLayout: float mGestureThresholdPx>;

        $b7 = $f9 cmpl $f8;

        if $b7 < 0 goto label11;

        $z6 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: boolean canScroll(android.view.View,boolean,float,float,float)>(r0, 0, f0, f1, f2);

        if $z6 == 0 goto label11;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 1;

        goto label12;

     label11:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void updateSwiping(android.view.MotionEvent)>(r1);

     label12:
        $r6 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener>;

        if $r6 != null goto label13;

        $z4 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDisallowIntercept>;

        if $z4 == 0 goto label14;

     label13:
        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener>;

        $f5 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        $f4 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownY>;

        $z1 = interfaceinvoke $r2.<android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener: boolean onPreSwipe(android.support.wear.widget.SwipeDismissLayout,float,float)>(r0, $f5, $f4);

        if $z1 == 0 goto label17;

     label14:
        $z2 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept>;

        if $z2 != 0 goto label15;

        $z3 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z3 == 0 goto label15;

        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        return $z8;

     label17:
        return 0;
    }

    public boolean canScrollHorizontally(int)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $z0 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: boolean isSwipeable()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: int getVisibility()>();

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isPotentialSwipe(float, float)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int $i0, $i1, $i2;
        byte $b3;
        boolean $z0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f5 = $f3 + $f2;

        $i1 = r0.<android.support.wear.widget.SwipeDismissLayout: int mSlop>;

        $i0 = r0.<android.support.wear.widget.SwipeDismissLayout: int mSlop>;

        $i2 = $i1 * $i0;

        $f4 = (float) $i2;

        $b3 = $f5 cmpl $f4;

        if $b3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.VelocityTracker $r2, $r4;
        android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener $r3, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int $i0;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwipeable>;

        if $z0 != 0 goto label1;

        $z7 = specialinvoke r0.<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z7;

     label1:
        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label2;

        $z6 = specialinvoke r0.<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z6;

     label2:
        $r3 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener>;

        if $r3 == null goto label3;

        $r5 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener mOnPreSwipeListener>;

        $f6 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        $f5 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownY>;

        $z4 = interfaceinvoke $r5.<android.support.wear.widget.SwipeDismissLayout$OnPreSwipeListener: boolean onPreSwipe(android.support.wear.widget.SwipeDismissLayout,float,float)>(r0, $f6, $f5);

        if $z4 != 0 goto label3;

        $z5 = specialinvoke r0.<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z5;

     label3:
        $f0 = r0.<android.support.wear.widget.SwipeDismissLayout: float mTranslationX>;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, 0.0F);

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label8;
            case 3: goto label7;
            default: goto label9;
        };

     label4:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void updateDismiss(android.view.MotionEvent)>(r1);

        $z2 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z2 == 0 goto label5;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void dismiss()>();

        goto label6;

     label5:
        $z3 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z3 == 0 goto label6;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void cancel()>();

     label6:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void resetMembers()>();

        goto label9;

     label7:
        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void cancel()>();

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void resetMembers()>();

        goto label9;

     label8:
        $r4 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<android.support.wear.widget.SwipeDismissLayout: float mLastX> = $f1;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void updateSwiping(android.view.MotionEvent)>(r1);

        $z1 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z1 == 0 goto label9;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f3 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        $f4 = $f2 - $f3;

        specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: void setProgress(float)>($f4);

     label9:
        return 1;
    }

    private void setProgress(float)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        float f0, $f1, $f2;
        android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener $r1, $r2;
        byte $b0;
        int $i1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        f0 := @parameter0: float;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mTranslationX> = f0;

        $r1 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        if $r1 == null goto label1;

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        $i1 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = f0 / $f1;

        interfaceinvoke $r2.<android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener: void onSwipeProgressChanged(android.support.wear.widget.SwipeDismissLayout,float,float)>(r0, $f2, f0);

     label1:
        return;
    }

    private void dismiss()
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.support.wear.widget.SwipeDismissLayout$OnDismissedListener $r1, $r2;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        $r1 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener>;

        interfaceinvoke $r2.<android.support.wear.widget.SwipeDismissLayout$OnDismissedListener: void onDismissed(android.support.wear.widget.SwipeDismissLayout)>(r0);

     label1:
        return;
    }

    private void cancel()
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener $r1, $r2;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        $r1 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        interfaceinvoke $r2.<android.support.wear.widget.SwipeDismissLayout$OnSwipeProgressChangedListener: void onSwipeCanceled(android.support.wear.widget.SwipeDismissLayout)>(r0);

     label1:
        return;
    }

    private void resetMembers()
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        $r1 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

     label1:
        r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker> = null;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mTranslationX> = 0.0F;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX> = 0.0F;

        r0.<android.support.wear.widget.SwipeDismissLayout: float mDownY> = 0.0F;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping> = 0;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed> = 0;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 0;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mCanStartSwipe> = 1;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDisallowIntercept> = 0;

        return;
    }

    private void updateSwiping(android.view.MotionEvent)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b0, $b1;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z0 != 0 goto label3;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f3 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f2 - $f3;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f5 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownY>;

        f1 = $f4 - $f5;

        $z1 = specialinvoke r0.<android.support.wear.widget.SwipeDismissLayout: boolean isPotentialSwipe(float,float)>(f0, f1);

        if $z1 == 0 goto label3;

        $z2 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mCanStartSwipe>;

        if $z2 == 0 goto label1;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $f7 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b0 = $f6 cmpg $f7;

        if $b0 >= 0 goto label1;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping> = $z3;

        $z4 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mCanStartSwipe> = $z4;

     label3:
        return;
    }

    private void updateDismiss(android.view.MotionEvent)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.view.VelocityTracker $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i3, $i5;
        byte $b2, $b4, $b6, $b7;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f2 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f1 - $f2;

        $r2 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $r3 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $z0 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z0 != 0 goto label3;

        $i3 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: int getWidth()>();

        $f6 = (float) $i3;

        $f5 = r0.<android.support.wear.widget.SwipeDismissLayout: float mDismissMinDragWidthRatio>;

        $f7 = $f6 * $f5;

        $b4 = f0 cmpl $f7;

        if $b4 <= 0 goto label1;

        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f11 = r0.<android.support.wear.widget.SwipeDismissLayout: float mLastX>;

        $b7 = $f10 cmpl $f11;

        if $b7 >= 0 goto label2;

     label1:
        $r5 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        $f8 = virtualinvoke $r5.<android.view.VelocityTracker: float getXVelocity()>();

        $i5 = r0.<android.support.wear.widget.SwipeDismissLayout: int mMinFlingVelocity>;

        $f9 = (float) $i5;

        $b6 = $f8 cmpl $f9;

        if $b6 < 0 goto label3;

     label2:
        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed> = 1;

     label3:
        $z2 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z2 == 0 goto label4;

        $z1 = r0.<android.support.wear.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z1 == 0 goto label4;

        $r4 = r0.<android.support.wear.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        $f3 = virtualinvoke $r4.<android.view.VelocityTracker: float getXVelocity()>();

        $i0 = r0.<android.support.wear.widget.SwipeDismissLayout: int mMinFlingVelocity>;

        $i1 = neg $i0;

        $f4 = (float) $i1;

        $b2 = $f3 cmpg $f4;

        if $b2 >= 0 goto label4;

        r0.<android.support.wear.widget.SwipeDismissLayout: boolean mDismissed> = 0;

     label4:
        return;
    }

    protected boolean canScroll(android.view.View, boolean, float, float, float)
    {
        android.support.wear.widget.SwipeDismissLayout r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.view.ViewGroup r2;
        int i0, i1, i2, $i3, $i4, $i6, $i8, $i10, $i12, $i13, i14;
        byte $b5, $b7, $b9, $b11;

        r0 := @this: android.support.wear.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i0 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i1 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i2 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i14 = i2 - 1;

     label1:
        if i14 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i14);

        $f4 = (float) i0;

        $f5 = f1 + $f4;

        $i4 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f6 = (float) $i4;

        $b5 = $f5 cmpl $f6;

        if $b5 < 0 goto label2;

        $f7 = (float) i0;

        $f8 = f1 + $f7;

        $i6 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f9 = (float) $i6;

        $b7 = $f8 cmpg $f9;

        if $b7 >= 0 goto label2;

        $f10 = (float) i1;

        $f11 = f2 + $f10;

        $i8 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f12 = (float) $i8;

        $b9 = $f11 cmpl $f12;

        if $b9 < 0 goto label2;

        $f13 = (float) i1;

        $f14 = f2 + $f13;

        $i10 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f15 = (float) $i10;

        $b11 = $f14 cmpg $f15;

        if $b11 >= 0 goto label2;

        $f16 = (float) i0;

        $f17 = f1 + $f16;

        $i12 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f18 = (float) $i12;

        $f20 = $f17 - $f18;

        $f19 = (float) i1;

        $f21 = f2 + $f19;

        $i13 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f22 = (float) $i13;

        $f23 = $f21 - $f22;

        $z3 = virtualinvoke r0.<android.support.wear.widget.SwipeDismissLayout: boolean canScroll(android.view.View,boolean,float,float,float)>(r3, 1, f0, $f20, $f23);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        i14 = i14 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $f3 = neg f0;

        $i3 = (int) $f3;

        $z2 = virtualinvoke r1.<android.view.View: boolean canScrollHorizontally(int)>($i3);

        if $z2 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

