android.support.v17.leanback.widget.StreamingTextView
<android.support.v17.leanback.widget.StreamingTextView: boolean DEBUG>
<android.support.v17.leanback.widget.StreamingTextView: java.lang.String TAG>
<android.support.v17.leanback.widget.StreamingTextView: float TEXT_DOT_SCALE>
<android.support.v17.leanback.widget.StreamingTextView: boolean DOTS_FOR_STABLE>
<android.support.v17.leanback.widget.StreamingTextView: boolean DOTS_FOR_PENDING>
<android.support.v17.leanback.widget.StreamingTextView: boolean ANIMATE_DOTS_FOR_PENDING>
<android.support.v17.leanback.widget.StreamingTextView: long STREAM_UPDATE_DELAY_MILLIS>
<android.support.v17.leanback.widget.StreamingTextView: java.util.regex.Pattern SPLIT_PATTERN>
<android.support.v17.leanback.widget.StreamingTextView: android.util.Property STREAM_POSITION_PROPERTY>
<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom>
<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mOneDot>
<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mTwoDot>
<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition>
<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.util.Random $r3;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        r0.<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        java.util.Random $r3;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        r0.<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom> = $r3;

        return;
    }

    protected void onFinishInflate()
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        specialinvoke r0.<android.widget.EditText: void onFinishInflate()>();

        $i0 = <android.support.v17.leanback.R$drawable: int lb_text_dot_one>;

        $r1 = specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap getScaledBitmap(int,float)>($i0, 1.3F);

        r0.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mOneDot> = $r1;

        $i1 = <android.support.v17.leanback.R$drawable: int lb_text_dot_two>;

        $r2 = specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap getScaledBitmap(int,float)>($i1, 1.3F);

        r0.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mTwoDot> = $r2;

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void reset()>();

        return;
    }

    private android.graphics.Bitmap getScaledBitmap(int, float)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        int i0, $i1, $i2, $i3, $i4;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Bitmap r1, $r3;
        android.content.res.Resources $r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: android.content.res.Resources getResources()>();

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r2, i0);

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = $f1 * f0;

        $i2 = (int) $f2;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f3 = (float) $i3;

        $f4 = $f3 * f0;

        $i4 = (int) $f4;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r1, $i2, $i4, 0);

        return $r3;
    }

    public void reset()
    {
        android.support.v17.leanback.widget.StreamingTextView r0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r0.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition> = -1;

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void cancelStreamAnimation()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void setText(java.lang.CharSequence)>("");

        return;
    }

    public void updateRecognizedText(java.lang.String, java.lang.String)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        java.lang.String r1, r6;
        android.text.SpannableStringBuilder r2, $r3;
        int i0, $i1, $i2, $i3;
        android.text.SpannedString $r4;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r6 != null goto label1;

        r6 = "";

     label1:
        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r6);

        r2 = $r3;

        if r1 == null goto label2;

        i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void addDottySpans(android.text.SpannableStringBuilder,java.lang.String,int)>(r2, r1, i0);

     label2:
        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        $i2 = r0.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        r0.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition> = $i3;

        $r4 = new android.text.SpannedString;

        specialinvoke $r4.<android.text.SpannedString: void <init>(java.lang.CharSequence)>(r2);

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void updateText(java.lang.CharSequence)>($r4);

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void startStreamAnimation()>();

        return;
    }

    int getStreamPosition()
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        $i0 = r0.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition>;

        return $i0;
    }

    void setStreamPosition(int)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        int i0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        i0 := @parameter0: int;

        r0.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition> = i0;

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void invalidate()>();

        return;
    }

    private void startStreamAnimation()
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        int i0, i1, i2;
        android.animation.ObjectAnimator $r1, $r3, $r4, $r6, $r7, $r8, $r10;
        int[] $r2;
        long $l3, $l4;
        android.util.Property $r9;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void cancelStreamAnimation()>();

        i0 = virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: int getStreamPosition()>();

        i1 = virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: int length()>();

        i2 = i1 - i0;

        if i2 <= 0 goto label2;

        $r1 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        if $r1 != null goto label1;

        $r7 = new android.animation.ObjectAnimator;

        specialinvoke $r7.<android.animation.ObjectAnimator: void <init>()>();

        r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation> = $r7;

        $r8 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        virtualinvoke $r8.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r0);

        $r10 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        $r9 = <android.support.v17.leanback.widget.StreamingTextView: android.util.Property STREAM_POSITION_PROPERTY>;

        virtualinvoke $r10.<android.animation.ObjectAnimator: void setProperty(android.util.Property)>($r9);

     label1:
        $r3 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        $r2 = newarray (int)[2];

        $r2[0] = i0;

        $r2[1] = i1;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void setIntValues(int[])>($r2);

        $r4 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        $l3 = (long) i2;

        $l4 = 50L * $l3;

        virtualinvoke $r4.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l4);

        $r6 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        virtualinvoke $r6.<android.animation.ObjectAnimator: void start()>();

     label2:
        return;
    }

    private void cancelStreamAnimation()
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        $r1 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v17.leanback.widget.StreamingTextView: android.animation.ObjectAnimator mStreamingAnimation>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        return;
    }

    private void addDottySpans(android.text.SpannableStringBuilder, java.lang.String, int)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.text.SpannableStringBuilder r1;
        java.lang.String r2;
        int i0, i1, i2, $i3, $i4, $i5;
        java.util.regex.Matcher r3;
        android.support.v17.leanback.widget.StreamingTextView$DottySpan r4, $r6;
        java.util.regex.Pattern $r5;
        boolean $z0;
        char $c6;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.text.SpannableStringBuilder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = <android.support.v17.leanback.widget.StreamingTextView: java.util.regex.Pattern SPLIT_PATTERN>;

        r3 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

     label1:
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke r3.<java.util.regex.Matcher: int start()>();

        i1 = i0 + $i3;

        $i4 = virtualinvoke r3.<java.util.regex.Matcher: int end()>();

        i2 = i0 + $i4;

        $r6 = new android.support.v17.leanback.widget.StreamingTextView$DottySpan;

        $i5 = virtualinvoke r3.<java.util.regex.Matcher: int start()>();

        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i5);

        specialinvoke $r6.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: void <init>(android.support.v17.leanback.widget.StreamingTextView,int,int)>(r0, $c6, i1);

        r4 = $r6;

        virtualinvoke r1.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i1, i2, 33);

        goto label1;

     label2:
        return;
    }

    private void addColorSpan(android.text.SpannableStringBuilder, int, java.lang.String, int)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.text.SpannableStringBuilder r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String r2;
        android.text.style.ForegroundColorSpan r3, $r4;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.text.SpannableStringBuilder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r4 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r4.<android.text.style.ForegroundColorSpan: void <init>(int)>(i0);

        r3 = $r4;

        i2 = i1;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        i3 = i1 + $i4;

        virtualinvoke r1.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r3, i2, i3, 33);

        return;
    }

    public void setFinalRecognizedText(java.lang.CharSequence)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void updateText(java.lang.CharSequence)>(r1);

        return;
    }

    private void updateText(java.lang.CharSequence)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: void setText(java.lang.CharSequence)>(r1);

        $i0 = virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: int length()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView: boolean bringPointIntoView(int)>($i0);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "Landroid/support/v17/leanback/widget/StreamingTextView;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public static boolean isLayoutRtl(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label3;

        $i1 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        if 1 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public void updateRecognizedText(java.lang.String, java.util.List)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        java.lang.String r1;
        java.util.List r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        return;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.support.v17.leanback.widget.StreamingTextView r0;
        android.view.ActionMode$Callback r1, $r2;
        android.widget.TextView r3;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        r3 = (android.widget.TextView) r0;

        $r2 = staticinvoke <android.support.v4.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>(r3, r1);

        specialinvoke r0.<android.widget.EditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        android.support.v17.leanback.widget.StreamingTextView$1 $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\S+");

        <android.support.v17.leanback.widget.StreamingTextView: java.util.regex.Pattern SPLIT_PATTERN> = $r0;

        $r1 = new android.support.v17.leanback.widget.StreamingTextView$1;

        specialinvoke $r1.<android.support.v17.leanback.widget.StreamingTextView$1: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "streamPosition");

        <android.support.v17.leanback.widget.StreamingTextView: android.util.Property STREAM_POSITION_PROPERTY> = $r1;

        return;
    }

android.support.v17.leanback.widget.StreamingTextView$1
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.widget.StreamingTextView$1 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.Integer get(android.support.v17.leanback.widget.StreamingTextView)
    {
        android.support.v17.leanback.widget.StreamingTextView$1 r0;
        android.support.v17.leanback.widget.StreamingTextView r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$1;

        r1 := @parameter0: android.support.v17.leanback.widget.StreamingTextView;

        $i0 = virtualinvoke r1.<android.support.v17.leanback.widget.StreamingTextView: int getStreamPosition()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public void set(android.support.v17.leanback.widget.StreamingTextView, java.lang.Integer)
    {
        android.support.v17.leanback.widget.StreamingTextView$1 r0;
        android.support.v17.leanback.widget.StreamingTextView r1;
        java.lang.Integer r2;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$1;

        r1 := @parameter0: android.support.v17.leanback.widget.StreamingTextView;

        r2 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.support.v17.leanback.widget.StreamingTextView: void setStreamPosition(int)>($i0);

        return;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.widget.StreamingTextView$1 r0;
        java.lang.Object r1;
        android.support.v17.leanback.widget.StreamingTextView $r2;
        java.lang.Integer $r3;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.widget.StreamingTextView) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView$1: java.lang.Integer get(android.support.v17.leanback.widget.StreamingTextView)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.widget.StreamingTextView$1 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.widget.StreamingTextView $r4;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.widget.StreamingTextView) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.support.v17.leanback.widget.StreamingTextView$1: void set(android.support.v17.leanback.widget.StreamingTextView,java.lang.Integer)>($r4, $r3);

        return;
    }

android.support.v17.leanback.widget.StreamingTextView$DottySpan
<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mSeed>
<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mPosition>
<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>
    public void <init>(android.support.v17.leanback.widget.StreamingTextView, int, int)
    {
        android.support.v17.leanback.widget.StreamingTextView$DottySpan r0;
        android.support.v17.leanback.widget.StreamingTextView r1;
        int i0, i1;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$DottySpan;

        r1 := @parameter0: android.support.v17.leanback.widget.StreamingTextView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0> = r1;

        specialinvoke r0.<android.text.style.ReplacementSpan: void <init>()>();

        r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mSeed> = i0;

        r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mPosition> = i1;

        return;
    }

    public void draw(android.graphics.Canvas, java.lang.CharSequence, int, int, float, int, int, int, android.graphics.Paint)
    {
        android.support.v17.leanback.widget.StreamingTextView$DottySpan r0;
        android.graphics.Canvas r1;
        java.lang.CharSequence r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.Paint r3;
        boolean z0, $z1;
        android.support.v17.leanback.widget.StreamingTextView $r4, $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r18, $r19;
        android.graphics.Bitmap $r5, $r16, $r17, $r20, $r21;
        long $l13;
        java.util.Random $r8, $r11, $r13;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$DottySpan;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f0 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: android.graphics.Paint;

        $f3 = virtualinvoke r3.<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>(r2, i0, i1);

        i5 = (int) $f3;

        $r4 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r5 = $r4.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mOneDot>;

        i6 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        i7 = 2 * i6;

        i8 = i5 / i7;

        i9 = i5 % i7;

        i10 = i9 / 2;

        $r6 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        z0 = staticinvoke <android.support.v17.leanback.widget.StreamingTextView: boolean isLayoutRtl(android.view.View)>($r6);

        $r7 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r8 = $r7.<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom>;

        $i12 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mSeed>;

        $l13 = (long) $i12;

        virtualinvoke $r8.<java.util.Random: void setSeed(long)>($l13);

        i11 = virtualinvoke r3.<android.graphics.Paint: int getAlpha()>();

        i28 = 0;

     label1:
        if i28 >= i8 goto label7;

        $i14 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: int mPosition>;

        $i16 = $i14 + i28;

        $r9 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $i15 = $r9.<android.support.v17.leanback.widget.StreamingTextView: int mStreamPosition>;

        if $i16 < $i15 goto label2;

        goto label7;

     label2:
        $i17 = i28 * i7;

        $i19 = $i17 + i10;

        $i18 = i6 / 2;

        $i20 = $i19 + $i18;

        f1 = (float) $i20;

        if z0 == 0 goto label3;

        $f6 = (float) i5;

        $f7 = f0 + $f6;

        $f9 = $f7 - f1;

        $f8 = (float) i6;

        $f10 = $f9 - $f8;

        goto label4;

     label3:
        $f10 = f0 + f1;

     label4:
        f2 = $f10;

        $r10 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r11 = $r10.<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom>;

        $i21 = virtualinvoke $r11.<java.util.Random: int nextInt(int)>(4);

        $i22 = $i21 + 1;

        $i23 = $i22 * 63;

        virtualinvoke r3.<android.graphics.Paint: void setAlpha(int)>($i23);

        $r12 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r13 = $r12.<android.support.v17.leanback.widget.StreamingTextView: java.util.Random mRandom>;

        $z1 = virtualinvoke $r13.<java.util.Random: boolean nextBoolean()>();

        if $z1 == 0 goto label5;

        $r18 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r21 = $r18.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mTwoDot>;

        $r19 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r20 = $r19.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mTwoDot>;

        $i26 = virtualinvoke $r20.<android.graphics.Bitmap: int getHeight()>();

        $i27 = i3 - $i26;

        $f5 = (float) $i27;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r21, f2, $f5, r3);

        goto label6;

     label5:
        $r14 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r17 = $r14.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mOneDot>;

        $r15 = r0.<android.support.v17.leanback.widget.StreamingTextView$DottySpan: android.support.v17.leanback.widget.StreamingTextView this$0>;

        $r16 = $r15.<android.support.v17.leanback.widget.StreamingTextView: android.graphics.Bitmap mOneDot>;

        $i24 = virtualinvoke $r16.<android.graphics.Bitmap: int getHeight()>();

        $i25 = i3 - $i24;

        $f4 = (float) $i25;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r17, f2, $f4, r3);

     label6:
        i28 = i28 + 1;

        goto label1;

     label7:
        virtualinvoke r3.<android.graphics.Paint: void setAlpha(int)>(i11);

        return;
    }

    public int getSize(android.graphics.Paint, java.lang.CharSequence, int, int, android.graphics.Paint$FontMetricsInt)
    {
        android.support.v17.leanback.widget.StreamingTextView$DottySpan r0;
        android.graphics.Paint r1;
        java.lang.CharSequence r2;
        int i0, i1, $i2;
        android.graphics.Paint$FontMetricsInt r3;
        float $f0;

        r0 := @this: android.support.v17.leanback.widget.StreamingTextView$DottySpan;

        r1 := @parameter0: android.graphics.Paint;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.graphics.Paint$FontMetricsInt;

        $f0 = virtualinvoke r1.<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>(r2, i0, i1);

        $i2 = (int) $f0;

        return $i2;
    }

