android.support.test.espresso.base.Interrogator
<android.support.test.espresso.base.Interrogator: java.lang.String TAG>
<android.support.test.espresso.base.Interrogator: java.lang.reflect.Method messageQueueNextMethod>
<android.support.test.espresso.base.Interrogator: java.lang.reflect.Field messageQueueHeadField>
<android.support.test.espresso.base.Interrogator: java.lang.reflect.Method recycleUncheckedMethod>
<android.support.test.espresso.base.Interrogator: int LOOKAHEAD_MILLIS>
<android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>
    void <init>()
    {
        android.support.test.espresso.base.Interrogator r0;

        r0 := @this: android.support.test.espresso.base.Interrogator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object loopAndInterrogate(android.support.test.espresso.base.Interrogator$InterrogationHandler)
    {
        android.support.test.espresso.base.Interrogator$InterrogationHandler r0;
        android.os.MessageQueue r1;
        long l0, l1, l13;
        android.os.Message r2;
        java.lang.String r3, r4, r5, r6, $r18, $r19, $r20, $r21, $r33;
        int i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Throwable r7, $r36;
        java.lang.Boolean $r8, $r11, $r34, $r37;
        java.lang.ThreadLocal $r9, $r12, $r35, $r38;
        java.lang.Object $r13, r39;
        android.os.Handler $r14, $r15;
        byte $b3;
        java.lang.Class $r16;
        java.lang.Runnable $r17;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        boolean z0;

        r0 := @parameter0: android.support.test.espresso.base.Interrogator$InterrogationHandler;

        staticinvoke <android.support.test.espresso.base.Interrogator: void checkSanity()>();

        $r9 = <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>($r8);

        z0 = 1;

        staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r1 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        if z0 == 0 goto label6;

        z0 = staticinvoke <android.support.test.espresso.base.Interrogator: boolean interrogateQueueState(android.os.MessageQueue,android.support.test.espresso.base.Interrogator$QueueInterrogationHandler)>(r1, r0);

        if z0 == 0 goto label2;

        r2 = staticinvoke <android.support.test.espresso.base.Interrogator: android.os.Message getNextMessage()>();

        if null != r2 goto label4;

        interfaceinvoke r0.<android.support.test.espresso.base.Interrogator$InterrogationHandler: void quitting()>();

        r39 = interfaceinvoke r0.<android.support.test.espresso.base.Interrogator$InterrogationHandler: java.lang.Object get()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r35 = <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>;

        $r34 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r35.<java.lang.ThreadLocal: void set(java.lang.Object)>($r34);

        return r39;

     label4:
        z0 = interfaceinvoke r0.<android.support.test.espresso.base.Interrogator$InterrogationHandler: boolean beforeTaskDispatch()>();

        $r14 = virtualinvoke r2.<android.os.Message: android.os.Handler getTarget()>();

        virtualinvoke $r14.<android.os.Handler: void dispatchMessage(android.os.Message)>(r2);

        l13 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $b3 = l13 cmp l1;

        if $b3 == 0 goto label5;

        r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l13);

        $r15 = virtualinvoke r2.<android.os.Message: android.os.Handler getTarget()>();

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        r5 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke r2.<android.os.Message: java.lang.Runnable getCallback()>();

        r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        i2 = r2.<android.os.Message: int what>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i4 = virtualinvoke $r18.<java.lang.String: int length()>();

        $i5 = 77 + $i4;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $i6 = virtualinvoke $r19.<java.lang.String: int length()>();

        $i7 = $i5 + $i6;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $i8 = virtualinvoke $r20.<java.lang.String: int length()>();

        $i9 = $i7 + $i8;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        $i10 = virtualinvoke $r21.<java.lang.String: int length()>();

        $i11 = $i9 + $i10;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(int)>($i11);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread identity changed from 0x");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to 0x");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while dispatching to ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" what=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("Interrogator", $r33);

     label5:
        staticinvoke <android.support.test.espresso.base.Interrogator: void recycle(android.os.Message)>(r2);

        goto label2;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r12 = <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>($r11);

        goto label9;

     label7:
        $r36 := @caughtexception;

        r7 = $r36;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r38 = <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>;

        $r37 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r38.<java.lang.ThreadLocal: void set(java.lang.Object)>($r37);

        throw r7;

     label9:
        $r13 = interfaceinvoke r0.<android.support.test.espresso.base.Interrogator$InterrogationHandler: java.lang.Object get()>();

        return $r13;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static void recycle(android.os.Message)
    {
        android.os.Message r0;
        java.lang.reflect.Method $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Throwable $r5, $r7, $r8, $r10, $r12, r13, r14, r18, r22, r23;
        java.lang.RuntimeException r15, r16, r17;
        java.lang.reflect.InvocationTargetException r19, r20, r21;

        r0 := @parameter0: android.os.Message;

        $r1 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method recycleUncheckedMethod>;

        if $r1 == null goto label6;

     label1:
        $r3 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method recycleUncheckedMethod>;

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r2);

     label2:
        goto label7;

     label3:
        $r5 := @caughtexception;

        r13 = $r5;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r13);

        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        r18 = (java.lang.Throwable) r15;

        throw r18;

     label4:
        $r7 := @caughtexception;

        r14 = $r7;

        r19 = (java.lang.reflect.InvocationTargetException) r14;

        $r8 = virtualinvoke r19.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        if $r8 == null goto label5;

        r20 = (java.lang.reflect.InvocationTargetException) r14;

        $r10 = virtualinvoke r20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r10);

        r16 = new java.lang.RuntimeException;

        r21 = (java.lang.reflect.InvocationTargetException) r14;

        $r12 = virtualinvoke r21.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        r22 = (java.lang.Throwable) r16;

        throw r22;

     label5:
        r17 = new java.lang.RuntimeException;

        specialinvoke r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r14);

        r23 = (java.lang.Throwable) r17;

        throw r23;

     label6:
        virtualinvoke r0.<android.os.Message: void recycle()>();

     label7:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    private static android.os.Message getNextMessage()
    {
        java.lang.Throwable r0, $r6, r9;
        java.lang.reflect.Method $r1;
        android.os.MessageQueue $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        android.os.Message $r5;
        java.lang.RuntimeException r8;

     label1:
        $r1 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method messageQueueNextMethod>;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r3);

        $r5 = (android.os.Message) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r0 = $r6;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r0);

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r0);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    static java.lang.Object peekAtQueueState(android.os.MessageQueue, android.support.test.espresso.base.Interrogator$QueueInterrogationHandler)
    {
        android.os.MessageQueue r0;
        android.support.test.espresso.base.Interrogator$QueueInterrogationHandler r1;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @parameter0: android.os.MessageQueue;

        r1 := @parameter1: android.support.test.espresso.base.Interrogator$QueueInterrogationHandler;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = staticinvoke <android.support.test.espresso.base.Interrogator: boolean interrogateQueueState(android.os.MessageQueue,android.support.test.espresso.base.Interrogator$QueueInterrogationHandler)>(r0, r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z1, "It is expected that %s would stop interrogation after a single peak at the queue.", r1);

        $r4 = interfaceinvoke r1.<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: java.lang.Object get()>();

        return $r4;
    }

    private static boolean interrogateQueueState(android.os.MessageQueue, android.support.test.espresso.base.Interrogator$QueueInterrogationHandler)
    {
        android.os.MessageQueue r0, r2;
        android.support.test.espresso.base.Interrogator$QueueInterrogationHandler r1;
        android.os.Message r3;
        long l0, $l1, l5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Throwable r4, $r18, $r20, r21, r24;
        java.lang.reflect.Field $r6;
        java.lang.Object $r7;
        android.os.Handler $r8;
        byte $b2, $b6;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, r23;
        java.lang.String $r17;
        java.lang.RuntimeException r22;

        r0 := @parameter0: android.os.MessageQueue;

        r1 := @parameter1: android.support.test.espresso.base.Interrogator$QueueInterrogationHandler;

        r2 = r0;

        entermonitor r0;

     label01:
        $r6 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Field messageQueueHeadField>;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (android.os.Message) $r7;

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        r21 = $r18;

        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r21);

        r24 = (java.lang.Throwable) r22;

        throw r24;

     label04:
        if null != r3 goto label06;

        $z6 = interfaceinvoke r1.<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean queueEmpty()>();

        exitmonitor r2;

     label05:
        return $z6;

     label06:
        $r8 = virtualinvoke r3.<android.os.Message: android.os.Handler getTarget()>();

        if null != $r8 goto label09;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Interrogator", 3);

        if $z4 == 0 goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Interrogator", "barrier is up");

     label07:
        $z5 = interfaceinvoke r1.<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean barrierUp()>();

        exitmonitor r2;

     label08:
        return $z5;

     label09:
        l5 = virtualinvoke r3.<android.os.Message: long getWhen()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l0 = $l1 + 15L;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Interrogator", 3);

        if $z1 == 0 goto label12;

        $b2 = l0 cmp l5;

        if $b2 >= 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        z0 = $z7;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>(int)>(75);

        $r11 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("headWhen: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nowFuz: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due long: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Interrogator", $r17);

     label12:
        $b6 = l0 cmp l5;

        if $b6 <= 0 goto label14;

        $z3 = interfaceinvoke r1.<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean taskDueSoon()>();

        exitmonitor r2;

     label13:
        return $z3;

     label14:
        $z2 = interfaceinvoke r1.<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean taskDueLong()>();

        exitmonitor r2;

     label15:
        return $z2;

     label16:
        $r20 := @caughtexception;

        r4 = $r20;

        exitmonitor r2;

     label17:
        throw r4;

        catch java.lang.IllegalAccessException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label05 with label16;
        catch java.lang.Throwable from label06 to label08 with label16;
        catch java.lang.Throwable from label09 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private static void checkSanity()
    {
        android.os.Looper $r0;
        java.lang.ThreadLocal $r1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r0 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Calling non-looper thread!");

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1 = <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating>;

        $r3 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Already interrogating!");

        return;
    }

    static void <clinit>()
    {
        java.lang.Throwable r0, $r11, $r13, r14, r18;
        java.lang.Class[] $r2, $r9;
        java.lang.Class $r3, $r6, $r10;
        java.lang.reflect.Method $r4, $r5, r15;
        java.lang.reflect.Field $r7, $r8;
        android.support.test.espresso.base.Interrogator$1 r16;
        java.lang.RuntimeException r17;

        r16 = new android.support.test.espresso.base.Interrogator$1;

        specialinvoke r16.<android.support.test.espresso.base.Interrogator$1: void <init>()>();

        <android.support.test.espresso.base.Interrogator: java.lang.ThreadLocal interrogating> = r16;

     label1:
        $r3 = class "Landroid/os/MessageQueue;";

        $r2 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("next", $r2);

        <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method messageQueueNextMethod> = $r4;

        $r5 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method messageQueueNextMethod>;

        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r6 = class "Landroid/os/MessageQueue;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMessages");

        <android.support.test.espresso.base.Interrogator: java.lang.reflect.Field messageQueueHeadField> = $r7;

        $r8 = <android.support.test.espresso.base.Interrogator: java.lang.reflect.Field messageQueueHeadField>;

        virtualinvoke $r8.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Interrogator", "Could not initialize interrogator!", r14);

        r17 = new java.lang.RuntimeException;

        specialinvoke r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not initialize interrogator!", r14);

        r18 = (java.lang.Throwable) r17;

        throw r18;

     label4:
        r15 = null;

     label5:
        $r10 = class "Landroid/os/Message;";

        $r9 = newarray (java.lang.Class)[0];

        r15 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("recycleUnchecked", $r9);

        virtualinvoke r15.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        r0 = $r13;

     label8:
        <android.support.test.espresso.base.Interrogator: java.lang.reflect.Method recycleUncheckedMethod> = r15;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

android.support.test.espresso.base.Interrogator$1
    void <init>()
    {
        android.support.test.espresso.base.Interrogator$1 r0;

        r0 := @this: android.support.test.espresso.base.Interrogator$1;

        specialinvoke r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }

    public java.lang.Boolean initialValue()
    {
        android.support.test.espresso.base.Interrogator$1 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.Interrogator$1;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r1;
    }

    public volatile java.lang.Object initialValue()
    {
        android.support.test.espresso.base.Interrogator$1 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.Interrogator$1;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.Interrogator$1: java.lang.Boolean initialValue()>();

        return $r1;
    }

android.support.test.espresso.base.Interrogator$InterrogationHandler
<android.support.test.espresso.base.Interrogator$InterrogationHandler: boolean beforeTaskDispatch()>
<android.support.test.espresso.base.Interrogator$InterrogationHandler: void quitting()>
android.support.test.espresso.base.Interrogator$QueueInterrogationHandler
<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean queueEmpty()>
<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean taskDueSoon()>
<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean taskDueLong()>
<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: boolean barrierUp()>
<android.support.test.espresso.base.Interrogator$QueueInterrogationHandler: java.lang.Object get()>
