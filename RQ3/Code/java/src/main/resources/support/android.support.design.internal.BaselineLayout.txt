android.support.design.internal.BaselineLayout
<android.support.design.internal.BaselineLayout: int baseline>
    public void <init>(android.content.Context)
    {
        android.support.design.internal.BaselineLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.design.internal.BaselineLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        r0.<android.support.design.internal.BaselineLayout: int baseline> = -1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.internal.BaselineLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.design.internal.BaselineLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        r0.<android.support.design.internal.BaselineLayout: int baseline> = -1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.internal.BaselineLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.design.internal.BaselineLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.design.internal.BaselineLayout: int baseline> = -1;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.design.internal.BaselineLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, i23, i24, i25;
        android.view.View r1;

        r0 := @this: android.support.design.internal.BaselineLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getChildCount()>();

        i17 = 0;

        i18 = 0;

        i19 = -1;

        i20 = -1;

        i21 = 0;

        i22 = 0;

     label1:
        if i22 >= i2 goto label5;

        r1 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: android.view.View getChildAt(int)>(i22);

        $i11 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i11 != 8 goto label2;

        goto label4;

     label2:
        virtualinvoke r0.<android.support.design.internal.BaselineLayout: void measureChild(android.view.View,int,int)>(r1, i0, i1);

        i3 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        if i3 == -1 goto label3;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(i19, i3);

        $i15 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i16 = $i15 - i3;

        i20 = staticinvoke <java.lang.Math: int max(int,int)>(i20, $i16);

     label3:
        $i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(i17, $i12);

        $i13 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(i18, $i13);

        $i14 = virtualinvoke r1.<android.view.View: int getMeasuredState()>();

        i21 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(i21, $i14);

     label4:
        i22 = i22 + 1;

        goto label1;

     label5:
        if i19 == -1 goto label6;

        $i9 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getPaddingBottom()>();

        i23 = staticinvoke <java.lang.Math: int max(int,int)>(i20, $i9);

        $i10 = i19 + i23;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(i18, $i10);

        r0.<android.support.design.internal.BaselineLayout: int baseline> = i19;

     label6:
        $i4 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getSuggestedMinimumHeight()>();

        i24 = staticinvoke <java.lang.Math: int max(int,int)>(i18, $i4);

        $i5 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getSuggestedMinimumWidth()>();

        i25 = staticinvoke <java.lang.Math: int max(int,int)>(i17, $i5);

        $i6 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i25, i0, i21);

        $i7 = i21 << 16;

        $i8 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i24, i1, $i7);

        virtualinvoke r0.<android.support.design.internal.BaselineLayout: void setMeasuredDimension(int,int)>($i6, $i8);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.internal.BaselineLayout r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24, $i25;
        android.view.View r1;

        r0 := @this: android.support.design.internal.BaselineLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getChildCount()>();

        i5 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getPaddingLeft()>();

        $i12 = i2 - i0;

        $i13 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getPaddingRight()>();

        i6 = $i12 - $i13;

        i7 = i6 - i5;

        i8 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: int getPaddingTop()>();

        i22 = 0;

     label1:
        if i22 >= i4 goto label6;

        r1 = virtualinvoke r0.<android.support.design.internal.BaselineLayout: android.view.View getChildAt(int)>(i22);

        $i14 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i14 != 8 goto label2;

        goto label5;

     label2:
        i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i10 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i15 = i7 - i9;

        $i16 = $i15 / 2;

        i11 = i5 + $i16;

        $i17 = r0.<android.support.design.internal.BaselineLayout: int baseline>;

        if $i17 == -1 goto label3;

        $i18 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        if $i18 == -1 goto label3;

        $i19 = r0.<android.support.design.internal.BaselineLayout: int baseline>;

        $i20 = i8 + $i19;

        $i21 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        i23 = $i20 - $i21;

        goto label4;

     label3:
        i23 = i8;

     label4:
        $i24 = i11 + i9;

        $i25 = i23 + i10;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i11, i23, $i24, $i25);

     label5:
        i22 = i22 + 1;

        goto label1;

     label6:
        return;
    }

    public int getBaseline()
    {
        android.support.design.internal.BaselineLayout r0;
        int $i0;

        r0 := @this: android.support.design.internal.BaselineLayout;

        $i0 = r0.<android.support.design.internal.BaselineLayout: int baseline>;

        return $i0;
    }

