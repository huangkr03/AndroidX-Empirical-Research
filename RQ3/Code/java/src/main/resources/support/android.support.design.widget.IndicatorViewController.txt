android.support.design.widget.IndicatorViewController
<android.support.design.widget.IndicatorViewController: int CAPTION_TRANSLATE_Y_ANIMATION_DURATION>
<android.support.design.widget.IndicatorViewController: int CAPTION_OPACITY_FADE_ANIMATION_DURATION>
<android.support.design.widget.IndicatorViewController: int ERROR_INDEX>
<android.support.design.widget.IndicatorViewController: int HELPER_INDEX>
<android.support.design.widget.IndicatorViewController: int COUNTER_INDEX>
<android.support.design.widget.IndicatorViewController: int CAPTION_STATE_NONE>
<android.support.design.widget.IndicatorViewController: int CAPTION_STATE_ERROR>
<android.support.design.widget.IndicatorViewController: int CAPTION_STATE_HELPER_TEXT>
<android.support.design.widget.IndicatorViewController: android.content.Context context>
<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>
<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>
<android.support.design.widget.IndicatorViewController: int indicatorsAdded>
<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>
<android.support.design.widget.IndicatorViewController: int captionViewsAdded>
<android.support.design.widget.IndicatorViewController: android.animation.Animator captionAnimator>
<android.support.design.widget.IndicatorViewController: float captionTranslationYPx>
<android.support.design.widget.IndicatorViewController: int captionDisplayed>
<android.support.design.widget.IndicatorViewController: int captionToShow>
<android.support.design.widget.IndicatorViewController: java.lang.CharSequence errorText>
<android.support.design.widget.IndicatorViewController: boolean errorEnabled>
<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>
<android.support.design.widget.IndicatorViewController: int errorTextAppearance>
<android.support.design.widget.IndicatorViewController: java.lang.CharSequence helperText>
<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled>
<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>
<android.support.design.widget.IndicatorViewController: int helperTextTextAppearance>
<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>
    public void <init>(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.support.design.widget.TextInputLayout r1;
        android.content.Context $r2, $r3;
        android.content.res.Resources $r4;
        int $i0, $i1;
        float $f0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.support.design.widget.TextInputLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        r0.<android.support.design.widget.IndicatorViewController: android.content.Context context> = $r2;

        r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView> = r1;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <android.support.design.widget.R$dimen: int design_textinput_caption_translate_y>;

        $i1 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i1;

        r0.<android.support.design.widget.IndicatorViewController: float captionTranslationYPx> = $f0;

        return;
    }

    void showHelper(java.lang.CharSequence)
    {
        android.support.design.widget.IndicatorViewController r0;
        java.lang.CharSequence r1;
        android.widget.TextView $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence helperText> = r1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        if $i0 == 2 goto label1;

        r0.<android.support.design.widget.IndicatorViewController: int captionToShow> = 2;

     label1:
        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $i2 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r3, r1);

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i1, $i2, $z0);

        return;
    }

    void hideHelperText()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0, $i1, $i2;
        android.widget.TextView $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        if $i0 != 2 goto label1;

        r0.<android.support.design.widget.IndicatorViewController: int captionToShow> = 0;

     label1:
        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $i2 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r1, null);

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i1, $i2, $z0);

        return;
    }

    void showError(java.lang.CharSequence)
    {
        android.support.design.widget.IndicatorViewController r0;
        java.lang.CharSequence r1;
        android.widget.TextView $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence errorText> = r1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        if $i0 == 1 goto label1;

        r0.<android.support.design.widget.IndicatorViewController: int captionToShow> = 1;

     label1:
        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $i2 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r3, r1);

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i1, $i2, $z0);

        return;
    }

    void hideError()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r1;
        android.widget.TextView $r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence errorText> = null;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        if $i0 != 1 goto label2;

        $z0 = r0.<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence helperText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label1;

        r0.<android.support.design.widget.IndicatorViewController: int captionToShow> = 2;

        goto label2;

     label1:
        r0.<android.support.design.widget.IndicatorViewController: int captionToShow> = 0;

     label2:
        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $i2 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $z2 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r2, null);

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i1, $i2, $z2);

        return;
    }

    private boolean shouldAnimateCaptionView(android.widget.TextView, java.lang.CharSequence)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        java.lang.CharSequence r2, $r5;
        android.support.design.widget.TextInputLayout $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        android.view.View r6;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        r6 = (android.view.View) $r3;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r6);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $z1 = virtualinvoke $r4.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        if $i1 != $i0 goto label1;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, r2);

        if $z2 != 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private void updateCaptionViewsVisibility(int, int, boolean)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0, i1;
        boolean z0, $z1, $z2;
        android.animation.AnimatorSet r1, r13;
        java.util.ArrayList r2, r14;
        android.widget.TextView r3, r4, $r10, $r11;
        android.support.design.widget.TextInputLayout $r5, $r6, $r7;
        android.support.design.widget.IndicatorViewController$1 r15;
        android.animation.Animator$AnimatorListener r16;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        r13 = new android.animation.AnimatorSet;

        specialinvoke r13.<android.animation.AnimatorSet: void <init>()>();

        r1 = r13;

        r0.<android.support.design.widget.IndicatorViewController: android.animation.Animator captionAnimator> = r1;

        r14 = new java.util.ArrayList;

        specialinvoke r14.<java.util.ArrayList: void <init>()>();

        r2 = r14;

        $z1 = r0.<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled>;

        $r10 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)>(r2, $z1, $r10, 2, i0, i1);

        $z2 = r0.<android.support.design.widget.IndicatorViewController: boolean errorEnabled>;

        $r11 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)>(r2, $z2, $r11, 1, i0, i1);

        staticinvoke <android.support.design.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>(r1, r2);

        r3 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>(i0);

        r4 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>(i1);

        r15 = new android.support.design.widget.IndicatorViewController$1;

        specialinvoke r15.<android.support.design.widget.IndicatorViewController$1: void <init>(android.support.design.widget.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView)>(r0, i1, r3, i0, r4);

        r16 = (android.animation.Animator$AnimatorListener) r15;

        virtualinvoke r1.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r16);

        virtualinvoke r1.<android.animation.AnimatorSet: void start()>();

        goto label2;

     label1:
        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void setCaptionViewVisibilities(int,int)>(i0, i1);

     label2:
        $r5 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r5.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r6.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(z0);

        $r7 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r7.<android.support.design.widget.TextInputLayout: void updateTextInputBoxState()>();

        return;
    }

    private void setCaptionViewVisibilities(int, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0, i1;
        android.widget.TextView r1, r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        return;

     label1:
        if i1 == 0 goto label2;

        r1 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>(i1);

        if r1 == null goto label2;

        virtualinvoke r1.<android.widget.TextView: void setVisibility(int)>(0);

        virtualinvoke r1.<android.widget.TextView: void setAlpha(float)>(1.0F);

     label2:
        if i0 == 0 goto label3;

        r2 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>(i0);

        if r2 == null goto label3;

        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(4);

        if i0 != 1 goto label3;

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(null);

     label3:
        r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed> = i1;

        return;
    }

    private void createCaptionAnimators(java.util.List, boolean, android.widget.TextView, int, int, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        java.util.List r1;
        boolean z0, $z3;
        android.widget.TextView r2;
        int i0, i1, i2;
        android.animation.ObjectAnimator $r3, $r4;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.widget.TextView;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        if r2 == null goto label1;

        if z0 != 0 goto label2;

     label1:
        return;

     label2:
        if i0 == i2 goto label3;

        if i0 != i1 goto label6;

     label3:
        if i2 != i0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        $r3 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)>(r2, $z3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        if i2 != i0 goto label6;

        $r4 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label6:
        return;
    }

    private android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView, boolean)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        boolean z0;
        float f0, $f1;
        android.animation.ObjectAnimator r2;
        float[] $r3;
        android.util.Property $r4;
        android.animation.TimeInterpolator $r6;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $f1 = 1.0F;

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        f0 = $f1;

        $r4 = <android.view.View: android.util.Property ALPHA>;

        $r3 = newarray (float)[1];

        $r3[0] = f0;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r4, $r3);

        virtualinvoke r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(167L);

        $r6 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        return r2;
    }

    private android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        android.animation.ObjectAnimator r2;
        float[] $r3;
        float $f0, $f1;
        android.util.Property $r4;
        android.animation.TimeInterpolator $r6;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        $r4 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r3 = newarray (float)[2];

        $f0 = r0.<android.support.design.widget.IndicatorViewController: float captionTranslationYPx>;

        $f1 = neg $f0;

        $r3[0] = $f1;

        $r3[1] = 0.0F;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r4, $r3);

        virtualinvoke r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(217L);

        $r6 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        return r2;
    }

    void cancelCaptionAnimator()
    {
        android.support.design.widget.IndicatorViewController r0;
        android.animation.Animator $r1, $r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.animation.Animator captionAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.animation.Animator captionAnimator>;

        virtualinvoke $r2.<android.animation.Animator: void cancel()>();

     label1:
        return;
    }

    boolean isCaptionView(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private android.widget.TextView getCaptionViewFromDisplayState(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        android.widget.TextView $r1, $r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        return $r2;

     label2:
        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        return $r1;

     label3:
        return null;
    }

    void adjustIndicatorPadding()
    {
        android.support.design.widget.IndicatorViewController r0;
        boolean $z0;
        android.support.design.widget.TextInputLayout $r1, $r4, $r6;
        android.widget.LinearLayout $r2;
        android.widget.EditText $r3, $r5, $r7;
        int $i0, $i1, $i2;
        android.view.View r8;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean canAdjustIndicatorPadding()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r3 = virtualinvoke $r1.<android.support.design.widget.TextInputLayout: android.widget.EditText getEditText()>();

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r3);

        $r4 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r5 = virtualinvoke $r4.<android.support.design.widget.TextInputLayout: android.widget.EditText getEditText()>();

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r5);

        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r7 = virtualinvoke $r6.<android.support.design.widget.TextInputLayout: android.widget.EditText getEditText()>();

        $i2 = virtualinvoke $r7.<android.widget.EditText: int getPaddingBottom()>();

        r8 = (android.view.View) $r2;

        staticinvoke <android.support.v4.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>(r8, $i0, 0, $i1, $i2);

     label1:
        return;
    }

    private boolean canAdjustIndicatorPadding()
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.LinearLayout $r1;
        android.support.design.widget.TextInputLayout $r2;
        android.widget.EditText $r3;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.TextInputLayout: android.widget.EditText getEditText()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void addIndicator(android.widget.TextView, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        int i0, $i1, $i2, $i3, $i4;
        android.support.v4.widget.Space r2, r30;
        android.widget.LinearLayout$LayoutParams r3, r31;
        android.widget.LinearLayout $r4, $r5, $r6, $r13, $r14, $r19, $r24, r27;
        android.widget.FrameLayout $r7, $r8, $r10, $r20, r28;
        android.content.Context $r12, $r17, $r22;
        android.support.design.widget.TextInputLayout $r15, $r25;
        android.widget.EditText $r26;
        boolean $z0;
        android.widget.FrameLayout$LayoutParams r29;
        android.view.View r32, r33;
        android.view.ViewGroup$LayoutParams r34, r35;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        $r4 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r4 != null goto label1;

        $r10 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        if $r10 != null goto label1;

        r27 = new android.widget.LinearLayout;

        $r12 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        specialinvoke r27.<android.widget.LinearLayout: void <init>(android.content.Context)>($r12);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea> = r27;

        $r13 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r13.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r15 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r14 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        r32 = (android.view.View) $r14;

        virtualinvoke $r15.<android.support.design.widget.TextInputLayout: void addView(android.view.View,int,int)>(r32, -1, -2);

        r28 = new android.widget.FrameLayout;

        $r17 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        specialinvoke r28.<android.widget.FrameLayout: void <init>(android.content.Context)>($r17);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea> = r28;

        $r19 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $r20 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        r29 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r29.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        r33 = (android.view.View) $r20;

        r34 = (android.view.ViewGroup$LayoutParams) r29;

        virtualinvoke $r19.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r33, -1, r34);

        r30 = new android.support.v4.widget.Space;

        $r22 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        specialinvoke r30.<android.support.v4.widget.Space: void <init>(android.content.Context)>($r22);

        r2 = r30;

        r31 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke r31.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(0, 0, 1.0F);

        r3 = r31;

        $r24 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        r35 = (android.view.ViewGroup$LayoutParams) r3;

        virtualinvoke $r24.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r35);

        $r25 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r26 = virtualinvoke $r25.<android.support.design.widget.TextInputLayout: android.widget.EditText getEditText()>();

        if $r26 == null goto label1;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void adjustIndicatorPadding()>();

     label1:
        $z0 = virtualinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionView(int)>(i0);

        if $z0 == 0 goto label2;

        $r7 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r7.<android.widget.FrameLayout: void setVisibility(int)>(0);

        $r8 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r8.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

        $i3 = r0.<android.support.design.widget.IndicatorViewController: int captionViewsAdded>;

        $i4 = $i3 + 1;

        r0.<android.support.design.widget.IndicatorViewController: int captionViewsAdded> = $i4;

        goto label3;

     label2:
        $r5 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r5.<android.widget.LinearLayout: void addView(android.view.View,int)>(r1, i0);

     label3:
        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $i1 = r0.<android.support.design.widget.IndicatorViewController: int indicatorsAdded>;

        $i2 = $i1 + 1;

        r0.<android.support.design.widget.IndicatorViewController: int indicatorsAdded> = $i2;

        return;
    }

    void removeIndicator(android.widget.TextView, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.LinearLayout $r2, $r3, $r8;
        boolean $z0;
        android.widget.FrameLayout $r4, $r5, $r6;
        android.view.ViewGroup r9, r10;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionView(int)>(i0);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        if $r4 == null goto label2;

        $i1 = r0.<android.support.design.widget.IndicatorViewController: int captionViewsAdded>;

        $i2 = $i1 - 1;

        r0.<android.support.design.widget.IndicatorViewController: int captionViewsAdded> = $i2;

        $r5 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        $i3 = r0.<android.support.design.widget.IndicatorViewController: int captionViewsAdded>;

        r9 = (android.view.ViewGroup) $r5;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)>(r9, $i3);

        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r6.<android.widget.FrameLayout: void removeView(android.view.View)>(r1);

        goto label3;

     label2:
        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r3.<android.widget.LinearLayout: void removeView(android.view.View)>(r1);

     label3:
        $i4 = r0.<android.support.design.widget.IndicatorViewController: int indicatorsAdded>;

        $i5 = $i4 - 1;

        r0.<android.support.design.widget.IndicatorViewController: int indicatorsAdded> = $i5;

        $r8 = r0.<android.support.design.widget.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $i6 = r0.<android.support.design.widget.IndicatorViewController: int indicatorsAdded>;

        r10 = (android.view.ViewGroup) $r8;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)>(r10, $i6);

        return;
    }

    private void setViewGroupGoneIfEmpty(android.view.ViewGroup, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.view.ViewGroup r1;
        int i0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(8);

     label1:
        return;
    }

    void setErrorEnabled(boolean)
    {
        android.support.design.widget.IndicatorViewController r0;
        boolean z0, $z1;
        android.widget.TextView $r1, $r6, $r8, $r9, $r10, $r12;
        android.support.design.widget.TextInputLayout $r2, $r3;
        android.support.v7.widget.AppCompatTextView $r4;
        android.content.Context $r5;
        int $i0, $i1;
        android.graphics.Typeface $r7, $r11;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.IndicatorViewController: boolean errorEnabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        if z0 == 0 goto label3;

        $r4 = new android.support.v7.widget.AppCompatTextView;

        $r5 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        specialinvoke $r4.<android.support.v7.widget.AppCompatTextView: void <init>(android.content.Context)>($r5);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView> = $r4;

        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $i0 = <android.support.design.widget.R$id: int textinput_error>;

        virtualinvoke $r6.<android.widget.TextView: void setId(int)>($i0);

        $r7 = r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>;

        if $r7 == null goto label2;

        $r12 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $r11 = r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>;

        virtualinvoke $r12.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

     label2:
        $i1 = r0.<android.support.design.widget.IndicatorViewController: int errorTextAppearance>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void setErrorTextAppearance(int)>($i1);

        $r8 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r8.<android.widget.TextView: void setVisibility(int)>(4);

        $r9 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r9, 1);

        $r10 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r10, 0);

        goto label4;

     label3:
        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void hideError()>();

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r1, 0);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView> = null;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r2.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r3.<android.support.design.widget.TextInputLayout: void updateTextInputBoxState()>();

     label4:
        r0.<android.support.design.widget.IndicatorViewController: boolean errorEnabled> = z0;

        return;
    }

    boolean isErrorEnabled()
    {
        android.support.design.widget.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $z0 = r0.<android.support.design.widget.IndicatorViewController: boolean errorEnabled>;

        return $z0;
    }

    boolean isHelperTextEnabled()
    {
        android.support.design.widget.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $z0 = r0.<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled>;

        return $z0;
    }

    void setHelperTextEnabled(boolean)
    {
        android.support.design.widget.IndicatorViewController r0;
        boolean z0, $z1;
        android.widget.TextView $r1, $r6, $r8, $r9, $r10, $r12;
        android.support.design.widget.TextInputLayout $r2, $r3;
        android.support.v7.widget.AppCompatTextView $r4;
        android.content.Context $r5;
        int $i0, $i1;
        android.graphics.Typeface $r7, $r11;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void cancelCaptionAnimator()>();

        if z0 == 0 goto label3;

        $r4 = new android.support.v7.widget.AppCompatTextView;

        $r5 = r0.<android.support.design.widget.IndicatorViewController: android.content.Context context>;

        specialinvoke $r4.<android.support.v7.widget.AppCompatTextView: void <init>(android.content.Context)>($r5);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView> = $r4;

        $r6 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        $i0 = <android.support.design.widget.R$id: int textinput_helper_text>;

        virtualinvoke $r6.<android.widget.TextView: void setId(int)>($i0);

        $r7 = r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>;

        if $r7 == null goto label2;

        $r12 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        $r11 = r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>;

        virtualinvoke $r12.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

     label2:
        $r8 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r8.<android.widget.TextView: void setVisibility(int)>(4);

        $r9 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r9, 1);

        $i1 = r0.<android.support.design.widget.IndicatorViewController: int helperTextTextAppearance>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void setHelperTextAppearance(int)>($i1);

        $r10 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r10, 1);

        goto label4;

     label3:
        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void hideHelperText()>();

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke r0.<android.support.design.widget.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r1, 1);

        r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView> = null;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r2.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        virtualinvoke $r3.<android.support.design.widget.TextInputLayout: void updateTextInputBoxState()>();

     label4:
        r0.<android.support.design.widget.IndicatorViewController: boolean helperTextEnabled> = z0;

        return;
    }

    boolean errorIsDisplayed()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionStateError(int)>($i0);

        return $z0;
    }

    boolean errorShouldBeShown()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionStateError(int)>($i0);

        return $z0;
    }

    private boolean isCaptionStateError(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence errorText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean helperTextIsDisplayed()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionStateHelperText(int)>($i0);

        return $z0;
    }

    boolean helperTextShouldBeShown()
    {
        android.support.design.widget.IndicatorViewController r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $i0 = r0.<android.support.design.widget.IndicatorViewController: int captionToShow>;

        $z0 = specialinvoke r0.<android.support.design.widget.IndicatorViewController: boolean isCaptionStateHelperText(int)>($i0);

        return $z0;
    }

    private boolean isCaptionStateHelperText(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence helperText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    java.lang.CharSequence getErrorText()
    {
        android.support.design.widget.IndicatorViewController r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence errorText>;

        return $r1;
    }

    java.lang.CharSequence getHelperText()
    {
        android.support.design.widget.IndicatorViewController r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence helperText>;

        return $r1;
    }

    void setTypefaces(android.graphics.Typeface)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.graphics.Typeface r1, $r2;
        android.widget.TextView $r3, $r4;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface>;

        if r1 == $r2 goto label1;

        r0.<android.support.design.widget.IndicatorViewController: android.graphics.Typeface typeface> = r1;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)>($r3, r1);

        $r4 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        specialinvoke r0.<android.support.design.widget.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)>($r4, r1);

     label1:
        return;
    }

    private void setTextViewTypeface(android.widget.TextView, android.graphics.Typeface)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView r1;
        android.graphics.Typeface r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.graphics.Typeface;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r2);

     label1:
        return;
    }

    int getErrorViewCurrentTextColor()
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView $r1, $r2;
        int $i0;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $i0 = virtualinvoke $r2.<android.widget.TextView: int getCurrentTextColor()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    android.content.res.ColorStateList getErrorViewTextColors()
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView $r1, $r2;
        android.content.res.ColorStateList $r3;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    void setErrorTextAppearance(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        android.widget.TextView $r1, $r2;
        android.support.design.widget.TextInputLayout $r3;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        r0.<android.support.design.widget.IndicatorViewController: int errorTextAppearance> = i0;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.design.widget.IndicatorViewController: android.support.design.widget.TextInputLayout textInputView>;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r3.<android.support.design.widget.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>($r2, i0);

     label1:
        return;
    }

    void setHelperTextAppearance(int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;
        android.widget.TextView $r1, $r2;

        r0 := @this: android.support.design.widget.IndicatorViewController;

        i0 := @parameter0: int;

        r0.<android.support.design.widget.IndicatorViewController: int helperTextTextAppearance> = i0;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView helperTextView>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r2, i0);

     label1:
        return;
    }

    static int access$002(android.support.design.widget.IndicatorViewController, int)
    {
        android.support.design.widget.IndicatorViewController r0;
        int i0;

        r0 := @parameter0: android.support.design.widget.IndicatorViewController;

        i0 := @parameter1: int;

        r0.<android.support.design.widget.IndicatorViewController: int captionDisplayed> = i0;

        return i0;
    }

    static android.animation.Animator access$102(android.support.design.widget.IndicatorViewController, android.animation.Animator)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.animation.Animator r1;

        r0 := @parameter0: android.support.design.widget.IndicatorViewController;

        r1 := @parameter1: android.animation.Animator;

        r0.<android.support.design.widget.IndicatorViewController: android.animation.Animator captionAnimator> = r1;

        return r1;
    }

    static android.widget.TextView access$200(android.support.design.widget.IndicatorViewController)
    {
        android.support.design.widget.IndicatorViewController r0;
        android.widget.TextView $r1;

        r0 := @parameter0: android.support.design.widget.IndicatorViewController;

        $r1 = r0.<android.support.design.widget.IndicatorViewController: android.widget.TextView errorView>;

        return $r1;
    }

android.support.design.widget.IndicatorViewController$1
<android.support.design.widget.IndicatorViewController$1: int val$captionToShow>
<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToHide>
<android.support.design.widget.IndicatorViewController$1: int val$captionToHide>
<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToShow>
<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0>
    void <init>(android.support.design.widget.IndicatorViewController, int, android.widget.TextView, int, android.widget.TextView)
    {
        android.support.design.widget.IndicatorViewController$1 r0;
        android.support.design.widget.IndicatorViewController r1;
        int i0, i1;
        android.widget.TextView r2, r3;

        r0 := @this: android.support.design.widget.IndicatorViewController$1;

        r1 := @parameter0: android.support.design.widget.IndicatorViewController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.widget.TextView;

        i1 := @parameter3: int;

        r3 := @parameter4: android.widget.TextView;

        r0.<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0> = r1;

        r0.<android.support.design.widget.IndicatorViewController$1: int val$captionToShow> = i0;

        r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToHide> = r2;

        r0.<android.support.design.widget.IndicatorViewController$1: int val$captionToHide> = i1;

        r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToShow> = r3;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.design.widget.IndicatorViewController$1 r0;
        android.animation.Animator r1;
        int $i0, $i2;
        android.support.design.widget.IndicatorViewController $r2, $r3, $r7, $r9;
        android.widget.TextView $r5, $r6, $r8, $r10;

        r0 := @this: android.support.design.widget.IndicatorViewController$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0>;

        $i0 = r0.<android.support.design.widget.IndicatorViewController$1: int val$captionToShow>;

        staticinvoke <android.support.design.widget.IndicatorViewController: int access$002(android.support.design.widget.IndicatorViewController,int)>($r2, $i0);

        $r3 = r0.<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0>;

        staticinvoke <android.support.design.widget.IndicatorViewController: android.animation.Animator access$102(android.support.design.widget.IndicatorViewController,android.animation.Animator)>($r3, null);

        $r5 = r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToHide>;

        if $r5 == null goto label1;

        $r6 = r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToHide>;

        virtualinvoke $r6.<android.widget.TextView: void setVisibility(int)>(4);

        $i2 = r0.<android.support.design.widget.IndicatorViewController$1: int val$captionToHide>;

        if $i2 != 1 goto label1;

        $r7 = r0.<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0>;

        $r8 = staticinvoke <android.support.design.widget.IndicatorViewController: android.widget.TextView access$200(android.support.design.widget.IndicatorViewController)>($r7);

        if $r8 == null goto label1;

        $r9 = r0.<android.support.design.widget.IndicatorViewController$1: android.support.design.widget.IndicatorViewController this$0>;

        $r10 = staticinvoke <android.support.design.widget.IndicatorViewController: android.widget.TextView access$200(android.support.design.widget.IndicatorViewController)>($r9);

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>(null);

     label1:
        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.design.widget.IndicatorViewController$1 r0;
        android.animation.Animator r1;
        android.widget.TextView $r2, $r3;

        r0 := @this: android.support.design.widget.IndicatorViewController$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToShow>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.widget.IndicatorViewController$1: android.widget.TextView val$captionViewToShow>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(0);

     label1:
        return;
    }

