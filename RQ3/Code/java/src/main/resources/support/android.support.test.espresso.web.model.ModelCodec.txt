android.support.test.espresso.web.model.ModelCodec
<android.support.test.espresso.web.model.ModelCodec: java.lang.String TAG>
<android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet VALUEABLE_CLASSES>
<android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet TOP_LEVEL_CLASSES>
<android.support.test.espresso.web.model.ModelCodec: java.util.concurrent.CopyOnWriteArrayList DEJSONIZERS>
    private void <init>()
    {
        android.support.test.espresso.web.model.ModelCodec r0;

        r0 := @this: android.support.test.espresso.web.model.ModelCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.web.model.Evaluation decodeEvaluation(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.Object r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        android.support.test.espresso.web.model.Evaluation $r5;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decode(java.lang.String)>(r0);

        $z0 = r1 instanceof android.support.test.espresso.web.model.Evaluation;

        if $z0 == 0 goto label1;

        $r5 = (android.support.test.espresso.web.model.Evaluation) r1;

        return $r5;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Document: \"%s\" did not decode to an evaluation. Instead: \"%s\"", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public static java.lang.String encode(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r7, $r10, $r11, $r12, $r13, $r16, $r20, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r4;
        java.lang.Class $r5;
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet $r6;
        android.support.test.espresso.web.model.JSONAble $r9;
        java.lang.Throwable $r14, r25, r31;
        int $i0, $i1;
        java.lang.StringBuilder $r18, $r19, r29;
        org.json.JSONStringer r22, $r23, r27;
        org.json.JSONObject r26;
        java.lang.IllegalArgumentException r28;
        java.lang.RuntimeException r30;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

     label01:
        $z0 = r0 instanceof org.json.JSONObject;

        if $z0 == 0 goto label03;

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label02:
        return $r13;

     label03:
        $z1 = r0 instanceof org.json.JSONArray;

        if $z1 == 0 goto label05;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label04:
        return $r12;

     label05:
        $z2 = r0 instanceof android.support.test.espresso.web.model.JSONAble;

        if $z2 == 0 goto label07;

        r26 = new org.json.JSONObject;

        $r9 = (android.support.test.espresso.web.model.JSONAble) r0;

        $r10 = interfaceinvoke $r9.<android.support.test.espresso.web.model.JSONAble: java.lang.String toJSONString()>();

        specialinvoke r26.<org.json.JSONObject: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke r26.<org.json.JSONObject: java.lang.String toString()>();

     label06:
        return $r11;

     label07:
        $z3 = r0 instanceof java.lang.Iterable;

        if $z3 != 0 goto label08;

        $z4 = r0 instanceof java.util.Map;

        if $z4 != 0 goto label08;

        $z5 = r0 instanceof java.lang.Object[];

        if $z5 == 0 goto label10;

     label08:
        r27 = new org.json.JSONStringer;

        specialinvoke r27.<org.json.JSONStringer: void <init>()>();

        r22 = r27;

        $r23 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: org.json.JSONStringer encodeHelper(java.lang.Object,org.json.JSONStringer)>(r0, r22);

        $r24 = virtualinvoke $r23.<org.json.JSONStringer: java.lang.String toString()>();

     label09:
        return $r24;

     label10:
        r28 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4[0] = $r5;

        $r6 = <android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet TOP_LEVEL_CLASSES>;

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: not a valid top level class. Want one of: %s", $r4);

        specialinvoke r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r28;

     label11:
        $r14 := @caughtexception;

        r25 = $r14;

        r30 = new java.lang.RuntimeException;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i1 = 15 + $i0;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r18 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encode failed: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r25);

        r31 = (java.lang.Throwable) r30;

        throw r31;

        catch org.json.JSONException from label01 to label02 with label11;
        catch org.json.JSONException from label03 to label04 with label11;
        catch org.json.JSONException from label05 to label06 with label11;
        catch org.json.JSONException from label07 to label09 with label11;
        catch org.json.JSONException from label10 to label11 with label11;
    }

    public static void removeDeJSONFactory(android.support.test.espresso.web.model.JSONAble$DeJSONFactory)
    {
        android.support.test.espresso.web.model.JSONAble$DeJSONFactory r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: android.support.test.espresso.web.model.JSONAble$DeJSONFactory;

        $r1 = <android.support.test.espresso.web.model.ModelCodec: java.util.concurrent.CopyOnWriteArrayList DEJSONIZERS>;

        virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public static void addDeJSONFactory(android.support.test.espresso.web.model.JSONAble$DeJSONFactory)
    {
        android.support.test.espresso.web.model.JSONAble$DeJSONFactory r0, $r3;
        java.util.concurrent.CopyOnWriteArrayList $r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.support.test.espresso.web.model.JSONAble$DeJSONFactory;

        $r1 = <android.support.test.espresso.web.model.ModelCodec: java.util.concurrent.CopyOnWriteArrayList DEJSONIZERS>;

        $r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (android.support.test.espresso.web.model.JSONAble$DeJSONFactory) $r2;

        virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    static java.lang.Object decode(java.lang.String)
    {
        java.lang.String r0, $r2, $r8, $r12;
        boolean $z0, $z1;
        int $i0;
        java.lang.Object $r3, $r4;
        java.lang.Throwable $r5, $r9, r13, r14, r17, r18;
        java.lang.Object[] $r7, $r11;
        java.lang.RuntimeException r15, r16;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Empty docs not supported.");

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 13 goto label5;

        $r4 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeViaJSONObject(java.lang.String)>(r0);

     label4:
        return $r4;

     label5:
        $r3 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeViaJSONReader(java.lang.String)>(r0);

     label6:
        return $r3;

     label7:
        $r5 := @caughtexception;

        r13 = $r5;

        r15 = new java.lang.RuntimeException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not parse: %s", $r7);

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r13);

        r17 = (java.lang.Throwable) r15;

        throw r17;

     label8:
        $r9 := @caughtexception;

        r14 = $r9;

        r16 = new java.lang.RuntimeException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r0;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not parse: %s", $r11);

        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r14);

        r18 = (java.lang.Throwable) r16;

        throw r18;

        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }

    private static java.lang.Object decodeViaJSONObject(java.lang.String) throws org.json.JSONException
    {
        java.lang.String r0, $r5, $r6, $r11;
        org.json.JSONTokener r1, $r3;
        java.lang.Object r2, $r8;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        int $i0;
        org.json.JSONObject $r7;
        org.json.JSONArray $r9;
        java.util.List $r10;

        r0 := @parameter0: java.lang.String;

        $r3 = new org.json.JSONTokener;

        specialinvoke $r3.<org.json.JSONTokener: void <init>(java.lang.String)>(r0);

        r1 = $r3;

        r2 = virtualinvoke r1.<org.json.JSONTokener: java.lang.Object nextValue()>();

        $z0 = r2 instanceof org.json.JSONArray;

        if $z0 == 0 goto label1;

        $r9 = (org.json.JSONArray) r2;

        $r10 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(org.json.JSONArray)>($r9);

        return $r10;

     label1:
        $z1 = r2 instanceof org.json.JSONObject;

        if $z1 == 0 goto label2;

        $r7 = (org.json.JSONObject) r2;

        $r8 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(org.json.JSONObject)>($r7);

        return $r8;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = "No top level object or array: ";

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r11 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>($r6);

        goto label4;

     label3:
        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>("No top level object or array: ");

     label4:
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r4;
    }

    private static java.util.List decodeArray(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0, $r3;
        java.util.ArrayList r1;
        java.lang.Object r2, $r6;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        java.util.List $r4, r7, r8, r9, r10, r11;
        org.json.JSONObject $r5;

        r0 := @parameter0: org.json.JSONArray;

        r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i1 >= $i0 goto label6;

        $z0 = virtualinvoke r0.<org.json.JSONArray: boolean isNull(int)>(i1);

        if $z0 == 0 goto label2;

        r7 = (java.util.List) r1;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label5;

     label2:
        r2 = virtualinvoke r0.<org.json.JSONArray: java.lang.Object get(int)>(i1);

        $z1 = r2 instanceof org.json.JSONObject;

        if $z1 == 0 goto label3;

        $r5 = (org.json.JSONObject) r2;

        $r6 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(org.json.JSONObject)>($r5);

        r8 = (java.util.List) r1;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label5;

     label3:
        $z2 = r2 instanceof org.json.JSONArray;

        if $z2 == 0 goto label4;

        $r3 = (org.json.JSONArray) r2;

        $r4 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(org.json.JSONArray)>($r3);

        r9 = (java.util.List) r1;

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label5;

     label4:
        r10 = (java.util.List) r1;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r2);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        r11 = (java.util.List) r1;

        return r11;
    }

    private static java.lang.Object decodeObject(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject r0, $r12;
        java.util.ArrayList r1;
        java.util.HashMap r2;
        java.util.Iterator r3, r20;
        java.lang.String r4, r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5, $r7, $r13, $r15, r18, r19;
        org.json.JSONArray $r9;
        java.util.List $r10, r21, r27;
        java.util.Map r22, r23, r24, r25, r26, r28;

        r0 := @parameter0: org.json.JSONObject;

        r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r3 = virtualinvoke r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r7;

        $z2 = virtualinvoke r0.<org.json.JSONObject: boolean isNull(java.lang.String)>(r17);

        if $z2 == 0 goto label2;

        r21 = (java.util.List) r1;

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>(r17);

        $r15 = <org.json.JSONObject: java.lang.Object NULL>;

        r22 = (java.util.Map) r2;

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r15);

        goto label5;

     label2:
        r18 = virtualinvoke r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(r17);

        $z3 = r18 instanceof org.json.JSONObject;

        if $z3 == 0 goto label3;

        $r12 = (org.json.JSONObject) r18;

        $r13 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(org.json.JSONObject)>($r12);

        r23 = (java.util.Map) r2;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r13);

        goto label5;

     label3:
        $z4 = r18 instanceof org.json.JSONArray;

        if $z4 == 0 goto label4;

        $r9 = (org.json.JSONArray) r18;

        $r10 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(org.json.JSONArray)>($r9);

        r24 = (java.util.Map) r2;

        interfaceinvoke r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r10);

        goto label5;

     label4:
        r25 = (java.util.Map) r2;

        interfaceinvoke r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, r18);

     label5:
        goto label1;

     label6:
        r26 = (java.util.Map) r2;

        r19 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object maybeReplaceMap(java.util.Map)>(r26);

        if r19 == null goto label7;

        return r19;

     label7:
        r27 = (java.util.List) r1;

        r20 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r5 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r5;

        r28 = (java.util.Map) r2;

        interfaceinvoke r28.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        goto label8;

     label9:
        return r2;
    }

    private static java.lang.Object decodeViaJSONReader(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r8, $r9, $r19;
        java.lang.Throwable r1, r2, $r10, $r11, $r12, $r13, r16, r18;
        android.util.JsonReader $r3, r14;
        java.io.StringReader $r4;
        int[] $r5;
        android.util.JsonToken $r6;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r7;
        java.lang.Object r15;
        java.util.List r17;

        r0 := @parameter0: java.lang.String;

        r14 = null;

     label01:
        $r3 = new android.util.JsonReader;

        $r4 = new java.io.StringReader;

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>(r0);

        specialinvoke $r3.<android.util.JsonReader: void <init>(java.io.Reader)>($r4);

        r14 = $r3;

        $r5 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r6 = virtualinvoke r14.<android.util.JsonReader: android.util.JsonToken peek()>();

        $i0 = virtualinvoke $r6.<android.util.JsonToken: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label08;
            default: goto label14;
        };

     label02:
        r15 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(android.util.JsonReader)>(r14);

     label03:
        if null == r14 goto label07;

     label04:
        virtualinvoke r14.<android.util.JsonReader: void close()>();

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        r16 = $r13;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("JS_CODEC", "json reader - close exception", r16);

     label07:
        return r15;

     label08:
        r17 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(android.util.JsonReader)>(r14);

     label09:
        if null == r14 goto label13;

     label10:
        virtualinvoke r14.<android.util.JsonReader: void close()>();

     label11:
        goto label13;

     label12:
        $r11 := @caughtexception;

        r18 = $r11;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("JS_CODEC", "json reader - close exception", r18);

     label13:
        return r17;

     label14:
        $r7 = new java.lang.IllegalStateException;

        $r8 = "Bogus document: ";

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i2 == 0 goto label15;

        $r19 = virtualinvoke $r8.<java.lang.String: java.lang.String concat(java.lang.String)>($r9);

        goto label16;

     label15:
        $r19 = new java.lang.String;

        specialinvoke $r19.<java.lang.String: void <init>(java.lang.String)>("Bogus document: ");

     label16:
        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r7;

     label17:
        $r10 := @caughtexception;

        r1 = $r10;

     label18:
        if null == r14 goto label22;

     label19:
        virtualinvoke r14.<android.util.JsonReader: void close()>();

     label20:
        goto label22;

     label21:
        $r12 := @caughtexception;

        r2 = $r12;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("JS_CODEC", "json reader - close exception", r2);

     label22:
        throw r1;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label14 to label18 with label17;
    }

    private static java.util.List decodeArray(android.util.JsonReader) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.util.ArrayList r1;
        int[] $r2;
        android.util.JsonToken $r3, $r12;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r13;
        java.lang.Number $r5;
        boolean $z1, $z7;
        java.lang.Boolean $r6;
        java.util.List $r8, r15, r16, r17, r18, r19, r20, r21;
        java.lang.Object $r9;
        java.lang.Object[] $r11;
        java.lang.IllegalStateException r14;

        r0 := @parameter0: android.util.JsonReader;

        r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        virtualinvoke r0.<android.util.JsonReader: void beginArray()>();

     label1:
        $z7 = virtualinvoke r0.<android.util.JsonReader: boolean hasNext()>();

        if $z7 == 0 goto label9;

        $r2 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r3 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $i0 = virtualinvoke $r3.<android.util.JsonToken: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label7;
            default: goto label8;
        };

     label2:
        $r9 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(android.util.JsonReader)>(r0);

        r15 = (java.util.List) r1;

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label3:
        virtualinvoke r0.<android.util.JsonReader: void nextNull()>();

        r16 = (java.util.List) r1;

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label1;

     label4:
        $r7 = virtualinvoke r0.<android.util.JsonReader: java.lang.String nextString()>();

        r17 = (java.util.List) r1;

        interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label5:
        $z1 = virtualinvoke r0.<android.util.JsonReader: boolean nextBoolean()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r18 = (java.util.List) r1;

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label6:
        $r8 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(android.util.JsonReader)>(r0);

        r19 = (java.util.List) r1;

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label7:
        $r4 = virtualinvoke r0.<android.util.JsonReader: java.lang.String nextString()>();

        $r5 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Number decodeNumber(java.lang.String)>($r4);

        r20 = (java.util.List) r1;

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label8:
        r14 = new java.lang.IllegalStateException;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: bogus token", $r11);

        specialinvoke r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw r14;

     label9:
        virtualinvoke r0.<android.util.JsonReader: void endArray()>();

        r21 = (java.util.List) r1;

        return r21;
    }

    private static java.lang.Number decodeNumber(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Throwable r1, r2, r3, r4, $r6, $r8, $r10, $r12;
        java.lang.Integer $r5;
        java.math.BigInteger $r7;
        java.lang.Long $r9;
        java.math.BigDecimal $r11;
        java.lang.Double $r13;

        r0 := @parameter0: java.lang.String;

     label01:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r0);

     label02:
        return $r5;

     label03:
        $r8 := @caughtexception;

        r1 = $r8;

     label04:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r0);

     label05:
        return $r9;

     label06:
        $r12 := @caughtexception;

        r2 = $r12;

     label07:
        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r0);

     label08:
        return $r13;

     label09:
        $r6 := @caughtexception;

        r3 = $r6;

     label10:
        $r7 = new java.math.BigInteger;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>(r0);

     label11:
        return $r7;

     label12:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = new java.math.BigDecimal;

        specialinvoke $r11.<java.math.BigDecimal: void <init>(java.lang.String)>(r0);

        return $r11;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    private static java.lang.Object decodeObject(android.util.JsonReader) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.util.HashMap r1;
        java.util.ArrayList r2;
        java.lang.String r3, $r7, $r10, $r17, r18;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, $r11, $r13, r19;
        int[] $r5;
        android.util.JsonToken $r6, $r16;
        int $i0, $i1;
        java.lang.Number $r8;
        java.lang.Boolean $r9;
        java.util.List $r12, r23, r30;
        java.lang.Object[] $r15;
        java.util.Iterator r20;
        java.lang.IllegalStateException r21;
        java.util.Map r22, r24, r25, r26, r27, r28, r29, r31;

        r0 := @parameter0: android.util.JsonReader;

        r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        virtualinvoke r0.<android.util.JsonReader: void beginObject()>();

     label01:
        $z0 = virtualinvoke r0.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label10;

        r18 = virtualinvoke r0.<android.util.JsonReader: java.lang.String nextName()>();

        $r5 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r6 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $i0 = virtualinvoke $r6.<android.util.JsonToken: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            default: goto label08;
        };

     label02:
        $r13 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object decodeObject(android.util.JsonReader)>(r0);

        r22 = (java.util.Map) r1;

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r13);

        goto label09;

     label03:
        virtualinvoke r0.<android.util.JsonReader: void nextNull()>();

        r23 = (java.util.List) r2;

        interfaceinvoke r23.<java.util.List: boolean add(java.lang.Object)>(r18);

        $r11 = <org.json.JSONObject: java.lang.Object NULL>;

        r24 = (java.util.Map) r1;

        interfaceinvoke r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r11);

        goto label09;

     label04:
        $r10 = virtualinvoke r0.<android.util.JsonReader: java.lang.String nextString()>();

        r25 = (java.util.Map) r1;

        interfaceinvoke r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r10);

        goto label09;

     label05:
        $z2 = virtualinvoke r0.<android.util.JsonReader: boolean nextBoolean()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        r26 = (java.util.Map) r1;

        interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r9);

        goto label09;

     label06:
        $r7 = virtualinvoke r0.<android.util.JsonReader: java.lang.String nextString()>();

        $r8 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Number decodeNumber(java.lang.String)>($r7);

        r27 = (java.util.Map) r1;

        interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r8);

        goto label09;

     label07:
        $r12 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.util.List decodeArray(android.util.JsonReader)>(r0);

        r28 = (java.util.Map) r1;

        interfaceinvoke r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r12);

        goto label09;

     label08:
        r21 = new java.lang.IllegalStateException;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r15[0] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: bogus token.", $r15);

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw r21;

     label09:
        goto label01;

     label10:
        virtualinvoke r0.<android.util.JsonReader: void endObject()>();

        r29 = (java.util.Map) r1;

        r19 = staticinvoke <android.support.test.espresso.web.model.ModelCodec: java.lang.Object maybeReplaceMap(java.util.Map)>(r29);

        if null == r19 goto label11;

        return r19;

     label11:
        r30 = (java.util.List) r2;

        r20 = interfaceinvoke r30.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r4 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r4;

        r31 = (java.util.Map) r1;

        interfaceinvoke r31.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        goto label12;

     label13:
        return r1;
    }

    private static java.lang.Object maybeReplaceMap(java.util.Map)
    {
        java.util.Map r0;
        java.util.Iterator r1;
        android.support.test.espresso.web.model.JSONAble$DeJSONFactory r2;
        java.lang.Object r3, $r5;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        $r4 = <android.support.test.espresso.web.model.ModelCodec: java.util.concurrent.CopyOnWriteArrayList DEJSONIZERS>;

        r1 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.test.espresso.web.model.JSONAble$DeJSONFactory) $r5;

        r3 = interfaceinvoke r2.<android.support.test.espresso.web.model.JSONAble$DeJSONFactory: java.lang.Object attemptDeJSONize(java.util.Map)>(r0);

        if null == r3 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private static org.json.JSONStringer encodeHelper(java.lang.Object, org.json.JSONStringer) throws org.json.JSONException
    {
        java.lang.Object r0, r2, $r6, $r23, $r24, $r27, r34;
        org.json.JSONStringer r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet $r3, $r5;
        java.lang.Class $r4, $r7, r38;
        org.json.JSONObject $r9, r36;
        android.support.test.espresso.web.model.JSONAble $r10;
        java.lang.String $r11, $r25;
        java.lang.Iterable $r17;
        java.util.Map $r21;
        java.util.Set r30;
        java.util.Iterator r31, r33;
        java.util.Map$Entry r32;
        java.lang.Object[] r35;
        int i0, i1;
        android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator r37;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.json.JSONStringer;

        if null != r0 goto label01;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>(r0);

        goto label15;

     label01:
        $z0 = r0 instanceof java.util.Map;

        if $z0 == 0 goto label04;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer object()>();

        $r21 = (java.util.Map) r0;

        r30 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>();

        r31 = interfaceinvoke r30.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label03;

        $r23 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r23;

        $r24 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer key(java.lang.String)>($r25);

        $r27 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <android.support.test.espresso.web.model.ModelCodec: org.json.JSONStringer encodeHelper(java.lang.Object,org.json.JSONStringer)>($r27, r1);

        goto label02;

     label03:
        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer endObject()>();

        goto label15;

     label04:
        $z1 = r0 instanceof java.lang.Iterable;

        if $z1 == 0 goto label07;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer array()>();

        $r17 = (java.lang.Iterable) r0;

        r33 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <android.support.test.espresso.web.model.ModelCodec: org.json.JSONStringer encodeHelper(java.lang.Object,org.json.JSONStringer)>(r34, r1);

        goto label05;

     label06:
        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer endArray()>();

        goto label15;

     label07:
        $z2 = r0 instanceof java.lang.Object[];

        if $z2 == 0 goto label10;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer array()>();

        r35 = (java.lang.Object[]) r0;

        i0 = lengthof r35;

        i1 = 0;

     label08:
        if i1 >= i0 goto label09;

        r2 = r35[i1];

        staticinvoke <android.support.test.espresso.web.model.ModelCodec: org.json.JSONStringer encodeHelper(java.lang.Object,org.json.JSONStringer)>(r2, r1);

        i1 = i1 + 1;

        goto label08;

     label09:
        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer endArray()>();

        goto label15;

     label10:
        $z3 = r0 instanceof android.support.test.espresso.web.model.JSONAble;

        if $z3 == 0 goto label11;

        $r9 = new org.json.JSONObject;

        $r10 = (android.support.test.espresso.web.model.JSONAble) r0;

        $r11 = interfaceinvoke $r10.<android.support.test.espresso.web.model.JSONAble: java.lang.String toJSONString()>();

        specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r11);

        r36 = $r9;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>(r36);

        goto label15;

     label11:
        z8 = 0;

        $r3 = <android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet VALUEABLE_CLASSES>;

        r37 = virtualinvoke $r3.<android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

     label12:
        $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r6 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.Class) $r6;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = virtualinvoke r38.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z5 == 0 goto label13;

        z8 = 1;

        virtualinvoke r1.<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>(r0);

     label13:
        goto label12;

     label14:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = <android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet VALUEABLE_CLASSES>;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object)>(z8, "%s: not encodable. Want one of: %s", $r4, $r5);

     label15:
        return r1;
    }

    static void <clinit>()
    {
        android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet $r0, $r2;
        java.lang.Class[] $r1;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        android.support.test.espresso.web.model.JSONAble$DeJSONFactory[] $r4;
        android.support.test.espresso.web.model.JSONAble$DeJSONFactory $r5, $r6, $r7;
        java.util.ArrayList $r8;

        $r0 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", class "Ljava/lang/Number;", class "Ljava/lang/String;", class "Lorg/json/JSONObject;", class "Lorg/json/JSONArray;");

        <android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet VALUEABLE_CLASSES> = $r0;

        $r1 = newarray (java.lang.Class)[0];

        $r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(class "Lorg/json/JSONObject;", class "Lorg/json/JSONArray;", class "Ljava/lang/Iterable;", class "[Ljava/lang/Object;", class "Ljava/util/Map;", class "Landroid/support/test/espresso/web/model/JSONAble;", $r1);

        <android.support.test.espresso.web.model.ModelCodec: android.support.test.espresso.web.internal.deps.guava.collect.ImmutableSet TOP_LEVEL_CLASSES> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        $r4 = newarray (android.support.test.espresso.web.model.JSONAble$DeJSONFactory)[3];

        $r5 = <android.support.test.espresso.web.model.Evaluation: android.support.test.espresso.web.model.JSONAble$DeJSONFactory DEJSONIZER>;

        $r4[0] = $r5;

        $r6 = <android.support.test.espresso.web.model.WindowReference: android.support.test.espresso.web.model.JSONAble$DeJSONFactory DEJSONIZER>;

        $r4[1] = $r6;

        $r7 = <android.support.test.espresso.web.model.ElementReference: android.support.test.espresso.web.model.JSONAble$DeJSONFactory DEJSONIZER>;

        $r4[2] = $r7;

        $r8 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4);

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>($r8);

        <android.support.test.espresso.web.model.ModelCodec: java.util.concurrent.CopyOnWriteArrayList DEJSONIZERS> = $r3;

        return;
    }

android.support.test.espresso.web.model.ModelCodec$1
<android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>
    static void <clinit>()
    {
        android.util.JsonToken[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        android.util.JsonToken $r2, $r4, $r6, $r8, $r10, $r12;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r18, $r19, r20, r21, r22, r23, r24, r25;

        $r0 = staticinvoke <android.util.JsonToken: android.util.JsonToken[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken> = $r1;

     label01:
        $r3 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r2 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        $i1 = virtualinvoke $r2.<android.util.JsonToken: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        r20 = $r17;

     label04:
        $r5 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r4 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        $i2 = virtualinvoke $r4.<android.util.JsonToken: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r15 := @caughtexception;

        r21 = $r15;

     label07:
        $r7 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r6 = <android.util.JsonToken: android.util.JsonToken NULL>;

        $i3 = virtualinvoke $r6.<android.util.JsonToken: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r18 := @caughtexception;

        r22 = $r18;

     label10:
        $r9 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r8 = <android.util.JsonToken: android.util.JsonToken STRING>;

        $i4 = virtualinvoke $r8.<android.util.JsonToken: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        r23 = $r16;

     label13:
        $r11 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r10 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        $i5 = virtualinvoke $r10.<android.util.JsonToken: int ordinal()>();

        $r11[$i5] = 5;

     label14:
        goto label16;

     label15:
        $r14 := @caughtexception;

        r24 = $r14;

     label16:
        $r13 = <android.support.test.espresso.web.model.ModelCodec$1: int[] $SwitchMap$android$util$JsonToken>;

        $r12 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        $i6 = virtualinvoke $r12.<android.util.JsonToken: int ordinal()>();

        $r13[$i6] = 6;

     label17:
        goto label19;

     label18:
        $r19 := @caughtexception;

        r25 = $r19;

     label19:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label16 to label17 with label18;
    }

