android.support.test.espresso.remote.internal.deps.guava.collect.Iterators
    public static boolean elementsEqual(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        java.lang.Object r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        return 0;

     label2:
        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z3 != 0 goto label3;

        return 0;

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public static java.lang.String toString(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.StringBuilder r1, $r2, $r3;
        boolean $z0, z1;
        java.lang.String $r4;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.Iterator;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        z1 = 1;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if z1 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        z1 = 0;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.Object getOnlyElement(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r10;
        java.lang.StringBuilder r2, $r3, $r4, $r9;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        int i0;

        r0 := @parameter0: java.util.Iterator;

        r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected one element but was: <");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        i0 = 0;

     label2:
        if i0 >= 4 goto label3;

        $z2 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label2;

     label3:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ...");

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static java.lang.Object[] toArray(java.util.Iterator, java.lang.Class)
    {
        java.util.Iterator r0;
        java.lang.Class r1;
        java.util.ArrayList r2;
        java.lang.Object[] $r3;
        java.lang.Iterable r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>(r0);

        r4 = (java.lang.Iterable) r2;

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class)>(r4, r1);

        return $r3;
    }

    public static boolean addAll(java.util.Collection, java.util.Iterator)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0, $z1, z2;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Iterator;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        z2 = 0;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator filter(java.util.Iterator, android.support.test.espresso.remote.internal.deps.guava.base.Predicate)
    {
        java.util.Iterator r0;
        android.support.test.espresso.remote.internal.deps.guava.base.Predicate r1;
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5 $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.base.Predicate;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5;

        specialinvoke $r4.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: void <init>(java.util.Iterator,android.support.test.espresso.remote.internal.deps.guava.base.Predicate)>(r0, r1);

        return $r4;
    }

    public static java.util.Iterator transform(java.util.Iterator, android.support.test.espresso.remote.internal.deps.guava.base.Function)
    {
        java.util.Iterator r0;
        android.support.test.espresso.remote.internal.deps.guava.base.Function r1;
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6 $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.base.Function;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6;

        specialinvoke $r3.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6: void <init>(java.util.Iterator,android.support.test.espresso.remote.internal.deps.guava.base.Function)>(r0, r1);

        return $r3;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator singletonIterator(java.lang.Object)
    {
        java.lang.Object r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9 $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    static java.util.ListIterator cast(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.ListIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = (java.util.ListIterator) r0;

        return $r1;
    }

android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5
<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: java.util.Iterator val$unfiltered>
<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: android.support.test.espresso.remote.internal.deps.guava.base.Predicate val$retainIfTrue>
    void <init>(java.util.Iterator, android.support.test.espresso.remote.internal.deps.guava.base.Predicate)
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5 r0;
        java.util.Iterator r1;
        android.support.test.espresso.remote.internal.deps.guava.base.Predicate r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.base.Predicate;

        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: java.util.Iterator val$unfiltered> = r1;

        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: android.support.test.espresso.remote.internal.deps.guava.base.Predicate val$retainIfTrue> = r2;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.AbstractIterator: void <init>()>();

        return;
    }

    protected java.lang.Object computeNext()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5 r0;
        java.lang.Object r1, $r3;
        java.util.Iterator $r2, $r4;
        boolean $z0, $z1;
        android.support.test.espresso.remote.internal.deps.guava.base.Predicate $r5;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5;

     label1:
        $r2 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: java.util.Iterator val$unfiltered>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: java.util.Iterator val$unfiltered>;

        r1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: android.support.test.espresso.remote.internal.deps.guava.base.Predicate val$retainIfTrue>;

        $z1 = interfaceinvoke $r5.<android.support.test.espresso.remote.internal.deps.guava.base.Predicate: boolean apply(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return r1;

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$5: java.lang.Object endOfData()>();

        return $r3;
    }

android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6
<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6: android.support.test.espresso.remote.internal.deps.guava.base.Function val$function>
    void <init>(java.util.Iterator, android.support.test.espresso.remote.internal.deps.guava.base.Function)
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6 r0;
        java.util.Iterator r1;
        android.support.test.espresso.remote.internal.deps.guava.base.Function r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.base.Function;

        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6: android.support.test.espresso.remote.internal.deps.guava.base.Function val$function> = r2;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.TransformedIterator: void <init>(java.util.Iterator)>(r1);

        return;
    }

    java.lang.Object transform(java.lang.Object)
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6 r0;
        java.lang.Object r1, $r3;
        android.support.test.espresso.remote.internal.deps.guava.base.Function $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$6: android.support.test.espresso.remote.internal.deps.guava.base.Function val$function>;

        $r3 = interfaceinvoke $r2.<android.support.test.espresso.remote.internal.deps.guava.base.Function: java.lang.Object apply(java.lang.Object)>(r1);

        return $r3;
    }

android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9
<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: boolean done>
<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: java.lang.Object val$value>
    void <init>(java.lang.Object)
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9 r0;
        java.lang.Object r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9;

        r1 := @parameter0: java.lang.Object;

        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: java.lang.Object val$value> = r1;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9 r0;
        boolean $z0, $z1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9;

        $z0 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: boolean done>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object next()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9 r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9;

        $z0 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: boolean done>;

        if $z0 == 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: boolean done> = 1;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.Iterators$9: java.lang.Object val$value>;

        return $r1;
    }

