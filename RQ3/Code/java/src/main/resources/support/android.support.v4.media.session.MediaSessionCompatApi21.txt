android.support.v4.media.session.MediaSessionCompatApi21
<android.support.v4.media.session.MediaSessionCompatApi21: java.lang.String TAG>
    public static java.lang.Object createSession(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.media.session.MediaSession;

        specialinvoke $r2.<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.Object verifySession(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.media.session.MediaSession;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaSession is not a valid MediaSession object");

        throw $r1;
    }

    public static java.lang.Object verifyToken(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.media.session.MediaSession$Token;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token is not a valid MediaSession.Token object");

        throw $r1;
    }

    public static java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$Callback r0;
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy $r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi21$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback)>(r0);

        return $r1;
    }

    public static void setCallback(java.lang.Object, java.lang.Object, android.os.Handler)
    {
        java.lang.Object r0, r1;
        android.os.Handler r2;
        android.media.session.MediaSession$Callback $r3;
        android.media.session.MediaSession $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: android.os.Handler;

        $r4 = (android.media.session.MediaSession) r0;

        $r3 = (android.media.session.MediaSession$Callback) r1;

        virtualinvoke $r4.<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession$Callback,android.os.Handler)>($r3, r2);

        return;
    }

    public static void setFlags(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setFlags(int)>(i0);

        return;
    }

    public static void setPlaybackToLocal(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        android.media.AudioAttributes$Builder r1, $r2;
        android.media.session.MediaSession $r4;
        android.media.AudioAttributes $r5;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = new android.media.AudioAttributes$Builder;

        specialinvoke $r2.<android.media.AudioAttributes$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setLegacyStreamType(int)>(i0);

        $r4 = (android.media.session.MediaSession) r0;

        $r5 = virtualinvoke r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke $r4.<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>($r5);

        return;
    }

    public static void setPlaybackToRemote(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.VolumeProvider $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.VolumeProvider) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>($r2);

        return;
    }

    public static void setActive(java.lang.Object, boolean)
    {
        java.lang.Object r0;
        boolean z0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setActive(boolean)>(z0);

        return;
    }

    public static boolean isActive(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        $z0 = virtualinvoke $r1.<android.media.session.MediaSession: boolean isActive()>();

        return $z0;
    }

    public static void sendSessionEvent(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaSession) r0;

        virtualinvoke $r3.<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public static void release(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void release()>();

        return;
    }

    public static android.os.Parcelable getSessionToken(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;
        android.media.session.MediaSession$Token $r2;
        android.os.Parcelable r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaSession: android.media.session.MediaSession$Token getSessionToken()>();

        r3 = (android.os.Parcelable) $r2;

        return r3;
    }

    public static void setPlaybackState(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.session.PlaybackState $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.session.PlaybackState) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>($r2);

        return;
    }

    public static void setMetadata(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.MediaMetadata $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.MediaMetadata) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>($r2);

        return;
    }

    public static void setSessionActivity(java.lang.Object, android.app.PendingIntent)
    {
        java.lang.Object r0;
        android.app.PendingIntent r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = (android.media.session.MediaSession) r0;

        virtualinvoke $r2.<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>(r1);

        return;
    }

    public static void setMediaButtonReceiver(java.lang.Object, android.app.PendingIntent)
    {
        java.lang.Object r0;
        android.app.PendingIntent r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = (android.media.session.MediaSession) r0;

        virtualinvoke $r2.<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>(r1);

        return;
    }

    public static void setQueue(java.lang.Object, java.util.List)
    {
        java.lang.Object r0, r4;
        java.util.List r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        boolean $z0;
        android.media.session.MediaSession $r6, $r8;
        android.media.session.MediaSession$QueueItem $r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.List;

        if r1 != null goto label1;

        $r8 = (android.media.session.MediaSession) r0;

        virtualinvoke $r8.<android.media.session.MediaSession: void setQueue(java.util.List)>(null);

        return;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.media.session.MediaSession$QueueItem) r4;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r6 = (android.media.session.MediaSession) r0;

        virtualinvoke $r6.<android.media.session.MediaSession: void setQueue(java.util.List)>(r2);

        return;
    }

    public static void setQueueTitle(java.lang.Object, java.lang.CharSequence)
    {
        java.lang.Object r0;
        java.lang.CharSequence r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = (android.media.session.MediaSession) r0;

        virtualinvoke $r2.<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public static void setExtras(java.lang.Object, android.os.Bundle)
    {
        java.lang.Object r0;
        android.os.Bundle r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.os.Bundle;

        $r2 = (android.media.session.MediaSession) r0;

        virtualinvoke $r2.<android.media.session.MediaSession: void setExtras(android.os.Bundle)>(r1);

        return;
    }

    public static boolean hasCallback(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        java.lang.Class $r1;
        java.lang.Throwable $r3;
        java.lang.reflect.Field r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mCallback");

        if r4 == null goto label4;

        virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r2 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionCompatApi21", "Failed to get mCallback object.");

     label6:
        return 0;

        catch java.lang.NoSuchFieldException from label1 to label3 with label5;
        catch java.lang.IllegalAccessException from label1 to label3 with label5;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.v4.media.session.MediaSessionCompatApi21$Callback
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: boolean onMediaButtonEvent(android.content.Intent)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlay()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToQueueItem(long)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPause()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToNext()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToPrevious()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onFastForward()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onRewind()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onStop()>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSeekTo(long)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSetRating(java.lang.Object)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSetRating(java.lang.Object,android.os.Bundle)>
<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onCustomAction(java.lang.String,android.os.Bundle)>
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>
    public void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi21$Callback;

        specialinvoke r0.<android.media.session.MediaSession$Callback: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback> = r1;

        return;
    }

    public void onCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>(r1, r2, r3);

        return;
    }

    public boolean onMediaButtonEvent(android.content.Intent)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.content.Intent r1;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: boolean onMediaButtonEvent(android.content.Intent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.media.session.MediaSession$Callback: boolean onMediaButtonEvent(android.content.Intent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void onPlay()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlay()>();

        return;
    }

    public void onPlayFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void onPlayFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void onSkipToQueueItem(long)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        long l0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToQueueItem(long)>(l0);

        return;
    }

    public void onPause()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onPause()>();

        return;
    }

    public void onSkipToNext()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToNext()>();

        return;
    }

    public void onSkipToPrevious()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSkipToPrevious()>();

        return;
    }

    public void onFastForward()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onFastForward()>();

        return;
    }

    public void onRewind()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onRewind()>();

        return;
    }

    public void onStop()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onStop()>();

        return;
    }

    public void onSeekTo(long)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        long l0;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSeekTo(long)>(l0);

        return;
    }

    public void onSetRating(android.media.Rating)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        android.media.Rating r1;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: android.media.Rating;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onSetRating(java.lang.Object)>(r1);

        return;
    }

    public void onCustomAction(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompatApi21$Callback: void onCustomAction(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
    public static java.lang.Object createItem(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        android.media.session.MediaSession$QueueItem $r1;
        android.media.MediaDescription $r2;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = new android.media.session.MediaSession$QueueItem;

        $r2 = (android.media.MediaDescription) r0;

        specialinvoke $r1.<android.media.session.MediaSession$QueueItem: void <init>(android.media.MediaDescription,long)>($r2, l0);

        return $r1;
    }

    public static java.lang.Object getDescription(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession$QueueItem $r1;
        android.media.MediaDescription $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession$QueueItem) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaSession$QueueItem: android.media.MediaDescription getDescription()>();

        return $r2;
    }

    public static long getQueueId(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession$QueueItem $r1;
        long $l0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession$QueueItem) r0;

        $l0 = virtualinvoke $r1.<android.media.session.MediaSession$QueueItem: long getQueueId()>();

        return $l0;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi21$QueueItem r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21$QueueItem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

