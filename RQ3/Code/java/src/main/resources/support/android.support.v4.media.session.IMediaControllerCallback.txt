android.support.v4.media.session.IMediaControllerCallback
<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>
<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>
<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>
<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>
<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>
<android.support.v4.media.session.IMediaControllerCallback: void onExtrasChanged(android.os.Bundle)>
<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>
<android.support.v4.media.session.IMediaControllerCallback: void onRepeatModeChanged(int)>
<android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChangedRemoved(boolean)>
<android.support.v4.media.session.IMediaControllerCallback: void onCaptioningEnabledChanged(boolean)>
<android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChanged(int)>
<android.support.v4.media.session.IMediaControllerCallback: void onSessionReady()>
android.support.v4.media.session.IMediaControllerCallback$Default
    public void <init>()
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onEvent(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onSessionDestroyed() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        return;
    }

    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        android.support.v4.media.session.PlaybackStateCompat r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        return;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        android.support.v4.media.MediaMetadataCompat r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        return;
    }

    public void onQueueChanged(java.util.List) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        java.util.List r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void onQueueTitleChanged(java.lang.CharSequence) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    public void onExtrasChanged(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        android.os.Bundle r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        android.support.v4.media.session.ParcelableVolumeInfo r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        return;
    }

    public void onRepeatModeChanged(int) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        int i0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        i0 := @parameter0: int;

        return;
    }

    public void onShuffleModeChangedRemoved(boolean) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        boolean z0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void onCaptioningEnabledChanged(boolean) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        boolean z0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void onShuffleModeChanged(int) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;
        int i0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        i0 := @parameter0: int;

        return;
    }

    public void onSessionReady() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.support.v4.media.session.IMediaControllerCallback$Default r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Default;

        return null;
    }

android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>
    void <init>(android.os.IBinder)
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        $r1 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        return "android.support.v4.media.session.IMediaControllerCallback";
    }

    public void onEvent(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        if r2 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, null, 1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onSessionDestroyed() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.support.v4.media.session.PlaybackStateCompat r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.support.v4.media.MediaMetadataCompat r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onQueueChanged(java.util.List) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        java.util.List r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r1);

        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onQueueTitleChanged(java.lang.CharSequence) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        java.lang.CharSequence r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: java.lang.CharSequence;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onExtrasChanged(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.support.v4.media.session.ParcelableVolumeInfo r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onRepeatModeChanged(int) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onShuffleModeChangedRemoved(boolean) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r5;
        android.os.IBinder $r3;
        byte $b0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, null, 1);

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onCaptioningEnabledChanged(boolean) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r5;
        android.os.IBinder $r3;
        byte $b0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void onShuffleModeChanged(int) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onSessionReady() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $r3 = r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

android.support.v4.media.session.IMediaControllerCallback$Stub
<android.support.v4.media.session.IMediaControllerCallback$Stub: java.lang.String DESCRIPTOR>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onEvent>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onSessionDestroyed>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onPlaybackStateChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onMetadataChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onQueueChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onQueueTitleChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onExtrasChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onVolumeInfoChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onRepeatModeChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onShuffleModeChangedRemoved>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onCaptioningEnabledChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onShuffleModeChanged>
<android.support.v4.media.session.IMediaControllerCallback$Stub: int TRANSACTION_onSessionReady>
    public void <init>()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub r0;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.support.v4.media.session.IMediaControllerCallback");

        return;
    }

    public static android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r2;
        boolean $z0;
        android.support.v4.media.session.IMediaControllerCallback $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.support.v4.media.session.IMediaControllerCallback;

        if $z0 == 0 goto label2;

        $r3 = (android.support.v4.media.session.IMediaControllerCallback) r1;

        return $r3;

     label2:
        $r2 = new android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;

        specialinvoke $r2.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub r0;
        android.os.IBinder r1;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        android.os.Parcel r1, r2;
        android.os.Parcelable$Creator $r3, $r5, $r7, $r9, $r10, $r12, $r14;
        java.lang.Object $r4, $r6, $r8, $r11, $r13, $r15;
        boolean $z0, $z1, z2, $z3, z4;
        java.lang.String r16;
        android.os.Bundle r17, r22;
        android.support.v4.media.session.PlaybackStateCompat r18;
        android.support.v4.media.MediaMetadataCompat r19;
        java.util.ArrayList r20;
        java.lang.CharSequence r21;
        android.support.v4.media.session.ParcelableVolumeInfo r23;

        r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label16;
            case 8: goto label19;
            case 9: goto label22;
            case 10: goto label23;
            case 11: goto label26;
            case 12: goto label29;
            case 13: goto label30;
            case 1598968902: goto label01;
            default: goto label31;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        r16 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label03;

        $r14 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r17 = (android.os.Bundle) $r15;

        goto label04;

     label03:
        r17 = null;

     label04:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onEvent(java.lang.String,android.os.Bundle)>(r16, r17);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onSessionDestroyed()>();

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label07;

        $r12 = <android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r18 = (android.support.v4.media.session.PlaybackStateCompat) $r13;

        goto label08;

     label07:
        r18 = null;

     label08:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>(r18);

        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label10;

        $r10 = <android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r19 = (android.support.v4.media.MediaMetadataCompat) $r11;

        goto label11;

     label10:
        r19 = null;

     label11:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>(r19);

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $r9 = <android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR>;

        r20 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r9);

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onQueueChanged(java.util.List)>(r20);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label14;

        $r7 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r21 = (java.lang.CharSequence) $r8;

        goto label15;

     label14:
        r21 = null;

     label15:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onQueueTitleChanged(java.lang.CharSequence)>(r21);

        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label17;

        $r5 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r22 = (android.os.Bundle) $r6;

        goto label18;

     label17:
        r22 = null;

     label18:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onExtrasChanged(android.os.Bundle)>(r22);

        return 1;

     label19:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label20;

        $r3 = <android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r23 = (android.support.v4.media.session.ParcelableVolumeInfo) $r4;

        goto label21;

     label20:
        r23 = null;

     label21:
        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r23);

        return 1;

     label22:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onRepeatModeChanged(int)>(i10);

        return 1;

     label23:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label24;

        $z1 = 1;

        goto label25;

     label24:
        $z1 = 0;

     label25:
        z2 = $z1;

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onShuffleModeChangedRemoved(boolean)>(z2);

        return 1;

     label26:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label27;

        $z3 = 1;

        goto label28;

     label27:
        $z3 = 0;

     label28:
        z4 = $z3;

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onCaptioningEnabledChanged(boolean)>(z4);

        return 1;

     label29:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onShuffleModeChanged(int)>(i11);

        return 1;

     label30:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");

        virtualinvoke r0.<android.support.v4.media.session.IMediaControllerCallback$Stub: void onSessionReady()>();

        return 1;

     label31:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

