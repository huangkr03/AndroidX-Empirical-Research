android.support.v7.widget.ViewUtils
<android.support.v7.widget.ViewUtils: java.lang.String TAG>
<android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>
    private void <init>()
    {
        android.support.v7.widget.ViewUtils r0;

        r0 := @this: android.support.v7.widget.ViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isLayoutRtl(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void computeFitSystemWindows(android.view.View, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r2;
        java.lang.Throwable r3, $r8;
        java.lang.reflect.Method $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        $r4 = <android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

        if $r4 == null goto label4;

     label1:
        $r6 = <android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke computeFitSystemWindows", r3);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void makeOptionalFitsSystemWindows(android.view.View)
    {
        android.view.View r0;
        int $i0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Throwable $r5, $r6, $r7, r9, r10, r11;
        java.lang.reflect.Method r8;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label7;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("makeOptionalFitsSystemWindows", $r2);

        $z0 = virtualinvoke r8.<java.lang.reflect.Method: boolean isAccessible()>();

        if $z0 != 0 goto label2;

        virtualinvoke r8.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

        r9 = $r5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method makeOptionalFitsSystemWindows. Oh well...");

        goto label7;

     label5:
        $r7 := @caughtexception;

        r10 = $r7;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", r10);

        goto label7;

     label6:
        $r6 := @caughtexception;

        r11 = $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", r11);

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label5;
        catch java.lang.IllegalAccessException from label1 to label3 with label6;
    }

    static void <clinit>()
    {
        java.lang.Throwable r0, $r6;
        int $i0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3, $r4, $r5;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label4;

     label1:
        $r2 = class "Landroid/view/View;";

        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Landroid/graphics/Rect;";

        $r1[1] = class "Landroid/graphics/Rect;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("computeFitSystemWindows", $r1);

        <android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod> = $r3;

        $r4 = <android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

        $z0 = virtualinvoke $r4.<java.lang.reflect.Method: boolean isAccessible()>();

        if $z0 != 0 goto label2;

        $r5 = <android.support.v7.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r0 = $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method computeFitSystemWindows. Oh well.");

     label4:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

