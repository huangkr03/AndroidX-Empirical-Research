android.support.test.espresso.remote.MethodInvocation
<android.support.test.espresso.remote.MethodInvocation: java.lang.String TAG>
<android.support.test.espresso.remote.MethodInvocation: android.support.test.espresso.core.internal.deps.guava.cache.Cache methodCache>
<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>
<android.support.test.espresso.remote.MethodInvocation: java.lang.Object instance>
<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>
<android.support.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>
    public transient void <init>(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Class[])
    {
        android.support.test.espresso.remote.MethodInvocation r0;
        java.lang.Class r1, $r6;
        java.lang.Object r2, $r5;
        java.lang.String r3;
        java.lang.Class[] r4;
        boolean $z0, $z1;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "clazz cannot be null!");

        $r6 = (java.lang.Class) $r5;

        r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz> = $r6;

        r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Object instance> = r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "methodName cannot be null or empty");

        r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName> = r3;

        r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes> = r4;

        return;
    }

    private static java.lang.reflect.Method getMethod(android.support.test.espresso.remote.MethodInvocation$MethodKey) throws java.lang.NoSuchMethodException
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = staticinvoke <android.support.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethodInternal(android.support.test.espresso.remote.MethodInvocation$MethodKey,boolean)>(r0, 0);

        return $r1;
    }

    private static java.lang.reflect.Method getDeclaredMethod(android.support.test.espresso.remote.MethodInvocation$MethodKey) throws java.lang.NoSuchMethodException
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = staticinvoke <android.support.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethodInternal(android.support.test.espresso.remote.MethodInvocation$MethodKey,boolean)>(r0, 1);

        return $r1;
    }

    private static java.lang.reflect.Method getMethodInternal(android.support.test.espresso.remote.MethodInvocation$MethodKey, boolean) throws java.lang.NoSuchMethodException
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        boolean z0;
        android.support.test.espresso.core.internal.deps.guava.cache.Cache $r1, $r18;
        java.lang.Object $r2;
        java.lang.Object[] $r3, $r9;
        java.lang.Class $r4, $r10, $r15, $r19;
        java.lang.String $r5, $r6, $r8, $r11, $r12, $r14, $r16, $r20;
        java.lang.Class[] $r7, $r13, $r17, $r21;
        java.lang.reflect.Method r22;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        z0 := @parameter1: boolean;

        $r1 = <android.support.test.espresso.remote.MethodInvocation: android.support.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.core.internal.deps.guava.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r0);

        r22 = (java.lang.reflect.Method) $r2;

        if null != r22 goto label3;

        $r9 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class access$000(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9[0] = $r11;

        $r12 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String access$100(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r9[1] = $r12;

        $r13 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] access$200(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r13);

        $r9[2] = $r14;

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "Cache miss for method: %s#%s(%s). Loading into cache.", $r9);

        if z0 == 0 goto label1;

        $r19 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class access$000(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r20 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String access$100(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r21 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] access$200(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        r22 = virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r20, $r21);

        goto label2;

     label1:
        $r15 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class access$000(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r16 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String access$100(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r17 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] access$200(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        r22 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r16, $r17);

     label2:
        $r18 = <android.support.test.espresso.remote.MethodInvocation: android.support.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        interfaceinvoke $r18.<android.support.test.espresso.core.internal.deps.guava.cache.Cache: void put(java.lang.Object,java.lang.Object)>(r0, r22);

        goto label4;

     label3:
        $r3 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class access$000(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String access$100(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r3[1] = $r6;

        $r7 = staticinvoke <android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] access$200(android.support.test.espresso.remote.MethodInvocation$MethodKey)>(r0);

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r7);

        $r3[2] = $r8;

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "Cache hit for method: %s#%s(%s).", $r3);

     label4:
        return r22;
    }

    public static void invalidateCache()
    {
        android.support.test.espresso.core.internal.deps.guava.cache.Cache $r0;

        $r0 = <android.support.test.espresso.remote.MethodInvocation: android.support.test.espresso.core.internal.deps.guava.cache.Cache methodCache>;

        interfaceinvoke $r0.<android.support.test.espresso.core.internal.deps.guava.cache.Cache: void invalidateAll()>();

        return;
    }

    public transient java.lang.Object invokeDeclaredMethod(java.lang.Object[])
    {
        android.support.test.espresso.remote.MethodInvocation r0;
        java.lang.Object[] r1, $r11;
        java.lang.Throwable r2, $r9;
        android.support.test.espresso.remote.MethodInvocation$MethodKey $r3;
        java.lang.Class[] $r4, $r13;
        java.lang.String $r5, $r12, $r16, $r20;
        java.lang.Class $r6, $r15, $r17;
        java.lang.reflect.Method $r7;
        java.lang.Object $r8;
        android.support.test.espresso.remote.RemoteProtocolException $r10;
        java.util.List $r14, $r19;
        java.lang.reflect.Method[] $r18;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation;

        r1 := @parameter0: java.lang.Object[];

     label1:
        $r3 = new android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r6 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r5 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r4 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        specialinvoke $r3.<android.support.test.espresso.remote.MethodInvocation$MethodKey: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r6, $r5, $r4);

        $r7 = staticinvoke <android.support.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getDeclaredMethod(android.support.test.espresso.remote.MethodInvocation$MethodKey)>($r3);

        $r8 = specialinvoke r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Object invokeMethodExplosively(java.lang.reflect.Method,java.lang.Object[])>($r7, r1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r11 = newarray (java.lang.Object)[4];

        $r12 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r11[0] = $r12;

        $r13 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        $r11[1] = $r14;

        $r15 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r11[2] = $r16;

        $r17 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        $r11[3] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No method: %s(%s) found for clazz: %s Available methods: %s", $r11);

        specialinvoke $r10.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r2);

        throw $r10;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public transient java.lang.Object invokeMethod(java.lang.Object[])
    {
        android.support.test.espresso.remote.MethodInvocation r0;
        java.lang.Object[] r1, $r11;
        java.lang.Throwable r2, $r9;
        android.support.test.espresso.remote.MethodInvocation$MethodKey $r3;
        java.lang.Class[] $r4;
        java.lang.String $r5, $r12, $r14, $r18;
        java.lang.Class $r6, $r13, $r15;
        java.lang.reflect.Method $r7;
        java.lang.Object $r8;
        android.support.test.espresso.remote.RemoteProtocolException $r10;
        java.lang.reflect.Method[] $r16;
        java.util.List $r17;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation;

        r1 := @parameter0: java.lang.Object[];

     label1:
        $r3 = new android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r6 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r5 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r4 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class[] parameterTypes>;

        specialinvoke $r3.<android.support.test.espresso.remote.MethodInvocation$MethodKey: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r6, $r5, $r4);

        $r7 = staticinvoke <android.support.test.espresso.remote.MethodInvocation: java.lang.reflect.Method getMethod(android.support.test.espresso.remote.MethodInvocation$MethodKey)>($r3);

        $r8 = specialinvoke r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Object invokeMethodExplosively(java.lang.reflect.Method,java.lang.Object[])>($r7, r1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r11 = newarray (java.lang.Object)[3];

        $r12 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r11[0] = $r12;

        $r13 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r11[1] = $r14;

        $r15 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        $r11[2] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No method: %s found for clazz: %s. Available methods: %s", $r11);

        specialinvoke $r10.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r2);

        throw $r10;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    private transient java.lang.Object invokeMethodExplosively(java.lang.reflect.Method, java.lang.Object[])
    {
        android.support.test.espresso.remote.MethodInvocation r0;
        java.lang.reflect.Method r1;
        java.lang.Object[] r2, $r5, $r12, $r19, $r23, $r30;
        java.lang.Throwable r3, $r10, $r17, $r22, $r28, r35, r36, r37;
        java.lang.Object $r4, r34;
        java.lang.Class $r6, $r14, $r24, $r31;
        java.lang.String $r7, $r8, $r9, $r13, $r15, $r16, $r20, $r21, $r25, $r26, $r27, $r32, $r33;
        android.support.test.espresso.remote.RemoteProtocolException $r11, $r18, $r29;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Object[];

     label1:
        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r4 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Object instance>;

        r34 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, r2);

     label2:
        $r5 = newarray (java.lang.Object)[3];

        $r6 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5[0] = $r7;

        $r8 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r5[1] = $r8;

        $r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);

        $r5[2] = $r9;

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "%s.invokeMethodExplosively(%s,%s)", $r5);

        goto label8;

     label3:
        $r10 := @caughtexception;

        r35 = $r10;

        $r11 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = r1;

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);

        $r12[1] = $r13;

        $r14 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r12[2] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot invoke method %s with args [%s] on builder %s", $r12);

        specialinvoke $r11.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r16, r35);

        throw $r11;

     label4:
        $r28 := @caughtexception;

        r36 = $r28;

        $r29 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r30 = newarray (java.lang.Object)[1];

        $r31 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r30[0] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot create instance of %s", $r30);

        specialinvoke $r29.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r33, r36);

        throw $r29;

     label5:
        $r17 := @caughtexception;

        r37 = $r17;

        $r18 = new android.support.test.espresso.remote.RemoteProtocolException;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r19[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Method not accessible: %s", $r19);

        specialinvoke $r18.<android.support.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r37);

        throw $r18;

     label6:
        $r22 := @caughtexception;

        r3 = $r22;

     label7:
        $r23 = newarray (java.lang.Object)[3];

        $r24 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.Class clazz>;

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getSimpleName()>();

        $r23[0] = $r25;

        $r26 = r0.<android.support.test.espresso.remote.MethodInvocation: java.lang.String methodName>;

        $r23[1] = $r26;

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);

        $r23[2] = $r27;

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,java.lang.String,java.lang.Object[])>("MethodInvocation", "%s.invokeMethodExplosively(%s,%s)", $r23);

        throw r3;

     label8:
        return r34;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.SecurityException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label7 with label6;
    }

    static void <clinit>()
    {
        android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder $r0, $r1;
        android.support.test.espresso.core.internal.deps.guava.cache.Cache $r2;

        $r0 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder: android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder newBuilder()>();

        $r1 = virtualinvoke $r0.<android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder: android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder maximumSize(long)>(256L);

        $r2 = virtualinvoke $r1.<android.support.test.espresso.core.internal.deps.guava.cache.CacheBuilder: android.support.test.espresso.core.internal.deps.guava.cache.Cache build()>();

        <android.support.test.espresso.remote.MethodInvocation: android.support.test.espresso.core.internal.deps.guava.cache.Cache methodCache> = $r2;

        return;
    }

android.support.test.espresso.remote.MethodInvocation$MethodKey
<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>
<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>
<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>
    public void <init>(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Class[] r3;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type> = r1;

        r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName> = r2;

        r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes> = r3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.String $r7, $r8;
        java.lang.Class[] $r9, $r10;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if null == r1 goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.support.test.espresso.remote.MethodInvocation$MethodKey) r1;

        $r6 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        $r5 = r2.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $r7 = r2.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $r9 = r2.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r10, $r9);

        return $z2;
    }

    public int hashCode()
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.Class[] $r3;

        r0 := @this: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        i4 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = 31 * i4;

        $r2 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r3 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r3);

        i6 = $i2 + $i3;

        return i6;
    }

    static java.lang.Class access$000(android.support.test.espresso.remote.MethodInvocation$MethodKey)
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class $r1;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class type>;

        return $r1;
    }

    static java.lang.String access$100(android.support.test.espresso.remote.MethodInvocation$MethodKey)
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.String $r1;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.String methodName>;

        return $r1;
    }

    static java.lang.Class[] access$200(android.support.test.espresso.remote.MethodInvocation$MethodKey)
    {
        android.support.test.espresso.remote.MethodInvocation$MethodKey r0;
        java.lang.Class[] $r1;

        r0 := @parameter0: android.support.test.espresso.remote.MethodInvocation$MethodKey;

        $r1 = r0.<android.support.test.espresso.remote.MethodInvocation$MethodKey: java.lang.Class[] parameterTypes>;

        return $r1;
    }

