android.support.constraint.utils.ImageFilterView
<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>
<android.support.constraint.utils.ImageFilterView: boolean mOverlay>
<android.support.constraint.utils.ImageFilterView: float mCrossfade>
<android.support.constraint.utils.ImageFilterView: float mRoundPercent>
<android.support.constraint.utils.ImageFilterView: float mRound>
<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>
<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider>
<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>
<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers>
<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>
    public void <init>(android.content.Context)
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.content.Context r1;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r2;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void <init>(android.content.Context)>(r1);

        $r2 = new android.support.constraint.utils.ImageFilterView$ImageMatrix;

        specialinvoke $r2.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix> = $r2;

        r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay> = 1;

        r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRound> = #NaNF;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.support.constraint.utils.ImageFilterView$ImageMatrix;

        specialinvoke $r3.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix> = $r3;

        r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay> = 1;

        r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRound> = #NaNF;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.support.constraint.utils.ImageFilterView$ImageMatrix;

        specialinvoke $r3.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix> = $r3;

        r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay> = 1;

        r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent> = 0.0F;

        r0.<android.support.constraint.utils.ImageFilterView: float mRound> = #NaNF;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void init(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.content.Context r1, $r5;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.drawable.Drawable r4, $r9, $r14;
        int[] $r6;
        android.graphics.drawable.Drawable[] $r7, $r8, $r10, $r12;
        android.graphics.drawable.LayerDrawable $r11, $r13, $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0, $z1;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        if r2 == null goto label10;

        $r5 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: android.content.Context getContext()>();

        $r6 = <android.support.constraint.R$styleable: int[] ImageFilterView>;

        r3 = virtualinvoke $r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getIndexCount()>();

        $i2 = <android.support.constraint.R$styleable: int ImageFilterView_altSrc>;

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i2);

        i13 = 0;

     label01:
        if i13 >= i0 goto label09;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getIndex(int)>(i13);

        $i4 = <android.support.constraint.R$styleable: int ImageFilterView_crossfade>;

        if i1 != $i4 goto label02;

        $f7 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade> = $f7;

        goto label08;

     label02:
        $i5 = <android.support.constraint.R$styleable: int ImageFilterView_warmth>;

        if i1 != $i5 goto label03;

        $f6 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setWarmth(float)>($f6);

        goto label08;

     label03:
        $i6 = <android.support.constraint.R$styleable: int ImageFilterView_saturation>;

        if i1 != $i6 goto label04;

        $f5 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setSaturation(float)>($f5);

        goto label08;

     label04:
        $i7 = <android.support.constraint.R$styleable: int ImageFilterView_contrast>;

        if i1 != $i7 goto label05;

        $f4 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setContrast(float)>($f4);

        goto label08;

     label05:
        $i8 = <android.support.constraint.R$styleable: int ImageFilterView_round>;

        if i1 != $i8 goto label06;

        $i12 = <android.os.Build$VERSION: int SDK_INT>;

        if $i12 < 21 goto label08;

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(i1, 0.0F);

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setRound(float)>($f3);

        goto label08;

     label06:
        $i9 = <android.support.constraint.R$styleable: int ImageFilterView_roundPercent>;

        if i1 != $i9 goto label07;

        $i11 = <android.os.Build$VERSION: int SDK_INT>;

        if $i11 < 21 goto label08;

        $f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, 0.0F);

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setRoundPercent(float)>($f2);

        goto label08;

     label07:
        $i10 = <android.support.constraint.R$styleable: int ImageFilterView_overlay>;

        if i1 != $i10 goto label08;

        $z0 = r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView: void setOverlay(boolean)>($z1);

     label08:
        i13 = i13 + 1;

        goto label01;

     label09:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        if r4 == null goto label10;

        $r7 = newarray (android.graphics.drawable.Drawable)[2];

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers> = $r7;

        $r8 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers>;

        $r9 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable getDrawable()>();

        $r8[0] = $r9;

        $r10 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers>;

        $r10[1] = r4;

        $r11 = new android.graphics.drawable.LayerDrawable;

        $r12 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers>;

        specialinvoke $r11.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r12);

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer> = $r11;

        $r13 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>;

        $r14 = virtualinvoke $r13.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade>;

        $f1 = 255.0F * $f0;

        $i3 = (int) $f1;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

        $r15 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r15);

     label10:
        return;
    }

    private void setOverlay(boolean)
    {
        android.support.constraint.utils.ImageFilterView r0;
        boolean z0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        z0 := @parameter0: boolean;

        r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay> = z0;

        return;
    }

    public void setSaturation(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation> = f0;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getSaturation()
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation>;

        return $f0;
    }

    public void setContrast(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast> = f0;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getContrast()
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>;

        return $f0;
    }

    public void setWarmth(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth> = f0;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getWarmth()
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth>;

        return $f0;
    }

    public void setCrossfade(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable[] $r1;
        boolean $z0;
        android.graphics.drawable.LayerDrawable $r2, $r4, $r5;
        android.graphics.drawable.Drawable $r3, $r6;
        int $i0, $i1;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade> = f0;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.Drawable[] mLayers>;

        if $r1 == null goto label2;

        $z0 = r0.<android.support.constraint.utils.ImageFilterView: boolean mOverlay>;

        if $z0 != 0 goto label1;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $f3 = r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade>;

        $f4 = 1.0F - $f3;

        $f5 = 255.0F * $f4;

        $i1 = (int) $f5;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setAlpha(int)>($i1);

     label1:
        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $f1 = r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade>;

        $f2 = 255.0F * $f1;

        $i0 = (int) $f2;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        $r4 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.drawable.LayerDrawable mLayer>;

        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

     label2:
        return;
    }

    public float getCrossfade()
    {
        android.support.constraint.utils.ImageFilterView r0;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mCrossfade>;

        return $f0;
    }

    public void setBrightness(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1, $r2;
        android.widget.ImageView r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness> = f0;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        r3 = (android.widget.ImageView) r0;

        virtualinvoke $r2.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void updateMatrix(android.widget.ImageView)>(r3);

        return;
    }

    public float getBrightness()
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.support.constraint.utils.ImageFilterView$ImageMatrix $r1;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.support.constraint.utils.ImageFilterView$ImageMatrix mImageMatrix>;

        $f0 = $r1.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness>;

        return $f0;
    }

    public void setRoundPercent(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean z0, $z1;
        int i0, i1, $i4, $i5, $i6, $i7;
        byte $b2, $b3;
        android.graphics.Path $r1, $r7, $r9, $r10;
        android.graphics.RectF $r2, $r6, $r8, $r11;
        android.view.ViewOutlineProvider $r3, $r5;
        android.support.constraint.utils.ImageFilterView$1 $r4;
        android.graphics.Path$Direction $r12;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $f2 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        $b2 = $f2 cmpl f0;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent> = f0;

        $f3 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 == 0 goto label7;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        if $r1 != null goto label3;

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath> = $r7;

     label3:
        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        if $r2 != null goto label4;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect> = $r6;

     label4:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label6;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider>;

        if $r3 != null goto label5;

        $r4 = new android.support.constraint.utils.ImageFilterView$1;

        specialinvoke $r4.<android.support.constraint.utils.ImageFilterView$1: void <init>(android.support.constraint.utils.ImageFilterView)>(r0);

        r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider> = $r4;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider>;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setOutlineProvider(android.view.ViewOutlineProvider)>($r5);

     label5:
        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setClipToOutline(boolean)>(1);

     label6:
        i0 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: int getWidth()>();

        i1 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: int getHeight()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f4 = (float) $i7;

        $f5 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        $f6 = $f4 * $f5;

        f1 = $f6 / 2.0F;

        $r8 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        $f7 = (float) i0;

        $f8 = (float) i1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f7, $f8);

        $r9 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $r10 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r10.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>($r11, f1, f1, $r12);

        goto label8;

     label7:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label8;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setClipToOutline(boolean)>(0);

     label8:
        if z0 == 0 goto label9;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 21 goto label9;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void invalidateOutline()>();

     label9:
        return;
    }

    public void setRound(float)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7;
        int i0, i1, $i4, $i5, $i6;
        boolean $z0, $z1, z2;
        byte $b2, $b3;
        android.graphics.Path $r1, $r7, $r9, $r10;
        android.graphics.RectF $r2, $r6, $r8, $r11;
        android.view.ViewOutlineProvider $r3, $r5;
        android.support.constraint.utils.ImageFilterView$2 $r4;
        android.graphics.Path$Direction $r12;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label01;

        r0.<android.support.constraint.utils.ImageFilterView: float mRound> = f0;

        f3 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent> = -1.0F;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setRoundPercent(float)>(f3);

        return;

     label01:
        $f1 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        $b2 = $f1 cmpl f0;

        if $b2 == 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z2 = $z1;

        r0.<android.support.constraint.utils.ImageFilterView: float mRound> = f0;

        $f2 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        $b3 = $f2 cmpl 0.0F;

        if $b3 == 0 goto label08;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        if $r1 != null goto label04;

        $r7 = new android.graphics.Path;

        specialinvoke $r7.<android.graphics.Path: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath> = $r7;

     label04:
        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        if $r2 != null goto label05;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect> = $r6;

     label05:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label07;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider>;

        if $r3 != null goto label06;

        $r4 = new android.support.constraint.utils.ImageFilterView$2;

        specialinvoke $r4.<android.support.constraint.utils.ImageFilterView$2: void <init>(android.support.constraint.utils.ImageFilterView)>(r0);

        r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider> = $r4;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView: android.view.ViewOutlineProvider mViewOutlineProvider>;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setOutlineProvider(android.view.ViewOutlineProvider)>($r5);

     label06:
        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setClipToOutline(boolean)>(1);

     label07:
        i0 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: int getWidth()>();

        i1 = virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: int getHeight()>();

        $r8 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        $f4 = (float) i0;

        $f5 = (float) i1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f4, $f5);

        $r9 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $r10 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.RectF mRect>;

        $f6 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        $f7 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r10.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>($r11, $f6, $f7, $r12);

        goto label09;

     label08:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label09;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void setClipToOutline(boolean)>(0);

     label09:
        if z2 == 0 goto label10;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 21 goto label10;

        virtualinvoke r0.<android.support.constraint.utils.ImageFilterView: void invalidateOutline()>();

     label10:
        return;
    }

    public float getRoundPercent()
    {
        android.support.constraint.utils.ImageFilterView r0;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        return $f0;
    }

    public float getRound()
    {
        android.support.constraint.utils.ImageFilterView r0;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.constraint.utils.ImageFilterView r0;
        android.graphics.Canvas r1;
        int $i0;
        float $f0;
        byte $b1;
        android.graphics.Path $r2, $r3;
        boolean z1;

        r0 := @this: android.support.constraint.utils.ImageFilterView;

        r1 := @parameter0: android.graphics.Canvas;

        z1 = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        if $r2 == null goto label1;

        z1 = 1;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r3 = r0.<android.support.constraint.utils.ImageFilterView: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r3);

     label1:
        specialinvoke r0.<android.support.v7.widget.AppCompatImageView: void draw(android.graphics.Canvas)>(r1);

        if z1 == 0 goto label2;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label2:
        return;
    }

    static float access$000(android.support.constraint.utils.ImageFilterView)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float $f0;

        r0 := @parameter0: android.support.constraint.utils.ImageFilterView;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mRoundPercent>;

        return $f0;
    }

    static float access$100(android.support.constraint.utils.ImageFilterView)
    {
        android.support.constraint.utils.ImageFilterView r0;
        float $f0;

        r0 := @parameter0: android.support.constraint.utils.ImageFilterView;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView: float mRound>;

        return $f0;
    }

android.support.constraint.utils.ImageFilterView$1
<android.support.constraint.utils.ImageFilterView$1: android.support.constraint.utils.ImageFilterView this$0>
    void <init>(android.support.constraint.utils.ImageFilterView)
    {
        android.support.constraint.utils.ImageFilterView$1 r0;
        android.support.constraint.utils.ImageFilterView r1;

        r0 := @this: android.support.constraint.utils.ImageFilterView$1;

        r1 := @parameter0: android.support.constraint.utils.ImageFilterView;

        r0.<android.support.constraint.utils.ImageFilterView$1: android.support.constraint.utils.ImageFilterView this$0> = r1;

        specialinvoke r0.<android.view.ViewOutlineProvider: void <init>()>();

        return;
    }

    public void getOutline(android.view.View, android.graphics.Outline)
    {
        android.support.constraint.utils.ImageFilterView$1 r0;
        android.view.View r1;
        android.graphics.Outline r2;
        int i0, i1, $i2;
        float f0, $f1, $f2, $f3;
        android.support.constraint.utils.ImageFilterView $r3, $r4, $r5;

        r0 := @this: android.support.constraint.utils.ImageFilterView$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Outline;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView$1: android.support.constraint.utils.ImageFilterView this$0>;

        i0 = virtualinvoke $r3.<android.support.constraint.utils.ImageFilterView: int getWidth()>();

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$1: android.support.constraint.utils.ImageFilterView this$0>;

        i1 = virtualinvoke $r4.<android.support.constraint.utils.ImageFilterView: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f1 = (float) $i2;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$1: android.support.constraint.utils.ImageFilterView this$0>;

        $f2 = staticinvoke <android.support.constraint.utils.ImageFilterView: float access$000(android.support.constraint.utils.ImageFilterView)>($r5);

        $f3 = $f1 * $f2;

        f0 = $f3 / 2.0F;

        virtualinvoke r2.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(0, 0, i0, i1, f0);

        return;
    }

android.support.constraint.utils.ImageFilterView$2
<android.support.constraint.utils.ImageFilterView$2: android.support.constraint.utils.ImageFilterView this$0>
    void <init>(android.support.constraint.utils.ImageFilterView)
    {
        android.support.constraint.utils.ImageFilterView$2 r0;
        android.support.constraint.utils.ImageFilterView r1;

        r0 := @this: android.support.constraint.utils.ImageFilterView$2;

        r1 := @parameter0: android.support.constraint.utils.ImageFilterView;

        r0.<android.support.constraint.utils.ImageFilterView$2: android.support.constraint.utils.ImageFilterView this$0> = r1;

        specialinvoke r0.<android.view.ViewOutlineProvider: void <init>()>();

        return;
    }

    public void getOutline(android.view.View, android.graphics.Outline)
    {
        android.support.constraint.utils.ImageFilterView$2 r0;
        android.view.View r1;
        android.graphics.Outline r2;
        int i0, i1;
        android.support.constraint.utils.ImageFilterView $r3, $r4, $r5;
        float $f0;

        r0 := @this: android.support.constraint.utils.ImageFilterView$2;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Outline;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView$2: android.support.constraint.utils.ImageFilterView this$0>;

        i0 = virtualinvoke $r3.<android.support.constraint.utils.ImageFilterView: int getWidth()>();

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$2: android.support.constraint.utils.ImageFilterView this$0>;

        i1 = virtualinvoke $r4.<android.support.constraint.utils.ImageFilterView: int getHeight()>();

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$2: android.support.constraint.utils.ImageFilterView this$0>;

        $f0 = staticinvoke <android.support.constraint.utils.ImageFilterView: float access$100(android.support.constraint.utils.ImageFilterView)>($r5);

        virtualinvoke r2.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(0, 0, i0, i1, $f0);

        return;
    }

android.support.constraint.utils.ImageFilterView$ImageMatrix
<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>
<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth>
    void <init>()
    {
        android.support.constraint.utils.ImageFilterView$ImageMatrix r0;
        float[] $r1;
        android.graphics.ColorMatrix $r2, $r3;

        r0 := @this: android.support.constraint.utils.ImageFilterView$ImageMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[20];

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m> = $r1;

        $r2 = new android.graphics.ColorMatrix;

        specialinvoke $r2.<android.graphics.ColorMatrix: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix> = $r2;

        $r3 = new android.graphics.ColorMatrix;

        specialinvoke $r3.<android.graphics.ColorMatrix: void <init>()>();

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix> = $r3;

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness> = 1.0F;

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation> = 1.0F;

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast> = 1.0F;

        r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth> = 1.0F;

        return;
    }

    private void saturation(float)
    {
        android.support.constraint.utils.ImageFilterView$ImageMatrix r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: android.support.constraint.utils.ImageFilterView$ImageMatrix;

        f0 := @parameter0: float;

        f1 = 0.2999F;

        f2 = 0.587F;

        f3 = 0.114F;

        f4 = f0;

        f5 = 1.0F - f4;

        f6 = f1 * f5;

        f7 = f2 * f5;

        f8 = f3 * f5;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $f9 = f6 + f4;

        $r1[0] = $f9;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r2[1] = f7;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r3[2] = f8;

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r4[3] = 0.0F;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r5[4] = 0.0F;

        $r6 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r6[5] = f6;

        $r7 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $f10 = f7 + f4;

        $r7[6] = $f10;

        $r8 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r8[7] = f8;

        $r9 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r9[8] = 0.0F;

        $r10 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r10[9] = 0.0F;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r11[10] = f6;

        $r12 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r12[11] = f7;

        $r13 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $f11 = f8 + f4;

        $r13[12] = $f11;

        $r14 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r14[13] = 0.0F;

        $r15 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r15[14] = 0.0F;

        $r16 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r16[15] = 0.0F;

        $r17 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r17[16] = 0.0F;

        $r18 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r18[17] = 0.0F;

        $r19 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r19[18] = 1.0F;

        $r20 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r20[19] = 0.0F;

        return;
    }

    private void warmth(float)
    {
        android.support.constraint.utils.ImageFilterView$ImageMatrix r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20, f21, f22, $f23, f24, $f25, f26, $f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, $f37, f38, $f39, f40, $f41, f42, f43, f44, f45;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: android.support.constraint.utils.ImageFilterView$ImageMatrix;

        f16 := @parameter0: float;

        f0 = 5000.0F;

        $b0 = f16 cmpg 0.0F;

        if $b0 > 0 goto label01;

        f16 = 0.01F;

     label01:
        f17 = f0 / f16;

        f18 = f17 / 100.0F;

        $b1 = f18 cmpl 66.0F;

        if $b1 <= 0 goto label02;

        f19 = f18 - 60.0F;

        $d12 = (double) f19;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, -0.13320475816726685);

        $f14 = (float) $d13;

        f20 = 329.69873F * $f14;

        $d14 = (double) f19;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 0.07551484555006027);

        $f15 = (float) $d15;

        f21 = 288.12216F * $f15;

        goto label03;

     label02:
        $d0 = (double) f18;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $f2 = (float) $d1;

        $f3 = 99.4708F * $f2;

        f21 = $f3 - 161.11957F;

        f20 = 255.0F;

     label03:
        $b2 = f18 cmpg 66.0F;

        if $b2 >= 0 goto label05;

        $b5 = f18 cmpl 19.0F;

        if $b5 <= 0 goto label04;

        $f11 = f18 - 10.0F;

        $d10 = (double) $f11;

        $d11 = staticinvoke <java.lang.Math: double log(double)>($d10);

        $f12 = (float) $d11;

        $f13 = 138.51773F * $f12;

        f22 = $f13 - 305.0448F;

        goto label06;

     label04:
        f22 = 0.0F;

        goto label06;

     label05:
        f22 = 255.0F;

     label06:
        $f23 = staticinvoke <java.lang.Math: float max(float,float)>(f20, 0.0F);

        f24 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f23);

        $f25 = staticinvoke <java.lang.Math: float max(float,float)>(f21, 0.0F);

        f26 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f25);

        $f27 = staticinvoke <java.lang.Math: float max(float,float)>(f22, 0.0F);

        f28 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f27);

        f29 = f24;

        f30 = f26;

        f31 = f28;

        f32 = f0;

        f33 = f32 / 100.0F;

        $b6 = f33 cmpl 66.0F;

        if $b6 <= 0 goto label07;

        f1 = f33 - 60.0F;

        $d6 = (double) f1;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, -0.13320475816726685);

        $f9 = (float) $d7;

        f34 = 329.69873F * $f9;

        $d8 = (double) f1;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 0.07551484555006027);

        $f10 = (float) $d9;

        f35 = 288.12216F * $f10;

        goto label08;

     label07:
        $d2 = (double) f33;

        $d3 = staticinvoke <java.lang.Math: double log(double)>($d2);

        $f4 = (float) $d3;

        $f5 = 99.4708F * $f4;

        f35 = $f5 - 161.11957F;

        f34 = 255.0F;

     label08:
        $b3 = f33 cmpg 66.0F;

        if $b3 >= 0 goto label10;

        $b4 = f33 cmpl 19.0F;

        if $b4 <= 0 goto label09;

        $f6 = f33 - 10.0F;

        $d4 = (double) $f6;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $f7 = (float) $d5;

        $f8 = 138.51773F * $f7;

        f36 = $f8 - 305.0448F;

        goto label11;

     label09:
        f36 = 0.0F;

        goto label11;

     label10:
        f36 = 255.0F;

     label11:
        $f37 = staticinvoke <java.lang.Math: float max(float,float)>(f34, 0.0F);

        f38 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f37);

        $f39 = staticinvoke <java.lang.Math: float max(float,float)>(f35, 0.0F);

        f40 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f39);

        $f41 = staticinvoke <java.lang.Math: float max(float,float)>(f36, 0.0F);

        f42 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f41);

        f43 = f29 / f38;

        f44 = f30 / f40;

        f45 = f31 / f42;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r1[0] = f43;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r2[1] = 0.0F;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r3[2] = 0.0F;

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r4[3] = 0.0F;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r5[4] = 0.0F;

        $r6 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r6[5] = 0.0F;

        $r7 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r7[6] = f44;

        $r8 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r8[7] = 0.0F;

        $r9 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r9[8] = 0.0F;

        $r10 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r10[9] = 0.0F;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r11[10] = 0.0F;

        $r12 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r12[11] = 0.0F;

        $r13 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r13[12] = f45;

        $r14 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r14[13] = 0.0F;

        $r15 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r15[14] = 0.0F;

        $r16 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r16[15] = 0.0F;

        $r17 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r17[16] = 0.0F;

        $r18 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r18[17] = 0.0F;

        $r19 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r19[18] = 1.0F;

        $r20 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r20[19] = 0.0F;

        return;
    }

    private void brightness(float)
    {
        android.support.constraint.utils.ImageFilterView$ImageMatrix r0;
        float f0;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: android.support.constraint.utils.ImageFilterView$ImageMatrix;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r1[0] = f0;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r2[1] = 0.0F;

        $r3 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r3[2] = 0.0F;

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r4[3] = 0.0F;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r5[4] = 0.0F;

        $r6 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r6[5] = 0.0F;

        $r7 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r7[6] = f0;

        $r8 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r8[7] = 0.0F;

        $r9 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r9[8] = 0.0F;

        $r10 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r10[9] = 0.0F;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r11[10] = 0.0F;

        $r12 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r12[11] = 0.0F;

        $r13 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r13[12] = f0;

        $r14 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r14[13] = 0.0F;

        $r15 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r15[14] = 0.0F;

        $r16 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r16[15] = 0.0F;

        $r17 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r17[16] = 0.0F;

        $r18 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r18[17] = 0.0F;

        $r19 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r19[18] = 1.0F;

        $r20 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        $r20[19] = 0.0F;

        return;
    }

    void updateMatrix(android.widget.ImageView)
    {
        android.support.constraint.utils.ImageFilterView$ImageMatrix r0;
        android.widget.ImageView r1;
        android.graphics.ColorMatrix $r2, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b0, $b1, $b2, $b3;
        android.graphics.ColorMatrixColorFilter $r3;
        float[] $r5, $r9, $r16;
        boolean z0;

        r0 := @this: android.support.constraint.utils.ImageFilterView$ImageMatrix;

        r1 := @parameter0: android.widget.ImageView;

        $r2 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        virtualinvoke $r2.<android.graphics.ColorMatrix: void reset()>();

        z0 = 0;

        $f0 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        $f9 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mSaturation>;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void saturation(float)>($f9);

        $r17 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        $r16 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        virtualinvoke $r17.<android.graphics.ColorMatrix: void set(float[])>($r16);

        z0 = 1;

     label1:
        $f1 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>;

        $b1 = $f1 cmpl 1.0F;

        if $b1 == 0 goto label2;

        $r13 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        $f8 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>;

        $f7 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>;

        $f6 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mContrast>;

        virtualinvoke $r13.<android.graphics.ColorMatrix: void setScale(float,float,float,float)>($f8, $f7, $f6, 1.0F);

        $r15 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        $r14 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        virtualinvoke $r15.<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>($r14);

        z0 = 1;

     label2:
        $f2 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth>;

        $b2 = $f2 cmpl 1.0F;

        if $b2 == 0 goto label3;

        $f5 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mWarmth>;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void warmth(float)>($f5);

        $r10 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        $r9 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        virtualinvoke $r10.<android.graphics.ColorMatrix: void set(float[])>($r9);

        $r12 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        $r11 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        virtualinvoke $r12.<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>($r11);

        z0 = 1;

     label3:
        $f3 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness>;

        $b3 = $f3 cmpl 1.0F;

        if $b3 == 0 goto label4;

        $f4 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float mBrightness>;

        specialinvoke r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: void brightness(float)>($f4);

        $r6 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        $r5 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: float[] m>;

        virtualinvoke $r6.<android.graphics.ColorMatrix: void set(float[])>($r5);

        $r8 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        $r7 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mTmpColorMatrix>;

        virtualinvoke $r8.<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>($r7);

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        $r3 = new android.graphics.ColorMatrixColorFilter;

        $r4 = r0.<android.support.constraint.utils.ImageFilterView$ImageMatrix: android.graphics.ColorMatrix mColorMatrix>;

        specialinvoke $r3.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>($r4);

        virtualinvoke r1.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>($r3);

        goto label6;

     label5:
        virtualinvoke r1.<android.widget.ImageView: void clearColorFilter()>();

     label6:
        return;
    }

