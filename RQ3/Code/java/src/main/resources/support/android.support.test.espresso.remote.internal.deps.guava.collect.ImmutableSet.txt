android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet
<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList asList>
    public static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet $r0;

        $r0 = <android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet EMPTY>;

        return $r0;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of(java.lang.Object)
    {
        java.lang.Object r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r3, r4;
        java.lang.Object[] $r5;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r5 = newarray (java.lang.Object)[5];

        $r5[0] = r0;

        $r5[1] = r1;

        $r5[2] = r2;

        $r5[3] = r3;

        $r5[4] = r4;

        $r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int,java.lang.Object[])>(5, $r5);

        return $r6;
    }

    public static transient android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object r0, r1, r2, r3, r4, r5;
        java.lang.Object[] r6, r7;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object[];

        $i1 = lengthof r6;

        if $i1 > 2147483641 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "the total number of elements must fit in an int");

        b0 = 6;

        $i2 = lengthof r6;

        $i3 = 6 + $i2;

        r7 = newarray (java.lang.Object)[$i3];

        r7[0] = r0;

        r7[1] = r1;

        r7[2] = r2;

        r7[3] = r3;

        r7[4] = r4;

        r7[5] = r5;

        $i4 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r7, 6, $i4);

        $i5 = lengthof r7;

        $r8 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int,java.lang.Object[])>($i5, r7);

        return $r8;
    }

    private static transient android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int, java.lang.Object[])
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        java.lang.Object[] r0, r1, $r12, r13;
        java.lang.Object r2, r3, $r9, r10, r11;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r4, $r5, $r7;
        boolean $z0, $z1;
        android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet $r6;
        android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet $r8;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        lookupswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label03;
        };

     label01:
        $r5 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of()>();

        return $r5;

     label02:
        r10 = r0[0];

        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of(java.lang.Object)>(r10);

        return $r4;

     label03:
        i8 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: int chooseTableSize(int)>(i0);

        r1 = newarray (java.lang.Object)[i8];

        i1 = i8 - 1;

        i9 = 0;

        i10 = 0;

        i11 = 0;

     label04:
        if i11 >= i0 goto label09;

        $r9 = r0[i11];

        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>($r9, i11);

        i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        i12 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.Hashing: int smear(int)>(i2);

     label05:
        i3 = i12 & i1;

        r3 = r1[i3];

        if r3 != null goto label06;

        $i7 = i10;

        i10 = i10 + 1;

        r0[$i7] = r2;

        r1[i3] = r2;

        i9 = i9 + i2;

        goto label08;

     label06:
        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label07;

        goto label08;

     label07:
        i12 = i12 + 1;

        goto label05;

     label08:
        i11 = i11 + 1;

        goto label04;

     label09:
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r0, i10, i0, null);

        if i10 != 1 goto label10;

        r11 = r0[0];

        $r8 = new android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet;

        specialinvoke $r8.<android.support.test.espresso.remote.internal.deps.guava.collect.SingletonImmutableSet: void <init>(java.lang.Object,int)>(r11, i9);

        return $r8;

     label10:
        $i4 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: int chooseTableSize(int)>(i10);

        $i5 = i8 / 2;

        if $i4 >= $i5 goto label11;

        $r7 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int,java.lang.Object[])>(i10, r0);

        return $r7;

     label11:
        $i6 = lengthof r0;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: boolean shouldTrim(int,int)>(i10, $i6);

        if $z0 == 0 goto label12;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, i10);

        goto label13;

     label12:
        $r12 = r0;

     label13:
        r13 = $r12;

        $r6 = new android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet;

        specialinvoke $r6.<android.support.test.espresso.remote.internal.deps.guava.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int,int)>(r13, i9, r1, i1, i10);

        return $r6;
    }

    private static boolean shouldTrim(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i1 >> 1;

        $i2 = i1 >> 2;

        $i4 = $i3 + $i2;

        if i0 >= $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static int chooseTableSize(int)
    {
        int $i0, $i1, i3, i4, i5;
        double $d0, $d1, $d2;
        byte $b2;
        boolean $z0;

        i3 := @parameter0: int;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, 2);

        if i4 >= 751619276 goto label3;

        $i0 = i4 - 1;

        $i1 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        i5 = $i1 << 1;

     label1:
        $d0 = (double) i5;

        $d2 = $d0 * 0.7;

        $d1 = (double) i4;

        $b2 = $d2 cmpg $d1;

        if $b2 >= 0 goto label2;

        i5 = i5 << 1;

        goto label1;

     label2:
        return i5;

     label3:
        if i4 >= 1073741824 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "collection too large");

        return 1073741824;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet copyOf(java.lang.Object[])
    {
        java.lang.Object[] r0, $r5;
        int $i0, $i1;
        java.lang.Object $r1, $r4;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r2, $r3, $r6;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of()>();

        return $r3;

     label2:
        $r1 = r0[0];

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet of(java.lang.Object)>($r1);

        return $r2;

     label3:
        $i1 = lengthof r0;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (java.lang.Object[]) $r4;

        $r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int,java.lang.Object[])>($i1, $r5);

        return $r6;
    }

    void <init>()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableCollection: void <init>()>();

        return;
    }

    boolean isHashCodeFast()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: boolean isHashCodeFast()>();

        if $z1 == 0 goto label2;

        $r2 = (android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet) r1;

        $z2 = virtualinvoke $r2.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: boolean isHashCodeFast()>();

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: int hashCode()>();

        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $z3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.Sets: boolean equalsImpl(java.util.Set,java.lang.Object)>(r0, r1);

        return $z3;
    }

    public int hashCode()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        $i0 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.Sets: int hashCodeImpl(java.util.Set)>(r0);

        return $i0;
    }

<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator iterator()>
    public android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList asList()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList r1, $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList asList>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList createAsList()>();

        r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList asList> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList createAsList()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;
        java.lang.Object[] $r1;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: java.lang.Object[] toArray()>();

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableList asImmutableList(java.lang.Object[])>($r1);

        return $r2;
    }

    java.lang.Object writeReplace()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$SerializedForm $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        $r1 = new android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$SerializedForm;

        $r2 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: java.lang.Object[] toArray()>();

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$Builder builder()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$Builder $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$Builder;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet$Builder: void <init>()>();

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    static boolean access$000(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: boolean shouldTrim(int,int)>(i0, i1);

        return $z0;
    }

    static android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet access$100(int, java.lang.Object[])
    {
        int i0;
        java.lang.Object[] r0;
        android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet: android.support.test.espresso.remote.internal.deps.guava.collect.ImmutableSet construct(int,java.lang.Object[])>(i0, r0);

        return $r1;
    }

