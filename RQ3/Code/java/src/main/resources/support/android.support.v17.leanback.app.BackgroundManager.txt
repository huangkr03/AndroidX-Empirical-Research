android.support.v17.leanback.app.BackgroundManager
<android.support.v17.leanback.app.BackgroundManager: java.lang.String TAG>
<android.support.v17.leanback.app.BackgroundManager: boolean DEBUG>
<android.support.v17.leanback.app.BackgroundManager: int FULL_ALPHA>
<android.support.v17.leanback.app.BackgroundManager: int CHANGE_BG_DELAY_MS>
<android.support.v17.leanback.app.BackgroundManager: int FADE_DURATION>
<android.support.v17.leanback.app.BackgroundManager: java.lang.String FRAGMENT_TAG>
<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>
<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler>
<android.support.v17.leanback.app.BackgroundManager: android.view.View mBgView>
<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>
<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId>
<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundFragment mFragmentState>
<android.support.v17.leanback.app.BackgroundManager: boolean mAutoReleaseOnStop>
<android.support.v17.leanback.app.BackgroundManager: int mHeightPx>
<android.support.v17.leanback.app.BackgroundManager: int mWidthPx>
<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor>
<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable>
<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>
<android.support.v17.leanback.app.BackgroundManager: long mLastSetTime>
<android.support.v17.leanback.app.BackgroundManager: android.view.animation.Interpolator mAccelerateInterpolator>
<android.support.v17.leanback.app.BackgroundManager: android.view.animation.Interpolator mDecelerateInterpolator>
<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>
<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>
<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex>
<android.support.v17.leanback.app.BackgroundManager: int mImageOutWrapperIndex>
<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>
<android.support.v17.leanback.app.BackgroundManager: boolean mChangeRunnablePending>
<android.support.v17.leanback.app.BackgroundManager: android.animation.Animator$AnimatorListener mAnimationListener>
<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator$AnimatorUpdateListener mAnimationUpdateListener>
    android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable createTranslucentLayerDrawable(android.graphics.drawable.LayerDrawable)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.LayerDrawable r1;
        int i0, $i1, i2, i3;
        android.graphics.drawable.Drawable[] r2;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3, r5;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable;

        i0 = virtualinvoke r1.<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>();

        r2 = newarray (android.graphics.drawable.Drawable)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r4 = virtualinvoke r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        r2[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        specialinvoke $r3.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void <init>(android.support.v17.leanback.app.BackgroundManager,android.graphics.drawable.Drawable[])>(r0, r2);

        r5 = $r3;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $i1 = virtualinvoke r1.<android.graphics.drawable.LayerDrawable: int getId(int)>(i3);

        virtualinvoke r5.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void setId(int,int)>(i3, $i1);

        i3 = i3 + 1;

        goto label3;

     label4:
        return r5;
    }

    android.graphics.drawable.Drawable getDefaultDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.ColorDrawable $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor>;

        if $i0 == 0 goto label1;

        $r2 = new android.graphics.drawable.ColorDrawable;

        $i1 = r0.<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor>;

        specialinvoke $r2.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i1);

        return $r2;

     label1:
        $r1 = specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable getThemeDrawable()>();

        return $r1;
    }

    private android.graphics.drawable.Drawable getThemeDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int $i0, $i1;
        android.app.Activity $r1, $r2;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r3;
        android.graphics.drawable.Drawable r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r4 = null;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId>;

        if $i0 == -1 goto label1;

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $i1 = r0.<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId>;

        r4 = virtualinvoke $r3.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable getThemeDrawable(android.content.Context,int)>($r2, $i1);

     label1:
        if r4 != null goto label2;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        r4 = staticinvoke <android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable createEmptyDrawable(android.content.Context)>($r1);

     label2:
        return r4;
    }

    public static android.support.v17.leanback.app.BackgroundManager getInstance(android.app.Activity)
    {
        android.app.Activity r0;
        android.support.v17.leanback.app.BackgroundFragment r1;
        android.support.v17.leanback.app.BackgroundManager r2, $r6;
        android.app.FragmentManager $r3;
        java.lang.String $r4;
        android.app.Fragment $r5;

        r0 := @parameter0: android.app.Activity;

        $r3 = virtualinvoke r0.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r4 = <android.support.v17.leanback.app.BackgroundManager: java.lang.String FRAGMENT_TAG>;

        $r5 = virtualinvoke $r3.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>($r4);

        r1 = (android.support.v17.leanback.app.BackgroundFragment) $r5;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.support.v17.leanback.app.BackgroundFragment: android.support.v17.leanback.app.BackgroundManager getBackgroundManager()>();

        if r2 == null goto label1;

        return r2;

     label1:
        $r6 = new android.support.v17.leanback.app.BackgroundManager;

        specialinvoke $r6.<android.support.v17.leanback.app.BackgroundManager: void <init>(android.app.Activity)>(r0);

        return $r6;
    }

    private void <init>(android.app.Activity)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.app.Activity r1, $r7, $r10, $r15, $r17;
        android.support.v4.view.animation.FastOutLinearInInterpolator r2, r31;
        android.content.res.TypedArray r3;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r6;
        android.content.res.Resources $r8, $r11;
        android.util.DisplayMetrics $r9, $r12;
        int $i0, $i1, $i2, $i3;
        android.view.animation.Interpolator $r16, $r18;
        int[] $r19, $r27;
        android.animation.ValueAnimator $r20, $r22, $r24, $r25;
        android.animation.Animator$AnimatorListener $r21;
        android.animation.ValueAnimator$AnimatorUpdateListener $r23;
        android.content.res.Resources$Theme $r26;
        android.support.v17.leanback.app.BackgroundManager$1 r28;
        android.support.v17.leanback.app.BackgroundManager$2 r29;
        android.os.Handler r30;
        android.animation.TimeInterpolator r32;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAutoReleaseOnStop> = 1;

        r28 = new android.support.v17.leanback.app.BackgroundManager$1;

        specialinvoke r28.<android.support.v17.leanback.app.BackgroundManager$1: void <init>(android.support.v17.leanback.app.BackgroundManager)>(r0);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.Animator$AnimatorListener mAnimationListener> = r28;

        r29 = new android.support.v17.leanback.app.BackgroundManager$2;

        specialinvoke r29.<android.support.v17.leanback.app.BackgroundManager$2: void <init>(android.support.v17.leanback.app.BackgroundManager)>(r0);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator$AnimatorUpdateListener mAnimationUpdateListener> = r29;

        r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext> = r1;

        $r6 = staticinvoke <android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService getInstance()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService> = $r6;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r9.<android.util.DisplayMetrics: int heightPixels>;

        r0.<android.support.v17.leanback.app.BackgroundManager: int mHeightPx> = $i0;

        $r10 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r11 = virtualinvoke $r10.<android.app.Activity: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i1 = $r12.<android.util.DisplayMetrics: int widthPixels>;

        r0.<android.support.v17.leanback.app.BackgroundManager: int mWidthPx> = $i1;

        r30 = new android.os.Handler;

        specialinvoke r30.<android.os.Handler: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler> = r30;

        r31 = new android.support.v4.view.animation.FastOutLinearInInterpolator;

        specialinvoke r31.<android.support.v4.view.animation.FastOutLinearInInterpolator: void <init>()>();

        r2 = r31;

        $r15 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r16 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r15, 17432581);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.view.animation.Interpolator mAccelerateInterpolator> = $r16;

        $r17 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r18 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r17, 17432582);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.view.animation.Interpolator mDecelerateInterpolator> = $r18;

        $r19 = newarray (int)[2];

        $r19[0] = 0;

        $r19[1] = 255;

        $r20 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r19);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator> = $r20;

        $r22 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        $r21 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.Animator$AnimatorListener mAnimationListener>;

        virtualinvoke $r22.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r21);

        $r24 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        $r23 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator$AnimatorUpdateListener mAnimationUpdateListener>;

        virtualinvoke $r24.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r23);

        $r25 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        r32 = (android.animation.TimeInterpolator) r2;

        virtualinvoke $r25.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r32);

        $r26 = virtualinvoke r1.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        $r27 = newarray (int)[1];

        $r27[0] = 16842836;

        r3 = virtualinvoke $r26.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r27);

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        r0.<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId> = $i2;

        $i3 = r0.<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId>;

        if $i3 >= 0 goto label1;

     label1:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void createFragment(android.app.Activity)>(r1);

        return;
    }

    private void createFragment(android.app.Activity)
    {
        android.support.v17.leanback.app.BackgroundManager r0, $r5;
        android.app.Activity r1;
        android.app.FragmentManager $r2, $r8;
        java.lang.String $r3, $r10;
        android.app.Fragment $r4;
        java.lang.IllegalStateException $r6;
        android.support.v17.leanback.app.BackgroundFragment $r7, r12;
        android.app.FragmentTransaction $r9, $r11;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.app.Activity;

        $r2 = virtualinvoke r1.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r3 = <android.support.v17.leanback.app.BackgroundManager: java.lang.String FRAGMENT_TAG>;

        $r4 = virtualinvoke $r2.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>($r3);

        r12 = (android.support.v17.leanback.app.BackgroundFragment) $r4;

        if r12 != null goto label1;

        $r7 = new android.support.v17.leanback.app.BackgroundFragment;

        specialinvoke $r7.<android.support.v17.leanback.app.BackgroundFragment: void <init>()>();

        r12 = $r7;

        $r8 = virtualinvoke r1.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r9 = virtualinvoke $r8.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r10 = <android.support.v17.leanback.app.BackgroundManager: java.lang.String FRAGMENT_TAG>;

        $r11 = virtualinvoke $r9.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r12, $r10);

        virtualinvoke $r11.<android.app.FragmentTransaction: int commit()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r12.<android.support.v17.leanback.app.BackgroundFragment: android.support.v17.leanback.app.BackgroundManager getBackgroundManager()>();

        if $r5 == null goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Created duplicated BackgroundManager for same activity, please use getInstance() instead");

        throw $r6;

     label2:
        virtualinvoke r12.<android.support.v17.leanback.app.BackgroundFragment: void setBackgroundManager(android.support.v17.leanback.app.BackgroundManager)>(r0);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundFragment mFragmentState> = r12;

        return;
    }

    android.support.v17.leanback.app.BackgroundManager$DrawableWrapper getImageInWrapper()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r1, $r2;
        int $i0;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r3;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex>;

        $r4 = $r3[$i0];

     label2:
        return $r4;
    }

    android.support.v17.leanback.app.BackgroundManager$DrawableWrapper getImageOutWrapper()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r1, $r2;
        int $i0;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r3;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager: int mImageOutWrapperIndex>;

        $r4 = $r3[$i0];

     label2:
        return $r4;
    }

    void onActivityStart()
    {
        android.support.v17.leanback.app.BackgroundManager r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void updateImmediate()>();

        return;
    }

    void onStop()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $z0 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: boolean isAutoReleaseOnStop()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void release()>();

     label1:
        return;
    }

    void onResume()
    {
        android.support.v17.leanback.app.BackgroundManager r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void postChangeRunnable()>();

        return;
    }

    private void syncWithService()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int i0;
        android.graphics.drawable.Drawable r1, $r5, $r7;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r2, $r3;
        android.graphics.drawable.Drawable$ConstantState $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        i0 = virtualinvoke $r2.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int getColor()>();

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        r1 = virtualinvoke $r3.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable getDrawable()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor> = i0;

        if r1 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $r7 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable> = $r7;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void updateImmediate()>();

        return;
    }

    public void attach(android.view.Window)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.view.Window r1;
        android.view.View $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.view.Window;

        $r2 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void attachToViewInternal(android.view.View)>($r2);

        return;
    }

    public void setThemeDrawableResourceId(int)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        i0 := @parameter0: int;

        r0.<android.support.v17.leanback.app.BackgroundManager: int mThemeDrawableResourceId> = i0;

        return;
    }

    public void attachToView(android.view.View)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.view.View r1, $r4;
        android.app.Activity $r2;
        android.view.Window $r3;
        int $i0;
        android.graphics.drawable.ColorDrawable $r5;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void attachToViewInternal(android.view.View)>(r1);

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r5.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

     label2:
        virtualinvoke $r4.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r5);

        return;
    }

    void attachToViewInternal(android.view.View)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.view.View r1, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already attached to ");

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager: android.view.View mBgView>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        r0.<android.support.v17.leanback.app.BackgroundManager: android.view.View mBgView> = r1;

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached> = 1;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void syncWithService()>();

        return;
    }

    public boolean isAttached()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>;

        return $z0;
    }

    void detach()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r1, $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void release()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: android.view.View mBgView> = null;

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached> = 0;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        virtualinvoke $r2.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void unref()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService> = null;

     label1:
        return;
    }

    public void release()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable $r1, $r9;
        android.animation.ValueAnimator $r2, $r8;
        boolean $z0;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3, $r5, $r7;
        android.app.Activity $r4, $r6;
        int $i0, $i1;
        android.os.Handler $r10;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        if $r1 == null goto label1;

        $r10 = r0.<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler>;

        $r9 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        virtualinvoke $r10.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r9);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable> = null;

     label1:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        $z0 = virtualinvoke $r2.<android.animation.ValueAnimator: boolean isStarted()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        virtualinvoke $r8.<android.animation.ValueAnimator: void cancel()>();

     label2:
        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r3 == null goto label3;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i0 = <android.support.v17.leanback.R$id: int background_imagein>;

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        virtualinvoke $r5.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void clearDrawable(int,android.content.Context)>($i0, $r4);

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i1 = <android.support.v17.leanback.R$id: int background_imageout>;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void clearDrawable(int,android.content.Context)>($i1, $r6);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable> = null;

     label3:
        r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable> = null;

        return;
    }

    public void setDimLayer(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public android.graphics.drawable.Drawable getDimLayer()
    {
        android.support.v17.leanback.app.BackgroundManager r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        return null;
    }

    public android.graphics.drawable.Drawable getDefaultDimLayer()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int $i0;
        android.app.Activity $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $i0 = <android.support.v17.leanback.R$color: int lb_background_protection>;

        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    void postChangeRunnable()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        long l0, $l2;
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable $r1, $r5;
        boolean $z0, $z1, $z2;
        android.animation.ValueAnimator $r2;
        android.support.v17.leanback.app.BackgroundFragment $r3;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r4;
        int $i1;
        android.os.Handler $r6;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        if $r1 == null goto label1;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mChangeRunnablePending>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        $z1 = virtualinvoke $r2.<android.animation.ValueAnimator: boolean isStarted()>();

        if $z1 == 0 goto label3;

        goto label6;

     label3:
        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundFragment mFragmentState>;

        $z2 = virtualinvoke $r3.<android.support.v17.leanback.app.BackgroundFragment: boolean isResumed()>();

        if $z2 != 0 goto label4;

        goto label6;

     label4:
        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i1 = virtualinvoke $r4.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getAlpha()>();

        if $i1 >= 255 goto label5;

        goto label6;

     label5:
        l0 = specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: long getRunnableDelay()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.support.v17.leanback.app.BackgroundManager: long mLastSetTime> = $l2;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler>;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, l0);

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mChangeRunnablePending> = 0;

     label6:
        return;
    }

    private void lazyInit()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.LayerDrawable r1;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r2, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        android.app.Activity $r3;
        android.graphics.drawable.Drawable $r4, $r5;
        android.view.View $r10;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $i0 = <android.support.v17.leanback.R$drawable: int lb_background>;

        $r4 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r3, $i0);

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r1 = (android.graphics.drawable.LayerDrawable) $r5;

        $r6 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable createTranslucentLayerDrawable(android.graphics.drawable.LayerDrawable)>(r1);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable> = $r6;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i1 = <android.support.v17.leanback.R$id: int background_imagein>;

        $i2 = virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int findWrapperIndexById(int)>($i1);

        r0.<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex> = $i2;

        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i3 = <android.support.v17.leanback.R$id: int background_imageout>;

        $i4 = virtualinvoke $r8.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int findWrapperIndexById(int)>($i3);

        r0.<android.support.v17.leanback.app.BackgroundManager: int mImageOutWrapperIndex> = $i4;

        $r10 = r0.<android.support.v17.leanback.app.BackgroundManager: android.view.View mBgView>;

        $r9 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        staticinvoke <android.support.v17.leanback.widget.BackgroundHelper: void setBackgroundPreservingAlpha(android.view.View,android.graphics.drawable.Drawable)>($r10, $r9);

        return;
    }

    private void updateImmediate()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r2, $r8;
        int $i0, $i1, $i2;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3, $r6, $r7;
        android.app.Activity $r5;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void lazyInit()>();

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable>;

        if $r1 != null goto label2;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i2 = <android.support.v17.leanback.R$id: int background_imagein>;

        $r8 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable getDefaultDrawable()>();

        virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int,android.graphics.drawable.Drawable)>($i2, $r8);

        goto label3;

     label2:
        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i0 = <android.support.v17.leanback.R$id: int background_imagein>;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable>;

        virtualinvoke $r3.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int,android.graphics.drawable.Drawable)>($i0, $r2);

     label3:
        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i1 = <android.support.v17.leanback.R$id: int background_imageout>;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        virtualinvoke $r6.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void clearDrawable(int,android.content.Context)>($i1, $r5);

        return;
    }

    public void setColor(int)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int i0;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r1;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        virtualinvoke $r1.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void setColor(int)>(i0);

        r0.<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor> = i0;

        r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable> = null;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable getDefaultDrawable()>();

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawableInternal(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.Drawable r1, $r4;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r2;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService mService>;

        virtualinvoke $r2.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void setDrawable(android.graphics.drawable.Drawable)>(r1);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable> = r1;

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r3 != null goto label1;

        return;

     label1:
        if r1 != null goto label2;

        $r4 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable getDefaultDrawable()>();

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawableInternal(android.graphics.drawable.Drawable)>($r4);

        goto label3;

     label2:
        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawableInternal(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public void clearDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawable(android.graphics.drawable.Drawable)>(null);

        return;
    }

    private void setDrawableInternal(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.Drawable r1, $r5;
        boolean $z0, $z1;
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable $r2, $r3, $r4, $r6;
        android.os.Handler $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must attach before setting background drawable");

        throw $r8;

     label1:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        if $r2 == null goto label3;

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        $r5 = $r4.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable>;

        $z1 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: boolean sameDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, $r5);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler>;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable> = null;

     label3:
        $r3 = new android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable;

        specialinvoke $r3.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: void <init>(android.support.v17.leanback.app.BackgroundManager,android.graphics.drawable.Drawable)>(r0, r1);

        r0.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable> = $r3;

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mChangeRunnablePending> = 1;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void postChangeRunnable()>();

        return;
    }

    private long getRunnableDelay()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $l0 = r0.<android.support.v17.leanback.app.BackgroundManager: long mLastSetTime>;

        $l1 = $l0 + 500L;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l1 - $l2;

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l3);

        return $l4;
    }

    public void setBitmap(android.graphics.Bitmap)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.Bitmap r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;
        android.graphics.Matrix $r2, r3;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable $r4, r7;
        android.app.Activity $r5;
        android.content.res.Resources $r6;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.Bitmap;

        if r1 != null goto label1;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawable(android.graphics.drawable.Drawable)>(null);

        return;

     label1:
        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i3 <= 0 goto label2;

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i4 > 0 goto label3;

     label2:
        return;

     label3:
        r3 = null;

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i6 = r0.<android.support.v17.leanback.app.BackgroundManager: int mWidthPx>;

        if $i5 != $i6 goto label4;

        $i18 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i19 = r0.<android.support.v17.leanback.app.BackgroundManager: int mHeightPx>;

        if $i18 == $i19 goto label7;

     label4:
        i20 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i0 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i7 = r0.<android.support.v17.leanback.app.BackgroundManager: int mHeightPx>;

        $i10 = i20 * $i7;

        $i8 = r0.<android.support.v17.leanback.app.BackgroundManager: int mWidthPx>;

        $i9 = $i8 * i0;

        if $i10 <= $i9 goto label5;

        $i17 = r0.<android.support.v17.leanback.app.BackgroundManager: int mHeightPx>;

        $f6 = (float) $i17;

        $f5 = (float) i0;

        f7 = $f6 / $f5;

        goto label6;

     label5:
        $i11 = r0.<android.support.v17.leanback.app.BackgroundManager: int mWidthPx>;

        $f1 = (float) $i11;

        $f0 = (float) i20;

        f7 = $f1 / $f0;

     label6:
        $i12 = r0.<android.support.v17.leanback.app.BackgroundManager: int mWidthPx>;

        $f2 = (float) $i12;

        $f3 = $f2 / f7;

        $i13 = (int) $f3;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i13, i20);

        $i14 = i20 - i1;

        $i15 = $i14 / 2;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r3 = $r2;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(f7, f7);

        $i16 = neg i2;

        $f4 = (float) $i16;

        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>($f4, 0.0F);

     label7:
        $r4 = new android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.content.res.Resources getResources()>();

        specialinvoke $r4.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Matrix)>($r6, r1, r3);

        r7 = $r4;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager: void setDrawable(android.graphics.drawable.Drawable)>(r7);

        return;
    }

    public void setAutoReleaseOnStop(boolean)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        boolean z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        z0 := @parameter0: boolean;

        r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAutoReleaseOnStop> = z0;

        return;
    }

    public boolean isAutoReleaseOnStop()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager: boolean mAutoReleaseOnStop>;

        return $z0;
    }

    public final int getColor()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager: int mBackgroundColor>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable mBackgroundDrawable>;

        return $r1;
    }

    boolean sameDrawable(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager r0;
        android.graphics.drawable.Drawable r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.drawable.ColorDrawable $r3, $r4;
        int $i0, $i1;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable $r5, $r7;
        android.graphics.Bitmap $r6, $r8;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return 0;

     label2:
        if r1 != r2 goto label3;

        return 1;

     label3:
        $z0 = r1 instanceof android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        if $z0 == 0 goto label4;

        $z2 = r2 instanceof android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        if $z2 == 0 goto label4;

        $r5 = (android.support.v17.leanback.app.BackgroundManager$BitmapDrawable) r1;

        $r6 = virtualinvoke $r5.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $r7 = (android.support.v17.leanback.app.BackgroundManager$BitmapDrawable) r2;

        $r8 = virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $z3 = virtualinvoke $r6.<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>($r8);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = r1 instanceof android.graphics.drawable.ColorDrawable;

        if $z4 == 0 goto label5;

        $z1 = r2 instanceof android.graphics.drawable.ColorDrawable;

        if $z1 == 0 goto label5;

        $r3 = (android.graphics.drawable.ColorDrawable) r1;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.ColorDrawable: int getColor()>();

        $r4 = (android.graphics.drawable.ColorDrawable) r2;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.ColorDrawable: int getColor()>();

        if $i0 != $i1 goto label5;

        return 1;

     label5:
        return 0;
    }

    static android.graphics.drawable.Drawable createEmptyDrawable(android.content.Context)
    {
        android.content.Context r0;
        android.support.v17.leanback.app.BackgroundManager$EmptyDrawable $r1;
        android.content.res.Resources $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.support.v17.leanback.app.BackgroundManager$EmptyDrawable;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r1.<android.support.v17.leanback.app.BackgroundManager$EmptyDrawable: void <init>(android.content.res.Resources)>($r2);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/v17/leanback/app/BackgroundManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        <android.support.v17.leanback.app.BackgroundManager: java.lang.String FRAGMENT_TAG> = $r1;

        return;
    }

android.support.v17.leanback.app.BackgroundManager$1$1
<android.support.v17.leanback.app.BackgroundManager$1$1: android.support.v17.leanback.app.BackgroundManager$1 this$1>
    void <init>(android.support.v17.leanback.app.BackgroundManager$1)
    {
        android.support.v17.leanback.app.BackgroundManager$1$1 r0;
        android.support.v17.leanback.app.BackgroundManager$1 r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1$1;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager$1;

        r0.<android.support.v17.leanback.app.BackgroundManager$1$1: android.support.v17.leanback.app.BackgroundManager$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.v17.leanback.app.BackgroundManager$1$1 r0;
        android.support.v17.leanback.app.BackgroundManager$1 $r1;
        android.support.v17.leanback.app.BackgroundManager $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1$1;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$1$1: android.support.v17.leanback.app.BackgroundManager$1 this$1>;

        $r2 = $r1.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>;

        virtualinvoke $r2.<android.support.v17.leanback.app.BackgroundManager: void postChangeRunnable()>();

        return;
    }

android.support.v17.leanback.app.BackgroundManager$1
<android.support.v17.leanback.app.BackgroundManager$1: java.lang.Runnable mRunnable>
<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>
    void <init>(android.support.v17.leanback.app.BackgroundManager)
    {
        android.support.v17.leanback.app.BackgroundManager$1 r0;
        android.support.v17.leanback.app.BackgroundManager r1;
        android.support.v17.leanback.app.BackgroundManager$1$1 $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager;

        r0.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.support.v17.leanback.app.BackgroundManager$1$1;

        specialinvoke $r2.<android.support.v17.leanback.app.BackgroundManager$1$1: void <init>(android.support.v17.leanback.app.BackgroundManager$1)>(r0);

        r0.<android.support.v17.leanback.app.BackgroundManager$1: java.lang.Runnable mRunnable> = $r2;

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.v17.leanback.app.BackgroundManager$1 r0;
        android.animation.Animator r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationRepeat(android.animation.Animator)
    {
        android.support.v17.leanback.app.BackgroundManager$1 r0;
        android.animation.Animator r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.v17.leanback.app.BackgroundManager$1 r0;
        android.animation.Animator r1;
        android.support.v17.leanback.app.BackgroundManager $r2, $r4, $r7, $r8;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3, $r10;
        java.lang.Runnable $r5;
        android.os.Handler $r6;
        android.app.Activity $r9;
        int $i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r3 == null goto label1;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r10 = $r7.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i0 = <android.support.v17.leanback.R$id: int background_imageout>;

        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r9 = $r8.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        virtualinvoke $r10.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void clearDrawable(int,android.content.Context)>($i0, $r9);

     label1:
        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$1: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r6 = $r4.<android.support.v17.leanback.app.BackgroundManager: android.os.Handler mHandler>;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$1: java.lang.Runnable mRunnable>;

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void onAnimationCancel(android.animation.Animator)
    {
        android.support.v17.leanback.app.BackgroundManager$1 r0;
        android.animation.Animator r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$1;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

android.support.v17.leanback.app.BackgroundManager$2
<android.support.v17.leanback.app.BackgroundManager$2: android.support.v17.leanback.app.BackgroundManager this$0>
    void <init>(android.support.v17.leanback.app.BackgroundManager)
    {
        android.support.v17.leanback.app.BackgroundManager$2 r0;
        android.support.v17.leanback.app.BackgroundManager r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$2;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager;

        r0.<android.support.v17.leanback.app.BackgroundManager$2: android.support.v17.leanback.app.BackgroundManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        android.support.v17.leanback.app.BackgroundManager$2 r0;
        android.animation.ValueAnimator r1;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.app.BackgroundManager $r4, $r5, $r6;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r7;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$2;

        r1 := @parameter0: android.animation.ValueAnimator;

        $r2 = virtualinvoke r1.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        $r3 = (java.lang.Integer) $r2;

        i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$2: android.support.v17.leanback.app.BackgroundManager this$0>;

        $i1 = $r4.<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex>;

        if $i1 == -1 goto label1;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$2: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r7 = $r5.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$2: android.support.v17.leanback.app.BackgroundManager this$0>;

        $i2 = $r6.<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex>;

        virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void setWrapperAlpha(int,int)>($i2, i0);

     label1:
        return;
    }

android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: java.lang.String TAG>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: boolean DEBUG>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService sService>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mColor>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable mDrawable>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mLastThemeDrawableId>
<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: java.lang.ref.WeakReference mLastThemeDrawableState>
    private void <init>()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void reset()>();

        return;
    }

    private void reset()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mColor> = 0;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable mDrawable> = null;

        return;
    }

    public static android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService getInstance()
    {
        int i0, $i1, $i2;
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r0, $r1;

        $r0 = <android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService sService>;

        $i1 = $r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount>;

        $i2 = $i1 + 1;

        $r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount> = $i2;

        i0 = $i1;

        $r1 = <android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService sService>;

        return $r1;
    }

    public void unref()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount>;

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t unref, count ");

        $i3 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        $i1 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount>;

        $i2 = $i1 - 1;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mCount> = $i2;

        if $i2 != 0 goto label2;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void reset()>();

     label2:
        return;
    }

    public int getColor()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mColor>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public void setColor(int)
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        int i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        i0 := @parameter0: int;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mColor> = i0;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable mDrawable> = null;

        return;
    }

    public void setDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.graphics.drawable.Drawable mDrawable> = r1;

        return;
    }

    public android.graphics.drawable.Drawable getThemeDrawable(android.content.Context, int)
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService r0;
        android.content.Context r1;
        int i0, $i1;
        android.graphics.drawable.Drawable$ConstantState r2, $r5;
        java.lang.ref.WeakReference $r3, $r4, $r6;
        java.lang.Object $r7;
        android.graphics.drawable.Drawable r8;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r8 = null;

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: java.lang.ref.WeakReference mLastThemeDrawableState>;

        if $r3 == null goto label1;

        $i1 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mLastThemeDrawableId>;

        if $i1 != i0 goto label1;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: java.lang.ref.WeakReference mLastThemeDrawableState>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.graphics.drawable.Drawable$ConstantState) $r7;

        if r2 == null goto label1;

        r8 = virtualinvoke r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

     label1:
        if r8 != null goto label2;

        r8 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i0);

        $r4 = new java.lang.ref.WeakReference;

        $r5 = virtualinvoke r8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r5);

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: java.lang.ref.WeakReference mLastThemeDrawableState> = $r4;

        r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: int mLastThemeDrawableId> = i0;

     label2:
        return r8;
    }

    static void <clinit>()
    {
        android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService $r0;

        $r0 = new android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService;

        specialinvoke $r0.<android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: void <init>()>();

        <android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService: android.support.v17.leanback.app.BackgroundManager$BackgroundContinuityService sService> = $r0;

        return;
    }

android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState
<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap>
<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix>
<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>
    void <init>(android.graphics.Bitmap, android.graphics.Matrix)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState r0;
        android.graphics.Bitmap r1;
        android.graphics.Matrix r2, $r6;
        android.graphics.Paint $r3, $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint> = $r3;

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap> = r1;

        if r2 == null goto label1;

        $r6 = r2;

        goto label2;

     label1:
        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

     label2:
        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix> = $r6;

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        return;
    }

    void <init>(android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState r0, r1;
        android.graphics.Paint $r2, $r5, $r6, $r8, $r9, $r10, $r13, $r14;
        android.graphics.Bitmap $r3;
        android.graphics.Matrix $r4, $r15, $r17;
        int $i0, $i1;
        android.graphics.ColorFilter $r7, $r11;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint> = $r2;

        $r3 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap>;

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap> = $r3;

        $r4 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix>;

        if $r4 == null goto label1;

        $r17 = new android.graphics.Matrix;

        $r15 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix>;

        specialinvoke $r17.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r15);

        goto label2;

     label1:
        $r17 = new android.graphics.Matrix;

        specialinvoke $r17.<android.graphics.Matrix: void <init>()>();

     label2:
        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix> = $r17;

        $r5 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r5.<android.graphics.Paint: int getAlpha()>();

        if $i0 == 255 goto label3;

        $r14 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r13 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r13.<android.graphics.Paint: int getAlpha()>();

        virtualinvoke $r14.<android.graphics.Paint: void setAlpha(int)>($i1);

     label3:
        $r6 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r7 = virtualinvoke $r6.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r7 == null goto label4;

        $r10 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r9 = r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r11 = virtualinvoke $r9.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r11);

     label4:
        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        return;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        $r1 = new android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        specialinvoke $r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void <init>(android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState)>(r0);

        return $r1;
    }

    public int getChangingConfigurations()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        return 0;
    }

android.support.v17.leanback.app.BackgroundManager$BitmapDrawable
<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>
<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: boolean mMutated>
    void <init>(android.content.res.Resources, android.graphics.Bitmap)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Matrix)>(r1, r2, null);

        return;
    }

    void <init>(android.content.res.Resources, android.graphics.Bitmap, android.graphics.Matrix)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        android.graphics.Matrix r3;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: android.graphics.Matrix;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r4 = new android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        specialinvoke $r4.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: void <init>(android.graphics.Bitmap,android.graphics.Matrix)>(r2, r3);

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState> = $r4;

        return;
    }

    void <init>(android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState> = r1;

        return;
    }

    android.graphics.Bitmap getBitmap()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r1;
        android.graphics.Bitmap $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r2 = $r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap>;

        return $r2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.graphics.Canvas r1;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r2, $r4, $r6, $r7, $r8, $r12;
        android.graphics.Bitmap $r3, $r11;
        android.graphics.Paint $r5, $r9, $r13;
        int $i0;
        android.graphics.Matrix $r10;
        android.graphics.ColorFilter $r14;
        java.lang.IllegalStateException $r15;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r5 = $r4.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r5.<android.graphics.Paint: int getAlpha()>();

        if $i0 >= 255 goto label2;

        $r12 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r13 = $r12.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r14 = virtualinvoke $r13.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r14 == null goto label2;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t draw with translucent alpha and color filter");

        throw $r15;

     label2:
        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r11 = $r6.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Bitmap mBitmap>;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r10 = $r7.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Matrix mMatrix>;

        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r9 = $r8.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r11, $r10, $r9);

        return;
    }

    public int getOpacity()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        return -3;
    }

    public void setAlpha(int)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        int i0, $i1;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r2, $r4;
        android.graphics.Paint $r3, $r5;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.graphics.drawable.Drawable mutate()>();

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        if $i1 == i0 goto label1;

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r5 = $r4.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.graphics.ColorFilter r1;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r3;
        android.graphics.Paint $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.graphics.drawable.Drawable mutate()>();

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r4 = $r3.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r1;
        android.graphics.Paint $r2;
        android.graphics.ColorFilter $r3;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        $r2 = $r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: android.graphics.Paint mPaint>;

        $r3 = virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        return $r3;
    }

    public android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState getConstantState()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        return $r1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        boolean $z0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r1, $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: boolean mMutated> = 1;

        $r1 = new android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState>;

        specialinvoke $r1.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState: void <init>(android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState)>($r2);

        r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState mState> = $r1;

     label1:
        return r0;
    }

    public volatile android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable r0;
        android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable;

        $r1 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: android.support.v17.leanback.app.BackgroundManager$BitmapDrawable$ConstantState getConstantState()>();

        return $r1;
    }

android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable
<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable>
<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>
    void <init>(android.support.v17.leanback.app.BackgroundManager, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable r0;
        android.support.v17.leanback.app.BackgroundManager r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable> = r2;

        return;
    }

    public void run()
    {
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable r0;
        android.support.v17.leanback.app.BackgroundManager $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: void runTask()>();

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r1.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable mChangeRunnable> = null;

        return;
    }

    private void runTask()
    {
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable r0;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r1;
        android.support.v17.leanback.app.BackgroundManager $r2, $r4, $r5, $r8, $r9, $r12;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r3, $r11, $r13;
        android.graphics.drawable.Drawable $r6, $r7, $r14;
        boolean $z0;
        android.app.Activity $r10;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r3 = $r2.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        r1 = virtualinvoke $r4.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper getImageInWrapper()>();

        if r1 == null goto label3;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable>;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>();

        $z0 = virtualinvoke $r5.<android.support.v17.leanback.app.BackgroundManager: boolean sameDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, $r7);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r11 = $r8.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i0 = <android.support.v17.leanback.R$id: int background_imagein>;

        $r9 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r10 = $r9.<android.support.v17.leanback.app.BackgroundManager: android.app.Activity mContext>;

        virtualinvoke $r11.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void clearDrawable(int,android.content.Context)>($i0, $r10);

        $r12 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r13 = $r12.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i1 = <android.support.v17.leanback.R$id: int background_imageout>;

        $r14 = virtualinvoke r1.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>();

        virtualinvoke $r13.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int,android.graphics.drawable.Drawable)>($i1, $r14);

     label3:
        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: void applyBackgroundChanges()>();

        return;
    }

    void applyBackgroundChanges()
    {
        android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable r0;
        android.support.v17.leanback.app.BackgroundManager $r1, $r2, $r5, $r8, $r9, $r13, $r15;
        boolean $z0;
        android.graphics.drawable.Drawable $r4, $r6;
        int $i0, $i1;
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable $r7, $r10;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r11;
        android.animation.ValueAnimator $r14, $r16;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $z0 = $r1.<android.support.v17.leanback.app.BackgroundManager: boolean mAttached>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        r11 = virtualinvoke $r2.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper getImageInWrapper()>();

        if r11 != null goto label2;

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable>;

        if $r4 == null goto label2;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r7 = $r5.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $i0 = <android.support.v17.leanback.R$id: int background_imagein>;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r7.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int,android.graphics.drawable.Drawable)>($i0, $r6);

        $r8 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r10 = $r8.<android.support.v17.leanback.app.BackgroundManager: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable mLayerDrawable>;

        $r9 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $i1 = $r9.<android.support.v17.leanback.app.BackgroundManager: int mImageInWrapperIndex>;

        virtualinvoke $r10.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void setWrapperAlpha(int,int)>($i1, 0);

     label2:
        $r13 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r14 = $r13.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        virtualinvoke $r14.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(500L);

        $r15 = r0.<android.support.v17.leanback.app.BackgroundManager$ChangeBackgroundRunnable: android.support.v17.leanback.app.BackgroundManager this$0>;

        $r16 = $r15.<android.support.v17.leanback.app.BackgroundManager: android.animation.ValueAnimator mAnimator>;

        virtualinvoke $r16.<android.animation.ValueAnimator: void start()>();

        return;
    }

android.support.v17.leanback.app.BackgroundManager$DrawableWrapper
<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha>
<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable mDrawable>
    public void <init>(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha> = 255;

        r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable mDrawable> = r1;

        return;
    }

    public void <init>(android.support.v17.leanback.app.BackgroundManager$DrawableWrapper, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r0, r1;
        android.graphics.drawable.Drawable r2;
        int $i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha> = 255;

        r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable mDrawable> = r2;

        $i0 = r1.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha>;

        r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha> = $i0;

        return;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public void setColor(int)
    {
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper r0;
        int i0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.ColorDrawable $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable mDrawable>;

        $r2 = (android.graphics.drawable.ColorDrawable) $r1;

        virtualinvoke $r2.<android.graphics.drawable.ColorDrawable: void setColor(int)>(i0);

        return;
    }

android.support.v17.leanback.app.BackgroundManager$EmptyDrawable
    void <init>(android.content.res.Resources)
    {
        android.support.v17.leanback.app.BackgroundManager$EmptyDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap $r2;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$EmptyDrawable;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = (android.graphics.Bitmap) null;

        specialinvoke r0.<android.support.v17.leanback.app.BackgroundManager$BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>(r1, $r2);

        return;
    }

android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable
<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>
<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha>
<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: boolean mSuspendInvalidation>
<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: java.lang.ref.WeakReference mManagerWeakReference>
    void <init>(android.support.v17.leanback.app.BackgroundManager, android.graphics.drawable.Drawable[])
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        android.support.v17.leanback.app.BackgroundManager r1;
        android.graphics.drawable.Drawable[] r2;
        int i0, i1;
        java.lang.ref.WeakReference $r3;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r4, $r7;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        r1 := @parameter0: android.support.v17.leanback.app.BackgroundManager;

        r2 := @parameter1: android.graphics.drawable.Drawable[];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r2);

        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha> = 255;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: java.lang.ref.WeakReference mManagerWeakReference> = $r3;

        i0 = lengthof r2;

        $r4 = newarray (android.support.v17.leanback.app.BackgroundManager$DrawableWrapper)[i0];

        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper> = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r5 = new android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        $r6 = r2[i1];

        specialinvoke $r5.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: void <init>(android.graphics.drawable.Drawable)>($r6);

        $r7[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setAlpha(int)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0, $i1;
        android.support.v17.leanback.app.BackgroundManager r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha>;

        if $i1 == i0 goto label1;

        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha> = i0;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void invalidateSelf()>();

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: java.lang.ref.WeakReference mManagerWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.support.v17.leanback.app.BackgroundManager) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.support.v17.leanback.app.BackgroundManager: void postChangeRunnable()>();

     label1:
        return;
    }

    void setWrapperAlpha(int, int)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0, i1;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r1, $r3;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r2, $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r2 = $r1[i0];

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r4 = $r3[i0];

        $r4.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha> = i1;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public int getAlpha()
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        $i0 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha>;

        return $i0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        android.graphics.drawable.Drawable r1, $r8;
        int i0, i1;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r2, $r5, $r6;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r3, $r4, $r7;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        r1 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>();

        i0 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getNumberOfLayers()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r6 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r4 = new android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r7 = $r5[i1];

        $r8 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        specialinvoke $r4.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: void <init>(android.support.v17.leanback.app.BackgroundManager$DrawableWrapper,android.graphics.drawable.Drawable)>($r7, $r8);

        $r6[i1] = $r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public int getOpacity()
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        return -3;
    }

    public boolean setDrawableByLayerId(int, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r2;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int,android.graphics.drawable.Drawable)>(i0, r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.support.v17.leanback.app.BackgroundManager$DrawableWrapper updateDrawable(int, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0, $i1, $i2, i3;
        android.graphics.drawable.Drawable r1;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r2, $r5;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r3, $r4;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>(i0, r1);

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getNumberOfLayers()>();

        if i3 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getId(int)>(i3);

        if $i2 != i0 goto label2;

        $r3 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r2 = new android.support.v17.leanback.app.BackgroundManager$DrawableWrapper;

        specialinvoke $r2.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: void <init>(android.graphics.drawable.Drawable)>(r1);

        $r3[i3] = $r2;

        virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: void invalidateSelf()>();

        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r5 = $r4[i3];

        return $r5;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    public void clearDrawable(int, android.content.Context)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0, $i1, $i2, i3;
        android.content.Context r1;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r2;
        android.graphics.drawable.Drawable $r3, $r4;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Context;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getNumberOfLayers()>();

        if i3 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getId(int)>(i3);

        if $i2 != i0 goto label2;

        $r2 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r2[i3] = null;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(i3);

        $z0 = $r3 instanceof android.support.v17.leanback.app.BackgroundManager$EmptyDrawable;

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.support.v17.leanback.app.BackgroundManager: android.graphics.drawable.Drawable createEmptyDrawable(android.content.Context)>(r1);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>(i0, $r4);

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    public int findWrapperIndexById(int)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        int i0, $i1, $i2, i3;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getNumberOfLayers()>();

        if i3 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int getId(int)>(i3);

        if $i2 != i0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: boolean mSuspendInvalidation>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10;
        java.lang.Throwable r3, $r14;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] $r4, $r5, $r7, $r10, $r12;
        android.support.v17.leanback.app.BackgroundManager$DrawableWrapper $r6, $r8, $r11, $r13;

        r0 := @this: android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        i7 = 0;

     label01:
        $r4 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $i1 = lengthof $r4;

        if i7 >= $i1 goto label13;

        $r5 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r6 = $r5[i7];

        if $r6 == null goto label12;

        $r7 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r8 = $r7[i7];

        $r9 = virtualinvoke $r8.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>();

        r2 = $r9;

        if $r9 == null goto label12;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 19 goto label02;

        $i8 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)>(r2);

        goto label03;

     label02:
        $i8 = 255;

     label03:
        i9 = $i8;

        i0 = i9;

        i10 = 0;

        $i3 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha>;

        if $i3 >= 255 goto label04;

        $i6 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: int mAlpha>;

        i9 = i9 * $i6;

        i10 = i10 + 1;

     label04:
        $r10 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r11 = $r10[i7];

        $i4 = $r11.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha>;

        if $i4 >= 255 goto label05;

        $r12 = r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: android.support.v17.leanback.app.BackgroundManager$DrawableWrapper[] mWrapper>;

        $r13 = $r12[i7];

        $i5 = $r13.<android.support.v17.leanback.app.BackgroundManager$DrawableWrapper: int mAlpha>;

        i9 = i9 * $i5;

        i10 = i10 + 1;

     label05:
        if i10 != 0 goto label06;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label12;

     label06:
        if i10 != 1 goto label07;

        i9 = i9 / 255;

        goto label08;

     label07:
        if i10 != 2 goto label08;

        i9 = i9 / 65025;

     label08:
        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: boolean mSuspendInvalidation> = 1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i9);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

     label09:
        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: boolean mSuspendInvalidation> = 0;

        goto label12;

     label10:
        $r14 := @caughtexception;

        r3 = $r14;

     label11:
        r0.<android.support.v17.leanback.app.BackgroundManager$TranslucentLayerDrawable: boolean mSuspendInvalidation> = 0;

        throw r3;

     label12:
        i7 = i7 + 1;

        goto label01;

     label13:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

