android.support.text.emoji.widget.SpannableBuilder
<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass>
<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>
    void <init>(java.lang.Class)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Class r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<android.text.SpannableStringBuilder: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers> = $r2;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "watcherClass cannot be null");

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass> = r1;

        return;
    }

    void <init>(java.lang.Class, java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Class r1;
        java.lang.CharSequence r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers> = $r3;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "watcherClass cannot be null");

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass> = r1;

        return;
    }

    void <init>(java.lang.Class, java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Class r1;
        java.lang.CharSequence r2;
        int i0, i1;
        java.util.ArrayList $r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>(r2, i0, i1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers> = $r3;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "watcherClass cannot be null");

        r0.<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass> = r1;

        return;
    }

    static android.support.text.emoji.widget.SpannableBuilder create(java.lang.Class, java.lang.CharSequence)
    {
        java.lang.Class r0;
        java.lang.CharSequence r1;
        android.support.text.emoji.widget.SpannableBuilder $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = new android.support.text.emoji.widget.SpannableBuilder;

        specialinvoke $r2.<android.support.text.emoji.widget.SpannableBuilder: void <init>(java.lang.Class,java.lang.CharSequence)>(r0, r1);

        return $r2;
    }

    private boolean isWatcher(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Class)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isWatcher(java.lang.Class)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Class r1, $r2;
        boolean $z0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0, r3;
        int i0, i1;
        java.lang.Class $r2;
        java.lang.CharSequence r4, r5;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 = new android.support.text.emoji.widget.SpannableBuilder;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.lang.Class mWatcherClass>;

        r4 = (java.lang.CharSequence) r0;

        specialinvoke r3.<android.support.text.emoji.widget.SpannableBuilder: void <init>(java.lang.Class,java.lang.CharSequence,int,int)>($r2, r4, i0, i1);

        r5 = (java.lang.CharSequence) r3;

        return r5;
    }

    public void setSpan(java.lang.Object, int, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, i2;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r1, $r2;
        boolean $z0;
        java.util.List $r3;
        java.lang.Object r4;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r4 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        $r2 = new android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        specialinvoke $r2.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: void <init>(java.lang.Object)>(r4);

        r1 = $r2;

        $r3 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        r4 = r1;

     label1:
        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i0, i1, i2);

        return;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, $i2, $i3, i4;
        java.lang.Class r1;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper[] r2;
        java.lang.Object[] r3, $r4, $r5, $r7;
        boolean $z0;
        java.lang.Object $r6, $r9;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper $r8;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Class)>(r1);

        if $z0 == 0 goto label3;

        $r5 = specialinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Landroid/support/text/emoji/widget/SpannableBuilder$WatcherWrapper;");

        r2 = (android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper[]) $r5;

        $i2 = lengthof r2;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i2);

        $r7 = (java.lang.Object[]) $r6;

        r3 = (java.lang.Object[]) $r7;

        i4 = 0;

     label1:
        $i3 = lengthof r2;

        if i4 >= $i3 goto label2;

        $r8 = r2[i4];

        $r9 = $r8.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        r3[i4] = $r9;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r3;

     label3:
        $r4 = specialinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, r1);

        return $r4;
    }

    public void removeSpan(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object r2;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r2 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        r3 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object)>(r2);

        if r3 == null goto label2;

        r2 = r3;

        goto label2;

     label1:
        r3 = null;

     label2:
        specialinvoke r0.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>(r2);

        if r3 == null goto label3;

        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r3);

     label3:
        return;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r1;
        boolean $z0;
        java.lang.Object r2;
        int $i0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r2 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object)>(r2);

        if r1 == null goto label1;

        r2 = r1;

     label1:
        $i0 = specialinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r2);

        return $i0;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r1;
        boolean $z0;
        java.lang.Object r2;
        int $i0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r2 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object)>(r2);

        if r1 == null goto label1;

        r2 = r1;

     label1:
        $i0 = specialinvoke r0.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r2);

        return $i0;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r1;
        boolean $z0;
        java.lang.Object r2;
        int $i0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r2 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object)>(r2);

        if r1 == null goto label1;

        r2 = r1;

     label1:
        $i0 = specialinvoke r0.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>(r2);

        return $i0;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.Class r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: boolean isWatcher(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        r1 = class "Landroid/support/text/emoji/widget/SpannableBuilder$WatcherWrapper;";

     label1:
        $i2 = specialinvoke r0.<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>(i0, i1, r1);

        return $i2;
    }

    private android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.Object r1, $r5, $r6;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r2;
        java.util.List $r3, $r4;
        int $i0, i1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $r3 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper) $r5;

        $r6 = r2.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        if $r6 != r1 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void beginBatchEdit()
    {
        android.support.text.emoji.widget.SpannableBuilder r0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void blockWatchers()>();

        return;
    }

    public void endBatchEdit()
    {
        android.support.text.emoji.widget.SpannableBuilder r0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void unblockwatchers()>();

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void fireWatchers()>();

        return;
    }

    private void blockWatchers()
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper $r4;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i1 = 0;

     label1:
        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper) $r3;

        virtualinvoke $r4.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: void blockCalls()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void unblockwatchers()
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper $r4;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i1 = 0;

     label1:
        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper) $r3;

        virtualinvoke $r4.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: void unblockCalls()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void fireWatchers()
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper $r4;
        java.lang.CharSequence r5;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i3 = 0;

     label1:
        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label2;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder: java.util.List mWatchers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper) $r3;

        $i1 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: int length()>();

        $i2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: int length()>();

        r5 = (java.lang.CharSequence) r0;

        virtualinvoke $r4.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: void onTextChanged(java.lang.CharSequence,int,int,int)>(r5, 0, $i1, $i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1;
        java.lang.CharSequence r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void blockWatchers()>();

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void unblockwatchers()>();

        return r0;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, i2, i3;
        java.lang.CharSequence r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void blockWatchers()>();

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i1, r1, i2, i3);

        specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: void unblockwatchers()>();

        return r0;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>(i0, r1);

        return r0;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, i2;
        java.lang.CharSequence r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>(i0, r1, i1, i2);

        return r0;
    }

    public android.text.SpannableStringBuilder delete(int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, i1);

        return r0;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        return r0;
    }

    public android.text.SpannableStringBuilder append(char)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        char c0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        c0 := @parameter0: char;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        return r0;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return r0;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence, java.lang.Object, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        java.lang.Object r2;
        int i0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)>(r1, r2, i0);

        return r0;
    }

    public volatile android.text.Editable append(char)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        char c0;
        android.text.SpannableStringBuilder $r1;
        android.text.Editable r2;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        r2 = (android.text.Editable) $r1;

        return r2;
    }

    public volatile android.text.Editable append(java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        int i0, i1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile android.text.Editable append(java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile android.text.Editable delete(int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1;
        android.text.SpannableStringBuilder $r1;
        android.text.Editable r2;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, i1);

        r2 = (android.text.Editable) $r1;

        return r2;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>(i0, r1);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, i2;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>(i0, r1, i1, i2);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        int i0, i1, i2, i3;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        android.text.Editable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i1, r1, i2, i3);

        r3 = (android.text.Editable) $r2;

        return r3;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        char c0;
        android.text.SpannableStringBuilder $r1;
        java.lang.Appendable r2;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        r2 = (java.lang.Appendable) $r1;

        return r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        int i0, i1;
        android.text.SpannableStringBuilder $r2;
        java.lang.Appendable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        r3 = (java.lang.Appendable) $r2;

        return r3;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        android.support.text.emoji.widget.SpannableBuilder r0;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2;
        java.lang.Appendable r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.support.text.emoji.widget.SpannableBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        r3 = (java.lang.Appendable) $r2;

        return r3;
    }

android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper
<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>
<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>
    void <init>(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls> = $r2;

        r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject> = r1;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        android.text.TextWatcher $r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r3 = (android.text.TextWatcher) $r2;

        interfaceinvoke $r3.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        android.text.TextWatcher $r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r3 = (android.text.TextWatcher) $r2;

        interfaceinvoke $r3.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        android.text.Editable r1;
        java.lang.Object $r2;
        android.text.TextWatcher $r3;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: android.text.Editable;

        $r2 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r3 = (android.text.TextWatcher) $r2;

        interfaceinvoke $r3.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>(r1);

        return;
    }

    public void onSpanAdded(android.text.Spannable, java.lang.Object, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        android.text.Spannable r1;
        java.lang.Object r2, $r4;
        int i0, i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.text.SpanWatcher $r5;
        boolean $z0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>;

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i2 <= 0 goto label1;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: boolean isEmojiSpan(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r5 = (android.text.SpanWatcher) $r4;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>(r1, r2, i0, i1);

        return;
    }

    public void onSpanRemoved(android.text.Spannable, java.lang.Object, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        android.text.Spannable r1;
        java.lang.Object r2, $r4;
        int i0, i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.text.SpanWatcher $r5;
        boolean $z0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>;

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i2 <= 0 goto label1;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: boolean isEmojiSpan(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r5 = (android.text.SpanWatcher) $r4;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>(r1, r2, i0, i1);

        return;
    }

    public void onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        android.text.Spannable r1;
        java.lang.Object r2, $r4;
        int i0, i1, i2, i3, $i4;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.text.SpanWatcher $r5;
        boolean $z0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>;

        $i4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i4 <= 0 goto label1;

        $z0 = specialinvoke r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: boolean isEmojiSpan(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.lang.Object mObject>;

        $r5 = (android.text.SpanWatcher) $r4;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>(r1, r2, i0, i1, i2, i3);

        return;
    }

    final void blockCalls()
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    final void unblockCalls()
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        $r1 = r0.<android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper: java.util.concurrent.atomic.AtomicInteger mBlockCalls>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        return;
    }

    private boolean isEmojiSpan(java.lang.Object)
    {
        android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.support.text.emoji.EmojiSpan;

        return $z0;
    }

