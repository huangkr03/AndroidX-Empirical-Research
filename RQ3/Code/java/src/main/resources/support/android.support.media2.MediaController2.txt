android.support.media2.MediaController2
<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>
<android.support.media2.MediaController2: java.lang.Long mTimeDiff>
    public void <init>(android.content.Context, android.support.media2.SessionToken2, java.util.concurrent.Executor, android.support.media2.MediaController2$ControllerCallback)
    {
        android.support.media2.MediaController2 r0;
        android.content.Context r1;
        android.support.media2.SessionToken2 r2;
        java.util.concurrent.Executor r3;
        android.support.media2.MediaController2$ControllerCallback r4;
        android.support.media2.MediaController2$MediaController2Impl $r5;
        java.lang.IllegalArgumentException $r6, $r7, $r8, $r9;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.SessionToken2;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.support.media2.MediaController2$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token shouldn\'t be null");

        throw $r8;

     label2:
        if r4 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r7;

     label3:
        if r3 != null goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r6;

     label4:
        $r5 = virtualinvoke r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl createImpl(android.content.Context,android.support.media2.SessionToken2,java.util.concurrent.Executor,android.support.media2.MediaController2$ControllerCallback)>(r1, r2, r3, r4);

        r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl> = $r5;

        return;
    }

    android.support.media2.MediaController2$MediaController2Impl createImpl(android.content.Context, android.support.media2.SessionToken2, java.util.concurrent.Executor, android.support.media2.MediaController2$ControllerCallback)
    {
        android.support.media2.MediaController2 r0;
        android.content.Context r1;
        android.support.media2.SessionToken2 r2;
        java.util.concurrent.Executor r3;
        android.support.media2.MediaController2$ControllerCallback r4;
        boolean $z0;
        android.support.media2.MediaController2ImplBase $r5;
        android.support.media2.MediaController2ImplLegacy $r6;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.SessionToken2;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.support.media2.MediaController2$ControllerCallback;

        $z0 = virtualinvoke r2.<android.support.media2.SessionToken2: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r6 = new android.support.media2.MediaController2ImplLegacy;

        specialinvoke $r6.<android.support.media2.MediaController2ImplLegacy: void <init>(android.content.Context,android.support.media2.MediaController2,android.support.media2.SessionToken2,java.util.concurrent.Executor,android.support.media2.MediaController2$ControllerCallback)>(r1, r0, r2, r3, r4);

        return $r6;

     label1:
        $r5 = new android.support.media2.MediaController2ImplBase;

        specialinvoke $r5.<android.support.media2.MediaController2ImplBase: void <init>(android.content.Context,android.support.media2.MediaController2,android.support.media2.SessionToken2,java.util.concurrent.Executor,android.support.media2.MediaController2$ControllerCallback)>(r1, r0, r2, r3, r4);

        return $r5;
    }

    android.support.media2.MediaController2$MediaController2Impl getImpl()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        return $r1;
    }

    public void close()
    {
        android.support.media2.MediaController2 r0;
        java.lang.Throwable r1, $r3;
        android.support.media2.MediaController2$MediaController2Impl $r2;

        r0 := @this: android.support.media2.MediaController2;

     label1:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.support.media2.SessionToken2 getSessionToken()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.media2.SessionToken2 $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.SessionToken2 getSessionToken()>();

        return $r2;
    }

    public boolean isConnected()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        boolean $z0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: boolean isConnected()>();

        return $z0;
    }

    public void play()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void play()>();

        return;
    }

    public void pause()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void pause()>();

        return;
    }

    public void reset()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void reset()>();

        return;
    }

    public void prepare()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void prepare()>();

        return;
    }

    public void fastForward()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void fastForward()>();

        return;
    }

    public void rewind()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void rewind()>();

        return;
    }

    public void seekTo(long)
    {
        android.support.media2.MediaController2 r0;
        long l0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void seekTo(long)>(l0);

        return;
    }

    public void skipForward()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void skipForward()>();

        return;
    }

    public void skipBackward()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void skipBackward()>();

        return;
    }

    public void playFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void playFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void playFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void playFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void playFromUri(android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void playFromUri(android.net.Uri,android.os.Bundle)>(r1, r2);

        return;
    }

    public void prepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void prepareFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void prepareFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void prepareFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void prepareFromUri(android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void prepareFromUri(android.net.Uri,android.os.Bundle)>(r1, r2);

        return;
    }

    public void setVolumeTo(int, int)
    {
        android.support.media2.MediaController2 r0;
        int i0, i1;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void setVolumeTo(int,int)>(i0, i1);

        return;
    }

    public void adjustVolume(int, int)
    {
        android.support.media2.MediaController2 r0;
        int i0, i1;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void adjustVolume(int,int)>(i0, i1);

        return;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.app.PendingIntent $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public int getPlayerState()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: int getPlayerState()>();

        return $i0;
    }

    public long getDuration()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: long getDuration()>();

        return $l0;
    }

    public long getCurrentPosition()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: long getCurrentPosition()>();

        return $l0;
    }

    public float getPlaybackSpeed()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        float $f0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $f0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: float getPlaybackSpeed()>();

        return $f0;
    }

    public void setPlaybackSpeed(float)
    {
        android.support.media2.MediaController2 r0;
        float f0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void setPlaybackSpeed(float)>(f0);

        return;
    }

    public int getBufferingState()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: int getBufferingState()>();

        return $i0;
    }

    public long getBufferedPosition()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: long getBufferedPosition()>();

        return $l0;
    }

    public android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.media2.MediaController2$PlaybackInfo $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()>();

        return $r2;
    }

    public void setRating(java.lang.String, android.support.media2.Rating2)
    {
        android.support.media2.MediaController2 r0;
        java.lang.String r1;
        android.support.media2.Rating2 r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.media2.Rating2;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rating shouldn\'t be null");

        throw $r4;

     label2:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void setRating(java.lang.String,android.support.media2.Rating2)>(r1, r2);

        return;
    }

    public void sendCustomCommand(android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.SessionCommand2 r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        int $i0;
        android.support.media2.MediaController2$MediaController2Impl $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r6;

     label1:
        $i0 = virtualinvoke r1.<android.support.media2.SessionCommand2: int getCommandCode()>();

        if $i0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command should be a custom command");

        throw $r5;

     label2:
        $r4 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r4.<android.support.media2.MediaController2$MediaController2Impl: void sendCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>(r1, r2, r3);

        return;
    }

    public java.util.List getPlaylist()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        java.util.List $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: java.util.List getPlaylist()>();

        return $r2;
    }

    public void setPlaylist(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2 r0;
        java.util.List r1;
        android.support.media2.MediaMetadata2 r2;
        android.support.media2.MediaController2$MediaController2Impl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaController2$MediaController2Impl: void setPlaylist(java.util.List,android.support.media2.MediaMetadata2)>(r1, r2);

        return;
    }

    public void updatePlaylistMetadata(android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaMetadata2 r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void updatePlaylistMetadata(android.support.media2.MediaMetadata2)>(r1);

        return;
    }

    public android.support.media2.MediaMetadata2 getPlaylistMetadata()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.media2.MediaMetadata2 $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        return $r2;
    }

    public void addPlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2 r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r3;

     label2:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void addPlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        return;
    }

    public void removePlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r3;

     label1:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void removePlaylistItem(android.support.media2.MediaItem2)>(r1);

        return;
    }

    public void replacePlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2 r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r3;

     label2:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void replacePlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        return;
    }

    public android.support.media2.MediaItem2 getCurrentMediaItem()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.media2.MediaItem2 $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        return $r2;
    }

    public void skipToPreviousItem()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void skipToPreviousItem()>();

        return;
    }

    public void skipToNextItem()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void skipToNextItem()>();

        return;
    }

    public void skipToPlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r3;

     label1:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void skipToPlaylistItem(android.support.media2.MediaItem2)>(r1);

        return;
    }

    public int getRepeatMode()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: int getRepeatMode()>();

        return $i0;
    }

    public void setRepeatMode(int)
    {
        android.support.media2.MediaController2 r0;
        int i0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void setRepeatMode(int)>(i0);

        return;
    }

    public int getShuffleMode()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: int getShuffleMode()>();

        return $i0;
    }

    public void setShuffleMode(int)
    {
        android.support.media2.MediaController2 r0;
        int i0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void setShuffleMode(int)>(i0);

        return;
    }

    public void subscribeRoutesInfo()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void subscribeRoutesInfo()>();

        return;
    }

    public void unsubscribeRoutesInfo()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: void unsubscribeRoutesInfo()>();

        return;
    }

    public void selectRoute(android.os.Bundle)
    {
        android.support.media2.MediaController2 r0;
        android.os.Bundle r1;
        android.support.media2.MediaController2$MediaController2Impl $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("route shouldn\'t be null");

        throw $r3;

     label1:
        $r2 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaController2$MediaController2Impl: void selectRoute(android.os.Bundle)>(r1);

        return;
    }

    public void setTimeDiff(java.lang.Long)
    {
        android.support.media2.MediaController2 r0;
        java.lang.Long r1;

        r0 := @this: android.support.media2.MediaController2;

        r1 := @parameter0: java.lang.Long;

        r0.<android.support.media2.MediaController2: java.lang.Long mTimeDiff> = r1;

        return;
    }

    android.content.Context getContext()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.content.Context $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.content.Context getContext()>();

        return $r2;
    }

    android.support.media2.MediaController2$ControllerCallback getCallback()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.media2.MediaController2$ControllerCallback $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaController2$ControllerCallback getCallback()>();

        return $r2;
    }

    java.util.concurrent.Executor getCallbackExecutor()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: java.util.concurrent.Executor getCallbackExecutor()>();

        return $r2;
    }

    android.support.v4.media.MediaBrowserCompat getBrowserCompat()
    {
        android.support.media2.MediaController2 r0;
        android.support.media2.MediaController2$MediaController2Impl $r1;
        android.support.v4.media.MediaBrowserCompat $r2;

        r0 := @this: android.support.media2.MediaController2;

        $r1 = r0.<android.support.media2.MediaController2: android.support.media2.MediaController2$MediaController2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaController2$MediaController2Impl: android.support.v4.media.MediaBrowserCompat getBrowserCompat()>();

        return $r2;
    }

android.support.media2.MediaController2$ControllerCallback
    public void <init>()
    {
        android.support.media2.MediaController2$ControllerCallback r0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onConnected(android.support.media2.MediaController2, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.SessionCommandGroup2 r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        return;
    }

    public void onDisconnected(android.support.media2.MediaController2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        return;
    }

    public void onCustomLayoutChanged(android.support.media2.MediaController2, java.util.List)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: java.util.List;

        return;
    }

    public void onPlaybackInfoChanged(android.support.media2.MediaController2, android.support.media2.MediaController2$PlaybackInfo)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.MediaController2$PlaybackInfo r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.MediaController2$PlaybackInfo;

        return;
    }

    public void onAllowedCommandsChanged(android.support.media2.MediaController2, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.SessionCommandGroup2 r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        return;
    }

    public void onCustomCommand(android.support.media2.MediaController2, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        return;
    }

    public void onPlayerStateChanged(android.support.media2.MediaController2, int)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        i0 := @parameter1: int;

        return;
    }

    public void onPlaybackSpeedChanged(android.support.media2.MediaController2, float)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        float f0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        f0 := @parameter1: float;

        return;
    }

    public void onBufferingStateChanged(android.support.media2.MediaController2, android.support.media2.MediaItem2, int)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.MediaItem2 r2;
        int i0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.MediaItem2;

        i0 := @parameter2: int;

        return;
    }

    public void onSeekCompleted(android.support.media2.MediaController2, long)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        long l0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        l0 := @parameter1: long;

        return;
    }

    public void onError(android.support.media2.MediaController2, int, android.os.Bundle)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public void onCurrentMediaItemChanged(android.support.media2.MediaController2, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.MediaItem2 r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.MediaItem2;

        return;
    }

    public void onPlaylistChanged(android.support.media2.MediaController2, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        java.util.List r2;
        android.support.media2.MediaMetadata2 r3;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        return;
    }

    public void onPlaylistMetadataChanged(android.support.media2.MediaController2, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        android.support.media2.MediaMetadata2 r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        return;
    }

    public void onShuffleModeChanged(android.support.media2.MediaController2, int)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        i0 := @parameter1: int;

        return;
    }

    public void onRepeatModeChanged(android.support.media2.MediaController2, int)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        i0 := @parameter1: int;

        return;
    }

    public void onRoutesInfoChanged(android.support.media2.MediaController2, java.util.List)
    {
        android.support.media2.MediaController2$ControllerCallback r0;
        android.support.media2.MediaController2 r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaController2$ControllerCallback;

        r1 := @parameter0: android.support.media2.MediaController2;

        r2 := @parameter1: java.util.List;

        return;
    }

android.support.media2.MediaController2$MediaController2Impl
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.SessionToken2 getSessionToken()>
<android.support.media2.MediaController2$MediaController2Impl: boolean isConnected()>
<android.support.media2.MediaController2$MediaController2Impl: void play()>
<android.support.media2.MediaController2$MediaController2Impl: void pause()>
<android.support.media2.MediaController2$MediaController2Impl: void reset()>
<android.support.media2.MediaController2$MediaController2Impl: void prepare()>
<android.support.media2.MediaController2$MediaController2Impl: void fastForward()>
<android.support.media2.MediaController2$MediaController2Impl: void rewind()>
<android.support.media2.MediaController2$MediaController2Impl: void seekTo(long)>
<android.support.media2.MediaController2$MediaController2Impl: void skipForward()>
<android.support.media2.MediaController2$MediaController2Impl: void skipBackward()>
<android.support.media2.MediaController2$MediaController2Impl: void playFromMediaId(java.lang.String,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void playFromSearch(java.lang.String,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void playFromUri(android.net.Uri,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void prepareFromMediaId(java.lang.String,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void prepareFromSearch(java.lang.String,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void prepareFromUri(android.net.Uri,android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: void setVolumeTo(int,int)>
<android.support.media2.MediaController2$MediaController2Impl: void adjustVolume(int,int)>
<android.support.media2.MediaController2$MediaController2Impl: android.app.PendingIntent getSessionActivity()>
<android.support.media2.MediaController2$MediaController2Impl: int getPlayerState()>
<android.support.media2.MediaController2$MediaController2Impl: long getDuration()>
<android.support.media2.MediaController2$MediaController2Impl: long getCurrentPosition()>
<android.support.media2.MediaController2$MediaController2Impl: float getPlaybackSpeed()>
<android.support.media2.MediaController2$MediaController2Impl: void setPlaybackSpeed(float)>
<android.support.media2.MediaController2$MediaController2Impl: int getBufferingState()>
<android.support.media2.MediaController2$MediaController2Impl: long getBufferedPosition()>
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()>
<android.support.media2.MediaController2$MediaController2Impl: void setRating(java.lang.String,android.support.media2.Rating2)>
<android.support.media2.MediaController2$MediaController2Impl: void sendCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>
<android.support.media2.MediaController2$MediaController2Impl: java.util.List getPlaylist()>
<android.support.media2.MediaController2$MediaController2Impl: void setPlaylist(java.util.List,android.support.media2.MediaMetadata2)>
<android.support.media2.MediaController2$MediaController2Impl: void updatePlaylistMetadata(android.support.media2.MediaMetadata2)>
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaMetadata2 getPlaylistMetadata()>
<android.support.media2.MediaController2$MediaController2Impl: void addPlaylistItem(int,android.support.media2.MediaItem2)>
<android.support.media2.MediaController2$MediaController2Impl: void removePlaylistItem(android.support.media2.MediaItem2)>
<android.support.media2.MediaController2$MediaController2Impl: void replacePlaylistItem(int,android.support.media2.MediaItem2)>
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaItem2 getCurrentMediaItem()>
<android.support.media2.MediaController2$MediaController2Impl: void skipToPreviousItem()>
<android.support.media2.MediaController2$MediaController2Impl: void skipToNextItem()>
<android.support.media2.MediaController2$MediaController2Impl: void skipToPlaylistItem(android.support.media2.MediaItem2)>
<android.support.media2.MediaController2$MediaController2Impl: int getRepeatMode()>
<android.support.media2.MediaController2$MediaController2Impl: void setRepeatMode(int)>
<android.support.media2.MediaController2$MediaController2Impl: int getShuffleMode()>
<android.support.media2.MediaController2$MediaController2Impl: void setShuffleMode(int)>
<android.support.media2.MediaController2$MediaController2Impl: void subscribeRoutesInfo()>
<android.support.media2.MediaController2$MediaController2Impl: void unsubscribeRoutesInfo()>
<android.support.media2.MediaController2$MediaController2Impl: void selectRoute(android.os.Bundle)>
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaController2 getInstance()>
<android.support.media2.MediaController2$MediaController2Impl: android.content.Context getContext()>
<android.support.media2.MediaController2$MediaController2Impl: android.support.media2.MediaController2$ControllerCallback getCallback()>
<android.support.media2.MediaController2$MediaController2Impl: java.util.concurrent.Executor getCallbackExecutor()>
<android.support.media2.MediaController2$MediaController2Impl: android.support.v4.media.MediaBrowserCompat getBrowserCompat()>
android.support.media2.MediaController2$PlaybackInfo
<android.support.media2.MediaController2$PlaybackInfo: java.lang.String KEY_PLAYBACK_TYPE>
<android.support.media2.MediaController2$PlaybackInfo: java.lang.String KEY_CONTROL_TYPE>
<android.support.media2.MediaController2$PlaybackInfo: java.lang.String KEY_MAX_VOLUME>
<android.support.media2.MediaController2$PlaybackInfo: java.lang.String KEY_CURRENT_VOLUME>
<android.support.media2.MediaController2$PlaybackInfo: java.lang.String KEY_AUDIO_ATTRIBUTES>
<android.support.media2.MediaController2$PlaybackInfo: int mPlaybackType>
<android.support.media2.MediaController2$PlaybackInfo: int mControlType>
<android.support.media2.MediaController2$PlaybackInfo: int mMaxVolume>
<android.support.media2.MediaController2$PlaybackInfo: int mCurrentVolume>
<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat mAudioAttrsCompat>
<android.support.media2.MediaController2$PlaybackInfo: int PLAYBACK_TYPE_LOCAL>
<android.support.media2.MediaController2$PlaybackInfo: int PLAYBACK_TYPE_REMOTE>
    void <init>()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(int, android.support.v4.media.AudioAttributesCompat, int, int, int)
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        int i0, i1, i2, i3;
        android.support.v4.media.AudioAttributesCompat r1;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v4.media.AudioAttributesCompat;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.MediaController2$PlaybackInfo: int mPlaybackType> = i0;

        r0.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat mAudioAttrsCompat> = r1;

        r0.<android.support.media2.MediaController2$PlaybackInfo: int mControlType> = i1;

        r0.<android.support.media2.MediaController2$PlaybackInfo: int mMaxVolume> = i2;

        r0.<android.support.media2.MediaController2$PlaybackInfo: int mCurrentVolume> = i3;

        return;
    }

    public int getPlaybackType()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        int $i0;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $i0 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mPlaybackType>;

        return $i0;
    }

    public android.support.v4.media.AudioAttributesCompat getAudioAttributes()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        android.support.v4.media.AudioAttributesCompat $r1;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $r1 = r0.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat mAudioAttrsCompat>;

        return $r1;
    }

    public int getControlType()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        int $i0;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $i0 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mControlType>;

        return $i0;
    }

    public int getMaxVolume()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        int $i0;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $i0 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mMaxVolume>;

        return $i0;
    }

    public int getCurrentVolume()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        int $i0;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $i0 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mCurrentVolume>;

        return $i0;
    }

    android.os.Bundle toBundle()
    {
        android.support.media2.MediaController2$PlaybackInfo r0;
        android.os.Bundle r1, $r2, $r5;
        int $i0, $i1, $i2, $i3;
        android.support.v4.media.AudioAttributesCompat $r3, $r4;

        r0 := @this: android.support.media2.MediaController2$PlaybackInfo;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $i0 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mPlaybackType>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.media.audio_info.playback_type", $i0);

        $i1 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mControlType>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.media.audio_info.control_type", $i1);

        $i2 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mMaxVolume>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.media.audio_info.max_volume", $i2);

        $i3 = r0.<android.support.media2.MediaController2$PlaybackInfo: int mCurrentVolume>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.media.audio_info.current_volume", $i3);

        $r3 = r0.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat mAudioAttrsCompat>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat mAudioAttrsCompat>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.AudioAttributesCompat: android.os.Bundle toBundle()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.media.audio_info.audio_attrs", $r5);

     label1:
        return r1;
    }

    static android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(int, android.support.v4.media.AudioAttributesCompat, int, int, int)
    {
        int i0, i1, i2, i3;
        android.support.v4.media.AudioAttributesCompat r0;
        android.support.media2.MediaController2$PlaybackInfo $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.v4.media.AudioAttributesCompat;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = new android.support.media2.MediaController2$PlaybackInfo;

        specialinvoke $r1.<android.support.media2.MediaController2$PlaybackInfo: void <init>(int,android.support.v4.media.AudioAttributesCompat,int,int,int)>(i0, r0, i1, i2, i3);

        return $r1;
    }

    static android.support.media2.MediaController2$PlaybackInfo fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r2;
        int i0, i1, i2, i3;
        android.support.v4.media.AudioAttributesCompat r1;
        android.support.media2.MediaController2$PlaybackInfo $r3;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("android.media.audio_info.playback_type");

        i1 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("android.media.audio_info.control_type");

        i2 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("android.media.audio_info.max_volume");

        i3 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("android.media.audio_info.current_volume");

        $r2 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android.media.audio_info.audio_attrs");

        r1 = staticinvoke <android.support.v4.media.AudioAttributesCompat: android.support.v4.media.AudioAttributesCompat fromBundle(android.os.Bundle)>($r2);

        $r3 = staticinvoke <android.support.media2.MediaController2$PlaybackInfo: android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(int,android.support.v4.media.AudioAttributesCompat,int,int,int)>(i0, r1, i1, i2, i3);

        return $r3;
    }

android.support.media2.MediaController2$VolumeDirection
android.support.media2.MediaController2$VolumeFlags
