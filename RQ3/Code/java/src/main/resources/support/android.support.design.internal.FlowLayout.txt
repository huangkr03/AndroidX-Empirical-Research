android.support.design.internal.FlowLayout
<android.support.design.internal.FlowLayout: int lineSpacing>
<android.support.design.internal.FlowLayout: int itemSpacing>
<android.support.design.internal.FlowLayout: boolean singleLine>
    public void <init>(android.content.Context)
    {
        android.support.design.internal.FlowLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.design.internal.FlowLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.internal.FlowLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.design.internal.FlowLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.internal.FlowLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.design.internal.FlowLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.design.internal.FlowLayout: boolean singleLine> = 0;

        specialinvoke r0.<android.support.design.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.design.internal.FlowLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: android.support.design.internal.FlowLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.support.design.internal.FlowLayout: boolean singleLine> = 0;

        specialinvoke r0.<android.support.design.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void loadFromAttributes(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.internal.FlowLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        android.content.res.Resources$Theme $r4;
        int[] $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.design.internal.FlowLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = <android.support.design.R$styleable: int[] FlowLayout>;

        r3 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, 0, 0);

        $i0 = <android.support.design.R$styleable: int FlowLayout_lineSpacing>;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<android.support.design.internal.FlowLayout: int lineSpacing> = $i1;

        $i2 = <android.support.design.R$styleable: int FlowLayout_itemSpacing>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, 0);

        r0.<android.support.design.internal.FlowLayout: int itemSpacing> = $i3;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    protected int getLineSpacing()
    {
        android.support.design.internal.FlowLayout r0;
        int $i0;

        r0 := @this: android.support.design.internal.FlowLayout;

        $i0 = r0.<android.support.design.internal.FlowLayout: int lineSpacing>;

        return $i0;
    }

    protected void setLineSpacing(int)
    {
        android.support.design.internal.FlowLayout r0;
        int i0;

        r0 := @this: android.support.design.internal.FlowLayout;

        i0 := @parameter0: int;

        r0.<android.support.design.internal.FlowLayout: int lineSpacing> = i0;

        return;
    }

    protected int getItemSpacing()
    {
        android.support.design.internal.FlowLayout r0;
        int $i0;

        r0 := @this: android.support.design.internal.FlowLayout;

        $i0 = r0.<android.support.design.internal.FlowLayout: int itemSpacing>;

        return $i0;
    }

    protected void setItemSpacing(int)
    {
        android.support.design.internal.FlowLayout r0;
        int i0;

        r0 := @this: android.support.design.internal.FlowLayout;

        i0 := @parameter0: int;

        r0.<android.support.design.internal.FlowLayout: int itemSpacing> = i0;

        return;
    }

    protected boolean isSingleLine()
    {
        android.support.design.internal.FlowLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.internal.FlowLayout;

        $z0 = r0.<android.support.design.internal.FlowLayout: boolean singleLine>;

        return $z0;
    }

    public void setSingleLine(boolean)
    {
        android.support.design.internal.FlowLayout r0;
        boolean z0;

        r0 := @this: android.support.design.internal.FlowLayout;

        z0 := @parameter0: boolean;

        r0.<android.support.design.internal.FlowLayout: boolean singleLine> = z0;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.design.internal.FlowLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, $i27, i28, i29, i30, $i31, $i32, i33, $i34, i35, i36;
        android.view.ViewGroup$LayoutParams r1;
        android.view.ViewGroup$MarginLayoutParams r2;
        boolean $z0, $z1;
        android.view.View r3;

        r0 := @this: android.support.design.internal.FlowLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if i3 == -2147483648 goto label01;

        if i3 != 1073741824 goto label02;

     label01:
        $i20 = i2;

        goto label03;

     label02:
        $i20 = 2147483647;

     label03:
        i6 = $i20;

        i21 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingLeft()>();

        i22 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingTop()>();

        i23 = i22;

        i24 = i21;

        i25 = 0;

        $i8 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingRight()>();

        i7 = i6 - $i8;

        i26 = 0;

     label04:
        $i27 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getChildCount()>();

        if i26 >= $i27 goto label10;

        r3 = virtualinvoke r0.<android.support.design.internal.FlowLayout: android.view.View getChildAt(int)>(i26);

        $i9 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i9 != 8 goto label05;

        goto label09;

     label05:
        virtualinvoke r0.<android.support.design.internal.FlowLayout: void measureChild(android.view.View,int,int)>(r3, i0, i1);

        r1 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        i28 = 0;

        i29 = 0;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label06;

        r2 = (android.view.ViewGroup$MarginLayoutParams) r1;

        $i18 = r2.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        i28 = i28 + $i18;

        $i19 = r2.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        i29 = i29 + $i19;

     label06:
        $i10 = i21 + i28;

        $i11 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i30 = $i10 + $i11;

        if i30 <= i7 goto label07;

        $z1 = virtualinvoke r0.<android.support.design.internal.FlowLayout: boolean isSingleLine()>();

        if $z1 != 0 goto label07;

        i21 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingLeft()>();

        $i17 = r0.<android.support.design.internal.FlowLayout: int lineSpacing>;

        i22 = i23 + $i17;

     label07:
        $i31 = i21 + i28;

        $i32 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i33 = $i31 + $i32;

        $i34 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i23 = i22 + $i34;

        if i33 <= i25 goto label08;

        i25 = i33;

     label08:
        $i12 = i28 + i29;

        $i13 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        $i15 = $i12 + $i13;

        $i14 = r0.<android.support.design.internal.FlowLayout: int itemSpacing>;

        $i16 = $i15 + $i14;

        i21 = i21 + $i16;

     label09:
        i26 = i26 + 1;

        goto label04;

     label10:
        i35 = staticinvoke <android.support.design.internal.FlowLayout: int getMeasuredDimension(int,int,int)>(i2, i3, i25);

        i36 = staticinvoke <android.support.design.internal.FlowLayout: int getMeasuredDimension(int,int,int)>(i4, i5, i23);

        virtualinvoke r0.<android.support.design.internal.FlowLayout: void setMeasuredDimension(int,int)>(i35, i36);

        return;
    }

    private static int getMeasuredDimension(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        lookupswitch(i1)
        {
            case -2147483648: goto label2;
            case 1073741824: goto label1;
            default: goto label3;
        };

     label1:
        return i0;

     label2:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i0);

        return $i3;

     label3:
        return i2;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.internal.FlowLayout r0;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, $i29, i30, i31, i32, $i33, $i34, i35, $i36;
        android.view.View r1, r4;
        android.view.ViewGroup$LayoutParams r2;
        android.view.ViewGroup$MarginLayoutParams r3;

        r0 := @this: android.support.design.internal.FlowLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i7 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getChildCount()>();

        if $i7 != 0 goto label01;

        return;

     label01:
        r4 = (android.view.View) r0;

        $i8 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r4);

        if $i8 != 1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z1 = $z4;

        if z1 == 0 goto label04;

        $i23 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingRight()>();

        goto label05;

     label04:
        $i23 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingLeft()>();

     label05:
        i4 = $i23;

        if z1 == 0 goto label06;

        $i24 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingLeft()>();

        goto label07;

     label06:
        $i24 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingRight()>();

     label07:
        i5 = $i24;

        i25 = i4;

        i26 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getPaddingTop()>();

        i27 = i26;

        $i9 = i2 - i0;

        i6 = $i9 - i5;

        i28 = 0;

     label08:
        $i29 = virtualinvoke r0.<android.support.design.internal.FlowLayout: int getChildCount()>();

        if i28 >= $i29 goto label15;

        r1 = virtualinvoke r0.<android.support.design.internal.FlowLayout: android.view.View getChildAt(int)>(i28);

        $i10 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i10 != 8 goto label09;

        goto label14;

     label09:
        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        i30 = 0;

        i31 = 0;

        $z2 = r2 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label10;

        r3 = (android.view.ViewGroup$MarginLayoutParams) r2;

        i30 = staticinvoke <android.support.v4.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)>(r3);

        i31 = staticinvoke <android.support.v4.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)>(r3);

     label10:
        $i11 = i25 + i30;

        $i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i32 = $i11 + $i12;

        $z3 = r0.<android.support.design.internal.FlowLayout: boolean singleLine>;

        if $z3 != 0 goto label11;

        if i32 <= i6 goto label11;

        i25 = i4;

        $i22 = r0.<android.support.design.internal.FlowLayout: int lineSpacing>;

        i26 = i27 + $i22;

     label11:
        $i33 = i25 + i30;

        $i34 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i35 = $i33 + $i34;

        $i36 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i27 = i26 + $i36;

        if z1 == 0 goto label12;

        $i21 = i6 - i35;

        $i19 = i6 - i25;

        $i20 = $i19 - i30;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i21, i26, $i20, i27);

        goto label13;

     label12:
        $i13 = i25 + i30;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i13, i26, i35, i27);

     label13:
        $i14 = i30 + i31;

        $i15 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i17 = $i14 + $i15;

        $i16 = r0.<android.support.design.internal.FlowLayout: int itemSpacing>;

        $i18 = $i17 + $i16;

        i25 = i25 + $i18;

     label14:
        i28 = i28 + 1;

        goto label08;

     label15:
        return;
    }

