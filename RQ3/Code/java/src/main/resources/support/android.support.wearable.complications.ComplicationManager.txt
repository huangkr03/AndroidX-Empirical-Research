android.support.wearable.complications.ComplicationManager
<android.support.wearable.complications.ComplicationManager: java.lang.String TAG>
<android.support.wearable.complications.ComplicationManager: android.support.wearable.complications.IComplicationManager mService>
    public void <init>(android.support.wearable.complications.IComplicationManager)
    {
        android.support.wearable.complications.ComplicationManager r0;
        android.support.wearable.complications.IComplicationManager r1;

        r0 := @this: android.support.wearable.complications.ComplicationManager;

        r1 := @parameter0: android.support.wearable.complications.IComplicationManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.wearable.complications.ComplicationManager: android.support.wearable.complications.IComplicationManager mService> = r1;

        return;
    }

    public void updateComplicationData(int, android.support.wearable.complications.ComplicationData)
    {
        android.support.wearable.complications.ComplicationManager r0;
        int i0, $i1, $i2;
        android.support.wearable.complications.ComplicationData r1;
        java.lang.Throwable r2, $r5;
        java.lang.IllegalArgumentException $r3;
        android.support.wearable.complications.IComplicationManager $r4;

        r0 := @this: android.support.wearable.complications.ComplicationManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.wearable.complications.ComplicationData;

        $i1 = virtualinvoke r1.<android.support.wearable.complications.ComplicationData: int getType()>();

        if $i1 == 1 goto label1;

        $i2 = virtualinvoke r1.<android.support.wearable.complications.ComplicationData: int getType()>();

        if $i2 != 2 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot send data of TYPE_NOT_CONFIGURED or TYPE_EMPTY. Use TYPE_NO_DATA instead.");

        throw $r3;

     label2:
        $r4 = r0.<android.support.wearable.complications.ComplicationManager: android.support.wearable.complications.IComplicationManager mService>;

        interfaceinvoke $r4.<android.support.wearable.complications.IComplicationManager: void updateComplicationData(int,android.support.wearable.complications.ComplicationData)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ComplicationManager", "Failed to send complication data.", r2);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void noUpdateRequired(int)
    {
        android.support.wearable.complications.ComplicationManager r0;
        int i0;
        java.lang.Throwable r1, $r3;
        android.support.wearable.complications.IComplicationManager $r2;

        r0 := @this: android.support.wearable.complications.ComplicationManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.support.wearable.complications.ComplicationManager: android.support.wearable.complications.IComplicationManager mService>;

        interfaceinvoke $r2.<android.support.wearable.complications.IComplicationManager: void updateComplicationData(int,android.support.wearable.complications.ComplicationData)>(i0, null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ComplicationManager", "Failed to send complication data.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

