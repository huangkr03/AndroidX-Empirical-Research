android.support.design.shape.ShapePath
<android.support.design.shape.ShapePath: float startX>
<android.support.design.shape.ShapePath: float startY>
<android.support.design.shape.ShapePath: float endX>
<android.support.design.shape.ShapePath: float endY>
<android.support.design.shape.ShapePath: java.util.List operations>
    public void <init>()
    {
        android.support.design.shape.ShapePath r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.design.shape.ShapePath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.shape.ShapePath: java.util.List operations> = $r1;

        virtualinvoke r0.<android.support.design.shape.ShapePath: void reset(float,float)>(0.0F, 0.0F);

        return;
    }

    public void <init>(float, float)
    {
        android.support.design.shape.ShapePath r0;
        float f0, f1;
        java.util.ArrayList $r1;

        r0 := @this: android.support.design.shape.ShapePath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.shape.ShapePath: java.util.List operations> = $r1;

        virtualinvoke r0.<android.support.design.shape.ShapePath: void reset(float,float)>(f0, f1);

        return;
    }

    public void reset(float, float)
    {
        android.support.design.shape.ShapePath r0;
        float f0, f1;
        java.util.List $r1;

        r0 := @this: android.support.design.shape.ShapePath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.design.shape.ShapePath: float startX> = f0;

        r0.<android.support.design.shape.ShapePath: float startY> = f1;

        r0.<android.support.design.shape.ShapePath: float endX> = f0;

        r0.<android.support.design.shape.ShapePath: float endY> = f1;

        $r1 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void lineTo(float, float)
    {
        android.support.design.shape.ShapePath r0;
        float f0, f1;
        android.support.design.shape.ShapePath$PathLineOperation r1, $r2;
        java.util.List $r3;

        r0 := @this: android.support.design.shape.ShapePath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = new android.support.design.shape.ShapePath$PathLineOperation;

        specialinvoke $r2.<android.support.design.shape.ShapePath$PathLineOperation: void <init>()>();

        r1 = $r2;

        staticinvoke <android.support.design.shape.ShapePath$PathLineOperation: float access$002(android.support.design.shape.ShapePath$PathLineOperation,float)>(r1, f0);

        staticinvoke <android.support.design.shape.ShapePath$PathLineOperation: float access$102(android.support.design.shape.ShapePath$PathLineOperation,float)>(r1, f1);

        $r3 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        r0.<android.support.design.shape.ShapePath: float endX> = f0;

        r0.<android.support.design.shape.ShapePath: float endY> = f1;

        return;
    }

    public void quadToPoint(float, float, float, float)
    {
        android.support.design.shape.ShapePath r0;
        float f0, f1, f2, f3;
        android.support.design.shape.ShapePath$PathQuadOperation r1, $r2;
        java.util.List $r3;

        r0 := @this: android.support.design.shape.ShapePath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.support.design.shape.ShapePath$PathQuadOperation;

        specialinvoke $r2.<android.support.design.shape.ShapePath$PathQuadOperation: void <init>()>();

        r1 = $r2;

        r1.<android.support.design.shape.ShapePath$PathQuadOperation: float controlX> = f0;

        r1.<android.support.design.shape.ShapePath$PathQuadOperation: float controlY> = f1;

        r1.<android.support.design.shape.ShapePath$PathQuadOperation: float endX> = f2;

        r1.<android.support.design.shape.ShapePath$PathQuadOperation: float endY> = f3;

        $r3 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        r0.<android.support.design.shape.ShapePath: float endX> = f2;

        r0.<android.support.design.shape.ShapePath: float endY> = f3;

        return;
    }

    public void addArc(float, float, float, float, float, float)
    {
        android.support.design.shape.ShapePath r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        android.support.design.shape.ShapePath$PathArcOperation r1, $r2;
        java.util.List $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: android.support.design.shape.ShapePath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r2 = new android.support.design.shape.ShapePath$PathArcOperation;

        specialinvoke $r2.<android.support.design.shape.ShapePath$PathArcOperation: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        r1 = $r2;

        r1.<android.support.design.shape.ShapePath$PathArcOperation: float startAngle> = f4;

        r1.<android.support.design.shape.ShapePath$PathArcOperation: float sweepAngle> = f5;

        $r3 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $f6 = f0 + f2;

        $f9 = $f6 * 0.5F;

        $f7 = f2 - f0;

        $f10 = $f7 / 2.0F;

        $f8 = f4 + f5;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $f11 = (float) $d2;

        $f12 = $f10 * $f11;

        $f13 = $f9 + $f12;

        r0.<android.support.design.shape.ShapePath: float endX> = $f13;

        $f14 = f1 + f3;

        $f17 = $f14 * 0.5F;

        $f15 = f3 - f1;

        $f18 = $f15 / 2.0F;

        $f16 = f4 + f5;

        $d3 = (double) $f16;

        $d4 = staticinvoke <java.lang.Math: double toRadians(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        $f19 = (float) $d5;

        $f20 = $f18 * $f19;

        $f21 = $f17 + $f20;

        r0.<android.support.design.shape.ShapePath: float endY> = $f21;

        return;
    }

    public void applyToPath(android.graphics.Matrix, android.graphics.Path)
    {
        android.support.design.shape.ShapePath r0;
        android.graphics.Matrix r1;
        android.graphics.Path r2;
        int i0, i1;
        android.support.design.shape.ShapePath$PathOperation r3;
        java.util.List $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: android.support.design.shape.ShapePath;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Path;

        i1 = 0;

        $r4 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<android.support.design.shape.ShapePath: java.util.List operations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.support.design.shape.ShapePath$PathOperation) $r6;

        virtualinvoke r3.<android.support.design.shape.ShapePath$PathOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

android.support.design.shape.ShapePath$PathArcOperation
<android.support.design.shape.ShapePath$PathArcOperation: android.graphics.RectF rectF>
<android.support.design.shape.ShapePath$PathArcOperation: float left>
<android.support.design.shape.ShapePath$PathArcOperation: float top>
<android.support.design.shape.ShapePath$PathArcOperation: float right>
<android.support.design.shape.ShapePath$PathArcOperation: float bottom>
<android.support.design.shape.ShapePath$PathArcOperation: float startAngle>
<android.support.design.shape.ShapePath$PathArcOperation: float sweepAngle>
    public void <init>(float, float, float, float)
    {
        android.support.design.shape.ShapePath$PathArcOperation r0;
        float f0, f1, f2, f3;

        r0 := @this: android.support.design.shape.ShapePath$PathArcOperation;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<android.support.design.shape.ShapePath$PathOperation: void <init>()>();

        r0.<android.support.design.shape.ShapePath$PathArcOperation: float left> = f0;

        r0.<android.support.design.shape.ShapePath$PathArcOperation: float top> = f1;

        r0.<android.support.design.shape.ShapePath$PathArcOperation: float right> = f2;

        r0.<android.support.design.shape.ShapePath$PathArcOperation: float bottom> = f3;

        return;
    }

    public void applyToPath(android.graphics.Matrix, android.graphics.Path)
    {
        android.support.design.shape.ShapePath$PathArcOperation r0;
        android.graphics.Matrix r1, r3;
        android.graphics.Path r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.RectF $r4, $r5;

        r0 := @this: android.support.design.shape.ShapePath$PathArcOperation;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Path;

        r3 = r0.<android.support.design.shape.ShapePath$PathArcOperation: android.graphics.Matrix matrix>;

        virtualinvoke r1.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r3);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r3);

        $r4 = <android.support.design.shape.ShapePath$PathArcOperation: android.graphics.RectF rectF>;

        $f3 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float left>;

        $f2 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float top>;

        $f1 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float right>;

        $f0 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float bottom>;

        virtualinvoke $r4.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f2, $f1, $f0);

        $r5 = <android.support.design.shape.ShapePath$PathArcOperation: android.graphics.RectF rectF>;

        $f5 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float startAngle>;

        $f4 = r0.<android.support.design.shape.ShapePath$PathArcOperation: float sweepAngle>;

        virtualinvoke r2.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r5, $f5, $f4, 0);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.graphics.RectF $r0;

        $r0 = new android.graphics.RectF;

        specialinvoke $r0.<android.graphics.RectF: void <init>()>();

        <android.support.design.shape.ShapePath$PathArcOperation: android.graphics.RectF rectF> = $r0;

        return;
    }

android.support.design.shape.ShapePath$PathLineOperation
<android.support.design.shape.ShapePath$PathLineOperation: float x>
<android.support.design.shape.ShapePath$PathLineOperation: float y>
    public void <init>()
    {
        android.support.design.shape.ShapePath$PathLineOperation r0;

        r0 := @this: android.support.design.shape.ShapePath$PathLineOperation;

        specialinvoke r0.<android.support.design.shape.ShapePath$PathOperation: void <init>()>();

        return;
    }

    public void applyToPath(android.graphics.Matrix, android.graphics.Path)
    {
        android.support.design.shape.ShapePath$PathLineOperation r0;
        android.graphics.Matrix r1, r3;
        android.graphics.Path r2;
        float $f0, $f1;

        r0 := @this: android.support.design.shape.ShapePath$PathLineOperation;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Path;

        r3 = r0.<android.support.design.shape.ShapePath$PathLineOperation: android.graphics.Matrix matrix>;

        virtualinvoke r1.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r3);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r3);

        $f1 = r0.<android.support.design.shape.ShapePath$PathLineOperation: float x>;

        $f0 = r0.<android.support.design.shape.ShapePath$PathLineOperation: float y>;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r1);

        return;
    }

    static float access$002(android.support.design.shape.ShapePath$PathLineOperation, float)
    {
        android.support.design.shape.ShapePath$PathLineOperation r0;
        float f0;

        r0 := @parameter0: android.support.design.shape.ShapePath$PathLineOperation;

        f0 := @parameter1: float;

        r0.<android.support.design.shape.ShapePath$PathLineOperation: float x> = f0;

        return f0;
    }

    static float access$102(android.support.design.shape.ShapePath$PathLineOperation, float)
    {
        android.support.design.shape.ShapePath$PathLineOperation r0;
        float f0;

        r0 := @parameter0: android.support.design.shape.ShapePath$PathLineOperation;

        f0 := @parameter1: float;

        r0.<android.support.design.shape.ShapePath$PathLineOperation: float y> = f0;

        return f0;
    }

android.support.design.shape.ShapePath$PathOperation
<android.support.design.shape.ShapePath$PathOperation: android.graphics.Matrix matrix>
    public void <init>()
    {
        android.support.design.shape.ShapePath$PathOperation r0;
        android.graphics.Matrix $r1;

        r0 := @this: android.support.design.shape.ShapePath$PathOperation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.design.shape.ShapePath$PathOperation: android.graphics.Matrix matrix> = $r1;

        return;
    }

<android.support.design.shape.ShapePath$PathOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)>
android.support.design.shape.ShapePath$PathQuadOperation
<android.support.design.shape.ShapePath$PathQuadOperation: float controlX>
<android.support.design.shape.ShapePath$PathQuadOperation: float controlY>
<android.support.design.shape.ShapePath$PathQuadOperation: float endX>
<android.support.design.shape.ShapePath$PathQuadOperation: float endY>
    public void <init>()
    {
        android.support.design.shape.ShapePath$PathQuadOperation r0;

        r0 := @this: android.support.design.shape.ShapePath$PathQuadOperation;

        specialinvoke r0.<android.support.design.shape.ShapePath$PathOperation: void <init>()>();

        return;
    }

    public void applyToPath(android.graphics.Matrix, android.graphics.Path)
    {
        android.support.design.shape.ShapePath$PathQuadOperation r0;
        android.graphics.Matrix r1, r3;
        android.graphics.Path r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.design.shape.ShapePath$PathQuadOperation;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Path;

        r3 = r0.<android.support.design.shape.ShapePath$PathQuadOperation: android.graphics.Matrix matrix>;

        virtualinvoke r1.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r3);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r3);

        $f3 = r0.<android.support.design.shape.ShapePath$PathQuadOperation: float controlX>;

        $f2 = r0.<android.support.design.shape.ShapePath$PathQuadOperation: float controlY>;

        $f1 = r0.<android.support.design.shape.ShapePath$PathQuadOperation: float endX>;

        $f0 = r0.<android.support.design.shape.ShapePath$PathQuadOperation: float endY>;

        virtualinvoke r2.<android.graphics.Path: void quadTo(float,float,float,float)>($f3, $f2, $f1, $f0);

        virtualinvoke r2.<android.graphics.Path: void transform(android.graphics.Matrix)>(r1);

        return;
    }

