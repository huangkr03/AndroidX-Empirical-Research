android.support.test.espresso.base.ThreadPoolExecutorExtractor
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.lang.String ASYNC_TASK_CLASS_NAME>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.lang.String MODERN_ASYNC_TASK_CLASS_NAME>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.lang.String MODERN_ASYNC_TASK_FIELD_NAME>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.lang.String LEGACY_ASYNC_TASK_FIELD_NAME>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: android.os.Handler mainHandler>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable MODERN_ASYNC_TASK_EXTRACTOR>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LOAD_ASYNC_TASK_CLASS>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LEGACY_ASYNC_TASK_EXECUTOR>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable POST_HONEYCOMB_ASYNC_TASK_EXECUTOR>
    void <init>(android.os.Looper)
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor r0;
        android.os.Looper r1;
        android.os.Handler $r2;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor: android.os.Handler mainHandler> = $r2;

        return;
    }

    public java.util.concurrent.ThreadPoolExecutor getAsyncTaskThreadPool()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor r0;
        int $i0;
        java.util.concurrent.Callable $r2, $r9;
        java.util.concurrent.FutureTask $r3, r15, r18, r19;
        java.lang.Object $r4, $r6;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r5;
        java.util.concurrent.ThreadPoolExecutor $r7;
        java.lang.Throwable $r10, $r12, $r13, r16, r17, r22, r24;
        java.lang.RuntimeException r20, r21;
        java.util.concurrent.ExecutionException r23;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        r18 = new java.util.concurrent.FutureTask;

        $r9 = <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LEGACY_ASYNC_TASK_EXECUTOR>;

        specialinvoke r18.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r9);

        r15 = r18;

        goto label2;

     label1:
        r19 = new java.util.concurrent.FutureTask;

        $r2 = <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable POST_HONEYCOMB_ASYNC_TASK_EXECUTOR>;

        specialinvoke r19.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        r15 = r19;

     label2:
        $r3 = specialinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.FutureTask runOnMainThread(java.util.concurrent.FutureTask)>(r15);

        $r4 = virtualinvoke $r3.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r5 = (android.support.test.espresso.core.internal.deps.guava.base.Optional) $r4;

        $r6 = virtualinvoke $r5.<android.support.test.espresso.core.internal.deps.guava.base.Optional: java.lang.Object get()>();

        $r7 = (java.util.concurrent.ThreadPoolExecutor) $r6;

     label3:
        return $r7;

     label4:
        $r13 := @caughtexception;

        r16 = $r13;

        r20 = new java.lang.RuntimeException;

        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Interrupted while trying to get the async task executor!", r16);

        r22 = (java.lang.Throwable) r20;

        throw r22;

     label5:
        $r10 := @caughtexception;

        r17 = $r10;

        r21 = new java.lang.RuntimeException;

        r23 = (java.util.concurrent.ExecutionException) r17;

        $r12 = virtualinvoke r23.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        r24 = (java.lang.Throwable) r21;

        throw r24;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.util.concurrent.ExecutionException from label2 to label3 with label5;
    }

    public android.support.test.espresso.core.internal.deps.guava.base.Optional getCompatAsyncTaskThreadPool()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor r0;
        java.util.concurrent.Callable $r2;
        java.util.concurrent.FutureTask $r3, r13;
        java.lang.Object $r4;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r5;
        java.lang.Throwable $r6, $r8, $r9, r11, r12, r16, r18;
        java.lang.RuntimeException r14, r15;
        java.util.concurrent.ExecutionException r17;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor;

     label1:
        r13 = new java.util.concurrent.FutureTask;

        $r2 = <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable MODERN_ASYNC_TASK_EXTRACTOR>;

        specialinvoke r13.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        $r3 = specialinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.FutureTask runOnMainThread(java.util.concurrent.FutureTask)>(r13);

        $r4 = virtualinvoke $r3.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r5 = (android.support.test.espresso.core.internal.deps.guava.base.Optional) $r4;

     label2:
        return $r5;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Interrupted while trying to get the compat async executor!", r11);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label4:
        $r6 := @caughtexception;

        r12 = $r6;

        r15 = new java.lang.RuntimeException;

        r17 = (java.util.concurrent.ExecutionException) r12;

        $r8 = virtualinvoke r17.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        r18 = (java.lang.Throwable) r15;

        throw r18;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
    }

    private java.util.concurrent.FutureTask runOnMainThread(java.util.concurrent.FutureTask)
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor r0;
        java.util.concurrent.FutureTask r1;
        java.util.concurrent.CountDownLatch r2, r11;
        java.lang.Throwable r3, $r9, r14;
        android.os.Looper $r4, $r5;
        android.os.Handler $r8;
        boolean $z1;
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$1 r12;
        java.lang.RuntimeException r13;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor;

        r1 := @parameter0: java.util.concurrent.FutureTask;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r4 == $r5 goto label5;

        r11 = new java.util.concurrent.CountDownLatch;

        specialinvoke r11.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r2 = r11;

        $r8 = r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor: android.os.Handler mainHandler>;

        r12 = new android.support.test.espresso.base.ThreadPoolExecutorExtractor$1;

        specialinvoke r12.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: void <init>(android.support.test.espresso.base.ThreadPoolExecutorExtractor,java.util.concurrent.FutureTask,java.util.concurrent.CountDownLatch)>(r0, r1, r2);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>(r12);

     label1:
        virtualinvoke r2.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $z1 = virtualinvoke r1.<java.util.concurrent.FutureTask: boolean isDone()>();

        if $z1 != 0 goto label4;

        r13 = new java.lang.RuntimeException;

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Interrupted while waiting for task to complete.");

        r14 = (java.lang.Throwable) r13;

        throw r14;

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<java.util.concurrent.FutureTask: void run()>();

     label6:
        return r1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static java.util.concurrent.Callable access$000()
    {
        java.util.concurrent.Callable $r0;

        $r0 = <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LOAD_ASYNC_TASK_CLASS>;

        return $r0;
    }

    static void <clinit>()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$2 $r0;
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$3 $r1;
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$4 $r2;
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$5 $r3;

        $r0 = new android.support.test.espresso.base.ThreadPoolExecutorExtractor$2;

        specialinvoke $r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$2: void <init>()>();

        <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable MODERN_ASYNC_TASK_EXTRACTOR> = $r0;

        $r1 = new android.support.test.espresso.base.ThreadPoolExecutorExtractor$3;

        specialinvoke $r1.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$3: void <init>()>();

        <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LOAD_ASYNC_TASK_CLASS> = $r1;

        $r2 = new android.support.test.espresso.base.ThreadPoolExecutorExtractor$4;

        specialinvoke $r2.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$4: void <init>()>();

        <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable LEGACY_ASYNC_TASK_EXECUTOR> = $r2;

        $r3 = new android.support.test.espresso.base.ThreadPoolExecutorExtractor$5;

        specialinvoke $r3.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$5: void <init>()>();

        <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable POST_HONEYCOMB_ASYNC_TASK_EXECUTOR> = $r3;

        return;
    }

android.support.test.espresso.base.ThreadPoolExecutorExtractor$1
<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.FutureTask val$futureToRun>
<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.CountDownLatch val$latch>
    void <init>(android.support.test.espresso.base.ThreadPoolExecutorExtractor, java.util.concurrent.FutureTask, java.util.concurrent.CountDownLatch)
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$1 r0;
        android.support.test.espresso.base.ThreadPoolExecutorExtractor r1;
        java.util.concurrent.FutureTask r2;
        java.util.concurrent.CountDownLatch r3;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$1;

        r1 := @parameter0: android.support.test.espresso.base.ThreadPoolExecutorExtractor;

        r2 := @parameter1: java.util.concurrent.FutureTask;

        r3 := @parameter2: java.util.concurrent.CountDownLatch;

        r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.FutureTask val$futureToRun> = r2;

        r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.CountDownLatch val$latch> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$1 r0;
        java.lang.Throwable r1, $r4;
        java.util.concurrent.FutureTask $r2;
        java.util.concurrent.CountDownLatch $r3, $r5;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$1;

     label1:
        $r2 = r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.FutureTask val$futureToRun>;

        virtualinvoke $r2.<java.util.concurrent.FutureTask: void run()>();

     label2:
        $r3 = r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$1: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

android.support.test.espresso.base.ThreadPoolExecutorExtractor$2
    void <init>()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$2 r0;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.espresso.core.internal.deps.guava.base.Optional call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$2 r0;
        java.lang.reflect.Field r1;
        java.lang.Object $r2;
        java.util.concurrent.ThreadPoolExecutor $r3;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r4, $r6, $r8;
        java.lang.Throwable $r5, $r7, r10, r11;
        java.lang.Class r9;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$2;

     label1:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.support.v4.content.ModernAsyncTask");

        r1 = virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("THREAD_POOL_EXECUTOR");

        $r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r3 = (java.util.concurrent.ThreadPoolExecutor) $r2;

        $r4 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional of(java.lang.Object)>($r3);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r8;

     label4:
        $r5 := @caughtexception;

        r11 = $r5;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$2 r0;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r1;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$2: android.support.test.espresso.core.internal.deps.guava.base.Optional call()>();

        return $r1;
    }

android.support.test.espresso.base.ThreadPoolExecutorExtractor$3
    void <init>()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$3 r0;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Class call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$3 r0;
        java.lang.Class $r1;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$3;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.AsyncTask");

        return $r1;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$3 r0;
        java.lang.Class $r1;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$3;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$3: java.lang.Class call()>();

        return $r1;
    }

android.support.test.espresso.base.ThreadPoolExecutorExtractor$4
    void <init>()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$4 r0;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.espresso.core.internal.deps.guava.base.Optional call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$4 r0;
        java.util.concurrent.Callable $r1;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3;
        java.util.concurrent.ThreadPoolExecutor $r5;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r6, $r8, $r10;
        java.lang.Throwable $r7, $r9, r12, r13;
        java.lang.reflect.Field r11;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$4;

     label1:
        $r1 = staticinvoke <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable access$000()>();

        $r2 = interfaceinvoke $r1.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r3 = (java.lang.Class) $r2;

        r11 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("sExecutor");

        virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke r11.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r5 = (java.util.concurrent.ThreadPoolExecutor) $r4;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional of(java.lang.Object)>($r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r12 = $r7;

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r8;

     label4:
        $r9 := @caughtexception;

        r13 = $r9;

        $r10 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r10;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$4 r0;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r1;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$4;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$4: android.support.test.espresso.core.internal.deps.guava.base.Optional call()>();

        return $r1;
    }

android.support.test.espresso.base.ThreadPoolExecutorExtractor$5
    void <init>()
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$5 r0;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.espresso.core.internal.deps.guava.base.Optional call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$5 r0;
        java.util.concurrent.Callable $r1;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3;
        java.util.concurrent.ThreadPoolExecutor $r5;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r6, $r8, $r10;
        java.lang.Throwable $r7, $r9, r12, r13;
        java.lang.reflect.Field r11;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$5;

     label1:
        $r1 = staticinvoke <android.support.test.espresso.base.ThreadPoolExecutorExtractor: java.util.concurrent.Callable access$000()>();

        $r2 = interfaceinvoke $r1.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r3 = (java.lang.Class) $r2;

        r11 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("THREAD_POOL_EXECUTOR");

        $r4 = virtualinvoke r11.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r5 = (java.util.concurrent.ThreadPoolExecutor) $r4;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional of(java.lang.Object)>($r5);

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r10;

     label4:
        $r7 := @caughtexception;

        r13 = $r7;

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Optional: android.support.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r8;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.ThreadPoolExecutorExtractor$5 r0;
        android.support.test.espresso.core.internal.deps.guava.base.Optional $r1;

        r0 := @this: android.support.test.espresso.base.ThreadPoolExecutorExtractor$5;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.ThreadPoolExecutorExtractor$5: android.support.test.espresso.core.internal.deps.guava.base.Optional call()>();

        return $r1;
    }

