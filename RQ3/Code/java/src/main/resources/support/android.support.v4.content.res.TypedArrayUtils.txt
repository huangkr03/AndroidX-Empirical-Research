android.support.v4.content.res.TypedArrayUtils
<android.support.v4.content.res.TypedArrayUtils: java.lang.String NAMESPACE>
    public static boolean hasAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static float getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0;
        float f0, $f1;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        f0 := @parameter4: float;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return f0;

     label1:
        $f1 = virtualinvoke r0.<android.content.res.TypedArray: float getFloat(int,float)>(i0, f0);

        return $f1;
    }

    public static boolean getNamedBoolean(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, boolean)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0;
        boolean z0, z1, $z2;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z1 != 0 goto label1;

        return z0;

     label1:
        $z2 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, z0);

        return $z2;
    }

    public static int getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return i1;

     label1:
        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, i1);

        return $i2;
    }

    public static int getNamedColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return i1;

     label1:
        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getColor(int,int)>(i0, i1);

        return $i2;
    }

    public static android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.Resources$Theme r2;
        java.lang.String r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.util.TypedValue r4, $r7;
        android.support.v4.content.res.ComplexColorCompat r5, $r6, $r9;
        boolean $z0;
        android.content.res.Resources $r8;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r3);

        if $z0 == 0 goto label2;

        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        r4 = $r7;

        virtualinvoke r0.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(i0, r4);

        $i2 = r4.<android.util.TypedValue: int type>;

        if $i2 < 28 goto label1;

        $i4 = r4.<android.util.TypedValue: int type>;

        if $i4 > 31 goto label1;

        $i5 = r4.<android.util.TypedValue: int data>;

        $r9 = staticinvoke <android.support.v4.content.res.ComplexColorCompat: android.support.v4.content.res.ComplexColorCompat 'from'(int)>($i5);

        return $r9;

     label1:
        $r8 = virtualinvoke r0.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        r5 = staticinvoke <android.support.v4.content.res.ComplexColorCompat: android.support.v4.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r8, $i3, r2);

        if r5 == null goto label2;

        return r5;

     label2:
        $r6 = staticinvoke <android.support.v4.content.res.ComplexColorCompat: android.support.v4.content.res.ComplexColorCompat 'from'(int)>(i1);

        return $r6;
    }

    public static int getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return i1;

     label1:
        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, i1);

        return $i2;
    }

    public static java.lang.String getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r3;
        int i0;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        return $r3;
    }

    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        android.content.res.TypedArray r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        int i0;
        boolean z0;
        android.util.TypedValue $r3;

        r0 := @parameter0: android.content.res.TypedArray;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        if z0 != 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        return $r3;
    }

    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        int[] r3;
        android.content.res.TypedArray $r4, $r5;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: int[];

        if r1 != null goto label1;

        $r5 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, r3);

        return $r5;

     label1:
        $r4 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, r3, 0, 0);

        return $r4;
    }

    public static boolean getBoolean(android.content.res.TypedArray, int, int, boolean)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        boolean z0, z1, $z2;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, z0);

        $z2 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, z1);

        return $z2;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        android.graphics.drawable.Drawable r1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i1);

     label1:
        return r1;
    }

    public static int getInt(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i1, i2);

        $i4 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, i3);

        return $i4;
    }

    public static int getResourceId(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, i2);

        $i4 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, i3);

        return $i4;
    }

    public static java.lang.String getString(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

     label1:
        return r1;
    }

    public static java.lang.CharSequence getText(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i0);

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i1);

     label1:
        return r1;
    }

    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        java.lang.CharSequence[] r1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(i0);

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(i1);

     label1:
        return r1;
    }

    public static int getAttr(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        android.util.TypedValue r1, $r2;
        android.content.res.Resources$Theme $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        $i2 = r1.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label1;

        return i0;

     label1:
        return i1;
    }

    private void <init>()
    {
        android.support.v4.content.res.TypedArrayUtils r0;

        r0 := @this: android.support.v4.content.res.TypedArrayUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

