android.support.test.espresso.matcher.CursorMatchers
<android.support.test.espresso.matcher.CursorMatchers: int COLUMN_NOT_FOUND>
<android.support.test.espresso.matcher.CursorMatchers: int MULTIPLE_COLUMNS_FOUND>
<android.support.test.espresso.matcher.CursorMatchers: int USE_COLUMN_PICKER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier BLOB_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier LONG_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier SHORT_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier INT_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier FLOAT_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier DOUBLE_MATCHER_APPLIER>
<android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier STRING_MATCHER_APPLIER>
    private void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int findColumnIndex(org.hamcrest.Matcher, android.database.Cursor)
    {
        org.hamcrest.Matcher r0;
        android.database.Cursor r1;
        java.lang.String[] r2;
        java.lang.String r3;
        int $i0, i1, i2;
        boolean $z0;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: android.database.Cursor;

        i1 = -1;

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label4;

        r3 = r2[i2];

        $z0 = interfaceinvoke r0.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        if i1 != -1 goto label2;

        i1 = i2;

        goto label3;

     label2:
        i1 = -2;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return i1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int, short)
    {
        int i0;
        short s1;
        java.lang.Short $r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        $r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier SHORT_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String, short)
    {
        java.lang.String r0;
        short s0;
        java.lang.Short $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowShort(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier SHORT_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int, int)
    {
        int i0, i1;
        java.lang.Integer $r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier INT_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.lang.Integer $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowInt(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier INT_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int, long)
    {
        int i0;
        long l1;
        java.lang.Long $r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier LONG_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String, long)
    {
        java.lang.String r0;
        long l0;
        java.lang.Long $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowLong(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier LONG_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int, float)
    {
        int i0;
        float f0;
        java.lang.Float $r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r0 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier FLOAT_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String, float)
    {
        java.lang.String r0;
        float f0;
        java.lang.Float $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowFloat(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier FLOAT_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int, double)
    {
        int i0;
        double d0;
        java.lang.Double $r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier DOUBLE_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String, double)
    {
        java.lang.String r0;
        double d0;
        java.lang.Double $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String,org.hamcrest.Matcher)>(r0, $r2);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowDouble(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier DOUBLE_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier STRING_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.hamcrest.Matcher $r2, $r3;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowString(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier STRING_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int, byte[])
    {
        int i0;
        byte[] r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int,org.hamcrest.Matcher)>(i0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(int, org.hamcrest.Matcher)
    {
        int i0;
        org.hamcrest.Matcher r0;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: org.hamcrest.Matcher;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r2 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier BLOB_MATCHER_APPLIER>;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(i0, r0, $r2, null);

        return $r1;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(java.lang.String, byte[])
    {
        java.lang.String r0;
        byte[] r1;
        org.hamcrest.Matcher $r2, $r3;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withRowBlob(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher $r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        $r3 = <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier BLOB_MATCHER_APPLIER>;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier,android.support.test.espresso.matcher.CursorMatchers$1)>(r0, r1, $r3, null);

        return $r2;
    }

    static int access$000(org.hamcrest.Matcher, android.database.Cursor)
    {
        org.hamcrest.Matcher r0;
        android.database.Cursor r1;
        int $i0;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: android.database.Cursor;

        $i0 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: int findColumnIndex(org.hamcrest.Matcher,android.database.Cursor)>(r0, r1);

        return $i0;
    }

    static void <clinit>()
    {
        android.support.test.espresso.matcher.CursorMatchers$1 $r0;
        android.support.test.espresso.matcher.CursorMatchers$2 $r1;
        android.support.test.espresso.matcher.CursorMatchers$3 $r2;
        android.support.test.espresso.matcher.CursorMatchers$4 $r3;
        android.support.test.espresso.matcher.CursorMatchers$5 $r4;
        android.support.test.espresso.matcher.CursorMatchers$6 $r5;
        android.support.test.espresso.matcher.CursorMatchers$7 $r6;

        $r0 = new android.support.test.espresso.matcher.CursorMatchers$1;

        specialinvoke $r0.<android.support.test.espresso.matcher.CursorMatchers$1: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier BLOB_MATCHER_APPLIER> = $r0;

        $r1 = new android.support.test.espresso.matcher.CursorMatchers$2;

        specialinvoke $r1.<android.support.test.espresso.matcher.CursorMatchers$2: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier LONG_MATCHER_APPLIER> = $r1;

        $r2 = new android.support.test.espresso.matcher.CursorMatchers$3;

        specialinvoke $r2.<android.support.test.espresso.matcher.CursorMatchers$3: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier SHORT_MATCHER_APPLIER> = $r2;

        $r3 = new android.support.test.espresso.matcher.CursorMatchers$4;

        specialinvoke $r3.<android.support.test.espresso.matcher.CursorMatchers$4: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier INT_MATCHER_APPLIER> = $r3;

        $r4 = new android.support.test.espresso.matcher.CursorMatchers$5;

        specialinvoke $r4.<android.support.test.espresso.matcher.CursorMatchers$5: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier FLOAT_MATCHER_APPLIER> = $r4;

        $r5 = new android.support.test.espresso.matcher.CursorMatchers$6;

        specialinvoke $r5.<android.support.test.espresso.matcher.CursorMatchers$6: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier DOUBLE_MATCHER_APPLIER> = $r5;

        $r6 = new android.support.test.espresso.matcher.CursorMatchers$7;

        specialinvoke $r6.<android.support.test.espresso.matcher.CursorMatchers$7: void <init>()>();

        <android.support.test.espresso.matcher.CursorMatchers: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier STRING_MATCHER_APPLIER> = $r6;

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$1
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$1 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$1 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        byte[] $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$1;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r3 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(i0);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$1 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Blob");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$2
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$2 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$2 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        long $l1;
        java.lang.Long $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$2;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $l1 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$2 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$2;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Long");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$3
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$3 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$3 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        short $s1;
        java.lang.Short $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$3;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $s1 = interfaceinvoke r1.<android.database.Cursor: short getShort(int)>(i0);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$3 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$3;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Short");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$4
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$4 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$4 r0;
        android.database.Cursor r1;
        int i0, $i1;
        org.hamcrest.Matcher r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$4;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$4 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$4;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Int");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$5
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$5 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$5 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        float $f0;
        java.lang.Float $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$5;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $f0 = interfaceinvoke r1.<android.database.Cursor: float getFloat(int)>(i0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$5 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$5;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Float");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$6
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$6 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$6 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        double $d0;
        java.lang.Double $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$6;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $d0 = interfaceinvoke r1.<android.database.Cursor: double getDouble(int)>(i0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$6 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$6;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with Double");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$7
    void <init>()
    {
        android.support.test.espresso.matcher.CursorMatchers$7 r0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.database.Cursor, int, org.hamcrest.Matcher)
    {
        android.support.test.espresso.matcher.CursorMatchers$7 r0;
        android.database.Cursor r1;
        int i0;
        org.hamcrest.Matcher r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$7;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$7 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$7;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with String");

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$CursorMatcher
<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>
<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>
<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>
<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier applier>
<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>
    private void <init>(int, org.hamcrest.Matcher, android.support.test.espresso.matcher.CursorMatchers$MatcherApplier)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        int i0;
        org.hamcrest.Matcher r1, $r4;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier r2, $r6;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        i0 := @parameter0: int;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier;

        specialinvoke r0.<android.support.test.espresso.matcher.BoundedMatcher: void <init>(java.lang.Class)>(class "Landroid/database/Cursor;");

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = 1;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex> = i0;

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.hamcrest.Matcher) $r3;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.support.test.espresso.matcher.CursorMatchers$MatcherApplier) $r5;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier applier> = $r6;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher> = null;

        return;
    }

    private void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, android.support.test.espresso.matcher.CursorMatchers$MatcherApplier)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Matcher r1, r2, $r5, $r7;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier r3, $r9;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier;

        specialinvoke r0.<android.support.test.espresso.matcher.BoundedMatcher: void <init>(java.lang.Class)>(class "Landroid/database/Cursor;");

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = 1;

        $r4 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (org.hamcrest.Matcher) $r4;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher> = $r5;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (org.hamcrest.Matcher) $r6;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher> = $r7;

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (android.support.test.espresso.matcher.CursorMatchers$MatcherApplier) $r8;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier applier> = $r9;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex> = -3;

        return;
    }

    public boolean matchesSafely(android.database.Cursor)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        android.database.Cursor r1;
        org.hamcrest.Matcher $r2, $r4, $r6;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r3;
        boolean $z0, $z1, $z2;
        org.hamcrest.StringDescription $r5, r39;
        java.lang.IllegalArgumentException $r7, $r15, $r26, $r38;
        java.lang.String[] $r8, $r16, $r27;
        java.util.List $r9, $r17, $r28;
        java.lang.String $r10, $r14, $r18, $r19, $r25, $r29, $r30, $r36, r40, r41, r42, r43, r44;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.StringBuilder $r11, $r12, $r13, $r20, $r21, $r22, $r23, $r24, $r31, $r32, $r33, $r34, $r35;
        java.lang.Throwable $r37, r45;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: android.database.Cursor;

        i10 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        if i10 >= 0 goto label4;

        $r4 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        i10 = staticinvoke <android.support.test.espresso.matcher.CursorMatchers: int access$000(org.hamcrest.Matcher,android.database.Cursor)>($r4, r1);

        if i10 >= 0 goto label4;

        $r5 = new org.hamcrest.StringDescription;

        specialinvoke $r5.<org.hamcrest.StringDescription: void <init>()>();

        r39 = $r5;

        $r6 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        interfaceinvoke $r6.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r39);

        if i10 != -1 goto label2;

        $z1 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>;

        if $z1 == 0 goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = interfaceinvoke r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r28 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r27);

        r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r28);

        r41 = virtualinvoke r39.<org.hamcrest.StringDescription: java.lang.String toString()>();

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r40);

        $i6 = virtualinvoke $r29.<java.lang.String: int length()>();

        $i7 = 34 + $i6;

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r41);

        $i8 = virtualinvoke $r30.<java.lang.String: int length()>();

        $i9 = $i7 + $i8;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(int)>($i9);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find column in ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" matching ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r26;

     label1:
        return 0;

     label2:
        if i10 != -2 goto label3;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = interfaceinvoke r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        r42 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        r43 = virtualinvoke r39.<org.hamcrest.StringDescription: java.lang.String toString()>();

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r42);

        $i2 = virtualinvoke $r18.<java.lang.String: int length()>();

        $i3 = 27 + $i2;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r43);

        $i4 = virtualinvoke $r19.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(int)>($i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple columns in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" match ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r15;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = interfaceinvoke r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r44);

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = 24 + $i0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find column in ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label4:
        $r3 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier applier>;

        $r2 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>;

        $z0 = interfaceinvoke $r3.<android.support.test.espresso.matcher.CursorMatchers$MatcherApplier: boolean apply(android.database.Cursor,int,org.hamcrest.Matcher)>(r1, i10, $r2);

     label5:
        return $z0;

     label6:
        $r37 := @caughtexception;

        r45 = $r37;

        $z2 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns>;

        if $z2 == 0 goto label7;

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Column index is invalid", r45);

        throw $r38;

     label7:
        return 0;

        catch android.database.CursorIndexOutOfBoundsException from label4 to label5 with label6;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Description r1;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier $r9;
        org.hamcrest.Matcher $r11, $r12;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("Rows with column: ");

        $i1 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        if $i1 >= 0 goto label1;

        $r12 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher columnNameMatcher>;

        interfaceinvoke $r12.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        goto label2;

     label1:
        i0 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: int columnIndex>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(21);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r7);

     label2:
        $r9 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier applier>;

        interfaceinvoke $r9.<android.support.test.espresso.matcher.CursorMatchers$MatcherApplier: void describeTo(org.hamcrest.Description)>(r1);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" ");

        $r11 = r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: org.hamcrest.Matcher valueMatcher>;

        interfaceinvoke $r11.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        return;
    }

    public android.support.test.espresso.matcher.CursorMatchers$CursorMatcher withStrictColumnChecks(boolean)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean checkColumns> = z0;

        return r0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: boolean matchesSafely(android.database.Cursor)>($r2);

        return $z0;
    }

    void <init>(int, org.hamcrest.Matcher, android.support.test.espresso.matcher.CursorMatchers$MatcherApplier, android.support.test.espresso.matcher.CursorMatchers$1)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        int i0;
        org.hamcrest.Matcher r1;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier r2;
        android.support.test.espresso.matcher.CursorMatchers$1 r3;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        i0 := @parameter0: int;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier;

        r3 := @parameter3: android.support.test.espresso.matcher.CursorMatchers$1;

        specialinvoke r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(int,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier)>(i0, r1, r2);

        return;
    }

    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, android.support.test.espresso.matcher.CursorMatchers$MatcherApplier, android.support.test.espresso.matcher.CursorMatchers$1)
    {
        android.support.test.espresso.matcher.CursorMatchers$CursorMatcher r0;
        org.hamcrest.Matcher r1, r2;
        android.support.test.espresso.matcher.CursorMatchers$MatcherApplier r3;
        android.support.test.espresso.matcher.CursorMatchers$1 r4;

        r0 := @this: android.support.test.espresso.matcher.CursorMatchers$CursorMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: android.support.test.espresso.matcher.CursorMatchers$MatcherApplier;

        r4 := @parameter3: android.support.test.espresso.matcher.CursorMatchers$1;

        specialinvoke r0.<android.support.test.espresso.matcher.CursorMatchers$CursorMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,android.support.test.espresso.matcher.CursorMatchers$MatcherApplier)>(r1, r2, r3);

        return;
    }

android.support.test.espresso.matcher.CursorMatchers$MatcherApplier
<android.support.test.espresso.matcher.CursorMatchers$MatcherApplier: boolean apply(android.database.Cursor,int,org.hamcrest.Matcher)>
