android.support.test.espresso.action.ViewActions
<android.support.test.espresso.action.ViewActions: float EDGE_FUZZ_FACTOR>
<android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>
    private void <init>()
    {
        android.support.test.espresso.action.ViewActions r0;

        r0 := @this: android.support.test.espresso.action.ViewActions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addGlobalAssertion(java.lang.String, android.support.test.espresso.ViewAssertion)
    {
        java.lang.String r0;
        android.support.test.espresso.ViewAssertion r1;
        android.util.Pair r2, $r5;
        java.util.Set $r6, $r7;
        boolean $z0, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.support.test.espresso.ViewAssertion;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = new android.util.Pair;

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        r2 = $r5;

        $r6 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z2, "ViewAssertion with name %s is already in the global assertions!", r0);

        $r7 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public static void removeGlobalAssertion(android.support.test.espresso.ViewAssertion)
    {
        android.support.test.espresso.ViewAssertion r0;
        java.util.Iterator r1;
        android.util.Pair r2;
        java.util.Set $r3, $r6;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.Object $r4, $r5;

        r0 := @parameter0: android.support.test.espresso.ViewAssertion;

        z3 = 0;

        $r3 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r4;

        if r0 == null goto label5;

        $r5 = r2.<android.util.Pair: java.lang.Object second>;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label5;

        if z3 != 0 goto label2;

        $r6 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z2 = interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z3 = $z4;

     label5:
        goto label1;

     label6:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, "ViewAssertion was not in global assertions!");

        return;
    }

    public static void clearGlobalAssertions()
    {
        java.util.Set $r0;

        $r0 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        interfaceinvoke $r0.<java.util.Set: void clear()>();

        return;
    }

    public static android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)
    {
        android.support.test.espresso.ViewAction r0;
        java.util.Set $r1;
        boolean $z0;
        android.support.test.espresso.action.ViewActions$1 $r2;

        r0 := @parameter0: android.support.test.espresso.ViewAction;

        $r1 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = new android.support.test.espresso.action.ViewActions$1;

        specialinvoke $r2.<android.support.test.espresso.action.ViewActions$1: void <init>(android.support.test.espresso.ViewAction)>(r0);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction clearText()
    {
        android.support.test.espresso.action.ReplaceTextAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.ReplaceTextAction;

        specialinvoke $r0.<android.support.test.espresso.action.ReplaceTextAction: void <init>(java.lang.String)>("");

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction click(int, int)
    {
        int i0, i1, $i2;
        android.support.test.espresso.action.GeneralClickAction $r0;
        android.support.test.espresso.action.Press $r1;
        android.support.test.espresso.action.GeneralLocation $r2;
        android.support.test.espresso.action.Tap $r3;
        android.support.test.espresso.ViewAction $r4;
        java.lang.UnsupportedOperationException $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 14 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        $r0 = new android.support.test.espresso.action.GeneralClickAction;

        $r3 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        $r2 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation VISIBLE_CENTER>;

        $r1 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, i0, i1);

        $r4 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r4;
    }

    public static android.support.test.espresso.ViewAction click()
    {
        android.support.test.espresso.action.GeneralClickAction $r0;
        android.support.test.espresso.action.Press $r1;
        android.support.test.espresso.action.GeneralLocation $r2;
        android.support.test.espresso.action.Tap $r3;
        android.support.test.espresso.ViewAction $r4;

        $r0 = new android.support.test.espresso.action.GeneralClickAction;

        $r3 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        $r2 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation VISIBLE_CENTER>;

        $r1 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r4;
    }

    public static android.support.test.espresso.ViewAction click(android.support.test.espresso.ViewAction)
    {
        android.support.test.espresso.ViewAction r0, $r6;
        android.support.test.espresso.action.GeneralClickAction $r2;
        android.support.test.espresso.action.Press $r3;
        android.support.test.espresso.action.GeneralLocation $r4;
        android.support.test.espresso.action.Tap $r5;

        r0 := @parameter0: android.support.test.espresso.ViewAction;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new android.support.test.espresso.action.GeneralClickAction;

        $r5 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        $r4 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER>;

        $r3 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r2.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int,android.support.test.espresso.ViewAction)>($r5, $r4, $r3, 0, 1, r0);

        $r6 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r2);

        return $r6;
    }

    public static android.support.test.espresso.ViewAction swipeLeft()
    {
        android.support.test.espresso.action.GeneralSwipeAction $r0;
        android.support.test.espresso.action.GeneralLocation $r1, $r5;
        android.support.test.espresso.action.Swipe $r2;
        android.support.test.espresso.action.CoordinatesProvider $r3;
        android.support.test.espresso.action.Press $r4;
        android.support.test.espresso.ViewAction $r6;

        $r0 = new android.support.test.espresso.action.GeneralSwipeAction;

        $r2 = <android.support.test.espresso.action.Swipe: android.support.test.espresso.action.Swipe FAST>;

        $r1 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER_RIGHT>;

        $r3 = staticinvoke <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.CoordinatesProvider translate(android.support.test.espresso.action.CoordinatesProvider,float,float)>($r1, -0.083F, 0.0F);

        $r5 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER_LEFT>;

        $r4 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralSwipeAction: void <init>(android.support.test.espresso.action.Swiper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r6;
    }

    public static android.support.test.espresso.ViewAction swipeRight()
    {
        android.support.test.espresso.action.GeneralSwipeAction $r0;
        android.support.test.espresso.action.GeneralLocation $r1, $r5;
        android.support.test.espresso.action.Swipe $r2;
        android.support.test.espresso.action.CoordinatesProvider $r3;
        android.support.test.espresso.action.Press $r4;
        android.support.test.espresso.ViewAction $r6;

        $r0 = new android.support.test.espresso.action.GeneralSwipeAction;

        $r2 = <android.support.test.espresso.action.Swipe: android.support.test.espresso.action.Swipe FAST>;

        $r1 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER_LEFT>;

        $r3 = staticinvoke <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.CoordinatesProvider translate(android.support.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.083F, 0.0F);

        $r5 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER_RIGHT>;

        $r4 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralSwipeAction: void <init>(android.support.test.espresso.action.Swiper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r6;
    }

    public static android.support.test.espresso.ViewAction swipeDown()
    {
        android.support.test.espresso.action.GeneralSwipeAction $r0;
        android.support.test.espresso.action.GeneralLocation $r1, $r5;
        android.support.test.espresso.action.Swipe $r2;
        android.support.test.espresso.action.CoordinatesProvider $r3;
        android.support.test.espresso.action.Press $r4;
        android.support.test.espresso.ViewAction $r6;

        $r0 = new android.support.test.espresso.action.GeneralSwipeAction;

        $r2 = <android.support.test.espresso.action.Swipe: android.support.test.espresso.action.Swipe FAST>;

        $r1 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation TOP_CENTER>;

        $r3 = staticinvoke <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.CoordinatesProvider translate(android.support.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.0F, 0.083F);

        $r5 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation BOTTOM_CENTER>;

        $r4 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralSwipeAction: void <init>(android.support.test.espresso.action.Swiper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r6;
    }

    public static android.support.test.espresso.ViewAction swipeUp()
    {
        android.support.test.espresso.action.GeneralSwipeAction $r0;
        android.support.test.espresso.action.GeneralLocation $r1, $r5;
        android.support.test.espresso.action.Swipe $r2;
        android.support.test.espresso.action.CoordinatesProvider $r3;
        android.support.test.espresso.action.Press $r4;
        android.support.test.espresso.ViewAction $r6;

        $r0 = new android.support.test.espresso.action.GeneralSwipeAction;

        $r2 = <android.support.test.espresso.action.Swipe: android.support.test.espresso.action.Swipe FAST>;

        $r1 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation BOTTOM_CENTER>;

        $r3 = staticinvoke <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.CoordinatesProvider translate(android.support.test.espresso.action.CoordinatesProvider,float,float)>($r1, 0.0F, -0.083F);

        $r5 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation TOP_CENTER>;

        $r4 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralSwipeAction: void <init>(android.support.test.espresso.action.Swiper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber)>($r2, $r3, $r5, $r4);

        $r6 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r6;
    }

    public static android.support.test.espresso.ViewAction closeSoftKeyboard()
    {
        android.support.test.espresso.action.CloseKeyboardAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.CloseKeyboardAction;

        specialinvoke $r0.<android.support.test.espresso.action.CloseKeyboardAction: void <init>()>();

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction pressImeActionButton()
    {
        android.support.test.espresso.action.EditorAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.EditorAction;

        specialinvoke $r0.<android.support.test.espresso.action.EditorAction: void <init>()>();

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction pressBack()
    {
        android.support.test.espresso.action.PressBackAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.PressBackAction;

        specialinvoke $r0.<android.support.test.espresso.action.PressBackAction: void <init>(boolean)>(1);

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction pressBackUnconditionally()
    {
        android.support.test.espresso.action.PressBackAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.PressBackAction;

        specialinvoke $r0.<android.support.test.espresso.action.PressBackAction: void <init>(boolean)>(0);

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction pressMenuKey()
    {
        android.support.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction pressKey(int)>(82);

        return $r0;
    }

    public static android.support.test.espresso.ViewAction pressKey(int)
    {
        int i0;
        android.support.test.espresso.action.KeyEventAction $r0;
        android.support.test.espresso.action.EspressoKey$Builder $r1, $r2;
        android.support.test.espresso.action.EspressoKey $r3;
        android.support.test.espresso.ViewAction $r4;

        i0 := @parameter0: int;

        $r0 = new android.support.test.espresso.action.KeyEventAction;

        $r1 = new android.support.test.espresso.action.EspressoKey$Builder;

        specialinvoke $r1.<android.support.test.espresso.action.EspressoKey$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.support.test.espresso.action.EspressoKey$Builder: android.support.test.espresso.action.EspressoKey$Builder withKeyCode(int)>(i0);

        $r3 = virtualinvoke $r2.<android.support.test.espresso.action.EspressoKey$Builder: android.support.test.espresso.action.EspressoKey build()>();

        specialinvoke $r0.<android.support.test.espresso.action.KeyEventAction: void <init>(android.support.test.espresso.action.EspressoKey)>($r3);

        $r4 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r4;
    }

    public static android.support.test.espresso.ViewAction pressKey(android.support.test.espresso.action.EspressoKey)
    {
        android.support.test.espresso.action.EspressoKey r0;
        android.support.test.espresso.action.KeyEventAction $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: android.support.test.espresso.action.EspressoKey;

        $r1 = new android.support.test.espresso.action.KeyEventAction;

        specialinvoke $r1.<android.support.test.espresso.action.KeyEventAction: void <init>(android.support.test.espresso.action.EspressoKey)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction doubleClick()
    {
        android.support.test.espresso.action.GeneralClickAction $r0;
        android.support.test.espresso.action.Press $r1;
        android.support.test.espresso.action.GeneralLocation $r2;
        android.support.test.espresso.action.Tap $r3;
        android.support.test.espresso.ViewAction $r4;

        $r0 = new android.support.test.espresso.action.GeneralClickAction;

        $r3 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap DOUBLE>;

        $r2 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER>;

        $r1 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r4;
    }

    public static android.support.test.espresso.ViewAction longClick()
    {
        android.support.test.espresso.action.GeneralClickAction $r0;
        android.support.test.espresso.action.Press $r1;
        android.support.test.espresso.action.GeneralLocation $r2;
        android.support.test.espresso.action.Tap $r3;
        android.support.test.espresso.ViewAction $r4;

        $r0 = new android.support.test.espresso.action.GeneralClickAction;

        $r3 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap LONG>;

        $r2 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER>;

        $r1 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke $r0.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber,int,int)>($r3, $r2, $r1, 0, 1);

        $r4 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r4;
    }

    public static android.support.test.espresso.ViewAction scrollTo()
    {
        android.support.test.espresso.action.ScrollToAction $r0;
        android.support.test.espresso.ViewAction $r1;

        $r0 = new android.support.test.espresso.action.ScrollToAction;

        specialinvoke $r0.<android.support.test.espresso.action.ScrollToAction: void <init>()>();

        $r1 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r0);

        return $r1;
    }

    public static android.support.test.espresso.ViewAction typeTextIntoFocusedView(java.lang.String)
    {
        java.lang.String r0;
        android.support.test.espresso.action.TypeTextAction $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.support.test.espresso.action.TypeTextAction;

        specialinvoke $r1.<android.support.test.espresso.action.TypeTextAction: void <init>(java.lang.String,boolean)>(r0, 0);

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction typeText(java.lang.String)
    {
        java.lang.String r0;
        android.support.test.espresso.action.TypeTextAction $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.support.test.espresso.action.TypeTextAction;

        specialinvoke $r1.<android.support.test.espresso.action.TypeTextAction: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction replaceText(java.lang.String)
    {
        java.lang.String r0;
        android.support.test.espresso.action.ReplaceTextAction $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.support.test.espresso.action.ReplaceTextAction;

        specialinvoke $r1.<android.support.test.espresso.action.ReplaceTextAction: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction openLinkWithText(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction openLinkWithText(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction openLinkWithText(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Landroid/net/Uri;");

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction openLink(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, $r1);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction openLinkWithUri(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1;
        org.hamcrest.Matcher $r2;
        android.support.test.espresso.ViewAction $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction openLinkWithUri(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static android.support.test.espresso.ViewAction openLinkWithUri(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;
        android.support.test.espresso.ViewAction $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        $r2 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction openLink(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r1, r0);

        return $r2;
    }

    public static android.support.test.espresso.ViewAction openLink(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        android.support.test.espresso.action.OpenLinkAction $r4;
        android.support.test.espresso.ViewAction $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.action.OpenLinkAction;

        specialinvoke $r4.<android.support.test.espresso.action.OpenLinkAction: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        $r5 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r4);

        return $r5;
    }

    public static android.support.test.espresso.ViewAction repeatedlyUntil(android.support.test.espresso.ViewAction, org.hamcrest.Matcher, int)
    {
        android.support.test.espresso.ViewAction r0, $r5;
        org.hamcrest.Matcher r1;
        int i0;
        android.support.test.espresso.action.RepeatActionUntilViewState $r4;

        r0 := @parameter0: android.support.test.espresso.ViewAction;

        r1 := @parameter1: org.hamcrest.Matcher;

        i0 := @parameter2: int;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.action.RepeatActionUntilViewState;

        specialinvoke $r4.<android.support.test.espresso.action.RepeatActionUntilViewState: void <init>(android.support.test.espresso.ViewAction,org.hamcrest.Matcher,int)>(r0, r1, i0);

        $r5 = staticinvoke <android.support.test.espresso.action.ViewActions: android.support.test.espresso.ViewAction actionWithAssertions(android.support.test.espresso.ViewAction)>($r4);

        return $r5;
    }

    static java.util.Set access$000()
    {
        java.util.Set $r0;

        $r0 = <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.concurrent.CopyOnWriteArraySet r1;
        java.util.Set r2;

        r1 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke r1.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r2 = (java.util.Set) r1;

        <android.support.test.espresso.action.ViewActions: java.util.Set globalAssertions> = r2;

        return;
    }

android.support.test.espresso.action.ViewActions$1
<android.support.test.espresso.action.ViewActions$1: android.support.test.espresso.ViewAction val$viewAction>
    void <init>(android.support.test.espresso.ViewAction)
    {
        android.support.test.espresso.action.ViewActions$1 r0;
        android.support.test.espresso.ViewAction r1;

        r0 := @this: android.support.test.espresso.action.ViewActions$1;

        r1 := @parameter0: android.support.test.espresso.ViewAction;

        r0.<android.support.test.espresso.action.ViewActions$1: android.support.test.espresso.ViewAction val$viewAction> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.action.ViewActions$1 r0;
        java.lang.StringBuilder r1, $r4;
        java.util.Iterator r2;
        android.util.Pair r3;
        java.util.Set $r5;
        boolean $z0;
        android.support.test.espresso.ViewAction $r7;
        java.lang.String $r8, $r10, $r13;
        java.lang.Object $r11, $r12;

        r0 := @this: android.support.test.espresso.action.ViewActions$1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Running view assertions[");

        r1 = $r4;

        $r5 = staticinvoke <android.support.test.espresso.action.ViewActions: java.util.Set access$000()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r11;

        $r12 = r3.<android.util.Pair: java.lang.Object first>;

        $r13 = (java.lang.String) $r12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and then running: ");

        $r7 = r0.<android.support.test.espresso.action.ViewActions$1: android.support.test.espresso.ViewAction val$viewAction>;

        $r8 = interfaceinvoke $r7.<android.support.test.espresso.ViewAction: java.lang.String getDescription()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.action.ViewActions$1 r0;
        android.support.test.espresso.ViewAction $r1;
        org.hamcrest.Matcher $r2;

        r0 := @this: android.support.test.espresso.action.ViewActions$1;

        $r1 = r0.<android.support.test.espresso.action.ViewActions$1: android.support.test.espresso.ViewAction val$viewAction>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.ViewAction: org.hamcrest.Matcher getConstraints()>();

        return $r2;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.action.ViewActions$1 r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        java.util.Iterator r3;
        android.util.Pair r4;
        java.util.Set $r5;
        boolean $z0;
        android.support.test.espresso.ViewAction $r6;
        java.lang.Object $r7, $r8, $r13;
        java.lang.String $r9, $r11, $r12, $r15;
        int $i0;
        android.support.test.espresso.ViewAssertion $r14;

        r0 := @this: android.support.test.espresso.action.ViewActions$1;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        $r5 = staticinvoke <android.support.test.espresso.action.ViewActions: java.util.Set access$000()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r7;

        $r11 = "Asserting ";

        $r8 = r4.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.String) $r8;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r15 = virtualinvoke $r11.<java.lang.String: java.lang.String concat(java.lang.String)>($r12);

        goto label3;

     label2:
        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(java.lang.String)>("Asserting ");

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewAssertion", $r15);

        $r13 = r4.<android.util.Pair: java.lang.Object second>;

        $r14 = (android.support.test.espresso.ViewAssertion) $r13;

        interfaceinvoke $r14.<android.support.test.espresso.ViewAssertion: void check(android.view.View,android.support.test.espresso.NoMatchingViewException)>(r2, null);

        goto label1;

     label4:
        $r6 = r0.<android.support.test.espresso.action.ViewActions$1: android.support.test.espresso.ViewAction val$viewAction>;

        interfaceinvoke $r6.<android.support.test.espresso.ViewAction: void perform(android.support.test.espresso.UiController,android.view.View)>(r1, r2);

        return;
    }

