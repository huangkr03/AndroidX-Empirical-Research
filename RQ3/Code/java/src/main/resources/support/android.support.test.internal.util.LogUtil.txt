android.support.test.internal.util.LogUtil
    public void <init>()
    {
        android.support.test.internal.util.LogUtil r0;

        r0 := @this: android.support.test.internal.util.LogUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void logDebug(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1;
        java.lang.Object[] r2;
        android.support.test.internal.util.LogUtil$$Lambda$0 $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = new android.support.test.internal.util.LogUtil$$Lambda$0;

        specialinvoke $r3.<android.support.test.internal.util.LogUtil$$Lambda$0: void <init>(java.lang.String)>(r1);

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,android.support.test.internal.util.LogUtil$Supplier,java.lang.Object[])>(r0, $r3, r2);

        return;
    }

    private static transient void logDebug(java.lang.String, android.support.test.internal.util.LogUtil$Supplier, java.lang.Object[])
    {
        java.lang.String r0, $r4, $r5;
        android.support.test.internal.util.LogUtil$Supplier r1;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.support.test.internal.util.LogUtil$Supplier;

        r2 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <android.support.test.internal.util.LogUtil: boolean isLoggable(java.lang.String,int)>(r0, 3);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<android.support.test.internal.util.LogUtil$Supplier: java.lang.Object get()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r0, $r5);

     label1:
        return;
    }

    public static transient void logDebugWithProcess(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1;
        java.lang.Object[] r2;
        android.support.test.internal.util.LogUtil$$Lambda$1 $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = new android.support.test.internal.util.LogUtil$$Lambda$1;

        specialinvoke $r3.<android.support.test.internal.util.LogUtil$$Lambda$1: void <init>(java.lang.String)>(r1);

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebug(java.lang.String,android.support.test.internal.util.LogUtil$Supplier,java.lang.Object[])>(r0, $r3, r2);

        return;
    }

    private static boolean isLoggable(java.lang.String, int)
    {
        int i0, $i1;
        boolean $z0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 23 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 22);

     label1:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, i0);

        return $z0;
    }

    static final java.lang.String lambda$logDebugWithProcess$1$LogUtil(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4, $r9;
        android.content.Context $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.support.test.InstrumentationRegistry: android.content.Context getTargetContext()>();

        r1 = staticinvoke <android.support.test.internal.util.ProcessUtil: java.lang.String getCurrentProcessName(android.content.Context)>($r2);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = 4 + $i0;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static final java.lang.String lambda$logDebug$0$LogUtil(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return r0;
    }

android.support.test.internal.util.LogUtil$$Lambda$0
<android.support.test.internal.util.LogUtil$$Lambda$0: java.lang.String arg$1>
    void <init>(java.lang.String)
    {
        android.support.test.internal.util.LogUtil$$Lambda$0 r0;
        java.lang.String r1;

        r0 := @this: android.support.test.internal.util.LogUtil$$Lambda$0;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.internal.util.LogUtil$$Lambda$0: java.lang.String arg$1> = r1;

        return;
    }

    public java.lang.Object get()
    {
        android.support.test.internal.util.LogUtil$$Lambda$0 r0;
        java.lang.String $r1, $r2;

        r0 := @this: android.support.test.internal.util.LogUtil$$Lambda$0;

        $r1 = r0.<android.support.test.internal.util.LogUtil$$Lambda$0: java.lang.String arg$1>;

        $r2 = staticinvoke <android.support.test.internal.util.LogUtil: java.lang.String lambda$logDebug$0$LogUtil(java.lang.String)>($r1);

        return $r2;
    }

android.support.test.internal.util.LogUtil$$Lambda$1
<android.support.test.internal.util.LogUtil$$Lambda$1: java.lang.String arg$1>
    void <init>(java.lang.String)
    {
        android.support.test.internal.util.LogUtil$$Lambda$1 r0;
        java.lang.String r1;

        r0 := @this: android.support.test.internal.util.LogUtil$$Lambda$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.internal.util.LogUtil$$Lambda$1: java.lang.String arg$1> = r1;

        return;
    }

    public java.lang.Object get()
    {
        android.support.test.internal.util.LogUtil$$Lambda$1 r0;
        java.lang.String $r1, $r2;

        r0 := @this: android.support.test.internal.util.LogUtil$$Lambda$1;

        $r1 = r0.<android.support.test.internal.util.LogUtil$$Lambda$1: java.lang.String arg$1>;

        $r2 = staticinvoke <android.support.test.internal.util.LogUtil: java.lang.String lambda$logDebugWithProcess$1$LogUtil(java.lang.String)>($r1);

        return $r2;
    }

android.support.test.internal.util.LogUtil$Supplier
<android.support.test.internal.util.LogUtil$Supplier: java.lang.Object get()>
