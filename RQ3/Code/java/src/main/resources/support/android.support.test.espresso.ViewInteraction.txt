android.support.test.espresso.ViewInteraction
<android.support.test.espresso.ViewInteraction: java.lang.String TAG>
<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>
<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewFinder viewFinder>
<android.support.test.espresso.ViewInteraction: java.util.concurrent.Executor mainThreadExecutor>
<android.support.test.espresso.ViewInteraction: android.support.test.espresso.FailureHandler failureHandler>
<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef>
<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference needsActivity>
<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction>
<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService remoteExecutor>
<android.support.test.espresso.ViewInteraction: boolean hasRootMatcher>
    void <init>(android.support.test.espresso.UiController, android.support.test.espresso.ViewFinder, java.util.concurrent.Executor, android.support.test.espresso.FailureHandler, org.hamcrest.Matcher, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference, android.support.test.espresso.remote.RemoteInteraction, android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.UiController r1;
        android.support.test.espresso.ViewFinder r2, $r11;
        java.util.concurrent.Executor r3, $r17;
        android.support.test.espresso.FailureHandler r4, $r15;
        org.hamcrest.Matcher r5, $r19;
        java.util.concurrent.atomic.AtomicReference r6, r7, $r21, $r23;
        android.support.test.espresso.remote.RemoteInteraction r8, $r25;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService r9, $r27;
        java.lang.Object $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        android.support.test.espresso.base.InterruptableUiController $r13;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.support.test.espresso.ViewFinder;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.support.test.espresso.FailureHandler;

        r5 := @parameter4: org.hamcrest.Matcher;

        r6 := @parameter5: java.util.concurrent.atomic.AtomicReference;

        r7 := @parameter6: java.util.concurrent.atomic.AtomicReference;

        r8 := @parameter7: android.support.test.espresso.remote.RemoteInteraction;

        r9 := @parameter8: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.ViewInteraction: boolean hasRootMatcher> = 0;

        $r10 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r11 = (android.support.test.espresso.ViewFinder) $r10;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewFinder viewFinder> = $r11;

        $r12 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r13 = (android.support.test.espresso.base.InterruptableUiController) $r12;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController> = $r13;

        $r14 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r15 = (android.support.test.espresso.FailureHandler) $r14;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.FailureHandler failureHandler> = $r15;

        $r16 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r17 = (java.util.concurrent.Executor) $r16;

        r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.Executor mainThreadExecutor> = $r17;

        $r18 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r19 = (org.hamcrest.Matcher) $r18;

        r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher> = $r19;

        $r20 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r21 = (java.util.concurrent.atomic.AtomicReference) $r20;

        r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef> = $r21;

        $r22 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $r23 = (java.util.concurrent.atomic.AtomicReference) $r22;

        r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference needsActivity> = $r23;

        $r24 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        $r25 = (android.support.test.espresso.remote.RemoteInteraction) $r24;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction> = $r25;

        $r26 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r9);

        $r27 = (android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService) $r26;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService remoteExecutor> = $r27;

        return;
    }

    public transient android.support.test.espresso.ViewInteraction perform(android.support.test.espresso.ViewAction[])
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewAction[] r1, r2;
        int i0, i1;
        android.support.test.espresso.ViewAction r3;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r4, $r6;
        org.hamcrest.Matcher $r7;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.ViewAction[];

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r6 = new android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        $r7 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        specialinvoke $r6.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: void <init>(android.support.test.espresso.ViewAction,org.hamcrest.Matcher,android.support.test.espresso.ViewInteraction$1)>(r3, $r7, null);

        r4 = $r6;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction: void desugaredPerform(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static java.util.Map getIBindersFromBindables(java.util.List)
    {
        java.util.List r0;
        java.util.HashMap r1, r14;
        java.util.Iterator r2;
        android.support.test.espresso.remote.Bindable r3;
        boolean $z0;
        android.support.test.espresso.core.internal.deps.guava.collect.ImmutableMap $r5;
        java.lang.Object $r6, $r8, $r11;
        java.lang.String $r7, $r9;
        android.os.IBinder $r10, $r12;
        java.util.Map r15, r16;

        r0 := @parameter0: java.util.List;

        r14 = new java.util.HashMap;

        specialinvoke r14.<java.util.HashMap: void <init>()>();

        r1 = r14;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.remote.Bindable) $r6;

        $r7 = interfaceinvoke r3.<android.support.test.espresso.remote.Bindable: java.lang.String getId()>();

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r7, "Bindable id cannot be null!");

        $r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r3.<android.support.test.espresso.remote.Bindable: android.os.IBinder getIBinder()>();

        $r11 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r10, "Bindable binder cannot be null!");

        $r12 = (android.os.IBinder) $r11;

        r15 = (java.util.Map) r1;

        interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r12);

        goto label1;

     label2:
        r16 = (java.util.Map) r1;

        $r5 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.ImmutableMap: android.support.test.espresso.core.internal.deps.guava.collect.ImmutableMap copyOf(java.util.Map)>(r16);

        return $r5;
    }

    private static transient java.util.List getBindables(java.lang.Object[])
    {
        java.lang.Object[] r0, r2;
        java.util.ArrayList r1;
        int i0, $i1, i2;
        java.lang.Object r3;
        boolean $z0;
        android.support.test.espresso.remote.Bindable $r4;
        java.util.List r5, r6;

        r0 := @parameter0: java.lang.Object[];

        $i1 = lengthof r0;

        r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i1);

        r2 = r0;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = r2[i2];

        $z0 = r3 instanceof android.support.test.espresso.remote.Bindable;

        if $z0 == 0 goto label2;

        $r4 = (android.support.test.espresso.remote.Bindable) r3;

        r5 = (java.util.List) r1;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r6 = (java.util.List) r1;

        return r6;
    }

    private static transient java.util.Map getIBindersFromViewActions(android.support.test.espresso.ViewAction[])
    {
        android.support.test.espresso.ViewAction[] r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        java.util.Map $r3;

        r0 := @parameter0: android.support.test.espresso.ViewAction[];

        $r1 = (java.lang.Object[]) r0;

        $r2 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.List getBindables(java.lang.Object[])>($r1);

        $r3 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.Map getIBindersFromBindables(java.util.List)>($r2);

        return $r3;
    }

    private static transient java.util.Map getIBindersFromViewAssertions(android.support.test.espresso.ViewAssertion[])
    {
        android.support.test.espresso.ViewAssertion[] r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        java.util.Map $r3;

        r0 := @parameter0: android.support.test.espresso.ViewAssertion[];

        $r1 = (java.lang.Object[]) r0;

        $r2 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.List getBindables(java.lang.Object[])>($r1);

        $r3 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.Map getIBindersFromBindables(java.util.List)>($r2);

        return $r3;
    }

    private void desugaredPerform(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r1;
        android.support.test.espresso.ViewInteraction$1 r2, r20;
        android.support.test.espresso.ViewAction r3;
        java.util.ArrayList r4, r21;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture $r7, $r19;
        android.support.test.espresso.remote.RemoteInteraction $r8, $r11;
        boolean $z1;
        java.util.concurrent.atomic.AtomicReference $r9;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService $r10;
        java.lang.Object $r12;
        android.support.test.espresso.ViewAction[] $r13, $r17;
        org.hamcrest.Matcher $r14, $r15;
        java.util.Map $r16;
        java.util.concurrent.Callable $r18;
        java.util.List r22, r23, r24;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r20 = new android.support.test.espresso.ViewInteraction$1;

        specialinvoke r20.<android.support.test.espresso.ViewInteraction$1: void <init>(android.support.test.espresso.ViewInteraction,android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)>(r0, r1);

        r2 = r20;

        r3 = virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction getInnerViewAction()>();

        r21 = new java.util.ArrayList;

        specialinvoke r21.<java.util.ArrayList: void <init>()>();

        r4 = r21;

        $r7 = specialinvoke r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture runSynchronouslyOnUiThread(java.util.concurrent.Callable)>(r2);

        r22 = (java.util.List) r4;

        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction>;

        $z1 = interfaceinvoke $r8.<android.support.test.espresso.remote.RemoteInteraction: boolean isRemoteProcess()>();

        if $z1 != 0 goto label1;

        $r10 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService remoteExecutor>;

        $r11 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction>;

        $r9 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef>;

        $r12 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r14 = (org.hamcrest.Matcher) $r12;

        $r15 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        $r13 = newarray (android.support.test.espresso.ViewAction)[2];

        $r13[0] = r1;

        $r13[1] = r3;

        $r16 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.Map getIBindersFromViewActions(android.support.test.espresso.ViewAction[])>($r13);

        $r17 = newarray (android.support.test.espresso.ViewAction)[1];

        $r17[0] = r3;

        $r18 = interfaceinvoke $r11.<android.support.test.espresso.remote.RemoteInteraction: java.util.concurrent.Callable createRemotePerformCallable(org.hamcrest.Matcher,org.hamcrest.Matcher,java.util.Map,android.support.test.espresso.ViewAction[])>($r14, $r15, $r16, $r17);

        $r19 = interfaceinvoke $r10.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r18);

        r23 = (java.util.List) r4;

        interfaceinvoke r23.<java.util.List: boolean add(java.lang.Object)>($r19);

     label1:
        r24 = (java.util.List) r4;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction: void waitForAndHandleInteractionResults(java.util.List)>(r24);

        return;
    }

    public android.support.test.espresso.ViewInteraction withFailureHandler(android.support.test.espresso.FailureHandler)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.FailureHandler r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.FailureHandler;

        $r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.FailureHandler) $r2;

        r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.FailureHandler failureHandler> = $r3;

        return r0;
    }

    public android.support.test.espresso.ViewInteraction inRoot(org.hamcrest.Matcher)
    {
        android.support.test.espresso.ViewInteraction r0;
        org.hamcrest.Matcher r1, $r4;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.ViewInteraction: boolean hasRootMatcher> = 1;

        $r2 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef>;

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.hamcrest.Matcher) $r3;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r4);

        return r0;
    }

    public android.support.test.espresso.ViewInteraction noActivity()
    {
        android.support.test.espresso.ViewInteraction r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReference $r1, $r3;
        java.lang.Boolean $r2;
        org.hamcrest.Matcher $r4, $r5, $r6, $r7;
        org.hamcrest.core.AnyOf $r8;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        $z0 = r0.<android.support.test.espresso.ViewInteraction: boolean hasRootMatcher>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef>;

        $r4 = <android.support.test.espresso.matcher.RootMatchers: org.hamcrest.Matcher DEFAULT>;

        $r5 = staticinvoke <android.support.test.espresso.matcher.RootMatchers: org.hamcrest.Matcher hasWindowLayoutParams()>();

        $r6 = staticinvoke <android.support.test.espresso.matcher.RootMatchers: org.hamcrest.Matcher isSystemAlertWindow()>();

        $r7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r5, $r6);

        $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r4, $r7);

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r8);

     label1:
        $r1 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference needsActivity>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2);

        return r0;
    }

    private void doPerform(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r1;
        org.hamcrest.Matcher r2, $r6, $r13, $r22, $r23, $r28;
        android.view.View r3;
        org.hamcrest.StringDescription r4, r36;
        java.lang.Object $r7;
        android.support.test.espresso.base.InterruptableUiController $r8, $r15;
        android.support.test.espresso.ViewFinder $r9;
        java.lang.Object[] $r10;
        java.lang.String $r11, $r12, $r14, $r19, $r26, $r29, $r32;
        boolean $z0, $z1, $z2;
        org.hamcrest.Description $r18;
        android.support.test.espresso.ViewAction $r21;
        android.support.test.espresso.PerformException$Builder $r27, $r30, $r33, r37;
        android.support.test.espresso.PerformException $r34;
        java.lang.StringBuilder r35;
        java.lang.RuntimeException r38;
        java.lang.Throwable r39, r40;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: org.hamcrest.Matcher getConstraints()>();

        $r7 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r2 = (org.hamcrest.Matcher) $r7;

        $r8 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        interfaceinvoke $r8.<android.support.test.espresso.base.InterruptableUiController: void loopMainThreadUntilIdle()>();

        $r9 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewFinder viewFinder>;

        r3 = interfaceinvoke $r9.<android.support.test.espresso.ViewFinder: android.view.View getView()>();

        $r11 = <android.support.test.espresso.ViewInteraction: java.lang.String TAG>;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: java.lang.String getDescription()>();

        $r10[0] = $r12;

        $r13 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        $r10[1] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Performing \'%s\' action on view %s", $r10);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r11, $r14);

        $z0 = interfaceinvoke r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

        r36 = new org.hamcrest.StringDescription;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Action will not be performed because the target view does not match one or more of the following constraints:\n");

        specialinvoke r36.<org.hamcrest.StringDescription: void <init>(java.lang.Appendable)>(r35);

        r4 = r36;

        interfaceinvoke r2.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r4);

        $r18 = virtualinvoke r4.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\nTarget view: ");

        $r19 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r3);

        interfaceinvoke $r18.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r19);

        $r21 = virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction getInnerViewAction()>();

        $z1 = $r21 instanceof android.support.test.espresso.action.ScrollToAction;

        if $z1 == 0 goto label1;

        $r22 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/AdapterView;");

        $r23 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDescendantOfA(org.hamcrest.Matcher)>($r22);

        $z2 = interfaceinvoke $r23.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z2 == 0 goto label1;

        virtualinvoke r4.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\nFurther Info: ScrollToAction on a view inside an AdapterView will not work. Use Espresso.onData to load the view.");

     label1:
        r37 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r37.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r26 = virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: java.lang.String getDescription()>();

        $r27 = virtualinvoke r37.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r26);

        $r28 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        $r30 = virtualinvoke $r27.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r29);

        r38 = new java.lang.RuntimeException;

        $r32 = virtualinvoke r4.<org.hamcrest.StringDescription: java.lang.String toString()>();

        specialinvoke r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32);

        r39 = (java.lang.Throwable) r38;

        $r33 = virtualinvoke $r30.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r39);

        $r34 = virtualinvoke $r33.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r40 = (java.lang.Throwable) $r34;

        throw r40;

     label2:
        $r15 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        virtualinvoke r1.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: void perform(android.support.test.espresso.UiController,android.view.View)>($r15, r3);

        return;
    }

    public android.support.test.espresso.ViewInteraction check(android.support.test.espresso.ViewAssertion)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewAssertion r1;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r2, r21;
        android.support.test.espresso.ViewInteraction$2 r3, r22;
        java.util.ArrayList r4, r23;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture $r9, $r20;
        android.support.test.espresso.remote.RemoteInteraction $r10, $r13;
        boolean $z1;
        java.util.concurrent.atomic.AtomicReference $r11;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService $r12;
        java.lang.Object $r14;
        android.support.test.espresso.ViewAssertion[] $r15;
        org.hamcrest.Matcher $r16, $r17;
        java.util.Map $r18;
        java.util.concurrent.Callable $r19;
        java.util.List r24, r25, r26;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: android.support.test.espresso.ViewAssertion;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r21 = new android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        specialinvoke r21.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: void <init>(android.support.test.espresso.ViewAssertion,android.support.test.espresso.ViewInteraction$1)>(r1, null);

        r2 = r21;

        r22 = new android.support.test.espresso.ViewInteraction$2;

        specialinvoke r22.<android.support.test.espresso.ViewInteraction$2: void <init>(android.support.test.espresso.ViewInteraction,android.support.test.espresso.ViewAssertion,android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion)>(r0, r1, r2);

        r3 = r22;

        r23 = new java.util.ArrayList;

        specialinvoke r23.<java.util.ArrayList: void <init>()>();

        r4 = r23;

        $r9 = specialinvoke r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture runSynchronouslyOnUiThread(java.util.concurrent.Callable)>(r3);

        r24 = (java.util.List) r4;

        interfaceinvoke r24.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction>;

        $z1 = interfaceinvoke $r10.<android.support.test.espresso.remote.RemoteInteraction: boolean isRemoteProcess()>();

        if $z1 != 0 goto label1;

        $r12 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService remoteExecutor>;

        $r13 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.remote.RemoteInteraction remoteInteraction>;

        $r11 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.atomic.AtomicReference rootMatcherRef>;

        $r14 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r16 = (org.hamcrest.Matcher) $r14;

        $r17 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        $r15 = newarray (android.support.test.espresso.ViewAssertion)[2];

        $r15[0] = r2;

        $r15[1] = r1;

        $r18 = staticinvoke <android.support.test.espresso.ViewInteraction: java.util.Map getIBindersFromViewAssertions(android.support.test.espresso.ViewAssertion[])>($r15);

        $r19 = interfaceinvoke $r13.<android.support.test.espresso.remote.RemoteInteraction: java.util.concurrent.Callable createRemoteCheckCallable(org.hamcrest.Matcher,org.hamcrest.Matcher,java.util.Map,android.support.test.espresso.ViewAssertion)>($r16, $r17, $r18, r1);

        $r20 = interfaceinvoke $r12.<android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r19);

        r25 = (java.util.List) r4;

        interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r20);

     label1:
        r26 = (java.util.List) r4;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction: void waitForAndHandleInteractionResults(java.util.List)>(r26);

        return r0;
    }

    private android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFuture runSynchronouslyOnUiThread(java.util.concurrent.Callable)
    {
        android.support.test.espresso.ViewInteraction r0;
        java.util.concurrent.Callable r1;
        android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: java.util.concurrent.Callable;

        r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask: android.support.test.espresso.core.internal.deps.guava.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r1);

        $r3 = r0.<android.support.test.espresso.ViewInteraction: java.util.concurrent.Executor mainThreadExecutor>;

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

        return r2;
    }

    private void waitForAndHandleInteractionResults(java.util.List)
    {
        android.support.test.espresso.ViewInteraction r0;
        java.util.List r1;
        java.lang.Throwable r2, $r5, $r7, $r11, r15, r16;
        android.support.test.espresso.base.InterruptableUiController $r4, $r6, $r10, $r14;
        org.hamcrest.Matcher $r8, $r12;
        android.support.test.espresso.FailureHandler $r9, $r13;

        r0 := @this: android.support.test.espresso.ViewInteraction;

        r1 := @parameter0: java.util.List;

     label1:
        staticinvoke <android.support.test.espresso.InteractionResultsHandler: java.lang.Object gatherAnyResult(java.util.List)>(r1);

     label2:
        $r4 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        interfaceinvoke $r4.<android.support.test.espresso.base.InterruptableUiController: void interruptEspressoTasks()>();

        goto label8;

     label3:
        $r7 := @caughtexception;

        r15 = $r7;

        $r9 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.FailureHandler failureHandler>;

        $r8 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        interfaceinvoke $r9.<android.support.test.espresso.FailureHandler: void handle(java.lang.Throwable,org.hamcrest.Matcher)>(r15, $r8);

     label4:
        $r10 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        interfaceinvoke $r10.<android.support.test.espresso.base.InterruptableUiController: void interruptEspressoTasks()>();

        goto label8;

     label5:
        $r11 := @caughtexception;

        r16 = $r11;

        $r13 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.FailureHandler failureHandler>;

        $r12 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        interfaceinvoke $r13.<android.support.test.espresso.FailureHandler: void handle(java.lang.Throwable,org.hamcrest.Matcher)>(r16, $r12);

     label6:
        $r14 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        interfaceinvoke $r14.<android.support.test.espresso.base.InterruptableUiController: void interruptEspressoTasks()>();

        goto label8;

     label7:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        interfaceinvoke $r6.<android.support.test.espresso.base.InterruptableUiController: void interruptEspressoTasks()>();

        throw r2;

     label8:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    static void access$100(android.support.test.espresso.ViewInteraction, android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r1;

        r0 := @parameter0: android.support.test.espresso.ViewInteraction;

        r1 := @parameter1: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction: void doPerform(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)>(r1);

        return;
    }

    static android.support.test.espresso.base.InterruptableUiController access$300(android.support.test.espresso.ViewInteraction)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.base.InterruptableUiController $r1;

        r0 := @parameter0: android.support.test.espresso.ViewInteraction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController uiController>;

        return $r1;
    }

    static android.support.test.espresso.ViewFinder access$400(android.support.test.espresso.ViewInteraction)
    {
        android.support.test.espresso.ViewInteraction r0;
        android.support.test.espresso.ViewFinder $r1;

        r0 := @parameter0: android.support.test.espresso.ViewInteraction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewFinder viewFinder>;

        return $r1;
    }

    static java.lang.String access$500()
    {
        java.lang.String $r0;

        $r0 = <android.support.test.espresso.ViewInteraction: java.lang.String TAG>;

        return $r0;
    }

    static org.hamcrest.Matcher access$600(android.support.test.espresso.ViewInteraction)
    {
        android.support.test.espresso.ViewInteraction r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: android.support.test.espresso.ViewInteraction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/test/espresso/ViewInteraction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.ViewInteraction: java.lang.String TAG> = $r1;

        return;
    }

android.support.test.espresso.ViewInteraction$1
<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction val$va>
<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction this$0>
    void <init>(android.support.test.espresso.ViewInteraction, android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)
    {
        android.support.test.espresso.ViewInteraction$1 r0;
        android.support.test.espresso.ViewInteraction r1;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$1;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction;

        r2 := @parameter1: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r0.<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction this$0> = r1;

        r0.<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction val$va> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call()
    {
        android.support.test.espresso.ViewInteraction$1 r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction $r1;
        android.support.test.espresso.ViewInteraction $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$1;

        $r2 = r0.<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction this$0>;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$1: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction val$va>;

        staticinvoke <android.support.test.espresso.ViewInteraction: void access$100(android.support.test.espresso.ViewInteraction,android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)>($r2, $r1);

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.ViewInteraction$1 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.ViewInteraction$1;

        $r1 = virtualinvoke r0.<android.support.test.espresso.ViewInteraction$1: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.ViewInteraction$2
<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewAssertion val$viewAssert>
<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion val$singleExecutionViewAssertion>
<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction this$0>
    void <init>(android.support.test.espresso.ViewInteraction, android.support.test.espresso.ViewAssertion, android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion)
    {
        android.support.test.espresso.ViewInteraction$2 r0;
        android.support.test.espresso.ViewInteraction r1;
        android.support.test.espresso.ViewAssertion r2;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r3;

        r0 := @this: android.support.test.espresso.ViewInteraction$2;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction;

        r2 := @parameter1: android.support.test.espresso.ViewAssertion;

        r3 := @parameter2: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction this$0> = r1;

        r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewAssertion val$viewAssert> = r2;

        r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion val$singleExecutionViewAssertion> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call()
    {
        android.support.test.espresso.ViewInteraction$2 r0;
        android.support.test.espresso.ViewInteraction $r1, $r3, $r8;
        android.support.test.espresso.base.InterruptableUiController $r2;
        android.support.test.espresso.ViewFinder $r4;
        java.lang.String $r5, $r10;
        java.lang.Object[] $r6;
        android.support.test.espresso.ViewAssertion $r7;
        org.hamcrest.Matcher $r9;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion $r11;
        android.view.View r12;

        r0 := @this: android.support.test.espresso.ViewInteraction$2;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction this$0>;

        $r2 = staticinvoke <android.support.test.espresso.ViewInteraction: android.support.test.espresso.base.InterruptableUiController access$300(android.support.test.espresso.ViewInteraction)>($r1);

        interfaceinvoke $r2.<android.support.test.espresso.base.InterruptableUiController: void loopMainThreadUntilIdle()>();

        $r3 = r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction this$0>;

        $r4 = staticinvoke <android.support.test.espresso.ViewInteraction: android.support.test.espresso.ViewFinder access$400(android.support.test.espresso.ViewInteraction)>($r3);

        r12 = interfaceinvoke $r4.<android.support.test.espresso.ViewFinder: android.view.View getView()>();

        goto label1;

     label1:
        $r5 = staticinvoke <android.support.test.espresso.ViewInteraction: java.lang.String access$500()>();

        $r6 = newarray (java.lang.Object)[2];

        $r7 = r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewAssertion val$viewAssert>;

        $r6[0] = $r7;

        $r8 = r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction this$0>;

        $r9 = staticinvoke <android.support.test.espresso.ViewInteraction: org.hamcrest.Matcher access$600(android.support.test.espresso.ViewInteraction)>($r8);

        $r6[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking \'%s\' assertion on view %s", $r6);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r10);

        $r11 = r0.<android.support.test.espresso.ViewInteraction$2: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion val$singleExecutionViewAssertion>;

        virtualinvoke $r11.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: void check(android.view.View,android.support.test.espresso.NoMatchingViewException)>(r12, null);

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.ViewInteraction$2 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.ViewInteraction$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.ViewInteraction$2: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1: java.util.concurrent.atomic.AtomicBoolean run>
    void <init>(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1 r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        specialinvoke r0.<android.support.test.espresso.remote.IInteractionExecutionStatus$Stub: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1: java.util.concurrent.atomic.AtomicBoolean run> = $r2;

        return;
    }

    public boolean canExecute() throws android.os.RemoteException
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1 r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1: java.util.concurrent.atomic.AtomicBoolean run>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        return $z0;
    }

android.support.test.espresso.ViewInteraction$SingleExecutionViewAction
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.remote.IInteractionExecutionStatus actionExecutionStatus>
    private void <init>(android.support.test.espresso.ViewAction, org.hamcrest.Matcher)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.ViewAction r1;
        org.hamcrest.Matcher r2;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1 $r3;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r1 := @parameter0: android.support.test.espresso.ViewAction;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1;

        specialinvoke $r3.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction$1: void <init>(android.support.test.espresso.ViewInteraction$SingleExecutionViewAction)>(r0);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.remote.IInteractionExecutionStatus actionExecutionStatus> = $r3;

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction> = r1;

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: org.hamcrest.Matcher viewMatcher> = r2;

        return;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.ViewAction $r1;
        org.hamcrest.Matcher $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.ViewAction: org.hamcrest.Matcher getConstraints()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.ViewAction $r1;
        java.lang.String $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.ViewAction: java.lang.String getDescription()>();

        return $r2;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r3;
        boolean $z0;
        java.lang.String $r4, $r6, $r10, $r16, $r19, r25;
        android.support.test.espresso.ViewAction $r5, $r12, $r15;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, r27;
        java.lang.Object[] $r11;
        java.lang.Throwable $r13, $r22, r26, r31, r32;
        android.support.test.espresso.PerformException$Builder $r17, $r20, $r23, r28;
        org.hamcrest.Matcher $r18;
        android.support.test.espresso.PerformException $r24;
        java.lang.RuntimeException r29;
        android.os.RemoteException r30;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

     label1:
        $r3 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.remote.IInteractionExecutionStatus actionExecutionStatus>;

        $z0 = interfaceinvoke $r3.<android.support.test.espresso.remote.IInteractionExecutionStatus: boolean canExecute()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        interfaceinvoke $r12.<android.support.test.espresso.ViewAction: void perform(android.support.test.espresso.UiController,android.view.View)>(r1, r2);

        goto label3;

     label2:
        $r4 = staticinvoke <android.support.test.espresso.ViewInteraction: java.lang.String access$500()>();

        $r5 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r25);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = 63 + $i0;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r8 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to execute a Single Execution Action more then once: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebugWithProcess(java.lang.String,java.lang.String,java.lang.Object[])>($r4, $r10, $r11);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r26 = $r13;

        r28 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r28.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r15 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        $r16 = interfaceinvoke $r15.<android.support.test.espresso.ViewAction: java.lang.String getDescription()>();

        $r17 = virtualinvoke r28.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r16);

        $r18 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: org.hamcrest.Matcher viewMatcher>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r20 = virtualinvoke $r17.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r19);

        r29 = new java.lang.RuntimeException;

        r30 = (android.os.RemoteException) r26;

        $r22 = virtualinvoke r30.<android.os.RemoteException: java.lang.Throwable getCause()>();

        specialinvoke r29.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to query interaction execution status", $r22);

        r31 = (java.lang.Throwable) r29;

        $r23 = virtualinvoke $r20.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r31);

        $r24 = virtualinvoke $r23.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r32 = (java.lang.Throwable) $r24;

        throw r32;

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    android.support.test.espresso.ViewAction getInnerViewAction()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.ViewAction $r1;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.ViewAction viewAction>;

        return $r1;
    }

    public java.lang.String getId()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        return "executionStatus";
    }

    public android.os.IBinder getIBinder()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.remote.IInteractionExecutionStatus actionExecutionStatus>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.remote.IInteractionExecutionStatus: android.os.IBinder asBinder()>();

        return $r2;
    }

    public void setIBinder(android.os.IBinder)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.os.IBinder r1;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.support.test.espresso.remote.IInteractionExecutionStatus$Stub: android.support.test.espresso.remote.IInteractionExecutionStatus asInterface(android.os.IBinder)>(r1);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: android.support.test.espresso.remote.IInteractionExecutionStatus actionExecutionStatus> = $r2;

        return;
    }

    void <init>(android.support.test.espresso.ViewAction, org.hamcrest.Matcher, android.support.test.espresso.ViewInteraction$1)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAction r0;
        android.support.test.espresso.ViewAction r1;
        org.hamcrest.Matcher r2;
        android.support.test.espresso.ViewInteraction$1 r3;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAction;

        r1 := @parameter0: android.support.test.espresso.ViewAction;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: android.support.test.espresso.ViewInteraction$1;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAction: void <init>(android.support.test.espresso.ViewAction,org.hamcrest.Matcher)>(r1, r2);

        return;
    }

android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1: java.util.concurrent.atomic.AtomicBoolean run>
    void <init>(android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1 r0;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1;

        r1 := @parameter0: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        specialinvoke r0.<android.support.test.espresso.remote.IInteractionExecutionStatus$Stub: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1: java.util.concurrent.atomic.AtomicBoolean run> = $r2;

        return;
    }

    public boolean canExecute() throws android.os.RemoteException
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1 r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1: java.util.concurrent.atomic.AtomicBoolean run>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        return $z0;
    }

android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.ViewAssertion viewAssertion>
<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.remote.IInteractionExecutionStatus assertionExecutionStatus>
    private void <init>(android.support.test.espresso.ViewAssertion)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;
        android.support.test.espresso.ViewAssertion r1;
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1 $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        r1 := @parameter0: android.support.test.espresso.ViewAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1;

        specialinvoke $r2.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion$1: void <init>(android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion)>(r0);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.remote.IInteractionExecutionStatus assertionExecutionStatus> = $r2;

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.ViewAssertion viewAssertion> = r1;

        return;
    }

    public void check(android.view.View, android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;
        android.view.View r1;
        android.support.test.espresso.NoMatchingViewException r2;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r3;
        boolean $z0;
        java.lang.String $r4, $r6, $r10, r16;
        android.support.test.espresso.ViewAssertion $r5, $r12;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, r18;
        java.lang.Object[] $r11;
        java.lang.Throwable $r13, $r15, r17, r21;
        java.lang.RuntimeException r19;
        android.os.RemoteException r20;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.test.espresso.NoMatchingViewException;

     label1:
        $r3 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.remote.IInteractionExecutionStatus assertionExecutionStatus>;

        $z0 = interfaceinvoke $r3.<android.support.test.espresso.remote.IInteractionExecutionStatus: boolean canExecute()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.ViewAssertion viewAssertion>;

        interfaceinvoke $r12.<android.support.test.espresso.ViewAssertion: void check(android.view.View,android.support.test.espresso.NoMatchingViewException)>(r1, r2);

        goto label3;

     label2:
        $r4 = staticinvoke <android.support.test.espresso.ViewInteraction: java.lang.String access$500()>();

        $r5 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.ViewAssertion viewAssertion>;

        r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r16);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = 66 + $i0;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to execute a Single Execution Assertion more then once: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <android.support.test.internal.util.LogUtil: void logDebugWithProcess(java.lang.String,java.lang.String,java.lang.Object[])>($r4, $r10, $r11);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r17 = $r13;

        r19 = new java.lang.RuntimeException;

        r20 = (android.os.RemoteException) r17;

        $r15 = virtualinvoke r20.<android.os.RemoteException: java.lang.Throwable getCause()>();

        specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to query interaction execution status", $r15);

        r21 = (java.lang.Throwable) r19;

        throw r21;

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public java.lang.String getId()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        return "executionStatus";
    }

    public android.os.IBinder getIBinder()
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        $r1 = r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.remote.IInteractionExecutionStatus assertionExecutionStatus>;

        $r2 = interfaceinvoke $r1.<android.support.test.espresso.remote.IInteractionExecutionStatus: android.os.IBinder asBinder()>();

        return $r2;
    }

    public void setIBinder(android.os.IBinder)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;
        android.os.IBinder r1;
        android.support.test.espresso.remote.IInteractionExecutionStatus $r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.support.test.espresso.remote.IInteractionExecutionStatus$Stub: android.support.test.espresso.remote.IInteractionExecutionStatus asInterface(android.os.IBinder)>(r1);

        r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: android.support.test.espresso.remote.IInteractionExecutionStatus assertionExecutionStatus> = $r2;

        return;
    }

    void <init>(android.support.test.espresso.ViewAssertion, android.support.test.espresso.ViewInteraction$1)
    {
        android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion r0;
        android.support.test.espresso.ViewAssertion r1;
        android.support.test.espresso.ViewInteraction$1 r2;

        r0 := @this: android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion;

        r1 := @parameter0: android.support.test.espresso.ViewAssertion;

        r2 := @parameter1: android.support.test.espresso.ViewInteraction$1;

        specialinvoke r0.<android.support.test.espresso.ViewInteraction$SingleExecutionViewAssertion: void <init>(android.support.test.espresso.ViewAssertion)>(r1);

        return;
    }

