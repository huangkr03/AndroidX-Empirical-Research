android.support.transition.Explode
<android.support.transition.Explode: android.animation.TimeInterpolator sDecelerate>
<android.support.transition.Explode: android.animation.TimeInterpolator sAccelerate>
<android.support.transition.Explode: java.lang.String PROPNAME_SCREEN_BOUNDS>
<android.support.transition.Explode: int[] mTempLoc>
    public void <init>()
    {
        android.support.transition.Explode r0;
        int[] $r1;
        android.support.transition.CircularPropagation $r2;

        r0 := @this: android.support.transition.Explode;

        specialinvoke r0.<android.support.transition.Visibility: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.support.transition.Explode: int[] mTempLoc> = $r1;

        $r2 = new android.support.transition.CircularPropagation;

        specialinvoke $r2.<android.support.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.support.transition.Explode: void setPropagation(android.support.transition.TransitionPropagation)>($r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.Explode r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int[] $r3;
        android.support.transition.CircularPropagation $r4;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = newarray (int)[2];

        r0.<android.support.transition.Explode: int[] mTempLoc> = $r3;

        $r4 = new android.support.transition.CircularPropagation;

        specialinvoke $r4.<android.support.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.support.transition.Explode: void setPropagation(android.support.transition.TransitionPropagation)>($r4);

        return;
    }

    private void captureValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues r1;
        android.view.View r2;
        int i0, i1, i2, i3, $i4, $i5;
        int[] $r3, $r4, $r5;
        android.graphics.Rect $r6;
        java.util.Map $r7;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.support.transition.TransitionValues;

        r2 = r1.<android.support.transition.TransitionValues: android.view.View view>;

        $r3 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>($r3);

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i0 = $r4[0];

        $r5 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i1 = $r5[1];

        $i4 = virtualinvoke r2.<android.view.View: int getWidth()>();

        i2 = i0 + $i4;

        $i5 = virtualinvoke r2.<android.view.View: int getHeight()>();

        i3 = i1 + $i5;

        $r7 = r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:explode:screenBounds", $r6);

        return;
    }

    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues r1;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.Visibility: void captureStartValues(android.support.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.support.transition.Explode: void captureValues(android.support.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues r1;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.Visibility: void captureEndValues(android.support.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.support.transition.Explode: void captureValues(android.support.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.support.transition.TransitionValues r3, r4;
        android.graphics.Rect r5;
        float f0, f1, f2, f3, $f4, $f5;
        java.util.Map $r6;
        java.lang.Object $r7;
        int[] $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;
        android.animation.TimeInterpolator $r11;
        android.animation.Animator $r12;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.support.transition.TransitionValues;

        r4 := @parameter3: android.support.transition.TransitionValues;

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = r4.<android.support.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r5 = (android.graphics.Rect) $r7;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r8 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.support.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>(r1, r5, $r8);

        $r9 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i0 = $r9[0];

        $f4 = (float) $i0;

        f2 = f0 + $f4;

        $r10 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i1 = $r10[1];

        $f5 = (float) $i1;

        f3 = f1 + $f5;

        $i3 = r5.<android.graphics.Rect: int left>;

        $i2 = r5.<android.graphics.Rect: int top>;

        $r11 = <android.support.transition.Explode: android.animation.TimeInterpolator sDecelerate>;

        $r12 = staticinvoke <android.support.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)>(r2, r4, $i3, $i2, f2, f3, f0, f1, $r11);

        return $r12;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.view.ViewGroup r1;
        android.view.View r2, $r9;
        android.support.transition.TransitionValues r3, r4;
        android.graphics.Rect r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float f0, f1, $f2, $f3, $f4, $f5, f6, f7, f8, f9;
        int[] r6, $r11, $r12, $r13, $r14;
        java.util.Map $r7;
        java.lang.Object $r8, $r10;
        android.animation.TimeInterpolator $r15;
        android.animation.Animator $r16;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.support.transition.TransitionValues;

        r4 := @parameter3: android.support.transition.TransitionValues;

        if r3 != null goto label1;

        return null;

     label1:
        $r7 = r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r5 = (android.graphics.Rect) $r8;

        i0 = r5.<android.graphics.Rect: int left>;

        i1 = r5.<android.graphics.Rect: int top>;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        f6 = f0;

        f7 = f1;

        $r9 = r3.<android.support.transition.TransitionValues: android.view.View view>;

        $i2 = <android.support.transition.R$id: int transition_position>;

        $r10 = virtualinvoke $r9.<android.view.View: java.lang.Object getTag(int)>($i2);

        $r11 = (int[]) $r10;

        r6 = (int[]) $r11;

        if r6 == null goto label2;

        $i6 = r6[0];

        $i5 = r5.<android.graphics.Rect: int left>;

        $i7 = $i6 - $i5;

        $f4 = (float) $i7;

        f6 = f6 + $f4;

        $i9 = r6[1];

        $i8 = r5.<android.graphics.Rect: int top>;

        $i10 = $i9 - $i8;

        $f5 = (float) $i10;

        f7 = f7 + $f5;

        $i12 = r6[0];

        $i11 = r6[1];

        virtualinvoke r5.<android.graphics.Rect: void offsetTo(int,int)>($i12, $i11);

     label2:
        $r12 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.support.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>(r1, r5, $r12);

        $r13 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i3 = $r13[0];

        $f2 = (float) $i3;

        f8 = f6 + $f2;

        $r14 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i4 = $r14[1];

        $f3 = (float) $i4;

        f9 = f7 + $f3;

        $r15 = <android.support.transition.Explode: android.animation.TimeInterpolator sAccelerate>;

        $r16 = staticinvoke <android.support.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)>(r2, r3, i0, i1, f0, f1, f8, f9, $r15);

        return $r16;
    }

    private void calculateOut(android.view.View, android.graphics.Rect, int[])
    {
        android.support.transition.Explode r0;
        android.view.View r1;
        android.graphics.Rect r2, r4;
        int[] r3, $r5, $r6, $r7;
        int i0, i1, i2, i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20, $i21;
        float f0, f1, $f2, $f3, $f4, $f5, f6, f7, f8, f9, $f10, $f11;
        byte $b6, $b7;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.support.transition.Explode;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: int[];

        $r5 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        virtualinvoke r1.<android.view.View: void getLocationOnScreen(int[])>($r5);

        $r6 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i0 = $r6[0];

        $r7 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i1 = $r7[1];

        r4 = virtualinvoke r0.<android.support.transition.Explode: android.graphics.Rect getEpicenter()>();

        if r4 != null goto label1;

        $i8 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i9 = $i8 / 2;

        $i10 = i0 + $i9;

        $f4 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f4);

        i16 = $i10 + $i11;

        $i12 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i13 = $i12 / 2;

        $i14 = i1 + $i13;

        $f5 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $i15 = staticinvoke <java.lang.Math: int round(float)>($f5);

        i17 = $i14 + $i15;

        goto label2;

     label1:
        i16 = virtualinvoke r4.<android.graphics.Rect: int centerX()>();

        i17 = virtualinvoke r4.<android.graphics.Rect: int centerY()>();

     label2:
        i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        i3 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $i4 = i2 - i16;

        f6 = (float) $i4;

        $i5 = i3 - i17;

        f7 = (float) $i5;

        $b6 = f6 cmpl 0.0F;

        if $b6 != 0 goto label3;

        $b7 = f7 cmpl 0.0F;

        if $b7 != 0 goto label3;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 2.0;

        $f2 = (float) $d1;

        f6 = $f2 - 1.0F;

        $d2 = staticinvoke <java.lang.Math: double random()>();

        $d3 = $d2 * 2.0;

        $f3 = (float) $d3;

        f7 = $f3 - 1.0F;

     label3:
        f0 = staticinvoke <android.support.transition.Explode: float calculateDistance(float,float)>(f6, f7);

        f8 = f6 / f0;

        f9 = f7 / f0;

        $i18 = i16 - i0;

        $i19 = i17 - i1;

        f1 = staticinvoke <android.support.transition.Explode: float calculateMaxDistance(android.view.View,int,int)>(r1, $i18, $i19);

        $f10 = f1 * f8;

        $i20 = staticinvoke <java.lang.Math: int round(float)>($f10);

        r3[0] = $i20;

        $f11 = f1 * f9;

        $i21 = staticinvoke <java.lang.Math: int round(float)>($f11);

        r3[1] = $i21;

        return;
    }

    private static float calculateMaxDistance(android.view.View, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i5 = $i4 - i0;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i5);

        $i6 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i7 = $i6 - i1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i7);

        $f1 = (float) i2;

        $f0 = (float) i3;

        $f2 = staticinvoke <android.support.transition.Explode: float calculateDistance(float,float)>($f1, $f0);

        return $f2;
    }

    private static float calculateDistance(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f4 = $f3 + $f2;

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f5 = (float) $d1;

        return $f5;
    }

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.support.transition.Explode: android.animation.TimeInterpolator sDecelerate> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <android.support.transition.Explode: android.animation.TimeInterpolator sAccelerate> = $r1;

        return;
    }

