android.support.v4.content.res.GradientColorInflaterCompat
<android.support.v4.content.res.GradientColorInflaterCompat: int TILE_MODE_CLAMP>
<android.support.v4.content.res.GradientColorInflaterCompat: int TILE_MODE_REPEAT>
<android.support.v4.content.res.GradientColorInflaterCompat: int TILE_MODE_MIRROR>
    private void <init>()
    {
        android.support.v4.content.res.GradientColorInflaterCompat r0;

        r0 := @this: android.support.v4.content.res.GradientColorInflaterCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Shader createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        int i0, $i1;
        android.graphics.Shader $r4;
        org.xmlpull.v1.XmlPullParserException $r5;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r5;

     label3:
        $r4 = staticinvoke <android.support.v4.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r3, r2);

        return $r4;
    }

    static android.graphics.Shader createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        java.lang.String r4, $r21, $r25;
        android.content.res.TypedArray r5;
        float f0, f1, f2, f3, f4, f5, f6;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, $z1;
        int[] $r6, $r9, $r11, $r16;
        android.graphics.SweepGradient $r7;
        float[] $r8, $r12, $r17;
        byte $b17;
        android.graphics.RadialGradient $r10;
        android.graphics.Shader$TileMode $r13, $r18;
        org.xmlpull.v1.XmlPullParserException $r14, $r19;
        android.graphics.LinearGradient $r15;
        java.lang.StringBuilder $r20, $r22, $r23, $r24;
        android.support.v4.content.res.GradientColorInflaterCompat$ColorStops r26, r27;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z1 != 0 goto label1;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label1:
        $r6 = <android.support.compat.R$styleable: int[] GradientColor>;

        r5 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r0, r3, r2, $r6);

        $i5 = <android.support.compat.R$styleable: int GradientColor_android_startX>;

        f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "startX", $i5, 0.0F);

        $i6 = <android.support.compat.R$styleable: int GradientColor_android_startY>;

        f1 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "startY", $i6, 0.0F);

        $i7 = <android.support.compat.R$styleable: int GradientColor_android_endX>;

        f2 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "endX", $i7, 0.0F);

        $i8 = <android.support.compat.R$styleable: int GradientColor_android_endY>;

        f3 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "endY", $i8, 0.0F);

        $i9 = <android.support.compat.R$styleable: int GradientColor_android_centerX>;

        f4 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "centerX", $i9, 0.0F);

        $i10 = <android.support.compat.R$styleable: int GradientColor_android_centerY>;

        f5 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "centerY", $i10, 0.0F);

        $i11 = <android.support.compat.R$styleable: int GradientColor_android_type>;

        i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, r1, "type", $i11, 0);

        $i12 = <android.support.compat.R$styleable: int GradientColor_android_startColor>;

        i1 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, r1, "startColor", $i12, 0);

        z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "centerColor");

        $i13 = <android.support.compat.R$styleable: int GradientColor_android_centerColor>;

        i2 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, r1, "centerColor", $i13, 0);

        $i14 = <android.support.compat.R$styleable: int GradientColor_android_endColor>;

        i3 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, r1, "endColor", $i14, 0);

        $i15 = <android.support.compat.R$styleable: int GradientColor_android_tileMode>;

        i4 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, r1, "tileMode", $i15, 0);

        $i16 = <android.support.compat.R$styleable: int GradientColor_android_gradientRadius>;

        f6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, r1, "gradientRadius", $i16, 0.0F);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r26 = staticinvoke <android.support.v4.content.res.GradientColorInflaterCompat: android.support.v4.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r2, r3);

        r27 = staticinvoke <android.support.v4.content.res.GradientColorInflaterCompat: android.support.v4.content.res.GradientColorInflaterCompat$ColorStops checkColors(android.support.v4.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>(r26, i1, i3, z0, i2);

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        $b17 = f6 cmpg 0.0F;

        if $b17 > 0 goto label3;

        $r14 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type");

        throw $r14;

     label3:
        $r10 = new android.graphics.RadialGradient;

        $r11 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r12 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $r13 = staticinvoke <android.support.v4.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>(i4);

        specialinvoke $r10.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f4, f5, f6, $r11, $r12, $r13);

        return $r10;

     label4:
        $r7 = new android.graphics.SweepGradient;

        $r9 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r8 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        specialinvoke $r7.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>(f4, f5, $r9, $r8);

        return $r7;

     label5:
        $r15 = new android.graphics.LinearGradient;

        $r16 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r17 = r27.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $r18 = staticinvoke <android.support.v4.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>(i4);

        specialinvoke $r15.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f0, f1, f2, f3, $r16, $r17, $r18);

        return $r15;
    }

    private static android.support.v4.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.ArrayList r4, r5, $r7, $r8;
        android.content.res.TypedArray r6;
        boolean z0, z1, $z2;
        float f0;
        android.support.v4.content.res.GradientColorInflaterCompat$ColorStops $r9;
        java.lang.String $r10, $r14, $r18;
        int[] $r11;
        org.xmlpull.v1.XmlPullParserException $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r17;
        java.lang.Integer $r19;
        java.lang.Float $r20;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i4 + 1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(20);

        r4 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(20);

        r5 = $r8;

     label1:
        $i11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i11;

        if $i11 == 1 goto label7;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i6;

        if $i6 >= i0 goto label2;

        if i1 == 3 goto label7;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        if i2 > i0 goto label1;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 != 0 goto label4;

        goto label1;

     label4:
        $r11 = <android.support.compat.R$styleable: int[] GradientColorItem>;

        r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r0, r3, r2, $r11);

        $i7 = <android.support.compat.R$styleable: int GradientColorItem_android_color>;

        z0 = virtualinvoke r6.<android.content.res.TypedArray: boolean hasValue(int)>($i7);

        $i8 = <android.support.compat.R$styleable: int GradientColorItem_android_offset>;

        z1 = virtualinvoke r6.<android.content.res.TypedArray: boolean hasValue(int)>($i8);

        if z0 == 0 goto label5;

        if z1 != 0 goto label6;

     label5:
        $r12 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute!");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label6:
        $i9 = <android.support.compat.R$styleable: int GradientColorItem_android_color>;

        i3 = virtualinvoke r6.<android.content.res.TypedArray: int getColor(int,int)>($i9, 0);

        $i10 = <android.support.compat.R$styleable: int GradientColorItem_android_offset>;

        f0 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>($i10, 0.0F);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label1;

     label7:
        $i5 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i5 <= 0 goto label8;

        $r9 = new android.support.v4.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r9.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>(r5, r4);

        return $r9;

     label8:
        return null;
    }

    private static android.support.v4.content.res.GradientColorInflaterCompat$ColorStops checkColors(android.support.v4.content.res.GradientColorInflaterCompat$ColorStops, int, int, boolean, int)
    {
        android.support.v4.content.res.GradientColorInflaterCompat$ColorStops r0, $r1, $r2;
        int i0, i1, i2;
        boolean z0;

        r0 := @parameter0: android.support.v4.content.res.GradientColorInflaterCompat$ColorStops;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        if r0 == null goto label1;

        return r0;

     label1:
        if z0 == 0 goto label2;

        $r2 = new android.support.v4.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r2.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>(i0, i2, i1);

        return $r2;

     label2:
        $r1 = new android.support.v4.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r1.<android.support.v4.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>(i0, i1);

        return $r1;
    }

    private static android.graphics.Shader$TileMode parseTileMode(int)
    {
        int i0;
        android.graphics.Shader$TileMode $r0, $r1, $r2;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r1 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        return $r1;

     label2:
        $r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        return $r0;

     label3:
        $r2 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return $r2;
    }

