android.support.v4.content.res.FontResourcesParserCompat
<android.support.v4.content.res.FontResourcesParserCompat: int NORMAL_WEIGHT>
<android.support.v4.content.res.FontResourcesParserCompat: int ITALIC>
<android.support.v4.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_BLOCKING>
<android.support.v4.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_ASYNC>
<android.support.v4.content.res.FontResourcesParserCompat: int INFINITE_TIMEOUT_VALUE>
<android.support.v4.content.res.FontResourcesParserCompat: int DEFAULT_TIMEOUT_MILLIS>
    public static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        int i0, $i1;
        android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry $r2;
        org.xmlpull.v1.XmlPullParserException $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r3;

     label3:
        $r2 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r0, r1);

        return $r2;
    }

    private static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        java.lang.String r2;
        boolean $z0;
        android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "font-family");

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("font-family");

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r0, r1);

        return $r3;

     label1:
        staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        return null;
    }

    private static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        java.lang.String r4, r5, r6, r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] $r8;
        boolean $z0, $z1;
        android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry $r9;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] $r10, $r12;
        java.lang.Object[] $r11;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry $r13;
        android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry $r14;
        android.support.v4.provider.FontRequest $r15;
        java.util.List r16;
        java.util.ArrayList $r17, r18;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        $r8 = <android.support.compat.R$styleable: int[] FontFamily>;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        $i3 = <android.support.compat.R$styleable: int FontFamily_fontProviderAuthority>;

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>($i3);

        $i4 = <android.support.compat.R$styleable: int FontFamily_fontProviderPackage>;

        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>($i4);

        $i5 = <android.support.compat.R$styleable: int FontFamily_fontProviderQuery>;

        r6 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>($i5);

        $i6 = <android.support.compat.R$styleable: int FontFamily_fontProviderCerts>;

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i6, 0);

        $i7 = <android.support.compat.R$styleable: int FontFamily_fontProviderFetchStrategy>;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInteger(int,int)>($i7, 1);

        $i8 = <android.support.compat.R$styleable: int FontFamily_fontProviderFetchTimeout>;

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInteger(int,int)>($i8, 500);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        if r4 == null goto label3;

        if r5 == null goto label3;

        if r6 == null goto label3;

     label1:
        $i11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i11 == 3 goto label2;

        staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        goto label1;

     label2:
        r16 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>(r1, i0);

        $r14 = new android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry;

        $r15 = new android.support.v4.provider.FontRequest;

        specialinvoke $r15.<android.support.v4.provider.FontRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>(r4, r5, r6, r16);

        specialinvoke $r14.<android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry: void <init>(android.support.v4.provider.FontRequest,int,int)>($r15, i1, i2);

        return $r14;

     label3:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r18 = $r17;

     label4:
        $i12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i12 == 3 goto label8;

        $i10 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i10 == 2 goto label5;

        goto label4;

     label5:
        r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z1 == 0 goto label6;

        $r13 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r0, r1);

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label7;

     label6:
        staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

     label7:
        goto label4;

     label8:
        $z0 = interfaceinvoke r18.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label9;

        return null;

     label9:
        $r9 = new android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry;

        $i9 = interfaceinvoke r18.<java.util.List: int size()>();

        $r10 = newarray (android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry)[$i9];

        $r11 = interfaceinvoke r18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) $r11;

        specialinvoke $r9.<android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: void <init>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[])>($r12);

        return $r9;
    }

    private static int getType(android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1, $i2, $i3;
        android.util.TypedValue r1, $r2;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.TypedArray: int getType(int)>(i0);

        return $i3;

     label1:
        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(i0, r1);

        $i2 = r1.<android.util.TypedValue: int type>;

        return $i2;
    }

    public static java.util.List readCerts(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4, i5;
        android.content.res.TypedArray r1;
        java.lang.Throwable r2, $r9;
        java.util.ArrayList $r3, r11, r12;
        java.lang.String[] $r4, $r6;
        java.util.List $r5, $r7, $r8, r10;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        if i0 != 0 goto label01;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r8;

     label01:
        r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

     label02:
        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if $i2 != 0 goto label04;

        r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label03:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r10;

     label04:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r11 = $r3;

        $i3 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>(r1, 0);

        if $i3 != 1 goto label08;

        i5 = 0;

     label05:
        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if i5 >= $i4 goto label07;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i5, 0);

        if i1 == 0 goto label06;

        $r6 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i1);

        $r7 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])>($r6);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r7);

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        goto label09;

     label08:
        $r4 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i0);

        $r5 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])>($r4);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r5);

     label09:
        r12 = r11;

     label10:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r12;

     label11:
        $r9 := @caughtexception;

        r2 = $r9;

     label12:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static java.util.List toByteArrayList(java.lang.String[])
    {
        java.lang.String[] r0, r2;
        java.util.ArrayList r1, $r4;
        int i0, i1;
        java.lang.String r3;
        byte[] $r5;

        r0 := @parameter0: java.lang.String[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r3, 0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String r4, r5;
        int[] $r6;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry $r7;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        $r6 = <android.support.compat.R$styleable: int[] FontFamilyFont>;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        $i8 = <android.support.compat.R$styleable: int FontFamilyFont_fontWeight>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i8);

        if $z1 == 0 goto label01;

        $i14 = <android.support.compat.R$styleable: int FontFamilyFont_fontWeight>;

        goto label02;

     label01:
        $i14 = <android.support.compat.R$styleable: int FontFamilyFont_android_fontWeight>;

     label02:
        i0 = $i14;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i0, 400);

        $i9 = <android.support.compat.R$styleable: int FontFamilyFont_fontStyle>;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i9);

        if $z2 == 0 goto label03;

        $i15 = <android.support.compat.R$styleable: int FontFamilyFont_fontStyle>;

        goto label04;

     label03:
        $i15 = <android.support.compat.R$styleable: int FontFamilyFont_android_fontStyle>;

     label04:
        i2 = $i15;

        $i10 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i2, 0);

        if 1 != $i10 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z0 = $z6;

        $i11 = <android.support.compat.R$styleable: int FontFamilyFont_ttcIndex>;

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i11);

        if $z3 == 0 goto label07;

        $i16 = <android.support.compat.R$styleable: int FontFamilyFont_ttcIndex>;

        goto label08;

     label07:
        $i16 = <android.support.compat.R$styleable: int FontFamilyFont_android_ttcIndex>;

     label08:
        i3 = $i16;

        $i12 = <android.support.compat.R$styleable: int FontFamilyFont_fontVariationSettings>;

        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i12);

        if $z4 == 0 goto label09;

        $i17 = <android.support.compat.R$styleable: int FontFamilyFont_fontVariationSettings>;

        goto label10;

     label09:
        $i17 = <android.support.compat.R$styleable: int FontFamilyFont_android_fontVariationSettings>;

     label10:
        i4 = $i17;

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(i4);

        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i3, 0);

        $i13 = <android.support.compat.R$styleable: int FontFamilyFont_font>;

        $z5 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i13);

        if $z5 == 0 goto label11;

        $i18 = <android.support.compat.R$styleable: int FontFamilyFont_font>;

        goto label12;

     label11:
        $i18 = <android.support.compat.R$styleable: int FontFamilyFont_android_font>;

     label12:
        i6 = $i18;

        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i6, 0);

        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(i6);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label13:
        $i19 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i19 == 3 goto label14;

        staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        goto label13;

     label14:
        $r7 = new android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry;

        specialinvoke $r7.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: void <init>(java.lang.String,int,boolean,java.lang.String,int,int)>(r5, i1, z0, r4, i5, i7);

        return $r7;
    }

    private static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int $i0, i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i1 = 1;

     label1:
        if i1 <= 0 goto label5;

        $i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        i1 = i1 + 1;

        goto label4;

     label3:
        i1 = i1 + -1;

     label4:
        goto label1;

     label5:
        return;
    }

    private void <init>()
    {
        android.support.v4.content.res.FontResourcesParserCompat r0;

        r0 := @this: android.support.v4.content.res.FontResourcesParserCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

