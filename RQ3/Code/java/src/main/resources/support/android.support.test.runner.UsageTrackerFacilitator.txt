android.support.test.runner.UsageTrackerFacilitator
<android.support.test.runner.UsageTrackerFacilitator: boolean mShouldTrackUsage>
    public void <init>(boolean)
    {
        android.support.test.runner.UsageTrackerFacilitator $r0;
        boolean $z0;

        $r0 := @this: android.support.test.runner.UsageTrackerFacilitator;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.test.runner.UsageTrackerFacilitator: boolean mShouldTrackUsage> = $z0;

        return;
    }

    public void registerUsageTracker(android.support.test.internal.runner.tracker.UsageTracker)
    {
        android.support.test.runner.UsageTrackerFacilitator $r0;
        android.support.test.internal.runner.tracker.UsageTracker $r1;
        boolean $z0;
        android.support.test.internal.runner.tracker.UsageTracker$NoOpUsageTracker $r2;

        $r0 := @this: android.support.test.runner.UsageTrackerFacilitator;

        $r1 := @parameter0: android.support.test.internal.runner.tracker.UsageTracker;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r0.<android.support.test.runner.UsageTrackerFacilitator: boolean shouldTrackUsage()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageTrackerFacilitator", "Usage tracking enabled");

        staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: void registerInstance(android.support.test.internal.runner.tracker.UsageTracker)>($r1);

        return;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageTrackerFacilitator", "Usage tracking disabled");

        $r2 = new android.support.test.internal.runner.tracker.UsageTracker$NoOpUsageTracker;

        specialinvoke $r2.<android.support.test.internal.runner.tracker.UsageTracker$NoOpUsageTracker: void <init>()>();

        staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: void registerInstance(android.support.test.internal.runner.tracker.UsageTracker)>($r2);

        return;
    }

    public void sendUsages()
    {
        android.support.test.runner.UsageTrackerFacilitator $r0;
        boolean $z0;
        android.support.test.internal.runner.tracker.UsageTracker $r1;

        $r0 := @this: android.support.test.runner.UsageTrackerFacilitator;

        $z0 = virtualinvoke $r0.<android.support.test.runner.UsageTrackerFacilitator: boolean shouldTrackUsage()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: android.support.test.internal.runner.tracker.UsageTracker getInstance()>();

        interfaceinvoke $r1.<android.support.test.internal.runner.tracker.UsageTracker: void sendUsages()>();

     label1:
        return;
    }

    public boolean shouldTrackUsage()
    {
        android.support.test.runner.UsageTrackerFacilitator $r0;
        boolean z0;

        $r0 := @this: android.support.test.runner.UsageTrackerFacilitator;

        z0 = $r0.<android.support.test.runner.UsageTrackerFacilitator: boolean mShouldTrackUsage>;

        return z0;
    }

    public void trackUsage(java.lang.String, java.lang.String)
    {
        android.support.test.runner.UsageTrackerFacilitator $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.support.test.internal.runner.tracker.UsageTracker $r3;

        $r0 := @this: android.support.test.runner.UsageTrackerFacilitator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<android.support.test.runner.UsageTrackerFacilitator: boolean shouldTrackUsage()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: android.support.test.internal.runner.tracker.UsageTracker getInstance()>();

        interfaceinvoke $r3.<android.support.test.internal.runner.tracker.UsageTracker: void trackUsage(java.lang.String,java.lang.String)>($r1, $r2);

     label1:
        return;
    }

