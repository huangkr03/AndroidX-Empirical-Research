android.support.v7.widget.AbsActionBarView
<android.support.v7.widget.AbsActionBarView: int FADE_DURATION>
<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>
<android.support.v7.widget.AbsActionBarView: android.content.Context mPopupContext>
<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>
<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>
<android.support.v7.widget.AbsActionBarView: int mContentHeight>
<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>
<android.support.v7.widget.AbsActionBarView: boolean mEatingTouch>
<android.support.v7.widget.AbsActionBarView: boolean mEatingHover>
    void <init>(android.content.Context)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.content.Context r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3;
        android.util.TypedValue r3, $r5;
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener $r4;
        android.content.res.Resources$Theme $r6;
        boolean $z0;
        android.view.ContextThemeWrapper $r7;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r4 = new android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke $r4.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: void <init>(android.support.v7.widget.AbsActionBarView)>(r0);

        r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = $r4;

        $r5 = new android.util.TypedValue;

        specialinvoke $r5.<android.util.TypedValue: void <init>()>();

        r3 = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i1 = <android.support.v7.appcompat.R$attr: int actionBarPopupTheme>;

        $z0 = virtualinvoke $r6.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i1, r3, 1);

        if $z0 == 0 goto label1;

        $i2 = r3.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label1;

        $r7 = new android.view.ContextThemeWrapper;

        $i3 = r3.<android.util.TypedValue: int resourceId>;

        specialinvoke $r7.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, $i3);

        r0.<android.support.v7.widget.AbsActionBarView: android.content.Context mPopupContext> = $r7;

        goto label2;

     label1:
        r0.<android.support.v7.widget.AbsActionBarView: android.content.Context mPopupContext> = r1;

     label2:
        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.content.res.Configuration r1;
        android.content.res.TypedArray r2;
        android.content.Context $r3;
        int $i0, $i1, $i2;
        int[] $r4;
        android.support.v7.widget.ActionMenuPresenter $r5, $r6;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r3 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: android.content.Context getContext()>();

        $r4 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;

        r2 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r4, $i0, 0);

        $i1 = <android.support.v7.appcompat.R$styleable: int ActionBar_height>;

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getLayoutDimension(int,int)>($i1, 0);

        virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: void setContentHeight(int)>($i2);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r5 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r5 == null goto label1;

        $r6 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r6.<android.support.v7.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label1;

        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label1:
        $z1 = r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingTouch>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingTouch> = 1;

     label2:
        if i0 == 1 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 9 goto label1;

        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label1:
        $z1 = r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingHover>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        if i0 != 9 goto label2;

        if z0 != 0 goto label2;

        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingHover> = 1;

     label2:
        if i0 == 10 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<android.support.v7.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    public void setContentHeight(int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter0: int;

        r0.<android.support.v7.widget.AbsActionBarView: int mContentHeight> = i0;

        virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public int getContentHeight()
    {
        android.support.v7.widget.AbsActionBarView r0;
        int $i0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $i0 = r0.<android.support.v7.widget.AbsActionBarView: int mContentHeight>;

        return $i0;
    }

    public int getAnimatedVisibility()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        int $i0, $i1;
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener $r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $i1 = $r2.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: int getVisibility()>();

        return $i0;
    }

    public android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int, long)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0, $i2;
        long l1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1, $r2, $r7, $r12, r13, r14;
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener $r4, $r5, $r9, $r10;
        android.view.View r15, r16;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        $r12 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        virtualinvoke $r12.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        if i0 != 0 goto label3;

        $i2 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: int getVisibility()>();

        if $i2 == 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: void setAlpha(float)>(0.0F);

     label2:
        r15 = (android.view.View) r0;

        $r7 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r15);

        r13 = virtualinvoke $r7.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        virtualinvoke r13.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(l1);

        $r9 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r10 = virtualinvoke $r9.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r13, i0);

        virtualinvoke r13.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r10);

        return r13;

     label3:
        r16 = (android.view.View) r0;

        $r2 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r16);

        r14 = virtualinvoke $r2.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        virtualinvoke r14.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(l1);

        $r4 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r5 = virtualinvoke $r4.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r14, i0);

        virtualinvoke r14.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r5);

        return r14;
    }

    public void animateToVisibility(int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0;
        android.support.v4.view.ViewPropertyAnimatorCompat r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(i0, 200L);

        virtualinvoke r1.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

        return;
    }

    public void setVisibility(int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0, $i1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1, $r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: int getVisibility()>();

        if i0 == $i1 goto label2;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        virtualinvoke $r2.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

     label2:
        return;
    }

    public boolean showOverflowMenu()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public void postShowOverflowMenu()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.AbsActionBarView$1 $r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = new android.support.v7.widget.AbsActionBarView$1;

        specialinvoke $r1.<android.support.v7.widget.AbsActionBarView$1: void <init>(android.support.v7.widget.AbsActionBarView)>(r0);

        virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public boolean hideOverflowMenu()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean canShowOverflowMenu()
    {
        android.support.v7.widget.AbsActionBarView r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $z0 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.AbsActionBarView: int getVisibility()>();

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void dismissPopupMenus()
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i2, i0);

        $i3 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i6 = i5 - $i3;

        i7 = i6 - i1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, i7);

        return $i4;
    }

    protected static int next(int, int, boolean)
    {
        int i0, i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $i2 = i0 - i1;

        goto label2;

     label1:
        $i2 = i0 + i1;

     label2:
        return $i2;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        android.support.v7.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;

        r0 := @this: android.support.v7.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        i3 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i4 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = i2 - i4;

        $i7 = $i6 / 2;

        i5 = i1 + $i7;

        if z0 == 0 goto label1;

        $i11 = i0 - i3;

        $i10 = i5 + i4;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, i5, i0, $i10);

        goto label2;

     label1:
        $i9 = i0 + i3;

        $i8 = i5 + i4;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i5, $i9, $i8);

     label2:
        if z0 == 0 goto label3;

        $i12 = neg i3;

        goto label4;

     label3:
        $i12 = i3;

     label4:
        return $i12;
    }

    static void access$001(android.support.v7.widget.AbsActionBarView, int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0;

        r0 := @parameter0: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

        return;
    }

    static void access$101(android.support.v7.widget.AbsActionBarView, int)
    {
        android.support.v7.widget.AbsActionBarView r0;
        int i0;

        r0 := @parameter0: android.support.v7.widget.AbsActionBarView;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

        return;
    }

android.support.v7.widget.AbsActionBarView$1
<android.support.v7.widget.AbsActionBarView$1: android.support.v7.widget.AbsActionBarView this$0>
    void <init>(android.support.v7.widget.AbsActionBarView)
    {
        android.support.v7.widget.AbsActionBarView$1 r0;
        android.support.v7.widget.AbsActionBarView r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView$1;

        r1 := @parameter0: android.support.v7.widget.AbsActionBarView;

        r0.<android.support.v7.widget.AbsActionBarView$1: android.support.v7.widget.AbsActionBarView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.v7.widget.AbsActionBarView$1 r0;
        android.support.v7.widget.AbsActionBarView $r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView$1;

        $r1 = r0.<android.support.v7.widget.AbsActionBarView$1: android.support.v7.widget.AbsActionBarView this$0>;

        virtualinvoke $r1.<android.support.v7.widget.AbsActionBarView: boolean showOverflowMenu()>();

        return;
    }

android.support.v7.widget.AbsActionBarView$VisibilityAnimListener
<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled>
<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>
<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0>
    protected void <init>(android.support.v7.widget.AbsActionBarView)
    {
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener r0;
        android.support.v7.widget.AbsActionBarView r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        r1 := @parameter0: android.support.v7.widget.AbsActionBarView;

        r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled> = 0;

        return;
    }

    public android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat, int)
    {
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener r0;
        android.support.v4.view.ViewPropertyAnimatorCompat r1;
        int i0;
        android.support.v7.widget.AbsActionBarView $r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        r1 := @parameter0: android.support.v4.view.ViewPropertyAnimatorCompat;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0>;

        $r2.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim> = r1;

        r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility> = i0;

        return r0;
    }

    public void onAnimationStart(android.view.View)
    {
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener r0;
        android.view.View r1;
        android.support.v7.widget.AbsActionBarView $r2;

        r0 := @this: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0>;

        staticinvoke <android.support.v7.widget.AbsActionBarView: void access$001(android.support.v7.widget.AbsActionBarView,int)>($r2, 0);

        r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled> = 0;

        return;
    }

    public void onAnimationEnd(android.view.View)
    {
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener r0;
        android.view.View r1;
        boolean $z0;
        android.support.v7.widget.AbsActionBarView $r2, $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0>;

        $r2.<android.support.v7.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim> = null;

        $r3 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.widget.AbsActionBarView this$0>;

        $i0 = r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        staticinvoke <android.support.v7.widget.AbsActionBarView: void access$101(android.support.v7.widget.AbsActionBarView,int)>($r3, $i0);

        return;
    }

    public void onAnimationCancel(android.view.View)
    {
        android.support.v7.widget.AbsActionBarView$VisibilityAnimListener r0;
        android.view.View r1;

        r0 := @this: android.support.v7.widget.AbsActionBarView$VisibilityAnimListener;

        r1 := @parameter0: android.view.View;

        r0.<android.support.v7.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled> = 1;

        return;
    }

