android.support.v17.leanback.widget.SpeechOrbView
<android.support.v17.leanback.widget.SpeechOrbView: float mSoundLevelMaxZoom>
<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mListeningOrbColors>
<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mNotListeningOrbColors>
<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>
<android.support.v17.leanback.widget.SpeechOrbView: boolean mListening>
    public void <init>(android.content.Context)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.content.Context r1;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.content.res.Resources r3;
        float $f0;
        android.support.v17.leanback.widget.SearchOrbView$Colors $r4, $r5;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v17.leanback.widget.SearchOrbView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel> = 0;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: boolean mListening> = 0;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <android.support.v17.leanback.R$fraction: int lb_search_bar_speech_orb_max_level_zoom>;

        $f0 = virtualinvoke r3.<android.content.res.Resources: float getFraction(int,int,int)>($i1, 1, 1);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: float mSoundLevelMaxZoom> = $f0;

        $r4 = new android.support.v17.leanback.widget.SearchOrbView$Colors;

        $i2 = <android.support.v17.leanback.R$color: int lb_speech_orb_not_recording>;

        $i3 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i2);

        $i4 = <android.support.v17.leanback.R$color: int lb_speech_orb_not_recording_pulsed>;

        $i5 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i4);

        $i6 = <android.support.v17.leanback.R$color: int lb_speech_orb_not_recording_icon>;

        $i7 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i6);

        specialinvoke $r4.<android.support.v17.leanback.widget.SearchOrbView$Colors: void <init>(int,int,int)>($i3, $i5, $i7);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mNotListeningOrbColors> = $r4;

        $r5 = new android.support.v17.leanback.widget.SearchOrbView$Colors;

        $i8 = <android.support.v17.leanback.R$color: int lb_speech_orb_recording>;

        $i9 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i8);

        $i10 = <android.support.v17.leanback.R$color: int lb_speech_orb_recording>;

        $i11 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i10);

        specialinvoke $r5.<android.support.v17.leanback.widget.SearchOrbView$Colors: void <init>(int,int,int)>($i9, $i11, 0);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mListeningOrbColors> = $r5;

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void showNotListening()>();

        return;
    }

    int getLayoutResourceId()
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        $i0 = <android.support.v17.leanback.R$layout: int lb_speech_orb>;

        return $i0;
    }

    public void setListeningOrbColors(android.support.v17.leanback.widget.SearchOrbView$Colors)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.support.v17.leanback.widget.SearchOrbView$Colors r1;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        r1 := @parameter0: android.support.v17.leanback.widget.SearchOrbView$Colors;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mListeningOrbColors> = r1;

        return;
    }

    public void setNotListeningOrbColors(android.support.v17.leanback.widget.SearchOrbView$Colors)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.support.v17.leanback.widget.SearchOrbView$Colors r1;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        r1 := @parameter0: android.support.v17.leanback.widget.SearchOrbView$Colors;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mNotListeningOrbColors> = r1;

        return;
    }

    public void showListening()
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.support.v17.leanback.widget.SearchOrbView$Colors $r1;
        android.content.res.Resources $r2;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        $r1 = r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mListeningOrbColors>;

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void setOrbColors(android.support.v17.leanback.widget.SearchOrbView$Colors)>($r1);

        $r2 = virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: android.content.res.Resources getResources()>();

        $i0 = <android.support.v17.leanback.R$drawable: int lb_ic_search_mic>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void setOrbIcon(android.graphics.drawable.Drawable)>($r3);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void animateOnFocus(boolean)>(1);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void enableOrbColorAnimation(boolean)>(0);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void scaleOrbViewOnly(float)>(1.0F);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel> = 0;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: boolean mListening> = 1;

        return;
    }

    public void showNotListening()
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        android.support.v17.leanback.widget.SearchOrbView$Colors $r1;
        android.content.res.Resources $r2;
        int $i0;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        $r1 = r0.<android.support.v17.leanback.widget.SpeechOrbView: android.support.v17.leanback.widget.SearchOrbView$Colors mNotListeningOrbColors>;

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void setOrbColors(android.support.v17.leanback.widget.SearchOrbView$Colors)>($r1);

        $r2 = virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: android.content.res.Resources getResources()>();

        $i0 = <android.support.v17.leanback.R$drawable: int lb_ic_search_mic_out>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void setOrbIcon(android.graphics.drawable.Drawable)>($r3);

        $z0 = virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: boolean hasFocus()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void animateOnFocus(boolean)>($z0);

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void scaleOrbViewOnly(float)>(1.0F);

        r0.<android.support.v17.leanback.widget.SpeechOrbView: boolean mListening> = 0;

        return;
    }

    public void setSoundLevel(int)
    {
        android.support.v17.leanback.widget.SpeechOrbView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.SpeechOrbView;

        i0 := @parameter0: int;

        $z0 = r0.<android.support.v17.leanback.widget.SpeechOrbView: boolean mListening>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>;

        if i0 <= $i1 goto label2;

        $i8 = r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>;

        $i5 = r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>;

        $i6 = i0 - $i5;

        $i7 = $i6 / 2;

        $i9 = $i8 + $i7;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel> = $i9;

        goto label3;

     label2:
        $i2 = r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>;

        $f1 = (float) $i2;

        $f2 = $f1 * 0.7F;

        $i3 = (int) $f2;

        r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel> = $i3;

     label3:
        $f3 = r0.<android.support.v17.leanback.widget.SpeechOrbView: float mSoundLevelMaxZoom>;

        $f4 = virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: float getFocusedZoom()>();

        $f6 = $f3 - $f4;

        $i4 = r0.<android.support.v17.leanback.widget.SpeechOrbView: int mCurrentLevel>;

        $f5 = (float) $i4;

        $f7 = $f6 * $f5;

        $f8 = $f7 / 100.0F;

        f0 = 1.0F + $f8;

        virtualinvoke r0.<android.support.v17.leanback.widget.SpeechOrbView: void scaleOrbViewOnly(float)>(f0);

        return;
    }

