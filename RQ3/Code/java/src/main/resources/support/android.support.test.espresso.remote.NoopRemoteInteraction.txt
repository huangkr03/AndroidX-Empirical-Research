android.support.test.espresso.remote.NoopRemoteInteraction
    public void <init>()
    {
        android.support.test.espresso.remote.NoopRemoteInteraction r0;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isRemoteProcess()
    {
        android.support.test.espresso.remote.NoopRemoteInteraction r0;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction;

        return 0;
    }

    public java.util.concurrent.Callable createRemoteCheckCallable(org.hamcrest.Matcher, org.hamcrest.Matcher, java.util.Map, android.support.test.espresso.ViewAssertion)
    {
        android.support.test.espresso.remote.NoopRemoteInteraction r0;
        org.hamcrest.Matcher r1, r2;
        java.util.Map r3;
        android.support.test.espresso.ViewAssertion r4;
        android.support.test.espresso.remote.NoopRemoteInteraction$1 $r5;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: android.support.test.espresso.ViewAssertion;

        $r5 = new android.support.test.espresso.remote.NoopRemoteInteraction$1;

        specialinvoke $r5.<android.support.test.espresso.remote.NoopRemoteInteraction$1: void <init>(android.support.test.espresso.remote.NoopRemoteInteraction)>(r0);

        return $r5;
    }

    public transient java.util.concurrent.Callable createRemotePerformCallable(org.hamcrest.Matcher, org.hamcrest.Matcher, java.util.Map, android.support.test.espresso.ViewAction[])
    {
        android.support.test.espresso.remote.NoopRemoteInteraction r0;
        org.hamcrest.Matcher r1, r2;
        java.util.Map r3;
        android.support.test.espresso.ViewAction[] r4;
        android.support.test.espresso.remote.NoopRemoteInteraction$2 $r5;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: android.support.test.espresso.ViewAction[];

        $r5 = new android.support.test.espresso.remote.NoopRemoteInteraction$2;

        specialinvoke $r5.<android.support.test.espresso.remote.NoopRemoteInteraction$2: void <init>(android.support.test.espresso.remote.NoopRemoteInteraction)>(r0);

        return $r5;
    }

android.support.test.espresso.remote.NoopRemoteInteraction$1
    void <init>(android.support.test.espresso.remote.NoopRemoteInteraction)
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$1 r0;
        android.support.test.espresso.remote.NoopRemoteInteraction r1;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$1;

        r1 := @parameter0: android.support.test.espresso.remote.NoopRemoteInteraction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$1 r0;
        android.support.test.espresso.remote.NoRemoteEspressoInstanceException r2;
        java.lang.Throwable r3;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$1;

        r2 = new android.support.test.espresso.remote.NoRemoteEspressoInstanceException;

        specialinvoke r2.<android.support.test.espresso.remote.NoRemoteEspressoInstanceException: void <init>(java.lang.String)>("No remote instances available");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$1 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$1;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.NoopRemoteInteraction$1: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.remote.NoopRemoteInteraction$2
    void <init>(android.support.test.espresso.remote.NoopRemoteInteraction)
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$2 r0;
        android.support.test.espresso.remote.NoopRemoteInteraction r1;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$2;

        r1 := @parameter0: android.support.test.espresso.remote.NoopRemoteInteraction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$2 r0;
        android.support.test.espresso.remote.NoRemoteEspressoInstanceException r2;
        java.lang.Throwable r3;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$2;

        r2 = new android.support.test.espresso.remote.NoRemoteEspressoInstanceException;

        specialinvoke r2.<android.support.test.espresso.remote.NoRemoteEspressoInstanceException: void <init>(java.lang.String)>("No remote instances available");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.remote.NoopRemoteInteraction$2 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.remote.NoopRemoteInteraction$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.remote.NoopRemoteInteraction$2: java.lang.Void call()>();

        return $r1;
    }

