android.support.wear.widget.RoundedDrawable
<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>
<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>
<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>
<android.support.wear.widget.RoundedDrawable: int mRadius>
<android.support.wear.widget.RoundedDrawable: boolean mIsClipEnabled>
<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>
<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF>
    public void <init>()
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Rect $r1;
        android.graphics.RectF $r2;
        android.graphics.Paint $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds> = $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint> = $r5;

        $r6 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r7 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>(0);

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3, $r6;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        $r7 = <android.support.wear.R$styleable: int[] RoundedDrawable>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r6, $r7);

        $i0 = <android.support.wear.R$styleable: int RoundedDrawable_android_src>;

        $z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i6 = <android.support.wear.R$styleable: int RoundedDrawable_android_src>;

        $r8 = virtualinvoke r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i6);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void setDrawable(android.graphics.drawable.Drawable)>($r8);

     label1:
        $i1 = <android.support.wear.R$styleable: int RoundedDrawable_radius>;

        $i2 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void setRadius(int)>($i2);

        $i3 = <android.support.wear.R$styleable: int RoundedDrawable_clipEnabled>;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i3, 0);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void setClipEnabled(boolean)>($z1);

        $i4 = <android.support.wear.R$styleable: int RoundedDrawable_backgroundColor>;

        $i5 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>($i4, 0);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void setBackgroundColor(int)>($i5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setDrawable(android.graphics.drawable.Drawable)
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0;
        android.graphics.Paint $r3;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        $r3 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void invalidateSelf()>();

        return;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public void setBackgroundColor(int)
    {
        android.support.wear.widget.RoundedDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void invalidateSelf()>();

        return;
    }

    public int getBackgroundColor()
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    public void setClipEnabled(boolean)
    {
        android.support.wear.widget.RoundedDrawable r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        z0 := @parameter0: boolean;

        r0.<android.support.wear.widget.RoundedDrawable: boolean mIsClipEnabled> = z0;

        if z0 != 0 goto label1;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

     label1:
        virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: void invalidateSelf()>();

        return;
    }

    public boolean isClipEnabled()
    {
        android.support.wear.widget.RoundedDrawable r0;
        boolean $z0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $z0 = r0.<android.support.wear.widget.RoundedDrawable: boolean mIsClipEnabled>;

        return $z0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Rect r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.RectF $r4, $r5;
        float $f0, $f1;
        android.graphics.Paint $r6;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>;

        $i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $r2.<android.graphics.Rect: int right> = $i0;

        $r3 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>;

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $r3.<android.graphics.Rect: int bottom> = $i1;

        $r4 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF>;

        $i2 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f0 = (float) $i2;

        $r4.<android.graphics.RectF: float right> = $f0;

        $r5 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF>;

        $i3 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f1 = (float) $i3;

        $r5.<android.graphics.RectF: float bottom> = $f1;

        $r6 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2, $r6, $r7, $r10;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.drawable.Drawable $r3, $r8, $r9;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.Paint $r4, $r11, $r13;
        android.graphics.RectF $r5, $r14;
        double $d0, $d1, $d2;
        android.graphics.Shader $r12;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect getBounds()>();

        $r3 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r3 == null goto label1;

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i3 = r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i3;

        $i4 = r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i4;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $r5 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF>;

        $i5 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        $f3 = (float) $i5;

        $i6 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        $f2 = (float) $i6;

        $r4 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f3, $f2, $r4);

        $z1 = r0.<android.support.wear.widget.RoundedDrawable: boolean mIsClipEnabled>;

        if $z1 == 0 goto label4;

        $r11 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        $r12 = virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if $r12 != null goto label3;

        specialinvoke r0.<android.support.wear.widget.RoundedDrawable: void updateBitmapShader()>();

     label3:
        $r14 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.RectF mTmpBoundsF>;

        $i14 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        $f10 = (float) $i14;

        $i15 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        $f9 = (float) $i15;

        $r13 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r14, $f10, $f9, $r13);

        goto label5;

     label4:
        $i7 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i8 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $i10 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        $i9 = i0 / 2;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i9);

        $f4 = (float) $i11;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $f5 = (float) $d0;

        $f6 = 1.0F / $f5;

        $f7 = 1.0F - $f6;

        $f8 = $f4 * $f7;

        $d1 = (double) $f8;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        i1 = (int) $d2;

        $r6 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>;

        virtualinvoke $r6.<android.graphics.Rect: void inset(int,int)>(i1, i1);

        $r8 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        $r7 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r7);

        $r9 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $r10 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect mTmpBounds>;

        $i13 = neg i1;

        $i12 = neg i1;

        virtualinvoke $r10.<android.graphics.Rect: void inset(int,int)>($i13, $i12);

     label5:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public int getOpacity()
    {
        android.support.wear.widget.RoundedDrawable r0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        return -3;
    }

    public void setAlpha(int)
    {
        android.support.wear.widget.RoundedDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        $r2 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public int getAlpha()
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $r1 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setRadius(int)
    {
        android.support.wear.widget.RoundedDrawable r0;
        int i0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        i0 := @parameter0: int;

        r0.<android.support.wear.widget.RoundedDrawable: int mRadius> = i0;

        return;
    }

    public int getRadius()
    {
        android.support.wear.widget.RoundedDrawable r0;
        int $i0;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $i0 = r0.<android.support.wear.widget.RoundedDrawable: int mRadius>;

        return $i0;
    }

    private void updateBitmapShader()
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.Rect r1;
        android.graphics.Bitmap r2;
        android.graphics.BitmapShader r3, $r6;
        android.graphics.drawable.Drawable $r4, $r5;
        boolean $z0;
        int $i0, $i1;
        android.graphics.Shader$TileMode $r7, $r8;
        android.graphics.Paint $r9;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        $r4 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r4 != null goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        r2 = specialinvoke r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable,int,int)>($r5, $i0, $i1);

        $r6 = new android.graphics.BitmapShader;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r6.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r2, $r8, $r7);

        r3 = $r6;

        $r9 = r0.<android.support.wear.widget.RoundedDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r3);

     label2:
        return;
    }

    private android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable, int, int)
    {
        android.support.wear.widget.RoundedDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1;
        android.graphics.Bitmap r2;
        android.graphics.Canvas r3, $r5;
        android.graphics.Bitmap$Config $r4;

        r0 := @this: android.support.wear.widget.RoundedDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r4);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r3 = $r5;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r3);

        return r2;
    }

