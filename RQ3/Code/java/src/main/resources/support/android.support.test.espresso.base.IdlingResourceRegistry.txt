android.support.test.espresso.base.IdlingResourceRegistry
<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String TAG>
<android.support.test.espresso.base.IdlingResourceRegistry: int DYNAMIC_RESOURCE_HAS_IDLED>
<android.support.test.espresso.base.IdlingResourceRegistry: int TIMEOUT_OCCURRED>
<android.support.test.espresso.base.IdlingResourceRegistry: int IDLE_WARNING_REACHED>
<android.support.test.espresso.base.IdlingResourceRegistry: int POSSIBLE_RACE_CONDITION_DETECTED>
<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG>
<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback NO_OP_CALLBACK>
<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>
<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>
<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>
<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher dispatcher>
<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback>
    public void <init>(android.os.Looper)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.os.Looper r1;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r3;
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher $r6, r8;
        java.util.ArrayList r7;
        android.os.Handler r9;
        java.util.List r10;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.List) r7;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates> = r10;

        $r3 = <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback NO_OP_CALLBACK>;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback> = $r3;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper> = r1;

        r8 = new android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        specialinvoke r8.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void <init>(android.support.test.espresso.base.IdlingResourceRegistry,android.support.test.espresso.base.IdlingResourceRegistry$1)>(r0, null);

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher dispatcher> = r8;

        r9 = new android.os.Handler;

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher dispatcher>;

        specialinvoke r9.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>(r1, $r6);

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler> = r9;

        return;
    }

    public void sync(java.lang.Iterable, java.lang.Iterable)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.lang.Iterable r1, r2, r60;
        java.util.HashMap r3, r46;
        android.support.test.espresso.IdlingResource r4, $r13, $r16, $r17, $r20, $r27, $r34, r38;
        android.os.Looper $r5, $r6, r40;
        boolean $z0, $z1, $z2, $z7, $z8;
        java.util.List $r9, r55, r56, r58, r61;
        java.util.Collection $r10;
        java.util.ArrayList $r11, r42, r47;
        java.lang.Object $r12, $r15, $r21, $r26, $r28, $r33;
        java.lang.String $r14, $r18, $r22, $r23, $r25, $r29, $r30, $r32;
        java.util.Iterator r37, r39, r43;
        android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler r41;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r44;
        android.support.test.espresso.base.IdlingResourceRegistry$2 r45;
        java.util.Map r48, r49, r50, r51, r52, r53, r54, r57, r59;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Iterable;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r5 == $r6 goto label01;

        r45 = new android.support.test.espresso.base.IdlingResourceRegistry$2;

        specialinvoke r45.<android.support.test.espresso.base.IdlingResourceRegistry$2: void <init>(android.support.test.espresso.base.IdlingResourceRegistry,java.lang.Iterable,java.lang.Iterable)>(r0, r1, r2);

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object runSynchronouslyOnMainThread(java.util.concurrent.Callable)>(r45);

        goto label14;

     label01:
        r46 = new java.util.HashMap;

        specialinvoke r46.<java.util.HashMap: void <init>()>();

        r3 = r46;

        r37 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r28 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (android.support.test.espresso.IdlingResource) $r28;

        $r29 = interfaceinvoke r38.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r48 = (java.util.Map) r3;

        $z8 = interfaceinvoke r48.<java.util.Map: boolean containsKey(java.lang.Object)>($r29);

        if $z8 == 0 goto label03;

        $r32 = interfaceinvoke r38.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r49 = (java.util.Map) r3;

        $r33 = interfaceinvoke r49.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        $r34 = (android.support.test.espresso.IdlingResource) $r33;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: void logDuplicateRegistrationError(android.support.test.espresso.IdlingResource,android.support.test.espresso.IdlingResource)>(r38, $r34);

        goto label04;

     label03:
        $r30 = interfaceinvoke r38.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r50 = (java.util.Map) r3;

        interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r38);

     label04:
        goto label02;

     label05:
        r39 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (android.os.Looper) $r21;

        r41 = staticinvoke <android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler: android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler forLooper(android.os.Looper)>(r40);

        $r22 = interfaceinvoke r41.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r51 = (java.util.Map) r3;

        $z7 = interfaceinvoke r51.<java.util.Map: boolean containsKey(java.lang.Object)>($r22);

        if $z7 == 0 goto label07;

        $r25 = interfaceinvoke r41.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r52 = (java.util.Map) r3;

        $r26 = interfaceinvoke r52.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        $r27 = (android.support.test.espresso.IdlingResource) $r26;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: void logDuplicateRegistrationError(android.support.test.espresso.IdlingResource,android.support.test.espresso.IdlingResource)>(r41, $r27);

        goto label08;

     label07:
        $r23 = interfaceinvoke r41.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r53 = (java.util.Map) r3;

        interfaceinvoke r53.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r41);

     label08:
        goto label06;

     label09:
        r47 = new java.util.ArrayList;

        specialinvoke r47.<java.util.ArrayList: void <init>()>();

        r42 = r47;

        $r9 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        r43 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r12 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r12;

        $r13 = r44.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $r14 = interfaceinvoke $r13.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r54 = (java.util.Map) r3;

        $r15 = interfaceinvoke r54.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14);

        r4 = (android.support.test.espresso.IdlingResource) $r15;

        if null != r4 goto label11;

        $r20 = r44.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        r55 = (java.util.List) r42;

        interfaceinvoke r55.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label12;

     label11:
        $r16 = r44.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        if $r16 == r4 goto label12;

        $r17 = r44.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        r56 = (java.util.List) r42;

        interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = interfaceinvoke r4.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r57 = (java.util.Map) r3;

        interfaceinvoke r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r4);

     label12:
        goto label10;

     label13:
        r58 = (java.util.List) r42;

        virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: boolean unregisterResources(java.util.List)>(r58);

        r59 = (java.util.Map) r3;

        $r10 = interfaceinvoke r59.<java.util.Map: java.util.Collection values()>();

        r60 = (java.lang.Iterable) $r10;

        $r11 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r60);

        r61 = (java.util.List) $r11;

        virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: boolean registerResources(java.util.List)>(r61);

     label14:
        return;
    }

    public boolean registerResources(java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.List r1, $r10, $r13;
        java.util.Iterator r2, r22;
        android.support.test.espresso.IdlingResource r3, $r16, $r18;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r4, $r11, r23;
        android.os.Looper $r5, $r6;
        boolean $z0, $z1, $z3, $z4, z5, z6;
        java.lang.Object $r7, $r14, $r20;
        java.lang.String $r8, $r15, $r17;
        android.os.Handler $r12;
        android.support.test.espresso.base.IdlingResourceRegistry$3 $r19;
        java.lang.Boolean $r21;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: java.util.List;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r5 == $r6 goto label1;

        $r19 = new android.support.test.espresso.base.IdlingResourceRegistry$3;

        specialinvoke $r19.<android.support.test.espresso.base.IdlingResourceRegistry$3: void <init>(android.support.test.espresso.base.IdlingResourceRegistry,java.util.List)>(r0, r1);

        $r20 = specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object runSynchronouslyOnMainThread(java.util.concurrent.Callable)>($r19);

        $r21 = (java.lang.Boolean) $r20;

        $z4 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        return $z4;

     label1:
        z5 = 1;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.IdlingResource) $r7;

        $r8 = interfaceinvoke r3.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r8, "IdlingResource.getName() should not be null");

        z6 = 0;

        $r10 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        r22 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r14 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r14;

        $r15 = interfaceinvoke r3.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $r16 = r4.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $r17 = interfaceinvoke $r16.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label4;

        $r18 = r4.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: void logDuplicateRegistrationError(android.support.test.espresso.IdlingResource,android.support.test.espresso.IdlingResource)>(r3, $r18);

        z6 = 1;

        goto label5;

     label4:
        goto label3;

     label5:
        if z6 != 0 goto label6;

        $r11 = new android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        $r12 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        specialinvoke $r11.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: void <init>(android.support.test.espresso.IdlingResource,android.os.Handler,android.support.test.espresso.base.IdlingResourceRegistry$1)>(r3, $r12, null);

        r23 = $r11;

        $r13 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r23);

        staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: void access$200(android.support.test.espresso.base.IdlingResourceRegistry$IdlingState)>(r23);

        goto label7;

     label6:
        z5 = 0;

     label7:
        goto label2;

     label8:
        return z5;
    }

    public boolean unregisterResources(java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.List r1, $r7, $r11, $r13, $r19;
        java.util.Iterator r2;
        android.support.test.espresso.IdlingResource r3, $r16;
        android.os.Looper $r4, $r5;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Object $r6, $r14, $r22;
        int $i0, i2;
        java.lang.Object[] $r8;
        java.lang.String $r9, $r10, $r12, $r17, $r18;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState $r15;
        android.support.test.espresso.base.IdlingResourceRegistry$4 $r21;
        java.lang.Boolean $r23;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: java.util.List;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r4 == $r5 goto label1;

        $r21 = new android.support.test.espresso.base.IdlingResourceRegistry$4;

        specialinvoke $r21.<android.support.test.espresso.base.IdlingResourceRegistry$4: void <init>(android.support.test.espresso.base.IdlingResourceRegistry,java.util.List)>(r0, r1);

        $r22 = specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object runSynchronouslyOnMainThread(java.util.concurrent.Callable)>($r21);

        $r23 = (java.lang.Boolean) $r22;

        $z2 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        z3 = 1;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.IdlingResource) $r6;

        z4 = 0;

        i2 = 0;

     label3:
        $r7 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r13 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r14;

        $r16 = $r15.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $r17 = interfaceinvoke $r16.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $r18 = interfaceinvoke r3.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z1 == 0 goto label4;

        $r19 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        interfaceinvoke $r19.<java.util.List: java.lang.Object remove(int)>(i2);

        z4 = 1;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        if z4 != 0 goto label6;

        z3 = 0;

        $r9 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = interfaceinvoke r3.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $r8[0] = $r10;

        $r11 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List getResources()>();

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempted to unregister resource that is not registered: \'%s\'. Resource list: %s", $r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r12);

     label6:
        goto label2;

     label7:
        return z3;
    }

    public void registerLooper(android.os.Looper, boolean)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.os.Looper r1, $r3;
        boolean z0, $z2;
        android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler[] $r4;
        android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler $r5;
        java.util.ArrayList $r6;
        java.util.List r7;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: android.os.Looper;

        z0 := @parameter1: boolean;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r3 == r1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "Not intended for use with main looper!");

        $r4 = newarray (android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler)[1];

        $r5 = staticinvoke <android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler: android.support.test.espresso.base.LooperIdlingResourceInterrogationHandler forLooper(android.os.Looper)>(r1);

        $r4[0] = $r5;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4);

        r7 = (java.util.List) $r6;

        virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: boolean registerResources(java.util.List)>(r7);

        return;
    }

    public java.util.List getResources()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList$Builder r1;
        java.util.Iterator r2;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r3;
        android.os.Looper $r4, $r5;
        java.util.List $r6, $r13;
        boolean $z0;
        android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList $r7;
        java.lang.Object $r8, $r12;
        android.support.test.espresso.IdlingResource $r9;
        android.support.test.espresso.base.IdlingResourceRegistry$5 $r11;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r4 == $r5 goto label1;

        $r11 = new android.support.test.espresso.base.IdlingResourceRegistry$5;

        specialinvoke $r11.<android.support.test.espresso.base.IdlingResourceRegistry$5: void <init>(android.support.test.espresso.base.IdlingResourceRegistry)>(r0);

        $r12 = specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object runSynchronouslyOnMainThread(java.util.concurrent.Callable)>($r11);

        $r13 = (java.util.List) $r12;

        return $r13;

     label1:
        r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList: android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList$Builder builder()>();

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r8;

        $r9 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        virtualinvoke r1.<android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList$Builder: android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList$Builder add(java.lang.Object)>($r9);

        goto label2;

     label3:
        $r7 = virtualinvoke r1.<android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList$Builder: android.support.test.espresso.core.internal.deps.guava.collect.ImmutableList build()>();

        return $r7;
    }

    boolean allResourcesAreIdle()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.Iterator r1;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r2;
        android.os.Looper $r3, $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.support.test.espresso.IdlingResource $r7;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r3 != $r4 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean)>($z3);

        $r5 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r6;

        $z0 = r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>;

        if $z0 == 0 goto label4;

        $r7 = r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $z2 = interfaceinvoke $r7.<android.support.test.espresso.IdlingResource: boolean isIdleNow()>();

        r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle> = $z2;

     label4:
        $z1 = r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>;

        if $z1 != 0 goto label5;

        return 0;

     label5:
        goto label3;

     label6:
        return 1;
    }

    void notifyWhenAllResourcesAreIdle(android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback r1, $r5, $r6;
        android.os.Looper $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Looper looper>;

        if $r3 != $r4 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean)>($z1);

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback>;

        $r5 = <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback NO_OP_CALLBACK>;

        if $r6 != $r5 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Callback has already been registered.");

        $z0 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: boolean allResourcesAreIdle()>();

        if $z0 == 0 goto label5;

        interfaceinvoke r1.<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void allResourcesIdle()>();

        goto label6;

     label5:
        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback> = r1;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: void scheduleTimeoutMessages()>();

     label6:
        return;
    }

    android.support.test.espresso.base.IdleNotifier asIdleNotifier()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.base.IdlingResourceRegistry$6 $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = new android.support.test.espresso.base.IdlingResourceRegistry$6;

        specialinvoke $r1.<android.support.test.espresso.base.IdlingResourceRegistry$6: void <init>(android.support.test.espresso.base.IdlingResourceRegistry)>(r0);

        return $r1;
    }

    void cancelIdleMonitor()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher dispatcher>;

        staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void access$300(android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher)>($r1);

        return;
    }

    private java.lang.Object runSynchronouslyOnMainThread(java.util.concurrent.Callable)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.FutureTask r2, r15;
        android.os.Handler $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6, $r8, $r10, r12, r13, r14, r20, r21, r22;
        java.lang.RuntimeException r16, r17, r18;
        java.lang.Runnable r19;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: java.util.concurrent.Callable;

        r15 = new java.util.concurrent.FutureTask;

        specialinvoke r15.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r1);

        r2 = r15;

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        r19 = (java.lang.Runnable) r2;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r19);

     label1:
        $r5 = virtualinvoke r2.<java.util.concurrent.FutureTask: java.lang.Object get()>();

     label2:
        return $r5;

     label3:
        $r10 := @caughtexception;

        r12 = $r10;

        r16 = new java.lang.RuntimeException;

        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        r20 = (java.lang.Throwable) r16;

        throw r20;

     label4:
        $r6 := @caughtexception;

        r13 = $r6;

        r17 = new java.lang.RuntimeException;

        specialinvoke r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        r21 = (java.lang.Throwable) r17;

        throw r21;

     label5:
        $r8 := @caughtexception;

        r14 = $r8;

        r18 = new java.lang.RuntimeException;

        specialinvoke r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r14);

        r22 = (java.lang.Throwable) r18;

        throw r22;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label5;
    }

    private void scheduleTimeoutMessages()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.IdlingPolicy r1, r4;
        android.os.Message r2, r3;
        java.lang.Object $r5, $r9;
        android.os.Handler $r6, $r7, $r10, $r11;
        java.util.concurrent.TimeUnit $r8, $r12;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()>();

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        $r5 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG>;

        r2 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r5);

        $r7 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        $r8 = virtualinvoke r1.<android.support.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l0 = virtualinvoke r1.<android.support.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $l1 = virtualinvoke $r8.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, $l1);

        $r10 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        $r9 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG>;

        r3 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r9);

        r4 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()>();

        $r11 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        $r12 = virtualinvoke r4.<android.support.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l2 = virtualinvoke r4.<android.support.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $l3 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toMillis(long)>($l2);

        virtualinvoke $r11.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r3, $l3);

        return;
    }

    private java.util.List getBusyResources()
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.ArrayList r1, r2;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r3;
        java.util.List $r4, r14, r15, r16, r17;
        boolean $z0, $z1, $z3, $z4;
        java.lang.Object $r5, $r8;
        android.os.Handler $r6, $r7;
        android.support.test.espresso.IdlingResource $r9, $r10;
        java.lang.String $r11;
        java.util.Iterator r12;
        android.os.Message r13;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        r12 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r8;

        $z3 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>;

        if $z3 != 0 goto label3;

        $r9 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $z4 = interfaceinvoke $r9.<android.support.test.espresso.IdlingResource: boolean isIdleNow()>();

        if $z4 == 0 goto label2;

        r14 = (java.util.List) r2;

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label3;

     label2:
        $r10 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $r11 = interfaceinvoke $r10.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        r15 = (java.util.List) r1;

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        goto label1;

     label4:
        r16 = (java.util.List) r2;

        $z1 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        $r5 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG>;

        r13 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r5);

        r13.<android.os.Message: java.lang.Object obj> = r2;

        $r7 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r13);

        return null;

     label5:
        r17 = (java.util.List) r1;

        return r17;
    }

    private void logDuplicateRegistrationError(android.support.test.espresso.IdlingResource, android.support.test.espresso.IdlingResource)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.IdlingResource r1, r2;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter0: android.support.test.espresso.IdlingResource;

        r2 := @parameter1: android.support.test.espresso.IdlingResource;

        $r4 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[3];

        $r5 = interfaceinvoke r1.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $r3[0] = $r5;

        $r3[1] = r1;

        $r3[2] = r2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempted to register resource with same names: %s. R1: %s R2: %s.\nDuplicate resource registration will be ignored.", $r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r6);

        return;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String TAG>;

        return $r0;
    }

    static java.util.List access$500(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.List $r1;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List idlingStates>;

        return $r1;
    }

    static android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$600(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r1;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback>;

        return $r1;
    }

    static java.util.List access$700(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        java.util.List $r1;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List getBusyResources()>();

        return $r1;
    }

    static java.lang.Object access$800()
    {
        java.lang.Object $r0;

        $r0 = <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG>;

        return $r0;
    }

    static android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler handler>;

        return $r1;
    }

    static android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$602(android.support.test.espresso.base.IdlingResourceRegistry, android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)
    {
        android.support.test.espresso.base.IdlingResourceRegistry r0;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback r1;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r1 := @parameter1: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback idleNotificationCallback> = r1;

        return r1;
    }

    static android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$1000()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r0;

        $r0 = <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback NO_OP_CALLBACK>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        android.support.test.espresso.base.IdlingResourceRegistry$1 $r3;

        $r0 = class "Landroid/support/test/espresso/base/IdlingResourceRegistry;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object TIMEOUT_MESSAGE_TAG> = $r2;

        $r3 = new android.support.test.espresso.base.IdlingResourceRegistry$1;

        specialinvoke $r3.<android.support.test.espresso.base.IdlingResourceRegistry$1: void <init>()>();

        <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback NO_OP_CALLBACK> = $r3;

        return;
    }

android.support.test.espresso.base.IdlingResourceRegistry$1
    void <init>()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$1 r0;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void allResourcesIdle()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$1 r0;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$1;

        return;
    }

    public void resourcesStillBusyWarning(java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$1 r0;
        java.util.List r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$1;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void resourcesHaveTimedOut(java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$1 r0;
        java.util.List r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$1;

        r1 := @parameter0: java.util.List;

        return;
    }

android.support.test.espresso.base.IdlingResourceRegistry$2
<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$resources>
<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$loopers>
<android.support.test.espresso.base.IdlingResourceRegistry$2: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    void <init>(android.support.test.espresso.base.IdlingResourceRegistry, java.lang.Iterable, java.lang.Iterable)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$2 r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;
        java.lang.Iterable r2, r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$2;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: java.lang.Iterable;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$resources> = r2;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$loopers> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$2 r0;
        java.lang.Iterable $r1, $r2;
        android.support.test.espresso.base.IdlingResourceRegistry $r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$2;

        $r3 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$resources>;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Iterable val$loopers>;

        virtualinvoke $r3.<android.support.test.espresso.base.IdlingResourceRegistry: void sync(java.lang.Iterable,java.lang.Iterable)>($r2, $r1);

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.IdlingResourceRegistry$2 r0;
        java.lang.Void $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$2;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$2: java.lang.Void call()>();

        return $r1;
    }

android.support.test.espresso.base.IdlingResourceRegistry$3
<android.support.test.espresso.base.IdlingResourceRegistry$3: java.util.List val$resourceList>
<android.support.test.espresso.base.IdlingResourceRegistry$3: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    void <init>(android.support.test.espresso.base.IdlingResourceRegistry, java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$3 r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;
        java.util.List r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$3;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r2 := @parameter1: java.util.List;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$3: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$3: java.util.List val$resourceList> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Boolean call()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$3 r0;
        java.util.List $r1;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$3;

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$3: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$3: java.util.List val$resourceList>;

        $z0 = virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: boolean registerResources(java.util.List)>($r1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.IdlingResourceRegistry$3 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$3;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$3: java.lang.Boolean call()>();

        return $r1;
    }

android.support.test.espresso.base.IdlingResourceRegistry$4
<android.support.test.espresso.base.IdlingResourceRegistry$4: java.util.List val$resourceList>
<android.support.test.espresso.base.IdlingResourceRegistry$4: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    void <init>(android.support.test.espresso.base.IdlingResourceRegistry, java.util.List)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$4 r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;
        java.util.List r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$4;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r2 := @parameter1: java.util.List;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$4: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$4: java.util.List val$resourceList> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Boolean call()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$4 r0;
        java.util.List $r1;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$4;

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$4: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$4: java.util.List val$resourceList>;

        $z0 = virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: boolean unregisterResources(java.util.List)>($r1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.IdlingResourceRegistry$4 r0;
        java.lang.Boolean $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$4;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$4: java.lang.Boolean call()>();

        return $r1;
    }

android.support.test.espresso.base.IdlingResourceRegistry$5
<android.support.test.espresso.base.IdlingResourceRegistry$5: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    void <init>(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$5 r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$5;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$5: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$5 r0;
        android.support.test.espresso.base.IdlingResourceRegistry $r1;
        java.util.List $r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$5;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$5: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r2 = virtualinvoke $r1.<android.support.test.espresso.base.IdlingResourceRegistry: java.util.List getResources()>();

        return $r2;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        android.support.test.espresso.base.IdlingResourceRegistry$5 r0;
        java.util.List $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$5;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$5: java.util.List call()>();

        return $r1;
    }

android.support.test.espresso.base.IdlingResourceRegistry$6
<android.support.test.espresso.base.IdlingResourceRegistry$6: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    void <init>(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$6 r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$6;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$6: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isIdleNow()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$6 r0;
        android.support.test.espresso.base.IdlingResourceRegistry $r1;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$6;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$6: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $z0 = virtualinvoke $r1.<android.support.test.espresso.base.IdlingResourceRegistry: boolean allResourcesAreIdle()>();

        return $z0;
    }

    public void cancelCallback()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$6 r0;
        android.support.test.espresso.base.IdlingResourceRegistry $r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$6;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$6: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        virtualinvoke $r1.<android.support.test.espresso.base.IdlingResourceRegistry: void cancelIdleMonitor()>();

        return;
    }

    public void registerNotificationCallback(android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$6 r0;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback r1;
        android.support.test.espresso.base.IdlingResourceRegistry $r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$6;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback;

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$6: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        virtualinvoke $r2.<android.support.test.espresso.base.IdlingResourceRegistry: void notifyWhenAllResourcesAreIdle(android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)>(r1);

        return;
    }

    public volatile void registerNotificationCallback(java.lang.Object)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$6 r0;
        java.lang.Object r1;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback) r1;

        virtualinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$6: void registerNotificationCallback(android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)>($r2);

        return;
    }

android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher
<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>
    private void <init>(android.support.test.espresso.base.IdlingResourceRegistry)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.os.Message r1;
        java.lang.String r2, $r3, $r4, $r8;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void handleResourceIdled(android.os.Message)>(r1);

        goto label6;

     label2:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void handleTimeoutWarning()>();

        goto label6;

     label3:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void handleTimeout()>();

        goto label6;

     label4:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void handleRaceCondition(android.os.Message)>(r1);

        goto label6;

     label5:
        $r3 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String access$400()>();

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = 22 + $i1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r8);

        return 0;

     label6:
        return 1;
    }

    private void handleResourceIdled(android.os.Message)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.os.Message r1;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r2, r3;
        java.lang.Throwable r4, $r18;
        java.lang.Object $r5, $r17;
        android.support.test.espresso.base.IdlingResourceRegistry $r6, $r8;
        java.util.List $r7;
        boolean $z0, $z1, z2, z3, $z4;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r9;
        java.lang.String $r10, $r12, $r16, r20;
        android.support.test.espresso.IdlingResource $r11;
        int $i0, $i1;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.util.Iterator r19;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        r1 := @parameter0: android.os.Message;

        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r5;

        r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle> = 1;

        z2 = 1;

        z3 = 1;

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r7 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.util.List access$500(android.support.test.espresso.base.IdlingResourceRegistry)>($r6);

        r19 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r17 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r17;

        if z3 == 0 goto label02;

        $z1 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>;

        if $z1 == 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z3 = $z4;

        if z2 != 0 goto label04;

        if z3 != 0 goto label04;

        goto label06;

     label04:
        if z2 == 0 goto label05;

        if r3 != r2 goto label05;

        z2 = 0;

     label05:
        goto label01;

     label06:
        if z2 == 0 goto label07;

        $r10 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.String access$400()>();

        $r11 = r2.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r20);

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i1 = 45 + $i0;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring message from unregistered resource: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r10, $r16);

        return;

     label07:
        if z3 == 0 goto label12;

     label08:
        $r8 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r9 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$600(android.support.test.espresso.base.IdlingResourceRegistry)>($r8);

        interfaceinvoke $r9.<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void allResourcesIdle()>();

     label09:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void deregister()>();

        goto label12;

     label10:
        $r18 := @caughtexception;

        r4 = $r18;

     label11:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void deregister()>();

        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void handleTimeoutWarning()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        java.util.List r1;
        android.support.test.espresso.IdlingPolicy r2;
        android.support.test.espresso.base.IdlingResourceRegistry $r3, $r4, $r6, $r8, $r13, $r15;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r5;
        android.os.Handler $r7, $r9, $r14, $r16;
        java.lang.Object $r10, $r17;
        android.os.Message $r11, $r18;
        java.util.concurrent.TimeUnit $r12;
        long $l0, $l1;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        $r3 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        r1 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.util.List access$700(android.support.test.espresso.base.IdlingResourceRegistry)>($r3);

        if r1 != null goto label1;

        $r13 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r14 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r13);

        $r15 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r16 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r15);

        $r17 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object access$800()>();

        $r18 = virtualinvoke $r16.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r17);

        virtualinvoke $r14.<android.os.Handler: boolean sendMessage(android.os.Message)>($r18);

        goto label2;

     label1:
        r2 = staticinvoke <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()>();

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r5 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$600(android.support.test.espresso.base.IdlingResourceRegistry)>($r4);

        interfaceinvoke $r5.<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void resourcesStillBusyWarning(java.util.List)>(r1);

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r7 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r6);

        $r8 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r9 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r8);

        $r10 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object access$800()>();

        $r11 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r10);

        $r12 = virtualinvoke r2.<android.support.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l0 = virtualinvoke r2.<android.support.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $l1 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r11, $l1);

     label2:
        return;
    }

    private void handleTimeout()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        java.util.List r1;
        java.lang.Throwable r2, $r12;
        android.support.test.espresso.base.IdlingResourceRegistry $r3, $r4, $r6, $r8;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r5;
        android.os.Handler $r7, $r9;
        java.lang.Object $r10;
        android.os.Message $r11;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        $r3 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        r1 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.util.List access$700(android.support.test.espresso.base.IdlingResourceRegistry)>($r3);

        if r1 != null goto label1;

        $r6 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r7 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r6);

        $r8 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r9 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r8);

        $r10 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object access$800()>();

        $r11 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r10);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r11);

        goto label4;

     label1:
        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r5 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$600(android.support.test.espresso.base.IdlingResourceRegistry)>($r4);

        interfaceinvoke $r5.<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void resourcesHaveTimedOut(java.util.List)>(r1);

     label2:
        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void deregister()>();

        goto label4;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void deregister()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void handleRaceCondition(android.os.Message)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.os.Message r1;
        java.util.Iterator r2;
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r3;
        java.lang.Object $r4, $r6;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r7;
        java.lang.Object[] $r8;
        android.support.test.espresso.IdlingResource $r9;
        java.lang.String $r10, $r11;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        $r5 = (java.util.List) $r4;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.espresso.base.IdlingResourceRegistry$IdlingState) $r6;

        $z1 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r7 = new java.lang.IllegalStateException;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = r3.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $r10 = interfaceinvoke $r9.<android.support.test.espresso.IdlingResource: java.lang.String getName()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Resource %s isIdleNow() is returning true, but a message indicating that the resource has transitioned from busy to idle was never sent.", $r8);

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label3:
        goto label1;

     label4:
        return;
    }

    private void deregister()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.support.test.espresso.base.IdlingResourceRegistry $r1, $r4;
        android.os.Handler $r2;
        java.lang.Object $r3;
        android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback $r5;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r2 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.os.Handler access$900(android.support.test.espresso.base.IdlingResourceRegistry)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: java.lang.Object access$800()>();

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r3);

        $r4 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: android.support.test.espresso.base.IdlingResourceRegistry this$0>;

        $r5 = staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$1000()>();

        staticinvoke <android.support.test.espresso.base.IdlingResourceRegistry: android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback access$602(android.support.test.espresso.base.IdlingResourceRegistry,android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback)>($r4, $r5);

        return;
    }

    void <init>(android.support.test.espresso.base.IdlingResourceRegistry, android.support.test.espresso.base.IdlingResourceRegistry$1)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;
        android.support.test.espresso.base.IdlingResourceRegistry r1;
        android.support.test.espresso.base.IdlingResourceRegistry$1 r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        r1 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry;

        r2 := @parameter1: android.support.test.espresso.base.IdlingResourceRegistry$1;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void <init>(android.support.test.espresso.base.IdlingResourceRegistry)>(r1);

        return;
    }

    static void access$300(android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher r0;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$Dispatcher: void deregister()>();

        return;
    }

android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback
<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void allResourcesIdle()>
<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void resourcesStillBusyWarning(java.util.List)>
<android.support.test.espresso.base.IdlingResourceRegistry$IdleNotificationCallback: void resourcesHaveTimedOut(java.util.List)>
android.support.test.espresso.base.IdlingResourceRegistry$IdlingState
<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>
<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.os.Handler handler>
<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle>
    private void <init>(android.support.test.espresso.IdlingResource, android.os.Handler)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r0;
        android.support.test.espresso.IdlingResource r1;
        android.os.Handler r2;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        r1 := @parameter0: android.support.test.espresso.IdlingResource;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource> = r1;

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.os.Handler handler> = r2;

        return;
    }

    private void registerSelf()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r0;
        android.support.test.espresso.IdlingResource $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        $r1 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        interfaceinvoke $r1.<android.support.test.espresso.IdlingResource: void registerIdleTransitionCallback(android.support.test.espresso.IdlingResource$ResourceCallback)>(r0);

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.support.test.espresso.IdlingResource resource>;

        $z0 = interfaceinvoke $r2.<android.support.test.espresso.IdlingResource: boolean isIdleNow()>();

        r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: boolean idle> = $z0;

        return;
    }

    public void onTransitionToIdle()
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        $r2 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.os.Handler handler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        r1.<android.os.Message: java.lang.Object obj> = r0;

        $r3 = r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: android.os.Handler handler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void <init>(android.support.test.espresso.IdlingResource, android.os.Handler, android.support.test.espresso.base.IdlingResourceRegistry$1)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r0;
        android.support.test.espresso.IdlingResource r1;
        android.os.Handler r2;
        android.support.test.espresso.base.IdlingResourceRegistry$1 r3;

        r0 := @this: android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        r1 := @parameter0: android.support.test.espresso.IdlingResource;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.support.test.espresso.base.IdlingResourceRegistry$1;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: void <init>(android.support.test.espresso.IdlingResource,android.os.Handler)>(r1, r2);

        return;
    }

    static void access$200(android.support.test.espresso.base.IdlingResourceRegistry$IdlingState)
    {
        android.support.test.espresso.base.IdlingResourceRegistry$IdlingState r0;

        r0 := @parameter0: android.support.test.espresso.base.IdlingResourceRegistry$IdlingState;

        specialinvoke r0.<android.support.test.espresso.base.IdlingResourceRegistry$IdlingState: void registerSelf()>();

        return;
    }

