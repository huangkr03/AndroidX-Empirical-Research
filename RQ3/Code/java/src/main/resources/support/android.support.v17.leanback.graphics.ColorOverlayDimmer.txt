android.support.v17.leanback.graphics.ColorOverlayDimmer
<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mActiveLevel>
<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mDimmedLevel>
<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>
<android.support.v17.leanback.graphics.ColorOverlayDimmer: int mAlpha>
<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mAlphaFloat>
    public static android.support.v17.leanback.graphics.ColorOverlayDimmer createDefault(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, $f2, $f3;
        int[] $r2;
        android.content.res.Resources $r3, $r4, $r5;
        android.support.v17.leanback.graphics.ColorOverlayDimmer $r6;

        r0 := @parameter0: android.content.Context;

        $r2 = <android.support.v17.leanback.R$styleable: int[] LeanbackTheme>;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $i1 = <android.support.v17.leanback.R$styleable: int LeanbackTheme_overlayDimMaskColor>;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <android.support.v17.leanback.R$color: int lb_view_dim_mask_color>;

        $i3 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>($i2);

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>($i1, $i3);

        $i4 = <android.support.v17.leanback.R$styleable: int LeanbackTheme_overlayDimActiveLevel>;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i5 = <android.support.v17.leanback.R$fraction: int lb_view_active_level>;

        $f2 = virtualinvoke $r4.<android.content.res.Resources: float getFraction(int,int,int)>($i5, 1, 0);

        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getFraction(int,int,int,float)>($i4, 1, 1, $f2);

        $i6 = <android.support.v17.leanback.R$styleable: int LeanbackTheme_overlayDimDimmedLevel>;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i7 = <android.support.v17.leanback.R$fraction: int lb_view_dimmed_level>;

        $f3 = virtualinvoke $r5.<android.content.res.Resources: float getFraction(int,int,int)>($i7, 1, 1);

        f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFraction(int,int,int,float)>($i6, 1, 1, $f3);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        $r6 = new android.support.v17.leanback.graphics.ColorOverlayDimmer;

        specialinvoke $r6.<android.support.v17.leanback.graphics.ColorOverlayDimmer: void <init>(int,float,float)>(i0, f0, f1);

        return $r6;
    }

    public static android.support.v17.leanback.graphics.ColorOverlayDimmer createColorOverlayDimmer(int, float, float)
    {
        int i0;
        float f0, f1;
        android.support.v17.leanback.graphics.ColorOverlayDimmer $r0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r0 = new android.support.v17.leanback.graphics.ColorOverlayDimmer;

        specialinvoke $r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: void <init>(int,float,float)>(i0, f0, f1);

        return $r0;
    }

    private void <init>(int, float, float)
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        byte $b0, $b1, $b2, $b3;
        android.graphics.Paint $r1, $r2;
        int $i4, $i5, $i6, i7, i8;
        float f0, f1;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        i7 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = f0 cmpl 1.0F;

        if $b0 <= 0 goto label1;

        f0 = 1.0F;

     label1:
        $b1 = f0 cmpg 0.0F;

        if $b1 >= 0 goto label2;

        f0 = 0.0F;

     label2:
        $b2 = f1 cmpl 1.0F;

        if $b2 <= 0 goto label3;

        f1 = 1.0F;

     label3:
        $b3 = f1 cmpg 0.0F;

        if $b3 >= 0 goto label4;

        f1 = 0.0F;

     label4:
        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint> = $r1;

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i7);

        $i5 = staticinvoke <android.graphics.Color: int green(int)>(i7);

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>(i7);

        i8 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i4, $i5, $i6);

        $r2 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i8);

        r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mActiveLevel> = f0;

        r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mDimmedLevel> = f1;

        virtualinvoke r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: void setActiveLevel(float)>(1.0F);

        return;
    }

    public void setActiveLevel(float)
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int $i0, $i1;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        f0 := @parameter0: float;

        $f5 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mDimmedLevel>;

        $f2 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mActiveLevel>;

        $f1 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mDimmedLevel>;

        $f3 = $f2 - $f1;

        $f4 = f0 * $f3;

        $f6 = $f5 + $f4;

        r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mAlphaFloat> = $f6;

        $f7 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mAlphaFloat>;

        $f8 = 255.0F * $f7;

        $i0 = (int) $f8;

        r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: int mAlpha> = $i0;

        $r1 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>;

        $i1 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i1);

        return;
    }

    public boolean needsDraw()
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        $i0 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: int mAlpha>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getAlpha()
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        $i0 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: int mAlpha>;

        return $i0;
    }

    public float getAlphaFloat()
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        float $f0;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        $f0 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mAlphaFloat>;

        return $f0;
    }

    public android.graphics.Paint getPaint()
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        $r1 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>;

        return $r1;
    }

    public int applyToColor(int)
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        i0 := @parameter0: int;

        $f1 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: float mAlphaFloat>;

        f0 = 1.0F - $f1;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $f2 = (float) $i2;

        $f3 = $f2 * f0;

        $i3 = (int) $f3;

        $i4 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $f4 = (float) $i4;

        $f5 = $f4 * f0;

        $i5 = (int) $f5;

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $f6 = (float) $i6;

        $f7 = $f6 * f0;

        $i7 = (int) $f7;

        $i8 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i1, $i3, $i5, $i7);

        return $i8;
    }

    public void drawColorOverlay(android.graphics.Canvas, android.view.View, boolean)
    {
        android.support.v17.leanback.graphics.ColorOverlayDimmer r0;
        android.graphics.Canvas r1;
        android.view.View r2;
        boolean z0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Matrix $r3;
        android.graphics.Paint $r4, $r5;

        r0 := @this: android.support.v17.leanback.graphics.ColorOverlayDimmer;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $f2 = (float) $i1;

        $f3 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f0 = $f2 + $f3;

        $i2 = virtualinvoke r2.<android.view.View: int getTop()>();

        $f4 = (float) $i2;

        $f5 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        f1 = $f4 + $f5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(f0, f1);

        $r3 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r3);

        $f7 = neg f0;

        $f6 = neg f1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f7, $f6);

        if z0 == 0 goto label1;

        $i15 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $f12 = (float) $i15;

        $i16 = virtualinvoke r2.<android.view.View: int getTop()>();

        $f13 = (float) $i16;

        $i17 = virtualinvoke r2.<android.view.View: int getRight()>();

        $f14 = (float) $i17;

        $i18 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $f15 = (float) $i18;

        $r5 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f12, $f13, $f14, $f15, $r5);

        goto label2;

     label1:
        $i3 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r2.<android.view.View: int getPaddingLeft()>();

        $i5 = $i3 + $i4;

        $f8 = (float) $i5;

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i7 = virtualinvoke r2.<android.view.View: int getPaddingTop()>();

        $i8 = $i6 + $i7;

        $f9 = (float) $i8;

        $i9 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i10 = virtualinvoke r2.<android.view.View: int getPaddingRight()>();

        $i11 = $i9 - $i10;

        $f10 = (float) $i11;

        $i12 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $i13 = virtualinvoke r2.<android.view.View: int getPaddingBottom()>();

        $i14 = $i12 - $i13;

        $f11 = (float) $i14;

        $r4 = r0.<android.support.v17.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f8, $f9, $f10, $f11, $r4);

     label2:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

