android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory
<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory messageInfoFactory>
<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory EMPTY_FACTORY>
    public void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory getDefaultMessageInfoFactory()>();

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory)>($r1);

        return;
    }

    private void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "messageInfoFactory");

        $r3 = (android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory) $r2;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory messageInfoFactory> = $r3;

        return;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.Schema createSchema(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory r0;
        java.lang.Class r1, $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo r2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory $r3;
        boolean $z0, $z1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema $r4;
        android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema $r6, $r10;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r7, $r11;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite $r8, $r12;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageSetSchema $r9, $r13;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: void requireGeneratedMessage(java.lang.Class)>(r1);

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory messageInfoFactory>;

        r2 = interfaceinvoke $r3.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo messageInfoFor(java.lang.Class)>(r1);

        $z0 = interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo: boolean isMessageSetWireFormat()>();

        if $z0 == 0 goto label2;

        $r5 = class "Landroid/support/test/espresso/remote/internal/deps/protobuf/GeneratedMessageLite;";

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 == 0 goto label1;

        $r10 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema unknownFieldSetLiteSchema()>();

        $r11 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema lite()>();

        $r12 = interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite getDefaultInstance()>();

        $r13 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSetSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSetSchema newSchema(android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>($r10, $r11, $r12);

        return $r13;

     label1:
        $r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema proto2UnknownFieldSetSchema()>();

        $r7 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema full()>();

        $r8 = interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite getDefaultInstance()>();

        $r9 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSetSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSetSchema newSchema(android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>($r6, $r7, $r8);

        return $r9;

     label2:
        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.Schema newSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo)>(r1, r2);

        return $r4;
    }

    private static android.support.test.espresso.remote.internal.deps.protobuf.Schema newSchema(java.lang.Class, android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo)
    {
        java.lang.Class r0, $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo r1;
        boolean $z0, $z1, $z2;
        android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema $r3, $r7, $r12, $r16;
        android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema $r4, $r8, $r13, $r17;
        android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema $r5, $r9, $r14, $r18;
        android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema $r6, $r11, $r15, $r20;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r10, $r19;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema $r21, $r22;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo;

        $r2 = class "Landroid/support/test/espresso/remote/internal/deps/protobuf/GeneratedMessageLite;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label3;

        $z2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: boolean isProto2(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo)>(r1);

        if $z2 == 0 goto label1;

        $r16 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchemas: android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema lite()>();

        $r17 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema: android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema lite()>();

        $r18 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema unknownFieldSetLiteSchema()>();

        $r19 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema lite()>();

        $r20 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchemas: android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema lite()>();

        $r21 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema newSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo,android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema,android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema)>(r0, r1, $r16, $r17, $r18, $r19, $r20);

        goto label2;

     label1:
        $r12 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchemas: android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema lite()>();

        $r13 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema: android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema lite()>();

        $r14 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema unknownFieldSetLiteSchema()>();

        $r15 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchemas: android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema lite()>();

        $r21 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema newSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo,android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema,android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema)>(r0, r1, $r12, $r13, $r14, null, $r15);

     label2:
        return $r21;

     label3:
        $z1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: boolean isProto2(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo)>(r1);

        if $z1 == 0 goto label4;

        $r7 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchemas: android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema full()>();

        $r8 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema: android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema full()>();

        $r9 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema proto2UnknownFieldSetSchema()>();

        $r10 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema full()>();

        $r11 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchemas: android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema full()>();

        $r22 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema newSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo,android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema,android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema)>(r0, r1, $r7, $r8, $r9, $r10, $r11);

        goto label5;

     label4:
        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchemas: android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema full()>();

        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema: android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema full()>();

        $r5 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.SchemaUtil: android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema proto3UnknownFieldSetSchema()>();

        $r6 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchemas: android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema full()>();

        $r22 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema: android.support.test.espresso.remote.internal.deps.protobuf.MessageSchema newSchema(java.lang.Class,android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo,android.support.test.espresso.remote.internal.deps.protobuf.NewInstanceSchema,android.support.test.espresso.remote.internal.deps.protobuf.ListFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.UnknownFieldSchema,android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema,android.support.test.espresso.remote.internal.deps.protobuf.MapFieldSchema)>(r0, r1, $r3, $r4, $r5, null, $r6);

     label5:
        return $r22;
    }

    private static boolean isProto2(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ProtoSyntax $r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo;

        $r1 = interfaceinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo: android.support.test.espresso.remote.internal.deps.protobuf.ProtoSyntax getSyntax()>();

        $r2 = <android.support.test.espresso.remote.internal.deps.protobuf.ProtoSyntax: android.support.test.espresso.remote.internal.deps.protobuf.ProtoSyntax PROTO2>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory getDefaultMessageInfoFactory()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory $r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] $r1;
        android.support.test.espresso.remote.internal.deps.protobuf.GeneratedMessageInfoFactory $r2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory $r3;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory;

        $r1 = newarray (android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory)[2];

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.GeneratedMessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.GeneratedMessageInfoFactory getInstance()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory getDescriptorMessageInfoFactory()>();

        $r1[1] = $r3;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[])>($r1);

        return $r0;
    }

    private static android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory getDescriptorMessageInfoFactory()
    {
        java.lang.Class[] $r0;
        java.lang.reflect.Method $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory $r4, $r6;
        java.lang.Throwable $r5, r8;
        java.lang.Class r7;

     label1:
        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.support.test.espresso.remote.internal.deps.protobuf.DescriptorMessageInfoFactory");

        $r0 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getInstance", $r0);

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

        $r4 = (android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory EMPTY_FACTORY>;

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1 $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1: void <init>()>();

        <android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory EMPTY_FACTORY> = $r0;

        return;
    }

android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1
    void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1 r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isSupported(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1 r0;
        java.lang.Class r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1;

        r1 := @parameter0: java.lang.Class;

        return 0;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo messageInfoFor(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1 r0;
        java.lang.Class r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$1;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This should never be called.");

        throw $r2;
    }

android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory
<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] factories>
    transient void <init>(android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[])
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] factories> = r1;

        return;
    }

    public boolean isSupported(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory r0;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] r2;
        int i0, i1;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory;

        r1 := @parameter0: java.lang.Class;

        r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] factories>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory: boolean isSupported(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo messageInfoFor(java.lang.Class)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory r0;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] r2;
        int i0, $i1, i2;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.String $r5, $r6, $r7, $r9;
        boolean $z0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo $r8;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory;

        r1 := @parameter0: java.lang.Class;

        r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory[] factories>;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = r2[i2];

        $z0 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory: boolean isSupported(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<android.support.test.espresso.remote.internal.deps.protobuf.MessageInfoFactory: android.support.test.espresso.remote.internal.deps.protobuf.MessageInfo messageInfoFor(java.lang.Class)>(r1);

        return $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = "No factory is available for message type: ";

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        $r9 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>($r7);

        goto label5;

     label4:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(java.lang.String)>("No factory is available for message type: ");

     label5:
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

