android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: long serialVersionUID>
<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite unfinishedMessage>
    public void <init>(java.lang.String)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>(r1);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite unfinishedMessage> = null;

        return;
    }

    public void <init>(java.io.IOException)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException r0;
        java.io.IOException r1;
        java.lang.String $r2;
        java.lang.Throwable r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        r1 := @parameter0: java.io.IOException;

        $r2 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        r3 = (java.lang.Throwable) r1;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r2, r3);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite unfinishedMessage> = null;

        return;
    }

    public android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException setUnfinishedMessage(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite unfinishedMessage> = r1;

        return r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either that the input has been truncated or that an embedded message misreported its own length.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("CodedInputStream encountered an embedded string or message which claimed to have negative size.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("CodedInputStream encountered a malformed varint.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidTag()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Protocol message contained an invalid tag (zero).");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidEndTag()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Protocol message end-group tag did not match expected tag.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: void <init>(java.lang.String)>("Protocol message tag had invalid wire type.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException recursionLimitExceeded()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Protocol message had too many levels of nesting.  May be malicious.  Use CodedInputStream.setRecursionLimit() to increase the depth limit.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException sizeLimitExceeded()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Protocol message was too large.  May be malicious.  Use CodedInputStream.setSizeLimit() to increase the size limit.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Failed to parse the message.");

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidUtf8()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r0;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Protocol message had invalid UTF-8.");

        return $r0;
    }

android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException
<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: long serialVersionUID>
    public void <init>(java.lang.String)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>(r1);

        return;
    }

