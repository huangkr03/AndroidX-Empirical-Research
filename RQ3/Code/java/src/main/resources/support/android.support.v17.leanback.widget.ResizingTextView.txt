android.support.v17.leanback.widget.ResizingTextView
<android.support.v17.leanback.widget.ResizingTextView: int TRIGGER_MAX_LINES>
<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions>
<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>
<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing>
<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop>
<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom>
<android.support.v17.leanback.widget.ResizingTextView: boolean mIsResized>
<android.support.v17.leanback.widget.ResizingTextView: boolean mDefaultsInitialized>
<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize>
<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra>
<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop>
<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom>
    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.res.TypedArray r3;
        java.lang.Throwable r4, $r6;
        int[] $r5;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mIsResized> = 0;

        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mDefaultsInitialized> = 0;

        $r5 = <android.support.v17.leanback.R$styleable: int[] lbResizingTextView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i0, i1);

     label1:
        $i2 = <android.support.v17.leanback.R$styleable: int lbResizingTextView_resizeTrigger>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i2, 1);

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions> = $i3;

        $i4 = <android.support.v17.leanback.R$styleable: int lbResizingTextView_resizedTextSize>;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i4, -1);

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize> = $i5;

        $i6 = <android.support.v17.leanback.R$styleable: int lbResizingTextView_maintainLineSpacing>;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i6, 0);

        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing> = $z0;

        $i7 = <android.support.v17.leanback.R$styleable: int lbResizingTextView_resizedPaddingAdjustmentTop>;

        $i8 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i7, 0);

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop> = $i8;

        $i9 = <android.support.v17.leanback.R$styleable: int lbResizingTextView_resizedPaddingAdjustmentBottom>;

        $i10 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i9, 0);

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom> = $i10;

     label2:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842884);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        android.content.Context r1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public int getTriggerConditions()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $i0 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions>;

        return $i0;
    }

    public void setTriggerConditions(int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions>;

        if $i1 == i0 goto label1;

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions> = i0;

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void requestLayout()>();

     label1:
        return;
    }

    public int getResizedTextSize()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $i0 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        return $i0;
    }

    public void setResizedTextSize(int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        if $i1 == i0 goto label1;

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize> = i0;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void resizeParamsChanged()>();

     label1:
        return;
    }

    public boolean getMaintainLineSpacing()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $z0 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing>;

        return $z0;
    }

    public void setMaintainLineSpacing(boolean)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        boolean z0, $z1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing>;

        if $z1 == z0 goto label1;

        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing> = z0;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void resizeParamsChanged()>();

     label1:
        return;
    }

    public int getResizedPaddingAdjustmentTop()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $i0 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop>;

        return $i0;
    }

    public void setResizedPaddingAdjustmentTop(int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop>;

        if $i1 == i0 goto label1;

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop> = i0;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void resizeParamsChanged()>();

     label1:
        return;
    }

    public int getResizedPaddingAdjustmentBottom()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $i0 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom>;

        return $i0;
    }

    public void setResizedPaddingAdjustmentBottom(int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, $i1;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom>;

        if $i1 == i0 goto label1;

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom> = i0;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void resizeParamsChanged()>();

     label1:
        return;
    }

    private void resizeParamsChanged()
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        $z0 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mIsResized>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void requestLayout()>();

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        android.text.Layout r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        boolean $z0, z1, $z2, z3, $z4, $z5;
        byte $b12, $b17;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mDefaultsInitialized>;

        if $z0 != 0 goto label01;

        $f12 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getTextSize()>();

        $i22 = (int) $f12;

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize> = $i22;

        $f13 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingExtra()>();

        r0.<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra> = $f13;

        $i23 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingTop()>();

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop> = $i23;

        $i24 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingBottom()>();

        r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom> = $i24;

        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mDefaultsInitialized> = 1;

     label01:
        $i4 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize>;

        $f1 = (float) $i4;

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setTextSize(int,float)>(0, $f1);

        $f2 = r0.<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra>;

        $f3 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingMultiplier()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setLineSpacing(float,float)>($f2, $f3);

        $i6 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop>;

        $i5 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom>;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setPaddingTopAndBottom(int,int)>($i6, $i5);

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

        z1 = 0;

        r1 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: android.text.Layout getLayout()>();

        if r1 == null goto label04;

        $i20 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mTriggerConditions>;

        $i21 = $i20 & 1;

        if $i21 <= 0 goto label04;

        i25 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        i26 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getMaxLines()>();

        if i26 <= 1 goto label04;

        if i25 != i26 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z1 = $z2;

     label04:
        $f14 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getTextSize()>();

        i27 = (int) $f14;

        z3 = 0;

        if z1 == 0 goto label09;

        $i15 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        if $i15 == -1 goto label05;

        $i18 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        if i27 == $i18 goto label05;

        $i19 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        $f11 = (float) $i19;

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setTextSize(int,float)>(0, $f11);

        z3 = 1;

     label05:
        $f15 = r0.<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra>;

        $i28 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize>;

        $f16 = (float) $i28;

        $f17 = $f15 + $f16;

        $i29 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        $f18 = (float) $i29;

        f0 = $f17 - $f18;

        $z4 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing>;

        if $z4 == 0 goto label06;

        $f9 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingExtra()>();

        $b17 = $f9 cmpl f0;

        if $b17 == 0 goto label06;

        $f10 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingMultiplier()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setLineSpacing(float,float)>(f0, $f10);

        z3 = 1;

     label06:
        $i30 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop>;

        $i31 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentTop>;

        i2 = $i30 + $i31;

        $i32 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom>;

        $i33 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedPaddingAdjustmentBottom>;

        i3 = $i32 + $i33;

        $i34 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingTop()>();

        if $i34 != i2 goto label07;

        $i16 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingBottom()>();

        if $i16 == i3 goto label08;

     label07:
        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setPaddingTopAndBottom(int,int)>(i2, i3);

        z3 = 1;

     label08:
        goto label13;

     label09:
        $i7 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mResizedTextSize>;

        if $i7 == -1 goto label10;

        $i13 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize>;

        if i27 == $i13 goto label10;

        $i14 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultTextSize>;

        $f8 = (float) $i14;

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setTextSize(int,float)>(0, $f8);

        z3 = 1;

     label10:
        $z5 = r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mMaintainLineSpacing>;

        if $z5 == 0 goto label11;

        $f4 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingExtra()>();

        $f5 = r0.<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra>;

        $b12 = $f4 cmpl $f5;

        if $b12 == 0 goto label11;

        $f6 = r0.<android.support.v17.leanback.widget.ResizingTextView: float mDefaultLineSpacingExtra>;

        $f7 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: float getLineSpacingMultiplier()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setLineSpacing(float,float)>($f6, $f7);

        z3 = 1;

     label11:
        $i35 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingTop()>();

        $i36 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop>;

        if $i35 != $i36 goto label12;

        $i10 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingBottom()>();

        $i11 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom>;

        if $i10 == $i11 goto label13;

     label12:
        $i9 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingTop>;

        $i8 = r0.<android.support.v17.leanback.widget.ResizingTextView: int mDefaultPaddingBottom>;

        specialinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setPaddingTopAndBottom(int,int)>($i9, $i8);

        z3 = 1;

     label13:
        r0.<android.support.v17.leanback.widget.ResizingTextView: boolean mIsResized> = z1;

        if z3 == 0 goto label14;

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

     label14:
        return;
    }

    private void setPaddingTopAndBottom(int, int)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: boolean isPaddingRelative()>();

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingStart()>();

        $i5 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingEnd()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setPaddingRelative(int,int,int,int)>($i4, i0, $i5, i1);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: int getPaddingRight()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ResizingTextView: void setPadding(int,int,int,int)>($i2, i0, $i3, i1);

     label2:
        return;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.support.v17.leanback.widget.ResizingTextView r0;
        android.view.ActionMode$Callback r1, $r2;

        r0 := @this: android.support.v17.leanback.widget.ResizingTextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r2 = staticinvoke <android.support.v4.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>(r0, r1);

        specialinvoke r0.<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($r2);

        return;
    }

