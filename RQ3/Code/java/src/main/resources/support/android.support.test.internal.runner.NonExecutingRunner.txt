android.support.test.internal.runner.NonExecutingRunner
<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Runner runner>
    void <init>(org.junit.runner.Runner)
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.Runner r1;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        r1 := @parameter0: org.junit.runner.Runner;

        specialinvoke r0.<org.junit.runner.Runner: void <init>()>();

        r0.<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Runner runner> = r1;

        return;
    }

    public org.junit.runner.Description getDescription()
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.Runner $r1;
        org.junit.runner.Description $r2;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        $r1 = r0.<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Runner runner>;

        $r2 = virtualinvoke $r1.<org.junit.runner.Runner: org.junit.runner.Description getDescription()>();

        return $r2;
    }

    public void run(org.junit.runner.notification.RunNotifier)
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.notification.RunNotifier r1;
        org.junit.runner.Description $r2;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        $r2 = virtualinvoke r0.<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Description getDescription()>();

        specialinvoke r0.<android.support.test.internal.runner.NonExecutingRunner: void generateListOfTests(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r1, $r2);

        return;
    }

    public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.manipulation.Filter r1;
        org.junit.runner.Runner $r2;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        r1 := @parameter0: org.junit.runner.manipulation.Filter;

        $r2 = r0.<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Runner runner>;

        virtualinvoke r1.<org.junit.runner.manipulation.Filter: void apply(java.lang.Object)>($r2);

        return;
    }

    public void sort(org.junit.runner.manipulation.Sorter)
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.manipulation.Sorter r1;
        org.junit.runner.Runner $r2;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        r1 := @parameter0: org.junit.runner.manipulation.Sorter;

        $r2 = r0.<android.support.test.internal.runner.NonExecutingRunner: org.junit.runner.Runner runner>;

        virtualinvoke r1.<org.junit.runner.manipulation.Sorter: void apply(java.lang.Object)>($r2);

        return;
    }

    private void generateListOfTests(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)
    {
        android.support.test.internal.runner.NonExecutingRunner r0;
        org.junit.runner.notification.RunNotifier r1;
        org.junit.runner.Description r2, r5;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: android.support.test.internal.runner.NonExecutingRunner;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        r2 := @parameter1: org.junit.runner.Description;

        r3 = virtualinvoke r2.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.junit.runner.notification.RunNotifier: void fireTestStarted(org.junit.runner.Description)>(r2);

        virtualinvoke r1.<org.junit.runner.notification.RunNotifier: void fireTestFinished(org.junit.runner.Description)>(r2);

        goto label3;

     label1:
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.junit.runner.Description) $r6;

        specialinvoke r0.<android.support.test.internal.runner.NonExecutingRunner: void generateListOfTests(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r1, r5);

        goto label2;

     label3:
        return;
    }

