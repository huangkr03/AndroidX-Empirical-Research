android.support.v4.widget.NestedScrollView
<android.support.v4.widget.NestedScrollView: int ANIMATED_SCROLL_GAP>
<android.support.v4.widget.NestedScrollView: float MAX_SCROLL_FACTOR>
<android.support.v4.widget.NestedScrollView: java.lang.String TAG>
<android.support.v4.widget.NestedScrollView: long mLastScroll>
<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>
<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>
<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>
<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>
<android.support.v4.widget.NestedScrollView: int mLastMotionY>
<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty>
<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut>
<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>
<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>
<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>
<android.support.v4.widget.NestedScrollView: boolean mFillViewport>
<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>
<android.support.v4.widget.NestedScrollView: int mTouchSlop>
<android.support.v4.widget.NestedScrollView: int mMinimumVelocity>
<android.support.v4.widget.NestedScrollView: int mMaximumVelocity>
<android.support.v4.widget.NestedScrollView: int mActivePointerId>
<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>
<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>
<android.support.v4.widget.NestedScrollView: int mNestedYOffset>
<android.support.v4.widget.NestedScrollView: int mLastScrollerY>
<android.support.v4.widget.NestedScrollView: int INVALID_POINTER>
<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>
<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE>
<android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE>
<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>
<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>
<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>
<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener>
    public void <init>(android.content.Context)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.content.res.TypedArray r3;
        int[] $r5, $r6, $r7;
        boolean $z0;
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r10;
        android.graphics.Rect r11;
        android.support.v4.view.NestedScrollingParentHelper r12;
        android.support.v4.view.NestedScrollingChildHelper r13;
        android.view.ViewGroup r14;
        android.view.View r15, r16;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r11 = new android.graphics.Rect;

        specialinvoke r11.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect> = r11;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = 1;

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        $r5 = newarray (int)[2];

        r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset> = $r5;

        $r6 = newarray (int)[2];

        r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed> = $r6;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void initScrollView()>();

        $r7 = <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, i0, 0);

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setFillViewport(boolean)>($z0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        r12 = new android.support.v4.view.NestedScrollingParentHelper;

        r14 = (android.view.ViewGroup) r0;

        specialinvoke r12.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(r14);

        r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper> = r12;

        r13 = new android.support.v4.view.NestedScrollingChildHelper;

        r15 = (android.view.View) r0;

        specialinvoke r13.<android.support.v4.view.NestedScrollingChildHelper: void <init>(android.view.View)>(r15);

        r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper> = r13;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(1);

        $r10 = <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE>;

        r16 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r16, $r10);

        return;
    }

    public boolean startNestedScroll(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>(i0, i1);

        return $z0;
    }

    public void stopNestedScroll(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void stopNestedScroll(int)>(i0);

        return;
    }

    public boolean hasNestedScrollingParent(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>(i0);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[], int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, i4;
        int[] r1;
        android.support.v4.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(i0, i1, i2, i3, r1, i4);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[], int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2;
        int[] r1, r2;
        android.support.v4.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        i2 := @parameter4: int;

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r1, r2, i2);

        return $z0;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>(z0);

        return;
    }

    public boolean isNestedScrollingEnabled()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $z0;
    }

    public boolean startNestedScroll(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int,int)>(i0, 0);

        return $z0;
    }

    public void stopNestedScroll()
    {
        android.support.v4.widget.NestedScrollView r0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        return;
    }

    public boolean hasNestedScrollingParent()
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(0);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3;
        int[] r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(i0, i1, i2, i3, r1, 0);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1;
        int[] r1, r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r1, r2, 0);

        return $z0;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        float f0, f1;
        boolean z0, $z1;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z1 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z1;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v4.widget.NestedScrollView r0;
        float f0, f1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z0;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1, r2;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = i0 & 2;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1, r2;
        int i0, i1;
        android.support.v4.view.NestedScrollingParentHelper $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $r3.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>(r1, r2, i0, i1);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, i1);

        return;
    }

    public void onStopNestedScroll(android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0;
        android.support.v4.view.NestedScrollingParentHelper $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $r2.<android.support.v4.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)>(r1, i0);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll(int)>(i0);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, i3);

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i6 = $i8 - i5;

        i7 = i3 - i6;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(0, i6, 0, i7, null, i4);

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[], int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, i2;
        int[] r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        i2 := @parameter4: int;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r2, null, i2);

        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1, r2;
        int i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>(r1, r2, i0, 0);

        return $z0;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)>(r1, 0);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, i2, i3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)>(r1, i0, i1, i2, i3, 0);

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1;
        int[] r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)>(r1, i0, i1, r2, 0);

        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        float f0, f1;
        boolean z0;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        $i0 = (int) f1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        float f0, f1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z0;
    }

    public int getNestedScrollAxes()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.support.v4.view.NestedScrollingParentHelper $r1;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.support.v4.widget.NestedScrollView r0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        return 1;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 != 0 goto label1;

        return 0.0F;

     label1:
        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if i1 >= i0 goto label2;

        $f1 = (float) i1;

        $f0 = (float) i0;

        $f2 = $f1 / $f0;

        return $f2;

     label2:
        return 1.0F;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.ViewGroup$LayoutParams $r3;
        float $f0, $f1, $f2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i3 != 0 goto label1;

        return 0.0F;

     label1:
        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i1 = $i4 - $i5;

        $i6 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i7 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i10 = $i8 - $i9;

        i2 = $i10 - i1;

        if i2 >= i0 goto label2;

        $f1 = (float) i2;

        $f0 = (float) i0;

        $f2 = $f1 / $f0;

        return $f2;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f0 = (float) $i0;

        $f1 = 0.5F * $f0;

        $i1 = (int) $f1;

        return $i1;
    }

    private void initScrollView()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.ViewConfiguration r1;
        android.widget.OverScroller $r2;
        android.content.Context $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r2 = new android.widget.OverScroller;

        $r3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.OverScroller: void <init>(android.content.Context)>($r3);

        r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller> = $r2;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setWillNotDraw(boolean)>(0);

        $r4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r4);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity> = $i2;

        return;
    }

    public void addView(android.view.View)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int $i0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

        return;
    }

    public void addView(android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, $i1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int)>(r1, i0);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    public void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.support.v4.widget.NestedScrollView$OnScrollChangeListener r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.support.v4.widget.NestedScrollView$OnScrollChangeListener;

        r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener> = r1;

        return;
    }

    private boolean canScroll()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i4 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i6 = $i3 + $i4;

        $i5 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i0 = $i6 + $i5;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i1 = $i9 - $i10;

        if i0 <= i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public boolean isFillViewport()
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;

        return $z0;
    }

    public void setFillViewport(boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0, $z1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;

        if z0 == $z1 goto label1;

        r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport> = z0;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();

     label1:
        return;
    }

    public boolean isSmoothScrollingEnabled()
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;

        return $z0;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = z0;

        return;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3;
        android.support.v4.widget.NestedScrollView$OnScrollChangeListener $r1, $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onScrollChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener>;

        interfaceinvoke $r2.<android.support.v4.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int)>(r0, i0, i1, i2, i3);

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i0, i1);

        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if i2 != 0 goto label2;

        return;

     label2:
        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i7 <= 0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getMeasuredHeight()>();

        $i9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i13 = $i10 - $i11;

        $i12 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i15 = $i13 - $i12;

        $i14 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i4 = $i15 - $i14;

        if i3 >= i4 goto label3;

        $i16 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i17 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i19 = $i16 + $i17;

        $i18 = r2.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i21 = $i19 + $i18;

        $i20 = r2.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        $i23 = $i21 + $i20;

        $i22 = r2.<android.widget.FrameLayout$LayoutParams: int width>;

        i5 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>(i0, $i23, $i22);

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i5, i6);

     label3:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.KeyEvent r1;
        android.view.View r2, r6;
        android.graphics.Rect $r3;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, z8;
        int $i0, $i1, $i2;
        android.view.FocusFinder $r5;
        short $s3;
        android.view.ViewGroup r7;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.KeyEvent;

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        $z0 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean canScroll()>();

        if $z0 != 0 goto label05;

        $z5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isFocused()>();

        if $z5 == 0 goto label04;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i2 == 4 goto label04;

        r6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if r6 != r0 goto label01;

        r6 = null;

     label01:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r7 = (android.view.ViewGroup) r0;

        r2 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r7, r6, 130);

        if r2 == null goto label02;

        if r2 == r0 goto label02;

        $z6 = virtualinvoke r2.<android.view.View: boolean requestFocus(int)>(130);

        if $z6 == 0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        return $z7;

     label04:
        return 0;

     label05:
        z8 = 0;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label13;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i1)
        {
            case 19: goto label06;
            case 20: goto label08;
            case 62: goto label10;
            default: goto label13;
        };

     label06:
        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z4 != 0 goto label07;

        z8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(33);

        goto label13;

     label07:
        z8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(33);

        goto label13;

     label08:
        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z3 != 0 goto label09;

        z8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(130);

        goto label13;

     label09:
        z8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(130);

        goto label13;

     label10:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z1 == 0 goto label11;

        $s3 = 33;

        goto label12;

     label11:
        $s3 = 130;

     label12:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean pageScroll(int)>($s3);

     label13:
        return z8;
    }

    private boolean inChild(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i3 <= 0 goto label3;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i5 = $i4 - i2;

        if i1 < $i5 goto label1;

        $i6 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i7 = $i6 - i2;

        if i1 >= $i7 goto label1;

        $i8 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if i0 < $i8 goto label1;

        $i9 = virtualinvoke r1.<android.view.View: int getRight()>();

        if i0 >= $i9 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    private void initOrResetVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.VelocityTracker $r1, $r2, $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r3;

        goto label2;

     label1:
        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

     label2:
        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label1:
        return;
    }

    private void recycleVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, i17;
        android.view.ViewParent r2;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r3, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, r14;
        java.lang.String $r8;
        android.widget.OverScroller $r9, $r11, $r12;
        boolean $z0, $z1, $z3, $z5, $z6, $z7;
        android.view.View r15;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 != 2 goto label01;

        $z5 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z5 == 0 goto label01;

        return 1;

     label01:
        $i4 = i0 & 255;

        tableswitch($i4)
        {
            case 0: goto label06;
            case 1: goto label10;
            case 2: goto label02;
            case 3: goto label10;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label12;
            default: goto label13;
        };

     label02:
        i16 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        if i16 != -1 goto label03;

        goto label13;

     label03:
        i1 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>(i16);

        if i1 != -1 goto label04;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r8);

        goto label13;

     label04:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        i2 = (int) $f0;

        $i5 = r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        $i6 = i2 - $i5;

        i3 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i7 = r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        if i3 <= $i7 goto label13;

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getNestedScrollAxes()>();

        $i9 = $i8 & 2;

        if $i9 != 0 goto label13;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = i2;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = 0;

        r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if r2 == null goto label05;

        interfaceinvoke r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label05:
        goto label13;

     label06:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i17 = (int) $f1;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i14 = (int) $f2;

        $z1 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean inChild(int,int)>($i14, i17);

        if $z1 != 0 goto label07;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        goto label13;

     label07:
        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = i17;

        $i15 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i15;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void initOrResetVelocityTracker()>();

        $r10 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r10.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $r11 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r11.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $r12 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $z3 = virtualinvoke $r12.<android.widget.OverScroller: boolean isFinished()>();

        if $z3 != 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z6;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 0);

        goto label13;

     label10:
        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        $r9 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i11 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i12 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $z0 = virtualinvoke $r9.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i11, $i12, 0, 0, 0, $i13);

        if $z0 == 0 goto label11;

        r15 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r15);

     label11:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        goto label13;

     label12:
        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

     label13:
        $z7 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        return $z7;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.MotionEvent r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52, i53, i54, i55, i56, $i57, $i58, i59, i60;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17, $z18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        android.view.VelocityTracker $r3, $r19, r37, $r38;
        android.widget.OverScroller $r4, $r28, $r29, $r30, $r33;
        int[] $r5, $r6, $r7, $r16, $r17, $r18, $r20, $r21, $r22, $r35;
        android.widget.EdgeEffect $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r36;
        java.lang.StringBuilder $r24, $r25, $r26, r39;
        java.lang.String $r27;
        android.view.ViewParent r32, r34;
        android.view.View r40, r41, r42;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label01;

        r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = 0;

     label01:
        $i5 = r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $f0 = (float) $i5;

        virtualinvoke r2.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label23;
            case 2: goto label08;
            case 3: goto label26;
            case 4: goto label30;
            case 5: goto label28;
            case 6: goto label29;
            default: goto label30;
        };

     label02:
        $i49 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i49 != 0 goto label03;

        return 0;

     label03:
        $r29 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $z11 = virtualinvoke $r29.<android.widget.OverScroller: boolean isFinished()>();

        if $z11 != 0 goto label04;

        $z13 = 1;

        goto label05;

     label04:
        $z13 = 0;

     label05:
        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z13;

        if $z13 == 0 goto label06;

        r32 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if r32 == null goto label06;

        interfaceinvoke r32.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label06:
        $r33 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $z14 = virtualinvoke $r33.<android.widget.OverScroller: boolean isFinished()>();

        if $z14 != 0 goto label07;

        $r30 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r30.<android.widget.OverScroller: void abortAnimation()>();

     label07:
        $f21 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i50 = (int) $f21;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i50;

        $i51 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i51;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 0);

        goto label30;

     label08:
        $i15 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        i52 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i15);

        if i52 != -1 goto label09;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $i39 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r27);

        goto label30;

     label09:
        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i52);

        i1 = (int) $f3;

        $i16 = r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        i53 = $i16 - i1;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $r5 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $z3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(0, i53, $r6, $r5, 0);

        if $z3 == 0 goto label10;

        $r20 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $i34 = $r20[1];

        i53 = i53 - $i34;

        $r21 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i35 = $r21[1];

        $f18 = (float) $i35;

        virtualinvoke r2.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f18);

        $i37 = r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $r22 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i36 = $r22[1];

        $i38 = $i37 + $i36;

        r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i38;

     label10:
        $z4 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z4 != 0 goto label13;

        $i30 = staticinvoke <java.lang.Math: int abs(int)>(i53);

        $i31 = r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        if $i30 <= $i31 goto label13;

        r34 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if r34 == null goto label11;

        interfaceinvoke r34.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label11:
        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        if i53 <= 0 goto label12;

        $i33 = r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        i53 = i53 - $i33;

        goto label13;

     label12:
        $i32 = r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        i53 = i53 + $i32;

     label13:
        $z15 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z15 == 0 goto label30;

        $r7 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i17 = $r7[1];

        $i18 = i1 - $i17;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i18;

        i54 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i55 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        i56 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getOverScrollMode()>();

        if i56 == 0 goto label14;

        if i56 != 1 goto label15;

        if i55 <= 0 goto label15;

     label14:
        $z16 = 1;

        goto label16;

     label15:
        $z16 = 0;

     label16:
        z0 = $z16;

        $i57 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $z17 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, i53, 0, $i57, 0, i55, 0, 0, 1);

        if $z17 == 0 goto label17;

        $z9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(0);

        if $z9 != 0 goto label17;

        $r19 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r19.<android.view.VelocityTracker: void clear()>();

     label17:
        $i58 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i2 = $i58 - i54;

        i3 = i53 - i2;

        $r35 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $z18 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(0, i2, 0, i3, $r35, 0);

        if $z18 == 0 goto label18;

        $i24 = r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        $r16 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i23 = $r16[1];

        $i25 = $i24 - $i23;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i25;

        $r17 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i26 = $r17[1];

        $f17 = (float) $i26;

        virtualinvoke r2.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f17);

        $i28 = r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $r18 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i27 = $r18[1];

        $i29 = $i28 + $i27;

        r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i29;

        goto label22;

     label18:
        if z0 == 0 goto label22;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();

        i4 = i54 + i53;

        if i4 >= 0 goto label19;

        $r13 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f11 = (float) i53;

        $i21 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f12 = (float) $i21;

        $f13 = $f11 / $f12;

        $f14 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i52);

        $i22 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $f15 = (float) $i22;

        $f16 = $f14 / $f15;

        staticinvoke <android.support.v4.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>($r13, $f13, $f16);

        $r14 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z8 = virtualinvoke $r14.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z8 != 0 goto label20;

        $r15 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r15.<android.widget.EdgeEffect: void onRelease()>();

        goto label20;

     label19:
        if i4 <= i55 goto label20;

        $r10 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f4 = (float) i53;

        $i19 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f5 = (float) $i19;

        $f6 = $f4 / $f5;

        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i52);

        $i20 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $f8 = (float) $i20;

        $f9 = $f7 / $f8;

        $f10 = 1.0F - $f9;

        staticinvoke <android.support.v4.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>($r10, $f6, $f10);

        $r11 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z7 = virtualinvoke $r11.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 != 0 goto label20;

        $r12 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

     label20:
        $r36 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r36 == null goto label22;

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z5 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z5 == 0 goto label21;

        $r9 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z6 = virtualinvoke $r9.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z6 != 0 goto label22;

     label21:
        r40 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r40);

     label22:
        goto label30;

     label23:
        r37 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        $i41 = r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity>;

        $f19 = (float) $i41;

        virtualinvoke r37.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f19);

        $i42 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $f20 = virtualinvoke r37.<android.view.VelocityTracker: float getYVelocity(int)>($i42);

        i59 = (int) $f20;

        $i43 = staticinvoke <java.lang.Math: int abs(int)>(i59);

        $i44 = r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity>;

        if $i43 <= $i44 goto label24;

        $i48 = neg i59;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i48);

        goto label25;

     label24:
        $r28 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i45 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i46 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i47 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $z10 = virtualinvoke $r28.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i45, $i46, 0, 0, 0, $i47);

        if $z10 == 0 goto label25;

        r41 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r41);

     label25:
        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();

        goto label30;

     label26:
        $z1 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z1 == 0 goto label27;

        $i11 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i11 <= 0 goto label27;

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i12 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $z2 = virtualinvoke $r4.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i12, $i13, 0, 0, 0, $i14);

        if $z2 == 0 goto label27;

        r42 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r42);

     label27:
        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();

        goto label30;

     label28:
        i60 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i60);

        $i9 = (int) $f2;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i9;

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i60);

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i10;

        goto label30;

     label29:
        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        $i6 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i6);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>($i7);

        $i8 = (int) $f1;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i8;

     label30:
        $r38 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r38 == null goto label31;

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r2);

     label31:
        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i3, $i4, $i5;
        byte b2, $b6;
        float $f0;
        android.view.VelocityTracker $r2, $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i3 = r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        if i1 != $i3 goto label3;

        if i0 != 0 goto label1;

        $b6 = 1;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        b2 = $b6;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b2);

        $i4 = (int) $f0;

        r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i4;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b2);

        r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i5;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label3;

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2;
        int i0, i1, i2, $i3, $i4, $i5, $i7, i8;
        boolean $z0;
        byte $b6;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i4 = $i3 & 2;

        if $i4 == 0 goto label4;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i5)
        {
            case 8: goto label1;
            default: goto label4;
        };

     label1:
        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z0 != 0 goto label4;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b6 = f0 cmpl 0.0F;

        if $b6 == 0 goto label4;

        $f1 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: float getVerticalScrollFactorCompat()>();

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i8 = i2 - i0;

        if i8 >= 0 goto label2;

        i8 = 0;

        goto label3;

     label2:
        if i8 <= i1 goto label3;

        i8 = i1;

     label3:
        if i8 == i2 goto label4;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i7, i8);

        return 1;

     label4:
        return 0;
    }

    private float getVerticalScrollFactorCompat()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.util.TypedValue r1, $r3;
        android.content.Context r2;
        float $f0, $f1, $f2;
        byte $b0;
        android.content.res.Resources$Theme $r4;
        boolean $z0;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $f0 = r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        r1 = $r3;

        r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        $r4 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, r1, 1);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");

        throw $r7;

     label1:
        $r5 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = virtualinvoke r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r6);

        r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor> = $f2;

     label2:
        $f1 = r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;

        return $f1;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1;
        boolean z0, z1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>(i0, i1);

        return;
    }

    boolean overScrollByCompat(int, int, int, int, int, int, int, int, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        boolean z0, z1, z2, z3, z4, $z5, $z7, $z8, $z9, $z10, z11, z12, $z13;
        android.widget.OverScroller $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i16 := @parameter6: int;

        i17 := @parameter7: int;

        z0 := @parameter8: boolean;

        i6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getOverScrollMode()>();

        $i11 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollRange()>();

        $i12 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollExtent()>();

        if $i11 <= $i12 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z1 = $z7;

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollRange()>();

        $i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollExtent()>();

        if $i13 <= $i14 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        z2 = $z8;

        if i6 == 0 goto label05;

        if i6 != 1 goto label06;

        if z1 == 0 goto label06;

     label05:
        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z3 = $z9;

        if i6 == 0 goto label08;

        if i6 != 1 goto label09;

        if z2 == 0 goto label09;

     label08:
        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z4 = $z10;

        i18 = i2 + i0;

        if z3 != 0 goto label11;

        i16 = 0;

     label11:
        i19 = i3 + i1;

        if z4 != 0 goto label12;

        i17 = 0;

     label12:
        i7 = neg i16;

        i8 = i16 + i4;

        i9 = neg i17;

        i10 = i17 + i5;

        z11 = 0;

        if i18 <= i8 goto label13;

        i18 = i8;

        z11 = 1;

        goto label14;

     label13:
        if i18 >= i7 goto label14;

        i18 = i7;

        z11 = 1;

     label14:
        z12 = 0;

        if i19 <= i10 goto label15;

        i19 = i10;

        z12 = 1;

        goto label16;

     label15:
        if i19 >= i9 goto label16;

        i19 = i9;

        z12 = 1;

     label16:
        if z12 == 0 goto label17;

        $z5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(1);

        if $z5 != 0 goto label17;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i15 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        virtualinvoke $r1.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>(i18, i19, 0, 0, 0, $i15);

     label17:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>(i18, i19, z11, z12);

        if z11 != 0 goto label18;

        if z12 == 0 goto label19;

     label18:
        $z13 = 1;

        goto label20;

     label19:
        $z13 = 0;

     label20:
        return $z13;
    }

    int getScrollRange()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i12 = 0;

        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label1;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i4 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i6 = $i3 + $i4;

        $i5 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i0 = $i6 + $i5;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i1 = $i9 - $i10;

        $i11 = i0 - i1;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

     label1:
        return i12;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0, z1, z2, z3, $z4, $z5;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        java.util.ArrayList r1;
        android.view.View r2, r4;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: java.util.ArrayList getFocusables(int)>(2);

        r4 = null;

        z3 = 0;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i7 = 0;

     label01:
        if i7 >= i2 goto label12;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (android.view.View) $r3;

        i3 = virtualinvoke r2.<android.view.View: int getTop()>();

        i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        if i0 >= i4 goto label11;

        if i3 >= i1 goto label11;

        if i0 >= i3 goto label02;

        if i4 >= i1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z1 = $z4;

        if r4 != null goto label04;

        r4 = r2;

        z3 = z1;

        goto label11;

     label04:
        if z0 == 0 goto label05;

        $i6 = virtualinvoke r4.<android.view.View: int getTop()>();

        if i3 < $i6 goto label06;

     label05:
        if z0 != 0 goto label07;

        $i5 = virtualinvoke r4.<android.view.View: int getBottom()>();

        if i4 <= $i5 goto label07;

     label06:
        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z2 = $z5;

        if z3 == 0 goto label09;

        if z1 == 0 goto label11;

        if z2 == 0 goto label11;

        r4 = r2;

        goto label11;

     label09:
        if z1 == 0 goto label10;

        r4 = r2;

        z3 = 1;

        goto label11;

     label10:
        if z2 == 0 goto label11;

        r4 = r2;

     label11:
        i7 = i7 + 1;

        goto label01;

     label12:
        return r4;
    }

    public boolean pageScroll(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean z0, $z1, $z2;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        if i0 != 130 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        if z0 == 0 goto label4;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i8 = $i7 + i1;

        $r6.<android.graphics.Rect: int top> = $i8;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if i2 <= 0 goto label3;

        $i9 = i2 - 1;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i9);

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r7;

        $i10 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i11 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i3 = $i12 + $i13;

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i14 = $r8.<android.graphics.Rect: int top>;

        $i15 = $i14 + i1;

        if $i15 <= i3 goto label3;

        $r9 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i16 = i3 - i1;

        $r9.<android.graphics.Rect: int top> = $i16;

     label3:
        goto label5;

     label4:
        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i5 = $i4 - i1;

        $r3.<android.graphics.Rect: int top> = $i5;

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i6 = $r4.<android.graphics.Rect: int top>;

        if $i6 >= 0 goto label5;

        $r5 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r5.<android.graphics.Rect: int top> = 0;

     label5:
        $r10 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r11 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i17 = $r11.<android.graphics.Rect: int top>;

        $i18 = $i17 + i1;

        $r10.<android.graphics.Rect: int bottom> = $i18;

        $r12 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i19 = $r12.<android.graphics.Rect: int top>;

        $r13 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i20 = $r13.<android.graphics.Rect: int bottom>;

        $z2 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>(i0, $i19, $i20);

        return $z2;
    }

    public boolean fullScroll(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        android.graphics.Rect $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        if i0 != 130 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r3.<android.graphics.Rect: int top> = 0;

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r4.<android.graphics.Rect: int bottom> = i1;

        if z0 == 0 goto label3;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if i2 <= 0 goto label3;

        $i3 = i2 - 1;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i3);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r5;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i5 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i8 = $i6 + $i7;

        $r6.<android.graphics.Rect: int bottom> = $i8;

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r7 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i9 = $r7.<android.graphics.Rect: int bottom>;

        $i10 = $i9 - i1;

        $r8.<android.graphics.Rect: int top> = $i10;

     label3:
        $r9 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i11 = $r9.<android.graphics.Rect: int top>;

        $r10 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i12 = $r10.<android.graphics.Rect: int bottom>;

        $z2 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>(i0, $i11, $i12);

        return $z2;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        boolean z0, z2, $z3;
        java.lang.Object r1;
        android.view.View $r2, r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z2 = 1;

        i3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i5 = i4 + i3;

        if i0 != 33 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        r1 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>(z0, i1, i2);

        if r1 != null goto label3;

        r1 = r0;

     label3:
        if i1 < i4 goto label4;

        if i2 > i5 goto label4;

        z2 = 0;

        goto label7;

     label4:
        if z0 == 0 goto label5;

        $i7 = i1 - i4;

        goto label6;

     label5:
        $i7 = i2 - i5;

     label6:
        i6 = $i7;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>(i6);

     label7:
        $r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if r1 == $r2 goto label8;

        r3 = (android.view.View) r1;

        virtualinvoke r3.<android.view.View: boolean requestFocus(int)>(i0);

     label8:
        return z2;
    }

    public boolean arrowScroll(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i17;
        android.view.View r1, r2, r10;
        android.widget.FrameLayout$LayoutParams r3;
        android.view.FocusFinder $r4;
        boolean $z0, $z1, $z3;
        android.view.ViewGroup$LayoutParams $r6;
        android.graphics.Rect $r7, $r8, $r9;
        android.view.ViewGroup r11;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        r10 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if r10 != r0 goto label1;

        r10 = null;

     label1:
        $r4 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r11 = (android.view.ViewGroup) r0;

        r1 = virtualinvoke $r4.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r11, r10, i0);

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getMaxScrollAmount()>();

        if r1 == null goto label2;

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $z3 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, i1, $i13);

        if $z3 == 0 goto label2;

        $r7 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r7);

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r8);

        $r9 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r9);

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>(i14);

        virtualinvoke r1.<android.view.View: boolean requestFocus(int)>(i0);

        goto label8;

     label2:
        i15 = i1;

        if i0 != 33 goto label3;

        $i12 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i12 >= i15 goto label3;

        i15 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        goto label4;

     label3:
        if i0 != 130 goto label4;

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i4 <= 0 goto label4;

        r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.FrameLayout$LayoutParams) $r6;

        $i5 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $i6 = r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i2 = $i5 + $i6;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i9 = $i7 + $i8;

        $i10 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i3 = $i9 - $i10;

        $i11 = i2 - i3;

        i15 = staticinvoke <java.lang.Math: int min(int,int)>($i11, i1);

     label4:
        if i15 != 0 goto label5;

        return 0;

     label5:
        if i0 != 130 goto label6;

        $i16 = i15;

        goto label7;

     label6:
        $i16 = neg i15;

     label7:
        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i16);

     label8:
        if r10 == null goto label9;

        $z0 = virtualinvoke r10.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label9;

        $z1 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>(r10);

        if $z1 == 0 goto label9;

        i17 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getDescendantFocusability()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(131072);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean requestFocus()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(i17);

     label9:
        return 1;
    }

    private boolean isOffScreen(android.view.View)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $z0 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, 0, $i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i2 + i0;

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i3 < $i4 goto label1;

        $r5 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i5 = $r5.<android.graphics.Rect: int top>;

        $i6 = $i5 - i0;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i8 = $i7 + i1;

        if $i6 > $i8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void doScrollY(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, i0);

     label2:
        return;
    }

    public final void smoothScrollBy(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i2, i3, i4, i5, $i6, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        long l1, $l7, $l8, $l26;
        android.view.View r1, r7;
        android.widget.FrameLayout$LayoutParams r2;
        byte $b9;
        android.widget.OverScroller $r3, $r4, $r6;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i24 := @parameter1: int;

        $i6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i6 != 0 goto label1;

        return;

     label1:
        $l7 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l8 = r0.<android.support.v4.widget.NestedScrollView: long mLastScroll>;

        l1 = $l7 - $l8;

        $b9 = l1 cmp 250L;

        if $b9 <= 0 goto label2;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r5;

        $i10 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i11 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i13 = $i10 + $i11;

        $i12 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i2 = $i13 + $i12;

        $i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i15 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i16 = $i14 - $i15;

        $i17 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i3 = $i16 - $i17;

        i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i18 = i2 - i3;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i18);

        $i19 = i4 + i24;

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i19, i5);

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i20);

        i25 = $i21 - i4;

        $i22 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        r0.<android.support.v4.widget.NestedScrollView: int mLastScrollerY> = $i22;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i23 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $r6.<android.widget.OverScroller: void startScroll(int,int,int,int)>($i23, i4, 0, i25);

        r7 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r7);

        goto label4;

     label2:
        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $z0 = virtualinvoke $r3.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r4.<android.widget.OverScroller: void abortAnimation()>();

     label3:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(i0, i24);

     label4:
        $l26 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.support.v4.widget.NestedScrollView: long mLastScroll> = $l26;

        return;
    }

    public final void smoothScrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i3 = i0 - $i2;

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i5 = i1 - $i4;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>($i3, $i5);

        return;
    }

    public int computeVerticalScrollRange()
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        i1 = $i6 - $i7;

        if i0 != 0 goto label1;

        return i1;

     label1:
        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i8 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i9 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i12 = $i8 + $i9;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i10 = i12 - i1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        if i2 >= 0 goto label2;

        i12 = i12 - i2;

        goto label3;

     label2:
        if i2 <= i3 goto label3;

        $i11 = i2 - i3;

        i12 = i12 + $i11;

     label3:
        return i12;
    }

    public int computeVerticalScrollOffset()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i1;
    }

    public int computeVerticalScrollExtent()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeVerticalScrollExtent()>();

        return $i0;
    }

    public int computeHorizontalScrollRange()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public int computeHorizontalScrollOffset()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollOffset()>();

        return $i0;
    }

    public int computeHorizontalScrollExtent()
    {
        android.support.v4.widget.NestedScrollView r0;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollExtent()>();

        return $i0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i7 = $i4 + $i5;

        $i6 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        i2 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>(i0, $i7, $i6);

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i2, i3);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i9 = $i6 + $i7;

        $i8 = r2.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i11 = $i9 + $i8;

        $i10 = r2.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i12 = $i11 + $i10;

        $i14 = $i12 + i1;

        $i13 = r2.<android.view.ViewGroup$MarginLayoutParams: int width>;

        i4 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>(i0, $i14, $i13);

        $i16 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i15 = r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i17 = $i16 + $i15;

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i17, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i4, i5);

        return;
    }

    public void computeScroll()
    {
        android.support.v4.widget.NestedScrollView r0;
        int i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        android.widget.OverScroller $r1, $r2, $r3, $r5, $r7;
        int[] $r4, $r9;
        android.widget.EdgeEffect $r6, $r8;
        float $f0, $f1;
        android.view.View r10;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $z1 = virtualinvoke $r1.<android.widget.OverScroller: boolean computeScrollOffset()>();

        if $z1 == 0 goto label7;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: int getCurrX()>();

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        i1 = virtualinvoke $r3.<android.widget.OverScroller: int getCurrY()>();

        $i7 = r0.<android.support.v4.widget.NestedScrollView: int mLastScrollerY>;

        i13 = i1 - $i7;

        $r4 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $z3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(0, i13, $r4, null, 1);

        if $z3 == 0 goto label1;

        $r9 = r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $i12 = $r9[1];

        i13 = i13 - $i12;

     label1:
        if i13 == 0 goto label6;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        i3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, i13, $i8, i3, 0, i2, 0, 0, 0);

        $i9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i4 = $i9 - i3;

        i5 = i13 - i4;

        $z5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(0, i4, 0, i5, null, 1);

        if $z5 != 0 goto label6;

        i6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getOverScrollMode()>();

        if i6 == 0 goto label2;

        if i6 != 1 goto label3;

        if i2 <= 0 goto label3;

     label2:
        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z0 = $z6;

        if z0 == 0 goto label6;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();

        if i1 > 0 goto label5;

        if i3 <= 0 goto label5;

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $r7 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $f1 = virtualinvoke $r7.<android.widget.OverScroller: float getCurrVelocity()>();

        $i11 = (int) $f1;

        virtualinvoke $r8.<android.widget.EdgeEffect: void onAbsorb(int)>($i11);

        goto label6;

     label5:
        if i1 < i2 goto label6;

        if i3 >= i2 goto label6;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $r5 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $f0 = virtualinvoke $r5.<android.widget.OverScroller: float getCurrVelocity()>();

        $i10 = (int) $f0;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onAbsorb(int)>($i10);

     label6:
        r0.<android.support.v4.widget.NestedScrollView: int mLastScrollerY> = i1;

        r10 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r10);

        goto label9;

     label7:
        $z2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>(1);

        if $z2 == 0 goto label8;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll(int)>(1);

     label8:
        r0.<android.support.v4.widget.NestedScrollView: int mLastScrollerY> = 0;

     label9:
        return;
    }

    private void scrollToChild(android.view.View)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        int i0;
        android.graphics.Rect $r2, $r3, $r4;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        if i0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, i0);

     label1:
        return;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.graphics.Rect r1;
        boolean z0, z1, $z2;
        int i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(r1);

        if i0 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

        if z1 == 0 goto label4;

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, i0);

        goto label4;

     label3:
        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, i0);

     label4:
        return z1;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35;
        android.view.View r2;
        android.widget.FrameLayout$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.graphics.Rect;

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i5 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        i31 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i32 = i31 + i0;

        i1 = i32;

        i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $i6 = r1.<android.graphics.Rect: int top>;

        if $i6 <= 0 goto label2;

        i31 = i31 + i2;

     label2:
        r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.FrameLayout$LayoutParams) $r4;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i8 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $i9 = r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i11 = $i8 + $i9;

        $i10 = r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i12 = $i11 + $i10;

        if $i7 >= $i12 goto label3;

        i32 = i32 - i2;

     label3:
        i33 = 0;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        if $i13 <= i32 goto label6;

        $i23 = r1.<android.graphics.Rect: int top>;

        if $i23 <= i31 goto label6;

        $i24 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i24 <= i0 goto label4;

        $i29 = r1.<android.graphics.Rect: int top>;

        $i30 = $i29 - i31;

        i34 = i33 + $i30;

        goto label5;

     label4:
        $i25 = r1.<android.graphics.Rect: int bottom>;

        $i26 = $i25 - i32;

        i34 = i33 + $i26;

     label5:
        $i27 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $i28 = r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i3 = $i27 + $i28;

        i4 = i3 - i1;

        i33 = staticinvoke <java.lang.Math: int min(int,int)>(i34, i4);

        goto label9;

     label6:
        $i14 = r1.<android.graphics.Rect: int top>;

        if $i14 >= i31 goto label9;

        $i15 = r1.<android.graphics.Rect: int bottom>;

        if $i15 >= i32 goto label9;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i16 <= i0 goto label7;

        $i21 = r1.<android.graphics.Rect: int bottom>;

        $i22 = i32 - $i21;

        i35 = i33 - $i22;

        goto label8;

     label7:
        $i17 = r1.<android.graphics.Rect: int top>;

        $i18 = i31 - $i17;

        i35 = i33 - $i18;

     label8:
        $i19 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i20 = neg $i19;

        i33 = staticinvoke <java.lang.Math: int max(int,int)>(i35, $i20);

     label9:
        return i33;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1, r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $z0 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>(r2);

        goto label2;

     label1:
        r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = r2;

     label2:
        specialinvoke r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.graphics.Rect r1;
        android.view.View r2, $r5;
        android.view.FocusFinder $r3, $r4;
        boolean $z0, $z1;
        int i0;
        android.view.ViewGroup r6, r7;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        if i0 != 2 goto label1;

        i0 = 130;

        goto label2;

     label1:
        if i0 != 1 goto label2;

        i0 = 33;

     label2:
        if r1 != null goto label3;

        $r4 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r6 = (android.view.ViewGroup) r0;

        $r5 = virtualinvoke $r4.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r6, null, i0);

        goto label4;

     label3:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r7 = (android.view.ViewGroup) r0;

        $r5 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>(r7, r1, i0);

     label4:
        r2 = $r5;

        if r2 != null goto label5;

        return 0;

     label5:
        $z0 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>(r2);

        if $z0 == 0 goto label6;

        return 0;

     label6:
        $z1 = virtualinvoke r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, r1);

        return $z1;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        $i5 = $i3 - $i4;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i2, $i5);

        $z1 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>(r2, z0);

        return $z1;
    }

    public void requestLayout()
    {
        android.support.v4.widget.NestedScrollView r0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke r0.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i20, $i21;
        android.view.View $r1, $r5, $r6, r7, r9;
        android.support.v4.widget.NestedScrollView$SavedState $r2, $r4;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.FrameLayout$LayoutParams r8;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 0;

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        if $r1 == null goto label1;

        $r5 = r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        r9 = (android.view.View) r0;

        $z1 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r5, r9);

        if $z1 == 0 goto label1;

        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>($r6);

     label1:
        r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        $z2 = r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut>;

        if $z2 != 0 goto label4;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;

        if $r2 == null goto label2;

        $i15 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;

        $i16 = $r4.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i15, $i16);

        r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = null;

     label2:
        i17 = 0;

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i5 <= 0 goto label3;

        r7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i11 = virtualinvoke r7.<android.view.View: int getMeasuredHeight()>();

        $i12 = r8.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i14 = $i11 + $i12;

        $i13 = r8.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i17 = $i14 + $i13;

     label3:
        $i6 = i3 - i1;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i18 = $i8 - $i9;

        i19 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        i4 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>(i19, i18, i17);

        if i4 == i19 goto label4;

        $i10 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i10, i4);

     label4:
        $i20 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i21 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i20, $i21);

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 1;

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.v4.widget.NestedScrollView r0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, i2, i3, i4;
        android.view.View r1;
        boolean $z0;
        android.graphics.Rect $r2, $r3, $r4;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if null == r1 goto label1;

        if r0 != r1 goto label2;

     label1:
        return;

     label2:
        $z0 = specialinvoke r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, 0, i3);

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>(i4);

     label3:
        return;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View r0, r1, $r3;
        android.view.ViewParent r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        if r0 != r1 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r3 = (android.view.View) r2;

        $z1 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r3, r1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void fling(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.widget.OverScroller $r1;
        android.view.View r2;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int,int)>(2, 1);

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.widget.OverScroller mScroller>;

        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>($i2, $i3, 0, i0, 0, 0, -2147483648, 2147483647, 0, 0);

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        r0.<android.support.v4.widget.NestedScrollView: int mLastScrollerY> = $i4;

        r2 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r2);

     label1:
        return;
    }

    private void flingWithNestedDispatch(int)
    {
        android.support.v4.widget.NestedScrollView r0;
        int i0, i1, $i2;
        boolean z0, $z2, $z3;
        float $f0, $f1;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if i1 > 0 goto label1;

        if i0 <= 0 goto label3;

     label1:
        $i2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        if i1 < $i2 goto label2;

        if i0 >= 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $f1 = (float) i0;

        $z3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f1);

        if $z3 != 0 goto label5;

        $f0 = (float) i0;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f0, z0);

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void fling(int)>(i0);

     label5:
        return;
    }

    private void endDrag()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.widget.EdgeEffect $r1, $r2, $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll(int)>(0);

        $r1 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onRelease()>();

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onRelease()>();

     label1:
        return;
    }

    public void scrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        i23 := @parameter0: int;

        i24 := @parameter1: int;

        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i4 <= 0 goto label2;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $i6 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        i0 = $i7 - $i8;

        $i9 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i10 = r2.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i12 = $i9 + $i10;

        $i11 = r2.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        i1 = $i12 + $i11;

        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i15 = $i13 - $i14;

        $i16 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i2 = $i15 - $i16;

        $i17 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i18 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i20 = $i17 + $i18;

        $i19 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i3 = $i20 + $i19;

        i25 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>(i23, i0, i1);

        i26 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>(i24, i2, i3);

        $i21 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        if i25 != $i21 goto label1;

        $i22 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if i26 == $i22 goto label2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>(i25, i26);

     label2:
        return;
    }

    private void ensureGlows()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.content.Context r1;
        int $i0;
        android.widget.EdgeEffect $r2, $r3, $r4;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getOverScrollMode()>();

        if $i0 == 2 goto label1;

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 != null goto label2;

        r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        $r3 = new android.widget.EdgeEffect;

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop> = $r3;

        $r4 = new android.widget.EdgeEffect;

        specialinvoke $r4.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom> = $r4;

        goto label2;

     label1:
        r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop> = null;

        r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom> = null;

     label2:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, $i26, i27, i28, i29, i30, i31, $i32, $i33;
        android.widget.EdgeEffect $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        float $f0, $f1, $f2, $f3, $f4;
        android.view.View r9, r10;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 == null goto label10;

        i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $r3 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z0 = virtualinvoke $r3.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label05;

        i21 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i22 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        i23 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        i24 = 0;

        i25 = staticinvoke <java.lang.Math: int min(int,int)>(0, i0);

        $i12 = <android.os.Build$VERSION: int SDK_INT>;

        if $i12 < 21 goto label01;

        $z4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean getClipToPadding()>();

        if $z4 == 0 goto label02;

     label01:
        $i13 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i14 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i15 = $i13 + $i14;

        i22 = i22 - $i15;

        $i16 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        i24 = i24 + $i16;

     label02:
        $i26 = <android.os.Build$VERSION: int SDK_INT>;

        if $i26 < 21 goto label03;

        $z3 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean getClipToPadding()>();

        if $z3 == 0 goto label03;

        $i17 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i18 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i19 = $i17 + $i18;

        i23 = i23 - $i19;

        $i20 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        i25 = i25 + $i20;

     label03:
        $f0 = (float) i24;

        $f1 = (float) i25;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r4 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void setSize(int,int)>(i22, i23);

        $r5 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z5 = virtualinvoke $r5.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z5 == 0 goto label04;

        r9 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r9);

     label04:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i21);

     label05:
        $r6 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z6 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z6 != 0 goto label10;

        i27 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i28 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        i29 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        i30 = 0;

        $i1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, i0);

        i31 = $i2 + i29;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 21 goto label06;

        $z2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean getClipToPadding()>();

        if $z2 == 0 goto label07;

     label06:
        $i4 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i6 = $i4 + $i5;

        i28 = i28 - $i6;

        $i7 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        i30 = i30 + $i7;

     label07:
        $i32 = <android.os.Build$VERSION: int SDK_INT>;

        if $i32 < 21 goto label08;

        $z1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: boolean getClipToPadding()>();

        if $z1 == 0 goto label08;

        $i8 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i9 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i10 = $i8 + $i9;

        i29 = i29 - $i10;

        $i11 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        i31 = i31 - $i11;

     label08:
        $i33 = i30 - i28;

        $f2 = (float) $i33;

        $f3 = (float) i31;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        $f4 = (float) i28;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f4, 0.0F);

        $r7 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void setSize(int,int)>(i28, i29);

        $r8 = r0.<android.support.v4.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z7 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z7 == 0 goto label09;

        r10 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r10);

     label09:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i27);

     label10:
        return;
    }

    private static int clamp(int, int, int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 >= i2 goto label1;

        if i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = i1 + i0;

        if $i3 <= i2 goto label3;

        $i4 = i2 - i1;

        return $i4;

     label3:
        return i0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.NestedScrollView r0;
        android.os.Parcelable r1, $r3;
        android.support.v4.widget.NestedScrollView$SavedState r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.support.v4.widget.NestedScrollView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.support.v4.widget.NestedScrollView$SavedState) r1;

        $r3 = virtualinvoke r2.<android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = r2;

        virtualinvoke r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.NestedScrollView r0;
        android.os.Parcelable r1, r5;
        android.support.v4.widget.NestedScrollView$SavedState r2, r4;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView;

        r1 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        r4 = new android.support.v4.widget.NestedScrollView$SavedState;

        specialinvoke r4.<android.support.v4.widget.NestedScrollView$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = r4;

        $i0 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        r2.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition> = $i0;

        r5 = (android.os.Parcelable) r2;

        return r5;
    }

    static void <clinit>()
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r0;
        int[] $r1;

        $r0 = new android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView$AccessibilityDelegate: void <init>()>();

        <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16843130;

        <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE> = $r1;

        return;
    }

android.support.v4.widget.NestedScrollView$AccessibilityDelegate
    void <init>()
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate r0;

        r0 := @this: android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        return;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        android.os.Bundle r2;
        android.support.v4.widget.NestedScrollView r3;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>(r1, i0, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = (android.support.v4.widget.NestedScrollView) r1;

        $z1 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: boolean isEnabled()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        lookupswitch(i0)
        {
            case 4096: goto label3;
            case 8192: goto label5;
            default: goto label7;
        };

     label3:
        $i8 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i9 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        i16 = $i10 - $i11;

        $i12 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i13 = $i12 + i16;

        $i14 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        i17 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        $i15 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if i17 == $i15 goto label4;

        virtualinvoke r3.<android.support.v4.widget.NestedScrollView: void smoothScrollTo(int,int)>(0, i17);

        return 1;

     label4:
        return 0;

     label5:
        $i1 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i2 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        i18 = $i3 - $i4;

        $i5 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i6 = $i5 - i18;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        $i7 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if i19 == $i7 goto label6;

        virtualinvoke r3.<android.support.v4.widget.NestedScrollView: void smoothScrollTo(int,int)>(0, i19);

        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate r0;
        android.view.View r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r2;
        android.support.v4.widget.NestedScrollView r3;
        int i0, $i1, $i2;
        java.lang.Class $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r1, r2);

        r3 = (android.support.v4.widget.NestedScrollView) r1;

        $r4 = class "Landroid/widget/ScrollView;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        if i0 <= 0 goto label2;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

        $i1 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i1 <= 0 goto label1;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(8192);

     label1:
        $i2 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i2 >= i0 goto label2;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(4096);

     label2:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.support.v4.widget.NestedScrollView r3;
        boolean z0, $z1;
        java.lang.Class $r4;
        java.lang.String $r5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        r3 = (android.support.v4.widget.NestedScrollView) r1;

        $r4 = class "Landroid/widget/ScrollView;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r5);

        $i0 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>(z0);

        $i1 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setScrollX(int)>($i1);

        $i2 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setScrollY(int)>($i2);

        $i3 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        staticinvoke <android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)>(r2, $i3);

        $i4 = virtualinvoke r3.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        staticinvoke <android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)>(r2, $i4);

        return;
    }

android.support.v4.widget.NestedScrollView$OnScrollChangeListener
<android.support.v4.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int)>
android.support.v4.widget.NestedScrollView$SavedState$1
    void <init>()
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 r0;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 r0;
        android.os.Parcel r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new android.support.v4.widget.NestedScrollView$SavedState;

        specialinvoke $r2.<android.support.v4.widget.NestedScrollView$SavedState: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public android.support.v4.widget.NestedScrollView$SavedState[] newArray(int)
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 r0;
        int i0;
        android.support.v4.widget.NestedScrollView$SavedState[] $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState$1;

        i0 := @parameter0: int;

        $r1 = newarray (android.support.v4.widget.NestedScrollView$SavedState)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 r0;
        int i0;
        android.support.v4.widget.NestedScrollView$SavedState[] $r1;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView$SavedState$1: android.support.v4.widget.NestedScrollView$SavedState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 r0;
        android.os.Parcel r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<android.support.v4.widget.NestedScrollView$SavedState$1: android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

android.support.v4.widget.NestedScrollView$SavedState
<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>
<android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR>
    void <init>(android.os.Parcelable)
    {
        android.support.v4.widget.NestedScrollView$SavedState r0;
        android.os.Parcelable r1;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState;

        r1 := @parameter0: android.os.Parcelable;

        specialinvoke r0.<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>(r1);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.support.v4.widget.NestedScrollView$SavedState r0;
        android.os.Parcel r1;
        int $i0;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.view.View$BaseSavedState: void <init>(android.os.Parcel)>(r1);

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition> = $i0;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.support.v4.widget.NestedScrollView$SavedState r0;
        android.os.Parcel r1;
        int i0, $i1;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View$BaseSavedState: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }

    public java.lang.String toString()
    {
        android.support.v4.widget.NestedScrollView$SavedState r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.String $r3, $r8;

        r0 := @this: android.support.v4.widget.NestedScrollView$SavedState;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HorizontalScrollView.SavedState{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scrollPosition=");

        $i1 = r0.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        android.support.v4.widget.NestedScrollView$SavedState$1 $r0;

        $r0 = new android.support.v4.widget.NestedScrollView$SavedState$1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView$SavedState$1: void <init>()>();

        <android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

