android.support.test.services.shellexecutor.Command
<android.support.test.services.shellexecutor.Command: void execute(java.lang.String,java.util.List,java.util.Map,boolean,android.os.ParcelFileDescriptor)>
android.support.test.services.shellexecutor.Command$Stub$Proxy
    void <init>(android.os.IBinder)
    {
        android.support.test.services.shellexecutor.Command$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.support.test.services.shellexecutor.Command$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<com.google.android.aidl.BaseProxy: void <init>(android.os.IBinder,java.lang.String)>($r1, "android.support.test.services.shellexecutor.Command");

        return;
    }

    public void execute(java.lang.String, java.util.List, java.util.Map, boolean, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.support.test.services.shellexecutor.Command$Stub$Proxy $r0;
        java.lang.String $r1;
        java.util.List $r2;
        java.util.Map $r3;
        boolean $z0;
        android.os.ParcelFileDescriptor $r4;
        android.os.Parcel $r5;

        $r0 := @this: android.support.test.services.shellexecutor.Command$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: android.os.ParcelFileDescriptor;

        $r5 = virtualinvoke $r0.<android.support.test.services.shellexecutor.Command$Stub$Proxy: android.os.Parcel obtainAndWriteInterfaceToken()>();

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r5.<android.os.Parcel: void writeStringList(java.util.List)>($r2);

        virtualinvoke $r5.<android.os.Parcel: void writeMap(java.util.Map)>($r3);

        staticinvoke <com.google.android.aidl.Codecs: void writeBoolean(android.os.Parcel,boolean)>($r5, $z0);

        staticinvoke <com.google.android.aidl.Codecs: void writeParcelable(android.os.Parcel,android.os.Parcelable)>($r5, $r4);

        virtualinvoke $r0.<android.support.test.services.shellexecutor.Command$Stub$Proxy: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>(1, $r5);

        return;
    }

android.support.test.services.shellexecutor.Command$Stub
<android.support.test.services.shellexecutor.Command$Stub: java.lang.String DESCRIPTOR>
<android.support.test.services.shellexecutor.Command$Stub: int TRANSACTION_execute>
    public void <init>()
    {
        android.support.test.services.shellexecutor.Command$Stub $r0;

        $r0 := @this: android.support.test.services.shellexecutor.Command$Stub;

        specialinvoke $r0.<com.google.android.aidl.BaseStub: void <init>(java.lang.String)>("android.support.test.services.shellexecutor.Command");

        return;
    }

    public static android.support.test.services.shellexecutor.Command asInterface(android.os.IBinder)
    {
        android.os.IBinder $r0;
        boolean $z0;
        android.os.IInterface $r1;
        android.support.test.services.shellexecutor.Command $r2;
        android.support.test.services.shellexecutor.Command$Stub$Proxy $r3;

        $r0 := @parameter0: android.os.IBinder;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.support.test.services.shellexecutor.Command");

        $z0 = $r1 instanceof android.support.test.services.shellexecutor.Command;

        if $z0 == 0 goto label2;

        $r2 = (android.support.test.services.shellexecutor.Command) $r1;

        return $r2;

     label2:
        $r3 = new android.support.test.services.shellexecutor.Command$Stub$Proxy;

        specialinvoke $r3.<android.support.test.services.shellexecutor.Command$Stub$Proxy: void <init>(android.os.IBinder)>($r0);

        return $r3;
    }

    protected boolean dispatchTransaction(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.support.test.services.shellexecutor.Command$Stub $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4;
        java.util.HashMap $r5;
        boolean $z0;
        android.os.Parcelable$Creator $r6;
        android.os.Parcelable $r7;
        android.os.ParcelFileDescriptor $r8;
        java.util.Map r9;

        $r0 := @this: android.support.test.services.shellexecutor.Command$Stub;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        if $i0 != 1 goto label1;

        $r3 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke $r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $r5 = staticinvoke <com.google.android.aidl.Codecs: java.util.HashMap createMap(android.os.Parcel)>($r1);

        $z0 = staticinvoke <com.google.android.aidl.Codecs: boolean createBoolean(android.os.Parcel)>($r1);

        $r6 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r7 = staticinvoke <com.google.android.aidl.Codecs: android.os.Parcelable createParcelable(android.os.Parcel,android.os.Parcelable$Creator)>($r1, $r6);

        $r8 = (android.os.ParcelFileDescriptor) $r7;

        r9 = (java.util.Map) $r5;

        virtualinvoke $r0.<android.support.test.services.shellexecutor.Command$Stub: void execute(java.lang.String,java.util.List,java.util.Map,boolean,android.os.ParcelFileDescriptor)>($r3, $r4, r9, $z0, $r8);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label1:
        return 0;
    }

