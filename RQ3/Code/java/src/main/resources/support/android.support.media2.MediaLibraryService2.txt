android.support.media2.MediaLibraryService2
<android.support.media2.MediaLibraryService2: java.lang.String SERVICE_INTERFACE>
    public void <init>()
    {
        android.support.media2.MediaLibraryService2 r0;

        r0 := @this: android.support.media2.MediaLibraryService2;

        specialinvoke r0.<android.support.media2.MediaSessionService2: void <init>()>();

        return;
    }

    android.support.media2.MediaSessionService2$MediaSessionService2Impl createImpl()
    {
        android.support.media2.MediaLibraryService2 r0;
        android.support.media2.MediaLibraryService2ImplBase $r1;

        r0 := @this: android.support.media2.MediaLibraryService2;

        $r1 = new android.support.media2.MediaLibraryService2ImplBase;

        specialinvoke $r1.<android.support.media2.MediaLibraryService2ImplBase: void <init>()>();

        return $r1;
    }

    public void onCreate()
    {
        android.support.media2.MediaLibraryService2 r0;
        android.support.media2.MediaSession2 r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.support.media2.MediaLibraryService2;

        specialinvoke r0.<android.support.media2.MediaSessionService2: void onCreate()>();

        r1 = virtualinvoke r0.<android.support.media2.MediaLibraryService2: android.support.media2.MediaSession2 getSession()>();

        $z0 = r1 instanceof android.support.media2.MediaLibraryService2$MediaLibrarySession;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Expected MediaLibrarySession, but returned MediaSession2");

        throw $r2;

     label1:
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.support.media2.MediaLibraryService2 r0;
        android.content.Intent r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.media2.MediaLibraryService2;

        r1 := @parameter0: android.content.Intent;

        $r2 = specialinvoke r0.<android.support.media2.MediaSessionService2: android.os.IBinder onBind(android.content.Intent)>(r1);

        return $r2;
    }

<android.support.media2.MediaLibraryService2: android.support.media2.MediaLibraryService2$MediaLibrarySession onCreateSession(java.lang.String)>
    public volatile android.support.media2.MediaSession2 onCreateSession(java.lang.String)
    {
        android.support.media2.MediaLibraryService2 r0;
        java.lang.String r1;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r2;

        r0 := @this: android.support.media2.MediaLibraryService2;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibraryService2: android.support.media2.MediaLibraryService2$MediaLibrarySession onCreateSession(java.lang.String)>(r1);

        return $r2;
    }

android.support.media2.MediaLibraryService2$LibraryRoot
<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String EXTRA_RECENT>
<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String EXTRA_OFFLINE>
<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String EXTRA_SUGGESTED>
<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String mRootId>
<android.support.media2.MediaLibraryService2$LibraryRoot: android.os.Bundle mExtras>
    public void <init>(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$LibraryRoot r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.media2.MediaLibraryService2$LibraryRoot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rootId shouldn\'t be null");

        throw $r3;

     label1:
        r0.<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String mRootId> = r1;

        r0.<android.support.media2.MediaLibraryService2$LibraryRoot: android.os.Bundle mExtras> = r2;

        return;
    }

    public java.lang.String getRootId()
    {
        android.support.media2.MediaLibraryService2$LibraryRoot r0;
        java.lang.String $r1;

        r0 := @this: android.support.media2.MediaLibraryService2$LibraryRoot;

        $r1 = r0.<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String mRootId>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.support.media2.MediaLibraryService2$LibraryRoot r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.media2.MediaLibraryService2$LibraryRoot;

        $r1 = r0.<android.support.media2.MediaLibraryService2$LibraryRoot: android.os.Bundle mExtras>;

        return $r1;
    }

android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1
<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder this$0>
    void <init>(android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1 r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder this$0> = r1;

        specialinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: void <init>()>();

        return;
    }

android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder
    public void <init>(android.support.media2.MediaLibraryService2, java.util.concurrent.Executor, android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0;
        android.support.media2.MediaLibraryService2 r1;
        java.util.concurrent.Executor r2;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r3;
        android.content.Context r5;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.support.media2.MediaLibraryService2;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r5 = (android.content.Context) r1;

        specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: void <init>(android.content.Context)>(r5);

        virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaSession2$BuilderBase setSessionCallback(java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r2, r3);

        return;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r3;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setPlayer(android.support.media2.MediaPlayerConnector)>(r1);

        $r3 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setPlaylistAgent(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r3;
        android.support.media2.MediaPlaylistAgent r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setPlaylistAgent(android.support.media2.MediaPlaylistAgent)>(r1);

        $r3 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setSessionActivity(android.app.PendingIntent)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r3;
        android.app.PendingIntent r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setSessionActivity(android.app.PendingIntent)>(r1);

        $r3 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setId(java.lang.String)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r3;
        java.lang.String r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setId(java.lang.String)>(r1);

        $r3 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession build()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0;
        java.util.concurrent.Executor $r1, $r5;
        android.support.media2.MediaSession2$SessionCallback $r2, $r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r3;
        android.app.PendingIntent $r6;
        android.support.media2.MediaPlaylistAgent $r7;
        android.support.media2.MediaPlayerConnector $r8;
        java.lang.String $r9;
        android.content.Context $r10, $r13;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1 $r11;
        android.support.media2.MediaSession2$MainHandlerExecutor $r12;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        $r1 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        if $r1 != null goto label1;

        $r12 = new android.support.media2.MediaSession2$MainHandlerExecutor;

        $r13 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.content.Context mContext>;

        specialinvoke $r12.<android.support.media2.MediaSession2$MainHandlerExecutor: void <init>(android.content.Context)>($r13);

        r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: java.util.concurrent.Executor mCallbackExecutor> = $r12;

     label1:
        $r2 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaSession2$SessionCallback mCallback>;

        if $r2 != null goto label2;

        $r11 = new android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1;

        specialinvoke $r11.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder$1: void <init>(android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder)>(r0);

        r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaSession2$SessionCallback mCallback> = $r11;

     label2:
        $r3 = new android.support.media2.MediaLibraryService2$MediaLibrarySession;

        $r10 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.content.Context mContext>;

        $r9 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: java.lang.String mId>;

        $r8 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaPlayerConnector mPlayer>;

        $r7 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        $r6 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.app.PendingIntent mSessionActivity>;

        $r5 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaSession2$SessionCallback mCallback>;

        specialinvoke $r3.<android.support.media2.MediaLibraryService2$MediaLibrarySession: void <init>(android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>($r10, $r9, $r8, $r7, $r6, $r5, $r4);

        return $r3;
    }

    public volatile android.support.media2.MediaSession2 build()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaLibraryService2$MediaLibrarySession build()>();

        return $r1;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setId(java.lang.String)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setId(java.lang.String)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r2;
        android.app.PendingIntent r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setSessionActivity(android.app.PendingIntent)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setPlaylistAgent(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r2;
        android.support.media2.MediaPlaylistAgent r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setPlaylistAgent(android.support.media2.MediaPlaylistAgent)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder r0, $r2;
        android.support.media2.MediaPlayerConnector r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder: android.support.media2.MediaLibraryService2$MediaLibrarySession$Builder setPlayer(android.support.media2.MediaPlayerConnector)>(r1);

        return $r2;
    }

android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback
    public void <init>()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        specialinvoke r0.<android.support.media2.MediaSession2$SessionCallback: void <init>()>();

        return;
    }

    public android.support.media2.MediaLibraryService2$LibraryRoot onGetLibraryRoot(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.os.Bundle r3;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.os.Bundle;

        return null;
    }

    public android.support.media2.MediaItem2 onGetItem(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public java.util.List onGetChildren(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, int, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        int i0, i1;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.Bundle;

        return null;
    }

    public void onSubscribe(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onUnsubscribe(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void onSearch(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public java.util.List onGetSearchResult(android.support.media2.MediaLibraryService2$MediaLibrarySession, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, int, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        int i0, i1;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback;

        r1 := @parameter0: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.Bundle;

        return null;
    }

android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifyChildrenChanged(java.lang.String,int,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifyChildrenChanged(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifySearchResultChanged(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onGetLibraryRootOnExecutor(android.support.media2.MediaSession2$ControllerInfo,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onGetItemOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onGetChildrenOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,int,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onSubscribeOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onUnsubscribeOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onSearchOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void onGetSearchResultOnExecutor(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,int,android.os.Bundle)>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>
<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>
android.support.media2.MediaLibraryService2$MediaLibrarySession
    void <init>(android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.content.Context r1;
        java.lang.String r2;
        android.support.media2.MediaPlayerConnector r3;
        android.support.media2.MediaPlaylistAgent r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        android.support.media2.MediaSession2$SessionCallback r7;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        r4 := @parameter3: android.support.media2.MediaPlaylistAgent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.support.media2.MediaSession2$SessionCallback;

        specialinvoke r0.<android.support.media2.MediaSession2: void <init>(android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl createImpl(android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.content.Context r1;
        java.lang.String r2;
        android.support.media2.MediaPlayerConnector r3;
        android.support.media2.MediaPlaylistAgent r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        android.support.media2.MediaSession2$SessionCallback r7;
        android.support.media2.MediaLibrarySessionImplBase $r8;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        r4 := @parameter3: android.support.media2.MediaPlaylistAgent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.support.media2.MediaSession2$SessionCallback;

        $r8 = new android.support.media2.MediaLibrarySessionImplBase;

        specialinvoke $r8.<android.support.media2.MediaLibrarySessionImplBase: void <init>(android.support.media2.MediaSession2,android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl getImpl()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        $r1 = specialinvoke r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl getImpl()>();

        $r2 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl) $r1;

        return $r2;
    }

    public void notifyChildrenChanged(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl getImpl()>();

        interfaceinvoke $r4.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifyChildrenChanged(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,android.os.Bundle)>(r1, r2, i0, r3);

        return;
    }

    public void notifyChildrenChanged(java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r3;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl getImpl()>();

        interfaceinvoke $r3.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifyChildrenChanged(java.lang.String,int,android.os.Bundle)>(r1, i0, r2);

        return;
    }

    public void notifySearchResultChanged(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r4;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl getImpl()>();

        interfaceinvoke $r4.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl: void notifySearchResultChanged(android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,android.os.Bundle)>(r1, r2, i0, r3);

        return;
    }

    android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaSession2$SessionCallback $r1;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r2;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        $r1 = specialinvoke r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r2 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback) $r1;

        return $r2;
    }

    volatile android.support.media2.MediaSession2$SessionCallback getCallback()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        return $r1;
    }

    volatile android.support.media2.MediaSession2$MediaSession2Impl getImpl()
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r1;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl getImpl()>();

        return $r1;
    }

    volatile android.support.media2.MediaSession2$MediaSession2Impl createImpl(android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaLibraryService2$MediaLibrarySession r0;
        android.content.Context r1;
        java.lang.String r2;
        android.support.media2.MediaPlayerConnector r3;
        android.support.media2.MediaPlaylistAgent r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        android.support.media2.MediaSession2$SessionCallback r7;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl $r8;

        r0 := @this: android.support.media2.MediaLibraryService2$MediaLibrarySession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        r4 := @parameter3: android.support.media2.MediaPlaylistAgent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.support.media2.MediaSession2$SessionCallback;

        $r8 = virtualinvoke r0.<android.support.media2.MediaLibraryService2$MediaLibrarySession: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl createImpl(android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

