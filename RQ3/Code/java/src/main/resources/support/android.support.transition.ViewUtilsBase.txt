android.support.transition.ViewUtilsBase
<android.support.transition.ViewUtilsBase: float[] mMatrixValues>
    void <init>()
    {
        android.support.transition.ViewUtilsBase r0;

        r0 := @this: android.support.transition.ViewUtilsBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setTransitionAlpha(android.view.View, float)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        float f0, $f1, $f2;
        java.lang.Float r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.support.transition.R$id: int save_non_transition_alpha>;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        r2 = (java.lang.Float) $r3;

        if r2 == null goto label1;

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $f2 = $f1 * f0;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>($f2);

        goto label2;

     label1:
        virtualinvoke r1.<android.view.View: void setAlpha(float)>(f0);

     label2:
        return;
    }

    public float getTransitionAlpha(android.view.View)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        java.lang.Float r2;
        int $i0;
        java.lang.Object $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = <android.support.transition.R$id: int save_non_transition_alpha>;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        r2 = (java.lang.Float) $r3;

        if r2 == null goto label1;

        $f1 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        $f2 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $f3 = $f1 / $f2;

        return $f3;

     label1:
        $f0 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        return $f0;
    }

    public void saveNonTransitionAlpha(android.view.View)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        int $i0, $i1;
        java.lang.Object $r2;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = <android.support.transition.R$id: int save_non_transition_alpha>;

        $r2 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        if $r2 != null goto label1;

        $i1 = <android.support.transition.R$id: int save_non_transition_alpha>;

        $f0 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r1.<android.view.View: void setTag(int,java.lang.Object)>($i1, $r3);

     label1:
        return;
    }

    public void clearNonTransitionAlpha(android.view.View)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label1;

        $i1 = <android.support.transition.R$id: int save_non_transition_alpha>;

        virtualinvoke r1.<android.view.View: void setTag(int,java.lang.Object)>($i1, null);

     label1:
        return;
    }

    public void transformMatrixToGlobal(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1, r4;
        android.graphics.Matrix r2, r5;
        android.view.ViewParent r3;
        boolean $z0, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        r4 = (android.view.View) r3;

        virtualinvoke r0.<android.support.transition.ViewUtilsBase: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>(r4, r2);

        $i2 = virtualinvoke r4.<android.view.View: int getScrollX()>();

        $i3 = neg $i2;

        $f2 = (float) $i3;

        $i4 = virtualinvoke r4.<android.view.View: int getScrollY()>();

        $i5 = neg $i4;

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f2, $f3);

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        r5 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z2 = virtualinvoke r5.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 != 0 goto label2;

        virtualinvoke r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>(r5);

     label2:
        return;
    }

    public void transformMatrixToLocal(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1, r6;
        android.graphics.Matrix r2, r4, $r5, r7;
        android.view.ViewParent r3;
        boolean $z0, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        r6 = (android.view.View) r3;

        virtualinvoke r0.<android.support.transition.ViewUtilsBase: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>(r6, r2);

        $i2 = virtualinvoke r6.<android.view.View: int getScrollX()>();

        $f2 = (float) $i2;

        $i3 = virtualinvoke r6.<android.view.View: int getScrollY()>();

        $f3 = (float) $i3;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f2, $f3);

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        r7 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z2 = virtualinvoke r7.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 != 0 goto label2;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r4 = $r5;

        $z3 = virtualinvoke r7.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r4);

        if $z3 == 0 goto label2;

        virtualinvoke r2.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r4);

     label2:
        return;
    }

    public void setAnimationMatrix(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        android.graphics.Matrix r2;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b4, $b5;
        float[] $r3, r4;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = $i0 / 2;

        $f7 = (float) $i1;

        virtualinvoke r1.<android.view.View: void setPivotX(float)>($f7);

        $i2 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i3 = $i2 / 2;

        $f8 = (float) $i3;

        virtualinvoke r1.<android.view.View: void setPivotY(float)>($f8);

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setRotation(float)>(0.0F);

        goto label6;

     label2:
        r4 = r0.<android.support.transition.ViewUtilsBase: float[] mMatrixValues>;

        if r4 != null goto label3;

        $r3 = newarray (float)[9];

        r4 = $r3;

        r0.<android.support.transition.ViewUtilsBase: float[] mMatrixValues> = $r3;

     label3:
        virtualinvoke r2.<android.graphics.Matrix: void getValues(float[])>(r4);

        f0 = r4[3];

        $f9 = f0 * f0;

        $f10 = 1.0F - $f9;

        $d0 = (double) $f10;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f13 = (float) $d1;

        $f11 = r4[0];

        $b4 = $f11 cmpg 0.0F;

        if $b4 >= 0 goto label4;

        $b5 = -1;

        goto label5;

     label4:
        $b5 = 1;

     label5:
        $f12 = (float) $b5;

        f1 = $f13 * $f12;

        $d3 = (double) f0;

        $d2 = (double) f1;

        $d4 = staticinvoke <java.lang.Math: double atan2(double,double)>($d3, $d2);

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        f2 = (float) $d5;

        $f14 = r4[0];

        f3 = $f14 / f1;

        $f15 = r4[4];

        f4 = $f15 / f1;

        f5 = r4[2];

        f6 = r4[5];

        virtualinvoke r1.<android.view.View: void setPivotX(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setPivotY(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(f5);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(f6);

        virtualinvoke r1.<android.view.View: void setRotation(float)>(f2);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(f3);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(f4);

     label6:
        return;
    }

    public void setLeftTopRightBottom(android.view.View, int, int, int, int)
    {
        android.support.transition.ViewUtilsBase r0;
        android.view.View r1;
        int i0, i1, i2, i3;

        r0 := @this: android.support.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r1.<android.view.View: void setLeft(int)>(i0);

        virtualinvoke r1.<android.view.View: void setTop(int)>(i1);

        virtualinvoke r1.<android.view.View: void setRight(int)>(i2);

        virtualinvoke r1.<android.view.View: void setBottom(int)>(i3);

        return;
    }

