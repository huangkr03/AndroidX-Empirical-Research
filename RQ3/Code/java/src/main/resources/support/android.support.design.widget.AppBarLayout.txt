android.support.design.widget.AppBarLayout
<android.support.design.widget.AppBarLayout: int PENDING_ACTION_NONE>
<android.support.design.widget.AppBarLayout: int PENDING_ACTION_EXPANDED>
<android.support.design.widget.AppBarLayout: int PENDING_ACTION_COLLAPSED>
<android.support.design.widget.AppBarLayout: int PENDING_ACTION_ANIMATE_ENABLED>
<android.support.design.widget.AppBarLayout: int PENDING_ACTION_FORCE>
<android.support.design.widget.AppBarLayout: int INVALID_SCROLL_RANGE>
<android.support.design.widget.AppBarLayout: int totalScrollRange>
<android.support.design.widget.AppBarLayout: int downPreScrollRange>
<android.support.design.widget.AppBarLayout: int downScrollRange>
<android.support.design.widget.AppBarLayout: boolean haveChildWithInterpolator>
<android.support.design.widget.AppBarLayout: int pendingAction>
<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat lastInsets>
<android.support.design.widget.AppBarLayout: java.util.List listeners>
<android.support.design.widget.AppBarLayout: boolean collapsible>
<android.support.design.widget.AppBarLayout: boolean collapsed>
<android.support.design.widget.AppBarLayout: int[] tmpStatesArray>
    public void <init>(android.content.Context)
    {
        android.support.design.widget.AppBarLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0;
        android.support.design.widget.AppBarLayout$1 r7;
        android.view.View r8, r9, r10, r11, r12;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.support.design.widget.AppBarLayout: int totalScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int downPreScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int downScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int pendingAction> = 0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setOrientation(int)>(1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        r8 = (android.view.View) r0;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>(r8);

        $i13 = <android.support.design.widget.R$style: int Widget_Design_AppBarLayout>;

        r9 = (android.view.View) r0;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>(r9, r2, 0, $i13);

     label1:
        $r4 = <android.support.design.widget.R$styleable: int[] AppBarLayout>;

        $i1 = <android.support.design.widget.R$style: int Widget_Design_AppBarLayout>;

        r3 = staticinvoke <android.support.design.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>(r1, r2, $r4, 0, $i1);

        $i2 = <android.support.design.widget.R$styleable: int AppBarLayout_android_background>;

        $r5 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i2);

        r10 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>(r10, $r5);

        $i3 = <android.support.design.widget.R$styleable: int AppBarLayout_expanded>;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i3);

        if $z0 == 0 goto label2;

        $i12 = <android.support.design.widget.R$styleable: int AppBarLayout_expanded>;

        $z6 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i12, 0);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean,boolean)>($z6, 0, 0);

     label2:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label3;

        $i9 = <android.support.design.widget.R$styleable: int AppBarLayout_elevation>;

        $z5 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i9);

        if $z5 == 0 goto label3;

        $i10 = <android.support.design.widget.R$styleable: int AppBarLayout_elevation>;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i10, 0);

        $f0 = (float) $i11;

        r11 = (android.view.View) r0;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r11, $f0);

     label3:
        $i14 = <android.os.Build$VERSION: int SDK_INT>;

        if $i14 < 26 goto label5;

        $i5 = <android.support.design.widget.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i5);

        if $z1 == 0 goto label4;

        $i8 = <android.support.design.widget.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i8, 0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setKeyboardNavigationCluster(boolean)>($z4);

     label4:
        $i6 = <android.support.design.widget.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i6);

        if $z2 == 0 goto label5;

        $i7 = <android.support.design.widget.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i7, 0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setTouchscreenBlocksFocus(boolean)>($z3);

     label5:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        r7 = new android.support.design.widget.AppBarLayout$1;

        specialinvoke r7.<android.support.design.widget.AppBarLayout$1: void <init>(android.support.design.widget.AppBarLayout)>(r0);

        r12 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>(r12, r7);

        return;
    }

    public void addOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener r1;
        java.util.List $r2, $r3, $r4;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.support.design.widget.AppBarLayout$OnOffsetChangedListener;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.AppBarLayout: java.util.List listeners> = $r5;

     label1:
        if r1 == null goto label2;

        $r3 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void removeOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener r1;
        java.util.List $r2, $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.support.design.widget.AppBarLayout$OnOffsetChangedListener;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5;
        android.view.View r1;
        android.support.design.widget.AppBarLayout$LayoutParams r2;
        android.view.animation.Interpolator r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

        r0.<android.support.design.widget.AppBarLayout: boolean haveChildWithInterpolator> = 0;

        i5 = 0;

        i4 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label1:
        if i5 >= i4 goto label3;

        r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i5);

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.AppBarLayout$LayoutParams) $r4;

        r3 = virtualinvoke r2.<android.support.design.widget.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()>();

        if r3 == null goto label2;

        r0.<android.support.design.widget.AppBarLayout: boolean haveChildWithInterpolator> = 1;

        goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        specialinvoke r0.<android.support.design.widget.AppBarLayout: void updateCollapsible()>();

        return;
    }

    private void updateCollapsible()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams $r3;
        boolean $z1, z2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z2 = 0;

        i1 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        $z1 = virtualinvoke $r3.<android.support.design.widget.AppBarLayout$LayoutParams: boolean isCollapsible()>();

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        specialinvoke r0.<android.support.design.widget.AppBarLayout: boolean setCollapsibleState(boolean)>(z2);

        return;
    }

    private void invalidateScrollRanges()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r0.<android.support.design.widget.AppBarLayout: int totalScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int downPreScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int downScrollRange> = -1;

        return;
    }

    public void setOrientation(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AppBarLayout is always vertical and does not support horizontal orientation");

        throw $r1;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>(i0);

        return;
    }

    public void setExpanded(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, $z1;
        android.view.View r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        r1 = (android.view.View) r0;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r1);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean)>(z0, $z1);

        return;
    }

    public void setExpanded(boolean, boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean,boolean)>(z0, z1, 1);

        return;
    }

    private void setExpanded(boolean, boolean, boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, z1, z2;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 2;

     label2:
        if z1 == 0 goto label3;

        $b3 = 4;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        $b0 = $b2 | $b3;

        if z2 == 0 goto label5;

        $b4 = 8;

        goto label6;

     label5:
        $b4 = 0;

     label6:
        $b1 = $b0 | $b4;

        r0.<android.support.design.widget.AppBarLayout: int pendingAction> = $b1;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void requestLayout()>();

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.design.widget.AppBarLayout$LayoutParams;

        return $z0;
    }

    protected android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = new android.support.design.widget.AppBarLayout$LayoutParams;

        specialinvoke $r1.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }

    public android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        int $i0;
        boolean $z0, $z1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2, $r3, $r5;
        android.view.ViewGroup$MarginLayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r6;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z1 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z1 == 0 goto label1;

        $r5 = new android.support.design.widget.AppBarLayout$LayoutParams;

        $r6 = (android.widget.LinearLayout$LayoutParams) r1;

        specialinvoke $r5.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>($r6);

        return $r5;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r3 = new android.support.design.widget.AppBarLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    boolean hasChildWithInterpolator()
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 = r0.<android.support.design.widget.AppBarLayout: boolean haveChildWithInterpolator>;

        return $z0;
    }

    public final int getTotalScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, $i15, $i16;
        android.view.View r1;
        android.support.design.widget.AppBarLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i3 = r0.<android.support.design.widget.AppBarLayout: int totalScrollRange>;

        if $i3 == -1 goto label1;

        $i11 = r0.<android.support.design.widget.AppBarLayout: int totalScrollRange>;

        return $i11;

     label1:
        i12 = 0;

        i13 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label2:
        if i13 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i13);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.AppBarLayout$LayoutParams) $r3;

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i2 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int scrollFlags>;

        $i4 = i2 & 1;

        if $i4 == 0 goto label4;

        $i5 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i7 = i1 + $i5;

        $i6 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i8 = $i7 + $i6;

        i12 = i12 + $i8;

        $i9 = i2 & 2;

        if $i9 == 0 goto label3;

        $i10 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r1);

        i12 = i12 - $i10;

        goto label4;

     label3:
        i13 = i13 + 1;

        goto label2;

     label4:
        $i14 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i15 = i12 - $i14;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        r0.<android.support.design.widget.AppBarLayout: int totalScrollRange> = $i16;

        return $i16;
    }

    boolean hasScrollableChildren()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getUpNestedPreScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        return $i0;
    }

    int getDownNestedPreScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.View r1;
        android.support.design.widget.AppBarLayout$LayoutParams r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i2 = r0.<android.support.design.widget.AppBarLayout: int downPreScrollRange>;

        if $i2 == -1 goto label1;

        $i16 = r0.<android.support.design.widget.AppBarLayout: int downPreScrollRange>;

        return $i16;

     label1:
        i17 = 0;

        $i3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

        i18 = $i3 - 1;

     label2:
        if i18 < 0 goto label7;

        r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i18);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.AppBarLayout$LayoutParams) $r3;

        i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i1 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int scrollFlags>;

        $i5 = i1 & 5;

        if $i5 != 5 goto label5;

        $i7 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i6 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i8 = $i7 + $i6;

        i19 = i17 + $i8;

        $i9 = i1 & 8;

        if $i9 == 0 goto label3;

        $i15 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r1);

        i17 = i19 + $i15;

        goto label6;

     label3:
        $i10 = i1 & 2;

        if $i10 == 0 goto label4;

        $i13 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r1);

        $i14 = i0 - $i13;

        i17 = i19 + $i14;

        goto label6;

     label4:
        $i11 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i12 = i0 - $i11;

        i17 = i19 + $i12;

        goto label6;

     label5:
        if i17 <= 0 goto label6;

        goto label7;

     label6:
        i18 = i18 + -1;

        goto label2;

     label7:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, i17);

        r0.<android.support.design.widget.AppBarLayout: int downPreScrollRange> = $i4;

        return $i4;
    }

    int getDownNestedScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, $i16;
        android.view.View r1;
        android.support.design.widget.AppBarLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i2 = r0.<android.support.design.widget.AppBarLayout: int downScrollRange>;

        if $i2 == -1 goto label1;

        $i11 = r0.<android.support.design.widget.AppBarLayout: int downScrollRange>;

        return $i11;

     label1:
        i12 = 0;

        i13 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label2:
        if i13 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i13);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.AppBarLayout$LayoutParams) $r3;

        i14 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i3 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i5 = $i4 + $i3;

        i15 = i14 + $i5;

        i1 = r2.<android.support.design.widget.AppBarLayout$LayoutParams: int scrollFlags>;

        $i6 = i1 & 1;

        if $i6 == 0 goto label4;

        i12 = i12 + i15;

        $i7 = i1 & 2;

        if $i7 == 0 goto label3;

        $i8 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r1);

        $i9 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i10 = $i8 + $i9;

        i12 = i12 - $i10;

        goto label4;

     label3:
        i13 = i13 + 1;

        goto label2;

     label4:
        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, i12);

        r0.<android.support.design.widget.AppBarLayout: int downScrollRange> = $i16;

        return $i16;
    }

    void dispatchOffsetUpdates(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1, i2;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener r1;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        if $r2 == null goto label3;

        i2 = 0;

        $r3 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        i1 = interfaceinvoke $r3.<java.util.List: int size()>();

     label1:
        if i2 >= i1 goto label3;

        $r4 = r0.<android.support.design.widget.AppBarLayout: java.util.List listeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (android.support.design.widget.AppBarLayout$OnOffsetChangedListener) $r5;

        if r1 == null goto label2;

        interfaceinvoke r1.<android.support.design.widget.AppBarLayout$OnOffsetChangedListener: void onOffsetChanged(android.support.design.widget.AppBarLayout,int)>(r0, i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    final int getMinimumHeightForVisibleOverlappingContent()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View $r1, r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        r2 = (android.view.View) r0;

        i1 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r2);

        if i1 == 0 goto label1;

        $i9 = i1 * 2;

        $i10 = $i9 + i0;

        return $i10;

     label1:
        i2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

        if i2 < 1 goto label2;

        $i8 = i2 - 1;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>($i8);

        $i11 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        goto label3;

     label2:
        $i11 = 0;

     label3:
        i3 = $i11;

        if i3 == 0 goto label4;

        $i6 = i3 * 2;

        $i7 = $i6 + i0;

        return $i7;

     label4:
        $i4 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getHeight()>();

        $i5 = $i4 / 3;

        return $i5;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8;
        int[] r1, r2, $r3, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 := @parameter0: int;

        $r3 = r0.<android.support.design.widget.AppBarLayout: int[] tmpStatesArray>;

        if $r3 != null goto label1;

        $r5 = newarray (int)[2];

        r0.<android.support.design.widget.AppBarLayout: int[] tmpStatesArray> = $r5;

     label1:
        r1 = r0.<android.support.design.widget.AppBarLayout: int[] tmpStatesArray>;

        $i1 = lengthof r1;

        $i2 = i0 + $i1;

        r2 = specialinvoke r0.<android.widget.LinearLayout: int[] onCreateDrawableState(int)>($i2);

        $z0 = r0.<android.support.design.widget.AppBarLayout: boolean collapsible>;

        if $z0 == 0 goto label2;

        $i6 = <android.support.design.widget.R$attr: int state_collapsible>;

        goto label3;

     label2:
        $i3 = <android.support.design.widget.R$attr: int state_collapsible>;

        $i6 = neg $i3;

     label3:
        r1[0] = $i6;

        $z1 = r0.<android.support.design.widget.AppBarLayout: boolean collapsible>;

        if $z1 == 0 goto label4;

        $z2 = r0.<android.support.design.widget.AppBarLayout: boolean collapsed>;

        if $z2 == 0 goto label4;

        $i8 = <android.support.design.widget.R$attr: int state_collapsed>;

        goto label5;

     label4:
        $i4 = <android.support.design.widget.R$attr: int state_collapsed>;

        $i8 = neg $i4;

     label5:
        r1[1] = $i8;

        $r7 = staticinvoke <android.support.design.widget.AppBarLayout: int[] mergeDrawableStates(int[],int[])>(r2, r1);

        return $r7;
    }

    private boolean setCollapsibleState(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.AppBarLayout: boolean collapsible>;

        if $z1 == z0 goto label1;

        r0.<android.support.design.widget.AppBarLayout: boolean collapsible> = z0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void refreshDrawableState()>();

        return 1;

     label1:
        return 0;
    }

    boolean setCollapsedState(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.AppBarLayout: boolean collapsed>;

        if $z1 == z0 goto label1;

        r0.<android.support.design.widget.AppBarLayout: boolean collapsed> = z0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void refreshDrawableState()>();

        return 1;

     label1:
        return 0;
    }

    public void setTargetElevation(float)
    {
        android.support.design.widget.AppBarLayout r0;
        float f0;
        int $i0;
        android.view.View r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        f0 := @parameter0: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        r1 = (android.view.View) r0;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r1, f0);

     label1:
        return;
    }

    public float getTargetElevation()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        return 0.0F;
    }

    int getPendingAction()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = r0.<android.support.design.widget.AppBarLayout: int pendingAction>;

        return $i0;
    }

    void resetPendingAction()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r0.<android.support.design.widget.AppBarLayout: int pendingAction> = 0;

        return;
    }

    final int getTopInset()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1, $r2;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat lastInsets>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat lastInsets>;

        $i0 = virtualinvoke $r2.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    android.support.v4.view.WindowInsetsCompat onWindowInsetChanged(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.v4.view.WindowInsetsCompat r1, $r2, r3;
        boolean $z0, $z1;
        android.view.View r4;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        r3 = null;

        r4 = (android.view.View) r0;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r4);

        if $z0 == 0 goto label1;

        r3 = r1;

     label1:
        $r2 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat lastInsets>;

        $z1 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r2, r3);

        if $z1 != 0 goto label2;

        r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat lastInsets> = r3;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

     label2:
        return r1;
    }

    protected volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected volatile android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        r2 = (android.view.ViewGroup$LayoutParams) $r1;

        return r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams r1, r3;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

