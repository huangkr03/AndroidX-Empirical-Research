android.support.v4.view.ViewCompat
<android.support.v4.view.ViewCompat: java.lang.String TAG>
<android.support.v4.view.ViewCompat: int OVER_SCROLL_ALWAYS>
<android.support.v4.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS>
<android.support.v4.view.ViewCompat: int OVER_SCROLL_NEVER>
<android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO>
<android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES>
<android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO>
<android.support.v4.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS>
<android.support.v4.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_NONE>
<android.support.v4.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_POLITE>
<android.support.v4.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE>
<android.support.v4.view.ViewCompat: int LAYER_TYPE_NONE>
<android.support.v4.view.ViewCompat: int LAYER_TYPE_SOFTWARE>
<android.support.v4.view.ViewCompat: int LAYER_TYPE_HARDWARE>
<android.support.v4.view.ViewCompat: int LAYOUT_DIRECTION_LTR>
<android.support.v4.view.ViewCompat: int LAYOUT_DIRECTION_RTL>
<android.support.v4.view.ViewCompat: int LAYOUT_DIRECTION_INHERIT>
<android.support.v4.view.ViewCompat: int LAYOUT_DIRECTION_LOCALE>
<android.support.v4.view.ViewCompat: int MEASURED_SIZE_MASK>
<android.support.v4.view.ViewCompat: int MEASURED_STATE_MASK>
<android.support.v4.view.ViewCompat: int MEASURED_HEIGHT_STATE_SHIFT>
<android.support.v4.view.ViewCompat: int MEASURED_STATE_TOO_SMALL>
<android.support.v4.view.ViewCompat: int SCROLL_AXIS_NONE>
<android.support.v4.view.ViewCompat: int SCROLL_AXIS_HORIZONTAL>
<android.support.v4.view.ViewCompat: int SCROLL_AXIS_VERTICAL>
<android.support.v4.view.ViewCompat: int TYPE_TOUCH>
<android.support.v4.view.ViewCompat: int TYPE_NON_TOUCH>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_TOP>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_BOTTOM>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_LEFT>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_RIGHT>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_START>
<android.support.v4.view.ViewCompat: int SCROLL_INDICATOR_END>
<android.support.v4.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId>
<android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinWidthField>
<android.support.v4.view.ViewCompat: boolean sMinWidthFieldFetched>
<android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinHeightField>
<android.support.v4.view.ViewCompat: boolean sMinHeightFieldFetched>
<android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach>
<android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach>
<android.support.v4.view.ViewCompat: boolean sTempDetachBound>
<android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap>
<android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap>
<android.support.v4.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod>
<android.support.v4.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField>
<android.support.v4.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed>
<android.support.v4.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect>
    private static android.graphics.Rect getEmptyTempRect()
    {
        java.lang.ThreadLocal $r0, $r1, $r4, $r5;
        java.lang.Object $r2;
        android.graphics.Rect $r3, r6;

        $r0 = <android.support.v4.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect>;

        if $r0 != null goto label1;

        $r5 = new java.lang.ThreadLocal;

        specialinvoke $r5.<java.lang.ThreadLocal: void <init>()>();

        <android.support.v4.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect> = $r5;

     label1:
        $r1 = <android.support.v4.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r6 = (android.graphics.Rect) $r2;

        if r6 != null goto label2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r6 = $r3;

        $r4 = <android.support.v4.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>(r6);

     label2:
        virtualinvoke r6.<android.graphics.Rect: void setEmpty()>();

        return r6;
    }

    public static boolean canScrollHorizontally(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean canScrollHorizontally(int)>(i0);

        return $z0;
    }

    public static boolean canScrollVertically(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean canScrollVertically(int)>(i0);

        return $z0;
    }

    public static int getOverScrollMode(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getOverScrollMode()>();

        return $i0;
    }

    public static void setOverScrollMode(android.view.View, int)
    {
        android.view.View r0;
        int i0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void setOverScrollMode(int)>(i0);

        return;
    }

    public static void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public static void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public static void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.view.View r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()>();

        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r2);

        return;
    }

    public static void setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)
    {
        android.view.View r0;
        android.support.v4.view.AccessibilityDelegateCompat r1;
        android.view.View$AccessibilityDelegate $r3;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.AccessibilityDelegateCompat;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<android.support.v4.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()>();

     label2:
        virtualinvoke r0.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r3);

        return;
    }

    public static transient void setAutofillHints(android.view.View, java.lang.String[])
    {
        android.view.View r0;
        java.lang.String[] r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.String[];

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setAutofillHints(java.lang.String[])>(r1);

     label1:
        return;
    }

    public static int getImportantForAutofill(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getImportantForAutofill()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setImportantForAutofill(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setImportantForAutofill(int)>(i0);

     label1:
        return;
    }

    public static boolean isImportantForAutofill(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isImportantForAutofill()>();

        return $z0;

     label1:
        return 1;
    }

    public static boolean hasAccessibilityDelegate(android.view.View)
    {
        android.view.View r0;
        boolean $z0, $z1;
        java.lang.reflect.Field $r1, $r2, $r5, $r6;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.Throwable $r7, $r8, r9, r10;

        r0 := @parameter0: android.view.View;

        $z0 = <android.support.v4.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField>;

        if $r1 != null goto label5;

     label2:
        $r4 = class "Landroid/view/View;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mAccessibilityDelegate");

        <android.support.v4.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField> = $r5;

        $r6 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField>;

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r9 = $r8;

        <android.support.v4.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> = 1;

        return 0;

     label5:
        $r2 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r3 == null goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        r10 = $r7;

        <android.support.v4.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> = 1;

        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label7 with label8;
    }

    public static boolean hasTransientState(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasTransientState()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setHasTransientState(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void setHasTransientState(boolean)>(z0);

     label1:
        return;
    }

    public static void postInvalidateOnAnimation(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void postInvalidateOnAnimation()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.view.View: void postInvalidate()>();

     label2:
        return;
    }

    public static void postInvalidateOnAnimation(android.view.View, int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.View: void postInvalidate(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    public static void postOnAnimation(android.view.View, java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        int $i0;
        long $l1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.Runnable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void postOnAnimation(java.lang.Runnable)>(r1);

        goto label2;

     label1:
        $l1 = staticinvoke <android.animation.ValueAnimator: long getFrameDelay()>();

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>(r1, $l1);

     label2:
        return;
    }

    public static void postOnAnimationDelayed(android.view.View, java.lang.Runnable, long)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        long l0, $l2, $l3;
        int $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>(r1, l0);

        goto label2;

     label1:
        $l2 = staticinvoke <android.animation.ValueAnimator: long getFrameDelay()>();

        $l3 = $l2 + l0;

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>(r1, $l3);

     label2:
        return;
    }

    public static int getImportantForAccessibility(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getImportantForAccessibility()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setImportantForAccessibility(android.view.View, int)
    {
        android.view.View r0;
        int $i0, $i1, i2;

        r0 := @parameter0: android.view.View;

        i2 := @parameter1: int;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        virtualinvoke r0.<android.view.View: void setImportantForAccessibility(int)>(i2);

        goto label3;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label3;

        if i2 != 4 goto label2;

        i2 = 2;

     label2:
        virtualinvoke r0.<android.view.View: void setImportantForAccessibility(int)>(i2);

     label3:
        return;
    }

    public static boolean isImportantForAccessibility(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isImportantForAccessibility()>();

        return $z0;

     label1:
        return 1;
    }

    public static boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.view.View r0;
        int i0, $i1;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        return $z0;

     label1:
        return 0;
    }

    public static android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityNodeProvider r1;
        int $i0;
        android.support.v4.view.accessibility.AccessibilityNodeProviderCompat $r2;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        r1 = virtualinvoke r0.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r1 == null goto label1;

        $r2 = new android.support.v4.view.accessibility.AccessibilityNodeProviderCompat;

        specialinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: void <init>(java.lang.Object)>(r1);

        return $r2;

     label1:
        return null;
    }

    public static float getAlpha(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getAlpha()>();

        return $f0;
    }

    public static void setLayerType(android.view.View, int, android.graphics.Paint)
    {
        android.view.View r0;
        int i0;
        android.graphics.Paint r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Paint;

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(i0, r1);

        return;
    }

    public static int getLayerType(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        return $i0;
    }

    public static int getLabelFor(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getLabelFor()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setLabelFor(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        virtualinvoke r0.<android.view.View: void setLabelFor(int)>(i0);

     label1:
        return;
    }

    public static void setLayerPaint(android.view.View, android.graphics.Paint)
    {
        android.view.View r0;
        android.graphics.Paint r1;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Paint;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        virtualinvoke r0.<android.view.View: void setLayerPaint(android.graphics.Paint)>(r1);

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>($i1, r1);

        virtualinvoke r0.<android.view.View: void invalidate()>();

     label2:
        return;
    }

    public static int getLayoutDirection(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setLayoutDirection(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        virtualinvoke r0.<android.view.View: void setLayoutDirection(int)>(i0);

     label1:
        return;
    }

    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    {
        android.view.View r0;
        int $i0;
        android.view.ViewParent $r1, $r2;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        return $r1;
    }

    public static android.view.View requireViewById(android.view.View, int)
    {
        android.view.View r0, r1, $r3;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $r3 = virtualinvoke r0.<android.view.View: android.view.View requireViewById(int)>(i0);

        return $r3;

     label1:
        r1 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>(i0);

        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ID does not reference a View inside this View");

        throw $r2;

     label2:
        return r1;
    }

    public static boolean isOpaque(android.view.View)
    {
        android.view.View r0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        return $z0;
    }

    public static int resolveSizeAndState(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i0, i1, i2);

        return $i3;
    }

    public static int getMeasuredWidthAndState(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getMeasuredWidthAndState()>();

        return $i0;
    }

    public static int getMeasuredHeightAndState(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getMeasuredHeightAndState()>();

        return $i0;
    }

    public static int getMeasuredState(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getMeasuredState()>();

        return $i0;
    }

    public static int combineMeasuredStates(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(i0, i1);

        return $i2;
    }

    public static int getAccessibilityLiveRegion(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getAccessibilityLiveRegion()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setAccessibilityLiveRegion(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 19 goto label1;

        virtualinvoke r0.<android.view.View: void setAccessibilityLiveRegion(int)>(i0);

     label1:
        return;
    }

    public static int getPaddingStart(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingStart()>();

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<android.view.View: int getPaddingLeft()>();

        return $i1;
    }

    public static int getPaddingEnd(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingEnd()>();

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<android.view.View: int getPaddingRight()>();

        return $i1;
    }

    public static void setPaddingRelative(android.view.View, int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 17 goto label1;

        virtualinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    private static void bindTempDetach()
    {
        java.lang.Throwable r0, $r7;
        java.lang.Class[] $r1, $r4;
        java.lang.Class $r2, $r5;
        java.lang.reflect.Method $r3, $r6;

     label1:
        $r2 = class "Landroid/view/View;";

        $r1 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("dispatchStartTemporaryDetach", $r1);

        <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach> = $r3;

        $r5 = class "Landroid/view/View;";

        $r4 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("dispatchFinishTemporaryDetach", $r4);

        <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r0 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Couldn\'t find method", r0);

     label4:
        <android.support.v4.view.ViewCompat: boolean sTempDetachBound> = 1;

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public static void dispatchStartTemporaryDetach(android.view.View)
    {
        android.view.View r0;
        java.lang.Throwable r1, $r6;
        int $i0;
        boolean $z0;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        virtualinvoke r0.<android.view.View: void dispatchStartTemporaryDetach()>();

        goto label7;

     label1:
        $z0 = <android.support.v4.view.ViewCompat: boolean sTempDetachBound>;

        if $z0 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void bindTempDetach()>();

     label2:
        $r2 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach>;

        if $r2 == null goto label6;

     label3:
        $r4 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Error calling dispatchStartTemporaryDetach", r1);

        goto label7;

     label6:
        virtualinvoke r0.<android.view.View: void onStartTemporaryDetach()>();

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void dispatchFinishTemporaryDetach(android.view.View)
    {
        android.view.View r0;
        java.lang.Throwable r1, $r6;
        int $i0;
        boolean $z0;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        virtualinvoke r0.<android.view.View: void dispatchFinishTemporaryDetach()>();

        goto label7;

     label1:
        $z0 = <android.support.v4.view.ViewCompat: boolean sTempDetachBound>;

        if $z0 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void bindTempDetach()>();

     label2:
        $r2 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach>;

        if $r2 == null goto label6;

     label3:
        $r4 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Error calling dispatchFinishTemporaryDetach", r1);

        goto label7;

     label6:
        virtualinvoke r0.<android.view.View: void onFinishTemporaryDetach()>();

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static float getTranslationX(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getTranslationX()>();

        return $f0;
    }

    public static float getTranslationY(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getTranslationY()>();

        return $f0;
    }

    public static android.graphics.Matrix getMatrix(android.view.View)
    {
        android.view.View r0;
        android.graphics.Matrix $r1;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        return $r1;
    }

    public static int getMinimumWidth(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.reflect.Field $r1, $r5, $r6, $r10;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.lang.Class $r4;
        java.lang.Throwable $r7, $r8, r9, r11;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label01;

        $i2 = virtualinvoke r0.<android.view.View: int getMinimumWidth()>();

        return $i2;

     label01:
        $z0 = <android.support.v4.view.ViewCompat: boolean sMinWidthFieldFetched>;

        if $z0 != 0 goto label06;

     label02:
        $r4 = class "Landroid/view/View;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMinWidth");

        <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinWidthField> = $r5;

        $r6 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinWidthField>;

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

        r9 = $r8;

     label05:
        <android.support.v4.view.ViewCompat: boolean sMinWidthFieldFetched> = 1;

     label06:
        $r10 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinWidthField>;

        if $r10 == null goto label10;

     label07:
        $r1 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinWidthField>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label08:
        return $i1;

     label09:
        $r7 := @caughtexception;

        r11 = $r7;

     label10:
        return 0;

        catch java.lang.NoSuchFieldException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static int getMinimumHeight(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.reflect.Field $r1, $r5, $r6, $r10;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.lang.Class $r4;
        java.lang.Throwable $r7, $r8, r9, r11;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label01;

        $i2 = virtualinvoke r0.<android.view.View: int getMinimumHeight()>();

        return $i2;

     label01:
        $z0 = <android.support.v4.view.ViewCompat: boolean sMinHeightFieldFetched>;

        if $z0 != 0 goto label06;

     label02:
        $r4 = class "Landroid/view/View;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMinHeight");

        <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinHeightField> = $r5;

        $r6 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinHeightField>;

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label03:
        goto label05;

     label04:
        $r7 := @caughtexception;

        r9 = $r7;

     label05:
        <android.support.v4.view.ViewCompat: boolean sMinHeightFieldFetched> = 1;

     label06:
        $r10 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinHeightField>;

        if $r10 == null goto label10;

     label07:
        $r1 = <android.support.v4.view.ViewCompat: java.lang.reflect.Field sMinHeightField>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label08:
        return $i1;

     label09:
        $r8 := @caughtexception;

        r11 = $r8;

     label10:
        return 0;

        catch java.lang.NoSuchFieldException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)
    {
        android.view.View r0;
        java.util.WeakHashMap $r1, $r2, $r5, $r7;
        java.lang.Object $r3;
        android.support.v4.view.ViewPropertyAnimatorCompat $r4, r8;

        r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap>;

        if $r1 != null goto label1;

        $r7 = new java.util.WeakHashMap;

        specialinvoke $r7.<java.util.WeakHashMap: void <init>()>();

        <android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap> = $r7;

     label1:
        $r2 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (android.support.v4.view.ViewPropertyAnimatorCompat) $r3;

        if r8 != null goto label2;

        $r4 = new android.support.v4.view.ViewPropertyAnimatorCompat;

        specialinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: void <init>(android.view.View)>(r0);

        r8 = $r4;

        $r5 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap>;

        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r8);

     label2:
        return r8;
    }

    public static void setTranslationX(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setTranslationX(float)>(f0);

        return;
    }

    public static void setTranslationY(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>(f0);

        return;
    }

    public static void setAlpha(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setAlpha(float)>(f0);

        return;
    }

    public static void setX(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setX(float)>(f0);

        return;
    }

    public static void setY(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setY(float)>(f0);

        return;
    }

    public static void setRotation(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setRotation(float)>(f0);

        return;
    }

    public static void setRotationX(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setRotationX(float)>(f0);

        return;
    }

    public static void setRotationY(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setRotationY(float)>(f0);

        return;
    }

    public static void setScaleX(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setScaleX(float)>(f0);

        return;
    }

    public static void setScaleY(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setScaleY(float)>(f0);

        return;
    }

    public static float getPivotX(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getPivotX()>();

        return $f0;
    }

    public static void setPivotX(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setPivotX(float)>(f0);

        return;
    }

    public static float getPivotY(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getPivotY()>();

        return $f0;
    }

    public static void setPivotY(android.view.View, float)
    {
        android.view.View r0;
        float f0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.View: void setPivotY(float)>(f0);

        return;
    }

    public static float getRotation(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getRotation()>();

        return $f0;
    }

    public static float getRotationX(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getRotationX()>();

        return $f0;
    }

    public static float getRotationY(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getRotationY()>();

        return $f0;
    }

    public static float getScaleX(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getScaleX()>();

        return $f0;
    }

    public static float getScaleY(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getScaleY()>();

        return $f0;
    }

    public static float getX(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getX()>();

        return $f0;
    }

    public static float getY(android.view.View)
    {
        android.view.View r0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getY()>();

        return $f0;
    }

    public static void setElevation(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int $i0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void setElevation(float)>(f0);

     label1:
        return;
    }

    public static float getElevation(android.view.View)
    {
        android.view.View r0;
        int $i0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $f0 = virtualinvoke r0.<android.view.View: float getElevation()>();

        return $f0;

     label1:
        return 0.0F;
    }

    public static void setTranslationZ(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int $i0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void setTranslationZ(float)>(f0);

     label1:
        return;
    }

    public static float getTranslationZ(android.view.View)
    {
        android.view.View r0;
        int $i0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $f0 = virtualinvoke r0.<android.view.View: float getTranslationZ()>();

        return $f0;

     label1:
        return 0.0F;
    }

    public static void setTransitionName(android.view.View, java.lang.String)
    {
        android.view.View r0;
        java.lang.String r1;
        int $i0;
        java.util.WeakHashMap $r2, $r3, $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void setTransitionName(java.lang.String)>(r1);

        goto label3;

     label1:
        $r2 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap>;

        if $r2 != null goto label2;

        $r5 = new java.util.WeakHashMap;

        specialinvoke $r5.<java.util.WeakHashMap: void <init>()>();

        <android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap> = $r5;

     label2:
        $r3 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap>;

        virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

     label3:
        return;
    }

    public static java.lang.String getTransitionName(android.view.View)
    {
        android.view.View r0;
        int $i0;
        java.util.WeakHashMap $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r5 = virtualinvoke r0.<android.view.View: java.lang.String getTransitionName()>();

        return $r5;

     label1:
        $r1 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap>;

        if $r1 != null goto label2;

        return null;

     label2:
        $r2 = <android.support.v4.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static int getWindowSystemUiVisibility(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getWindowSystemUiVisibility()>();

        return $i1;

     label1:
        return 0;
    }

    public static void requestApplyInsets(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 20 goto label1;

        virtualinvoke r0.<android.view.View: void requestApplyInsets()>();

        goto label2;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label2;

        virtualinvoke r0.<android.view.View: void requestFitSystemWindows()>();

     label2:
        return;
    }

    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup r0;
        boolean z0;
        java.lang.reflect.Method $r1, $r6, $r7, $r13;
        java.lang.Class[] $r3;
        java.lang.Class $r4, $r5;
        java.lang.Throwable $r8, $r9, $r10, $r11, r12, r16, r17, r18;
        java.lang.Object[] $r14;
        java.lang.Boolean $r15;

        r0 := @parameter0: android.view.ViewGroup;

        z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        if $r1 != null goto label05;

     label01:
        $r5 = class "Landroid/view/ViewGroup;";

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setChildrenDrawingOrderEnabled", $r3);

        <android.support.v4.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod> = $r6;

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        r12 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to find childrenDrawingOrderEnabled", r12);

     label04:
        $r7 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        $r13 = <android.support.v4.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r14[0] = $r15;

        virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r14);

     label06:
        goto label10;

     label07:
        $r9 := @caughtexception;

        r16 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r16);

        goto label10;

     label08:
        $r8 := @caughtexception;

        r17 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r17);

        goto label10;

     label09:
        $r10 := @caughtexception;

        r18 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r18);

     label10:
        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label08;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
    }

    public static boolean getFitsSystemWindows(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean getFitsSystemWindows()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setFitsSystemWindows(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.View: void setFitsSystemWindows(boolean)>(z0);

        return;
    }

    public static void jumpDrawablesToCurrentState(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        return;
    }

    public static void setOnApplyWindowInsetsListener(android.view.View, android.support.v4.view.OnApplyWindowInsetsListener)
    {
        android.view.View r0;
        android.support.v4.view.OnApplyWindowInsetsListener r1;
        int $i0;
        android.support.v4.view.ViewCompat$1 $r2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.OnApplyWindowInsetsListener;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        if r1 != null goto label1;

        virtualinvoke r0.<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>(null);

        return;

     label1:
        $r2 = new android.support.v4.view.ViewCompat$1;

        specialinvoke $r2.<android.support.v4.view.ViewCompat$1: void <init>(android.support.v4.view.OnApplyWindowInsetsListener)>(r1);

        virtualinvoke r0.<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>($r2);

     label2:
        return;
    }

    public static android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat)
    {
        android.view.View r0;
        android.support.v4.view.WindowInsetsCompat r1, $r4;
        android.view.WindowInsets r2, $r5, r6;
        int $i0;
        java.lang.Object $r3;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r3 = staticinvoke <android.support.v4.view.WindowInsetsCompat: java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat)>(r1);

        r6 = (android.view.WindowInsets) $r3;

        r2 = virtualinvoke r0.<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>(r6);

        if r2 == r6 goto label1;

        $r5 = new android.view.WindowInsets;

        specialinvoke $r5.<android.view.WindowInsets: void <init>(android.view.WindowInsets)>(r2);

        r6 = $r5;

     label1:
        $r4 = staticinvoke <android.support.v4.view.WindowInsetsCompat: android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object)>(r6);

        return $r4;

     label2:
        return r1;
    }

    public static android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat)
    {
        android.view.View r0;
        android.support.v4.view.WindowInsetsCompat r1, $r4;
        android.view.WindowInsets r2, $r5, r6;
        int $i0;
        java.lang.Object $r3;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r3 = staticinvoke <android.support.v4.view.WindowInsetsCompat: java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat)>(r1);

        r6 = (android.view.WindowInsets) $r3;

        r2 = virtualinvoke r0.<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(r6);

        if r2 == r6 goto label1;

        $r5 = new android.view.WindowInsets;

        specialinvoke $r5.<android.view.WindowInsets: void <init>(android.view.WindowInsets)>(r2);

        r6 = $r5;

     label1:
        $r4 = staticinvoke <android.support.v4.view.WindowInsetsCompat: android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object)>(r6);

        return $r4;

     label2:
        return r1;
    }

    public static void setSaveFromParentEnabled(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.View: void setSaveFromParentEnabled(boolean)>(z0);

        return;
    }

    public static void setActivated(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.View: void setActivated(boolean)>(z0);

        return;
    }

    public static boolean hasOverlappingRendering(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasOverlappingRendering()>();

        return $z0;

     label1:
        return 1;
    }

    public static boolean isPaddingRelative(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isPaddingRelative()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        return;
    }

    public static android.content.res.ColorStateList getBackgroundTintList(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;
        android.support.v4.view.TintableBackgroundView $r1;
        android.content.res.ColorStateList $r2, $r3;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = virtualinvoke r0.<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>();

        return $r2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.TintableBackgroundView;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.TintableBackgroundView) r0;

        $r3 = interfaceinvoke $r1.<android.support.v4.view.TintableBackgroundView: android.content.res.ColorStateList getSupportBackgroundTintList()>();

        goto label3;

     label2:
        $r3 = null;

     label3:
        return $r3;
    }

    public static void setBackgroundTintList(android.view.View, android.content.res.ColorStateList)
    {
        android.view.View r0;
        android.content.res.ColorStateList r1, $r4;
        android.graphics.drawable.Drawable r2;
        boolean z0, $z1, $z2, $z4;
        int $i0, $i1;
        android.support.v4.view.TintableBackgroundView $r3;
        int[] $r5;
        android.graphics.PorterDuff$Mode $r6;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.content.res.ColorStateList;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label6;

        virtualinvoke r0.<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>(r1);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 != 21 goto label7;

        r2 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke r0.<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>();

        if $r4 != null goto label1;

        $r6 = virtualinvoke r0.<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()>();

        if $r6 == null goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        if r2 == null goto label5;

        if z0 == 0 goto label5;

        $z2 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

     label4:
        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r2);

     label5:
        goto label7;

     label6:
        $z1 = r0 instanceof android.support.v4.view.TintableBackgroundView;

        if $z1 == 0 goto label7;

        $r3 = (android.support.v4.view.TintableBackgroundView) r0;

        interfaceinvoke $r3.<android.support.v4.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)>(r1);

     label7:
        return;
    }

    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;
        android.support.v4.view.TintableBackgroundView $r1;
        android.graphics.PorterDuff$Mode $r2, $r3;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = virtualinvoke r0.<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()>();

        return $r2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.TintableBackgroundView;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.TintableBackgroundView) r0;

        $r3 = interfaceinvoke $r1.<android.support.v4.view.TintableBackgroundView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>();

        goto label3;

     label2:
        $r3 = null;

     label3:
        return $r3;
    }

    public static void setBackgroundTintMode(android.view.View, android.graphics.PorterDuff$Mode)
    {
        android.view.View r0;
        android.graphics.PorterDuff$Mode r1, $r6;
        android.graphics.drawable.Drawable r2;
        boolean z0, $z1, $z2, $z4;
        int $i0, $i1;
        android.support.v4.view.TintableBackgroundView $r3;
        android.content.res.ColorStateList $r4;
        int[] $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label6;

        virtualinvoke r0.<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>(r1);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 != 21 goto label7;

        r2 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke r0.<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>();

        if $r4 != null goto label1;

        $r6 = virtualinvoke r0.<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()>();

        if $r6 == null goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        if r2 == null goto label5;

        if z0 == 0 goto label5;

        $z2 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

     label4:
        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r2);

     label5:
        goto label7;

     label6:
        $z1 = r0 instanceof android.support.v4.view.TintableBackgroundView;

        if $z1 == 0 goto label7;

        $r3 = (android.support.v4.view.TintableBackgroundView) r0;

        interfaceinvoke $r3.<android.support.v4.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>(r1);

     label7:
        return;
    }

    public static void setNestedScrollingEnabled(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void setNestedScrollingEnabled(boolean)>(z0);

        goto label2;

     label1:
        $z1 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z1 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)>(z0);

     label2:
        return;
    }

    public static boolean isNestedScrollingEnabled(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean isNestedScrollingEnabled()>();

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: boolean isNestedScrollingEnabled()>();

        return $z1;

     label2:
        return 0;
    }

    public static boolean startNestedScroll(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean startNestedScroll(int)>(i0);

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: boolean startNestedScroll(int)>(i0);

        return $z1;

     label2:
        return 0;
    }

    public static void stopNestedScroll(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void stopNestedScroll()>();

        goto label2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: void stopNestedScroll()>();

     label2:
        return;
    }

    public static boolean hasNestedScrollingParent(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean hasNestedScrollingParent()>();

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: boolean hasNestedScrollingParent()>();

        return $z1;

     label2:
        return 0;
    }

    public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[])
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4;
        int[] r1;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: int[];

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>(i0, i1, i2, i3, r1);

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r2 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r2.<android.support.v4.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])>(i0, i1, i2, i3, r1);

        return $z1;

     label2:
        return 0;
    }

    public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[])
    {
        android.view.View r0;
        int i0, i1, $i2;
        int[] r1, r2;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r3;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        r2 := @parameter4: int[];

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>(i0, i1, r1, r2);

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r3 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r3.<android.support.v4.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])>(i0, i1, r1, r2);

        return $z1;

     label2:
        return 0;
    }

    public static boolean startNestedScroll(android.view.View, int, int)
    {
        android.view.View r0;
        int i0, i1;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild2 $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        $z2 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild2: boolean startNestedScroll(int,int)>(i0, i1);

        return $z2;

     label1:
        if i1 != 0 goto label2;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>(r0, i0);

        return $z1;

     label2:
        return 0;
    }

    public static void stopNestedScroll(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild2 $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild2: void stopNestedScroll(int)>(i0);

        goto label2;

     label1:
        if i0 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void stopNestedScroll(android.view.View)>(r0);

     label2:
        return;
    }

    public static boolean hasNestedScrollingParent(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        boolean $z0, $z1;
        android.support.v4.view.NestedScrollingChild2 $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)>(i0);

        goto label2;

     label1:
        if i0 != 0 goto label2;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>(r0);

        return $z1;

     label2:
        return 0;
    }

    public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[], int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4;
        int[] r1;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild2 $r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: int[];

        i4 := @parameter6: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.NestedScrollingChild2) r0;

        $z2 = interfaceinvoke $r2.<android.support.v4.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(i0, i1, i2, i3, r1, i4);

        return $z2;

     label1:
        if i4 != 0 goto label2;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>(r0, i0, i1, i2, i3, r1);

        return $z1;

     label2:
        return 0;
    }

    public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[], int)
    {
        android.view.View r0;
        int i0, i1, i2;
        int[] r1, r2;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild2 $r3;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r3 = (android.support.v4.view.NestedScrollingChild2) r0;

        $z2 = interfaceinvoke $r3.<android.support.v4.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r1, r2, i2);

        return $z2;

     label1:
        if i2 != 0 goto label2;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>(r0, i0, i1, r1, r2);

        return $z1;

     label2:
        return 0;
    }

    public static boolean dispatchNestedFling(android.view.View, float, float, boolean)
    {
        android.view.View r0;
        float f0, f1;
        boolean z0, $z1, $z2, $z3;
        int $i0;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z3 = virtualinvoke r0.<android.view.View: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z3;

     label1:
        $z1 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z1 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        $z2 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z2;

     label2:
        return 0;
    }

    public static boolean dispatchNestedPreFling(android.view.View, float, float)
    {
        android.view.View r0;
        float f0, f1;
        int $i0;
        boolean $z0, $z1, $z2;
        android.support.v4.view.NestedScrollingChild $r1;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z2;

     label1:
        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label2;

        $r1 = (android.support.v4.view.NestedScrollingChild) r0;

        $z1 = interfaceinvoke $r1.<android.support.v4.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z1;

     label2:
        return 0;
    }

    public static boolean isInLayout(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isInLayout()>();

        return $z0;

     label1:
        return 0;
    }

    public static boolean isLaidOut(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isLaidOut()>();

        return $z0;

     label1:
        $i1 = virtualinvoke r0.<android.view.View: int getWidth()>();

        if $i1 <= 0 goto label2;

        $i2 = virtualinvoke r0.<android.view.View: int getHeight()>();

        if $i2 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isLayoutDirectionResolved(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isLayoutDirectionResolved()>();

        return $z0;

     label1:
        return 0;
    }

    public static float getZ(android.view.View)
    {
        android.view.View r0;
        int $i0;
        float $f0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $f0 = virtualinvoke r0.<android.view.View: float getZ()>();

        return $f0;

     label1:
        return 0.0F;
    }

    public static void setZ(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int $i0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        virtualinvoke r0.<android.view.View: void setZ(float)>(f0);

     label1:
        return;
    }

    public static void offsetTopAndBottom(android.view.View, int)
    {
        android.view.View r0, r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Rect r1;
        android.view.ViewParent r2;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke r0.<android.view.View: void offsetTopAndBottom(int)>(i0);

        goto label7;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label6;

        r1 = staticinvoke <android.support.v4.view.ViewCompat: android.graphics.Rect getEmptyTempRect()>();

        z3 = 0;

        r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label4;

        r3 = (android.view.View) r2;

        $i7 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i8 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i9 = virtualinvoke r3.<android.view.View: int getRight()>();

        $i10 = virtualinvoke r3.<android.view.View: int getBottom()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i7, $i8, $i9, $i10);

        $i11 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i12 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i13 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i14 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $z2 = virtualinvoke r1.<android.graphics.Rect: boolean intersects(int,int,int,int)>($i11, $i12, $i13, $i14);

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        staticinvoke <android.support.v4.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)>(r0, i0);

        if z3 == 0 goto label5;

        $i3 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i5 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i6 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $z1 = virtualinvoke r1.<android.graphics.Rect: boolean intersect(int,int,int,int)>($i3, $i4, $i5, $i6);

        if $z1 == 0 goto label5;

        $r4 = (android.view.View) r2;

        virtualinvoke $r4.<android.view.View: void invalidate(android.graphics.Rect)>(r1);

     label5:
        goto label7;

     label6:
        staticinvoke <android.support.v4.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)>(r0, i0);

     label7:
        return;
    }

    private static void compatOffsetTopAndBottom(android.view.View, int)
    {
        android.view.View r0, $r2;
        int i0, $i1;
        android.view.ViewParent r1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void offsetTopAndBottom(int)>(i0);

        $i1 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void tickleInvalidationFlag(android.view.View)>(r0);

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r1 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r2 = (android.view.View) r1;

        staticinvoke <android.support.v4.view.ViewCompat: void tickleInvalidationFlag(android.view.View)>($r2);

     label1:
        return;
    }

    public static void offsetLeftAndRight(android.view.View, int)
    {
        android.view.View r0, r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Rect r1;
        android.view.ViewParent r2;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke r0.<android.view.View: void offsetLeftAndRight(int)>(i0);

        goto label7;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label6;

        r1 = staticinvoke <android.support.v4.view.ViewCompat: android.graphics.Rect getEmptyTempRect()>();

        z3 = 0;

        r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label4;

        r3 = (android.view.View) r2;

        $i7 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i8 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i9 = virtualinvoke r3.<android.view.View: int getRight()>();

        $i10 = virtualinvoke r3.<android.view.View: int getBottom()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i7, $i8, $i9, $i10);

        $i11 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i12 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i13 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i14 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $z2 = virtualinvoke r1.<android.graphics.Rect: boolean intersects(int,int,int,int)>($i11, $i12, $i13, $i14);

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        staticinvoke <android.support.v4.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)>(r0, i0);

        if z3 == 0 goto label5;

        $i3 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i5 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i6 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $z1 = virtualinvoke r1.<android.graphics.Rect: boolean intersect(int,int,int,int)>($i3, $i4, $i5, $i6);

        if $z1 == 0 goto label5;

        $r4 = (android.view.View) r2;

        virtualinvoke $r4.<android.view.View: void invalidate(android.graphics.Rect)>(r1);

     label5:
        goto label7;

     label6:
        staticinvoke <android.support.v4.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)>(r0, i0);

     label7:
        return;
    }

    private static void compatOffsetLeftAndRight(android.view.View, int)
    {
        android.view.View r0, $r2;
        int i0, $i1;
        android.view.ViewParent r1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void offsetLeftAndRight(int)>(i0);

        $i1 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void tickleInvalidationFlag(android.view.View)>(r0);

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r1 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r2 = (android.view.View) r1;

        staticinvoke <android.support.v4.view.ViewCompat: void tickleInvalidationFlag(android.view.View)>($r2);

     label1:
        return;
    }

    private static void tickleInvalidationFlag(android.view.View)
    {
        android.view.View r0;
        float f0, $f1;

        r0 := @parameter0: android.view.View;

        f0 = virtualinvoke r0.<android.view.View: float getTranslationY()>();

        $f1 = f0 + 1.0F;

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>($f1);

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>(f0);

        return;
    }

    public static void setClipBounds(android.view.View, android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        virtualinvoke r0.<android.view.View: void setClipBounds(android.graphics.Rect)>(r1);

     label1:
        return;
    }

    public static android.graphics.Rect getClipBounds(android.view.View)
    {
        android.view.View r0;
        int $i0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        $r1 = virtualinvoke r0.<android.view.View: android.graphics.Rect getClipBounds()>();

        return $r1;

     label1:
        return null;
    }

    public static boolean isAttachedToWindow(android.view.View)
    {
        android.view.View r0;
        int $i0;
        android.os.IBinder $r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isAttachedToWindow()>();

        return $z0;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean hasOnClickListeners(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 15 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasOnClickListeners()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setScrollIndicators(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke r0.<android.view.View: void setScrollIndicators(int)>(i0);

     label1:
        return;
    }

    public static void setScrollIndicators(android.view.View, int, int)
    {
        android.view.View r0;
        int i0, i1, $i2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label1;

        virtualinvoke r0.<android.view.View: void setScrollIndicators(int,int)>(i0, i1);

     label1:
        return;
    }

    public static int getScrollIndicators(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getScrollIndicators()>();

        return $i1;

     label1:
        return 0;
    }

    public static void setPointerIcon(android.view.View, android.support.v4.view.PointerIconCompat)
    {
        android.view.View r0;
        android.support.v4.view.PointerIconCompat r1;
        int $i0;
        android.view.PointerIcon $r2, $r3;
        java.lang.Object $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.PointerIconCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label3;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<android.support.v4.view.PointerIconCompat: java.lang.Object getPointerIcon()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        $r2 = (android.view.PointerIcon) $r5;

        $r3 = (android.view.PointerIcon) $r2;

        virtualinvoke r0.<android.view.View: void setPointerIcon(android.view.PointerIcon)>($r3);

     label3:
        return;
    }

    public static android.view.Display getDisplay(android.view.View)
    {
        android.view.View r0;
        android.view.WindowManager r1;
        int $i0;
        boolean $z0;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.Display $r4, $r5;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $r5 = virtualinvoke r0.<android.view.View: android.view.Display getDisplay()>();

        return $r5;

     label1:
        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>(r0);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r3;

        $r4 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        return $r4;

     label2:
        return null;
    }

    public static void setTooltipText(android.view.View, java.lang.CharSequence)
    {
        android.view.View r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.CharSequence;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setTooltipText(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    public static boolean startDragAndDrop(android.view.View, android.content.ClipData, android.view.View$DragShadowBuilder, java.lang.Object, int)
    {
        android.view.View r0;
        android.content.ClipData r1;
        android.view.View$DragShadowBuilder r2;
        java.lang.Object r3;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.content.ClipData;

        r2 := @parameter2: android.view.View$DragShadowBuilder;

        r3 := @parameter3: java.lang.Object;

        i0 := @parameter4: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label1;

        $z1 = virtualinvoke r0.<android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>(r1, r2, r3, i0);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>(r1, r2, r3, i0);

        return $z0;
    }

    public static void cancelDragAndDrop(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        virtualinvoke r0.<android.view.View: void cancelDragAndDrop()>();

     label1:
        return;
    }

    public static void updateDragShadow(android.view.View, android.view.View$DragShadowBuilder)
    {
        android.view.View r0;
        android.view.View$DragShadowBuilder r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$DragShadowBuilder;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        virtualinvoke r0.<android.view.View: void updateDragShadow(android.view.View$DragShadowBuilder)>(r1);

     label1:
        return;
    }

    public static int getNextClusterForwardId(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getNextClusterForwardId()>();

        return $i1;

     label1:
        return -1;
    }

    public static void setNextClusterForwardId(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setNextClusterForwardId(int)>(i0);

     label1:
        return;
    }

    public static boolean isKeyboardNavigationCluster(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isKeyboardNavigationCluster()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setKeyboardNavigationCluster(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setKeyboardNavigationCluster(boolean)>(z0);

     label1:
        return;
    }

    public static boolean isFocusedByDefault(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isFocusedByDefault()>();

        return $z0;

     label1:
        return 0;
    }

    public static void setFocusedByDefault(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void setFocusedByDefault(boolean)>(z0);

     label1:
        return;
    }

    public static android.view.View keyboardNavigationClusterSearch(android.view.View, android.view.View, int)
    {
        android.view.View r0, r1, $r2;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label1;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)>(r1, i0);

        return $r2;

     label1:
        return null;
    }

    public static void addKeyboardNavigationClusters(android.view.View, java.util.Collection, int)
    {
        android.view.View r0;
        java.util.Collection r1;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.Collection;

        i0 := @parameter2: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label1;

        virtualinvoke r0.<android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>(r1, i0);

     label1:
        return;
    }

    public static boolean restoreDefaultFocus(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z1 = virtualinvoke r0.<android.view.View: boolean restoreDefaultFocus()>();

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean requestFocus()>();

        return $z0;
    }

    public static boolean hasExplicitFocusable(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $z1 = virtualinvoke r0.<android.view.View: boolean hasExplicitFocusable()>();

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean hasFocusable()>();

        return $z0;
    }

    public static int generateViewId()
    {
        int i0, $i1, $i2, i3;
        java.util.concurrent.atomic.AtomicInteger $r0, $r1;
        boolean $z0;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        $i2 = staticinvoke <android.view.View: int generateViewId()>();

        return $i2;

     label1:
        $r0 = <android.support.v4.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId>;

        i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        i3 = i0 + 1;

        if i3 <= 16777215 goto label2;

        i3 = 1;

     label2:
        $r1 = <android.support.v4.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(i0, i3);

        if $z0 == 0 goto label3;

        return i0;

     label3:
        goto label1;
    }

    public static void addOnUnhandledKeyEventListener(android.view.View, android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    {
        android.view.View r0;
        android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat r1;
        android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerWrapper r2, r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3, $r5, r9;
        java.util.ArrayList r10, r13;
        android.support.v4.util.ArrayMap r11;
        java.util.Map r14;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label2;

        $i4 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        $r5 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i4);

        r9 = (java.util.Map) $r5;

        if r9 != null goto label1;

        r11 = new android.support.v4.util.ArrayMap;

        specialinvoke r11.<android.support.v4.util.ArrayMap: void <init>()>();

        r9 = r11;

        $i5 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        virtualinvoke r0.<android.view.View: void setTag(int,java.lang.Object)>($i5, r9);

     label1:
        r12 = new android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerWrapper;

        specialinvoke r12.<android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerWrapper: void <init>(android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>(r1);

        r2 = r12;

        r14 = (java.util.Map) r9;

        interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<android.view.View: void addOnUnhandledKeyEventListener(android.view.View$OnUnhandledKeyEventListener)>(r2);

        return;

     label2:
        $i1 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        $r3 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i1);

        r10 = (java.util.ArrayList) $r3;

        if r10 != null goto label3;

        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>()>();

        r10 = r13;

        $i3 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        virtualinvoke r0.<android.view.View: void setTag(int,java.lang.Object)>($i3, r10);

     label3:
        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i2 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        if $i2 != 1 goto label4;

        staticinvoke <android.support.v4.view.ViewCompat$UnhandledKeyEventManager: void registerListeningView(android.view.View)>(r0);

     label4:
        return;
    }

    public static void removeOnUnhandledKeyEventListener(android.view.View, android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    {
        android.view.View r0;
        android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat r1;
        android.view.View$OnUnhandledKeyEventListener r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r4, $r5;
        java.util.Map r6;
        java.util.ArrayList r7;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label3;

        $i3 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        $r4 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i3);

        r6 = (java.util.Map) $r4;

        if r6 != null goto label1;

        return;

     label1:
        $r5 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.view.View$OnUnhandledKeyEventListener) $r5;

        if r2 == null goto label2;

        virtualinvoke r0.<android.view.View: void removeOnUnhandledKeyEventListener(android.view.View$OnUnhandledKeyEventListener)>(r2);

     label2:
        return;

     label3:
        $i1 = <android.support.compat.R$id: int tag_unhandled_key_listeners>;

        $r3 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i1);

        r7 = (java.util.ArrayList) $r3;

        if r7 == null goto label4;

        virtualinvoke r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label4;

        staticinvoke <android.support.v4.view.ViewCompat$UnhandledKeyEventManager: void unregisterListeningView(android.view.View)>(r0);

     label4:
        return;
    }

    protected void <init>()
    {
        android.support.v4.view.ViewCompat r0;

        r0 := @this: android.support.v4.view.ViewCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View, android.view.KeyEvent)
    {
        android.view.View r0;
        android.view.KeyEvent r1;
        int $i0;
        android.support.v4.view.ViewCompat$UnhandledKeyEventManager $r2;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.KeyEvent;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <android.support.v4.view.ViewCompat$UnhandledKeyEventManager: android.support.v4.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)>(r0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)>(r1);

        return $z0;
    }

    static boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View, android.view.KeyEvent)
    {
        android.view.View r0;
        android.view.KeyEvent r1;
        int $i0;
        android.support.v4.view.ViewCompat$UnhandledKeyEventManager $r2;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.KeyEvent;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <android.support.v4.view.ViewCompat$UnhandledKeyEventManager: android.support.v4.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)>(r0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)>(r0, r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        <android.support.v4.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId> = $r0;

        <android.support.v4.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap> = null;

        <android.support.v4.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed> = 0;

        return;
    }

