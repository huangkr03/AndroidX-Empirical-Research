android.support.test.espresso.IdlingPolicies
<android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy>
<android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>
<android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy>
    private void <init>()
    {
        android.support.test.espresso.IdlingPolicies r0;

        r0 := @this: android.support.test.espresso.IdlingPolicies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setMasterPolicyTimeout(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r0;
        byte $b1;
        android.support.test.espresso.IdlingPolicy $r2, $r6;
        android.support.test.espresso.IdlingPolicy$Builder $r3, $r4, $r5;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy>;

        $r3 = virtualinvoke $r2.<android.support.test.espresso.IdlingPolicy: android.support.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(l0);

        $r5 = virtualinvoke $r4.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>(r0);

        $r6 = virtualinvoke $r5.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy> = $r6;

        return;
    }

    public static void setIdlingResourceTimeout(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r0;
        byte $b1;
        android.support.test.espresso.IdlingPolicy $r2, $r6;
        android.support.test.espresso.IdlingPolicy$Builder $r3, $r4, $r5;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>;

        $r3 = virtualinvoke $r2.<android.support.test.espresso.IdlingPolicy: android.support.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(l0);

        $r5 = virtualinvoke $r4.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>(r0);

        $r6 = virtualinvoke $r5.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy> = $r6;

        return;
    }

    public static void setMasterPolicyTimeoutWhenDebuggerAttached(boolean)
    {
        boolean z0;
        android.support.test.espresso.IdlingPolicy $r0, $r2;
        android.support.test.espresso.IdlingPolicy$Builder $r1;

        z0 := @parameter0: boolean;

        $r0 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy>;

        $r1 = virtualinvoke $r0.<android.support.test.espresso.IdlingPolicy: android.support.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r2 = virtualinvoke $r1.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy> = $r2;

        return;
    }

    public static android.support.test.espresso.IdlingPolicy getMasterIdlingPolicy()
    {
        android.support.test.espresso.IdlingPolicy $r0;

        $r0 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy>;

        return $r0;
    }

    public static android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()
    {
        android.support.test.espresso.IdlingPolicy $r0;

        $r0 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy>;

        return $r0;
    }

    public static android.support.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()
    {
        android.support.test.espresso.IdlingPolicy $r0;

        $r0 = <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>;

        return $r0;
    }

    static void <clinit>()
    {
        android.support.test.espresso.IdlingPolicy$Builder $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16;
        java.util.concurrent.TimeUnit $r2, $r8, $r14;
        android.support.test.espresso.IdlingPolicy $r5, $r11, $r17;

        $r0 = new android.support.test.espresso.IdlingPolicy$Builder;

        specialinvoke $r0.<android.support.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(60L);

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r3 = virtualinvoke $r1.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r2);

        $r4 = virtualinvoke $r3.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder throwAppNotIdleException()>();

        $r5 = virtualinvoke $r4.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy masterIdlingPolicy> = $r5;

        $r6 = new android.support.test.espresso.IdlingPolicy$Builder;

        specialinvoke $r6.<android.support.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(26L);

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r9 = virtualinvoke $r7.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r8);

        $r10 = virtualinvoke $r9.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder throwIdlingResourceTimeoutException()>();

        $r11 = virtualinvoke $r10.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy> = $r11;

        $r12 = new android.support.test.espresso.IdlingPolicy$Builder;

        specialinvoke $r12.<android.support.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r13 = virtualinvoke $r12.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(5L);

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r15 = virtualinvoke $r13.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r14);

        $r16 = virtualinvoke $r15.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy$Builder logWarning()>();

        $r17 = virtualinvoke $r16.<android.support.test.espresso.IdlingPolicy$Builder: android.support.test.espresso.IdlingPolicy build()>();

        <android.support.test.espresso.IdlingPolicies: android.support.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy> = $r17;

        return;
    }

