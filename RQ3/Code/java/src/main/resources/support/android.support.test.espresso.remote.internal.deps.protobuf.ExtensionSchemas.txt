android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas
<android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema LITE_SCHEMA>
<android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema FULL_SCHEMA>
    private static android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema loadSchemaForFullRuntime()
    {
        java.lang.Class[] $r0;
        java.lang.reflect.Constructor $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r4;
        java.lang.Throwable $r5, r7;
        java.lang.Class r6;

     label1:
        r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemaFull");

        $r0 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r0);

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

        $r4 = (android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema lite()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r0;

        $r0 = <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema LITE_SCHEMA>;

        return $r0;
    }

    static android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema full()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r0, $r1;
        java.lang.IllegalStateException $r2;

        $r0 = <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema FULL_SCHEMA>;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Protobuf runtime is not correctly loaded.");

        throw $r2;

     label1:
        $r1 = <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema FULL_SCHEMA>;

        return $r1;
    }

    static void <clinit>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemaLite $r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema $r1;

        $r0 = new android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemaLite;

        specialinvoke $r0.<android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemaLite: void <init>()>();

        <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema LITE_SCHEMA> = $r0;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema loadSchemaForFullRuntime()>();

        <android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchemas: android.support.test.espresso.remote.internal.deps.protobuf.ExtensionSchema FULL_SCHEMA> = $r1;

        return;
    }

