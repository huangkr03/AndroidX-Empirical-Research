android.support.test.orchestrator.callback.OrchestratorCallback
<android.support.test.orchestrator.callback.OrchestratorCallback: void addTest(java.lang.String)>
<android.support.test.orchestrator.callback.OrchestratorCallback: void sendTestNotification(android.os.Bundle)>
android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy
    void <init>(android.os.IBinder)
    {
        android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<android.support.test.runner.internal.deps.aidl.BaseProxy: void <init>(android.os.IBinder,java.lang.String)>(r1, "android.support.test.orchestrator.callback.OrchestratorCallback");

        return;
    }

    public void addTest(java.lang.String) throws android.os.RemoteException
    {
        android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2;

        r0 := @this: android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy: android.os.Parcel obtainAndWriteInterfaceToken()>();

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>(1, r2);

        return;
    }

    public void sendTestNotification(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.Parcelable r3;

        r0 := @this: android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy: android.os.Parcel obtainAndWriteInterfaceToken()>();

        r3 = (android.os.Parcelable) r1;

        staticinvoke <android.support.test.runner.internal.deps.aidl.Codecs: void writeParcelable(android.os.Parcel,android.os.Parcelable)>(r2, r3);

        virtualinvoke r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub$Proxy: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>(2, r2);

        return;
    }

android.support.test.orchestrator.callback.OrchestratorCallback$Stub
    public void <init>()
    {
        android.support.test.orchestrator.callback.OrchestratorCallback$Stub $r0;

        $r0 := @this: android.support.test.orchestrator.callback.OrchestratorCallback$Stub;

        specialinvoke $r0.<com.google.android.aidl.BaseStub: void <init>(java.lang.String)>("android.support.test.orchestrator.callback.OrchestratorCallback");

        return;
    }

    protected boolean dispatchTransaction(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.support.test.orchestrator.callback.OrchestratorCallback$Stub $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.String $r3;
        android.os.Parcelable$Creator $r4;
        android.os.Parcelable $r5;
        android.os.Bundle $r6;

        $r0 := @this: android.support.test.orchestrator.callback.OrchestratorCallback$Stub;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub: void addTest(java.lang.String)>($r3);

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label4:
        $r4 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r5 = staticinvoke <com.google.android.aidl.Codecs: android.os.Parcelable createParcelable(android.os.Parcel,android.os.Parcelable$Creator)>($r1, $r4);

        $r6 = (android.os.Bundle) $r5;

        virtualinvoke $r0.<android.support.test.orchestrator.callback.OrchestratorCallback$Stub: void sendTestNotification(android.os.Bundle)>($r6);

        goto label3;
    }

