android.support.media2.MediaSession2
<android.support.media2.MediaSession2: int ERROR_CODE_UNKNOWN_ERROR>
<android.support.media2.MediaSession2: int ERROR_CODE_APP_ERROR>
<android.support.media2.MediaSession2: int ERROR_CODE_NOT_SUPPORTED>
<android.support.media2.MediaSession2: int ERROR_CODE_AUTHENTICATION_EXPIRED>
<android.support.media2.MediaSession2: int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED>
<android.support.media2.MediaSession2: int ERROR_CODE_CONCURRENT_STREAM_LIMIT>
<android.support.media2.MediaSession2: int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED>
<android.support.media2.MediaSession2: int ERROR_CODE_NOT_AVAILABLE_IN_REGION>
<android.support.media2.MediaSession2: int ERROR_CODE_CONTENT_ALREADY_PLAYING>
<android.support.media2.MediaSession2: int ERROR_CODE_SKIP_LIMIT_REACHED>
<android.support.media2.MediaSession2: int ERROR_CODE_ACTION_ABORTED>
<android.support.media2.MediaSession2: int ERROR_CODE_END_OF_QUEUE>
<android.support.media2.MediaSession2: int ERROR_CODE_SETUP_REQUIRED>
<android.support.media2.MediaSession2: java.lang.String TAG>
<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>
    void <init>(android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2 r0;
        android.content.Context r1;
        java.lang.String r2;
        android.support.media2.MediaPlayerConnector r3;
        android.support.media2.MediaPlaylistAgent r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        android.support.media2.MediaSession2$SessionCallback r7;
        android.support.media2.MediaSession2$MediaSession2Impl $r8;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        r4 := @parameter3: android.support.media2.MediaPlaylistAgent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.support.media2.MediaSession2$SessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = virtualinvoke r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl createImpl(android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2, r3, r4, r5, r6, r7);

        r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl> = $r8;

        return;
    }

    android.support.media2.MediaSession2$MediaSession2Impl createImpl(android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2 r0;
        android.content.Context r1;
        java.lang.String r2;
        android.support.media2.MediaPlayerConnector r3;
        android.support.media2.MediaPlaylistAgent r4;
        android.app.PendingIntent r5;
        java.util.concurrent.Executor r6;
        android.support.media2.MediaSession2$SessionCallback r7;
        android.support.media2.MediaSession2ImplBase $r8;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        r4 := @parameter3: android.support.media2.MediaPlaylistAgent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.support.media2.MediaSession2$SessionCallback;

        $r8 = new android.support.media2.MediaSession2ImplBase;

        specialinvoke $r8.<android.support.media2.MediaSession2ImplBase: void <init>(android.support.media2.MediaSession2,android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    android.support.media2.MediaSession2$MediaSession2Impl getImpl()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        return $r1;
    }

    public void updatePlayerConnector(android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.MediaPlaylistAgent r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 := @parameter1: android.support.media2.MediaPlaylistAgent;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void updatePlayer(android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent)>(r1, r2);

        return;
    }

    public void close()
    {
        android.support.media2.MediaSession2 r0;
        java.lang.Throwable r1, $r3;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

     label1:
        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.support.media2.MediaPlayerConnector getPlayerConnector()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaPlayerConnector $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaPlayerConnector getPlayer()>();

        return $r2;
    }

    public android.support.media2.MediaPlaylistAgent getPlaylistAgent()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaPlaylistAgent $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaPlaylistAgent getPlaylistAgent()>();

        return $r2;
    }

    public android.support.media2.SessionToken2 getToken()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.SessionToken2 $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.SessionToken2 getToken()>();

        return $r2;
    }

    android.content.Context getContext()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.content.Context $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.content.Context getContext()>();

        return $r2;
    }

    java.util.concurrent.Executor getCallbackExecutor()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: java.util.concurrent.Executor getCallbackExecutor()>();

        return $r2;
    }

    android.support.media2.MediaSession2$SessionCallback getCallback()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaSession2$SessionCallback $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        return $r2;
    }

    public android.support.media2.AudioFocusHandler getAudioFocusHandler()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.AudioFocusHandler $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.AudioFocusHandler getAudioFocusHandler()>();

        return $r2;
    }

    public java.util.List getConnectedControllers()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        java.util.List $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: java.util.List getConnectedControllers()>();

        return $r2;
    }

    public void setCustomLayout(android.support.media2.MediaSession2$ControllerInfo, java.util.List)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.util.List r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void setCustomLayout(android.support.media2.MediaSession2$ControllerInfo,java.util.List)>(r1, r2);

        return;
    }

    public void setAllowedCommands(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommandGroup2 r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void setAllowedCommands(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommandGroup2)>(r1, r2);

        return;
    }

    public void sendCustomCommand(android.support.media2.SessionCommand2, android.os.Bundle)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.SessionCommand2 r1;
        android.os.Bundle r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void sendCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle)>(r1, r2);

        return;
    }

    public void sendCustomCommand(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;
        android.support.media2.MediaSession2$MediaSession2Impl $r5;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        $r5 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r5.<android.support.media2.MediaSession2$MediaSession2Impl: void sendCustomCommand(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>(r1, r2, r3, r4);

        return;
    }

    public void play()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void play()>();

        return;
    }

    public void pause()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void pause()>();

        return;
    }

    public void reset()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void reset()>();

        return;
    }

    public void prepare()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void prepare()>();

        return;
    }

    public void seekTo(long)
    {
        android.support.media2.MediaSession2 r0;
        long l0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void seekTo(long)>(l0);

        return;
    }

    public void skipForward()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void skipForward()>();

        return;
    }

    public void skipBackward()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void skipBackward()>();

        return;
    }

    public void notifyError(int, android.os.Bundle)
    {
        android.support.media2.MediaSession2 r0;
        int i0;
        android.os.Bundle r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void notifyError(int,android.os.Bundle)>(i0, r1);

        return;
    }

    public void notifyRoutesInfoChanged(android.support.media2.MediaSession2$ControllerInfo, java.util.List)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.util.List r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void notifyRoutesInfoChanged(android.support.media2.MediaSession2$ControllerInfo,java.util.List)>(r1, r2);

        return;
    }

    public int getPlayerState()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: int getPlayerState()>();

        return $i0;
    }

    public long getCurrentPosition()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: long getCurrentPosition()>();

        return $l0;
    }

    public long getDuration()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: long getDuration()>();

        return $l0;
    }

    public long getBufferedPosition()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        long $l0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: long getBufferedPosition()>();

        return $l0;
    }

    public int getBufferingState()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: int getBufferingState()>();

        return $i0;
    }

    public float getPlaybackSpeed()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        float $f0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $f0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: float getPlaybackSpeed()>();

        return $f0;
    }

    public void setPlaybackSpeed(float)
    {
        android.support.media2.MediaSession2 r0;
        float f0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void setPlaybackSpeed(float)>(f0);

        return;
    }

    public void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$OnDataSourceMissingHelper r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaSession2$OnDataSourceMissingHelper;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)>(r1);

        return;
    }

    public void clearOnDataSourceMissingHelper()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void clearOnDataSourceMissingHelper()>();

        return;
    }

    public java.util.List getPlaylist()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        java.util.List $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: java.util.List getPlaylist()>();

        return $r2;
    }

    public void setPlaylist(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2 r0;
        java.util.List r1;
        android.support.media2.MediaMetadata2 r2;
        android.support.media2.MediaSession2$MediaSession2Impl $r3;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        $r3 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: void setPlaylist(java.util.List,android.support.media2.MediaMetadata2)>(r1, r2);

        return;
    }

    public void skipToPlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaItem2;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void skipToPlaylistItem(android.support.media2.MediaItem2)>(r1);

        return;
    }

    public void skipToPreviousItem()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void skipToPreviousItem()>();

        return;
    }

    public void skipToNextItem()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void skipToNextItem()>();

        return;
    }

    public android.support.media2.MediaMetadata2 getPlaylistMetadata()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaMetadata2 $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        return $r2;
    }

    public void addPlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2 r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void addPlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        return;
    }

    public void removePlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaItem2;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void removePlaylistItem(android.support.media2.MediaItem2)>(r1);

        return;
    }

    public void replacePlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2 r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void replacePlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        return;
    }

    public android.support.media2.MediaItem2 getCurrentMediaItem()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.media2.MediaItem2 $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        return $r2;
    }

    public void updatePlaylistMetadata(android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaMetadata2 r1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2;

        r0 := @this: android.support.media2.MediaSession2;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        $r2 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: void updatePlaylistMetadata(android.support.media2.MediaMetadata2)>(r1);

        return;
    }

    public int getRepeatMode()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: int getRepeatMode()>();

        return $i0;
    }

    public void setRepeatMode(int)
    {
        android.support.media2.MediaSession2 r0;
        int i0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void setRepeatMode(int)>(i0);

        return;
    }

    public int getShuffleMode()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: int getShuffleMode()>();

        return $i0;
    }

    public void setShuffleMode(int)
    {
        android.support.media2.MediaSession2 r0;
        int i0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;

        r0 := @this: android.support.media2.MediaSession2;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: void setShuffleMode(int)>(i0);

        return;
    }

    public android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        return $r2;
    }

    android.os.IBinder getSessionBinder()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.os.IBinder getSessionBinder()>();

        return $r2;
    }

    android.os.IBinder getLegacyBrowerServiceBinder()
    {
        android.support.media2.MediaSession2 r0;
        android.support.media2.MediaSession2$MediaSession2Impl $r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.media2.MediaSession2;

        $r1 = r0.<android.support.media2.MediaSession2: android.support.media2.MediaSession2$MediaSession2Impl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.media2.MediaSession2$MediaSession2Impl: android.os.IBinder getLegacyBrowserServiceBinder()>();

        return $r2;
    }

android.support.media2.MediaSession2$Builder$1
<android.support.media2.MediaSession2$Builder$1: android.support.media2.MediaSession2$Builder this$0>
    void <init>(android.support.media2.MediaSession2$Builder)
    {
        android.support.media2.MediaSession2$Builder$1 r0;
        android.support.media2.MediaSession2$Builder r1;

        r0 := @this: android.support.media2.MediaSession2$Builder$1;

        r1 := @parameter0: android.support.media2.MediaSession2$Builder;

        r0.<android.support.media2.MediaSession2$Builder$1: android.support.media2.MediaSession2$Builder this$0> = r1;

        specialinvoke r0.<android.support.media2.MediaSession2$SessionCallback: void <init>()>();

        return;
    }

android.support.media2.MediaSession2$Builder
    public void <init>(android.content.Context)
    {
        android.support.media2.MediaSession2$Builder r0;
        android.content.Context r1;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: void <init>(android.content.Context)>(r1);

        return;
    }

    public android.support.media2.MediaSession2$Builder setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2$Builder r0, $r3;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setPlayer(android.support.media2.MediaPlayerConnector)>(r1);

        $r3 = (android.support.media2.MediaSession2$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaSession2$Builder setPlaylistAgent(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2$Builder r0, $r3;
        android.support.media2.MediaPlaylistAgent r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setPlaylistAgent(android.support.media2.MediaPlaylistAgent)>(r1);

        $r3 = (android.support.media2.MediaSession2$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaSession2$Builder setSessionActivity(android.app.PendingIntent)
    {
        android.support.media2.MediaSession2$Builder r0, $r3;
        android.app.PendingIntent r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setSessionActivity(android.app.PendingIntent)>(r1);

        $r3 = (android.support.media2.MediaSession2$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaSession2$Builder setId(java.lang.String)
    {
        android.support.media2.MediaSession2$Builder r0, $r3;
        java.lang.String r1;
        android.support.media2.MediaSession2$BuilderBase $r2;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setId(java.lang.String)>(r1);

        $r3 = (android.support.media2.MediaSession2$Builder) $r2;

        return $r3;
    }

    public android.support.media2.MediaSession2$Builder setSessionCallback(java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2$Builder r0, $r4;
        java.util.concurrent.Executor r1;
        android.support.media2.MediaSession2$SessionCallback r2;
        android.support.media2.MediaSession2$BuilderBase $r3;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.support.media2.MediaSession2$SessionCallback;

        $r3 = specialinvoke r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$BuilderBase setSessionCallback(java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2);

        $r4 = (android.support.media2.MediaSession2$Builder) $r3;

        return $r4;
    }

    public android.support.media2.MediaSession2 build()
    {
        android.support.media2.MediaSession2$Builder r0;
        java.util.concurrent.Executor $r1, $r5;
        android.support.media2.MediaSession2$SessionCallback $r2, $r4;
        android.support.media2.MediaSession2 $r3;
        android.app.PendingIntent $r6;
        android.support.media2.MediaPlaylistAgent $r7;
        android.support.media2.MediaPlayerConnector $r8;
        java.lang.String $r9;
        android.content.Context $r10, $r13;
        android.support.media2.MediaSession2$Builder$1 $r11;
        android.support.media2.MediaSession2$MainHandlerExecutor $r12;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        $r1 = r0.<android.support.media2.MediaSession2$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        if $r1 != null goto label1;

        $r12 = new android.support.media2.MediaSession2$MainHandlerExecutor;

        $r13 = r0.<android.support.media2.MediaSession2$Builder: android.content.Context mContext>;

        specialinvoke $r12.<android.support.media2.MediaSession2$MainHandlerExecutor: void <init>(android.content.Context)>($r13);

        r0.<android.support.media2.MediaSession2$Builder: java.util.concurrent.Executor mCallbackExecutor> = $r12;

     label1:
        $r2 = r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$SessionCallback mCallback>;

        if $r2 != null goto label2;

        $r11 = new android.support.media2.MediaSession2$Builder$1;

        specialinvoke $r11.<android.support.media2.MediaSession2$Builder$1: void <init>(android.support.media2.MediaSession2$Builder)>(r0);

        r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$SessionCallback mCallback> = $r11;

     label2:
        $r3 = new android.support.media2.MediaSession2;

        $r10 = r0.<android.support.media2.MediaSession2$Builder: android.content.Context mContext>;

        $r9 = r0.<android.support.media2.MediaSession2$Builder: java.lang.String mId>;

        $r8 = r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaPlayerConnector mPlayer>;

        $r7 = r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        $r6 = r0.<android.support.media2.MediaSession2$Builder: android.app.PendingIntent mSessionActivity>;

        $r5 = r0.<android.support.media2.MediaSession2$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$SessionCallback mCallback>;

        specialinvoke $r3.<android.support.media2.MediaSession2: void <init>(android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>($r10, $r9, $r8, $r7, $r6, $r5, $r4);

        return $r3;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setSessionCallback(java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2$Builder r0, $r3;
        java.util.concurrent.Executor r1;
        android.support.media2.MediaSession2$SessionCallback r2;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.support.media2.MediaSession2$SessionCallback;

        $r3 = virtualinvoke r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$Builder setSessionCallback(java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2);

        return $r3;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setId(java.lang.String)
    {
        android.support.media2.MediaSession2$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$Builder setId(java.lang.String)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        android.support.media2.MediaSession2$Builder r0, $r2;
        android.app.PendingIntent r1;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = virtualinvoke r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$Builder setSessionActivity(android.app.PendingIntent)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setPlaylistAgent(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2$Builder r0, $r2;
        android.support.media2.MediaPlaylistAgent r1;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        $r2 = virtualinvoke r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$Builder setPlaylistAgent(android.support.media2.MediaPlaylistAgent)>(r1);

        return $r2;
    }

    public volatile android.support.media2.MediaSession2$BuilderBase setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2$Builder r0, $r2;
        android.support.media2.MediaPlayerConnector r1;

        r0 := @this: android.support.media2.MediaSession2$Builder;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        $r2 = virtualinvoke r0.<android.support.media2.MediaSession2$Builder: android.support.media2.MediaSession2$Builder setPlayer(android.support.media2.MediaPlayerConnector)>(r1);

        return $r2;
    }

android.support.media2.MediaSession2$BuilderBase
<android.support.media2.MediaSession2$BuilderBase: android.content.Context mContext>
<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaPlayerConnector mPlayer>
<android.support.media2.MediaSession2$BuilderBase: java.lang.String mId>
<android.support.media2.MediaSession2$BuilderBase: java.util.concurrent.Executor mCallbackExecutor>
<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$SessionCallback mCallback>
<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>
<android.support.media2.MediaSession2$BuilderBase: android.app.PendingIntent mSessionActivity>
    void <init>(android.content.Context)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        android.content.Context r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r2;

     label1:
        r0.<android.support.media2.MediaSession2$BuilderBase: android.content.Context mContext> = r1;

        r0.<android.support.media2.MediaSession2$BuilderBase: java.lang.String mId> = "";

        return;
    }

    android.support.media2.MediaSession2$BuilderBase setPlayer(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("player shouldn\'t be null");

        throw $r2;

     label1:
        r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaPlayerConnector mPlayer> = r1;

        return r0;
    }

    android.support.media2.MediaSession2$BuilderBase setPlaylistAgent(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("playlistAgent shouldn\'t be null");

        throw $r2;

     label1:
        r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent> = r1;

        return r0;
    }

    android.support.media2.MediaSession2$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        android.app.PendingIntent r1;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<android.support.media2.MediaSession2$BuilderBase: android.app.PendingIntent mSessionActivity> = r1;

        return r0;
    }

    android.support.media2.MediaSession2$BuilderBase setId(java.lang.String)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id shouldn\'t be null");

        throw $r2;

     label1:
        r0.<android.support.media2.MediaSession2$BuilderBase: java.lang.String mId> = r1;

        return r0;
    }

    android.support.media2.MediaSession2$BuilderBase setSessionCallback(java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2$BuilderBase r0;
        java.util.concurrent.Executor r1;
        android.support.media2.MediaSession2$SessionCallback r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.support.media2.MediaSession2$BuilderBase;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.support.media2.MediaSession2$SessionCallback;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r3;

     label2:
        r0.<android.support.media2.MediaSession2$BuilderBase: java.util.concurrent.Executor mCallbackExecutor> = r1;

        r0.<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2$SessionCallback mCallback> = r2;

        return r0;
    }

<android.support.media2.MediaSession2$BuilderBase: android.support.media2.MediaSession2 build()>
android.support.media2.MediaSession2$CommandButton$Builder
<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.SessionCommand2 mCommand>
<android.support.media2.MediaSession2$CommandButton$Builder: int mIconResId>
<android.support.media2.MediaSession2$CommandButton$Builder: java.lang.String mDisplayName>
<android.support.media2.MediaSession2$CommandButton$Builder: android.os.Bundle mExtras>
<android.support.media2.MediaSession2$CommandButton$Builder: boolean mEnabled>
    public void <init>()
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.media2.MediaSession2$CommandButton$Builder setCommand(android.support.media2.SessionCommand2)
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        android.support.media2.SessionCommand2 r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r0.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.SessionCommand2 mCommand> = r1;

        return r0;
    }

    public android.support.media2.MediaSession2$CommandButton$Builder setIconResId(int)
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        int i0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        i0 := @parameter0: int;

        r0.<android.support.media2.MediaSession2$CommandButton$Builder: int mIconResId> = i0;

        return r0;
    }

    public android.support.media2.MediaSession2$CommandButton$Builder setDisplayName(java.lang.String)
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        java.lang.String r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.support.media2.MediaSession2$CommandButton$Builder: java.lang.String mDisplayName> = r1;

        return r0;
    }

    public android.support.media2.MediaSession2$CommandButton$Builder setEnabled(boolean)
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        boolean z0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        z0 := @parameter0: boolean;

        r0.<android.support.media2.MediaSession2$CommandButton$Builder: boolean mEnabled> = z0;

        return r0;
    }

    public android.support.media2.MediaSession2$CommandButton$Builder setExtras(android.os.Bundle)
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.support.media2.MediaSession2$CommandButton$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public android.support.media2.MediaSession2$CommandButton build()
    {
        android.support.media2.MediaSession2$CommandButton$Builder r0;
        android.support.media2.MediaSession2$CommandButton $r1;
        boolean $z0;
        android.os.Bundle $r2;
        java.lang.String $r3;
        int $i0;
        android.support.media2.SessionCommand2 $r4;

        r0 := @this: android.support.media2.MediaSession2$CommandButton$Builder;

        $r1 = new android.support.media2.MediaSession2$CommandButton;

        $r4 = r0.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.SessionCommand2 mCommand>;

        $i0 = r0.<android.support.media2.MediaSession2$CommandButton$Builder: int mIconResId>;

        $r3 = r0.<android.support.media2.MediaSession2$CommandButton$Builder: java.lang.String mDisplayName>;

        $r2 = r0.<android.support.media2.MediaSession2$CommandButton$Builder: android.os.Bundle mExtras>;

        $z0 = r0.<android.support.media2.MediaSession2$CommandButton$Builder: boolean mEnabled>;

        specialinvoke $r1.<android.support.media2.MediaSession2$CommandButton: void <init>(android.support.media2.SessionCommand2,int,java.lang.String,android.os.Bundle,boolean)>($r4, $i0, $r3, $r2, $z0);

        return $r1;
    }

android.support.media2.MediaSession2$CommandButton
<android.support.media2.MediaSession2$CommandButton: java.lang.String KEY_COMMAND>
<android.support.media2.MediaSession2$CommandButton: java.lang.String KEY_ICON_RES_ID>
<android.support.media2.MediaSession2$CommandButton: java.lang.String KEY_DISPLAY_NAME>
<android.support.media2.MediaSession2$CommandButton: java.lang.String KEY_EXTRAS>
<android.support.media2.MediaSession2$CommandButton: java.lang.String KEY_ENABLED>
<android.support.media2.MediaSession2$CommandButton: android.support.media2.SessionCommand2 mCommand>
<android.support.media2.MediaSession2$CommandButton: int mIconResId>
<android.support.media2.MediaSession2$CommandButton: java.lang.String mDisplayName>
<android.support.media2.MediaSession2$CommandButton: android.os.Bundle mExtras>
<android.support.media2.MediaSession2$CommandButton: boolean mEnabled>
    void <init>()
    {
        android.support.media2.MediaSession2$CommandButton r0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.support.media2.SessionCommand2, int, java.lang.String, android.os.Bundle, boolean)
    {
        android.support.media2.MediaSession2$CommandButton r0;
        android.support.media2.SessionCommand2 r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.MediaSession2$CommandButton: android.support.media2.SessionCommand2 mCommand> = r1;

        r0.<android.support.media2.MediaSession2$CommandButton: int mIconResId> = i0;

        r0.<android.support.media2.MediaSession2$CommandButton: java.lang.String mDisplayName> = r2;

        r0.<android.support.media2.MediaSession2$CommandButton: android.os.Bundle mExtras> = r3;

        r0.<android.support.media2.MediaSession2$CommandButton: boolean mEnabled> = z0;

        return;
    }

    public android.support.media2.SessionCommand2 getCommand()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        android.support.media2.SessionCommand2 $r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $r1 = r0.<android.support.media2.MediaSession2$CommandButton: android.support.media2.SessionCommand2 mCommand>;

        return $r1;
    }

    public int getIconResId()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $i0 = r0.<android.support.media2.MediaSession2$CommandButton: int mIconResId>;

        return $i0;
    }

    public java.lang.String getDisplayName()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        java.lang.String $r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $r1 = r0.<android.support.media2.MediaSession2$CommandButton: java.lang.String mDisplayName>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $r1 = r0.<android.support.media2.MediaSession2$CommandButton: android.os.Bundle mExtras>;

        return $r1;
    }

    public boolean isEnabled()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        boolean $z0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $z0 = r0.<android.support.media2.MediaSession2$CommandButton: boolean mEnabled>;

        return $z0;
    }

    public android.os.Bundle toBundle()
    {
        android.support.media2.MediaSession2$CommandButton r0;
        android.os.Bundle r1, $r2, $r4, $r6;
        android.support.media2.SessionCommand2 $r3;
        int $i0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: android.support.media2.MediaSession2$CommandButton;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<android.support.media2.MediaSession2$CommandButton: android.support.media2.SessionCommand2 mCommand>;

        $r4 = virtualinvoke $r3.<android.support.media2.SessionCommand2: android.os.Bundle toBundle()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.media.session2.command_button.command", $r4);

        $i0 = r0.<android.support.media2.MediaSession2$CommandButton: int mIconResId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.media.session2.command_button.icon_res_id", $i0);

        $r5 = r0.<android.support.media2.MediaSession2$CommandButton: java.lang.String mDisplayName>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.media.session2.command_button.display_name", $r5);

        $r6 = r0.<android.support.media2.MediaSession2$CommandButton: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.media.session2.command_button.extras", $r6);

        $z0 = r0.<android.support.media2.MediaSession2$CommandButton: boolean mEnabled>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.media.session2.command_button.enabled", $z0);

        return r1;
    }

    public static android.support.media2.MediaSession2$CommandButton fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r4, $r10;
        android.support.media2.MediaSession2$CommandButton$Builder r1, $r3;
        java.lang.Throwable r2, $r14;
        android.support.media2.SessionCommand2 $r5;
        int $i0;
        java.lang.String $r8;
        boolean $z0;
        android.support.media2.MediaSession2$CommandButton $r13;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new android.support.media2.MediaSession2$CommandButton$Builder;

        specialinvoke $r3.<android.support.media2.MediaSession2$CommandButton$Builder: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android.media.session2.command_button.command");

        $r5 = staticinvoke <android.support.media2.SessionCommand2: android.support.media2.SessionCommand2 fromBundle(android.os.Bundle)>($r4);

        virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton$Builder setCommand(android.support.media2.SessionCommand2)>($r5);

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String,int)>("android.media.session2.command_button.icon_res_id", 0);

        virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton$Builder setIconResId(int)>($i0);

        $r8 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.session2.command_button.display_name");

        virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton$Builder setDisplayName(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android.media.session2.command_button.extras");

        virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton$Builder setExtras(android.os.Bundle)>($r10);

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.media.session2.command_button.enabled");

        virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton$Builder setEnabled(boolean)>($z0);

     label2:
        $r13 = virtualinvoke r1.<android.support.media2.MediaSession2$CommandButton$Builder: android.support.media2.MediaSession2$CommandButton build()>();

     label3:
        return $r13;

     label4:
        $r14 := @caughtexception;

        r2 = $r14;

        return null;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

android.support.media2.MediaSession2$ControllerCb
    void <init>()
    {
        android.support.media2.MediaSession2$ControllerCb r0;

        r0 := @this: android.support.media2.MediaSession2$ControllerCb;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.media2.MediaSession2$ControllerCb: void onCustomLayoutChanged(java.util.List)>
<android.support.media2.MediaSession2$ControllerCb: void onPlaybackInfoChanged(android.support.media2.MediaController2$PlaybackInfo)>
<android.support.media2.MediaSession2$ControllerCb: void onAllowedCommandsChanged(android.support.media2.SessionCommandGroup2)>
<android.support.media2.MediaSession2$ControllerCb: void onCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>
<android.support.media2.MediaSession2$ControllerCb: void onPlayerStateChanged(long,long,int)>
<android.support.media2.MediaSession2$ControllerCb: void onPlaybackSpeedChanged(long,long,float)>
<android.support.media2.MediaSession2$ControllerCb: void onBufferingStateChanged(android.support.media2.MediaItem2,int,long)>
<android.support.media2.MediaSession2$ControllerCb: void onSeekCompleted(long,long,long)>
<android.support.media2.MediaSession2$ControllerCb: void onError(int,android.os.Bundle)>
<android.support.media2.MediaSession2$ControllerCb: void onCurrentMediaItemChanged(android.support.media2.MediaItem2)>
<android.support.media2.MediaSession2$ControllerCb: void onPlaylistChanged(java.util.List,android.support.media2.MediaMetadata2)>
<android.support.media2.MediaSession2$ControllerCb: void onPlaylistMetadataChanged(android.support.media2.MediaMetadata2)>
<android.support.media2.MediaSession2$ControllerCb: void onShuffleModeChanged(int)>
<android.support.media2.MediaSession2$ControllerCb: void onRepeatModeChanged(int)>
<android.support.media2.MediaSession2$ControllerCb: void onRoutesInfoChanged(java.util.List)>
<android.support.media2.MediaSession2$ControllerCb: void onDisconnected()>
<android.support.media2.MediaSession2$ControllerCb: void onGetLibraryRootDone(android.os.Bundle,java.lang.String,android.os.Bundle)>
<android.support.media2.MediaSession2$ControllerCb: void onChildrenChanged(java.lang.String,int,android.os.Bundle)>
<android.support.media2.MediaSession2$ControllerCb: void onGetChildrenDone(java.lang.String,int,int,java.util.List,android.os.Bundle)>
<android.support.media2.MediaSession2$ControllerCb: void onGetItemDone(java.lang.String,android.support.media2.MediaItem2)>
<android.support.media2.MediaSession2$ControllerCb: void onSearchResultChanged(java.lang.String,int,android.os.Bundle)>
<android.support.media2.MediaSession2$ControllerCb: void onGetSearchResultDone(java.lang.String,int,int,java.util.List,android.os.Bundle)>
android.support.media2.MediaSession2$ControllerInfo
<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>
<android.support.media2.MediaSession2$ControllerInfo: boolean mIsTrusted>
<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>
    void <init>(android.support.v4.media.MediaSessionManager$RemoteUserInfo, boolean, android.support.media2.MediaSession2$ControllerCb)
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo r1;
        boolean z0;
        android.support.media2.MediaSession2$ControllerCb r2;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        r1 := @parameter0: android.support.v4.media.MediaSessionManager$RemoteUserInfo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.support.media2.MediaSession2$ControllerCb;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo> = r1;

        r0.<android.support.media2.MediaSession2$ControllerInfo: boolean mIsTrusted> = z0;

        r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb> = r2;

        return;
    }

    public android.support.v4.media.MediaSessionManager$RemoteUserInfo getRemoteUserInfo()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo $r1;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo $r1;
        java.lang.String $r2;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        return $r2;
    }

    public int getUid()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo $r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $i0 = virtualinvoke $r1.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        return $i0;
    }

    public boolean isTrusted()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        boolean $z0;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $z0 = r0.<android.support.media2.MediaSession2$ControllerInfo: boolean mIsTrusted>;

        return $z0;
    }

    public int hashCode()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.media2.MediaSession2$ControllerCb $r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.media2.MediaSession2$ControllerInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        android.support.media2.MediaSession2$ControllerCb $r3, $r4, $r5, $r6;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo $r7, $r8;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.support.media2.MediaSession2$ControllerInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (android.support.media2.MediaSession2$ControllerInfo) r1;

        $r3 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        if $r3 != null goto label3;

        $r6 = r2.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        if $r6 == null goto label4;

     label3:
        $r5 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        $r4 = r2.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        $z1 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $z1;

     label4:
        $r8 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r7 = r2.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $z2 = virtualinvoke $r8.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: boolean equals(java.lang.Object)>($r7);

        return $z2;
    }

    public java.lang.String toString()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo $r3, $r7;
        java.lang.String $r4, $r10;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ControllerInfo {pkg=");

        $r3 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r7 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.v4.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $i0 = virtualinvoke $r7.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    android.support.media2.MediaSession2$ControllerCb getControllerCb()
    {
        android.support.media2.MediaSession2$ControllerInfo r0;
        android.support.media2.MediaSession2$ControllerCb $r1;

        r0 := @this: android.support.media2.MediaSession2$ControllerInfo;

        $r1 = r0.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb mControllerCb>;

        return $r1;
    }

android.support.media2.MediaSession2$ErrorCode
android.support.media2.MediaSession2$MainHandlerExecutor
<android.support.media2.MediaSession2$MainHandlerExecutor: android.os.Handler mHandler>
    void <init>(android.content.Context)
    {
        android.support.media2.MediaSession2$MainHandlerExecutor r0;
        android.content.Context r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: android.support.media2.MediaSession2$MainHandlerExecutor;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Handler;

        $r3 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<android.support.media2.MediaSession2$MainHandlerExecutor: android.os.Handler mHandler> = $r2;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        android.support.media2.MediaSession2$MainHandlerExecutor r0;
        java.lang.Runnable r1;
        android.os.Handler $r2, $r5;
        boolean $z0;
        java.util.concurrent.RejectedExecutionException $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.support.media2.MediaSession2$MainHandlerExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.support.media2.MediaSession2$MainHandlerExecutor: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.util.concurrent.RejectedExecutionException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.support.media2.MediaSession2$MainHandlerExecutor: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is shutting down");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return;
    }

android.support.media2.MediaSession2$MediaSession2Impl
<android.support.media2.MediaSession2$MediaSession2Impl: void updatePlayer(android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent)>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaPlayerConnector getPlayer()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaPlaylistAgent getPlaylistAgent()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.SessionToken2 getToken()>
<android.support.media2.MediaSession2$MediaSession2Impl: java.util.List getConnectedControllers()>
<android.support.media2.MediaSession2$MediaSession2Impl: void setCustomLayout(android.support.media2.MediaSession2$ControllerInfo,java.util.List)>
<android.support.media2.MediaSession2$MediaSession2Impl: void setAllowedCommands(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommandGroup2)>
<android.support.media2.MediaSession2$MediaSession2Impl: void sendCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle)>
<android.support.media2.MediaSession2$MediaSession2Impl: void sendCustomCommand(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>
<android.support.media2.MediaSession2$MediaSession2Impl: void notifyRoutesInfoChanged(android.support.media2.MediaSession2$ControllerInfo,java.util.List)>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaSession2 getInstance()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.os.IBinder getSessionBinder()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.content.Context getContext()>
<android.support.media2.MediaSession2$MediaSession2Impl: java.util.concurrent.Executor getCallbackExecutor()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaSession2$SessionCallback getCallback()>
<android.support.media2.MediaSession2$MediaSession2Impl: boolean isClosed()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.AudioFocusHandler getAudioFocusHandler()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.app.PendingIntent getSessionActivity()>
<android.support.media2.MediaSession2$MediaSession2Impl: android.os.IBinder getLegacyBrowserServiceBinder()>
android.support.media2.MediaSession2$OnDataSourceMissingHelper
<android.support.media2.MediaSession2$OnDataSourceMissingHelper: android.support.media2.DataSourceDesc2 onDataSourceMissing(android.support.media2.MediaSession2,android.support.media2.MediaItem2)>
android.support.media2.MediaSession2$SessionCallback
    public void <init>()
    {
        android.support.media2.MediaSession2$SessionCallback r0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.media2.SessionCommandGroup2 onConnect(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.support.media2.SessionCommandGroup2 r3;
        android.support.media2.SessionCommandGroup2$Builder $r4, $r5;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        $r4 = new android.support.media2.SessionCommandGroup2$Builder;

        specialinvoke $r4.<android.support.media2.SessionCommandGroup2$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.support.media2.SessionCommandGroup2$Builder: android.support.media2.SessionCommandGroup2$Builder addAllPredefinedCommands()>();

        r3 = virtualinvoke $r5.<android.support.media2.SessionCommandGroup2$Builder: android.support.media2.SessionCommandGroup2 build()>();

        return r3;
    }

    public void onDisconnected(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        return;
    }

    public boolean onCommandRequest(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommand2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.support.media2.SessionCommand2 r3;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.support.media2.SessionCommand2;

        return 1;
    }

    public void onSetRating(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.support.media2.Rating2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.support.media2.Rating2 r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.support.media2.Rating2;

        return;
    }

    public void onCustomCommand(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.support.media2.SessionCommand2 r3;
        android.os.Bundle r4;
        android.os.ResultReceiver r5;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.support.media2.SessionCommand2;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.ResultReceiver;

        return;
    }

    public void onPlayFromMediaId(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onPlayFromSearch(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onPlayFromUri(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.net.Uri r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onPrepareFromMediaId(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onPrepareFromSearch(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onPrepareFromUri(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.net.Uri r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onFastForward(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        return;
    }

    public void onRewind(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        return;
    }

    public void onSubscribeRoutesInfo(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        return;
    }

    public void onUnsubscribeRoutesInfo(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        return;
    }

    public void onSelectRoute(android.support.media2.MediaSession2, android.support.media2.MediaSession2$ControllerInfo, android.os.Bundle)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.os.Bundle r3;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void onCurrentMediaItemChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        android.support.media2.MediaItem2 r3;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        r3 := @parameter2: android.support.media2.MediaItem2;

        return;
    }

    public void onMediaPrepared(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        android.support.media2.MediaItem2 r3;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        r3 := @parameter2: android.support.media2.MediaItem2;

        return;
    }

    public void onPlayerStateChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, int)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        int i0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        i0 := @parameter2: int;

        return;
    }

    public void onBufferingStateChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, android.support.media2.MediaItem2, int)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        android.support.media2.MediaItem2 r3;
        int i0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        r3 := @parameter2: android.support.media2.MediaItem2;

        i0 := @parameter3: int;

        return;
    }

    public void onPlaybackSpeedChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, float)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        float f0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        f0 := @parameter2: float;

        return;
    }

    public void onSeekCompleted(android.support.media2.MediaSession2, android.support.media2.MediaPlayerConnector, long)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlayerConnector r2;
        long l0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlayerConnector;

        l0 := @parameter2: long;

        return;
    }

    public void onPlaylistChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlaylistAgent, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.util.List r3;
        android.support.media2.MediaMetadata2 r4;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlaylistAgent;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.support.media2.MediaMetadata2;

        return;
    }

    public void onPlaylistMetadataChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlaylistAgent, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        android.support.media2.MediaMetadata2 r3;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlaylistAgent;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        return;
    }

    public void onShuffleModeChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        int i0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter2: int;

        return;
    }

    public void onRepeatModeChanged(android.support.media2.MediaSession2, android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2$SessionCallback r0;
        android.support.media2.MediaSession2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        int i0;

        r0 := @this: android.support.media2.MediaSession2$SessionCallback;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter2: int;

        return;
    }

