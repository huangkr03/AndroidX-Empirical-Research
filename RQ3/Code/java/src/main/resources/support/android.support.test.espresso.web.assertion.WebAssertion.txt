android.support.test.espresso.web.assertion.WebAssertion
<android.support.test.espresso.web.assertion.WebAssertion: android.support.test.espresso.web.model.Atom atom>
    public void <init>(android.support.test.espresso.web.model.Atom)
    {
        android.support.test.espresso.web.assertion.WebAssertion r0;
        android.support.test.espresso.web.model.Atom r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.web.assertion.WebAssertion;

        r1 := @parameter0: android.support.test.espresso.web.model.Atom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.web.model.Atom) $r2;

        r0.<android.support.test.espresso.web.assertion.WebAssertion: android.support.test.espresso.web.model.Atom atom> = $r3;

        return;
    }

    public final android.support.test.espresso.web.model.Atom getAtom()
    {
        android.support.test.espresso.web.assertion.WebAssertion r0;
        android.support.test.espresso.web.model.Atom $r1;

        r0 := @this: android.support.test.espresso.web.assertion.WebAssertion;

        $r1 = r0.<android.support.test.espresso.web.assertion.WebAssertion: android.support.test.espresso.web.model.Atom atom>;

        return $r1;
    }

    public final android.support.test.espresso.ViewAssertion toViewAssertion(java.lang.Object)
    {
        android.support.test.espresso.web.assertion.WebAssertion r0;
        java.lang.Object r1, $r3;
        android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion $r2;

        r0 := @this: android.support.test.espresso.web.assertion.WebAssertion;

        r1 := @parameter0: java.lang.Object;

        $r2 = new android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        $r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke $r2.<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: void <init>(java.lang.Object,android.support.test.espresso.web.assertion.WebAssertion)>($r3, r0);

        return $r2;
    }

<android.support.test.espresso.web.assertion.WebAssertion: void checkResult(android.webkit.WebView,java.lang.Object)>
android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion
<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result>
<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: android.support.test.espresso.web.assertion.WebAssertion webAssertion>
    void <init>(java.lang.Object, android.support.test.espresso.web.assertion.WebAssertion)
    {
        android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r0;
        java.lang.Object r1;
        android.support.test.espresso.web.assertion.WebAssertion r2;

        r0 := @this: android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.test.espresso.web.assertion.WebAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result> = r1;

        r0.<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: android.support.test.espresso.web.assertion.WebAssertion webAssertion> = r2;

        return;
    }

    public void check(android.view.View, android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r0;
        android.view.View r1;
        android.support.test.espresso.NoMatchingViewException r2;
        java.lang.String r3, $r8, $r12;
        boolean $z0;
        java.lang.Object $r4;
        android.webkit.WebView $r5;
        android.support.test.espresso.web.assertion.WebAssertion $r6;
        int $i0, $i1;
        java.lang.StringBuilder $r10, $r11, r13;
        java.lang.RuntimeException r14;
        java.lang.Throwable r15;

        r0 := @this: android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.test.espresso.NoMatchingViewException;

        if null != r1 goto label1;

        throw r2;

     label1:
        $z0 = r1 instanceof android.webkit.WebView;

        if $z0 != 0 goto label2;

        r14 = new java.lang.RuntimeException;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = 19 + $i0;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": is not a WebView!");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        r15 = (java.lang.Throwable) r14;

        throw r15;

     label2:
        $r6 = r0.<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: android.support.test.espresso.web.assertion.WebAssertion webAssertion>;

        $r5 = (android.webkit.WebView) r1;

        $r4 = r0.<android.support.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result>;

        virtualinvoke $r6.<android.support.test.espresso.web.assertion.WebAssertion: void checkResult(android.webkit.WebView,java.lang.Object)>($r5, $r4);

        return;
    }

