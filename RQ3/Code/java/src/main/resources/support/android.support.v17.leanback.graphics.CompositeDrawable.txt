android.support.v17.leanback.graphics.CompositeDrawable
<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>
<android.support.v17.leanback.graphics.CompositeDrawable: boolean mMutated>
    public void <init>()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable: boolean mMutated> = 0;

        $r1 = new android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        specialinvoke $r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState> = $r1;

        return;
    }

    void <init>(android.support.v17.leanback.graphics.CompositeDrawable$CompositeState)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable: boolean mMutated> = 0;

        r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState> = r1;

        return;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        return $r1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2, $r3;
        boolean $z0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r4, $r5, $r6;
        java.lang.Object $r7;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        $z0 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: boolean mMutated>;

        if $z0 != 0 goto label4;

        $r3 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r3 != r0 goto label4;

        $r4 = new android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        $r5 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        specialinvoke $r4.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: void <init>(android.support.v17.leanback.graphics.CompositeDrawable$CompositeState,android.support.v17.leanback.graphics.CompositeDrawable,android.content.res.Resources)>($r5, r0, null);

        r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState> = $r4;

        $r6 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r1 = $r6.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label3;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r7;

        r2 = $r8.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.support.v17.leanback.graphics.CompositeDrawable: boolean mMutated> = 1;

     label4:
        return r0;
    }

    public void addChildDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r2;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r4 = $r2.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r3 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        specialinvoke $r3.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void <init>(android.graphics.drawable.Drawable,android.support.v17.leanback.graphics.CompositeDrawable)>(r1, r0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void setChildDrawableAt(int, android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r2;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r4 = $r2.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r3 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        specialinvoke $r3.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void <init>(android.graphics.drawable.Drawable,android.support.v17.leanback.graphics.CompositeDrawable)>(r1, r0);

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, $r3);

        return;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        int i0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r2 = $r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r3;

        $r5 = $r4.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r5;
    }

    public android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable getChildAt(int)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        int i0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r2 = $r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r3;

        return $r4;
    }

    public void removeChild(int)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        int i0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r2 = $r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return;
    }

    public void removeDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1, $r6, $r9;
        java.util.ArrayList r2;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r3;
        int $i0, i1;
        java.lang.Object $r4, $r7;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r5, $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r2 = $r3.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r4;

        $r6 = $r5.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r1 != $r6 goto label2;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r7;

        $r9 = $r8.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public int getChildCount()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        $r2 = $r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.Canvas r1;
        java.util.ArrayList r2;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r2 = $r3.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r4;

        $r6 = $r5.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable: void updateBounds(android.graphics.Rect)>(r1);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.ColorFilter r1;
        java.util.ArrayList r2;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r3 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r2 = $r3.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r4;

        $r6 = $r5.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getOpacity()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        return 0;
    }

    public void setAlpha(int)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        int i0, $i1, i2;
        java.util.ArrayList r1;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r2;
        java.lang.Object $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r1 = $r2.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r3;

        $r5 = $r4.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public int getAlpha()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1;
        int $i0;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.drawable.Drawable getFirstNonNullDrawable()>();

        if r1 == null goto label1;

        $i0 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)>(r1);

        return $i0;

     label1:
        return 255;
    }

    final android.graphics.drawable.Drawable getFirstNonNullDrawable()
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r3;
        java.lang.Object $r4;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r5;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        $r3 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r1 = $r3.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r4;

        r2 = $r5.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable: void invalidateSelf()>();

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable: void scheduleSelf(java.lang.Runnable,long)>(r2, l0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable: void unscheduleSelf(java.lang.Runnable)>(r2);

        return;
    }

    void updateBounds(android.graphics.Rect)
    {
        android.support.v17.leanback.graphics.CompositeDrawable r0;
        android.graphics.Rect r1;
        java.util.ArrayList r2;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r3;
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<android.support.v17.leanback.graphics.CompositeDrawable: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState mState>;

        r2 = $r4.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r5;

        virtualinvoke r3.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void updateBounds(android.graphics.Rect)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Integer)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Integer r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Integer;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule absoluteValue(int)>($i1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setAbsoluteValue(int)>($i0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r6, $r9;
        android.support.v17.leanback.graphics.CompositeDrawable $r7;
        android.graphics.Rect $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        if $r3 != null goto label1;

        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>;

        $r8 = virtualinvoke $r7.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.Rect getBounds()>();

        $i1 = $r8.<android.graphics.Rect: int top>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        $i0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: int getAbsoluteValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Integer $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1: java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Integer)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Integer)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Integer r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Integer;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule absoluteValue(int)>($i1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setAbsoluteValue(int)>($i0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r6, $r9;
        android.support.v17.leanback.graphics.CompositeDrawable $r7;
        android.graphics.Rect $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        if $r3 != null goto label1;

        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>;

        $r8 = virtualinvoke $r7.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.Rect getBounds()>();

        $i1 = $r8.<android.graphics.Rect: int bottom>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        $i0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: int getAbsoluteValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Integer $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2: java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Integer)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Integer)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Integer r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Integer;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule absoluteValue(int)>($i1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setAbsoluteValue(int)>($i0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r6, $r9;
        android.support.v17.leanback.graphics.CompositeDrawable $r7;
        android.graphics.Rect $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        if $r3 != null goto label1;

        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>;

        $r8 = virtualinvoke $r7.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.Rect getBounds()>();

        $i1 = $r8.<android.graphics.Rect: int left>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        $i0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: int getAbsoluteValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Integer $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3: java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Integer)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Integer)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Integer r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Integer;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule absoluteValue(int)>($i1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setAbsoluteValue(int)>($i0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        int $i0, $i1;
        java.lang.Integer $r6, $r9;
        android.support.v17.leanback.graphics.CompositeDrawable $r7;
        android.graphics.Rect $r8;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        if $r3 != null goto label1;

        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>;

        $r8 = virtualinvoke $r7.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.Rect getBounds()>();

        $i1 = $r8.<android.graphics.Rect: int right>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        $i0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: int getAbsoluteValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Integer $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4: java.lang.Integer get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 r0;
        java.lang.Object r1, r2;
        java.lang.Integer $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Integer)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Float)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Float r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        float $f0, $f1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Float;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule inheritFromParent(float)>($f1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setFraction(float)>($f0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        float $f0;
        java.lang.Float $r6, $r7;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r7;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule top>;

        $f0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: float getFraction()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Float $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5: java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 r0;
        java.lang.Object r1, r2;
        java.lang.Float $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Float) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Float)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Float)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Float r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        float $f0, $f1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Float;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule inheritFromParent(float)>($f1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setFraction(float)>($f0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        float $f0;
        java.lang.Float $r6, $r7;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        return $r7;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule bottom>;

        $f0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: float getFraction()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Float $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6: java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 r0;
        java.lang.Object r1, r2;
        java.lang.Float $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Float) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Float)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Float)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Float r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        float $f0, $f1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Float;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule inheritFromParent(float)>($f1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setFraction(float)>($f0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        float $f0;
        java.lang.Float $r6, $r7;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r7;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule left>;

        $f0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: float getFraction()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Float $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7: java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 r0;
        java.lang.Object r1, r2;
        java.lang.Float $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Float) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Float)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8
    void <init>(java.lang.Class, java.lang.String)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, java.lang.Float)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        java.lang.Float r2;
        android.support.v17.leanback.graphics.BoundsRule $r3, $r5, $r7;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r4, $r6, $r8;
        float $f0, $f1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: java.lang.Float;

        $r3 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r4 = $r3.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r8 = staticinvoke <android.support.v17.leanback.graphics.BoundsRule$ValueRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule inheritFromParent(float)>($f1);

        $r7.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right> = $r8;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r6 = $r5.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        virtualinvoke $r6.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: void setFraction(float)>($f0);

     label2:
        virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void recomputeBounds()>();

        return;
    }

    public java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r1;
        android.support.v17.leanback.graphics.BoundsRule $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule$ValueRule $r3, $r5;
        float $f0;
        java.lang.Float $r6, $r7;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r2 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r3 = $r2.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        return $r7;

     label1:
        $r4 = virtualinvoke r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule getBoundsRule()>();

        $r5 = $r4.<android.support.v17.leanback.graphics.BoundsRule: android.support.v17.leanback.graphics.BoundsRule$ValueRule right>;

        $f0 = virtualinvoke $r5.<android.support.v17.leanback.graphics.BoundsRule$ValueRule: float getFraction()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 r0;
        java.lang.Object r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r2;
        java.lang.Float $r3;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8: java.lang.Float get(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable)>($r2);

        return $r3;
    }

    public volatile void set(java.lang.Object, java.lang.Object)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 r0;
        java.lang.Object r1, r2;
        java.lang.Float $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) r1;

        $r3 = (java.lang.Float) r2;

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8: void set(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,java.lang.Float)>($r4, $r3);

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.Rect adjustedBounds>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property TOP_ABSOLUTE>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property BOTTOM_ABSOLUTE>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property LEFT_ABSOLUTE>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property RIGHT_ABSOLUTE>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property TOP_FRACTION>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property BOTTOM_FRACTION>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property LEFT_FRACTION>
<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property RIGHT_FRACTION>
    public void <init>(android.graphics.drawable.Drawable, android.support.v17.leanback.graphics.CompositeDrawable)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.support.v17.leanback.graphics.CompositeDrawable r2;
        android.graphics.Rect $r3;
        android.support.v17.leanback.graphics.BoundsRule $r4;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.support.v17.leanback.graphics.CompositeDrawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.Rect adjustedBounds> = $r3;

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent> = r2;

        $r4 = new android.support.v17.leanback.graphics.BoundsRule;

        specialinvoke $r4.<android.support.v17.leanback.graphics.BoundsRule: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule> = $r4;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r2);

        return;
    }

    void <init>(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable, android.support.v17.leanback.graphics.CompositeDrawable, android.content.res.Resources)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0, r1;
        android.support.v17.leanback.graphics.CompositeDrawable r2;
        android.content.res.Resources r3;
        android.graphics.drawable.Drawable r4, r12;
        android.graphics.drawable.Drawable$ConstantState r5;
        android.graphics.Rect $r6, $r11;
        android.support.v17.leanback.graphics.BoundsRule $r7, $r8, $r9, $r10;
        int $i0, $i1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r2 := @parameter1: android.support.v17.leanback.graphics.CompositeDrawable;

        r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.Rect adjustedBounds> = $r6;

        r4 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r4 == null goto label3;

        r5 = virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r3 == null goto label1;

        r12 = virtualinvoke r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(r3);

        goto label2;

     label1:
        r12 = virtualinvoke r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

     label2:
        virtualinvoke r12.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r2);

        $i0 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>(r4);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>(r12, $i0);

        $r11 = virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r12.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r11);

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke r12.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i1);

        goto label4;

     label3:
        r12 = null;

     label4:
        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule>;

        if $r7 == null goto label5;

        $r9 = new android.support.v17.leanback.graphics.BoundsRule;

        $r10 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule>;

        specialinvoke $r9.<android.support.v17.leanback.graphics.BoundsRule: void <init>(android.support.v17.leanback.graphics.BoundsRule)>($r10);

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule> = $r9;

        goto label6;

     label5:
        $r8 = new android.support.v17.leanback.graphics.BoundsRule;

        specialinvoke $r8.<android.support.v17.leanback.graphics.BoundsRule: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule> = $r8;

     label6:
        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r12;

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent> = r2;

        return;
    }

    public android.support.v17.leanback.graphics.BoundsRule getBoundsRule()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0;
        android.support.v17.leanback.graphics.BoundsRule $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    void updateBounds(android.graphics.Rect)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0;
        android.graphics.Rect r1, $r2, $r4;
        android.support.v17.leanback.graphics.BoundsRule $r3;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.BoundsRule mBoundsRule>;

        $r2 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.Rect adjustedBounds>;

        virtualinvoke $r3.<android.support.v17.leanback.graphics.BoundsRule: void calculateBounds(android.graphics.Rect,android.graphics.Rect)>(r1, $r2);

        $r5 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $r4 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.graphics.Rect adjustedBounds>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r4);

        return;
    }

    public void recomputeBounds()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable r0;
        android.support.v17.leanback.graphics.CompositeDrawable $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r1 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.support.v17.leanback.graphics.CompositeDrawable mParent>;

        $r2 = virtualinvoke $r1.<android.support.v17.leanback.graphics.CompositeDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void updateBounds(android.graphics.Rect)>($r2);

        return;
    }

    static void <clinit>()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1 $r0;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2 $r1;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3 $r2;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4 $r3;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5 $r4;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6 $r5;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7 $r6;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8 $r7;

        $r0 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1;

        specialinvoke $r0.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$1: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "absoluteTop");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property TOP_ABSOLUTE> = $r0;

        $r1 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2;

        specialinvoke $r1.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$2: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "absoluteBottom");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property BOTTOM_ABSOLUTE> = $r1;

        $r2 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3;

        specialinvoke $r2.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$3: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "absoluteLeft");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property LEFT_ABSOLUTE> = $r2;

        $r3 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4;

        specialinvoke $r3.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$4: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "absoluteRight");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property RIGHT_ABSOLUTE> = $r3;

        $r4 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5;

        specialinvoke $r4.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$5: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "fractionTop");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property TOP_FRACTION> = $r4;

        $r5 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6;

        specialinvoke $r5.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$6: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "fractionBottom");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property BOTTOM_FRACTION> = $r5;

        $r6 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7;

        specialinvoke $r6.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$7: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "fractionLeft");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property LEFT_FRACTION> = $r6;

        $r7 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8;

        specialinvoke $r7.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable$8: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "fractionRight");

        <android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: android.util.Property RIGHT_FRACTION> = $r7;

        return;
    }

android.support.v17.leanback.graphics.CompositeDrawable$CompositeState
<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>
    void <init>()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren> = $r1;

        return;
    }

    void <init>(android.support.v17.leanback.graphics.CompositeDrawable$CompositeState, android.support.v17.leanback.graphics.CompositeDrawable, android.content.res.Resources)
    {
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState r0, r1;
        android.support.v17.leanback.graphics.CompositeDrawable r2;
        android.content.res.Resources r3;
        int i0, i1;
        java.util.ArrayList $r4, $r5, $r7, $r8;
        android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable $r6, $r10;
        java.lang.Object $r9;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        r1 := @parameter0: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        r2 := @parameter1: android.support.v17.leanback.graphics.CompositeDrawable;

        r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r4 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren> = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r6 = new android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable;

        $r7 = r1.<android.support.v17.leanback.graphics.CompositeDrawable$CompositeState: java.util.ArrayList mChildren>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable) $r9;

        specialinvoke $r6.<android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable: void <init>(android.support.v17.leanback.graphics.CompositeDrawable$ChildDrawable,android.support.v17.leanback.graphics.CompositeDrawable,android.content.res.Resources)>($r10, r2, r3);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState r0;
        android.support.v17.leanback.graphics.CompositeDrawable $r1;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        $r1 = new android.support.v17.leanback.graphics.CompositeDrawable;

        specialinvoke $r1.<android.support.v17.leanback.graphics.CompositeDrawable: void <init>(android.support.v17.leanback.graphics.CompositeDrawable$CompositeState)>(r0);

        return $r1;
    }

    public int getChangingConfigurations()
    {
        android.support.v17.leanback.graphics.CompositeDrawable$CompositeState r0;

        r0 := @this: android.support.v17.leanback.graphics.CompositeDrawable$CompositeState;

        return 0;
    }

