android.support.v4.graphics.TypefaceCompatUtil
<android.support.v4.graphics.TypefaceCompatUtil: java.lang.String TAG>
<android.support.v4.graphics.TypefaceCompatUtil: java.lang.String CACHE_FILE_PREFIX>
    private void <init>()
    {
        android.support.v4.graphics.TypefaceCompatUtil r0;

        r0 := @this: android.support.v4.graphics.TypefaceCompatUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.File getTempFile(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r15;
        java.io.File r2, $r10, $r11;
        java.lang.Throwable r3, $r16;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14;
        int $i0, $i1, i2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".font");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i1 = staticinvoke <android.os.Process: int myTid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = 0;

     label1:
        if i2 >= 100 goto label7;

        $r10 = new java.io.File;

        $r11 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, $r15);

        r2 = $r10;

     label2:
        $z0 = virtualinvoke r2.<java.io.File: boolean createNewFile()>();

        if $z0 == 0 goto label4;

     label3:
        return r2;

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        r3 = $r16;

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        return null;

        catch java.io.IOException from label2 to label3 with label5;
    }

    private static java.nio.ByteBuffer mmap(java.io.File)
    {
        java.io.File r0;
        long l0;
        java.nio.MappedByteBuffer r1;
        java.lang.Throwable r2, r3, $r6, $r7, $r8, $r9, $r10, r13, r14;
        java.io.FileInputStream $r4, r11;
        java.nio.channels.FileChannel$MapMode $r5;
        java.nio.channels.FileChannel r12;
        java.lang.NullPointerException r15;

        r0 := @parameter0: java.io.File;

     label01:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r11 = $r4;

     label02:
        r12 = virtualinvoke r11.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        l0 = virtualinvoke r12.<java.nio.channels.FileChannel: long size()>();

        $r5 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        r1 = virtualinvoke r12.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r5, 0L, l0);

     label03:
        if r11 == null goto label08;

        if null == null goto label07;

     label04:
        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

        r15 = new java.lang.NullPointerException;

        specialinvoke r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke l2#2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l7)");

        throw r15;

     label07:
        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label08:
        return r1;

     label09:
        $r6 := @caughtexception;

        r13 = $r6;

        r14 = r13;

        throw r13;

     label10:
        $r10 := @caughtexception;

        r2 = $r10;

     label11:
        if r11 == null goto label16;

        if r14 == null goto label15;

     label12:
        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label13:
        goto label16;

     label14:
        $r9 := @caughtexception;

        r3 = $r9;

        virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r3);

        goto label16;

     label15:
        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label16:
        throw r2;

     label17:
        $r8 := @caughtexception;

        return null;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label09 to label11 with label10;
        catch java.io.IOException from label01 to label08 with label17;
        catch java.io.IOException from label09 to label17 with label17;
    }

    public static java.nio.ByteBuffer mmap(android.content.Context, android.os.CancellationSignal, android.net.Uri)
    {
        android.content.Context r0;
        android.os.CancellationSignal r1;
        android.net.Uri r2;
        android.content.ContentResolver r3;
        long l0;
        java.nio.MappedByteBuffer r4;
        java.lang.Throwable r5, r6, r7, r8, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, r25, r26, r27, r28;
        java.io.FileInputStream $r9, r23;
        java.io.FileDescriptor $r10;
        java.nio.channels.FileChannel$MapMode $r11;
        android.os.ParcelFileDescriptor r22;
        java.nio.channels.FileChannel r24;
        java.lang.NullPointerException r29, r30, r31;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.CancellationSignal;

        r2 := @parameter2: android.net.Uri;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label01:
        r22 = virtualinvoke r3.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r2, "r", r1);

     label02:
        if r22 != null goto label09;

     label03:
        if r22 == null goto label08;

        if null == null goto label07;

     label04:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        r29 = new java.lang.NullPointerException;

        specialinvoke r29.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke l5#2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l7#4)");

        throw r29;

     label07:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        return null;

     label09:
        $r9 = new java.io.FileInputStream;

        $r10 = virtualinvoke r22.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r10);

        r23 = $r9;

     label10:
        r24 = virtualinvoke r23.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        l0 = virtualinvoke r24.<java.nio.channels.FileChannel: long size()>();

        $r11 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        r4 = virtualinvoke r24.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r11, 0L, l0);

     label11:
        if r23 == null goto label16;

        if null == null goto label15;

     label12:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label13:
        goto label16;

     label14:
        $r21 := @caughtexception;

        r30 = new java.lang.NullPointerException;

        specialinvoke r30.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke l7#9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l12#11)");

        throw r30;

     label15:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label16:
        if r22 == null goto label21;

        if null == null goto label20;

     label17:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label18:
        goto label21;

     label19:
        $r13 := @caughtexception;

        r31 = new java.lang.NullPointerException;

        specialinvoke r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke l5#2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l12#15)");

        throw r31;

     label20:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label21:
        return r4;

     label22:
        $r15 := @caughtexception;

        r25 = $r15;

        r26 = r25;

        throw r25;

     label23:
        $r17 := @caughtexception;

        r5 = $r17;

     label24:
        if r23 == null goto label29;

        if r26 == null goto label28;

     label25:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label26:
        goto label29;

     label27:
        $r18 := @caughtexception;

        r6 = $r18;

        virtualinvoke r26.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6);

        goto label29;

     label28:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label29:
        throw r5;

     label30:
        $r20 := @caughtexception;

        r27 = $r20;

        r28 = r27;

        throw r27;

     label31:
        $r19 := @caughtexception;

        r7 = $r19;

     label32:
        if r22 == null goto label37;

        if r28 == null goto label36;

     label33:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label34:
        goto label37;

     label35:
        $r14 := @caughtexception;

        r8 = $r14;

        virtualinvoke r28.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r8);

        goto label37;

     label36:
        virtualinvoke r22.<android.os.ParcelFileDescriptor: void close()>();

     label37:
        throw r7;

     label38:
        $r16 := @caughtexception;

        return null;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label22 to label24 with label23;
        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label09 to label16 with label30;
        catch java.lang.Throwable from label22 to label30 with label30;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label22 to label32 with label31;
        catch java.io.IOException from label01 to label08 with label38;
        catch java.io.IOException from label09 to label21 with label38;
        catch java.io.IOException from label22 to label38 with label38;
    }

    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context, android.content.res.Resources, int)
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        int i0;
        java.io.File r2;
        java.lang.Throwable r3, $r4;
        boolean $z0;
        java.nio.ByteBuffer r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)>(r0);

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>(r2, r1, i0);

        if $z0 != 0 goto label3;

     label2:
        virtualinvoke r2.<java.io.File: boolean delete()>();

        return null;

     label3:
        r5 = staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)>(r2);

     label4:
        virtualinvoke r2.<java.io.File: boolean delete()>();

        return r5;

     label5:
        $r4 := @caughtexception;

        r3 = $r4;

     label6:
        virtualinvoke r2.<java.io.File: boolean delete()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean copyToFile(java.io.File, java.io.InputStream)
    {
        java.io.File r0;
        java.io.InputStream r1;
        android.os.StrictMode$ThreadPolicy r2;
        boolean z0, z1;
        java.lang.Throwable r3, $r5, $r11, r14;
        java.io.FileOutputStream $r4, r12;
        int $i0, i2;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        byte[] r13;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.InputStream;

        r12 = null;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r0, 0);

        r12 = $r4;

        r13 = newarray (byte)[1024];

     label2:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r13);

        i2 = $i0;

        if $i0 == -1 goto label3;

        virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>(r13, 0, i2);

        goto label2;

     label3:
        z0 = 1;

     label4:
        staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>(r12);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return z0;

     label5:
        $r5 := @caughtexception;

        r14 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error copying resource contents to temp file: ");

        $r8 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TypefaceCompatUtil", $r10);

        z1 = 0;

     label6:
        staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>(r12);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return z1;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

     label8:
        staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>(r12);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw r3;

        catch java.io.IOException from label1 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static boolean copyToFile(java.io.File, android.content.res.Resources, int)
    {
        java.io.File r0;
        android.content.res.Resources r1;
        int i0;
        boolean z0;
        java.lang.Throwable r2, $r3;
        java.io.InputStream r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r4 = null;

     label1:
        r4 = virtualinvoke r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);

        z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)>(r0, r4);

     label2:
        staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>(r4);

        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>(r4);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label4;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

