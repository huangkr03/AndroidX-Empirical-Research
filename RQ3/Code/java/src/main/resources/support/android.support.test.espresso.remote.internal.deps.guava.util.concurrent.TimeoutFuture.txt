android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture
<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef>
<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: java.util.concurrent.Future timer>
    static android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ScheduledExecutorService r2;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r3, r9;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire r4, r10;
        java.util.concurrent.ScheduledFuture $r7;
        java.util.concurrent.Executor $r8;
        java.util.concurrent.Future r11;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.concurrent.TimeUnit;

        r2 := @parameter3: java.util.concurrent.ScheduledExecutorService;

        r9 = new android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        specialinvoke r9.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: void <init>(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>(r0);

        r3 = r9;

        r10 = new android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire;

        specialinvoke r10.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire: void <init>(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture)>(r3);

        r4 = r10;

        $r7 = interfaceinvoke r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r4, l0, r1);

        r11 = (java.util.concurrent.Future) $r7;

        r3.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: java.util.concurrent.Future timer> = r11;

        $r8 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r4, $r8);

        return r3;
    }

    private void <init>(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture) $r2;

        r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef> = $r3;

        return;
    }

    protected java.lang.String pendingToString()
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1;
        java.lang.String r2, $r3, $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef>;

        if r1 == null goto label1;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = 14 + $i0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inputFuture=[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label1:
        return null;
    }

    protected void afterDone()
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r0;
        java.util.concurrent.Future r1;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef>;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>($r2);

        r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: java.util.concurrent.Future timer>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>(0);

     label1:
        r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef> = null;

        r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: java.util.concurrent.Future timer> = null;

        return;
    }

    static android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture access$000(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture delegateRef>;

        return $r1;
    }

android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire
<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture timeoutFutureRef>
    void <init>(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture timeoutFutureRef> = r1;

        return;
    }

    public void run()
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture r1;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r2;
        java.lang.String r3, $r6, $r10;
        java.lang.Throwable r4, $r11;
        boolean $z0;
        java.util.concurrent.TimeoutException $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire;

        r1 = r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture timeoutFutureRef>;

        if r1 != null goto label1;

        return;

     label1:
        r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture access$000(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture)>(r1);

        if r2 != null goto label2;

        return;

     label2:
        r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture$Fire: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture timeoutFutureRef> = null;

        $z0 = interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: boolean setFuture(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>(r2);

        goto label7;

     label3:
        $r5 = new java.util.concurrent.TimeoutException;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = 18 + $i0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Future timed out: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r10);

        virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.TimeoutFuture: boolean setException(java.lang.Throwable)>($r5);

     label4:
        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

        goto label7;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

     label6:
        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

