android.support.test.services.speakeasy.client.ToolConnection
<android.support.test.services.speakeasy.client.ToolConnection: java.lang.String contentProvider>
<android.support.test.services.speakeasy.client.ToolConnection: java.lang.String packageName>
<android.support.test.services.speakeasy.client.ToolConnection: java.util.Random random>
    private void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.services.speakeasy.client.ToolConnection $r0;
        java.lang.String $r1, $r2;
        java.security.SecureRandom $r3;
        java.lang.Object $r4;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        $r0.<android.support.test.services.speakeasy.client.ToolConnection: java.util.Random random> = $r3;

        $r4 = staticinvoke <android.support.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r4;

        $r0.<android.support.test.services.speakeasy.client.ToolConnection: java.lang.String packageName> = $r1;

        $r4 = staticinvoke <android.support.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r1 = (java.lang.String) $r4;

        $r0.<android.support.test.services.speakeasy.client.ToolConnection: java.lang.String contentProvider> = $r1;

        return;
    }

    void <init>(java.lang.String, java.lang.String, android.support.test.services.speakeasy.client.ToolConnection$1)
    {
        android.support.test.services.speakeasy.client.ToolConnection $r0;
        java.lang.String $r1, $r2;
        android.support.test.services.speakeasy.client.ToolConnection$1 $r3;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.support.test.services.speakeasy.client.ToolConnection$1;

        specialinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    private static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;

     label1:
        return $r0;
    }

    public static android.support.test.services.speakeasy.client.Connection makeConnection()
    {
        android.support.test.services.speakeasy.client.Connection $r0;

        $r0 = staticinvoke <android.support.test.services.speakeasy.client.ToolConnection: android.support.test.services.speakeasy.client.Connection makeConnection(java.lang.String,java.lang.String)>("android.support.test.services", "android_support_test_services.speak_easy");

        return $r0;
    }

    static android.support.test.services.speakeasy.client.Connection makeConnection(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r2;
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r3;
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label1;

        $r2 = new android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        specialinvoke $r2.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 25 goto label2;

        $r3 = new android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        specialinvoke $r3.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r3;

     label2:
        $r4 = new android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

        specialinvoke $r4.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r4;
    }

<android.support.test.services.speakeasy.client.ToolConnection: void doCall(android.os.Bundle)>
    public void publish(android.os.IBinder, android.support.test.services.speakeasy.client.PublishResultReceiver)
    {
        android.support.test.services.speakeasy.client.ToolConnection $r0;
        android.os.IBinder $r1;
        android.support.test.services.speakeasy.client.PublishResultReceiver $r2;
        java.util.Random $r3;
        long $l0;
        java.lang.String $r4;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.support.test.services.speakeasy.client.PublishResultReceiver;

        $r3 = $r0.<android.support.test.services.speakeasy.client.ToolConnection: java.util.Random random>;

        $l0 = virtualinvoke $r3.<java.util.Random: long nextLong()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        virtualinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection: void publish(java.lang.String,android.os.IBinder,android.support.test.services.speakeasy.client.PublishResultReceiver)>($r4, $r1, $r2);

        return;
    }

    void publish(java.lang.String, android.os.IBinder, android.support.test.services.speakeasy.client.PublishResultReceiver)
    {
        android.support.test.services.speakeasy.client.ToolConnection $r0;
        java.lang.String $r1;
        android.os.IBinder $r2;
        android.support.test.services.speakeasy.client.PublishResultReceiver $r3;
        android.os.Bundle $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException r6;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.support.test.services.speakeasy.client.PublishResultReceiver;

        staticinvoke <android.support.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <android.support.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r4 = staticinvoke <android.support.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.Bundle asBundle(java.lang.String,android.os.IBinder,android.os.ResultReceiver)>($r1, $r2, $r3);

     label1:
        virtualinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection: void doCall(android.os.Bundle)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r6 = new java.lang.RuntimeException;

        specialinvoke r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        $r5 = (java.lang.Throwable) r6;

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

android.support.test.services.speakeasy.client.ToolConnection$1
android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat
    void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String,android.support.test.services.speakeasy.client.ToolConnection$1)>($r1, $r2, null);

        return;
    }

    protected final void doCall(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r0;
        android.os.Bundle $r1;
        android.app.IActivityManager $r2;
        android.content.Intent $r3;
        java.lang.String $r4;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        $r4 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat: java.lang.String packageName>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r4, "android.support.test.services.speakeasy.server.SpeakEasyService");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking ActivityManagerNative.getDefault().startService(...)");

        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r2.<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>(null, $r3, null);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Intent sent!");

        return;
    }

android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN
    void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected java.lang.Object getActivityManager()
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r0;
        android.app.IActivityManager $r1;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking ActivityManagerNative.getDefault");

        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        return $r1;
    }

android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO
    void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected java.lang.Object getActivityManager()
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6, r8;
        java.lang.RuntimeException r7;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

     label01:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking getService");

     label02:
        $r1 = class "Landroid/app/ActivityManager;";

        $r2 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getService", $r2);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label06:
        return $r5;

     label07:
        $r6 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolConnection", "Could not find / invoke get service", $r6);

        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label09:
        $r6 := @caughtexception;

        goto label08;

     label10:
        $r6 := @caughtexception;

        goto label08;

        catch java.lang.IllegalAccessException from label01 to label02 with label07;
        catch java.lang.IllegalAccessException from label03 to label04 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
    }

android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs
    void <init>(java.lang.String, java.lang.String)
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String,android.support.test.services.speakeasy.client.ToolConnection$1)>($r1, $r2, null);

        return;
    }

    protected final void doCall(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs $r0;
        android.os.Bundle $r1;
        java.lang.reflect.Method $r2, $r6, $r7;
        java.lang.Class $r3, $r5;
        java.lang.Class[] $r4;
        android.os.Binder $r8, r18;
        java.lang.String $r9, $r10;
        int $i0, $i1;
        java.lang.Object $r11;
        java.lang.Object[] $r12;
        java.lang.Integer $r13;
        java.lang.Throwable $r14, $r15;
        java.lang.reflect.Field $r16;
        java.lang.reflect.Method[] $r17;
        boolean $z0;
        java.lang.IllegalStateException r19;
        java.lang.RuntimeException r20;

        $r0 := @this: android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = null;

     label01:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up IActivityManager");

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.IActivityManager");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up getContentProviderExternal");

     label02:
        $r4 = newarray (java.lang.Class)[3];

        $r4[0] = class "Ljava/lang/String;";

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[1] = $r5;

        $r4[2] = class "Landroid/os/IBinder;";

     label03:
        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContentProviderExternal", $r4);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up removeContentProviderExternal");

     label04:
        $r4 = newarray (java.lang.Class)[2];

        $r4[0] = class "Ljava/lang/String;";

        $r4[1] = class "Landroid/os/IBinder;";

     label05:
        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("removeContentProviderExternal", $r4);

     label06:
        r18 = new android.os.Binder;

        $r8 = r18;

     label07:
        specialinvoke r18.<android.os.Binder: void <init>()>();

     label08:
        $r9 = "Getting a content provider holder for: ";

        $r10 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

     label09:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

     label10:
        if $i0 == 0 goto label26;

     label11:
        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r10);

     label12:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", $r9);

        $r11 = virtualinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label13:
        $r12 = newarray (java.lang.Object)[3];

        $r9 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r12[0] = $r9;

     label14:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label15:
        $r12[1] = $r13;

        $r12[2] = $r8;

     label16:
        $r11 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

     label17:
        if $r11 != null goto label29;

        r19 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        $r9 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r12[0] = $r9;

     label18:
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Call to getContentProviderExternal for: %s returns null!", $r12);

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

     label19:
        throw r19;

     label20:
        $r14 := @caughtexception;

     label21:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Releasing content provider");

        $r11 = virtualinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label22:
        $r12 = newarray (java.lang.Object)[2];

        $r9 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r12[0] = $r9;

        $r12[1] = $r8;

     label23:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Released content provider");

        throw $r14;

     label24:
        $r15 := @caughtexception;

     label25:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolConnection", "Connecting to content providers has failed!", $r15);

        r20 = new java.lang.RuntimeException;

        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        $r14 = (java.lang.Throwable) r20;

        throw $r14;

     label26:
        $r10 = new java.lang.String;

        $r9 = $r10;

     label27:
        specialinvoke $r10.<java.lang.String: void <init>(java.lang.String)>("Getting a content provider holder for: ");

     label28:
        goto label12;

     label29:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Getting the provider field");

        $r3 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("provider");

        virtualinvoke $r16.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r11 = virtualinvoke $r16.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r11);

     label30:
        if $r11 != null goto label33;

        r19 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        $r9 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r12[0] = $r9;

     label31:
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Call to getContentProviderExternal for: %s returns null provider!", $r12);

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

     label32:
        throw r19;

     label33:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Finding the call method");

        $r3 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

     label34:
        $i0 = lengthof $r17;

        $i1 = 0;

     label35:
        if $i1 >= $i0 goto label39;

        $r6 = $r17[$i1];

        $r9 = "call";

     label36:
        $r10 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label37:
        if $z0 == 0 goto label63;

     label38:
        $i1 = $i1 + 1;

        $r2 = $r6;

        goto label35;

     label39:
        if $r2 != null goto label45;

     label40:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ToolConnection", "No call method!");

     label41:
        r20 = new java.lang.RuntimeException;

     label42:
        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find call method on content provider!");

     label43:
        $r14 = (java.lang.Throwable) r20;

     label44:
        throw $r14;

     label45:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label46:
        $i0 = lengthof $r4;

        if $i0 != 4 goto label55;

     label47:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking modern call method");

     label48:
        $r12 = newarray (java.lang.Object)[4];

        $r12[0] = null;

        $r12[1] = null;

        $r12[2] = null;

        $r12[3] = $r1;

     label49:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

     label50:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Intent sent!");

     label51:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Releasing content provider");

        $r11 = virtualinvoke $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label52:
        $r12 = newarray (java.lang.Object)[2];

        $r9 = $r0.<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r12[0] = $r9;

        $r12[1] = $r8;

     label53:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Released content provider");

     label54:
        return;

     label55:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking legacy call method");

     label56:
        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = null;

        $r12[1] = null;

        $r12[2] = $r1;

     label57:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r12);

     label58:
        goto label50;

     label59:
        $r15 := @caughtexception;

        goto label25;

     label60:
        $r15 := @caughtexception;

        goto label25;

     label61:
        $r15 := @caughtexception;

        goto label25;

     label62:
        $r15 := @caughtexception;

        goto label25;

     label63:
        $r6 = $r2;

        goto label38;

        catch java.lang.IllegalAccessException from label01 to label02 with label24;
        catch java.lang.IllegalAccessException from label03 to label04 with label24;
        catch java.lang.IllegalAccessException from label05 to label06 with label24;
        catch java.lang.IllegalAccessException from label07 to label08 with label24;
        catch java.lang.ClassNotFoundException from label01 to label02 with label59;
        catch java.lang.ClassNotFoundException from label03 to label04 with label59;
        catch java.lang.ClassNotFoundException from label05 to label06 with label59;
        catch java.lang.ClassNotFoundException from label07 to label08 with label59;
        catch java.lang.NoSuchMethodException from label01 to label02 with label61;
        catch java.lang.NoSuchMethodException from label03 to label04 with label61;
        catch java.lang.NoSuchMethodException from label05 to label06 with label61;
        catch java.lang.NoSuchMethodException from label07 to label08 with label61;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label62;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label62;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label62;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label62;
        catch java.lang.NoSuchFieldException from label01 to label02 with label60;
        catch java.lang.NoSuchFieldException from label03 to label04 with label60;
        catch java.lang.NoSuchFieldException from label05 to label06 with label60;
        catch java.lang.NoSuchFieldException from label07 to label08 with label60;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.IllegalAccessException from label21 to label22 with label24;
        catch java.lang.IllegalAccessException from label23 to label24 with label24;
        catch java.lang.ClassNotFoundException from label21 to label22 with label59;
        catch java.lang.ClassNotFoundException from label23 to label24 with label59;
        catch java.lang.NoSuchMethodException from label21 to label22 with label61;
        catch java.lang.NoSuchMethodException from label23 to label24 with label61;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label62;
        catch java.lang.reflect.InvocationTargetException from label23 to label24 with label62;
        catch java.lang.NoSuchFieldException from label21 to label22 with label60;
        catch java.lang.NoSuchFieldException from label23 to label24 with label60;
        catch java.lang.Throwable from label27 to label28 with label20;
        catch java.lang.Throwable from label29 to label30 with label20;
        catch java.lang.Throwable from label31 to label32 with label20;
        catch java.lang.Throwable from label33 to label34 with label20;
        catch java.lang.Throwable from label36 to label37 with label20;
        catch java.lang.Throwable from label40 to label41 with label20;
        catch java.lang.Throwable from label42 to label43 with label20;
        catch java.lang.Throwable from label44 to label46 with label20;
        catch java.lang.Throwable from label47 to label48 with label20;
        catch java.lang.Throwable from label49 to label51 with label20;
        catch java.lang.IllegalAccessException from label51 to label52 with label24;
        catch java.lang.IllegalAccessException from label53 to label54 with label24;
        catch java.lang.ClassNotFoundException from label51 to label52 with label59;
        catch java.lang.ClassNotFoundException from label53 to label54 with label59;
        catch java.lang.NoSuchMethodException from label51 to label52 with label61;
        catch java.lang.NoSuchMethodException from label53 to label54 with label61;
        catch java.lang.reflect.InvocationTargetException from label51 to label52 with label62;
        catch java.lang.reflect.InvocationTargetException from label53 to label54 with label62;
        catch java.lang.NoSuchFieldException from label51 to label52 with label60;
        catch java.lang.NoSuchFieldException from label53 to label54 with label60;
        catch java.lang.Throwable from label55 to label56 with label20;
        catch java.lang.Throwable from label57 to label58 with label20;
    }

<android.support.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>
