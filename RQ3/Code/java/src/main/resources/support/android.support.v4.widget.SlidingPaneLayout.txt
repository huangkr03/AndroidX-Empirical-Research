android.support.v4.widget.SlidingPaneLayout
<android.support.v4.widget.SlidingPaneLayout: java.lang.String TAG>
<android.support.v4.widget.SlidingPaneLayout: int DEFAULT_OVERHANG_SIZE>
<android.support.v4.widget.SlidingPaneLayout: int DEFAULT_FADE_COLOR>
<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>
<android.support.v4.widget.SlidingPaneLayout: int MIN_FLING_VELOCITY>
<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>
<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft>
<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight>
<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>
<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>
<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>
<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>
<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>
<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>
<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>
<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>
<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>
<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>
<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>
<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>
<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>
<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>
<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>
<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>
<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Method mGetDisplayList>
<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Field mRecreateDisplayList>
<android.support.v4.widget.SlidingPaneLayout: boolean mDisplayListReflectionLoaded>
    public void <init>(android.content.Context)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        float f0, $f1, $f2, $f3;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        android.support.v4.widget.ViewDragHelper $r9, $r10;
        android.graphics.Rect r11;
        java.util.ArrayList r12;
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r13;
        android.support.v4.widget.SlidingPaneLayout$DragHelperCallback r14;
        android.view.View r15, r16;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = -858993460;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        r11 = new android.graphics.Rect;

        specialinvoke r11.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect> = r11;

        r12 = new java.util.ArrayList;

        specialinvoke r12.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables> = r12;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r6.<android.util.DisplayMetrics: float density>;

        $f1 = 32.0F * f0;

        $f2 = $f1 + 0.5F;

        $i1 = (int) $f2;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize> = $i1;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setWillNotDraw(boolean)>(0);

        r13 = new android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        specialinvoke r13.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: void <init>(android.support.v4.widget.SlidingPaneLayout)>(r0);

        r15 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r15, r13);

        r16 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r16, 1);

        r14 = new android.support.v4.widget.SlidingPaneLayout$DragHelperCallback;

        specialinvoke r14.<android.support.v4.widget.SlidingPaneLayout$DragHelperCallback: void <init>(android.support.v4.widget.SlidingPaneLayout)>(r0);

        $r9 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>(r0, 0.5F, r14);

        r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper> = $r9;

        $r10 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $f3 = 400.0F * f0;

        virtualinvoke $r10.<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>($f3);

        return;
    }

    public void setParallaxDistance(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy> = i0;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void requestLayout()>();

        return;
    }

    public int getParallaxDistance()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        return $i0;
    }

    public void setSliderFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = i0;

        return;
    }

    public int getSliderFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        return $i0;
    }

    public void setCoveredFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor> = i0;

        return;
    }

    public int getCoveredFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;

        return $i0;
    }

    public void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener> = r1;

        return;
    }

    void dispatchOnPanelSlide(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;
        float $f0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelSlide(android.view.View,float)>(r1, $f0);

     label1:
        return;
    }

    void dispatchOnPanelOpened(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelOpened(android.view.View)>(r1);

     label1:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);

        return;
    }

    void dispatchOnPanelClosed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelClosed(android.view.View)>(r1);

     label1:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);

        return;
    }

    void updateObscuredViewsVisibility(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r2;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, $i28, $i29;
        byte b30;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z0 == 0 goto label01;

        $i19 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i20 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i21 = $i19 - $i20;

        goto label02;

     label01:
        $i21 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label02:
        i0 = $i21;

        if z0 == 0 goto label03;

        $i22 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        goto label04;

     label03:
        $i9 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i10 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i22 = $i9 - $i10;

     label04:
        i1 = $i22;

        i2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i11 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getHeight()>();

        $i12 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i3 = $i11 - $i12;

        if r1 == null goto label05;

        $z1 = staticinvoke <android.support.v4.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>(r1);

        if $z1 == 0 goto label05;

        i23 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i24 = virtualinvoke r1.<android.view.View: int getRight()>();

        i25 = virtualinvoke r1.<android.view.View: int getTop()>();

        i26 = virtualinvoke r1.<android.view.View: int getBottom()>();

        goto label06;

     label05:
        i26 = 0;

        i25 = 0;

        i24 = 0;

        i23 = 0;

     label06:
        i27 = 0;

        i4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label07:
        if i27 >= i4 goto label17;

        r2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i27);

        if r2 != r1 goto label08;

        goto label17;

     label08:
        $i13 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label09;

        goto label16;

     label09:
        if z0 == 0 goto label10;

        $i28 = i1;

        goto label11;

     label10:
        $i28 = i0;

     label11:
        $i14 = virtualinvoke r2.<android.view.View: int getLeft()>();

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i28, $i14);

        $i15 = virtualinvoke r2.<android.view.View: int getTop()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i15);

        if z0 == 0 goto label12;

        $i29 = i0;

        goto label13;

     label12:
        $i29 = i1;

     label13:
        $i16 = virtualinvoke r2.<android.view.View: int getRight()>();

        i7 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i16);

        $i17 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i17);

        if i5 < i23 goto label14;

        if i6 < i25 goto label14;

        if i7 > i24 goto label14;

        if i8 > i26 goto label14;

        b30 = 4;

        goto label15;

     label14:
        b30 = 0;

     label15:
        virtualinvoke r2.<android.view.View: void setVisibility(int)>(b30);

     label16:
        i27 = i27 + 1;

        goto label07;

     label17:
        return;
    }

    void setAllChildrenVisible()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, $i1, i2;
        android.view.View r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i2 = 0;

        i0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label1:
        if i2 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i2);

        $i1 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i1 != 4 goto label2;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private static boolean viewIsOpaque(android.view.View)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label2;

        return 0;

     label2:
        r1 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label5;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i1 != -1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        i1 = 0;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable) $r5;

        virtualinvoke r1.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void run()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i48, i49, i50, i51, i52, i53, i54, i55, i56, $i57, $i58, $i59, i60, i61, i62, i63, $i64, i65, i66, i67, i68, i69, $i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82;
        android.support.v4.widget.ViewDragHelper $r1, $r2;
        android.view.ViewGroup$LayoutParams $r3, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9;
        byte $b16, $b30, $b31, $b32, $b34;
        android.view.View $r4, r9, r11;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, z7;
        java.lang.IllegalStateException $r7, $r8;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r10, r12;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i49 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i50 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i51 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i52 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i49 == 1073741824 goto label03;

        $z3 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();

        if $z3 == 0 goto label02;

        if i49 != -2147483648 goto label01;

        i53 = 1073741824;

        goto label05;

     label01:
        if i49 != 0 goto label05;

        i54 = 1073741824;

        i50 = 300;

        goto label05;

     label02:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Width must have an exact value or MATCH_PARENT");

        throw $r8;

     label03:
        if i51 != 0 goto label05;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();

        if $z2 == 0 goto label04;

        if i51 != 0 goto label05;

        i51 = -2147483648;

        i52 = 300;

        goto label05;

     label04:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Height must not be UNSPECIFIED");

        throw $r7;

     label05:
        i55 = 0;

        i56 = 0;

        lookupswitch(i51)
        {
            case -2147483648: goto label07;
            case 1073741824: goto label06;
            default: goto label08;
        };

     label06:
        $i4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i5 = i52 - $i4;

        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        $i7 = $i5 - $i6;

        i56 = $i7;

        i55 = $i7;

        goto label08;

     label07:
        $i46 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i47 = i52 - $i46;

        $i48 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i56 = $i47 - $i48;

     label08:
        f9 = 0.0F;

        z4 = 0;

        $i57 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        $i58 = i50 - $i57;

        $i59 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        i2 = $i58 - $i59;

        i60 = i2;

        i3 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if i3 <= 2 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SlidingPaneLayout", "onMeasure: More than two child views are not supported.");

     label09:
        r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = null;

        i61 = 0;

     label10:
        if i61 >= i3 goto label23;

        r9 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i61);

        $r5 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r10 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r5;

        $i33 = virtualinvoke r9.<android.view.View: int getVisibility()>();

        if $i33 != 8 goto label11;

        r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = 0;

        goto label22;

     label11:
        $f7 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b34 = $f7 cmpl 0.0F;

        if $b34 <= 0 goto label12;

        $f8 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        f9 = f9 + $f8;

        $i44 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i44 != 0 goto label12;

        goto label22;

     label12:
        $i36 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i35 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i62 = $i36 + $i35;

        $i37 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i37 != -2 goto label13;

        $i43 = i2 - i62;

        i63 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i43, -2147483648);

        goto label15;

     label13:
        $i38 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i38 != -1 goto label14;

        $i42 = i2 - i62;

        i63 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i42, 1073741824);

        goto label15;

     label14:
        $i39 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        i63 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i39, 1073741824);

     label15:
        $i64 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i64 != -2 goto label16;

        i65 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, -2147483648);

        goto label18;

     label16:
        $i40 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i40 != -1 goto label17;

        i65 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, 1073741824);

        goto label18;

     label17:
        $i41 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i65 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i41, 1073741824);

     label18:
        virtualinvoke r9.<android.view.View: void measure(int,int)>(i63, i65);

        i66 = virtualinvoke r9.<android.view.View: int getMeasuredWidth()>();

        i67 = virtualinvoke r9.<android.view.View: int getMeasuredHeight()>();

        if i51 != -2147483648 goto label19;

        if i67 <= i55 goto label19;

        i55 = staticinvoke <java.lang.Math: int min(int,int)>(i67, i56);

     label19:
        i60 = i60 - i66;

        $z1 = z4;

        if i60 >= 0 goto label20;

        $z5 = 1;

        goto label21;

     label20:
        $z5 = 0;

     label21:
        r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable> = $z5;

        z4 = $z1 | $z5;

        $z0 = r10.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z0 == 0 goto label22;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = r9;

     label22:
        i61 = i61 + 1;

        goto label10;

     label23:
        if z4 != 0 goto label24;

        $b32 = f9 cmpl 0.0F;

        if $b32 <= 0 goto label45;

     label24:
        $i8 = r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;

        i68 = i2 - $i8;

        i69 = 0;

     label25:
        if i69 >= i3 goto label45;

        r11 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i69);

        $i13 = virtualinvoke r11.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label26;

        goto label44;

     label26:
        $r3 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        $i14 = virtualinvoke r11.<android.view.View: int getVisibility()>();

        if $i14 != 8 goto label27;

        goto label44;

     label27:
        $i15 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i15 != 0 goto label28;

        $f6 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b31 = $f6 cmpl 0.0F;

        if $b31 <= 0 goto label28;

        $z6 = 1;

        goto label29;

     label28:
        $z6 = 0;

     label29:
        z7 = $z6;

        if z7 == 0 goto label30;

        $i70 = 0;

        goto label31;

     label30:
        $i70 = virtualinvoke r11.<android.view.View: int getMeasuredWidth()>();

     label31:
        i71 = $i70;

        if z4 == 0 goto label37;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r11 == $r4 goto label37;

        $i25 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i25 >= 0 goto label44;

        if i71 > i68 goto label32;

        $f5 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b30 = $f5 cmpl 0.0F;

        if $b30 <= 0 goto label44;

     label32:
        if z7 == 0 goto label35;

        $i27 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i27 != -2 goto label33;

        i72 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, -2147483648);

        goto label36;

     label33:
        $i28 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i28 != -1 goto label34;

        i72 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, 1073741824);

        goto label36;

     label34:
        $i29 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i72 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i29, 1073741824);

        goto label36;

     label35:
        $i26 = virtualinvoke r11.<android.view.View: int getMeasuredHeight()>();

        i72 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i26, 1073741824);

     label36:
        i73 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i68, 1073741824);

        virtualinvoke r11.<android.view.View: void measure(int,int)>(i73, i72);

        goto label44;

     label37:
        $f0 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b16 = $f0 cmpl 0.0F;

        if $b16 <= 0 goto label44;

        $i17 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i17 != 0 goto label40;

        $i22 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i22 != -2 goto label38;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, -2147483648);

        goto label41;

     label38:
        $i23 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i23 != -1 goto label39;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i56, 1073741824);

        goto label41;

     label39:
        $i24 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i24, 1073741824);

        goto label41;

     label40:
        $i18 = virtualinvoke r11.<android.view.View: int getMeasuredHeight()>();

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i18, 1073741824);

     label41:
        if z4 == 0 goto label43;

        $i21 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i20 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i75 = $i21 + $i20;

        i76 = i2 - i75;

        i77 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i76, 1073741824);

        if i71 == i76 goto label42;

        virtualinvoke r11.<android.view.View: void measure(int,int)>(i77, i74);

     label42:
        goto label44;

     label43:
        i78 = staticinvoke <java.lang.Math: int max(int,int)>(0, i60);

        $f2 = r12.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $f1 = (float) i78;

        $f3 = $f2 * $f1;

        $f4 = $f3 / f9;

        i79 = (int) $f4;

        $i19 = i71 + i79;

        i80 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i19, 1073741824);

        virtualinvoke r11.<android.view.View: void measure(int,int)>(i80, i74);

     label44:
        i69 = i69 + 1;

        goto label25;

     label45:
        i81 = i50;

        $i9 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i10 = i55 + $i9;

        $i11 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i82 = $i10 + $i11;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setMeasuredDimension(int,int)>(i81, i82);

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide> = z4;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $i12 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();

        if $i12 == 0 goto label46;

        if z4 != 0 goto label46;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void abort()>();

     label46:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40, $i41, i42, i43, i44, i45, i46, i47, i48;
        android.view.View r1, $r4, $r5, $r8, $r13;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2, $r7;
        android.support.v4.widget.ViewDragHelper $r3, $r11;
        android.view.ViewGroup$LayoutParams $r6, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z1 == 0 goto label01;

        $r11 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r11.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

        goto label02;

     label01:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);

     label02:
        i4 = i2 - i0;

        if z1 == 0 goto label03;

        $i33 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        goto label04;

     label03:
        $i33 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label04:
        i5 = $i33;

        if z1 == 0 goto label05;

        $i34 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        goto label06;

     label05:
        $i34 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

     label06:
        i6 = $i34;

        i7 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        i8 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        i35 = i5;

        i36 = i35;

        $z2 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z2 == 0 goto label09;

        $z8 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z8 == 0 goto label07;

        $z9 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;

        if $z9 == 0 goto label07;

        $f12 = 1.0F;

        goto label08;

     label07:
        $f12 = 0.0F;

     label08:
        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f12;

     label09:
        i37 = 0;

     label10:
        if i37 >= i8 goto label22;

        r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i37);

        $i13 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label11;

        goto label21;

     label11:
        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r9;

        i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i38 = 0;

        $z6 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z6 == 0 goto label16;

        $i20 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i19 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i39 = $i20 + $i19;

        $i22 = i4 - i6;

        $i21 = r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;

        $i23 = $i22 - $i21;

        $i24 = staticinvoke <java.lang.Math: int min(int,int)>(i36, $i23);

        $i25 = $i24 - i35;

        i40 = $i25 - i39;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange> = i40;

        if z1 == 0 goto label12;

        $i41 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label13;

     label12:
        $i41 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label13:
        i42 = $i41;

        $i26 = i35 + i42;

        $i28 = $i26 + i40;

        $i27 = i9 / 2;

        $i30 = $i28 + $i27;

        $i29 = i4 - i6;

        if $i30 <= $i29 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = $z10;

        $f7 = (float) i40;

        $f6 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $f8 = $f7 * $f6;

        i43 = (int) $f8;

        $i31 = i43 + i42;

        i35 = i35 + $i31;

        $f10 = (float) i43;

        $i32 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f9 = (float) $i32;

        $f11 = $f10 / $f9;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f11;

        goto label18;

     label16:
        $z7 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z7 == 0 goto label17;

        $i17 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i17 == 0 goto label17;

        $f2 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $f4 = 1.0F - $f2;

        $i18 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f3 = (float) $i18;

        $f5 = $f4 * $f3;

        i38 = (int) $f5;

        i35 = i36;

        goto label18;

     label17:
        i35 = i36;

     label18:
        if z1 == 0 goto label19;

        $i16 = i4 - i35;

        i44 = $i16 + i38;

        i45 = i44 - i9;

        goto label20;

     label19:
        i45 = i35 - i38;

        i44 = i45 + i9;

     label20:
        i46 = i7;

        $i14 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i47 = i46 + $i14;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i45, i7, i44, i47);

        $i15 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i36 = i36 + $i15;

     label21:
        i37 = i37 + 1;

        goto label10;

     label22:
        $z3 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z3 == 0 goto label27;

        $z4 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z4 == 0 goto label24;

        $i11 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i11 == 0 goto label23;

        $f1 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f1);

     label23:
        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r6;

        $z5 = $r7.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z5 == 0 goto label26;

        $r8 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $i12 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r8, $f0, $i12);

        goto label26;

     label24:
        i48 = 0;

     label25:
        if i48 >= i8 goto label26;

        $r4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i48);

        $i10 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r4, 0.0F, $i10);

        i48 = i48 + 1;

        goto label25;

     label26:
        $r13 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void updateObscuredViewsVisibility(android.view.View)>($r13);

     label27:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 0;

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        if i0 == i2 goto label1;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

     label1:
        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        $z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInTouchMode()>();

        if $z0 != 0 goto label3;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label3;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r1 != $r3 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z2;

     label3:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i8;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11, f12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10;
        android.support.v4.widget.ViewDragHelper $r2, $r3, $r4, $r5, $r7, $r9, $r12;
        byte $b2, $b3;
        android.view.View $r6, $r8, r11;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 != 0 goto label03;

        if i0 != 0 goto label03;

        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if $i6 <= 1 goto label03;

        r11 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);

        if r11 == null goto label03;

        $r9 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i7 = (int) $f7;

        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i8 = (int) $f8;

        $z5 = virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>(r11, $i7, $i8);

        if $z5 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z6;

     label03:
        $z7 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z7 == 0 goto label04;

        $z2 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>;

        if $z2 == 0 goto label05;

        if i0 == 0 goto label05;

     label04:
        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;

     label05:
        if i0 == 3 goto label06;

        if i0 != 1 goto label07;

     label06:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        return 0;

     label07:
        z8 = 0;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 0;

        f9 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f10 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = f9;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = f10;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i5 = (int) f9;

        $i4 = (int) f10;

        $z3 = virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r6, $i5, $i4);

        if $z3 == 0 goto label10;

        $r8 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r8);

        if $z4 == 0 goto label10;

        z8 = 1;

        goto label10;

     label09:
        f11 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f12 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f2 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;

        $f3 = f11 - $f2;

        f0 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $f4 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;

        $f5 = f12 - $f4;

        f1 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        i1 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f6 = (float) i1;

        $b2 = f0 cmpl $f6;

        if $b2 <= 0 goto label10;

        $b3 = f1 cmpl f0;

        if $b3 <= 0 goto label10;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 1;

        return 0;

     label10:
        $r12 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        z9 = virtualinvoke $r12.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if z9 != 0 goto label11;

        if z8 == 0 goto label12;

     label11:
        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z5;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;
        int i0, $i1, $i2, $i4, $i5;
        android.support.v4.widget.ViewDragHelper $r2, $r4, $r6;
        android.view.View $r3, $r5, $r7;
        byte $b3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        $z5 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z5;

     label1:
        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        z0 = 1;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        f8 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f9 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = f8;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = f9;

        goto label4;

     label3:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r3);

        if $z2 == 0 goto label4;

        f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f11 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f2 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;

        f0 = f10 - $f2;

        $f3 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;

        f1 = f11 - $f3;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        i0 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f5 = f0 * f0;

        $f4 = f1 * f1;

        $f7 = $f5 + $f4;

        $i2 = i0 * i0;

        $f6 = (float) $i2;

        $b3 = $f7 cmpg $f6;

        if $b3 >= 0 goto label4;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i5 = (int) f10;

        $i4 = (int) f11;

        $z3 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r5, $i5, $i4);

        if $z3 == 0 goto label4;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r7, 0);

        goto label4;

     label4:
        return z0;
    }

    private boolean closePane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(0.0F, i0);

        if $z1 == 0 goto label2;

     label1:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 0;

        return 1;

     label2:
        return 0;
    }

    private boolean openPane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(1.0F, i0);

        if $z1 == 0 goto label2;

     label1:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 1;

        return 1;

     label2:
        return 0;
    }

    public void smoothSlideOpen()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();

        return;
    }

    public boolean openPane()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane(android.view.View,int)>($r1, 0);

        return $z0;
    }

    public void smoothSlideClosed()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();

        return;
    }

    public boolean closePane()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r1, 0);

        return $z0;
    }

    public boolean isOpen()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0, $z1;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 == 0 goto label1;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean canSlide()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        return $z0;
    }

    public boolean isSlideable()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        return $z0;
    }

    void onPanelDragged(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, $z1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        android.view.View $r2, $r3, $r5, $r6, $r7;
        android.view.ViewGroup$LayoutParams $r4;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if $r2 != null goto label1;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = 0.0F;

        return;

     label1:
        z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        i1 = virtualinvoke $r5.<android.view.View: int getWidth()>();

        if z0 == 0 goto label2;

        $i10 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i11 = $i10 - i0;

        $i12 = $i11 - i1;

        goto label3;

     label2:
        $i12 = i0;

     label3:
        i2 = $i12;

        if z0 == 0 goto label4;

        $i13 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        goto label5;

     label4:
        $i13 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label5:
        i3 = $i13;

        if z0 == 0 goto label6;

        $i14 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label7;

     label6:
        $i14 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label7:
        i4 = $i14;

        i5 = i3 + i4;

        $i6 = i2 - i5;

        $f1 = (float) $i6;

        $i7 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f0 = (float) $i7;

        $f2 = $f1 / $f0;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f2;

        $i8 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i8 == 0 goto label8;

        $f4 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f4);

     label8:
        $z1 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z1 == 0 goto label9;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $f3 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $i9 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r7, $f3, $i9);

     label9:
        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dispatchOnPanelSlide(android.view.View)>($r6);

        return;
    }

    private void dimChildView(android.view.View, float, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r20;
        float f0, $f1, $f2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        byte $b3;
        android.graphics.Paint $r4, $r7, $r9, $r12, $r14, r17;
        java.util.ArrayList $r6;
        android.graphics.PorterDuff$Mode $r11;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable r16, r19;
        android.graphics.PorterDuffColorFilter r18;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        $b3 = f0 cmpl 0.0F;

        if $b3 <= 0 goto label3;

        if i0 == 0 goto label3;

        $i5 = i0 & -16777216;

        i9 = $i5 >>> 24;

        $f1 = (float) i9;

        $f2 = $f1 * f0;

        i1 = (int) $f2;

        $i7 = i1 << 24;

        $i6 = i0 & 16777215;

        i2 = $i7 | $i6;

        $r9 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        if $r9 != null goto label1;

        r17 = new android.graphics.Paint;

        specialinvoke r17.<android.graphics.Paint: void <init>()>();

        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint> = r17;

     label1:
        $r12 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        r18 = new android.graphics.PorterDuffColorFilter;

        $r11 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;

        specialinvoke r18.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i2, $r11);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r18);

        $i8 = virtualinvoke r1.<android.view.View: int getLayerType()>();

        if $i8 == 2 goto label2;

        $r14 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        virtualinvoke r1.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, $r14);

     label2:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void invalidateChildRegion(android.view.View)>(r1);

        goto label5;

     label3:
        $i4 = virtualinvoke r1.<android.view.View: int getLayerType()>();

        if $i4 == 0 goto label5;

        $r4 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        if $r4 == null goto label4;

        $r7 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        virtualinvoke $r7.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label4:
        r19 = new android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable;

        specialinvoke r19.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View)>(r0, r1);

        r16 = r19;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        r20 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r20, r16);

     label5:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2, $r5, $r8, $r12;
        long l0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r3;
        boolean z0, $z1, $z2, $z4;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams $r4;
        android.graphics.Rect $r6, $r7, $r9, $r10, $r11, $r13;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 == 0 goto label3;

        $z2 = r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z2 != 0 goto label3;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if $r5 == null goto label3;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r6);

        $z4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z4 == 0 goto label1;

        $r13 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $r11 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $i5 = $r11.<android.graphics.Rect: int left>;

        $r12 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i6 = virtualinvoke $r12.<android.view.View: int getRight()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $r13.<android.graphics.Rect: int left> = $i7;

        goto label2;

     label1:
        $r9 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $i2 = $r7.<android.graphics.Rect: int right>;

        $r8 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i3 = virtualinvoke $r8.<android.view.View: int getLeft()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r9.<android.graphics.Rect: int right> = $i4;

     label2:
        $r10 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r10);

     label3:
        z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

        return z0;
    }

    void invalidateChildRegion(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r23;
        int $i0, $i1, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.lang.reflect.Field $r2, $r3, $r11, $r12;
        java.lang.Object[] $r4;
        java.lang.reflect.Method $r5, $r9, $r21;
        java.lang.Class[] $r7;
        java.lang.Class $r8, $r10;
        android.view.ViewGroup$LayoutParams $r13;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r14;
        android.graphics.Paint $r15;
        java.lang.Throwable $r16, $r17, $r18, r19, r20, r22;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label01;

        $r13 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r14 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r13;

        $r15 = $r14.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        staticinvoke <android.support.v4.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)>(r1, $r15);

        return;

     label01:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label14;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mDisplayListReflectionLoaded>;

        if $z0 != 0 goto label09;

     label02:
        $r8 = class "Landroid/view/View;";

        $r7 = (java.lang.Class[]) null;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getDisplayList", $r7);

        r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Method mGetDisplayList> = $r9;

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

        r19 = $r18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SlidingPaneLayout", "Couldn\'t fetch getDisplayList method; dimming won\'t work right.", r19);

     label05:
        $r10 = class "Landroid/view/View;";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mRecreateDisplayList");

        r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Field mRecreateDisplayList> = $r11;

        $r12 = r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Field mRecreateDisplayList>;

        virtualinvoke $r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

        r20 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SlidingPaneLayout", "Couldn\'t fetch mRecreateDisplayList field; dimming will be slow.", r20);

     label08:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mDisplayListReflectionLoaded> = 1;

     label09:
        $r21 = r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Method mGetDisplayList>;

        if $r21 == null goto label10;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Field mRecreateDisplayList>;

        if $r2 != null goto label11;

     label10:
        virtualinvoke r1.<android.view.View: void invalidate()>();

        return;

     label11:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Field mRecreateDisplayList>;

        virtualinvoke $r3.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>(r1, 1);

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: java.lang.reflect.Method mGetDisplayList>;

        $r4 = (java.lang.Object[]) null;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r4);

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

        r22 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SlidingPaneLayout", "Error refreshing display list state", r22);

     label14:
        $i5 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i7 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i8 = virtualinvoke r1.<android.view.View: int getBottom()>();

        r23 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)>(r23, $i5, $i6, $i7, $i8);

        return;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.NoSuchFieldException from label05 to label06 with label07;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    boolean smoothSlideTo(float, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        boolean z0, $z1, $z2;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        android.view.View $r2, $r4, $r6, $r7, r8;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v4.widget.ViewDragHelper $r5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        if z0 == 0 goto label2;

        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i7 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i10 = $i6 + $i7;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        i1 = virtualinvoke $r7.<android.view.View: int getWidth()>();

        $i8 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $f11 = (float) $i8;

        $f7 = (float) i10;

        $i9 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f5 = (float) $i9;

        $f6 = f0 * $f5;

        $f9 = $f7 + $f6;

        $f8 = (float) i1;

        $f10 = $f9 + $f8;

        $f12 = $f11 - $f10;

        i11 = (int) $f12;

        goto label3;

     label2:
        $i2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        $i3 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        i12 = $i2 + $i3;

        $f3 = (float) i12;

        $i4 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f1 = (float) $i4;

        $f2 = f0 * $f1;

        $f4 = $f3 + $f2;

        i11 = (int) $f4;

     label3:
        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i5 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $z2 = virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r6, i11, $i5);

        if $z2 == 0 goto label4;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setAllChildrenVisible()>();

        r8 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r8);

        return 1;

     label4:
        return 0;
    }

    public void computeScroll()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.ViewDragHelper $r1, $r2;
        boolean $z0, $z1;
        android.view.View r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        if $z0 == 0 goto label2;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void abort()>();

        return;

     label1:
        r3 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r3);

     label2:
        return;
    }

    public void setShadowDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setShadowDrawableLeft(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft> = r1;

        return;
    }

    public void setShadowDrawableRight(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight> = r1;

        return;
    }

    public void setShadowResource(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setShadowResourceLeft(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setShadowResourceRight(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.Canvas r1;
        boolean z0, $z1;
        android.view.View r2, $r4;
        int i0, i1, i2, $i3, i4, i5;
        android.graphics.drawable.Drawable r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z0 == 0 goto label1;

        r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight>;

        goto label2;

     label1:
        r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft>;

     label2:
        $i3 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if $i3 <= 1 goto label3;

        $r4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);

        goto label4;

     label3:
        $r4 = null;

     label4:
        r2 = $r4;

        if r2 == null goto label5;

        if r3 != null goto label6;

     label5:
        return;

     label6:
        i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        i1 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i2 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z1 == 0 goto label7;

        i4 = virtualinvoke r2.<android.view.View: int getRight()>();

        i5 = i4 + i2;

        goto label8;

     label7:
        i5 = virtualinvoke r2.<android.view.View: int getLeft()>();

        i4 = i5 - i2;

     label8:
        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i4, i0, i5, i1);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    private void parallaxOtherViews(float)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean z0, z1, $z2, $z3;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, $i9;
        android.view.View r2, $r3, $r5;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        f0 := @parameter0: float;

        z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;

        $z2 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z2 == 0 goto label03;

        if z0 == 0 goto label01;

        $i7 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label02;

     label01:
        $i7 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label02:
        if $i7 > 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

        i0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        i8 = 0;

     label05:
        if i8 >= i0 goto label12;

        r2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i8);

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r2 != $r5 goto label06;

        goto label11;

     label06:
        $f1 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f3 = 1.0F - $f1;

        $i4 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f2 = (float) $i4;

        $f4 = $f3 * $f2;

        i1 = (int) $f4;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset> = f0;

        $f6 = 1.0F - f0;

        $i5 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f5 = (float) $i5;

        $f7 = $f6 * $f5;

        i2 = (int) $f7;

        i3 = i1 - i2;

        if z0 == 0 goto label07;

        $i9 = neg i3;

        goto label08;

     label07:
        $i9 = i3;

     label08:
        virtualinvoke r2.<android.view.View: void offsetLeftAndRight(int)>($i9);

        if z1 == 0 goto label11;

        if z0 == 0 goto label09;

        $f9 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f10 = $f9 - 1.0F;

        goto label10;

     label09:
        $f8 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f10 = 1.0F - $f8;

     label10:
        $i6 = r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>(r2, $f10, $i6);

     label11:
        i8 = i8 + 1;

        goto label05;

     label12:
        return;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21;
        android.view.ViewGroup r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i3 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i5 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i20 = i5 - 1;

     label1:
        if i20 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i20);

        $i6 = i1 + i3;

        $i7 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if $i6 < $i7 goto label2;

        $i8 = i1 + i3;

        $i9 = virtualinvoke r3.<android.view.View: int getRight()>();

        if $i8 >= $i9 goto label2;

        $i10 = i2 + i4;

        $i11 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i10 < $i11 goto label2;

        $i12 = i2 + i4;

        $i13 = virtualinvoke r3.<android.view.View: int getBottom()>();

        if $i12 >= $i13 goto label2;

        $i14 = i1 + i3;

        $i15 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i16 = $i14 - $i15;

        $i17 = i2 + i4;

        $i18 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i19 = $i17 - $i18;

        $z4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean canScroll(android.view.View,boolean,int,int,int)>(r3, 1, i0, $i16, $i19);

        if $z4 == 0 goto label2;

        return 1;

     label2:
        i20 = i20 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label6;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z2 == 0 goto label4;

        $i21 = i0;

        goto label5;

     label4:
        $i21 = neg i0;

     label5:
        $z3 = virtualinvoke r1.<android.view.View: boolean canScrollHorizontally(int)>($i21);

        if $z3 == 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;
    }

    boolean isDimmed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0, $z1, $z2;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 == 0 goto label2;

        $z1 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z1 == 0 goto label2;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        specialinvoke r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>()>();

        r3 = (android.view.ViewGroup$LayoutParams) r2;

        return r3;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.ViewGroup$LayoutParams r1, r6;
        boolean $z0;
        android.view.ViewGroup$MarginLayoutParams $r2;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r3, r4, r5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        r4 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        $r3 = r4;

        $r2 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke r4.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r2);

        goto label2;

     label1:
        r5 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        $r3 = r5;

        specialinvoke r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

     label2:
        r6 = (android.view.ViewGroup$LayoutParams) $r3;

        return r6;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.util.AttributeSet r1;
        android.content.Context $r3;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams r5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.util.AttributeSet;

        r4 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.Context getContext()>();

        specialinvoke r4.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        r5 = (android.view.ViewGroup$LayoutParams) r4;

        return r5;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.os.Parcelable r1, r6;
        android.support.v4.widget.SlidingPaneLayout$SavedState r2, r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        r5 = new android.support.v4.widget.SlidingPaneLayout$SavedState;

        specialinvoke r5.<android.support.v4.widget.SlidingPaneLayout$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = r5;

        $z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isSlideable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isOpen()>();

        goto label2;

     label1:
        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;

     label2:
        r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen> = $z1;

        r6 = (android.os.Parcelable) r2;

        return r6;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.os.Parcelable r1, $r3;
        android.support.v4.widget.SlidingPaneLayout$SavedState r2;
        boolean $z0, $z1, $z3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.support.v4.widget.SlidingPaneLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.support.v4.widget.SlidingPaneLayout$SavedState) r1;

        $r3 = virtualinvoke r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $z1 = r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();

        goto label3;

     label2:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();

     label3:
        $z3 = r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z3;

        return;
    }

    boolean isLayoutRtlSupport()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;
        boolean $z0;
        android.view.View r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 = (android.view.View) r0;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

