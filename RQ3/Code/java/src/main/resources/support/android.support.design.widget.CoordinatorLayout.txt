android.support.design.widget.CoordinatorLayout
<android.support.design.widget.CoordinatorLayout: java.lang.String TAG>
<android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>
<android.support.design.widget.CoordinatorLayout: int TYPE_ON_INTERCEPT>
<android.support.design.widget.CoordinatorLayout: int TYPE_ON_TOUCH>
<android.support.design.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS>
<android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>
<android.support.design.widget.CoordinatorLayout: int EVENT_PRE_DRAW>
<android.support.design.widget.CoordinatorLayout: int EVENT_NESTED_SCROLL>
<android.support.design.widget.CoordinatorLayout: int EVENT_VIEW_REMOVED>
<android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>
<android.support.design.widget.CoordinatorLayout: android.support.v4.util.Pools$Pool sRectPool>
<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>
<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>
<android.support.design.widget.CoordinatorLayout: java.util.List mTempList1>
<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>
<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>
<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>
<android.support.design.widget.CoordinatorLayout: boolean mDisallowInterceptReset>
<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow>
<android.support.design.widget.CoordinatorLayout: int[] mKeylines>
<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>
<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>
<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>
<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>
<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>
<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>
<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>
<android.support.design.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>
<android.support.design.widget.CoordinatorLayout: android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener>
<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>
    private static android.graphics.Rect acquireTempRect()
    {
        android.support.v4.util.Pools$Pool $r0;
        java.lang.Object $r1;
        android.graphics.Rect $r2, r3;

        $r0 = <android.support.design.widget.CoordinatorLayout: android.support.v4.util.Pools$Pool sRectPool>;

        $r1 = interfaceinvoke $r0.<android.support.v4.util.Pools$Pool: java.lang.Object acquire()>();

        r3 = (android.graphics.Rect) $r1;

        if r3 != null goto label1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r3 = $r2;

     label1:
        return r3;
    }

    private static void releaseTempRect(android.graphics.Rect)
    {
        android.graphics.Rect r0;
        android.support.v4.util.Pools$Pool $r1;

        r0 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.graphics.Rect: void setEmpty()>();

        $r1 = <android.support.design.widget.CoordinatorLayout: android.support.v4.util.Pools$Pool sRectPool>;

        interfaceinvoke $r1.<android.support.v4.util.Pools$Pool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <android.support.coordinatorlayout.R$attr: int coordinatorLayoutStyle>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.content.res.TypedArray r3, $r20;
        android.content.res.Resources r4;
        float f0, $f1, $f2;
        java.util.ArrayList $r5, $r7, $r8;
        android.support.v4.widget.DirectedAcyclicGraph $r6;
        int[] $r9, $r11, $r14, $r16, $r17, $r18, $r19;
        android.support.v4.view.NestedScrollingParentHelper $r10;
        android.graphics.drawable.Drawable $r12;
        android.support.design.widget.CoordinatorLayout$HierarchyChangeListener $r13;
        android.util.DisplayMetrics $r15;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren> = $r5;

        $r6 = new android.support.v4.widget.DirectedAcyclicGraph;

        specialinvoke $r6.<android.support.v4.widget.DirectedAcyclicGraph: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempList1> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList> = $r8;

        $r9 = newarray (int)[2];

        r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair> = $r9;

        $r10 = new android.support.v4.view.NestedScrollingParentHelper;

        specialinvoke $r10.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper> = $r10;

        if i0 != 0 goto label1;

        $r19 = <android.support.coordinatorlayout.R$styleable: int[] CoordinatorLayout>;

        $i7 = <android.support.coordinatorlayout.R$style: int Widget_Support_CoordinatorLayout>;

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r19, 0, $i7);

        goto label2;

     label1:
        $r11 = <android.support.coordinatorlayout.R$styleable: int[] CoordinatorLayout>;

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r11, i0, 0);

     label2:
        r3 = $r20;

        $i3 = <android.support.coordinatorlayout.R$styleable: int CoordinatorLayout_keylines>;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i3, 0);

        if i1 == 0 goto label4;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke r4.<android.content.res.Resources: int[] getIntArray(int)>(i1);

        r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines> = $r14;

        $r15 = virtualinvoke r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r15.<android.util.DisplayMetrics: float density>;

        $r16 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        i2 = lengthof $r16;

        i8 = 0;

     label3:
        if i8 >= i2 goto label4;

        $r18 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $r17 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i5 = $r17[i8];

        $f1 = (float) $i5;

        $f2 = $f1 * f0;

        $i6 = (int) $f2;

        $r18[i8] = $i6;

        i8 = i8 + 1;

        goto label3;

     label4:
        $i4 = <android.support.coordinatorlayout.R$styleable: int CoordinatorLayout_statusBarBackground>;

        $r12 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i4);

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r12;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setupForInsets()>();

        $r13 = new android.support.design.widget.CoordinatorLayout$HierarchyChangeListener;

        specialinvoke $r13.<android.support.design.widget.CoordinatorLayout$HierarchyChangeListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        specialinvoke r0.<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r13);

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener> = r1;

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver r1;
        boolean $z0, $z1;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2, $r3, r6;
        android.support.v4.view.WindowInsetsCompat $r5;
        android.view.View r7, r8;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 != null goto label1;

        r6 = new android.support.design.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke r6.<android.support.design.widget.CoordinatorLayout$OnPreDrawListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = r6;

     label1:
        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

     label2:
        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r5 != null goto label3;

        r7 = (android.view.View) r0;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r7);

        if $z1 == 0 goto label3;

        r8 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>(r8);

     label3:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 1;

        return;
    }

    public void onDetachedFromWindow()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver r1;
        boolean $z0;
        android.view.View $r2, $r5;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r3, $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r3 == null goto label1;

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r4);

     label1:
        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>;

        if $r5 == null goto label2;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)>($r2);

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 0;

        return;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13;
        boolean $z0, $z4;
        int $i0, $i1;
        int[] $r10;
        android.view.View r14, r16;
        android.graphics.drawable.Drawable$Callback r15;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == r1 goto label8;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r3 == null goto label1;

        $r12 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        if r1 == null goto label2;

        $r13 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        goto label3;

     label2:
        $r13 = null;

     label3:
        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r13;

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r4 == null goto label7;

        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $z0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label4;

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $r10 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int[] getDrawableState()>();

        virtualinvoke $r9.<android.graphics.drawable.Drawable: boolean setState(int[])>($r10);

     label4:
        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        r14 = (android.view.View) r0;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r14);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r6, $i0);

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getVisibility()>();

        if $i1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        virtualinvoke $r7.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z4, 0);

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        r15 = (android.graphics.drawable.Drawable$Callback) r0;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r15);

     label7:
        r16 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r16);

     label8:
        return;
    }

    public android.graphics.drawable.Drawable getStatusBarBackground()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        return $r1;
    }

    protected void drawableStateChanged()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int[] r1;
        android.graphics.drawable.Drawable r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.view.ViewGroup: void drawableStateChanged()>();

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int[] getDrawableState()>();

        z2 = 0;

        r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        z2 = z2 | $z1;

     label1:
        if z2 == 0 goto label2;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void invalidate()>();

     label2:
        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if r1 != $r2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void setVisibility(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0;
        boolean z0, $z1, $z3;
        android.graphics.drawable.Drawable $r1, $r2, $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

        if i0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r1 == null goto label3;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z1 == z0 goto label3;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, 0);

     label3:
        return;
    }

    public void setStatusBarBackgroundResource(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>(i0);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    final android.support.v4.view.WindowInsetsCompat setWindowInsets(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1, r3;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r3 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r1, r3);

        if $z0 != 0 goto label5;

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets> = r3;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground> = $z1;

        $z2 = r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z2 != 0 goto label3;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setWillNotDraw(boolean)>($z3);

        r3 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat)>(r3);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void requestLayout()>();

     label5:
        return r3;
    }

    public final android.support.v4.view.WindowInsetsCompat getLastWindowInsets()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        return $r1;
    }

    private void resetTouchBehaviors(boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean z0;
        int i0, i2, i3;
        android.support.design.widget.CoordinatorLayout$Behavior r1;
        long l1;
        android.view.MotionEvent r2;
        android.view.ViewGroup$LayoutParams $r3, $r4;
        android.view.View r5, r7;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6, r8;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $r4 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        r1 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r1 == null goto label4;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l1, l1, 3, 0.0F, 0.0F, 0);

        if z0 == 0 goto label2;

        virtualinvoke r1.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r5, r2);

        goto label3;

     label2:
        virtualinvoke r1.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r5, r2);

     label3:
        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        i3 = 0;

     label6:
        if i3 >= i0 goto label7;

        r7 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i3);

        $r3 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        virtualinvoke r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetTouchBehaviorTracking()>();

        i3 = i3 + 1;

        goto label6;

     label7:
        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = null;

        r0.<android.support.design.widget.CoordinatorLayout: boolean mDisallowInterceptReset> = 0;

        return;
    }

    private void getTopSortedChildren(java.util.List)
    {
        android.support.design.widget.CoordinatorLayout r0;
        java.util.List r1;
        boolean z0;
        int i0, i1, i2, $i3;
        android.view.View r2;
        java.util.Comparator $r3, $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: java.util.List;

        interfaceinvoke r1.<java.util.List: void clear()>();

        z0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean isChildrenDrawingOrderEnabled()>();

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = i0 - 1;

     label1:
        if i2 < 0 goto label4;

        if z0 == 0 goto label2;

        $i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildDrawingOrder(int,int)>(i0, i2);

        goto label3;

     label2:
        $i3 = i2;

     label3:
        i1 = $i3;

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        i2 = i2 + -1;

        goto label1;

     label4:
        $r3 = <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>;

        if $r3 == null goto label5;

        $r4 = <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);

     label5:
        return;
    }

    private boolean performIntercept(android.view.MotionEvent, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent r1, r8;
        int i0, i1, i2, i3;
        java.util.List r2;
        android.view.View r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        boolean z0, z3, z4, z5, $z6;
        java.lang.Object $r6;
        android.view.ViewGroup$LayoutParams $r7;
        long l4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        z3 = 0;

        z4 = 0;

        r8 = null;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempList1>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void getTopSortedChildren(java.util.List)>(r2);

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i3 = 0;

     label01:
        if i3 >= i2 goto label15;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (android.view.View) $r6;

        $r7 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if z3 != 0 goto label02;

        if z4 == 0 goto label07;

     label02:
        if i1 == 0 goto label07;

        if r5 == null goto label14;

        if r8 != null goto label03;

        l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l4, l4, 3, 0.0F, 0.0F, 0);

     label03:
        lookupswitch(i0)
        {
            case 0: goto label04;
            case 1: goto label05;
            default: goto label06;
        };

     label04:
        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r3, r8);

        goto label06;

     label05:
        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r3, r8);

     label06:
        goto label14;

     label07:
        if z3 != 0 goto label11;

        if r5 == null goto label11;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        z3 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r3, r1);

        goto label10;

     label09:
        z3 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r3, r1);

     label10:
        if z3 == 0 goto label11;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = r3;

     label11:
        z5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean didBlockInteraction()>();

        z0 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r3);

        if z0 == 0 goto label12;

        if z5 != 0 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        z4 = $z6;

        if z0 == 0 goto label14;

        if z4 != 0 goto label14;

        goto label15;

     label14:
        i3 = i3 + 1;

        goto label01;

     label15:
        interfaceinvoke r2.<java.util.List: void clear()>();

        return z3;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label1;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(1);

     label1:
        z0 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent,int)>(r1, 0);

        if i0 == 1 goto label2;

        if i0 != 3 goto label3;

     label2:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(1);

     label3:
        return z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent r1, r7;
        int i0;
        android.support.design.widget.CoordinatorLayout$Behavior r2;
        android.view.View $r3, $r4, $r6, $r9;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z1, $z2, z3, z4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r8;
        long l1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.MotionEvent;

        z3 = 0;

        z4 = 0;

        r7 = null;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r3 != null goto label1;

        $z2 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent,int)>(r1, 1);

        z4 = $z2;

        if $z2 == 0 goto label2;

     label1:
        $r4 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        r2 = virtualinvoke r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r2 == null goto label2;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        z3 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, $r6, r1);

     label2:
        $r9 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r9 != null goto label3;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        z3 = z3 | $z1;

        goto label5;

     label3:
        if z4 == 0 goto label5;

        if r7 != null goto label4;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r7 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l1, l1, 3, 0.0F, 0.0F, 0);

     label4:
        specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r7);

     label5:
        if z3 != 0 goto label6;

        if i0 != 0 goto label6;

     label6:
        if r7 == null goto label7;

        virtualinvoke r7.<android.view.MotionEvent: void recycle()>();

     label7:
        if i0 == 1 goto label8;

        if i0 != 3 goto label9;

     label8:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

     label9:
        return z3;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean z0, $z1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = r0.<android.support.design.widget.CoordinatorLayout: boolean mDisallowInterceptReset>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        r0.<android.support.design.widget.CoordinatorLayout: boolean mDisallowInterceptReset> = 1;

     label1:
        return;
    }

    private int getKeyline(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, $i2, $i3;
        int[] $r1, $r8, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r7, $r15;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        if $r1 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No keylines defined for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - attempted index lookup ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r15);

        return 0;

     label1:
        if i0 < 0 goto label2;

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i2 = lengthof $r8;

        if i0 < $i2 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyline index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r7);

        return 0;

     label3:
        $r9 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i3 = $r9[i0];

        return $i3;
    }

    static android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context, android.util.AttributeSet, java.lang.String)
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        java.lang.String r2, $r4, $r15, $r20, $r28, r29, $r30;
        java.lang.Class r3;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.Object $r5, $r7, $r32, r33;
        java.lang.Object[] $r6;
        android.support.design.widget.CoordinatorLayout$Behavior $r8;
        java.lang.ClassLoader $r9;
        java.lang.Class[] $r10;
        java.lang.ThreadLocal $r13, $r31;
        java.lang.StringBuilder $r16, $r17, $r18, $r21, $r22, $r26, $r27, r36, r37, r39;
        java.lang.Throwable $r23, r35;
        java.lang.reflect.Constructor r34;
        java.util.HashMap r38;
        java.lang.RuntimeException r40;
        java.util.Map r41, r42;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z1 == 0 goto label02;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r21 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r29 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label02:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if $i0 < 0 goto label03;

        r29 = r2;

        goto label06;

     label03:
        $r4 = <android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z2 != 0 goto label04;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        $r15 = <android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>;

        $r16 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label04:
        $r30 = r2;

     label05:
        r29 = $r30;

     label06:
        $r31 = <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

        $r32 = virtualinvoke $r31.<java.lang.ThreadLocal: java.lang.Object get()>();

        r33 = (java.util.Map) $r32;

        if r33 != null goto label07;

        r38 = new java.util.HashMap;

        specialinvoke r38.<java.util.HashMap: void <init>()>();

        r33 = r38;

        $r13 = <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

        virtualinvoke $r13.<java.lang.ThreadLocal: void set(java.lang.Object)>(r33);

     label07:
        r41 = (java.util.Map) r33;

        $r5 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r29);

        r34 = (java.lang.reflect.Constructor) $r5;

        if r34 != null goto label08;

        $r9 = virtualinvoke r0.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        r3 = virtualinvoke $r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r29);

        $r10 = <android.support.design.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS>;

        r34 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

        virtualinvoke r34.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        r42 = (java.util.Map) r33;

        interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r29, r34);

     label08:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r0;

        $r6[1] = r1;

        $r7 = virtualinvoke r34.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = (android.support.design.widget.CoordinatorLayout$Behavior) $r7;

     label09:
        return $r8;

     label10:
        $r23 := @caughtexception;

        r35 = $r23;

        r40 = new java.lang.RuntimeException;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not inflate Behavior subclass ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r40.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r35);

        throw r40;

        catch java.lang.Exception from label06 to label09 with label10;
    }

    android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        java.lang.Throwable r3, $r14;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0, $z1;
        java.lang.Class $r5, $r17, r24;
        java.lang.Class[] $r6;
        java.lang.reflect.Constructor $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        android.support.design.widget.CoordinatorLayout$Behavior $r10, r23;
        java.lang.'annotation'.Annotation $r11;
        android.support.design.widget.CoordinatorLayout$DefaultBehavior $r12, r25;
        android.support.design.widget.CoordinatorLayout$AttachedBehavior $r13;
        java.lang.StringBuilder $r15, $r16, $r19, $r20, $r21;
        java.lang.String $r18, $r22;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $z0 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved>;

        if $z0 != 0 goto label9;

        $z1 = r1 instanceof android.support.design.widget.CoordinatorLayout$AttachedBehavior;

        if $z1 == 0 goto label2;

        $r13 = (android.support.design.widget.CoordinatorLayout$AttachedBehavior) r1;

        r23 = interfaceinvoke $r13.<android.support.design.widget.CoordinatorLayout$AttachedBehavior: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r23 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", "Attached behavior class is null");

     label1:
        virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior)>(r23);

        r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

        goto label9;

     label2:
        r24 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r25 = null;

     label3:
        if r24 == null goto label4;

        $r11 = virtualinvoke r24.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/support/design/widget/CoordinatorLayout$DefaultBehavior;");

        $r12 = (android.support.design.widget.CoordinatorLayout$DefaultBehavior) $r11;

        r25 = $r12;

        if $r12 != null goto label4;

        r24 = virtualinvoke r24.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label4:
        if r25 == null goto label8;

     label5:
        $r5 = interfaceinvoke r25.<android.support.design.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r6 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6);

        $r8 = newarray (java.lang.Object)[0];

        $r9 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        $r10 = (android.support.design.widget.CoordinatorLayout$Behavior) $r9;

        virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior)>($r10);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        r3 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default behavior class ");

        $r17 = interfaceinvoke r25.<android.support.design.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated. Did you forget");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" a default constructor?");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoordinatorLayout", $r22, r3);

     label8:
        r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

     label9:
        return r2;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    private void prepareChildren()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, i1, i2;
        android.view.View r1, r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        java.util.List $r4, $r7, $r9;
        android.support.v4.widget.DirectedAcyclicGraph $r5, $r6, $r11, $r12, $r13, $r14;
        java.util.ArrayList $r8;
        boolean $z1, $z2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r5.<android.support.v4.widget.DirectedAcyclicGraph: void clear()>();

        i1 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if i1 >= i0 goto label7;

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>(r1);

        virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r1);

        $r11 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r11.<android.support.v4.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)>(r1);

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        if i2 != i1 goto label3;

        goto label5;

     label3:
        r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $z1 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r1, r3);

        if $z1 == 0 goto label5;

        $r12 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        $z2 = virtualinvoke $r12.<android.support.v4.widget.DirectedAcyclicGraph: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label4;

        $r14 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r14.<android.support.v4.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)>(r3);

     label4:
        $r13 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r13.<android.support.v4.widget.DirectedAcyclicGraph: void addEdge(java.lang.Object,java.lang.Object)>(r3, r1);

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        $r7 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        $r8 = virtualinvoke $r6.<android.support.v4.widget.DirectedAcyclicGraph: java.util.ArrayList getSortedList()>();

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r9);

        return;
    }

    void getDescendantRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.graphics.Rect r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <android.support.v4.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r0, r1, r2);

        return;
    }

    protected int getSuggestedMinimumWidth()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = specialinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumWidth()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i3);

        return $i4;
    }

    protected int getSuggestedMinimumHeight()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = specialinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumHeight()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i3);

        return $i4;
    }

    public void onMeasureChild(android.view.View, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, i55, i56;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.support.design.widget.CoordinatorLayout$LayoutParams r1;
        android.support.v4.view.WindowInsetsCompat $r2, $r6, $r7, $r8, $r9;
        java.util.List $r3, $r10;
        java.lang.Object $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.view.View r11, r13, r14;
        android.support.design.widget.CoordinatorLayout$Behavior r12;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void prepareChildren()>();

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void ensurePreDrawListener()>();

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        r13 = (android.view.View) r0;

        i6 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r13);

        if i6 != 1 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i8 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i9 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i10 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i11 = i2 + i4;

        i12 = i3 + i5;

        i32 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getSuggestedMinimumWidth()>();

        i33 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getSuggestedMinimumHeight()>();

        i34 = 0;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r2 == null goto label03;

        r14 = (android.view.View) r0;

        $z4 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r14);

        if $z4 == 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        $r10 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        i13 = interfaceinvoke $r10.<java.util.List: int size()>();

        i35 = 0;

     label05:
        if i35 >= i13 goto label17;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i35);

        r11 = (android.view.View) $r4;

        $i17 = virtualinvoke r11.<android.view.View: int getVisibility()>();

        if $i17 != 8 goto label06;

        goto label16;

     label06:
        $r5 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        i36 = 0;

        $i18 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if $i18 < 0 goto label12;

        if i7 == 0 goto label12;

        $i25 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        i37 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: int getKeyline(int)>($i25);

        $i26 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i27 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveKeylineGravity(int)>($i26);

        $i28 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i27, i6);

        i38 = $i28 & 7;

        if i38 != 3 goto label07;

        if z0 == 0 goto label08;

     label07:
        if i38 != 5 goto label09;

        if z0 == 0 goto label09;

     label08:
        $i30 = i8 - i4;

        $i31 = $i30 - i37;

        i36 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i31);

        goto label12;

     label09:
        if i38 != 5 goto label10;

        if z0 == 0 goto label11;

     label10:
        if i38 != 3 goto label12;

        if z0 == 0 goto label12;

     label11:
        $i29 = i37 - i2;

        i36 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i29);

     label12:
        i39 = i0;

        i40 = i1;

        if z1 == 0 goto label13;

        $z3 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r11);

        if $z3 != 0 goto label13;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i19 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i20 = virtualinvoke $r7.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        i41 = $i19 + $i20;

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i21 = virtualinvoke $r8.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i22 = virtualinvoke $r9.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        i14 = $i21 + $i22;

        $i23 = i8 - i41;

        i39 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i23, i7);

        $i24 = i10 - i14;

        i40 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i24, i9);

     label13:
        r12 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r12 == null goto label14;

        $z2 = virtualinvoke r12.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)>(r0, r11, i39, i36, i40, 0);

        if $z2 != 0 goto label15;

     label14:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>(r11, i39, i36, i40, 0);

     label15:
        $i42 = virtualinvoke r11.<android.view.View: int getMeasuredWidth()>();

        $i43 = i11 + $i42;

        $i44 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i45 = $i43 + $i44;

        $i46 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i47 = $i45 + $i46;

        i32 = staticinvoke <java.lang.Math: int max(int,int)>(i32, $i47);

        $i48 = virtualinvoke r11.<android.view.View: int getMeasuredHeight()>();

        $i49 = i12 + $i48;

        $i50 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i51 = $i49 + $i50;

        $i52 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i53 = $i51 + $i52;

        i33 = staticinvoke <java.lang.Math: int max(int,int)>(i33, $i53);

        $i54 = virtualinvoke r11.<android.view.View: int getMeasuredState()>();

        i34 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(i34, $i54);

     label16:
        i35 = i35 + 1;

        goto label05;

     label17:
        $i15 = i34 & -16777216;

        i55 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i32, i0, $i15);

        $i16 = i34 << 16;

        i56 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i33, i1, $i16);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setMeasuredDimension(int,int)>(i55, i56);

        return;
    }

    private android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, i1;
        android.view.View r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.support.design.widget.CoordinatorLayout$Behavior r3;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v4.view.WindowInsetsCompat r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r5 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        $z0 = virtualinvoke r5.<android.support.v4.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return r5;

     label1:
        i1 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label2:
        if i1 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r1);

        if $z1 == 0 goto label3;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        r3 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r3 == null goto label3;

        r5 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$Behavior: android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat)>(r0, r1, r5);

        $z2 = virtualinvoke r5.<android.support.v4.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return r5;
    }

    public void onLayoutChild(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, $r4, $r5;
        int i0, $i1, $i2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $z0 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean checkAnchorChanged()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("An anchor may not be changed after CoordinatorLayout measurement begins before layout is complete.");

        throw $r6;

     label1:
        $r4 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r4 == null goto label2;

        $r5 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChildWithAnchor(android.view.View,android.view.View,int)>(r1, $r5, i0);

        goto label4;

     label2:
        $i1 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if $i1 < 0 goto label3;

        $i2 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChildWithKeyline(android.view.View,int,int)>(r1, $i2, i0);

        goto label4;

     label3:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>(r1, i0);

     label4:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, $i6, i7;
        android.view.View r1, r8;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.support.design.widget.CoordinatorLayout$Behavior r3;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r8 = (android.view.View) r0;

        i4 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r8);

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        i7 = 0;

     label1:
        if i7 >= i5 goto label5;

        $r5 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i7);

        r1 = (android.view.View) $r6;

        $i6 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label2;

        goto label4;

     label2:
        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        r3 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>(r0, r1, i4);

        if $z1 != 0 goto label4;

     label3:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>(r1, i4);

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r4, $r5;
        android.support.v4.view.WindowInsetsCompat $r3, $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == null goto label3;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r3 == null goto label1;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        i0 = $i2;

        if i0 <= 0 goto label3;

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, i0);

        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label3:
        return;
    }

    public void setFitsSystemWindows(boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void setFitsSystemWindows(boolean)>(z0);

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setupForInsets()>();

        return;
    }

    void recordLastChildRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setLastChildRect(android.graphics.Rect)>(r2);

        return;
    }

    void getLastChildRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.graphics.Rect r2, $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r5 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect getLastChildRect()>();

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        return;
    }

    void getChildRect(android.view.View, boolean, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        boolean z0, $z1;
        android.graphics.Rect r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.graphics.Rect;

        $z1 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label2;

     label1:
        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

        return;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>(r1, r2);

        goto label4;

     label3:
        $i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

     label4:
        return;
    }

    private void getDesiredAnchoredChildRectWithoutConstraints(android.view.View, int, android.graphics.Rect, android.graphics.Rect, android.support.design.widget.CoordinatorLayout$LayoutParams, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, $i24;
        android.graphics.Rect r2, r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.support.design.widget.CoordinatorLayout$LayoutParams;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        $i9 = r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i10 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveAnchoredChildGravity(int)>($i9);

        i3 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i10, i0);

        $i11 = r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: int anchorGravity>;

        $i12 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveGravity(int)>($i11);

        i4 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i12, i0);

        i5 = i3 & 7;

        i6 = i3 & 112;

        i7 = i4 & 7;

        i8 = i4 & 112;

        tableswitch(i7)
        {
            case 1: goto label03;
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label02;
            default: goto label01;
        };

     label01:
        i21 = r2.<android.graphics.Rect: int left>;

        goto label04;

     label02:
        i21 = r2.<android.graphics.Rect: int right>;

        goto label04;

     label03:
        $i18 = r2.<android.graphics.Rect: int left>;

        $i19 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i20 = $i19 / 2;

        i21 = $i18 + $i20;

     label04:
        lookupswitch(i8)
        {
            case 16: goto label07;
            case 48: goto label05;
            case 80: goto label06;
            default: goto label05;
        };

     label05:
        i22 = r2.<android.graphics.Rect: int top>;

        goto label08;

     label06:
        i22 = r2.<android.graphics.Rect: int bottom>;

        goto label08;

     label07:
        $i15 = r2.<android.graphics.Rect: int top>;

        $i16 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i17 = $i16 / 2;

        i22 = $i15 + $i17;

     label08:
        tableswitch(i5)
        {
            case 1: goto label11;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label10;
            default: goto label09;
        };

     label09:
        i21 = i21 - i1;

        goto label12;

     label10:
        goto label12;

     label11:
        $i14 = i1 / 2;

        i21 = i21 - $i14;

     label12:
        lookupswitch(i6)
        {
            case 16: goto label15;
            case 48: goto label13;
            case 80: goto label14;
            default: goto label13;
        };

     label13:
        i22 = i22 - i2;

        goto label16;

     label14:
        goto label16;

     label15:
        $i13 = i2 / 2;

        i22 = i22 - $i13;

     label16:
        $i23 = i21 + i1;

        $i24 = i22 + i2;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(i21, i22, $i23, $i24);

        return;
    }

    private void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams, android.graphics.Rect, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$LayoutParams r1;
        android.graphics.Rect r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.support.design.widget.CoordinatorLayout$LayoutParams;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i7 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i8 = $i6 + $i7;

        $i9 = r2.<android.graphics.Rect: int left>;

        $i10 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i11 = i2 - $i10;

        $i13 = $i11 - i0;

        $i12 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i14 = $i13 - $i12;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i14);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i15);

        $i16 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i17 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i18 = $i16 + $i17;

        $i19 = r2.<android.graphics.Rect: int top>;

        $i20 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i21 = i3 - $i20;

        $i23 = $i21 - i1;

        $i22 = r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i24 = $i23 - $i22;

        $i25 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i24);

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i25);

        $i27 = i4 + i0;

        $i26 = i5 + i1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i4, i5, $i27, $i26);

        return;
    }

    void getDesiredAnchoredChildRect(android.view.View, int, android.graphics.Rect, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, i2;
        android.graphics.Rect r2, r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int)>(r1, i0, r2, r3, r4, i1, i2);

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)>(r4, r3, i1, i2);

        return;
    }

    private void layoutChildWithAnchor(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect r3, r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r4 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

     label1:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>(r2, r3);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>(r1, i0, r3, r4);

        $i4 = r4.<android.graphics.Rect: int left>;

        $i3 = r4.<android.graphics.Rect: int top>;

        $i2 = r4.<android.graphics.Rect: int right>;

        $i1 = r4.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i4, $i3, $i2, $i1);

     label2:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r4);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

     label4:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r4);

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void layoutChildWithKeyline(android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36, $i37;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i13 := @parameter1: int;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $i8 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i9 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveKeylineGravity(int)>($i8);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i9, i0);

        i2 = i1 & 7;

        i3 = i1 & 112;

        i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i0 != 1 goto label1;

        i13 = i4 - i13;

     label1:
        $i10 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: int getKeyline(int)>(i13);

        i14 = $i10 - i6;

        i15 = 0;

        tableswitch(i2)
        {
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label2;
        };

     label2:
        goto label5;

     label3:
        i14 = i14 + i6;

        goto label5;

     label4:
        $i12 = i6 / 2;

        i14 = i14 + $i12;

     label5:
        lookupswitch(i3)
        {
            case 16: goto label8;
            case 48: goto label6;
            case 80: goto label7;
            default: goto label6;
        };

     label6:
        goto label9;

     label7:
        i15 = i15 + i7;

        goto label9;

     label8:
        $i11 = i7 / 2;

        i15 = i15 + $i11;

     label9:
        $i16 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i17 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i18 = $i16 + $i17;

        $i19 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i20 = i4 - $i19;

        $i21 = $i20 - i6;

        $i22 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i23 = $i21 - $i22;

        $i24 = staticinvoke <java.lang.Math: int min(int,int)>(i14, $i23);

        i25 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i24);

        $i26 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i27 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i28 = $i26 + $i27;

        $i29 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i30 = i5 - $i29;

        $i31 = $i30 - i7;

        $i32 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i33 = $i31 - $i32;

        $i34 = staticinvoke <java.lang.Math: int min(int,int)>(i15, $i33);

        i35 = staticinvoke <java.lang.Math: int max(int,int)>($i28, $i34);

        $i36 = i25 + i6;

        $i37 = i35 + i7;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i25, i35, $i36, $i37);

        return;
    }

    private void layoutChild(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.graphics.Rect r3, r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v4.view.WindowInsetsCompat $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        r3 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i5 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i8 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i10 = $i7 - $i8;

        $i9 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i11 = $i10 - $i9;

        $i12 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i13 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i15 = $i12 - $i13;

        $i14 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i16 = $i15 - $i14;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i6, $i11, $i16);

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r6 == null goto label1;

        r11 = (android.view.View) r0;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r11);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r1);

        if $z1 != 0 goto label1;

        $i17 = r3.<android.graphics.Rect: int left>;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i18 = virtualinvoke $r7.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i19 = $i17 + $i18;

        r3.<android.graphics.Rect: int left> = $i19;

        $i20 = r3.<android.graphics.Rect: int top>;

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i21 = virtualinvoke $r8.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $i22 = $i20 + $i21;

        r3.<android.graphics.Rect: int top> = $i22;

        $i23 = r3.<android.graphics.Rect: int right>;

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i24 = virtualinvoke $r9.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i25 = $i23 - $i24;

        r3.<android.graphics.Rect: int right> = $i25;

        $i26 = r3.<android.graphics.Rect: int bottom>;

        $r10 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i27 = virtualinvoke $r10.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        $i28 = $i26 - $i27;

        r3.<android.graphics.Rect: int bottom> = $i28;

     label1:
        r4 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i29 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i30 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveGravity(int)>($i29);

        $i31 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i32 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        staticinvoke <android.support.v4.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i30, $i31, $i32, r3, r4, i0);

        $i33 = r4.<android.graphics.Rect: int left>;

        $i34 = r4.<android.graphics.Rect: int top>;

        $i35 = r4.<android.graphics.Rect: int right>;

        $i36 = r4.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i33, $i34, $i35, $i36);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r4);

        return;
    }

    private static int resolveGravity(int)
    {
        int $i0, $i1, i2;

        i2 := @parameter0: int;

        $i0 = i2 & 7;

        if $i0 != 0 goto label1;

        i2 = i2 | 8388611;

     label1:
        $i1 = i2 & 112;

        if $i1 != 0 goto label2;

        i2 = i2 | 48;

     label2:
        return i2;
    }

    private static int resolveKeylineGravity(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i1 = 8388661;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    private static int resolveAnchoredChildGravity(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i1 = 17;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2;
        long l0;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5, $r6, $r8;
        byte $b2;
        android.graphics.Paint $r7, $r9, $r10, $r11, $r13;
        boolean $z0, $z2;
        android.graphics.Region$Op $r12;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r5 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        if $r5 == null goto label3;

        $r6 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        f0 = virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r2);

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label3;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        if $r7 != null goto label1;

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint> = $r13;

     label1:
        $r9 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        $r8 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        $i3 = virtualinvoke $r8.<android.support.design.widget.CoordinatorLayout$Behavior: int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r2);

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i3);

        $r10 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        $f1 = 255.0F * f0;

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i5 = staticinvoke <android.support.design.widget.CoordinatorLayout: int clamp(int,int,int)>($i4, 0, 255);

        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>($i5);

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke r2.<android.view.View: boolean isOpaque()>();

        if $z0 == 0 goto label2;

        $i14 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $f6 = (float) $i14;

        $i15 = virtualinvoke r2.<android.view.View: int getTop()>();

        $f7 = (float) $i15;

        $i16 = virtualinvoke r2.<android.view.View: int getRight()>();

        $f8 = (float) $i16;

        $i17 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $f9 = (float) $i17;

        $r12 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>($f6, $f7, $f8, $f9, $r12);

     label2:
        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $f2 = (float) $i6;

        $i7 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $f3 = (float) $i7;

        $i8 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i9 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i10 = $i8 - $i9;

        $f4 = (float) $i10;

        $i11 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i12 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i13 = $i11 - $i12;

        $f5 = (float) $i13;

        $r11 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f4, $f5, $r11);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

     label3:
        $z2 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        return $z2;
    }

    private static int clamp(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        return i1;

     label1:
        if i0 <= i2 goto label2;

        return i2;

     label2:
        return i0;
    }

    final void onChildViewsChanged(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i27, $i28, i29;
        android.graphics.Rect r1, r2, r3;
        android.view.View r4, $r17, r18, r19, r20;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5, r6;
        android.support.design.widget.CoordinatorLayout$Behavior r7;
        java.util.List $r8, $r9, $r12, $r15;
        java.lang.Object $r10, $r13, $r16;
        android.view.ViewGroup$LayoutParams $r11, $r14;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        i0 := @parameter0: int;

        r20 = (android.view.View) r0;

        i1 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r20);

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        r1 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r2 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r3 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        i24 = 0;

     label01:
        if i24 >= i2 goto label22;

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i24);

        r4 = (android.view.View) $r10;

        $r11 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r11;

        if i0 != 0 goto label02;

        $i23 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i23 != 8 goto label02;

        goto label21;

     label02:
        i25 = 0;

     label03:
        if i25 >= i24 goto label05;

        $r15 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i25);

        r18 = (android.view.View) $r16;

        $r17 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild>;

        if $r17 != r18 goto label04;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void offsetChildToAnchor(android.view.View,int)>(r4, i1);

     label04:
        i25 = i25 + 1;

        goto label03;

     label05:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>(r4, 1, r2);

        $i3 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int insetEdge>;

        if $i3 == 0 goto label11;

        $z3 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z3 != 0 goto label11;

        $i5 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int insetEdge>;

        i26 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i5, i1);

        $i6 = i26 & 112;

        lookupswitch($i6)
        {
            case 48: goto label06;
            case 80: goto label07;
            default: goto label08;
        };

     label06:
        $i21 = r1.<android.graphics.Rect: int top>;

        $i20 = r2.<android.graphics.Rect: int bottom>;

        $i22 = staticinvoke <java.lang.Math: int max(int,int)>($i21, $i20);

        r1.<android.graphics.Rect: int top> = $i22;

        goto label08;

     label07:
        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i8 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i9 = r2.<android.graphics.Rect: int top>;

        $i10 = $i8 - $i9;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i10);

        r1.<android.graphics.Rect: int bottom> = $i11;

     label08:
        $i27 = i26 & 7;

        lookupswitch($i27)
        {
            case 3: goto label09;
            case 5: goto label10;
            default: goto label11;
        };

     label09:
        $i18 = r1.<android.graphics.Rect: int left>;

        $i17 = r2.<android.graphics.Rect: int right>;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i17);

        r1.<android.graphics.Rect: int left> = $i19;

        goto label11;

     label10:
        $i12 = r1.<android.graphics.Rect: int right>;

        $i13 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i14 = r2.<android.graphics.Rect: int left>;

        $i15 = $i13 - $i14;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i15);

        r1.<android.graphics.Rect: int right> = $i16;

     label11:
        $i28 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges>;

        if $i28 == 0 goto label12;

        $i4 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label12;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void offsetChildByInset(android.view.View,android.graphics.Rect,int)>(r4, r1, i1);

     label12:
        if i0 == 2 goto label14;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getLastChildRect(android.view.View,android.graphics.Rect)>(r4, r3);

        $z2 = virtualinvoke r3.<android.graphics.Rect: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label13;

        goto label21;

     label13:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void recordLastChildRect(android.view.View,android.graphics.Rect)>(r4, r2);

     label14:
        i29 = i24 + 1;

     label15:
        if i29 >= i2 goto label21;

        $r12 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i29);

        r19 = (android.view.View) $r13;

        $r14 = virtualinvoke r19.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r14;

        r7 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r7 == null goto label20;

        $z0 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r19, r4);

        if $z0 == 0 goto label20;

        if i0 != 0 goto label16;

        $z1 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean getChangedAfterNestedScroll()>();

        if $z1 == 0 goto label16;

        virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

        goto label20;

     label16:
        lookupswitch(i0)
        {
            case 2: goto label17;
            default: goto label18;
        };

     label17:
        virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r19, r4);

        z4 = 1;

        goto label19;

     label18:
        z4 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r19, r4);

     label19:
        if i0 != 1 goto label20;

        virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setChangedAfterNestedScroll(boolean)>(z4);

     label20:
        i29 = i29 + 1;

        goto label15;

     label21:
        i24 = i24 + 1;

        goto label01;

     label22:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r1);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r2);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        return;
    }

    private void offsetChildByInset(android.view.View, android.graphics.Rect, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.graphics.Rect r2, r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, $i44, i45, i46, $i47, i48;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        android.view.ViewGroup$LayoutParams $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r11, $r14, $r16;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r1);

        if $z0 != 0 goto label01;

        return;

     label01:
        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        if $i2 <= 0 goto label02;

        $i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if $i3 > 0 goto label03;

     label02:
        return;

     label03:
        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        r5 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r6 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i4 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i6 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i7 = virtualinvoke r1.<android.view.View: int getBottom()>();

        virtualinvoke r6.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i5, $i6, $i7);

        if r4 == null goto label04;

        $z1 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)>(r0, r1, r5);

        if $z1 == 0 goto label04;

        $z2 = virtualinvoke r6.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r5);

        if $z2 != 0 goto label05;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rect should be within the child\'s bounds. Rect:");

        $r11 = virtualinvoke r5.<android.graphics.Rect: java.lang.String toShortString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | Bounds:");

        $r14 = virtualinvoke r6.<android.graphics.Rect: java.lang.String toShortString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label04:
        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

     label05:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r6);

        $z3 = virtualinvoke r5.<android.graphics.Rect: boolean isEmpty()>();

        if $z3 == 0 goto label06;

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r5);

        return;

     label06:
        $i8 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges>;

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i8, i0);

        z4 = 0;

        $i9 = i1 & 48;

        if $i9 != 48 goto label07;

        $i37 = r5.<android.graphics.Rect: int top>;

        $i36 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i39 = $i37 - $i36;

        $i38 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        i43 = $i39 - $i38;

        $i40 = r2.<android.graphics.Rect: int top>;

        if i43 >= $i40 goto label07;

        $i41 = r2.<android.graphics.Rect: int top>;

        $i42 = $i41 - i43;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>(r1, $i42);

        z4 = 1;

     label07:
        $i44 = i1 & 80;

        if $i44 != 80 goto label08;

        $i27 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i28 = r5.<android.graphics.Rect: int bottom>;

        $i30 = $i27 - $i28;

        $i29 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i32 = $i30 - $i29;

        $i31 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        i45 = $i32 + $i31;

        $i33 = r2.<android.graphics.Rect: int bottom>;

        if i45 >= $i33 goto label08;

        $i34 = r2.<android.graphics.Rect: int bottom>;

        $i35 = i45 - $i34;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>(r1, $i35);

        z4 = 1;

     label08:
        if z4 != 0 goto label09;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>(r1, 0);

     label09:
        z5 = 0;

        $i10 = i1 & 3;

        if $i10 != 3 goto label10;

        $i21 = r5.<android.graphics.Rect: int left>;

        $i20 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i23 = $i21 - $i20;

        $i22 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        i46 = $i23 - $i22;

        $i24 = r2.<android.graphics.Rect: int left>;

        if i46 >= $i24 goto label10;

        $i25 = r2.<android.graphics.Rect: int left>;

        $i26 = $i25 - i46;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>(r1, $i26);

        z5 = 1;

     label10:
        $i47 = i1 & 5;

        if $i47 != 5 goto label11;

        $i11 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i12 = r5.<android.graphics.Rect: int right>;

        $i14 = $i11 - $i12;

        $i13 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i16 = $i14 - $i13;

        $i15 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        i48 = $i16 + $i15;

        $i17 = r2.<android.graphics.Rect: int right>;

        if i48 >= $i17 goto label11;

        $i18 = r2.<android.graphics.Rect: int right>;

        $i19 = i48 - $i18;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>(r1, $i19);

        z5 = 1;

     label11:
        if z5 != 0 goto label12;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>(r1, 0);

     label12:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r5);

        return;
    }

    private void setInsetOffsetX(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $i2 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        if $i2 == i0 goto label1;

        $i3 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        i1 = i0 - $i3;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>(r1, i1);

        r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX> = i0;

     label1:
        return;
    }

    private void setInsetOffsetY(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $i2 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        if $i2 == i0 goto label1;

        $i3 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        i1 = i0 - $i3;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r1, i1);

        r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY> = i0;

     label1:
        return;
    }

    public void dispatchDependentViewsChanged(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r3;
        java.util.List r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        android.support.v4.widget.DirectedAcyclicGraph $r6;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r7;
        android.view.ViewGroup$LayoutParams $r8;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        r2 = virtualinvoke $r6.<android.support.v4.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)>(r1);

        if r2 == null goto label3;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.view.View) $r7;

        $r8 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r8;

        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r5 == null goto label2;

        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r3, r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public java.util.List getDependencies(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        java.util.List r2, $r4, $r5, $r6;
        android.support.v4.widget.DirectedAcyclicGraph $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        r2 = virtualinvoke $r3.<android.support.v4.widget.DirectedAcyclicGraph: java.util.List getOutgoingEdges(java.lang.Object)>(r1);

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        if r2 == null goto label1;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label1:
        $r5 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        return $r5;
    }

    public java.util.List getDependents(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        java.util.List r2, $r4, $r5, $r6;
        android.support.v4.widget.DirectedAcyclicGraph $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        r2 = virtualinvoke $r3.<android.support.v4.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)>(r1);

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        if r2 == null goto label1;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label1:
        $r5 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        return $r5;
    }

    final java.util.List getDependencySortedChildren()
    {
        android.support.design.widget.CoordinatorLayout r0;
        java.util.List $r1, $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void prepareChildren()>();

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    void ensurePreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z2 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $z1 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean hasDependencies(android.view.View)>(r1);

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if z2 == $z0 goto label5;

        if z2 == 0 goto label4;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void addPreDrawListener()>();

        goto label5;

     label4:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void removePreDrawListener()>();

     label5:
        return;
    }

    private boolean hasDependencies(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.support.v4.widget.DirectedAcyclicGraph $r2;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.widget.DirectedAcyclicGraph mChildDag>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DirectedAcyclicGraph: boolean hasOutgoingEdges(java.lang.Object)>(r1);

        return $z0;
    }

    void addPreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2, $r3, $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 != null goto label1;

        $r4 = new android.support.design.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke $r4.<android.support.design.widget.CoordinatorLayout$OnPreDrawListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = $r4;

     label1:
        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 1;

        return;
    }

    void removePreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2, $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 == null goto label1;

        r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

     label1:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 0;

        return;
    }

    void offsetChildToAnchor(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, $r8, $r9, $r10;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.support.design.widget.CoordinatorLayout$LayoutParams r2;
        android.graphics.Rect r3, r4, r5;
        boolean z0, $z2;
        android.support.design.widget.CoordinatorLayout$Behavior r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        $r8 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r8 == null goto label7;

        r3 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r4 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        r5 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r9 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r9, r3);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>(r1, 0, r4);

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int)>(r1, i0, r3, r5, r2, i1, i2);

        $i6 = r5.<android.graphics.Rect: int left>;

        $i5 = r4.<android.graphics.Rect: int left>;

        if $i6 != $i5 goto label1;

        $i12 = r5.<android.graphics.Rect: int top>;

        $i11 = r4.<android.graphics.Rect: int top>;

        if $i12 == $i11 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)>(r2, r5, i1, i2);

        $i8 = r5.<android.graphics.Rect: int left>;

        $i7 = r4.<android.graphics.Rect: int left>;

        i3 = $i8 - $i7;

        $i10 = r5.<android.graphics.Rect: int top>;

        $i9 = r4.<android.graphics.Rect: int top>;

        i4 = $i10 - $i9;

        if i3 == 0 goto label4;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>(r1, i3);

     label4:
        if i4 == 0 goto label5;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r1, i4);

     label5:
        if z0 == 0 goto label6;

        r6 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r6 == null goto label6;

        $r10 = r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r1, $r10);

     label6:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r4);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r5);

     label7:
        return;
    }

    public boolean isPointInChildBounds(android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1;
        android.graphics.Rect r2;
        boolean z0;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>(r1, r2);

     label1:
        z0 = virtualinvoke r2.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

     label2:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r2);

        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean doViewsOverlap(android.view.View, android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        android.graphics.Rect r3, r4;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.ViewParent $r5, $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label7;

        $i1 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label7;

        r3 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 == r0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>(r1, $z1, r3);

        r4 = staticinvoke <android.support.design.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r6 == r0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>(r2, $z2, r4);

        $i3 = r3.<android.graphics.Rect: int left>;

        $i2 = r4.<android.graphics.Rect: int right>;

        if $i3 > $i2 goto label5;

        $i5 = r3.<android.graphics.Rect: int top>;

        $i4 = r4.<android.graphics.Rect: int bottom>;

        if $i5 > $i4 goto label5;

        $i7 = r3.<android.graphics.Rect: int right>;

        $i6 = r4.<android.graphics.Rect: int left>;

        if $i7 < $i6 goto label5;

        $i9 = r3.<android.graphics.Rect: int bottom>;

        $i8 = r4.<android.graphics.Rect: int top>;

        if $i9 < $i8 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        z0 = $z3;

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r3);

        staticinvoke <android.support.design.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>(r4);

        return z0;

     label7:
        return 0;
    }

    public android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.util.AttributeSet r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.design.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r5 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        $r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) r1;

        specialinvoke $r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r3 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.design.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        int i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>(r1, r2, i0, 0);

        return $z0;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2, r3;
        int i0, i1, i2, $i3, i4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        boolean z0, z1;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z1 = 0;

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label5;

        r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i4);

        $i3 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i3 != 8 goto label2;

        goto label4;

     label2:
        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r5 == null goto label3;

        z0 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>(r0, r3, r1, r2, i0, i1);

        z1 = z1 | z0;

        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)>(i1, z0);

        goto label4;

     label3:
        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)>(i1, 0);

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return z1;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2, r3;
        int i0, i1, i2, i3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        android.support.v4.view.NestedScrollingParentHelper $r6;
        android.view.ViewGroup$LayoutParams $r7;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r6.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>(r1, r2, i0, i1);

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = r2;

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i3);

        $r7 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        $z0 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(i1);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r5 == null goto label3;

        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>(r0, r3, r1, r2, i0, i1);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View,int)>(r1, 0);

        return;
    }

    public void onStopNestedScroll(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        int i0, i1, i2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        android.support.v4.view.NestedScrollingParentHelper $r5;
        android.view.ViewGroup$LayoutParams $r6;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r5 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r5.<android.support.v4.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)>(r1, i0);

        i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        $z0 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(i0);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r4 == null goto label3;

        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int)>(r0, r2, r1, i0);

     label3:
        virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetNestedScroll(int)>(i0);

        virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = null;

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int)>(r1, i0, i1, i2, i3, 0);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        int i0, i1, i2, i3, i4, i5, $i6, i7;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0, z1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        z1 = 0;

        i7 = 0;

     label1:
        if i7 >= i5 goto label5;

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i7);

        $i6 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $z0 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(i4);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r4 == null goto label4;

        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)>(r0, r2, r1, i0, i1, i2, i3, i4);

        z1 = 1;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        if z1 == 0 goto label6;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label6:
        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        int i0, i1;
        int[] r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)>(r1, i0, i1, r2, 0);

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[], int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, $i13;
        int[] r2, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        android.view.ViewGroup$LayoutParams $r6;
        boolean $z0, z1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        i2 := @parameter4: int;

        i9 = 0;

        i10 = 0;

        z1 = 0;

        i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i11 = 0;

     label01:
        if i11 >= i3 goto label09;

        r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i11);

        $i4 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i4 != 8 goto label02;

        goto label08;

     label02:
        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        $z0 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(i2);

        if $z0 != 0 goto label03;

        goto label08;

     label03:
        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r5 == null goto label08;

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $r7[1] = 0;

        $r8[0] = 0;

        $r9 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)>(r0, r3, r1, i0, i1, $r9, i2);

        if i0 <= 0 goto label04;

        $r13 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i8 = $r13[0];

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(i9, $i8);

        goto label05;

     label04:
        $r10 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i5 = $r10[0];

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i9, $i5);

     label05:
        i9 = $i12;

        if i1 <= 0 goto label06;

        $r12 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i7 = $r12[1];

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i7);

        goto label07;

     label06:
        $r11 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i6 = $r11[1];

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i6);

     label07:
        i10 = $i13;

        z1 = 1;

     label08:
        i11 = i11 + 1;

        goto label01;

     label09:
        r2[0] = i9;

        r2[1] = i10;

        if z1 == 0 goto label10;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label10:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        float f0, f1;
        boolean z0, $z1, $z2, z3;
        int i0, $i1, i2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        z3 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $i1 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i1 != 8 goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $z1 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(0);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r4 == null goto label4;

        $z2 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)>(r0, r2, r1, f0, f1, z0);

        z3 = z3 | $z2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if z3 == 0 goto label6;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label6:
        return z3;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1, r2;
        float f0, f1;
        int i0, $i1, i2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0, $z1, z2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z2 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $i1 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i1 != 8 goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $z0 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(0);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r4 == null goto label4;

        $z1 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>(r0, r2, r1, f0, f1);

        z2 = z2 | $z1;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return z2;
    }

    public int getNestedScrollAxes()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.v4.view.NestedScrollingParentHelper $r1;
        int $i0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.os.Parcelable r1, r7, $r8;
        android.support.design.widget.CoordinatorLayout$SavedState r2;
        android.util.SparseArray r3;
        int i0, i1, i2;
        android.view.View r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior r6;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.support.design.widget.CoordinatorLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.support.design.widget.CoordinatorLayout$SavedState) r1;

        $r8 = virtualinvoke r2.<android.support.design.widget.CoordinatorLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r8);

        r3 = r2.<android.support.design.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates>;

        i2 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label2:
        if i2 >= i0 goto label4;

        r4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        i1 = virtualinvoke r4.<android.view.View: int getId()>();

        r5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>(r4);

        r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if i1 == -1 goto label3;

        if r6 == null goto label3;

        $r9 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r7 = (android.os.Parcelable) $r9;

        if r7 == null goto label3;

        virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>(r0, r4, r7);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$SavedState r1, r11;
        android.util.SparseArray r2, r12;
        int i0, i1, i2;
        android.view.View r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior r5;
        android.os.Parcelable r6, $r8, r13;
        android.view.ViewGroup$LayoutParams $r10;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r11 = new android.support.design.widget.CoordinatorLayout$SavedState;

        $r8 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke r11.<android.support.design.widget.CoordinatorLayout$SavedState: void <init>(android.os.Parcelable)>($r8);

        r1 = r11;

        r12 = new android.util.SparseArray;

        specialinvoke r12.<android.util.SparseArray: void <init>()>();

        r2 = r12;

        i2 = 0;

        i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if i2 >= i0 goto label3;

        r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        i1 = virtualinvoke r3.<android.view.View: int getId()>();

        $r10 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r10;

        r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if i1 == -1 goto label2;

        if r5 == null goto label2;

        r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r3);

        if r6 == null goto label2;

        virtualinvoke r2.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r1.<android.support.design.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates> = r2;

        r13 = (android.os.Parcelable) r1;

        return r13;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1, $z2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if r4 == null goto label1;

        $z2 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)>(r0, r1, r2, z0);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>(r1, r2, z0);

        return $z1;
    }

    private void setupForInsets()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0;
        boolean $z0;
        android.support.v4.view.OnApplyWindowInsetsListener $r1, $r2;
        android.support.design.widget.CoordinatorLayout$1 r4;
        android.view.View r5, r6, r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        return;

     label1:
        r5 = (android.view.View) r0;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r5);

        if $z0 == 0 goto label3;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener>;

        if $r1 != null goto label2;

        r4 = new android.support.design.widget.CoordinatorLayout$1;

        specialinvoke r4.<android.support.design.widget.CoordinatorLayout$1: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener> = r4;

     label2:
        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener>;

        r6 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>(r6, $r2);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setSystemUiVisibility(int)>(1280);

        goto label4;

     label3:
        r7 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>(r7, null);

     label4:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()>();

        r2 = (android.view.ViewGroup$LayoutParams) $r1;

        return r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams r1, r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.util.AttributeSet r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    static void <clinit>()
    {
        java.lang.Package r0;
        java.lang.Class $r1;
        int $i0;
        java.lang.Class[] $r2;
        java.lang.ThreadLocal $r3;
        android.support.v4.util.Pools$SynchronizedPool $r4;
        android.support.design.widget.CoordinatorLayout$ViewElevationComparator $r5;
        java.lang.String $r6;

        $r1 = class "Landroid/support/design/widget/CoordinatorLayout;";

        r0 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        if r0 == null goto label1;

        $r6 = virtualinvoke r0.<java.lang.Package: java.lang.String getName()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        <android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME> = $r6;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r5 = new android.support.design.widget.CoordinatorLayout$ViewElevationComparator;

        specialinvoke $r5.<android.support.design.widget.CoordinatorLayout$ViewElevationComparator: void <init>()>();

        <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = $r5;

        goto label4;

     label3:
        <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = null;

     label4:
        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Landroid/content/Context;";

        $r2[1] = class "Landroid/util/AttributeSet;";

        <android.support.design.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors> = $r3;

        $r4 = new android.support.v4.util.Pools$SynchronizedPool;

        specialinvoke $r4.<android.support.v4.util.Pools$SynchronizedPool: void <init>(int)>(12);

        <android.support.design.widget.CoordinatorLayout: android.support.v4.util.Pools$Pool sRectPool> = $r4;

        return;
    }

