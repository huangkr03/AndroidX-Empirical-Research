android.support.test.espresso.action.TypeTextAction
<android.support.test.espresso.action.TypeTextAction: java.lang.String TAG>
<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>
<android.support.test.espresso.action.TypeTextAction: boolean tapToFocus>
    public void <init>(java.lang.String)
    {
        android.support.test.espresso.action.TypeTextAction r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.action.TypeTextAction;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.support.test.espresso.action.TypeTextAction: void <init>(java.lang.String,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        android.support.test.espresso.action.TypeTextAction r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.support.test.espresso.action.TypeTextAction;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped> = r1;

        r0.<android.support.test.espresso.action.TypeTextAction: boolean tapToFocus> = z0;

        return;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.action.TypeTextAction r0;
        org.hamcrest.Matcher[] $r1;
        org.hamcrest.Matcher $r2, $r3, $r4, $r6, $r7, $r8, $r9, r10;
        boolean $z0;
        int $i0;
        org.hamcrest.core.AnyOf $r5;

        r0 := @this: android.support.test.espresso.action.TypeTextAction;

        $r1 = newarray (org.hamcrest.Matcher)[1];

        $r2 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        $r1[0] = $r2;

        r10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher[])>($r1);

        $z0 = r0.<android.support.test.espresso.action.TypeTextAction: boolean tapToFocus>;

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher hasFocus()>();

        r10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r10, $r9);

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

        $r7 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher supportsInputMethods()>();

        $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r10, $r7);

        return $r8;

     label2:
        $r3 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher supportsInputMethods()>();

        $r4 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/SearchView;");

        $r5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r3, $r4);

        $r6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r10, $r5);

        return $r6;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.action.TypeTextAction r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        android.support.test.espresso.InjectEventSecurityException r3, $r26;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13, $r16, $r17, $r18, $r25, $r27, $r28, $r29, $r30, $r32, $r34, $r38, $r39, $r40, r42, r44, r46;
        int $i0, $i1, $i3, $i5;
        boolean $z0, $z1;
        android.support.test.espresso.PerformException$Builder $r12, $r14, $r19, $r33, $r35, $r36, r43, r47;
        android.support.test.espresso.PerformException $r20, $r37;
        android.support.test.espresso.action.Press $r22;
        android.support.test.espresso.action.GeneralLocation $r23;
        android.support.test.espresso.action.Tap $r24;
        android.support.test.espresso.action.GeneralClickAction r41;
        java.lang.RuntimeException r45;
        java.lang.Throwable r48, r49, r50;

        r0 := @this: android.support.test.espresso.action.TypeTextAction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        $r4 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r25 = <android.support.test.espresso.action.TypeTextAction: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r25, "Supplied string is empty resulting in no-op (nothing is typed).");

        return;

     label01:
        $z0 = r0.<android.support.test.espresso.action.TypeTextAction: boolean tapToFocus>;

        if $z0 == 0 goto label02;

        r41 = new android.support.test.espresso.action.GeneralClickAction;

        $r24 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        $r23 = <android.support.test.espresso.action.GeneralLocation: android.support.test.espresso.action.GeneralLocation CENTER>;

        $r22 = <android.support.test.espresso.action.Press: android.support.test.espresso.action.Press FINGER>;

        specialinvoke r41.<android.support.test.espresso.action.GeneralClickAction: void <init>(android.support.test.espresso.action.Tapper,android.support.test.espresso.action.CoordinatesProvider,android.support.test.espresso.action.PrecisionDescriber)>($r24, $r23, $r22);

        virtualinvoke r41.<android.support.test.espresso.action.GeneralClickAction: void perform(android.support.test.espresso.UiController,android.view.View)>(r1, r2);

        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

     label02:
        $r5 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $z1 = interfaceinvoke r1.<android.support.test.espresso.UiController: boolean injectString(java.lang.String)>($r5);

        if $z1 != 0 goto label07;

        $r7 = <android.support.test.espresso.action.TypeTextAction: java.lang.String TAG>;

        $r8 = "Failed to type text: ";

        $r6 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 == 0 goto label03;

        $r38 = virtualinvoke $r8.<java.lang.String: java.lang.String concat(java.lang.String)>($r9);

        goto label04;

     label03:
        r42 = new java.lang.String;

        $r38 = r42;

        specialinvoke r42.<java.lang.String: void <init>(java.lang.String)>("Failed to type text: ");

     label04:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r7, $r38);

        r43 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r43.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r11 = virtualinvoke r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String getDescription()>();

        $r12 = virtualinvoke r43.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r11);

        $r13 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r2);

        $r14 = virtualinvoke $r12.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r13);

        r45 = new java.lang.RuntimeException;

        $r17 = "Failed to type text: ";

        $r16 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        $i3 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i3 == 0 goto label05;

        $r39 = virtualinvoke $r17.<java.lang.String: java.lang.String concat(java.lang.String)>($r18);

        goto label06;

     label05:
        r44 = new java.lang.String;

        $r39 = r44;

        specialinvoke r44.<java.lang.String: void <init>(java.lang.String)>("Failed to type text: ");

     label06:
        specialinvoke r45.<java.lang.RuntimeException: void <init>(java.lang.String)>($r39);

        r48 = (java.lang.Throwable) r45;

        $r19 = virtualinvoke $r14.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r48);

        $r20 = virtualinvoke $r19.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r49 = (java.lang.Throwable) $r20;

        throw r49;

     label07:
        goto label11;

     label08:
        $r26 := @caughtexception;

        r3 = $r26;

        $r28 = <android.support.test.espresso.action.TypeTextAction: java.lang.String TAG>;

        $r29 = "Failed to type text: ";

        $r27 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27);

        $i5 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i5 == 0 goto label09;

        $r40 = virtualinvoke $r29.<java.lang.String: java.lang.String concat(java.lang.String)>($r30);

        goto label10;

     label09:
        r46 = new java.lang.String;

        $r40 = r46;

        specialinvoke r46.<java.lang.String: void <init>(java.lang.String)>("Failed to type text: ");

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r28, $r40);

        r47 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r47.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r32 = virtualinvoke r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String getDescription()>();

        $r33 = virtualinvoke r47.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r32);

        $r34 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r2);

        $r35 = virtualinvoke $r33.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r3);

        $r37 = virtualinvoke $r36.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r50 = (java.lang.Throwable) $r37;

        throw r50;

     label11:
        return;

        catch android.support.test.espresso.InjectEventSecurityException from label02 to label07 with label08;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.action.TypeTextAction r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: android.support.test.espresso.action.TypeTextAction;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<android.support.test.espresso.action.TypeTextAction: java.lang.String stringToBeTyped>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("type text(%s)", $r1);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/test/espresso/action/TypeTextAction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.action.TypeTextAction: java.lang.String TAG> = $r1;

        return;
    }

