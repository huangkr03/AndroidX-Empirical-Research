android.support.test.espresso.action.AdapterViewProtocols
<android.support.test.espresso.action.AdapterViewProtocols: int FULLY_RENDERED_PERCENTAGE_CUTOFF>
<android.support.test.espresso.action.AdapterViewProtocols: android.support.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL>
    private void <init>()
    {
        android.support.test.espresso.action.AdapterViewProtocols r0;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.support.test.espresso.action.AdapterViewProtocol standardProtocol()
    {
        android.support.test.espresso.action.AdapterViewProtocol $r0;

        $r0 = <android.support.test.espresso.action.AdapterViewProtocols: android.support.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL>;

        return $r0;
    }

    static void <clinit>()
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol $r0;

        $r0 = new android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        specialinvoke $r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: void <init>()>();

        <android.support.test.espresso.action.AdapterViewProtocols: android.support.test.espresso.action.AdapterViewProtocol STANDARD_PROTOCOL> = $r0;

        return;
    }

android.support.test.espresso.action.AdapterViewProtocols$1
android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction
<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>
<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>
    private void <init>(java.lang.Object, int)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "position must be >= 0");

        r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition> = r1;

        r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position> = i0;

        return;
    }

    public java.lang.Object getData()
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        int i0, $i1;
        java.lang.Object $r1, $r2, $r8;
        boolean $z0, $z1;
        android.database.Cursor $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        $r1 = r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        $z0 = $r1 instanceof android.database.Cursor;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        $r3 = (android.database.Cursor) $r2;

        $i1 = r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>;

        $z1 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToPosition(int)>($i1);

        if $z1 != 0 goto label1;

        i0 = r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: int position>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(43);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move cursor to position: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("StdAdapterViewProtocol", $r7);

     label1:
        $r8 = r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: java.lang.Object dataAtPosition>;

        return $r8;
    }

    void <init>(java.lang.Object, int, android.support.test.espresso.action.AdapterViewProtocols$1)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r0;
        java.lang.Object r1;
        int i0;
        android.support.test.espresso.action.AdapterViewProtocols$1 r2;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.test.espresso.action.AdapterViewProtocols$1;

        specialinvoke r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int)>(r1, i0);

        return;
    }

android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol
<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: java.lang.String TAG>
    public void <init>()
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Iterable getDataInAdapterView(android.widget.AdapterView)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;
        android.widget.AdapterView r1;
        java.util.ArrayList r2;
        int i0, $i1, i2;
        java.lang.Object r3;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder $r6, $r8, r10;
        java.lang.Integer $r7;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData $r9;
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction r11;
        java.util.List r12;
        java.lang.Iterable r13;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r1 := @parameter0: android.widget.AdapterView;

        r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<android.widget.AdapterView: int getCount()>();

        if i2 >= $i1 goto label2;

        i0 = i2;

        r3 = virtualinvoke r1.<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>(i0);

        r10 = new android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder;

        specialinvoke r10.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: void <init>()>();

        r11 = new android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        specialinvoke r11.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int,android.support.test.espresso.action.AdapterViewProtocols$1)>(r3, i0, null);

        $r6 = virtualinvoke r10.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withDataFunction(android.support.test.espresso.action.AdapterViewProtocol$DataFunction)>(r11);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withOpaqueToken(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData build()>();

        r12 = (java.util.List) r2;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        r13 = (java.lang.Iterable) r2;

        return r13;
    }

    public android.support.test.espresso.util.EspressoOptional getDataRenderedByView(android.widget.AdapterView, android.view.View)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        android.view.ViewParent $r3;
        android.support.test.espresso.util.EspressoOptional $r4, $r12;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder $r5, $r8, $r10;
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction $r6;
        java.lang.Object $r7;
        java.lang.Integer $r9;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData $r11;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.view.View;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if r1 != $r3 goto label1;

        i0 = virtualinvoke r1.<android.widget.AdapterView: int getPositionForView(android.view.View)>(r2);

        if i0 == -1 goto label1;

        $r5 = new android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder;

        specialinvoke $r5.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: void <init>()>();

        $r6 = new android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction;

        $r7 = virtualinvoke r1.<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>(i0);

        specialinvoke $r6.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol$StandardDataFunction: void <init>(java.lang.Object,int,android.support.test.espresso.action.AdapterViewProtocols$1)>($r7, i0, null);

        $r8 = virtualinvoke $r5.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withDataFunction(android.support.test.espresso.action.AdapterViewProtocol$DataFunction)>($r6);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = virtualinvoke $r8.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder withOpaqueToken(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData$Builder: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData build()>();

        $r12 = staticinvoke <android.support.test.espresso.util.EspressoOptional: android.support.test.espresso.util.EspressoOptional of(java.lang.Object)>($r11);

        return $r12;

     label1:
        $r4 = staticinvoke <android.support.test.espresso.util.EspressoOptional: android.support.test.espresso.util.EspressoOptional absent()>();

        return $r4;
    }

    public void makeDataRenderedWithinAdapterView(android.widget.AdapterView, android.support.test.espresso.action.AdapterViewProtocol$AdaptedData)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;
        android.widget.AdapterView r1;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Integer $r5;
        android.widget.AdapterViewAnimator $r6;
        android.widget.AdapterViewFlipper $r7;
        android.widget.AbsListView $r8, $r9;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData;

        $r3 = r2.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $z0 = $r3 instanceof java.lang.Integer;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Not my data: %s", r2);

        $r4 = r2.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        z4 = 0;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 <= 7 goto label5;

        $z1 = r1 instanceof android.widget.AbsListView;

        if $z1 == 0 goto label3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 <= 10 goto label1;

        $r9 = (android.widget.AbsListView) r1;

        $i3 = virtualinvoke r1.<android.widget.AdapterView: int getPaddingTop()>();

        virtualinvoke $r9.<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>(i0, $i3, 0);

        goto label2;

     label1:
        $r8 = (android.widget.AbsListView) r1;

        virtualinvoke $r8.<android.widget.AbsListView: void smoothScrollToPosition(int)>(i0);

     label2:
        z4 = 1;

     label3:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 <= 10 goto label5;

        $z2 = r1 instanceof android.widget.AdapterViewAnimator;

        if $z2 == 0 goto label5;

        $z3 = r1 instanceof android.widget.AdapterViewFlipper;

        if $z3 == 0 goto label4;

        $r7 = (android.widget.AdapterViewFlipper) r1;

        virtualinvoke $r7.<android.widget.AdapterViewFlipper: void stopFlipping()>();

     label4:
        $r6 = (android.widget.AdapterViewAnimator) r1;

        virtualinvoke $r6.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>(i0);

        z4 = 1;

     label5:
        if z4 != 0 goto label6;

        virtualinvoke r1.<android.widget.AdapterView: void setSelection(int)>(i0);

     label6:
        return;
    }

    public boolean isDataRenderedWithinAdapterView(android.widget.AdapterView, android.support.test.espresso.action.AdapterViewProtocol$AdaptedData)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;
        android.widget.AdapterView r1;
        android.support.test.espresso.action.AdapterViewProtocol$AdaptedData r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1, z2;
        java.lang.Integer $r5, $r6, $r7, $r9;
        android.support.test.espresso.core.internal.deps.guava.collect.Range $r8;
        java.lang.Comparable r10, r11, r12;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.support.test.espresso.action.AdapterViewProtocol$AdaptedData;

        $r3 = r2.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $z0 = $r3 instanceof java.lang.Integer;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Not my data: %s", r2);

        $r4 = r2.<android.support.test.espresso.action.AdapterViewProtocol$AdaptedData: java.lang.Object opaqueToken>;

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        z2 = 0;

        $i1 = virtualinvoke r1.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = virtualinvoke r1.<android.widget.AdapterView: int getLastVisiblePosition()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r10 = (java.lang.Comparable) $r6;

        r11 = (java.lang.Comparable) $r7;

        $r8 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Range: android.support.test.espresso.core.internal.deps.guava.collect.Range closed(java.lang.Comparable,java.lang.Comparable)>(r10, r11);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r12 = (java.lang.Comparable) $r9;

        $z1 = virtualinvoke $r8.<android.support.test.espresso.core.internal.deps.guava.collect.Range: boolean contains(java.lang.Comparable)>(r12);

        if $z1 == 0 goto label2;

        $i3 = virtualinvoke r1.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $i4 = virtualinvoke r1.<android.widget.AdapterView: int getLastVisiblePosition()>();

        if $i3 != $i4 goto label1;

        z2 = 1;

        goto label2;

     label1:
        $i5 = virtualinvoke r1.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        $i6 = i0 - $i5;

        z2 = specialinvoke r0.<android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol: boolean isElementFullyRendered(android.widget.AdapterView,int)>(r1, $i6);

     label2:
        if z2 == 0 goto label3;

        virtualinvoke r1.<android.widget.AdapterView: void setSelection(int)>(i0);

     label3:
        return z2;
    }

    private boolean isElementFullyRendered(android.widget.AdapterView, int)
    {
        android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol r0;
        android.widget.AdapterView r1;
        int i0;
        android.view.View r2;
        org.hamcrest.Matcher $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.action.AdapterViewProtocols$StandardAdapterViewProtocol;

        r1 := @parameter0: android.widget.AdapterView;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.widget.AdapterView: android.view.View getChildAt(int)>(i0);

        $r3 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r2);

        return $z0;
    }

