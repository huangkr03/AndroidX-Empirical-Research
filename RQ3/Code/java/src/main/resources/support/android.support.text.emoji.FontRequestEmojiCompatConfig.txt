android.support.text.emoji.FontRequestEmojiCompatConfig
<android.support.text.emoji.FontRequestEmojiCompatConfig: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT>
    public void <init>(android.content.Context, android.support.v4.provider.FontRequest)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig r0;
        android.content.Context r1;
        android.support.v4.provider.FontRequest r2;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r4;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.provider.FontRequest;

        $r3 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r4 = <android.support.text.emoji.FontRequestEmojiCompatConfig: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT>;

        specialinvoke $r3.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void <init>(android.content.Context,android.support.v4.provider.FontRequest,android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper)>(r1, r2, $r4);

        specialinvoke r0.<android.support.text.emoji.EmojiCompat$Config: void <init>(android.support.text.emoji.EmojiCompat$MetadataRepoLoader)>($r3);

        return;
    }

    public void <init>(android.content.Context, android.support.v4.provider.FontRequest, android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig r0;
        android.content.Context r1;
        android.support.v4.provider.FontRequest r2;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r3;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r4;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.provider.FontRequest;

        r3 := @parameter2: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        $r4 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        specialinvoke $r4.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void <init>(android.content.Context,android.support.v4.provider.FontRequest,android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper)>(r1, r2, r3);

        specialinvoke r0.<android.support.text.emoji.EmojiCompat$Config: void <init>(android.support.text.emoji.EmojiCompat$MetadataRepoLoader)>($r4);

        return;
    }

    public android.support.text.emoji.FontRequestEmojiCompatConfig setHandler(android.os.Handler)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig r0;
        android.os.Handler r1;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoader $r2;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.os.Handler;

        $r2 = virtualinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig: android.support.text.emoji.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()>();

        $r3 = (android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) $r2;

        virtualinvoke $r3.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setHandler(android.os.Handler)>(r1);

        return r0;
    }

    public android.support.text.emoji.FontRequestEmojiCompatConfig setRetryPolicy(android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy r1;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoader $r2;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig;

        r1 := @parameter0: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy;

        $r2 = virtualinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig: android.support.text.emoji.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()>();

        $r3 = (android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) $r2;

        virtualinvoke $r3.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setRetryPolicy(android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy)>(r1);

        return r0;
    }

    static void <clinit>()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r0;

        $r0 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke $r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper: void <init>()>();

        <android.support.text.emoji.FontRequestEmojiCompatConfig: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT> = $r0;

        return;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy
<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>
<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>
    public void <init>(long)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy r0;
        long l0;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy;

        l0 := @parameter0: long;

        specialinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy: void <init>()>();

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs> = l0;

        return;
    }

    public long getRetryDelay()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy r0;
        long l0, $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l10, $l11;
        byte $b2, $b6;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy;

        $l1 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin> = $l11;

        return 0L;

     label1:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mRetryOrigin>;

        l0 = $l3 - $l4;

        $l5 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>;

        $b6 = l0 cmp $l5;

        if $b6 <= 0 goto label2;

        return -1L;

     label2:
        $l7 = staticinvoke <java.lang.Math: long max(long,long)>(l0, 1000L);

        $l8 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy: long mTotalMs>;

        $l9 = $l8 - l0;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>($l7, $l9);

        return $l10;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper
    public void <init>()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r0;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context, android.support.v4.provider.FontRequest) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.support.v4.provider.FontRequest r2;
        android.support.v4.provider.FontsContractCompat$FontFamilyResult $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.provider.FontRequest;

        $r3 = staticinvoke <android.support.v4.provider.FontsContractCompat: android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest)>(r1, null, r2);

        return $r3;
    }

    public android.graphics.Typeface buildTypeface(android.content.Context, android.support.v4.provider.FontsContractCompat$FontInfo) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.support.v4.provider.FontsContractCompat$FontInfo r2;
        android.support.v4.provider.FontsContractCompat$FontInfo[] $r3;
        android.graphics.Typeface $r4;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.provider.FontsContractCompat$FontInfo;

        $r3 = newarray (android.support.v4.provider.FontsContractCompat$FontInfo)[1];

        $r3[0] = r2;

        $r4 = staticinvoke <android.support.v4.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[])>(r1, null, $r3);

        return $r4;
    }

    public void registerObserver(android.content.Context, android.net.Uri, android.database.ContentObserver)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.database.ContentObserver r3;
        android.content.ContentResolver $r4;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.database.ContentObserver;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r2, 0, r3);

        return;
    }

    public void unregisterObserver(android.content.Context, android.database.ContentObserver)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r0;
        android.content.Context r1;
        android.database.ContentObserver r2;
        android.content.ContentResolver $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.database.ContentObserver;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r2);

        return;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback val$loaderCallback>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>
    void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader, android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r1;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback r2;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        r1 := @parameter0: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r2 := @parameter1: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0> = r1;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback val$loaderCallback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 r0;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback $r1;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r2, $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        $r2 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>;

        $r1 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback val$loaderCallback>;

        $r2.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback> = $r1;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>;

        virtualinvoke $r3.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()>();

        return;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>
    void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader, android.os.Handler)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2 r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r1;
        android.os.Handler r2;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2;

        r1 := @parameter0: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r2 := @parameter1: android.os.Handler;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2 r0;
        boolean z0;
        android.net.Uri r1;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r2;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        $r2 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>;

        virtualinvoke $r2.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()>();

        return;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>
    void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3 r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r1;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3;

        r1 := @parameter0: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3 r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader $r1;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3;

        $r1 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader this$0>;

        virtualinvoke $r1.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()>();

        return;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.v4.provider.FontRequest mRequest>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>
<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mHandleMetadataCreationRunner>
    void <init>(android.content.Context, android.support.v4.provider.FontRequest, android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.content.Context r1, $r7;
        android.support.v4.provider.FontRequest r2;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper r3;
        java.lang.Object $r4;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.provider.FontRequest;

        r3 := @parameter2: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock> = $r4;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Context cannot be null");

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "FontRequest cannot be null");

        $r7 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext> = $r7;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.v4.provider.FontRequest mRequest> = r2;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper> = r3;

        return;
    }

    public void setHandler(android.os.Handler)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.os.Handler r1;
        java.lang.Object r2, $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.os.Handler;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void setRetryPolicy(android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy r1;
        java.lang.Object r2, $r3;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void load(android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r14;
        android.os.Handler $r6, $r8, $r11;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 $r7;
        android.os.HandlerThread $r9, $r10, $r12;
        android.os.Looper $r13;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback;

        staticinvoke <android.support.v4.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "LoaderCallback cannot be null");

        $r5 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>;

        if $r6 != null goto label2;

        $r9 = new android.os.HandlerThread;

        specialinvoke $r9.<android.os.HandlerThread: void <init>(java.lang.String,int)>("emojiCompat", 10);

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread> = $r9;

        $r10 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread>;

        virtualinvoke $r10.<android.os.HandlerThread: void start()>();

        $r11 = new android.os.Handler;

        $r12 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread>;

        $r13 = virtualinvoke $r12.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r11.<android.os.Handler: void <init>(android.os.Looper)>($r13);

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler> = $r11;

     label2:
        $r8 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>;

        $r7 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1;

        specialinvoke $r7.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1: void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader,android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback)>(r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.support.v4.provider.FontsContractCompat$FontInfo retrieveFontInfo()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.support.v4.provider.FontsContractCompat$FontFamilyResult r1;
        android.support.v4.provider.FontRequest $r2;
        android.content.Context $r3;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r4;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r5, $r7, $r14;
        android.support.v4.provider.FontsContractCompat$FontInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13, r15;
        android.support.v4.provider.FontsContractCompat$FontInfo[] r16;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

     label1:
        $r4 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r2 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.v4.provider.FontRequest mRequest>;

        r1 = virtualinvoke $r4.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper: android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.support.v4.provider.FontRequest)>($r3, $r2);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("provider not found", r15);

        throw $r14;

     label4:
        $i0 = virtualinvoke r1.<android.support.v4.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        if $i0 == 0 goto label5;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchFonts failed (");

        $i2 = virtualinvoke r1.<android.support.v4.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label5:
        r16 = virtualinvoke r1.<android.support.v4.provider.FontsContractCompat$FontFamilyResult: android.support.v4.provider.FontsContractCompat$FontInfo[] getFonts()>();

        if r16 == null goto label6;

        $i1 = lengthof r16;

        if $i1 != 0 goto label7;

     label6:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("fetchFonts failed (empty result)");

        throw $r5;

     label7:
        $r6 = r16[0];

        return $r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void scheduleRetry(android.net.Uri, long)
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        android.net.Uri r1;
        long l0;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r15;
        android.database.ContentObserver $r5, $r12;
        java.lang.Runnable $r6, $r7;
        android.os.Handler $r8, $r11;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3 $r9;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2 $r10;
        android.content.Context $r13;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r14;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r1 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        $r4 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        if $r5 != null goto label2;

        $r10 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2;

        $r11 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>;

        specialinvoke $r10.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$2: void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader,android.os.Handler)>(r0, $r11);

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver> = $r10;

        $r14 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r13 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r12 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        virtualinvoke $r14.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper: void registerObserver(android.content.Context,android.net.Uri,android.database.ContentObserver)>($r13, r1, $r12);

     label2:
        $r6 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mHandleMetadataCreationRunner>;

        if $r6 != null goto label3;

        $r9 = new android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3;

        specialinvoke $r9.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$3: void <init>(android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader)>(r0);

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mHandleMetadataCreationRunner> = $r9;

     label3:
        $r8 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>;

        $r7 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mHandleMetadataCreationRunner>;

        virtualinvoke $r8.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, l0);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void cleanUp()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r12;
        android.database.ContentObserver $r3, $r9;
        java.lang.Runnable $r5;
        android.os.Handler $r6;
        android.os.HandlerThread $r7, $r8;
        android.content.Context $r10;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r11;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback> = null;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        if $r3 == null goto label1;

        $r11 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r10 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r9 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver>;

        virtualinvoke $r11.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper: void unregisterObserver(android.content.Context,android.database.ContentObserver)>($r10, $r9);

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.database.ContentObserver mObserver> = null;

     label1:
        $r4 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label2:
        $r6 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler>;

        $r5 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Runnable mHandleMetadataCreationRunner>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $r7 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread>;

        if $r7 == null goto label3;

        $r8 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread>;

        virtualinvoke $r8.<android.os.HandlerThread: boolean quit()>();

     label3:
        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.Handler mHandler> = null;

        r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.os.HandlerThread mThread> = null;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void createMetadata()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader r0;
        int i0;
        java.lang.Throwable r1, $r20, $r21, r27;
        android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback $r2, $r7, $r22;
        android.content.Context $r3, $r5;
        android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper $r4;
        android.net.Uri $r6, $r19;
        android.support.text.emoji.MetadataRepo $r8;
        java.lang.RuntimeException $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        java.lang.Object $r16, r24;
        android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy $r17, $r18;
        byte $b1;
        android.support.v4.provider.FontsContractCompat$FontInfo r23;
        long l2;
        android.graphics.Typeface r25;
        java.nio.ByteBuffer r26;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader;

        $r2 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        if $r2 != null goto label01;

        return;

     label01:
        r23 = specialinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.v4.provider.FontsContractCompat$FontInfo retrieveFontInfo()>();

        i0 = virtualinvoke r23.<android.support.v4.provider.FontsContractCompat$FontInfo: int getResultCode()>();

        if i0 != 2 goto label08;

        $r16 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: java.lang.Object mLock>;

        r24 = $r16;

        entermonitor $r16;

     label02:
        $r17 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>;

        if $r17 == null goto label04;

        $r18 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy mRetryPolicy>;

        l2 = virtualinvoke $r18.<android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy: long getRetryDelay()>();

        $b1 = l2 cmp 0L;

        if $b1 < 0 goto label04;

        $r19 = virtualinvoke r23.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        specialinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void scheduleRetry(android.net.Uri,long)>($r19, l2);

        exitmonitor r24;

     label03:
        return;

     label04:
        exitmonitor r24;

     label05:
        goto label08;

     label06:
        $r20 := @caughtexception;

        r1 = $r20;

        exitmonitor r24;

     label07:
        throw r1;

     label08:
        if i0 == 0 goto label09;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchFonts result is not OK. (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label09:
        $r4 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper>;

        $r3 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        r25 = virtualinvoke $r4.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontProviderHelper: android.graphics.Typeface buildTypeface(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo)>($r3, r23);

        $r5 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.content.Context mContext>;

        $r6 = virtualinvoke r23.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        r26 = staticinvoke <android.support.v4.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)>($r5, null, $r6);

        if r26 != null goto label10;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to open file.");

        throw $r9;

     label10:
        $r7 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        $r8 = staticinvoke <android.support.text.emoji.MetadataRepo: android.support.text.emoji.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)>(r25, r26);

        virtualinvoke $r7.<android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback: void onLoaded(android.support.text.emoji.MetadataRepo)>($r8);

        specialinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void cleanUp()>();

     label11:
        goto label13;

     label12:
        $r21 := @caughtexception;

        r27 = $r21;

        $r22 = r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback mCallback>;

        virtualinvoke $r22.<android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback: void onFailed(java.lang.Throwable)>(r27);

        specialinvoke r0.<android.support.text.emoji.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void cleanUp()>();

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label11 with label12;
    }

android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy
    public void <init>()
    {
        android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy r0;

        r0 := @this: android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.text.emoji.FontRequestEmojiCompatConfig$RetryPolicy: long getRetryDelay()>
