android.support.transition.ImageViewUtils
<android.support.transition.ImageViewUtils: java.lang.String TAG>
<android.support.transition.ImageViewUtils: java.lang.reflect.Method sAnimateTransformMethod>
<android.support.transition.ImageViewUtils: boolean sAnimateTransformMethodFetched>
    static void startAnimateTransform(android.widget.ImageView)
    {
        android.widget.ImageView r0;
        android.widget.ImageView$ScaleType r1, $r2, $r3;
        int $i0, $i1, $i2;
        android.graphics.Matrix $r4, $r5;

        r0 := @parameter0: android.widget.ImageView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label3;

        r1 = virtualinvoke r0.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $i1 = <android.support.transition.R$id: int save_scale_type>;

        virtualinvoke r0.<android.widget.ImageView: void setTag(int,java.lang.Object)>($i1, r1);

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if r1 != $r2 goto label1;

        $i2 = <android.support.transition.R$id: int save_image_matrix>;

        $r5 = virtualinvoke r0.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        virtualinvoke r0.<android.widget.ImageView: void setTag(int,java.lang.Object)>($i2, $r5);

        goto label2;

     label1:
        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r3);

     label2:
        $r4 = <android.support.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

        virtualinvoke r0.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r4);

     label3:
        return;
    }

    static void animateTransform(android.widget.ImageView, android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1;
        int $i0;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Throwable $r6, $r8, $r9, r10, r11;
        java.lang.RuntimeException $r7;

        r0 := @parameter0: android.widget.ImageView;

        r1 := @parameter1: android.graphics.Matrix;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        virtualinvoke r0.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>(r1);

        goto label6;

     label1:
        staticinvoke <android.support.transition.ImageViewUtils: void fetchAnimateTransformMethod()>();

        $r2 = <android.support.transition.ImageViewUtils: java.lang.reflect.Method sAnimateTransformMethod>;

        if $r2 == null goto label6;

     label2:
        $r4 = <android.support.transition.ImageViewUtils: java.lang.reflect.Method sAnimateTransformMethod>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

        goto label6;

     label5:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke r11.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label6:
        return;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label5;
    }

    private static void fetchAnimateTransformMethod()
    {
        java.lang.Throwable r0, $r5;
        boolean $z0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3, $r4;

        $z0 = <android.support.transition.ImageViewUtils: boolean sAnimateTransformMethodFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r2 = class "Landroid/widget/ImageView;";

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Landroid/graphics/Matrix;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("animateTransform", $r1);

        <android.support.transition.ImageViewUtils: java.lang.reflect.Method sAnimateTransformMethod> = $r3;

        $r4 = <android.support.transition.ImageViewUtils: java.lang.reflect.Method sAnimateTransformMethod>;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r0 = $r5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageViewUtils", "Failed to retrieve animateTransform method", r0);

     label4:
        <android.support.transition.ImageViewUtils: boolean sAnimateTransformMethodFetched> = 1;

     label5:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    static void reserveEndAnimateTransform(android.widget.ImageView, android.animation.Animator)
    {
        android.widget.ImageView r0;
        android.animation.Animator r1;
        int $i0;
        android.support.transition.ImageViewUtils$1 r3;
        android.animation.Animator$AnimatorListener r4;

        r0 := @parameter0: android.widget.ImageView;

        r1 := @parameter1: android.animation.Animator;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        r3 = new android.support.transition.ImageViewUtils$1;

        specialinvoke r3.<android.support.transition.ImageViewUtils$1: void <init>(android.widget.ImageView)>(r0);

        r4 = (android.animation.Animator$AnimatorListener) r3;

        virtualinvoke r1.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>(r4);

     label1:
        return;
    }

    private void <init>()
    {
        android.support.transition.ImageViewUtils r0;

        r0 := @this: android.support.transition.ImageViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.transition.ImageViewUtils$1
<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>
    void <init>(android.widget.ImageView)
    {
        android.support.transition.ImageViewUtils$1 r0;
        android.widget.ImageView r1;

        r0 := @this: android.support.transition.ImageViewUtils$1;

        r1 := @parameter0: android.widget.ImageView;

        r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view> = r1;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.transition.ImageViewUtils$1 r0;
        android.animation.Animator r1;
        android.widget.ImageView$ScaleType r2, $r7;
        int $i0, $i1, $i2, $i3;
        android.widget.ImageView $r3, $r5, $r6, $r8, $r9, $r12;
        java.lang.Object $r4, $r10;
        android.graphics.Matrix $r11;
        android.animation.Animator$AnimatorListener r13;

        r0 := @this: android.support.transition.ImageViewUtils$1;

        r1 := @parameter0: android.animation.Animator;

        $r3 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        $i0 = <android.support.transition.R$id: int save_scale_type>;

        $r4 = virtualinvoke $r3.<android.widget.ImageView: java.lang.Object getTag(int)>($i0);

        r2 = (android.widget.ImageView$ScaleType) $r4;

        $r5 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        virtualinvoke $r5.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>(r2);

        $r6 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        $i1 = <android.support.transition.R$id: int save_scale_type>;

        virtualinvoke $r6.<android.widget.ImageView: void setTag(int,java.lang.Object)>($i1, null);

        $r7 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if r2 != $r7 goto label1;

        $r9 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        $r8 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        $i2 = <android.support.transition.R$id: int save_image_matrix>;

        $r10 = virtualinvoke $r8.<android.widget.ImageView: java.lang.Object getTag(int)>($i2);

        $r11 = (android.graphics.Matrix) $r10;

        virtualinvoke $r9.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r11);

        $r12 = r0.<android.support.transition.ImageViewUtils$1: android.widget.ImageView val$view>;

        $i3 = <android.support.transition.R$id: int save_image_matrix>;

        virtualinvoke $r12.<android.widget.ImageView: void setTag(int,java.lang.Object)>($i3, null);

     label1:
        r13 = (android.animation.Animator$AnimatorListener) r0;

        virtualinvoke r1.<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>(r13);

        return;
    }

