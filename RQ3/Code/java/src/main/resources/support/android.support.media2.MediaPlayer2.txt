android.support.media2.MediaPlayer2
<android.support.media2.MediaPlayer2: int VIDEO_SCALING_MODE_SCALE_TO_FIT>
<android.support.media2.MediaPlayer2: int SEEK_PREVIOUS_SYNC>
<android.support.media2.MediaPlayer2: int SEEK_NEXT_SYNC>
<android.support.media2.MediaPlayer2: int SEEK_CLOSEST_SYNC>
<android.support.media2.MediaPlayer2: int SEEK_CLOSEST>
<android.support.media2.MediaPlayer2: int PLAYER_STATE_IDLE>
<android.support.media2.MediaPlayer2: int PLAYER_STATE_PREPARED>
<android.support.media2.MediaPlayer2: int PLAYER_STATE_PAUSED>
<android.support.media2.MediaPlayer2: int PLAYER_STATE_PLAYING>
<android.support.media2.MediaPlayer2: int PLAYER_STATE_ERROR>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_UNKNOWN>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_IO>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_MALFORMED>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_UNSUPPORTED>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_TIMED_OUT>
<android.support.media2.MediaPlayer2: int MEDIA_ERROR_SYSTEM>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_UNKNOWN>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_DATA_SOURCE_START>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_VIDEO_RENDERING_START>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_AUDIO_RENDERING_START>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_DATA_SOURCE_END>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_DATA_SOURCE_LIST_END>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_DATA_SOURCE_REPEAT>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_PREPARED>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_VIDEO_TRACK_LAGGING>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_BUFFERING_START>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_BUFFERING_END>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_NETWORK_BANDWIDTH>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_BUFFERING_UPDATE>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_BAD_INTERLEAVING>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_NOT_SEEKABLE>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_METADATA_UPDATE>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_EXTERNAL_METADATA_UPDATE>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_AUDIO_NOT_PLAYING>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_VIDEO_NOT_PLAYING>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_TIMED_TEXT_ERROR>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_UNSUPPORTED_SUBTITLE>
<android.support.media2.MediaPlayer2: int MEDIA_INFO_SUBTITLE_TIMED_OUT>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_ATTACH_AUX_EFFECT>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_DESELECT_TRACK>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_LOOP_CURRENT>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_PAUSE>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_PLAY>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_PREPARE>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SEEK_TO>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SELECT_TRACK>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_AUDIO_ATTRIBUTES>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_AUDIO_SESSION_ID>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_DATA_SOURCE>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_NEXT_DATA_SOURCE>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_NEXT_DATA_SOURCES>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_PLAYBACK_PARAMS>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_PLAYER_VOLUME>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SET_SURFACE>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_SKIP_TO_NEXT>
<android.support.media2.MediaPlayer2: int SEPARATE_CALL_COMPLETE_CALLBACK_START>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_NOTIFY_WHEN_COMMAND_LABEL_REACHED>
<android.support.media2.MediaPlayer2: int CALL_COMPLETED_PREPARE_DRM>
<android.support.media2.MediaPlayer2: int CALL_STATUS_NO_ERROR>
<android.support.media2.MediaPlayer2: int CALL_STATUS_ERROR_UNKNOWN>
<android.support.media2.MediaPlayer2: int CALL_STATUS_INVALID_OPERATION>
<android.support.media2.MediaPlayer2: int CALL_STATUS_BAD_VALUE>
<android.support.media2.MediaPlayer2: int CALL_STATUS_PERMISSION_DENIED>
<android.support.media2.MediaPlayer2: int CALL_STATUS_ERROR_IO>
<android.support.media2.MediaPlayer2: int CALL_STATUS_SKIPPED>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_SUCCESS>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_PREPARATION_ERROR>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME>
<android.support.media2.MediaPlayer2: int PREPARE_DRM_STATUS_RESOURCE_BUSY>
    public static final android.support.media2.MediaPlayer2 create(android.content.Context)
    {
        android.content.Context r0;
        android.support.media2.MediaPlayer2Impl $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.support.media2.MediaPlayer2Impl;

        specialinvoke $r1.<android.support.media2.MediaPlayer2Impl: void <init>()>();

        return $r1;
    }

    public void <init>()
    {
        android.support.media2.MediaPlayer2 r0;

        r0 := @this: android.support.media2.MediaPlayer2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.media2.MediaPlayer2: android.support.media2.MediaPlayerConnector getMediaPlayerConnector()>
<android.support.media2.MediaPlayer2: void close()>
<android.support.media2.MediaPlayer2: void play()>
<android.support.media2.MediaPlayer2: void prepare()>
<android.support.media2.MediaPlayer2: void pause()>
<android.support.media2.MediaPlayer2: void skipToNext()>
    public void seekTo(long)
    {
        android.support.media2.MediaPlayer2 r0;
        long l0;

        r0 := @this: android.support.media2.MediaPlayer2;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.support.media2.MediaPlayer2: void seekTo(long,int)>(l0, 0);

        return;
    }

<android.support.media2.MediaPlayer2: long getCurrentPosition()>
<android.support.media2.MediaPlayer2: long getDuration()>
<android.support.media2.MediaPlayer2: long getBufferedPosition()>
<android.support.media2.MediaPlayer2: int getState()>
<android.support.media2.MediaPlayer2: void setAudioAttributes(android.support.v4.media.AudioAttributesCompat)>
<android.support.media2.MediaPlayer2: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>
<android.support.media2.MediaPlayer2: void setDataSource(android.support.media2.DataSourceDesc2)>
<android.support.media2.MediaPlayer2: void setNextDataSource(android.support.media2.DataSourceDesc2)>
<android.support.media2.MediaPlayer2: void setNextDataSources(java.util.List)>
<android.support.media2.MediaPlayer2: android.support.media2.DataSourceDesc2 getCurrentDataSource()>
<android.support.media2.MediaPlayer2: void loopCurrent(boolean)>
<android.support.media2.MediaPlayer2: void setPlayerVolume(float)>
<android.support.media2.MediaPlayer2: float getPlayerVolume()>
    public float getMaxPlayerVolume()
    {
        android.support.media2.MediaPlayer2 r0;

        r0 := @this: android.support.media2.MediaPlayer2;

        return 1.0F;
    }

    public void notifyWhenCommandLabelReached(java.lang.Object)
    {
        android.support.media2.MediaPlayer2 r0;
        java.lang.Object r1;

        r0 := @this: android.support.media2.MediaPlayer2;

        r1 := @parameter0: java.lang.Object;

        return;
    }

<android.support.media2.MediaPlayer2: void setSurface(android.view.Surface)>
<android.support.media2.MediaPlayer2: void clearPendingCommands()>
<android.support.media2.MediaPlayer2: int getVideoWidth()>
<android.support.media2.MediaPlayer2: int getVideoHeight()>
<android.support.media2.MediaPlayer2: android.os.PersistableBundle getMetrics()>
<android.support.media2.MediaPlayer2: void setPlaybackParams(android.support.media2.PlaybackParams2)>
<android.support.media2.MediaPlayer2: android.support.media2.PlaybackParams2 getPlaybackParams()>
<android.support.media2.MediaPlayer2: void seekTo(long,int)>
<android.support.media2.MediaPlayer2: android.support.media2.MediaTimestamp2 getTimestamp()>
<android.support.media2.MediaPlayer2: void reset()>
<android.support.media2.MediaPlayer2: void setAudioSessionId(int)>
<android.support.media2.MediaPlayer2: int getAudioSessionId()>
<android.support.media2.MediaPlayer2: void attachAuxEffect(int)>
<android.support.media2.MediaPlayer2: void setAuxEffectSendLevel(float)>
<android.support.media2.MediaPlayer2: java.util.List getTrackInfo()>
<android.support.media2.MediaPlayer2: int getSelectedTrack(int)>
<android.support.media2.MediaPlayer2: void selectTrack(int)>
<android.support.media2.MediaPlayer2: void deselectTrack(int)>
<android.support.media2.MediaPlayer2: void setEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlayer2$EventCallback)>
<android.support.media2.MediaPlayer2: void clearEventCallback()>
<android.support.media2.MediaPlayer2: void setOnDrmConfigHelper(android.support.media2.MediaPlayer2$OnDrmConfigHelper)>
<android.support.media2.MediaPlayer2: void setDrmEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlayer2$DrmEventCallback)>
<android.support.media2.MediaPlayer2: void clearDrmEventCallback()>
<android.support.media2.MediaPlayer2: android.support.media2.MediaPlayer2$DrmInfo getDrmInfo()>
<android.support.media2.MediaPlayer2: void prepareDrm(java.util.UUID)>
<android.support.media2.MediaPlayer2: void releaseDrm()>
<android.support.media2.MediaPlayer2: android.media.MediaDrm$KeyRequest getDrmKeyRequest(byte[],byte[],java.lang.String,int,java.util.Map)>
<android.support.media2.MediaPlayer2: byte[] provideDrmKeyResponse(byte[],byte[])>
<android.support.media2.MediaPlayer2: void restoreDrmKeys(byte[])>
<android.support.media2.MediaPlayer2: java.lang.String getDrmPropertyString(java.lang.String)>
<android.support.media2.MediaPlayer2: void setDrmPropertyString(java.lang.String,java.lang.String)>
android.support.media2.MediaPlayer2$CallCompleted
android.support.media2.MediaPlayer2$CallStatus
android.support.media2.MediaPlayer2$DrmEventCallback
    public void <init>()
    {
        android.support.media2.MediaPlayer2$DrmEventCallback r0;

        r0 := @this: android.support.media2.MediaPlayer2$DrmEventCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDrmInfo(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, android.support.media2.MediaPlayer2$DrmInfo)
    {
        android.support.media2.MediaPlayer2$DrmEventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaPlayer2$DrmInfo r3;

        r0 := @this: android.support.media2.MediaPlayer2$DrmEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 := @parameter2: android.support.media2.MediaPlayer2$DrmInfo;

        return;
    }

    public void onDrmPrepared(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, int)
    {
        android.support.media2.MediaPlayer2$DrmEventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0;

        r0 := @this: android.support.media2.MediaPlayer2$DrmEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        return;
    }

android.support.media2.MediaPlayer2$DrmInfo
    public void <init>()
    {
        android.support.media2.MediaPlayer2$DrmInfo r0;

        r0 := @this: android.support.media2.MediaPlayer2$DrmInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.media2.MediaPlayer2$DrmInfo: java.util.Map getPssh()>
<android.support.media2.MediaPlayer2$DrmInfo: java.util.List getSupportedSchemes()>
android.support.media2.MediaPlayer2$EventCallback
    public void <init>()
    {
        android.support.media2.MediaPlayer2$EventCallback r0;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onVideoSizeChanged(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, int, int)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0, i1;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void onTimedMetaDataAvailable(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, android.support.media2.TimedMetaData2)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.TimedMetaData2 r3;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 := @parameter2: android.support.media2.TimedMetaData2;

        return;
    }

    public void onError(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, int, int)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0, i1;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void onInfo(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, int, int)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0, i1;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void onCallCompleted(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, int, int)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0, i1;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void onMediaTimeDiscontinuity(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, android.support.media2.MediaTimestamp2)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaTimestamp2 r3;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 := @parameter2: android.support.media2.MediaTimestamp2;

        return;
    }

    public void onCommandLabelReached(android.support.media2.MediaPlayer2, java.lang.Object)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        java.lang.Object r2;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public void onSubtitleData(android.support.media2.MediaPlayer2, android.support.media2.DataSourceDesc2, android.support.media2.SubtitleData2)
    {
        android.support.media2.MediaPlayer2$EventCallback r0;
        android.support.media2.MediaPlayer2 r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.SubtitleData2 r3;

        r0 := @this: android.support.media2.MediaPlayer2$EventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayer2;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 := @parameter2: android.support.media2.SubtitleData2;

        return;
    }

android.support.media2.MediaPlayer2$MediaError
android.support.media2.MediaPlayer2$MediaInfo
android.support.media2.MediaPlayer2$MediaPlayer2State
android.support.media2.MediaPlayer2$MetricsConstants
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String MIME_TYPE_VIDEO>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String CODEC_VIDEO>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String WIDTH>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String HEIGHT>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String FRAMES>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String FRAMES_DROPPED>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String MIME_TYPE_AUDIO>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String CODEC_AUDIO>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String DURATION>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String PLAYING>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String ERRORS>
<android.support.media2.MediaPlayer2$MetricsConstants: java.lang.String ERROR_CODE>
    private void <init>()
    {
        android.support.media2.MediaPlayer2$MetricsConstants r0;

        r0 := @this: android.support.media2.MediaPlayer2$MetricsConstants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.media2.MediaPlayer2$NoDrmSchemeException
    public void <init>(java.lang.String)
    {
        android.support.media2.MediaPlayer2$NoDrmSchemeException r0;
        java.lang.String r1;

        r0 := @this: android.support.media2.MediaPlayer2$NoDrmSchemeException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.media.MediaDrmException: void <init>(java.lang.String)>(r1);

        return;
    }

android.support.media2.MediaPlayer2$OnDrmConfigHelper
<android.support.media2.MediaPlayer2$OnDrmConfigHelper: void onDrmConfig(android.support.media2.MediaPlayer2,android.support.media2.DataSourceDesc2)>
android.support.media2.MediaPlayer2$PrepareDrmStatusCode
android.support.media2.MediaPlayer2$SeekMode
android.support.media2.MediaPlayer2$TrackInfo
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_UNKNOWN>
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_VIDEO>
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_AUDIO>
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_TIMEDTEXT>
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_SUBTITLE>
<android.support.media2.MediaPlayer2$TrackInfo: int MEDIA_TRACK_TYPE_METADATA>
    public void <init>()
    {
        android.support.media2.MediaPlayer2$TrackInfo r0;

        r0 := @this: android.support.media2.MediaPlayer2$TrackInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.media2.MediaPlayer2$TrackInfo: int getTrackType()>
<android.support.media2.MediaPlayer2$TrackInfo: java.lang.String getLanguage()>
<android.support.media2.MediaPlayer2$TrackInfo: android.media.MediaFormat getFormat()>
<android.support.media2.MediaPlayer2$TrackInfo: java.lang.String toString()>
