android.support.test.espresso.ViewInteractionModule
<android.support.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher>
<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.ViewInteractionModule r0;
        org.hamcrest.Matcher r1, $r3, $r7;
        java.util.concurrent.atomic.AtomicReference $r2, $r4;
        java.lang.Boolean $r5;
        java.lang.Object $r6;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = <android.support.test.espresso.matcher.RootMatchers: org.hamcrest.Matcher DEFAULT>;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r3);

        r0.<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher> = $r2;

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r5);

        r0.<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity> = $r4;

        $r6 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (org.hamcrest.Matcher) $r6;

        r0.<android.support.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher> = $r7;

        return;
    }

    android.support.test.espresso.remote.RemoteInteraction provideRemoteInteraction()
    {
        android.support.test.espresso.ViewInteractionModule r0;
        android.support.test.espresso.remote.RemoteInteraction $r1;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        $r1 = staticinvoke <android.support.test.espresso.remote.RemoteInteractionRegistry: android.support.test.espresso.remote.RemoteInteraction getInstance()>();

        return $r1;
    }

    java.util.concurrent.atomic.AtomicReference provideNeedsActivity()
    {
        android.support.test.espresso.ViewInteractionModule r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        $r1 = r0.<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity>;

        return $r1;
    }

    java.util.concurrent.atomic.AtomicReference provideRootMatcher()
    {
        android.support.test.espresso.ViewInteractionModule r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        $r1 = r0.<android.support.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher>;

        return $r1;
    }

    org.hamcrest.Matcher provideViewMatcher()
    {
        android.support.test.espresso.ViewInteractionModule r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        $r1 = r0.<android.support.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    android.support.test.espresso.ViewFinder provideViewFinder(android.support.test.espresso.base.ViewFinderImpl)
    {
        android.support.test.espresso.ViewInteractionModule r0;
        android.support.test.espresso.base.ViewFinderImpl r1;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        r1 := @parameter0: android.support.test.espresso.base.ViewFinderImpl;

        return r1;
    }

    public android.view.View provideRootView(android.support.test.espresso.base.RootViewPicker)
    {
        android.support.test.espresso.ViewInteractionModule r0;
        android.support.test.espresso.base.RootViewPicker r1;
        android.view.View $r2;

        r0 := @this: android.support.test.espresso.ViewInteractionModule;

        r1 := @parameter0: android.support.test.espresso.base.RootViewPicker;

        $r2 = virtualinvoke r1.<android.support.test.espresso.base.RootViewPicker: android.view.View get()>();

        return $r2;
    }

