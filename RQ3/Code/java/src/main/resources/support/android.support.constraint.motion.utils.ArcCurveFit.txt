android.support.constraint.motion.utils.ArcCurveFit
<android.support.constraint.motion.utils.ArcCurveFit: int ARC_START_VERTICAL>
<android.support.constraint.motion.utils.ArcCurveFit: int ARC_START_HORIZONTAL>
<android.support.constraint.motion.utils.ArcCurveFit: int ARC_START_FLIP>
<android.support.constraint.motion.utils.ArcCurveFit: int ARC_START_LINEAR>
<android.support.constraint.motion.utils.ArcCurveFit: int START_VERTICAL>
<android.support.constraint.motion.utils.ArcCurveFit: int START_HORIZONTAL>
<android.support.constraint.motion.utils.ArcCurveFit: int START_LINEAR>
<android.support.constraint.motion.utils.ArcCurveFit: double[] mTime>
<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>
    public void getPos(double, double[])
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        double[] r1;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r2, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r24, $r26;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r23, $r25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        byte $b0, $b3, $b4;
        int $i1, $i2, $i5, $i6, i7, $i8;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        d7 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r3 = $r2[0];

        $d0 = $r3.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        $b0 = d7 cmpg $d0;

        if $b0 >= 0 goto label1;

        $r24 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r25 = $r24[0];

        d7 = $r25.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

     label1:
        $r5 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r4 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        $r6 = $r5[$i2];

        $d1 = $r6.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b3 = d7 cmpl $d1;

        if $b3 <= 0 goto label2;

        $r22 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r21 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i5 = lengthof $r21;

        $i6 = $i5 - 1;

        $r23 = $r22[$i6];

        d7 = $r23.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

     label2:
        i7 = 0;

     label3:
        $r26 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i8 = lengthof $r26;

        if i7 >= $i8 goto label6;

        $r7 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r8 = $r7[i7];

        $d2 = $r8.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b4 = d7 cmpg $d2;

        if $b4 > 0 goto label5;

        $r9 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r10 = $r9[i7];

        $z0 = $r10.<android.support.constraint.motion.utils.ArcCurveFit$Arc: boolean linear>;

        if $z0 == 0 goto label4;

        $r17 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r18 = $r17[i7];

        $d5 = virtualinvoke $r18.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearX(double)>(d7);

        r1[0] = $d5;

        $r19 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r20 = $r19[i7];

        $d6 = virtualinvoke $r20.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearY(double)>(d7);

        r1[1] = $d6;

        return;

     label4:
        $r11 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r12 = $r11[i7];

        virtualinvoke $r12.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void setPoint(double)>(d7);

        $r13 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r14 = $r13[i7];

        $d3 = virtualinvoke $r14.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getX()>();

        r1[0] = $d3;

        $r15 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r16 = $r15[i7];

        $d4 = virtualinvoke $r16.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getY()>();

        r1[1] = $d4;

        return;

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        return;
    }

    public void getPos(double, float[])
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        float[] r1;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r2, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r24, $r26;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r23, $r25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        byte $b0, $b3, $b4;
        int $i1, $i2, $i5, $i6, i7, $i8;
        boolean $z0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        d7 := @parameter0: double;

        r1 := @parameter1: float[];

        $r2 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r3 = $r2[0];

        $d0 = $r3.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        $b0 = d7 cmpg $d0;

        if $b0 >= 0 goto label1;

        $r24 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r25 = $r24[0];

        d7 = $r25.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        goto label2;

     label1:
        $r5 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r4 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        $r6 = $r5[$i2];

        $d1 = $r6.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b3 = d7 cmpl $d1;

        if $b3 <= 0 goto label2;

        $r22 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r21 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i5 = lengthof $r21;

        $i6 = $i5 - 1;

        $r23 = $r22[$i6];

        d7 = $r23.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

     label2:
        i7 = 0;

     label3:
        $r26 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i8 = lengthof $r26;

        if i7 >= $i8 goto label6;

        $r7 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r8 = $r7[i7];

        $d2 = $r8.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b4 = d7 cmpg $d2;

        if $b4 > 0 goto label5;

        $r9 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r10 = $r9[i7];

        $z0 = $r10.<android.support.constraint.motion.utils.ArcCurveFit$Arc: boolean linear>;

        if $z0 == 0 goto label4;

        $r17 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r18 = $r17[i7];

        $d5 = virtualinvoke $r18.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearX(double)>(d7);

        $f2 = (float) $d5;

        r1[0] = $f2;

        $r19 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r20 = $r19[i7];

        $d6 = virtualinvoke $r20.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearY(double)>(d7);

        $f3 = (float) $d6;

        r1[1] = $f3;

        return;

     label4:
        $r11 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r12 = $r11[i7];

        virtualinvoke $r12.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void setPoint(double)>(d7);

        $r13 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r14 = $r13[i7];

        $d3 = virtualinvoke $r14.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getX()>();

        $f0 = (float) $d3;

        r1[0] = $f0;

        $r15 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r16 = $r15[i7];

        $d4 = virtualinvoke $r16.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getY()>();

        $f1 = (float) $d4;

        r1[1] = $f1;

        return;

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        return;
    }

    public void getSlope(double, double[])
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        double[] r1;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r2, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r24, $r26;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r23, $r25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        byte $b0, $b3, $b4;
        int $i1, $i2, $i5, $i6, i7, $i8;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        d7 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r3 = $r2[0];

        $d0 = $r3.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        $b0 = d7 cmpg $d0;

        if $b0 >= 0 goto label1;

        $r24 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r25 = $r24[0];

        d7 = $r25.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        goto label2;

     label1:
        $r5 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r4 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        $r6 = $r5[$i2];

        $d1 = $r6.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b3 = d7 cmpl $d1;

        if $b3 <= 0 goto label2;

        $r22 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r21 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i5 = lengthof $r21;

        $i6 = $i5 - 1;

        $r23 = $r22[$i6];

        d7 = $r23.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

     label2:
        i7 = 0;

     label3:
        $r26 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i8 = lengthof $r26;

        if i7 >= $i8 goto label6;

        $r7 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r8 = $r7[i7];

        $d2 = $r8.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b4 = d7 cmpg $d2;

        if $b4 > 0 goto label5;

        $r9 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r10 = $r9[i7];

        $z0 = $r10.<android.support.constraint.motion.utils.ArcCurveFit$Arc: boolean linear>;

        if $z0 == 0 goto label4;

        $r17 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r18 = $r17[i7];

        $d5 = virtualinvoke $r18.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearDX(double)>(d7);

        r1[0] = $d5;

        $r19 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r20 = $r19[i7];

        $d6 = virtualinvoke $r20.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearDY(double)>(d7);

        r1[1] = $d6;

        return;

     label4:
        $r11 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r12 = $r11[i7];

        virtualinvoke $r12.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void setPoint(double)>(d7);

        $r13 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r14 = $r13[i7];

        $d3 = virtualinvoke $r14.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getDX()>();

        r1[0] = $d3;

        $r15 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r16 = $r15[i7];

        $d4 = virtualinvoke $r16.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getDY()>();

        r1[1] = $d4;

        return;

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        return;
    }

    public double getPos(double, int)
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        int i0, $i2, $i3, $i6, $i7, i8, $i9;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r23, $r25;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r2, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r22, $r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        byte $b1, $b4, $b5;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        d7 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r2 = $r1[0];

        $d0 = $r2.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        $b1 = d7 cmpg $d0;

        if $b1 >= 0 goto label1;

        $r23 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r24 = $r23[0];

        d7 = $r24.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        goto label2;

     label1:
        $r4 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r3 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i2 = lengthof $r3;

        $i3 = $i2 - 1;

        $r5 = $r4[$i3];

        $d1 = $r5.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b4 = d7 cmpl $d1;

        if $b4 <= 0 goto label2;

        $r21 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r20 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i6 = lengthof $r20;

        $i7 = $i6 - 1;

        $r22 = $r21[$i7];

        d7 = $r22.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

     label2:
        i8 = 0;

     label3:
        $r25 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i9 = lengthof $r25;

        if i8 >= $i9 goto label8;

        $r6 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r7 = $r6[i8];

        $d2 = $r7.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b5 = d7 cmpg $d2;

        if $b5 > 0 goto label7;

        $r8 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r9 = $r8[i8];

        $z0 = $r9.<android.support.constraint.motion.utils.ArcCurveFit$Arc: boolean linear>;

        if $z0 == 0 goto label5;

        if i0 != 0 goto label4;

        $r18 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r19 = $r18[i8];

        $d6 = virtualinvoke $r19.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearX(double)>(d7);

        return $d6;

     label4:
        $r16 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r17 = $r16[i8];

        $d5 = virtualinvoke $r17.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearY(double)>(d7);

        return $d5;

     label5:
        $r10 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r11 = $r10[i8];

        virtualinvoke $r11.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void setPoint(double)>(d7);

        if i0 != 0 goto label6;

        $r14 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r15 = $r14[i8];

        $d4 = virtualinvoke $r15.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getX()>();

        return $d4;

     label6:
        $r12 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r13 = $r12[i8];

        $d3 = virtualinvoke $r13.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getY()>();

        return $d3;

     label7:
        i8 = i8 + 1;

        goto label3;

     label8:
        return #NaN;
    }

    public double getSlope(double, int)
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        int i0, $i2, $i3, $i6, $i7, i8, $i9;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r23, $r25;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r2, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r22, $r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        byte $b1, $b4, $b5;
        boolean $z0;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        d7 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r2 = $r1[0];

        $d0 = $r2.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

        $b1 = d7 cmpg $d0;

        if $b1 >= 0 goto label1;

        $r23 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r24 = $r23[0];

        d7 = $r24.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime1>;

     label1:
        $r4 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r3 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i2 = lengthof $r3;

        $i3 = $i2 - 1;

        $r5 = $r4[$i3];

        $d1 = $r5.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b4 = d7 cmpl $d1;

        if $b4 <= 0 goto label2;

        $r21 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r20 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i6 = lengthof $r20;

        $i7 = $i6 - 1;

        $r22 = $r21[$i7];

        d7 = $r22.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

     label2:
        i8 = 0;

     label3:
        $r25 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i9 = lengthof $r25;

        if i8 >= $i9 goto label8;

        $r6 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r7 = $r6[i8];

        $d2 = $r7.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double mTime2>;

        $b5 = d7 cmpg $d2;

        if $b5 > 0 goto label7;

        $r8 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r9 = $r8[i8];

        $z0 = $r9.<android.support.constraint.motion.utils.ArcCurveFit$Arc: boolean linear>;

        if $z0 == 0 goto label5;

        if i0 != 0 goto label4;

        $r18 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r19 = $r18[i8];

        $d6 = virtualinvoke $r19.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearDX(double)>(d7);

        return $d6;

     label4:
        $r16 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r17 = $r16[i8];

        $d5 = virtualinvoke $r17.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getLinearDY(double)>(d7);

        return $d5;

     label5:
        $r10 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r11 = $r10[i8];

        virtualinvoke $r11.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void setPoint(double)>(d7);

        if i0 != 0 goto label6;

        $r14 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r15 = $r14[i8];

        $d4 = virtualinvoke $r15.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getDX()>();

        return $d4;

     label6:
        $r12 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r13 = $r12[i8];

        $d3 = virtualinvoke $r13.<android.support.constraint.motion.utils.ArcCurveFit$Arc: double getDY()>();

        return $d3;

     label7:
        i8 = i8 + 1;

        goto label3;

     label8:
        return #NaN;
    }

    public double[] getTimePoints()
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        double[] $r1;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        $r1 = r0.<android.support.constraint.motion.utils.ArcCurveFit: double[] mTime>;

        return $r1;
    }

    public void <init>(int[], double[], double[][])
    {
        android.support.constraint.motion.utils.ArcCurveFit r0;
        int[] r1;
        double[] r2, $r8, $r9, $r10, $r11;
        double[][] r3;
        int $i0, $i1, $i2, $i3, i6, $i8, $i9, $i10;
        android.support.constraint.motion.utils.ArcCurveFit$Arc[] $r4, $r5, $r6;
        byte b4, b5, $b7;
        android.support.constraint.motion.utils.ArcCurveFit$Arc $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: android.support.constraint.motion.utils.ArcCurveFit;

        r1 := @parameter0: int[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        specialinvoke r0.<android.support.constraint.motion.utils.CurveFit: void <init>()>();

        r0.<android.support.constraint.motion.utils.ArcCurveFit: double[] mTime> = r2;

        $i0 = lengthof r2;

        $i1 = $i0 - 1;

        $r4 = newarray (android.support.constraint.motion.utils.ArcCurveFit$Arc)[$i1];

        r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs> = $r4;

        b4 = 1;

        b5 = 1;

        i6 = 0;

     label1:
        $r5 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $i2 = lengthof $r5;

        if i6 >= $i2 goto label9;

        $i3 = r1[i6];

        tableswitch($i3)
        {
            case 0: goto label7;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label8;
        };

     label2:
        b4 = 1;

        b5 = 1;

        goto label8;

     label3:
        b4 = 2;

        b5 = 2;

        goto label8;

     label4:
        if b5 != 1 goto label5;

        $b7 = 2;

        goto label6;

     label5:
        $b7 = 1;

     label6:
        b4 = $b7;

        b5 = b4;

        goto label8;

     label7:
        b4 = 3;

     label8:
        $r6 = r0.<android.support.constraint.motion.utils.ArcCurveFit: android.support.constraint.motion.utils.ArcCurveFit$Arc[] mArcs>;

        $r7 = new android.support.constraint.motion.utils.ArcCurveFit$Arc;

        $d0 = r2[i6];

        $i8 = i6 + 1;

        $d1 = r2[$i8];

        $r8 = r3[i6];

        $d2 = $r8[0];

        $r9 = r3[i6];

        $d3 = $r9[1];

        $i9 = i6 + 1;

        $r10 = r3[$i9];

        $d4 = $r10[0];

        $i10 = i6 + 1;

        $r11 = r3[$i10];

        $d5 = $r11[1];

        specialinvoke $r7.<android.support.constraint.motion.utils.ArcCurveFit$Arc: void <init>(int,double,double,double,double,double,double)>(b4, $d0, $d1, $d2, $d3, $d4, $d5);

        $r6[i6] = $r7;

        i6 = i6 + 1;

        goto label1;

     label9:
        return;
    }

