android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.lang.String TAG>
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: boolean mDeclawThreadCheck>
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses>
    public void <init>()
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        specialinvoke r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        boolean z0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses> = $r2;

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: boolean mDeclawThreadCheck> = z0;

        return;
    }

    public void addLifecycleCallback(android.support.test.runner.lifecycle.ActivityLifecycleCallback)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.ActivityLifecycleCallback r1, r4;
        java.util.List r2, $r7, $r8, $r10;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r14;
        boolean $z0, z2;
        java.lang.ref.WeakReference $r9, $r12;
        java.lang.Object $r11, $r13;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.ActivityLifecycleCallback;

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        z2 = 1;

        $r8 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.ref.WeakReference) $r11;

        $r13 = virtualinvoke $r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.test.runner.lifecycle.ActivityLifecycleCallback) $r13;

        if null != r4 goto label03;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label04;

     label03:
        if r4 != r1 goto label04;

        z2 = 0;

     label04:
        goto label02;

     label05:
        if z2 == 0 goto label06;

        $r10 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removeLifecycleCallback(android.support.test.runner.lifecycle.ActivityLifecycleCallback)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.ActivityLifecycleCallback r1, r4;
        java.util.List r2, $r7, $r8;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r12;
        boolean $z0;
        java.lang.Object $r9, $r11;
        java.lang.ref.WeakReference $r10;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.ActivityLifecycleCallback;

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.ref.WeakReference) $r9;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.test.runner.lifecycle.ActivityLifecycleCallback) $r11;

        if null != r4 goto label3;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label4;

     label3:
        if r4 != r1 goto label4;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.support.test.runner.lifecycle.Stage getLifecycleStageOf(android.app.Activity)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        android.app.Activity r1, r4;
        java.util.Iterator r2;
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r3;
        java.util.List $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        java.lang.Object $r12, $r14;
        java.lang.ref.WeakReference $r13;
        android.support.test.runner.lifecycle.Stage $r15;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: void checkMainThread()>();

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus) $r12;

        $r13 = staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference access$000(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.app.Activity) $r14;

        if null != r4 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        if r1 != r4 goto label3;

        $r15 = staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage access$100(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)>(r3);

        return $r15;

     label3:
        goto label1;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown activity: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.util.Collection getActivitiesInStage(android.support.test.runner.lifecycle.Stage)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.Stage r1, $r12;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r4;
        android.app.Activity r5;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9, $r11;
        java.lang.ref.WeakReference $r10;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.Stage;

        specialinvoke r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: void checkMainThread()>();

        staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus) $r9;

        $r10 = staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference access$000(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.app.Activity) $r11;

        if null != r5 goto label2;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        $r12 = staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage access$100(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)>(r4);

        if r1 != $r12 goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

     label3:
        goto label1;

     label4:
        return r2;
    }

    public void signalLifecycleChange(android.support.test.runner.lifecycle.Stage, android.app.Activity)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        android.support.test.runner.lifecycle.Stage r1;
        android.app.Activity r2, r38;
        java.util.Iterator r3, r40;
        android.support.test.runner.lifecycle.ActivityLifecycleCallback r4;
        java.lang.Throwable r5, r6, $r33, $r36;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r19, $r20, $r21, $r23, $r24, $r25;
        java.lang.String $r12, $r22, $r26, $r35;
        java.util.List $r13, $r14, $r15, $r28, r39;
        boolean $z0, z2, $z3;
        java.lang.Object $r16, $r18, $r29, $r31;
        java.lang.ref.WeakReference $r17, $r30;
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus $r27, r37;
        java.lang.Object[] $r34;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        r1 := @parameter0: android.support.test.runner.lifecycle.Stage;

        r2 := @parameter1: android.app.Activity;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lifecycle status change: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LifecycleMonitor", $r12);

        z2 = 1;

        $r13 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses>;

        r3 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r29 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r37 = (android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus) $r29;

        $r30 = staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference access$000(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)>(r37);

        $r31 = virtualinvoke $r30.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r38 = (android.app.Activity) $r31;

        if null != r38 goto label02;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label03;

     label02:
        if r2 != r38 goto label03;

        z2 = 0;

        staticinvoke <android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage access$102(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus,android.support.test.runner.lifecycle.Stage)>(r37, r1);

     label03:
        goto label01;

     label04:
        if z2 == 0 goto label05;

        $r28 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mActivityStatuses>;

        $r27 = new android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus;

        specialinvoke $r27.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: void <init>(android.app.Activity,android.support.test.runner.lifecycle.Stage)>(r2, r1);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r27);

     label05:
        $r14 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r39 = $r14;

        entermonitor $r14;

     label06:
        $r15 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: java.util.List mCallbacks>;

        r40 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r16 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.lang.ref.WeakReference) $r16;

        $r18 = virtualinvoke $r17.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.test.runner.lifecycle.ActivityLifecycleCallback) $r18;

        if null != r4 goto label08;

        interfaceinvoke r40.<java.util.Iterator: void remove()>();

        goto label11;

     label08:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running callback: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LifecycleMonitor", $r22);

        interfaceinvoke r4.<android.support.test.runner.lifecycle.ActivityLifecycleCallback: void onActivityLifecycleChanged(android.app.Activity,android.support.test.runner.lifecycle.Stage)>(r2, r1);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callback completes: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LifecycleMonitor", $r26);

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

        r5 = $r33;

        $r34 = newarray (java.lang.Object)[3];

        $r34[0] = r4;

        $r34[1] = r2;

        $r34[2] = r1;

        $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Callback threw exception! (callback: %s activity: %s stage: %s)", $r34);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LifecycleMonitor", $r35, r5);

     label11:
        goto label07;

     label12:
        exitmonitor r39;

     label13:
        goto label16;

     label14:
        $r36 := @caughtexception;

        r6 = $r36;

        exitmonitor r39;

     label15:
        throw r6;

     label16:
        return;

        catch java.lang.RuntimeException from label08 to label09 with label10;
        catch java.lang.Throwable from label06 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void checkMainThread()
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl r0;
        boolean $z0, $z1;
        java.lang.Thread $r1, $r3;
        android.os.Looper $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl;

        $z0 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl: boolean mDeclawThreadCheck>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        $z1 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Querying activity state off main thread is not allowed.");

        throw $r4;

     label2:
        return;
    }

android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference mActivityRef>
<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage mLifecycleStage>
    void <init>(android.app.Activity, android.support.test.runner.lifecycle.Stage)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r0;
        android.app.Activity r1;
        android.support.test.runner.lifecycle.Stage r2, $r6;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.support.test.runner.lifecycle.Stage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        $r4 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference mActivityRef> = $r3;

        $r5 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.support.test.runner.lifecycle.Stage) $r5;

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage mLifecycleStage> = $r6;

        return;
    }

    static java.lang.ref.WeakReference access$000(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r0;
        java.lang.ref.WeakReference $r1;

        r0 := @parameter0: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus;

        $r1 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: java.lang.ref.WeakReference mActivityRef>;

        return $r1;
    }

    static android.support.test.runner.lifecycle.Stage access$100(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r0;
        android.support.test.runner.lifecycle.Stage $r1;

        r0 := @parameter0: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus;

        $r1 = r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage mLifecycleStage>;

        return $r1;
    }

    static android.support.test.runner.lifecycle.Stage access$102(android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus, android.support.test.runner.lifecycle.Stage)
    {
        android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus r0;
        android.support.test.runner.lifecycle.Stage r1;

        r0 := @parameter0: android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus;

        r1 := @parameter1: android.support.test.runner.lifecycle.Stage;

        r0.<android.support.test.internal.runner.lifecycle.ActivityLifecycleMonitorImpl$ActivityStatus: android.support.test.runner.lifecycle.Stage mLifecycleStage> = r1;

        return r1;
    }

