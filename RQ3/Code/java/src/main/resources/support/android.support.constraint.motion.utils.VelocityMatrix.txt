android.support.constraint.motion.utils.VelocityMatrix
<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleX>
<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleY>
<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateX>
<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateY>
<android.support.constraint.motion.utils.VelocityMatrix: float mDRotate>
<android.support.constraint.motion.utils.VelocityMatrix: float mRotate>
<android.support.constraint.motion.utils.VelocityMatrix: java.lang.String TAG>
    public void <init>()
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void clear()
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDRotate> = 0.0F;

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateY> = 0.0F;

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateX> = 0.0F;

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleY> = 0.0F;

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleX> = 0.0F;

        return;
    }

    public void setRotationVelocity(android.support.constraint.motion.SplineSet, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.SplineSet r1;
        float f0, $f1, $f2;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.SplineSet;

        f0 := @parameter1: float;

        if r1 == null goto label1;

        $f1 = virtualinvoke r1.<android.support.constraint.motion.SplineSet: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDRotate> = $f1;

        $f2 = virtualinvoke r1.<android.support.constraint.motion.SplineSet: float get(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mRotate> = $f2;

     label1:
        return;
    }

    public void setTranslationVelocity(android.support.constraint.motion.SplineSet, android.support.constraint.motion.SplineSet, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.SplineSet r1, r2;
        float f0, $f1, $f2;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.SplineSet;

        r2 := @parameter1: android.support.constraint.motion.SplineSet;

        f0 := @parameter2: float;

        if r1 == null goto label1;

        $f2 = virtualinvoke r1.<android.support.constraint.motion.SplineSet: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateX> = $f2;

     label1:
        if r2 == null goto label2;

        $f1 = virtualinvoke r2.<android.support.constraint.motion.SplineSet: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateY> = $f1;

     label2:
        return;
    }

    public void setScaleVelocity(android.support.constraint.motion.SplineSet, android.support.constraint.motion.SplineSet, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.SplineSet r1, r2;
        float f0, $f1, $f2;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.SplineSet;

        r2 := @parameter1: android.support.constraint.motion.SplineSet;

        f0 := @parameter2: float;

        if r1 == null goto label1;

        $f2 = virtualinvoke r1.<android.support.constraint.motion.SplineSet: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleX> = $f2;

     label1:
        if r2 == null goto label2;

        $f1 = virtualinvoke r2.<android.support.constraint.motion.SplineSet: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleY> = $f1;

     label2:
        return;
    }

    public void setRotationVelocity(android.support.constraint.motion.KeyCycleOscillator, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.KeyCycleOscillator r1;
        float f0, $f1;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter1: float;

        if r1 == null goto label1;

        $f1 = virtualinvoke r1.<android.support.constraint.motion.KeyCycleOscillator: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDRotate> = $f1;

     label1:
        return;
    }

    public void setTranslationVelocity(android.support.constraint.motion.KeyCycleOscillator, android.support.constraint.motion.KeyCycleOscillator, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.KeyCycleOscillator r1, r2;
        float f0, $f1, $f2;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.KeyCycleOscillator;

        r2 := @parameter1: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter2: float;

        if r1 == null goto label1;

        $f2 = virtualinvoke r1.<android.support.constraint.motion.KeyCycleOscillator: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateX> = $f2;

     label1:
        if r2 == null goto label2;

        $f1 = virtualinvoke r2.<android.support.constraint.motion.KeyCycleOscillator: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateY> = $f1;

     label2:
        return;
    }

    public void setScaleVelocity(android.support.constraint.motion.KeyCycleOscillator, android.support.constraint.motion.KeyCycleOscillator, float)
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        android.support.constraint.motion.KeyCycleOscillator r1, r2;
        float f0, $f1, $f2;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        r1 := @parameter0: android.support.constraint.motion.KeyCycleOscillator;

        r2 := @parameter1: android.support.constraint.motion.KeyCycleOscillator;

        f0 := @parameter2: float;

        if r1 != null goto label1;

        if r2 != null goto label1;

        return;

     label1:
        if r1 != null goto label2;

        $f2 = virtualinvoke r1.<android.support.constraint.motion.KeyCycleOscillator: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleX> = $f2;

     label2:
        if r2 != null goto label3;

        $f1 = virtualinvoke r2.<android.support.constraint.motion.KeyCycleOscillator: float getSlope(float)>(f0);

        r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleY> = $f1;

     label3:
        return;
    }

    public void applyTransform(float, float, int, int, float[])
    {
        android.support.constraint.motion.utils.VelocityMatrix r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, f29, f30, f31, f32, f33, f34, f35;
        int i0, i1, $i2;
        float[] r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;

        r0 := @this: android.support.constraint.motion.utils.VelocityMatrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: float[];

        f28 = r1[0];

        f29 = r1[1];

        $f6 = f0 - 0.5F;

        f2 = 2.0F * $f6;

        $f7 = f1 - 0.5F;

        f3 = 2.0F * $f7;

        $f8 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateX>;

        f30 = f28 + $f8;

        $f9 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDTranslateY>;

        f31 = f29 + $f9;

        $f10 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleX>;

        $f11 = f2 * $f10;

        f32 = f30 + $f11;

        $f12 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDScaleY>;

        $f13 = f3 * $f12;

        f33 = f31 + $f13;

        $f14 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mRotate>;

        $d0 = (double) $f14;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        f4 = (float) $d1;

        $f15 = r0.<android.support.constraint.motion.utils.VelocityMatrix: float mDRotate>;

        $d2 = (double) $f15;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        f5 = (float) $d3;

        $i2 = neg i0;

        $f16 = (float) $i2;

        $f17 = $f16 * f2;

        $d5 = (double) $f17;

        $d4 = (double) f4;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        $d8 = $d5 * $d6;

        $f18 = (float) i1;

        $f19 = $f18 * f3;

        $d9 = (double) $f19;

        $d7 = (double) f4;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d7);

        $d11 = $d9 * $d10;

        $d12 = $d8 - $d11;

        $f20 = (float) $d12;

        $f21 = f5 * $f20;

        f34 = f32 + $f21;

        $f22 = (float) i0;

        $f23 = $f22 * f2;

        $d14 = (double) $f23;

        $d13 = (double) f4;

        $d15 = staticinvoke <java.lang.Math: double cos(double)>($d13);

        $d17 = $d14 * $d15;

        $f24 = (float) i1;

        $f25 = $f24 * f3;

        $d18 = (double) $f25;

        $d16 = (double) f4;

        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d16);

        $d20 = $d18 * $d19;

        $d21 = $d17 - $d20;

        $f26 = (float) $d21;

        $f27 = f5 * $f26;

        f35 = f33 + $f27;

        r1[0] = f34;

        r1[1] = f35;

        return;
    }

    static void <clinit>()
    {
        <android.support.constraint.motion.utils.VelocityMatrix: java.lang.String TAG> = "VelocityMatrix";

        return;
    }

