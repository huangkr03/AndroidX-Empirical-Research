android.support.v4.media.session.MediaControllerCompat
<android.support.v4.media.session.MediaControllerCompat: java.lang.String TAG>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_GET_EXTRA_BINDER>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM_AT>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION>
<android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_INDEX>
<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>
<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>
<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks>
    public static void setMediaController(android.app.Activity, android.support.v4.media.session.MediaControllerCompat)
    {
        android.app.Activity r0;
        android.support.v4.media.session.MediaControllerCompat r1;
        java.lang.Object r2, r6;
        boolean $z0;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$Token $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData $r4;
        android.support.v4.app.SupportActivity $r5;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.support.v4.media.session.MediaControllerCompat;

        $z0 = r0 instanceof android.support.v4.app.SupportActivity;

        if $z0 == 0 goto label1;

        $r5 = (android.support.v4.app.SupportActivity) r0;

        $r4 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData: void <init>(android.support.v4.media.session.MediaControllerCompat)>(r1);

        virtualinvoke $r5.<android.support.v4.app.SupportActivity: void putExtraData(android.support.v4.app.SupportActivity$ExtraData)>($r4);

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        r6 = null;

        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        r2 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()>();

        r6 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object fromToken(android.content.Context,java.lang.Object)>(r0, r2);

     label2:
        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void setMediaController(android.app.Activity,java.lang.Object)>(r0, r6);

     label3:
        return;
    }

    public static android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity)
    {
        android.app.Activity r0;
        java.lang.Object r1, r10;
        java.lang.Throwable r2, $r7;
        boolean $z0;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat $r3, $r9;
        android.support.v4.media.session.MediaSessionCompat$Token $r4;
        android.support.v4.app.SupportActivity $r5;
        android.support.v4.app.SupportActivity$ExtraData $r6;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData r8;

        r0 := @parameter0: android.app.Activity;

        $z0 = r0 instanceof android.support.v4.app.SupportActivity;

        if $z0 == 0 goto label3;

        $r5 = (android.support.v4.app.SupportActivity) r0;

        $r6 = virtualinvoke $r5.<android.support.v4.app.SupportActivity: android.support.v4.app.SupportActivity$ExtraData getExtraData(java.lang.Class)>(class "Landroid/support/v4/media/session/MediaControllerCompat$MediaControllerExtraData;");

        r8 = (android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData) $r6;

        if r8 == null goto label1;

        $r9 = virtualinvoke r8.<android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData: android.support.v4.media.session.MediaControllerCompat getMediaController()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        return $r9;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label8;

        r10 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getMediaController(android.app.Activity)>(r0);

        if r10 != null goto label4;

        return null;

     label4:
        r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getSessionToken(java.lang.Object)>(r10);

     label5:
        $r3 = new android.support.v4.media.session.MediaControllerCompat;

        $r4 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)>(r1);

        specialinvoke $r3.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r0, $r4);

     label6:
        return $r3;

     label7:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getMediaController.", r2);

     label8:
        return null;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    static void validateCustomAction(java.lang.String, android.os.Bundle)
    {
        java.lang.String r0, r2, $r8;
        android.os.Bundle r1;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        if r0 != null goto label1;

        return;

     label1:
        r2 = r0;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1348483723: goto label2;
            case 503011406: goto label3;
            default: goto label4;
        };

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.support.v4.media.session.action.FOLLOW");

        if $z2 == 0 goto label4;

        b1 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.support.v4.media.session.action.UNFOLLOW");

        if $z0 == 0 goto label4;

        b1 = 1;

     label4:
        lookupswitch(b1)
        {
            case 0: goto label5;
            case 1: goto label5;
            default: goto label7;
        };

     label5:
        if r1 == null goto label6;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE");

        if $z1 != 0 goto label7;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An extra field android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE is required for this action ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label7:
        return;
    }

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.content.Context r1;
        android.support.v4.media.session.MediaSessionCompat r2;
        java.lang.Throwable r3, $r15;
        java.util.HashSet $r4;
        android.support.v4.media.session.MediaSessionCompat$Token $r5, $r7, $r9, $r11, $r13;
        int $i0, $i1, $i2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r6;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r8;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 $r10;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 $r12;
        java.lang.IllegalArgumentException $r14;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl r16;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks> = $r4;

        if r2 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("session must not be null");

        throw $r14;

     label1:
        $r5 = virtualinvoke r2.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r5;

        r16 = null;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label3;

        $r12 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24;

        $r13 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r12.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, $r13);

        r16 = $r12;

        goto label6;

     label3:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label4;

        $r10 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23;

        $r11 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r10.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, $r11);

        r16 = $r10;

        goto label6;

     label4:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label5;

        $r8 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r9 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r8.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, $r9);

        r16 = $r8;

        goto label6;

     label5:
        $r6 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        $r7 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r6.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>($r7);

        r16 = $r6;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        r3 = $r15;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Failed to create MediaControllerImpl.", r3);

     label8:
        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = r16;

        return;

        catch android.os.RemoteException from label2 to label6 with label7;
    }

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token) throws android.os.RemoteException
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.content.Context r1;
        android.support.v4.media.session.MediaSessionCompat$Token r2;
        java.util.HashSet $r3;
        int $i0, $i1, $i2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r4;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r5;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 $r6;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks> = $r3;

        if r2 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionToken must not be null");

        throw $r8;

     label1:
        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label2;

        $r7 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24;

        specialinvoke $r7.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r7;

        goto label5;

     label2:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label3;

        $r6 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23;

        specialinvoke $r6.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r6;

        goto label5;

     label3:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label4;

        $r5 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        specialinvoke $r5.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r5;

        goto label5;

     label4:
        $r4 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>(r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r4;

     label5:
        return;
    }

    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        return $r2;
    }

    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.view.KeyEvent r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.view.KeyEvent;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KeyEvent may not be null");

        throw $r3;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

        return $r2;
    }

    public android.support.v4.media.MediaMetadataCompat getMetadata()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.MediaMetadataCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.MediaMetadataCompat getMetadata()>();

        return $r2;
    }

    public java.util.List getQueue()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.util.List $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.util.List getQueue()>();

        return $r2;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)>(r1);

        return;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat, int)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        int i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>(r1, i0);

        return;
    }

    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>(r1);

        return;
    }

    public void removeQueueItemAt(int)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        int i0, $i1;
        java.util.List r1;
        android.support.v4.media.session.MediaSessionCompat$QueueItem r2;
        java.lang.Object $r3;
        android.support.v4.media.MediaDescriptionCompat $r4;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: java.util.List getQueue()>();

        if r1 == null goto label1;

        if i0 < 0 goto label1;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r3;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r4);

     label1:
        return;
    }

    public java.lang.CharSequence getQueueTitle()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.CharSequence getQueueTitle()>();

        return $r2;
    }

    public android.os.Bundle getExtras()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.os.Bundle getExtras()>();

        return $r2;
    }

    public int getRatingType()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getRatingType()>();

        return $i0;
    }

    public boolean isCaptioningEnabled()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean isCaptioningEnabled()>();

        return $z0;
    }

    public int getRepeatMode()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getRepeatMode()>();

        return $i0;
    }

    public int getShuffleMode()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getShuffleMode()>();

        return $i0;
    }

    public long getFlags()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: long getFlags()>();

        return $l0;
    }

    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()>();

        return $r2;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.app.PendingIntent $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return $r1;
    }

    public android.os.Bundle getSessionToken2Bundle()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle getSessionToken2Bundle()>();

        return $r2;
    }

    public void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        int i0, i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void setVolumeTo(int,int)>(i0, i1);

        return;
    }

    public void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        int i0, i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void adjustVolume(int,int)>(i0, i1);

        return;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$Callback r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$Callback r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        java.util.HashSet $r3;
        android.os.Handler $r4, r6;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        r6 := @parameter1: android.os.Handler;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r5;

     label1:
        if r6 != null goto label2;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r6 = $r4;

     label2:
        virtualinvoke r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>(r6);

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>(r1, r6);

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$Callback r1;
        java.lang.Throwable r2, $r6;
        java.util.HashSet $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r5;

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>(r1);

     label2:
        virtualinvoke r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>(null);

        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        virtualinvoke r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>(null);

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        boolean $z0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command must neither be null nor empty");

        throw $r5;

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>(r1, r2, r3);

        return;
    }

    public boolean isSessionReady()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean isSessionReady()>();

        return $z0;
    }

    public java.lang.String getPackageName()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.String $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.String getPackageName()>();

        return $r2;
    }

    public java.lang.Object getMediaController()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.Object $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.Object getMediaController()>();

        return $r2;
    }

