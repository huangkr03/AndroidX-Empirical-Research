android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float INNER_SQUARE_SIZE_FRACTION>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float INNER_SQUARE_PADDING_FRACTION>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float ICON_PADDING_FRACTION>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float RANGED_VALUE_SIZE_FRACTION>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>
<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds>
    public void <init>()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.LayoutHelper: void <init>()>();

        $r1 = new android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper;

        specialinvoke $r1.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: void <init>()>();

        r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds> = $r3;

        return;
    }

    private void updateShortTextLayoutHelper()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.support.wearable.complications.ComplicationData $r1, $r8;
        android.graphics.Rect $r2, $r3, $r4, $r5, $r7;
        float $f0, $f1;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r6;
        int $i0, $i1;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        $r1 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        if $r1 == null goto label1;

        $r2 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getRangedValueBounds(android.graphics.Rect)>($r2);

        $r4 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $r3 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $f0 = <android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float INNER_SQUARE_SIZE_FRACTION>;

        $f1 = 0.7F * $f0;

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void scaledAroundCenter(android.graphics.Rect,android.graphics.Rect,float)>($r4, $r3, $f1);

        $r6 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        $r5 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r7 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i1 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        $r8 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        virtualinvoke $r6.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: void update(int,int,android.support.wearable.complications.ComplicationData)>($i0, $i1, $r8);

     label1:
        return;
    }

    public void setWidth(int)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        int i0;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.LayoutHelper: void setWidth(int)>(i0);

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void updateShortTextLayoutHelper()>();

        return;
    }

    public void setHeight(int)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        int i0;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.LayoutHelper: void setHeight(int)>(i0);

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void updateShortTextLayoutHelper()>();

        return;
    }

    public void setComplicationData(android.support.wearable.complications.ComplicationData)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.support.wearable.complications.ComplicationData r1;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 := @parameter0: android.support.wearable.complications.ComplicationData;

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.LayoutHelper: void setComplicationData(android.support.wearable.complications.ComplicationData)>(r1);

        specialinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void updateShortTextLayoutHelper()>();

        return;
    }

    public void getRangedValueBounds(android.graphics.Rect)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.graphics.Rect r1;
        android.support.wearable.complications.ComplicationData r2;
        android.support.wearable.complications.ComplicationText $r3;
        boolean $z0;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>(r1);

        r2 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        $r3 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortText()>();

        if $r3 == null goto label1;

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>(r1);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getCentralSquare(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void scaledAroundCenter(android.graphics.Rect,android.graphics.Rect,float)>(r1, r1, 0.95F);

        goto label3;

     label2:
        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getLeftPart(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void scaledAroundCenter(android.graphics.Rect,android.graphics.Rect,float)>(r1, r1, 0.95F);

     label3:
        return;
    }

    public void getIconBounds(android.graphics.Rect)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.graphics.Rect r1, $r5, $r7, $r8;
        android.support.wearable.complications.ComplicationData r2;
        android.graphics.drawable.Icon $r3;
        android.support.wearable.complications.ComplicationText $r4;
        boolean $z0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r6;
        int $i0, $i1;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        $r3 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.graphics.drawable.Icon getIcon()>();

        if $r3 != null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

        goto label4;

     label1:
        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>(r1);

        $r4 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortText()>();

        if $r4 == null goto label2;

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>(r1);

        if $z0 == 0 goto label3;

     label2:
        $r5 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void scaledAroundCenter(android.graphics.Rect,android.graphics.Rect,float)>(r1, $r5, 0.7F);

        goto label4;

     label3:
        $r6 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        virtualinvoke $r6.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: void getIconBounds(android.graphics.Rect)>(r1);

        $r7 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i1 = $r7.<android.graphics.Rect: int left>;

        $r8 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i0 = $r8.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

     label4:
        return;
    }

    public android.text.Layout$Alignment getShortTextAlignment()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.graphics.Rect $r1, $r2;
        boolean $z0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r3;
        android.text.Layout$Alignment $r4, $r5;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        $r1 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds>;

        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>($r1);

        $r2 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds>;

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label1;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r5;

     label1:
        $r3 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        $r4 = virtualinvoke $r3.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: android.text.Layout$Alignment getShortTextAlignment()>();

        return $r4;
    }

    public int getShortTextGravity()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.support.wearable.complications.ComplicationData r1;
        android.graphics.Rect $r2, $r3;
        boolean $z0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r4;
        int $i0;
        android.support.wearable.complications.ComplicationText $r5;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        $r2 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds>;

        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>($r2);

        $r3 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mBounds>;

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>($r3);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortTitle()>();

        if $r5 == null goto label1;

        return 80;

     label1:
        return 16;

     label2:
        $r4 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        $i0 = virtualinvoke $r4.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: int getShortTextGravity()>();

        return $i0;
    }

    public void getShortTextBounds(android.graphics.Rect)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.graphics.Rect r1, $r5, $r6;
        android.support.wearable.complications.ComplicationData r2;
        android.support.wearable.complications.ComplicationText $r3, $r7;
        boolean $z0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r4;
        int $i0, $i1;
        android.graphics.drawable.Icon $r8;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        $r3 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortText()>();

        if $r3 != null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

        goto label5;

     label1:
        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>(r1);

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>(r1);

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortTitle()>();

        if $r7 == null goto label2;

        $r8 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.graphics.drawable.Icon getIcon()>();

        if $r8 == null goto label3;

     label2:
        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getRightPart(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        goto label5;

     label3:
        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getRightPart(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getTopHalf(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        goto label5;

     label4:
        $r4 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        virtualinvoke $r4.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: void getShortTextBounds(android.graphics.Rect)>(r1);

        $r5 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i1 = $r5.<android.graphics.Rect: int left>;

        $r6 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i0 = $r6.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

     label5:
        return;
    }

    public android.text.Layout$Alignment getShortTitleAlignment()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        $r1 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.text.Layout$Alignment getShortTextAlignment()>();

        return $r1;
    }

    public int getShortTitleGravity()
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        return 48;
    }

    public void getShortTitleBounds(android.graphics.Rect)
    {
        android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper r0;
        android.graphics.Rect r1, $r6, $r7;
        android.support.wearable.complications.ComplicationData r2;
        android.support.wearable.complications.ComplicationText $r3, $r4;
        boolean $z0;
        android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper $r5;
        int $i0, $i1;

        r0 := @this: android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.ComplicationData getComplicationData()>();

        $r3 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortTitle()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r2.<android.support.wearable.complications.ComplicationData: android.support.wearable.complications.ComplicationText getShortText()>();

        if $r4 != null goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

        goto label4;

     label2:
        virtualinvoke r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: void getBounds(android.graphics.Rect)>(r1);

        $z0 = staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: boolean isWideRectangle(android.graphics.Rect)>(r1);

        if $z0 == 0 goto label3;

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getRightPart(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        staticinvoke <android.support.wearable.complications.rendering.utils.LayoutUtils: void getBottomHalf(android.graphics.Rect,android.graphics.Rect)>(r1, r1);

        goto label4;

     label3:
        $r5 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper mShortTextLayoutHelper>;

        virtualinvoke $r5.<android.support.wearable.complications.rendering.utils.ShortTextLayoutHelper: void getShortTitleBounds(android.graphics.Rect)>(r1);

        $r6 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i1 = $r6.<android.graphics.Rect: int left>;

        $r7 = r0.<android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: android.graphics.Rect mRangedValueInnerSquare>;

        $i0 = $r7.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

     label4:
        return;
    }

    static void <clinit>()
    {
        double $d0, $d1;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d1 = 1.0 / $d0;

        $f0 = (float) $d1;

        <android.support.wearable.complications.rendering.utils.RangedValueLayoutHelper: float INNER_SQUARE_SIZE_FRACTION> = $f0;

        return;
    }

