android.support.v4.util.LruCache
<android.support.v4.util.LruCache: java.util.LinkedHashMap map>
<android.support.v4.util.LruCache: int size>
<android.support.v4.util.LruCache: int maxSize>
<android.support.v4.util.LruCache: int putCount>
<android.support.v4.util.LruCache: int createCount>
<android.support.v4.util.LruCache: int evictionCount>
<android.support.v4.util.LruCache: int hitCount>
<android.support.v4.util.LruCache: int missCount>
    public void <init>(int)
    {
        android.support.v4.util.LruCache r0;
        int i0;
        java.util.LinkedHashMap $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.v4.util.LruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;

     label1:
        r0.<android.support.v4.util.LruCache: int maxSize> = i0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map> = $r1;

        return;
    }

    public void resize(int)
    {
        android.support.v4.util.LruCache r0, r1;
        int i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.v4.util.LruCache;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r3;

     label1:
        r1 = r0;

        entermonitor r0;

        r0.<android.support.v4.util.LruCache: int maxSize> = i0;

        exitmonitor r1;

        goto label2;

     label2:
        virtualinvoke r0.<android.support.v4.util.LruCache: void trimToSize(int)>(i0);

        return;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        android.support.v4.util.LruCache r0, r12, r16;
        java.lang.Object r1, r13, r15, r17;
        java.lang.Throwable r2, $r10, $r11, r14;
        java.util.LinkedHashMap $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.NullPointerException $r9;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r9;

     label01:
        r12 = r0;

        entermonitor r0;

     label02:
        $r4 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        r13 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r13 == null goto label04;

        $i8 = r0.<android.support.v4.util.LruCache: int hitCount>;

        $i9 = $i8 + 1;

        r0.<android.support.v4.util.LruCache: int hitCount> = $i9;

        exitmonitor r12;

     label03:
        return r13;

     label04:
        $i0 = r0.<android.support.v4.util.LruCache: int missCount>;

        $i1 = $i0 + 1;

        r0.<android.support.v4.util.LruCache: int missCount> = $i1;

        exitmonitor r12;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        r14 = $r11;

        exitmonitor r12;

     label07:
        throw r14;

     label08:
        r15 = virtualinvoke r0.<android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)>(r1);

        if r15 != null goto label09;

        return null;

     label09:
        r16 = r0;

        entermonitor r0;

     label10:
        $i2 = r0.<android.support.v4.util.LruCache: int createCount>;

        $i3 = $i2 + 1;

        r0.<android.support.v4.util.LruCache: int createCount> = $i3;

        $r6 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        r17 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r15);

        if r17 == null goto label11;

        $r7 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r17);

        goto label12;

     label11:
        $i4 = r0.<android.support.v4.util.LruCache: int size>;

        $i5 = specialinvoke r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r15);

        $i6 = $i4 + $i5;

        r0.<android.support.v4.util.LruCache: int size> = $i6;

     label12:
        exitmonitor r16;

     label13:
        goto label16;

     label14:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r16;

     label15:
        throw r2;

     label16:
        if r17 == null goto label17;

        virtualinvoke r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r15, r17);

        return r17;

     label17:
        $i7 = r0.<android.support.v4.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.support.v4.util.LruCache: void trimToSize(int)>($i7);

        return r15;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache r0, r4;
        java.lang.Object r1, r2, r3;
        java.lang.Throwable r5, $r9;
        java.lang.NullPointerException $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.LinkedHashMap $r8;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null");

        throw $r6;

     label2:
        r4 = r0;

        entermonitor r0;

     label3:
        $i0 = r0.<android.support.v4.util.LruCache: int putCount>;

        $i1 = $i0 + 1;

        r0.<android.support.v4.util.LruCache: int putCount> = $i1;

        $i2 = r0.<android.support.v4.util.LruCache: int size>;

        $i3 = specialinvoke r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $i4 = $i2 + $i3;

        r0.<android.support.v4.util.LruCache: int size> = $i4;

        $r8 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        r3 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if r3 == null goto label4;

        $i6 = r0.<android.support.v4.util.LruCache: int size>;

        $i7 = specialinvoke r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r3);

        $i8 = $i6 - $i7;

        r0.<android.support.v4.util.LruCache: int size> = $i8;

     label4:
        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label7:
        throw r5;

     label8:
        if r3 == null goto label9;

        virtualinvoke r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r3, r2);

     label9:
        $i5 = r0.<android.support.v4.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.support.v4.util.LruCache: void trimToSize(int)>($i5);

        return r3;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void trimToSize(int)
    {
        android.support.v4.util.LruCache r0, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object r1, r2, $r19;
        java.util.Map$Entry r4;
        java.lang.Throwable r5, $r22;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r11, $r12;
        java.lang.Class $r9;
        java.lang.String $r10, $r13;
        java.util.LinkedHashMap $r14, $r15, $r16, $r20;
        boolean $z0, $z1;
        java.util.Set $r17;
        java.util.Iterator $r18;

        r0 := @this: android.support.v4.util.LruCache;

        i0 := @parameter0: int;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        $i1 = r0.<android.support.v4.util.LruCache: int size>;

        if $i1 < 0 goto label03;

        $r14 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $z0 = virtualinvoke $r14.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label04;

        $i8 = r0.<android.support.v4.util.LruCache: int size>;

        if $i8 == 0 goto label04;

     label03:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label04:
        $i2 = r0.<android.support.v4.util.LruCache: int size>;

        if $i2 <= i0 goto label05;

        $r15 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $z1 = virtualinvoke $r15.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z1 == 0 goto label07;

     label05:
        exitmonitor r3;

     label06:
        goto label12;

     label07:
        $r16 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r17 = virtualinvoke $r16.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r19;

        r1 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r20.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $i3 = r0.<android.support.v4.util.LruCache: int size>;

        $i4 = specialinvoke r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $i5 = $i3 - $i4;

        r0.<android.support.v4.util.LruCache: int size> = $i5;

        $i6 = r0.<android.support.v4.util.LruCache: int evictionCount>;

        $i7 = $i6 + 1;

        r0.<android.support.v4.util.LruCache: int evictionCount> = $i7;

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r5 = $r22;

        exitmonitor r3;

     label10:
        throw r5;

     label11:
        virtualinvoke r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r1, r2, null);

        goto label01;

     label12:
        return;

        catch java.lang.Throwable from label02 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        android.support.v4.util.LruCache r0, r3;
        java.lang.Object r1, r2;
        java.lang.Throwable r4, $r8;
        java.util.LinkedHashMap $r6;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r7;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r7;

     label1:
        r3 = r0;

        entermonitor r0;

     label2:
        $r6 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        r2 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if r2 == null goto label3;

        $i0 = r0.<android.support.v4.util.LruCache: int size>;

        $i1 = specialinvoke r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $i2 = $i0 - $i1;

        r0.<android.support.v4.util.LruCache: int size> = $i2;

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        if r2 == null goto label8;

        virtualinvoke r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r2, null);

     label8:
        return r2;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache r0;
        boolean z0;
        java.lang.Object r1, r2, r3;

        r0 := @this: android.support.v4.util.LruCache;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        return;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        android.support.v4.util.LruCache r0;
        java.lang.Object r1;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    private int safeSizeOf(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache r0;
        java.lang.Object r1, r2;
        int i0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r0.<android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        return i0;
    }

    protected int sizeOf(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache r0;
        java.lang.Object r1, r2;

        r0 := @this: android.support.v4.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public final void evictAll()
    {
        android.support.v4.util.LruCache r0;

        r0 := @this: android.support.v4.util.LruCache;

        virtualinvoke r0.<android.support.v4.util.LruCache: void trimToSize(int)>(-1);

        return;
    }

    public final synchronized int size()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int size>;

        return $i0;
    }

    public final synchronized int maxSize()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int maxSize>;

        return $i0;
    }

    public final synchronized int hitCount()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int hitCount>;

        return $i0;
    }

    public final synchronized int missCount()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int missCount>;

        return $i0;
    }

    public final synchronized int createCount()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int createCount>;

        return $i0;
    }

    public final synchronized int putCount()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int putCount>;

        return $i0;
    }

    public final synchronized int evictionCount()
    {
        android.support.v4.util.LruCache r0;
        int $i0;

        r0 := @this: android.support.v4.util.LruCache;

        $i0 = r0.<android.support.v4.util.LruCache: int evictionCount>;

        return $i0;
    }

    public final synchronized java.util.Map snapshot()
    {
        android.support.v4.util.LruCache r0;
        java.util.LinkedHashMap $r2, r3;
        java.util.Map r4, r5;

        r0 := @this: android.support.v4.util.LruCache;

        r3 = new java.util.LinkedHashMap;

        $r2 = r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        r4 = (java.util.Map) $r2;

        specialinvoke r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r4);

        r5 = (java.util.Map) r3;

        return r5;
    }

    public final synchronized java.lang.String toString()
    {
        android.support.v4.util.LruCache r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object[] $r1;
        java.util.Locale $r2;
        java.lang.Integer $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.support.v4.util.LruCache;

        $i3 = r0.<android.support.v4.util.LruCache: int hitCount>;

        $i2 = r0.<android.support.v4.util.LruCache: int missCount>;

        i0 = $i3 + $i2;

        if i0 == 0 goto label1;

        $i7 = r0.<android.support.v4.util.LruCache: int hitCount>;

        $i8 = 100 * $i7;

        $i9 = $i8 / i0;

        goto label2;

     label1:
        $i9 = 0;

     label2:
        i1 = $i9;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[4];

        $i4 = r0.<android.support.v4.util.LruCache: int maxSize>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[0] = $r3;

        $i5 = r0.<android.support.v4.util.LruCache: int hitCount>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[1] = $r4;

        $i6 = r0.<android.support.v4.util.LruCache: int missCount>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[3] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]", $r1);

        return $r7;
    }

