android.support.test.orchestrator.listeners.OrchestrationResultPrinter
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate>
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: java.lang.String mTestClass>
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestNum>
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>
<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode>
    public void <init>()
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.os.Bundle $r1, $r2;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        specialinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationRunListener: void <init>()>();

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestNum> = 0;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = -999;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: java.lang.String mTestClass> = null;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate> = $r1;

        $r2 = new android.os.Bundle;

        $r1 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate>;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r1);

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult> = $r2;

        return;
    }

    private void reportFailure(android.support.test.orchestrator.junit.ParcelableFailure)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableFailure $r1;
        android.os.Bundle $r2;
        java.lang.String $r3;
        java.lang.Object[] $r4;
        android.support.test.orchestrator.junit.ParcelableDescription $r5;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableFailure;

        $r2 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $r3 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String getTrace()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r3);

        $r2 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableFailure: android.support.test.orchestrator.junit.ParcelableDescription getDescription()>();

        $r3 = virtualinvoke $r5.<android.support.test.orchestrator.junit.ParcelableDescription: java.lang.String getDisplayName()>();

        $r4[0] = $r3;

        $r3 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String getTrace()>();

        $r4[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nError in %s:\n%s", $r4);

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r3);

        return;
    }

    public void orchestrationRunFinished(java.io.PrintStream, android.support.test.orchestrator.listeners.OrchestrationResult)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        java.io.PrintStream $r1;
        android.support.test.orchestrator.listeners.OrchestrationResult $r2;
        android.support.test.orchestrator.listeners.TextListener $r3;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: java.io.PrintStream;

        $r2 := @parameter1: android.support.test.orchestrator.listeners.OrchestrationResult;

        $r3 = new android.support.test.orchestrator.listeners.TextListener;

        specialinvoke $r3.<android.support.test.orchestrator.listeners.TextListener: void <init>(java.io.PrintStream)>($r1);

        virtualinvoke $r3.<android.support.test.orchestrator.listeners.TextListener: void testRunFinished(android.support.test.orchestrator.listeners.OrchestrationResult)>($r2);

        return;
    }

    public void orchestrationRunStarted(int)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        int $i0;
        android.os.Bundle $r1;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "AndroidJUnitRunner");

        $r1 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("numtests", $i0);

        return;
    }

    public void reportProcessCrash(java.lang.Throwable)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        java.lang.Throwable $r1, $r7;
        android.support.test.orchestrator.junit.ParcelableFailure $r2;
        android.support.test.orchestrator.junit.ParcelableDescription $r3;
        android.os.Bundle $r4;
        java.lang.String $r5, $r8;
        java.lang.Object[] $r6;
        int $i0;
        java.lang.StringBuilder $r9;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: java.lang.Throwable;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = -2;

        $r2 = new android.support.test.orchestrator.junit.ParcelableFailure;

        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

     label01:
        specialinvoke $r2.<android.support.test.orchestrator.junit.ParcelableFailure: void <init>(android.support.test.orchestrator.junit.ParcelableDescription,java.lang.Throwable)>($r3, $r1);

     label02:
        $r4 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

     label03:
        $r5 = virtualinvoke $r2.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String getTrace()>();

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r5);

     label04:
        $r4 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $r6 = newarray (java.lang.Object)[2];

        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

     label05:
        $r5 = virtualinvoke $r3.<android.support.test.orchestrator.junit.ParcelableDescription: java.lang.String getDisplayName()>();

     label06:
        $r6[0] = $r5;

     label07:
        $r5 = virtualinvoke $r2.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String getTrace()>();

     label08:
        $r6[1] = $r5;

     label09:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nProcess crashed while executing %s:\n%s", $r6);

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r5);

     label10:
        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

     label11:
        virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void testFinished(android.support.test.orchestrator.junit.ParcelableDescription)>($r3);

     label12:
        return;

     label13:
        $r7 := @caughtexception;

        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

        if $r3 != null goto label14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OdoInstrResultPrinter", "Failed to initialize test before process crash");

        return;

     label14:
        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription>;

        $r5 = virtualinvoke $r3.<android.support.test.orchestrator.junit.ParcelableDescription: java.lang.String getDisplayName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + 52;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mark test ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as finished after process crash");

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OdoInstrResultPrinter", $r5);

        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public void sendStatus(int, android.os.Bundle)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        int $i0;
        android.os.Bundle $r1;
        android.app.Instrumentation $r2;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r2.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>($i0, $r1);

        return;
    }

    public void testAssumptionFailure(android.support.test.orchestrator.junit.ParcelableFailure)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableFailure $r1;
        java.lang.String $r2;
        android.os.Bundle $r3;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableFailure;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = -4;

        $r3 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $r2 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableFailure: java.lang.String getTrace()>();

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r2);

        return;
    }

    public void testFailure(android.support.test.orchestrator.junit.ParcelableFailure)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableFailure $r1;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableFailure;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = -2;

        specialinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void reportFailure(android.support.test.orchestrator.junit.ParcelableFailure)>($r1);

        return;
    }

    public void testFinished(android.support.test.orchestrator.junit.ParcelableDescription)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableDescription $r1;
        int $i0;
        android.os.Bundle $r2;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableDescription;

        $i0 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode>;

        if $i0 != 0 goto label1;

        $r2 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", ".");

     label1:
        $i0 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode>;

        $r2 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void sendStatus(int,android.os.Bundle)>($i0, $r2);

        return;
    }

    public void testIgnored(android.support.test.orchestrator.junit.ParcelableDescription)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableDescription $r1;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableDescription;

        virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void testStarted(android.support.test.orchestrator.junit.ParcelableDescription)>($r1);

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = -3;

        virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void testFinished(android.support.test.orchestrator.junit.ParcelableDescription)>($r1);

        return;
    }

    public void testStarted(android.support.test.orchestrator.junit.ParcelableDescription)
    {
        android.support.test.orchestrator.listeners.OrchestrationResultPrinter $r0;
        android.support.test.orchestrator.junit.ParcelableDescription $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4;
        android.os.Bundle $r5, $r6;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.test.orchestrator.listeners.OrchestrationResultPrinter;

        $r1 := @parameter0: android.support.test.orchestrator.junit.ParcelableDescription;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.support.test.orchestrator.junit.ParcelableDescription mDescription> = $r1;

        $r3 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableDescription: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r1.<android.support.test.orchestrator.junit.ParcelableDescription: java.lang.String getMethodName()>();

        $r5 = new android.os.Bundle;

        $r6 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mResultTemplate>;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r6);

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult> = $r5;

        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("class", $r3);

        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("test", $r4);

        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $i0 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestNum>;

        $i0 = $i0 + 1;

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestNum> = $i0;

        virtualinvoke $r5.<android.os.Bundle: void putInt(java.lang.String,int)>("current", $i0);

        if $r3 == null goto label2;

        $r4 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: java.lang.String mTestClass>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s:", $r2);

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r4);

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: java.lang.String mTestClass> = $r3;

     label1:
        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: void sendStatus(int,android.os.Bundle)>(1, $r5);

        $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: int mTestResultCode> = 0;

        return;

     label2:
        $r5 = $r0.<android.support.test.orchestrator.listeners.OrchestrationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", "");

        goto label1;
    }

