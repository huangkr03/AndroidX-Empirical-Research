android.support.test.espresso.base.DefaultFailureHandler
<android.support.test.espresso.base.DefaultFailureHandler: android.content.Context appContext>
    public void <init>(android.content.Context)
    {
        android.support.test.espresso.base.DefaultFailureHandler r0;
        android.content.Context r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.base.DefaultFailureHandler;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.content.Context) $r2;

        r0.<android.support.test.espresso.base.DefaultFailureHandler: android.content.Context appContext> = $r3;

        return;
    }

    public void handle(java.lang.Throwable, org.hamcrest.Matcher)
    {
        android.support.test.espresso.base.DefaultFailureHandler r0;
        java.lang.Throwable r1, $r4, $r6, r9, r10;
        org.hamcrest.Matcher r2;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException r7, r8;

        r0 := @this: android.support.test.espresso.base.DefaultFailureHandler;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: org.hamcrest.Matcher;

        $z0 = r1 instanceof android.support.test.espresso.EspressoException;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof junit.framework.AssertionFailedError;

        if $z1 != 0 goto label1;

        $z2 = r1 instanceof java.lang.AssertionError;

        if $z2 == 0 goto label2;

     label1:
        $r4 = specialinvoke r0.<android.support.test.espresso.base.DefaultFailureHandler: java.lang.Throwable getUserFriendlyError(java.lang.Throwable,org.hamcrest.Matcher)>(r1, r2);

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r4);

        r7 = new java.lang.RuntimeException;

        $r6 = specialinvoke r0.<android.support.test.espresso.base.DefaultFailureHandler: java.lang.Throwable getUserFriendlyError(java.lang.Throwable,org.hamcrest.Matcher)>(r1, r2);

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        r9 = (java.lang.Throwable) r7;

        throw r9;

     label2:
        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r1);

        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        r10 = (java.lang.Throwable) r8;

        throw r10;
    }

    private java.lang.Throwable getUserFriendlyError(java.lang.Throwable, org.hamcrest.Matcher)
    {
        android.support.test.espresso.base.DefaultFailureHandler r0;
        org.hamcrest.Matcher r1;
        java.lang.StringBuilder r2, r19;
        boolean $z0, $z1, $z2;
        java.lang.Thread $r3;
        java.lang.StackTraceElement[] $r4;
        java.lang.String $r6, $r9, $r14;
        android.content.Context $r8;
        android.support.test.espresso.PerformException $r12, $r16;
        android.support.test.espresso.PerformException$Builder $r13, $r15, r20;
        java.lang.Object r18;
        android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError r21;
        java.lang.Throwable r22, r23, r24, r25, r26;

        r0 := @this: android.support.test.espresso.base.DefaultFailureHandler;

        r18 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: org.hamcrest.Matcher;

        $z0 = r18 instanceof android.support.test.espresso.PerformException;

        if $z0 == 0 goto label2;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        r2 = r19;

        $r8 = r0.<android.support.test.espresso.base.DefaultFailureHandler: android.content.Context appContext>;

        $z2 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isAnimationAndTransitionDisabled(android.content.Context)>($r8);

        if $z2 != 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animations or transitions are enabled on the target device.\nFor more info check: http://goo.gl/qVu1yV\n\n");

     label1:
        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r20 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r20.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r12 = (android.support.test.espresso.PerformException) r18;

        $r13 = virtualinvoke r20.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder 'from'(android.support.test.espresso.PerformException)>($r12);

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r22 = (java.lang.Throwable) $r16;

        throw r22;

     label2:
        $z1 = r18 instanceof java.lang.AssertionError;

        if $z1 == 0 goto label3;

        r21 = new android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError;

        r23 = (java.lang.Throwable) r18;

        $r6 = virtualinvoke r23.<java.lang.Throwable: java.lang.String getMessage()>();

        r24 = (java.lang.Throwable) r18;

        specialinvoke r21.<android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError: void <init>(java.lang.String,java.lang.Throwable)>($r6, r24);

        r18 = r21;

     label3:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        r25 = (java.lang.Throwable) r18;

        virtualinvoke r25.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r4);

        r26 = (java.lang.Throwable) r18;

        return r26;
    }

    private static boolean isAnimationAndTransitionDisabled(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        boolean z0, z1, z2, $z3;
        float $f0, $f1, $f2;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getTransitionAnimationScale(android.content.ContentResolver)>(r1);

        z0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isEqualToZero(float)>($f0);

        $f1 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getWindowAnimationScale(android.content.ContentResolver)>(r1);

        z1 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isEqualToZero(float)>($f1);

        $f2 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getAnimatorDurationScale(android.content.ContentResolver)>(r1);

        z2 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isEqualToZero(float)>($f2);

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        if z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private static boolean isEqualToZero(float)
    {
        float f0, $f1;
        int $i0;
        boolean $z0;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, 0.0F);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static float getTransitionAnimationScale(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        $f0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, "transition_animation_scale", "transition_animation_scale");

        return $f0;
    }

    private static float getWindowAnimationScale(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        $f0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, "window_animation_scale", "window_animation_scale");

        return $f0;
    }

    private static float getAnimatorDurationScale(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        boolean $z0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        $z0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isJellyBeanMR1OrHigher()>();

        if $z0 == 0 goto label1;

        $f0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, "animator_duration_scale", "animator_duration_scale");

        return $f0;

     label1:
        return 0.0F;
    }

    private static float getSetting(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        boolean $z0;
        float $f0, $f1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: boolean isJellyBeanMR1OrHigher()>();

        if $z0 == 0 goto label1;

        $f1 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getGlobalSetting(android.content.ContentResolver,java.lang.String)>(r0, r1);

        return $f1;

     label1:
        $f0 = staticinvoke <android.support.test.espresso.base.DefaultFailureHandler: float getSystemSetting(android.content.ContentResolver,java.lang.String)>(r0, r2);

        return $f0;
    }

    private static boolean isJellyBeanMR1OrHigher()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static float getGlobalSetting(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r3;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

     label1:
        $f0 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)>(r0, r1);

     label2:
        return $f0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        return 0.0F;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    private static float getSystemSetting(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r3;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

     label1:
        $f0 = staticinvoke <android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>(r0, r1);

     label2:
        return $f0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        return 0.0F;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError
    public void <init>(java.lang.String, java.lang.Throwable)
    {
        android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<android.support.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        return;
    }

