android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory
<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: android.support.test.espresso.base.BaseLayerModule module>
<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: javax.inject.Provider holderProvider>
    public void <init>(android.support.test.espresso.base.BaseLayerModule, javax.inject.Provider)
    {
        android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory r0;
        android.support.test.espresso.base.BaseLayerModule r1;
        javax.inject.Provider r2;

        r0 := @this: android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory;

        r1 := @parameter0: android.support.test.espresso.base.BaseLayerModule;

        r2 := @parameter1: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: android.support.test.espresso.base.BaseLayerModule module> = r1;

        r0.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: javax.inject.Provider holderProvider> = r2;

        return;
    }

    public android.support.test.espresso.FailureHandler get()
    {
        android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory r0;
        javax.inject.Provider $r1;
        android.support.test.espresso.base.BaseLayerModule $r2;
        java.lang.Object $r3;
        android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder $r4;
        android.support.test.espresso.FailureHandler $r5;

        r0 := @this: android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory;

        $r2 = r0.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: android.support.test.espresso.base.BaseLayerModule module>;

        $r1 = r0.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: javax.inject.Provider holderProvider>;

        $r3 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r4 = (android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder) $r3;

        $r5 = staticinvoke <android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: android.support.test.espresso.FailureHandler proxyProvideFailureHandler(android.support.test.espresso.base.BaseLayerModule,android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder)>($r2, $r4);

        return $r5;
    }

    public static android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory create(android.support.test.espresso.base.BaseLayerModule, javax.inject.Provider)
    {
        android.support.test.espresso.base.BaseLayerModule r0;
        javax.inject.Provider r1;
        android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory $r2;

        r0 := @parameter0: android.support.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: javax.inject.Provider;

        $r2 = new android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory;

        specialinvoke $r2.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: void <init>(android.support.test.espresso.base.BaseLayerModule,javax.inject.Provider)>(r0, r1);

        return $r2;
    }

    public static android.support.test.espresso.FailureHandler proxyProvideFailureHandler(android.support.test.espresso.base.BaseLayerModule, android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder)
    {
        android.support.test.espresso.base.BaseLayerModule r0;
        android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder r1;
        android.support.test.espresso.FailureHandler $r2, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: android.support.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder;

        $r2 = virtualinvoke r0.<android.support.test.espresso.base.BaseLayerModule: android.support.test.espresso.FailureHandler provideFailureHandler(android.support.test.espresso.base.BaseLayerModule$FailureHandlerHolder)>(r1);

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r2, "Cannot return null from a non-@Nullable @Provides method");

        $r4 = (android.support.test.espresso.FailureHandler) $r3;

        return $r4;
    }

    public volatile java.lang.Object get()
    {
        android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory r0;
        android.support.test.espresso.FailureHandler $r1;

        r0 := @this: android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory: android.support.test.espresso.FailureHandler get()>();

        return $r1;
    }

