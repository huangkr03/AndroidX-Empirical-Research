android.support.media2.subtitle.SubtitleView
<android.support.media2.subtitle.SubtitleView: float INNER_PADDING_RATIO>
<android.support.media2.subtitle.SubtitleView: int COLOR_BEVEL_DARK>
<android.support.media2.subtitle.SubtitleView: int COLOR_BEVEL_LIGHT>
<android.support.media2.subtitle.SubtitleView: float mCornerRadius>
<android.support.media2.subtitle.SubtitleView: float mOutlineWidth>
<android.support.media2.subtitle.SubtitleView: float mShadowRadius>
<android.support.media2.subtitle.SubtitleView: float mShadowOffsetX>
<android.support.media2.subtitle.SubtitleView: float mShadowOffsetY>
<android.support.media2.subtitle.SubtitleView: android.graphics.RectF mLineBounds>
<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText>
<android.support.media2.subtitle.SubtitleView: android.text.Layout$Alignment mAlignment>
<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>
<android.support.media2.subtitle.SubtitleView: android.graphics.Paint mPaint>
<android.support.media2.subtitle.SubtitleView: int mForegroundColor>
<android.support.media2.subtitle.SubtitleView: int mBackgroundColor>
<android.support.media2.subtitle.SubtitleView: int mEdgeColor>
<android.support.media2.subtitle.SubtitleView: int mEdgeType>
<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements>
<android.support.media2.subtitle.SubtitleView: int mLastMeasuredWidth>
<android.support.media2.subtitle.SubtitleView: android.text.StaticLayout mLayout>
<android.support.media2.subtitle.SubtitleView: float mSpacingMult>
<android.support.media2.subtitle.SubtitleView: float mSpacingAdd>
<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX>
    void <init>(android.content.Context)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.content.Context r1;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.media2.subtitle.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.media2.subtitle.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.media2.subtitle.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.content.Context r1, $r6;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.res.Resources r3;
        android.graphics.RectF $r4;
        android.text.SpannableStringBuilder $r5;
        float $f0, $f1, $f2, $f3, $f4;
        android.text.TextPaint $r7, $r8, $r9;
        android.graphics.Paint $r10, $r11;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<android.support.media2.subtitle.SubtitleView: android.graphics.RectF mLineBounds> = $r4;

        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText> = $r5;

        r0.<android.support.media2.subtitle.SubtitleView: float mSpacingMult> = 1.0F;

        r0.<android.support.media2.subtitle.SubtitleView: float mSpacingAdd> = 0.0F;

        r0.<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX> = 0;

        $r6 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: android.content.Context getContext()>();

        r3 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <android.support.media2.R$dimen: int subtitle_corner_radius>;

        $i3 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        $f0 = (float) $i3;

        r0.<android.support.media2.subtitle.SubtitleView: float mCornerRadius> = $f0;

        $i4 = <android.support.media2.R$dimen: int subtitle_outline_width>;

        $i5 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i4);

        $f1 = (float) $i5;

        r0.<android.support.media2.subtitle.SubtitleView: float mOutlineWidth> = $f1;

        $i6 = <android.support.media2.R$dimen: int subtitle_shadow_radius>;

        $i7 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i6);

        $f2 = (float) $i7;

        r0.<android.support.media2.subtitle.SubtitleView: float mShadowRadius> = $f2;

        $i8 = <android.support.media2.R$dimen: int subtitle_shadow_offset>;

        $i9 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i8);

        $f3 = (float) $i9;

        r0.<android.support.media2.subtitle.SubtitleView: float mShadowOffsetX> = $f3;

        $f4 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowOffsetX>;

        r0.<android.support.media2.subtitle.SubtitleView: float mShadowOffsetY> = $f4;

        $r7 = new android.text.TextPaint;

        specialinvoke $r7.<android.text.TextPaint: void <init>()>();

        r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint> = $r7;

        $r8 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r8.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r9 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r9.<android.text.TextPaint: void setSubpixelText(boolean)>(1);

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r0.<android.support.media2.subtitle.SubtitleView: android.graphics.Paint mPaint> = $r10;

        $r11 = r0.<android.support.media2.subtitle.SubtitleView: android.graphics.Paint mPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return;
    }

    public void setText(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0;
        java.lang.CharSequence r1;
        android.content.Context $r2;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: android.content.Context getContext()>();

        r1 = virtualinvoke $r2.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    public void setText(java.lang.CharSequence)
    {
        android.support.media2.subtitle.SubtitleView r0;
        java.lang.CharSequence r1;
        android.text.SpannableStringBuilder $r2, $r3;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText>;

        virtualinvoke $r2.<android.text.SpannableStringBuilder: void clear()>();

        $r3 = r0.<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText>;

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements> = 0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void requestLayout()>();

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

        return;
    }

    public void setForegroundColor(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        r0.<android.support.media2.subtitle.SubtitleView: int mForegroundColor> = i0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

        return;
    }

    public void setBackgroundColor(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        r0.<android.support.media2.subtitle.SubtitleView: int mBackgroundColor> = i0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

        return;
    }

    public void setEdgeType(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        r0.<android.support.media2.subtitle.SubtitleView: int mEdgeType> = i0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

        return;
    }

    public void setEdgeColor(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        r0.<android.support.media2.subtitle.SubtitleView: int mEdgeColor> = i0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

        return;
    }

    public void setTextSize(float)
    {
        android.support.media2.subtitle.SubtitleView r0;
        float f0, $f1, $f2, $f3;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        int $i1;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSize(float)>(f0);

        $f2 = f0 * 0.125F;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        r0.<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX> = $i1;

        r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements> = 0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void requestLayout()>();

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

     label1:
        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;
        boolean $z0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.graphics.Typeface;

        if r1 == null goto label1;

        $r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $z0 = virtualinvoke r1.<android.graphics.Typeface: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements> = 0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void requestLayout()>();

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

     label1:
        return;
    }

    public void setAlignment(android.text.Layout$Alignment)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.text.Layout$Alignment r1, $r2;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.text.Layout$Alignment;

        $r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.Layout$Alignment mAlignment>;

        if $r2 == r1 goto label1;

        r0.<android.support.media2.subtitle.SubtitleView: android.text.Layout$Alignment mAlignment> = r1;

        r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements> = 0;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void requestLayout()>();

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void invalidate()>();

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.text.StaticLayout r1;
        boolean $z0;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $z0 = specialinvoke r0.<android.support.media2.subtitle.SubtitleView: boolean computeMeasurements(int)>(i2);

        if $z0 == 0 goto label1;

        r1 = r0.<android.support.media2.subtitle.SubtitleView: android.text.StaticLayout mLayout>;

        $i6 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingRight()>();

        $i10 = $i6 + $i7;

        $i8 = r0.<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX>;

        $i9 = $i8 * 2;

        i3 = $i10 + $i9;

        $i11 = virtualinvoke r1.<android.text.StaticLayout: int getWidth()>();

        i4 = $i11 + i3;

        $i12 = virtualinvoke r1.<android.text.StaticLayout: int getHeight()>();

        $i13 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingTop()>();

        $i14 = $i12 + $i13;

        $i15 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingBottom()>();

        i5 = $i14 + $i15;

        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void setMeasuredDimension(int,int)>(i4, i5);

        goto label2;

     label1:
        virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: void setMeasuredDimension(int,int)>(16777216, 16777216);

     label2:
        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        boolean z0;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = i2 - i0;

        specialinvoke r0.<android.support.media2.subtitle.SubtitleView: boolean computeMeasurements(int)>(i4);

        return;
    }

    private boolean computeMeasurements(int)
    {
        android.support.media2.subtitle.SubtitleView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        android.text.SpannableStringBuilder $r1, $r2;
        android.text.TextPaint $r3;
        android.text.StaticLayout$Builder $r4, $r6, $r7, $r8;
        android.text.Layout$Alignment $r5;
        float $f0, $f1;
        android.text.StaticLayout $r9;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        i8 := @parameter0: int;

        $z0 = r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements>;

        if $z0 == 0 goto label1;

        $i7 = r0.<android.support.media2.subtitle.SubtitleView: int mLastMeasuredWidth>;

        if i8 != $i7 goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingRight()>();

        $i5 = $i1 + $i2;

        $i3 = r0.<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX>;

        $i4 = $i3 * 2;

        i0 = $i5 + $i4;

        i9 = i8 - i0;

        if i9 > 0 goto label2;

        return 0;

     label2:
        r0.<android.support.media2.subtitle.SubtitleView: boolean mHasMeasurements> = 1;

        r0.<android.support.media2.subtitle.SubtitleView: int mLastMeasuredWidth> = i9;

        $r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText>;

        $r1 = r0.<android.support.media2.subtitle.SubtitleView: android.text.SpannableStringBuilder mText>;

        $i6 = virtualinvoke $r1.<android.text.SpannableStringBuilder: int length()>();

        $r3 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        $r4 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>($r2, 0, $i6, $r3, i9);

        $r5 = r0.<android.support.media2.subtitle.SubtitleView: android.text.Layout$Alignment mAlignment>;

        $r6 = virtualinvoke $r4.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>($r5);

        $f1 = r0.<android.support.media2.subtitle.SubtitleView: float mSpacingAdd>;

        $f0 = r0.<android.support.media2.subtitle.SubtitleView: float mSpacingMult>;

        $r7 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f1, $f0);

        $r8 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>(1);

        $r9 = virtualinvoke $r8.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        r0.<android.support.media2.subtitle.SubtitleView: android.text.StaticLayout mLayout> = $r9;

        return 1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.media2.subtitle.SubtitleView r0;
        android.graphics.Canvas r1;
        android.text.StaticLayout r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, i18, $i19, $i20;
        android.text.TextPaint r3;
        android.graphics.Paint r4;
        android.graphics.RectF r5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20;
        android.graphics.Paint$Style $r6, $r8, $r9, $r10;
        android.graphics.Paint$Join $r7;
        boolean $z0, z1;

        r0 := @this: android.support.media2.subtitle.SubtitleView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.support.media2.subtitle.SubtitleView: android.text.StaticLayout mLayout>;

        if r2 != null goto label01;

        return;

     label01:
        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i1 = r0.<android.support.media2.subtitle.SubtitleView: int mInnerPaddingX>;

        $i4 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingLeft()>();

        $i5 = $i4 + i1;

        $f1 = (float) $i5;

        $i6 = virtualinvoke r0.<android.support.media2.subtitle.SubtitleView: int getPaddingTop()>();

        $f2 = (float) $i6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f2);

        i2 = virtualinvoke r2.<android.text.StaticLayout: int getLineCount()>();

        r3 = r0.<android.support.media2.subtitle.SubtitleView: android.text.TextPaint mTextPaint>;

        r4 = r0.<android.support.media2.subtitle.SubtitleView: android.graphics.Paint mPaint>;

        r5 = r0.<android.support.media2.subtitle.SubtitleView: android.graphics.RectF mLineBounds>;

        $i7 = r0.<android.support.media2.subtitle.SubtitleView: int mBackgroundColor>;

        $i8 = staticinvoke <android.graphics.Color: int alpha(int)>($i7);

        if $i8 <= 0 goto label03;

        f19 = r0.<android.support.media2.subtitle.SubtitleView: float mCornerRadius>;

        $i12 = virtualinvoke r2.<android.text.StaticLayout: int getLineTop(int)>(0);

        f20 = (float) $i12;

        $i13 = r0.<android.support.media2.subtitle.SubtitleView: int mBackgroundColor>;

        virtualinvoke r4.<android.graphics.Paint: void setColor(int)>($i13);

        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);

        i15 = 0;

     label02:
        if i15 >= i2 goto label03;

        $f12 = virtualinvoke r2.<android.text.StaticLayout: float getLineLeft(int)>(i15);

        $f13 = (float) i1;

        $f14 = $f12 - $f13;

        r5.<android.graphics.RectF: float left> = $f14;

        $f15 = virtualinvoke r2.<android.text.StaticLayout: float getLineRight(int)>(i15);

        $f16 = (float) i1;

        $f17 = $f15 + $f16;

        r5.<android.graphics.RectF: float right> = $f17;

        r5.<android.graphics.RectF: float top> = f20;

        $i14 = virtualinvoke r2.<android.text.StaticLayout: int getLineBottom(int)>(i15);

        $f18 = (float) $i14;

        r5.<android.graphics.RectF: float bottom> = $f18;

        f20 = r5.<android.graphics.RectF: float bottom>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r5, f19, f19, r4);

        i15 = i15 + 1;

        goto label02;

     label03:
        i16 = r0.<android.support.media2.subtitle.SubtitleView: int mEdgeType>;

        if i16 != 1 goto label04;

        $r7 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r7);

        $f11 = r0.<android.support.media2.subtitle.SubtitleView: float mOutlineWidth>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeWidth(float)>($f11);

        $i11 = r0.<android.support.media2.subtitle.SubtitleView: int mEdgeColor>;

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i11);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL_AND_STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        virtualinvoke r2.<android.text.StaticLayout: void draw(android.graphics.Canvas)>(r1);

        goto label13;

     label04:
        if i16 != 2 goto label05;

        $f10 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowRadius>;

        $f9 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowOffsetX>;

        $f8 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowOffsetY>;

        $i10 = r0.<android.support.media2.subtitle.SubtitleView: int mEdgeColor>;

        virtualinvoke r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f10, $f9, $f8, $i10);

        goto label13;

     label05:
        if i16 == 3 goto label06;

        if i16 != 4 goto label13;

     label06:
        if i16 != 3 goto label07;

        $z0 = 1;

        goto label08;

     label07:
        $z0 = 0;

     label08:
        z1 = $z0;

        if z1 == 0 goto label09;

        $i17 = -1;

        goto label10;

     label09:
        $i17 = r0.<android.support.media2.subtitle.SubtitleView: int mEdgeColor>;

     label10:
        i18 = $i17;

        if z1 == 0 goto label11;

        $i19 = r0.<android.support.media2.subtitle.SubtitleView: int mEdgeColor>;

        goto label12;

     label11:
        $i19 = -1;

     label12:
        i3 = $i19;

        $f3 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowRadius>;

        f0 = $f3 / 2.0F;

        $i9 = r0.<android.support.media2.subtitle.SubtitleView: int mForegroundColor>;

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i9);

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $f6 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowRadius>;

        $f5 = neg f0;

        $f4 = neg f0;

        virtualinvoke r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f6, $f5, $f4, i18);

        virtualinvoke r2.<android.text.StaticLayout: void draw(android.graphics.Canvas)>(r1);

        $f7 = r0.<android.support.media2.subtitle.SubtitleView: float mShadowRadius>;

        virtualinvoke r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f7, f0, f0, i3);

     label13:
        $i20 = r0.<android.support.media2.subtitle.SubtitleView: int mForegroundColor>;

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i20);

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        virtualinvoke r2.<android.text.StaticLayout: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(0.0F, 0.0F, 0.0F, 0);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        return;
    }

