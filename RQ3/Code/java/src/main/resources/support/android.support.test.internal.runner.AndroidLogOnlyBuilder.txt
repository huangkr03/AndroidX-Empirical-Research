android.support.test.internal.runner.AndroidLogOnlyBuilder
<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.runner.AndroidRunnerBuilder mBuilder>
<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.util.AndroidRunnerParams mRunnerParams>
<android.support.test.internal.runner.AndroidLogOnlyBuilder: boolean mScanningPath>
<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount>
    void <init>(android.support.test.internal.util.AndroidRunnerParams, boolean, java.util.List)
    {
        android.support.test.internal.runner.AndroidLogOnlyBuilder r0;
        android.support.test.internal.util.AndroidRunnerParams r1, $r4;
        boolean z0;
        java.util.List r2;
        java.lang.Object $r3;
        android.support.test.internal.runner.AndroidRunnerBuilder $r5;

        r0 := @this: android.support.test.internal.runner.AndroidLogOnlyBuilder;

        r1 := @parameter0: android.support.test.internal.util.AndroidRunnerParams;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<org.junit.runners.model.RunnerBuilder: void <init>()>();

        r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount> = 0;

        $r3 = staticinvoke <android.support.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "runnerParams cannot be null!");

        $r4 = (android.support.test.internal.util.AndroidRunnerParams) $r3;

        r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.util.AndroidRunnerParams mRunnerParams> = $r4;

        r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: boolean mScanningPath> = z0;

        $r5 = new android.support.test.internal.runner.AndroidRunnerBuilder;

        specialinvoke $r5.<android.support.test.internal.runner.AndroidRunnerBuilder: void <init>(org.junit.runners.model.RunnerBuilder,android.support.test.internal.util.AndroidRunnerParams,boolean,java.util.List)>(r0, r1, z0, r2);

        r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.runner.AndroidRunnerBuilder mBuilder> = $r5;

        return;
    }

    public org.junit.runner.Runner runnerForClass(java.lang.Class) throws java.lang.Throwable
    {
        android.support.test.internal.runner.AndroidLogOnlyBuilder r0;
        java.lang.Class r1;
        org.junit.runner.Runner r2;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.support.test.internal.runner.AndroidRunnerBuilder $r3;
        android.support.test.internal.util.AndroidRunnerParams $r5;
        junit.framework.TestSuite $r8;
        java.lang.String $r10, $r11, $r12;
        junit.framework.Test r15, r22, r23;
        android.support.test.internal.runner.junit3.NonExecutingTestSuite r16, r19;
        android.support.test.internal.runner.junit3.JUnit38ClassRunner r17, r20;
        java.lang.IllegalArgumentException r18;
        android.support.test.internal.runner.NonExecutingRunner r21;

        r0 := @this: android.support.test.internal.runner.AndroidLogOnlyBuilder;

        r1 := @parameter0: java.lang.Class;

        $i0 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount>;

        $i1 = $i0 + 1;

        r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount> = $i1;

        $z0 = staticinvoke <android.support.test.internal.util.AndroidRunnerBuilderUtil: boolean isJUnit3Test(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $z5 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: boolean mScanningPath>;

        if $z5 == 0 goto label1;

        $z6 = staticinvoke <android.support.test.internal.util.AndroidRunnerBuilderUtil: boolean hasJUnit3TestMethod(java.lang.Class)>(r1);

        if $z6 != 0 goto label1;

        return null;

     label1:
        r17 = new android.support.test.internal.runner.junit3.JUnit38ClassRunner;

        r16 = new android.support.test.internal.runner.junit3.NonExecutingTestSuite;

        specialinvoke r16.<android.support.test.internal.runner.junit3.NonExecutingTestSuite: void <init>(java.lang.Class)>(r1);

        r22 = (junit.framework.Test) r16;

        specialinvoke r17.<android.support.test.internal.runner.junit3.JUnit38ClassRunner: void <init>(junit.framework.Test)>(r22);

        return r17;

     label2:
        $z1 = staticinvoke <android.support.test.internal.util.AndroidRunnerBuilderUtil: boolean hasSuiteMethod(java.lang.Class)>(r1);

        if $z1 == 0 goto label5;

        $r5 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.util.AndroidRunnerParams mRunnerParams>;

        $z3 = virtualinvoke $r5.<android.support.test.internal.util.AndroidRunnerParams: boolean isIgnoreSuiteMethods()>();

        if $z3 == 0 goto label3;

        return null;

     label3:
        r15 = staticinvoke <org.junit.internal.runners.SuiteMethod: junit.framework.Test testFromSuiteMethod(java.lang.Class)>(r1);

        $z4 = r15 instanceof junit.framework.TestSuite;

        if $z4 != 0 goto label4;

        r18 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String concat(java.lang.String)>("#suite() did not return a TestSuite");

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw r18;

     label4:
        r20 = new android.support.test.internal.runner.junit3.JUnit38ClassRunner;

        r19 = new android.support.test.internal.runner.junit3.NonExecutingTestSuite;

        $r8 = (junit.framework.TestSuite) r15;

        specialinvoke r19.<android.support.test.internal.runner.junit3.NonExecutingTestSuite: void <init>(junit.framework.TestSuite)>($r8);

        r23 = (junit.framework.Test) r19;

        specialinvoke r20.<android.support.test.internal.runner.junit3.JUnit38ClassRunner: void <init>(junit.framework.Test)>(r23);

        return r20;

     label5:
        i3 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount>;

        $r3 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: android.support.test.internal.runner.AndroidRunnerBuilder mBuilder>;

        r2 = virtualinvoke $r3.<android.support.test.internal.runner.AndroidRunnerBuilder: org.junit.runner.Runner runnerForClass(java.lang.Class)>(r1);

        if null != r2 goto label6;

        return null;

     label6:
        $z2 = r2 instanceof org.junit.internal.runners.ErrorReportingRunner;

        if $z2 == 0 goto label7;

        return r2;

     label7:
        $i2 = r0.<android.support.test.internal.runner.AndroidLogOnlyBuilder: int mRunnerCount>;

        if $i2 <= i3 goto label8;

        return r2;

     label8:
        r21 = new android.support.test.internal.runner.NonExecutingRunner;

        specialinvoke r21.<android.support.test.internal.runner.NonExecutingRunner: void <init>(org.junit.runner.Runner)>(r2);

        return r21;
    }

