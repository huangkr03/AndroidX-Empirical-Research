android.support.v7.app.MediaRouteDevicePickerDialog
<android.support.v7.app.MediaRouteDevicePickerDialog: java.lang.String TAG>
<android.support.v7.app.MediaRouteDevicePickerDialog: int ITEM_TYPE_NONE>
<android.support.v7.app.MediaRouteDevicePickerDialog: int ITEM_TYPE_HEADER>
<android.support.v7.app.MediaRouteDevicePickerDialog: int ITEM_TYPE_ROUTE>
<android.support.v7.app.MediaRouteDevicePickerDialog: int MSG_UPDATE_ROUTES>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector>
<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.widget.ImageButton mCloseButton>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter mAdapter>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.widget.RecyclerView mRecyclerView>
<android.support.v7.app.MediaRouteDevicePickerDialog: boolean mAttachedToWindow>
<android.support.v7.app.MediaRouteDevicePickerDialog: long mUpdateRoutesDelayMs>
<android.support.v7.app.MediaRouteDevicePickerDialog: long mLastUpdateTime>
<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler>
    public void <init>(android.content.Context)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.content.Context r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void <init>(android.content.Context,int)>(r1, 0);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        int i0, $i1, $i2, $i3;
        android.content.Context $r1, r7, r8, r9;
        android.support.v7.media.MediaRouteSelector $r2;
        android.support.v7.app.MediaRouteDevicePickerDialog$1 $r3;
        android.support.v7.media.MediaRouter $r4;
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback $r5;
        android.content.res.Resources $r6;
        long $l4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r7 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.content.Context createThemedDialogContext(android.content.Context,int,boolean)>(r7, i0, 0);

        r8 = $r1;

        $i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int createThemedDialogStyle(android.content.Context)>(r8);

        specialinvoke r0.<android.support.v7.app.AppCompatDialog: void <init>(android.content.Context,int)>($r1, $i1);

        $r2 = <android.support.v7.media.MediaRouteSelector: android.support.v7.media.MediaRouteSelector EMPTY>;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector> = $r2;

        $r3 = new android.support.v7.app.MediaRouteDevicePickerDialog$1;

        specialinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog$1: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)>(r0);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler> = $r3;

        r9 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context getContext()>();

        $r4 = staticinvoke <android.support.v7.media.MediaRouter: android.support.v7.media.MediaRouter getInstance(android.content.Context)>(r9);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter> = $r4;

        $r5 = new android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        specialinvoke $r5.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)>(r0);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback> = $r5;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext> = r9;

        $r6 = virtualinvoke r9.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <android.support.v7.mediarouter.R$integer: int mr_update_routes_delay_ms>;

        $i3 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>($i2);

        $l4 = (long) $i3;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mUpdateRoutesDelayMs> = $l4;

        return;
    }

    public android.support.v7.media.MediaRouteSelector getRouteSelector()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.support.v7.media.MediaRouteSelector $r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector>;

        return $r1;
    }

    public void setRouteSelector(android.support.v7.media.MediaRouteSelector)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.support.v7.media.MediaRouteSelector r1, $r2;
        boolean $z0, $z1;
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback $r3, $r5;
        android.support.v7.media.MediaRouter $r4, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: android.support.v7.media.MediaRouteSelector;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selector must not be null");

        throw $r7;

     label1:
        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector>;

        $z0 = virtualinvoke $r2.<android.support.v7.media.MediaRouteSelector: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector> = r1;

        $z1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: boolean mAttachedToWindow>;

        if $z1 == 0 goto label2;

        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r4.<android.support.v7.media.MediaRouter: void removeCallback(android.support.v7.media.MediaRouter$Callback)>($r3);

        $r6 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>;

        $r5 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r6.<android.support.v7.media.MediaRouter: void addCallback(android.support.v7.media.MediaRouteSelector,android.support.v7.media.MediaRouter$Callback,int)>(r1, $r5, 1);

     label2:
        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void refreshRoutes()>();

     label3:
        return;
    }

    public void onFilterRoutes(java.util.List)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        java.util.List r1;
        java.lang.Object $r2;
        android.support.v7.media.MediaRouter$RouteInfo $r3;
        boolean $z0;
        int i0, $i1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        $i1 = i0;

        i0 = i0 + -1;

        if $i1 <= 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (android.support.v7.media.MediaRouter$RouteInfo) $r2;

        $z0 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: boolean onFilterRoute(android.support.v7.media.MediaRouter$RouteInfo)>($r3);

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        goto label1;

     label2:
        return;
    }

    public boolean onFilterRoute(android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.support.v7.media.MediaRouter$RouteInfo r1;
        boolean $z0, $z1, $z2, $z3;
        android.support.v7.media.MediaRouteSelector $r2;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: android.support.v7.media.MediaRouter$RouteInfo;

        $z0 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: boolean isDefaultOrBluetooth()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector>;

        $z2 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: boolean matchesSelector(android.support.v7.media.MediaRouteSelector)>($r2);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.os.Bundle r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        android.view.View $r3, $r8;
        android.widget.ImageButton $r4, $r6;
        android.support.v7.app.MediaRouteDevicePickerDialog$2 $r5;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter $r7, $r10;
        android.support.v7.widget.RecyclerView $r9, $r11, $r14;
        android.support.v7.widget.LinearLayoutManager $r12;
        android.content.Context $r13;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatDialog: void onCreate(android.os.Bundle)>(r1);

        $i0 = <android.support.v7.mediarouter.R$layout: int mr_picker_dialog>;

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void setContentView(int)>($i0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes> = $r2;

        $i1 = <android.support.v7.mediarouter.R$id: int mr_picker_close_button>;

        $r3 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.view.View findViewById(int)>($i1);

        $r4 = (android.widget.ImageButton) $r3;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.widget.ImageButton mCloseButton> = $r4;

        $r6 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.widget.ImageButton mCloseButton>;

        $r5 = new android.support.v7.app.MediaRouteDevicePickerDialog$2;

        specialinvoke $r5.<android.support.v7.app.MediaRouteDevicePickerDialog$2: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)>(r0);

        virtualinvoke $r6.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        $r7 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        specialinvoke $r7.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)>(r0);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter mAdapter> = $r7;

        $i2 = <android.support.v7.mediarouter.R$id: int mr_picker_list>;

        $r8 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.view.View findViewById(int)>($i2);

        $r9 = (android.support.v7.widget.RecyclerView) $r8;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.widget.RecyclerView mRecyclerView> = $r9;

        $r11 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r10 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter mAdapter>;

        virtualinvoke $r11.<android.support.v7.widget.RecyclerView: void setAdapter(android.support.v7.widget.RecyclerView$Adapter)>($r10);

        $r14 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r12 = new android.support.v7.widget.LinearLayoutManager;

        $r13 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        specialinvoke $r12.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context)>($r13);

        virtualinvoke $r14.<android.support.v7.widget.RecyclerView: void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)>($r12);

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void updateLayout()>();

        return;
    }

    void updateLayout()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.view.Window $r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        $r1 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setLayout(int,int)>(-1, -1);

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback $r1;
        android.support.v7.media.MediaRouteSelector $r2;
        android.support.v7.media.MediaRouter $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        specialinvoke r0.<android.support.v7.app.AppCompatDialog: void onAttachedToWindow()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: boolean mAttachedToWindow> = 1;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouteSelector mSelector>;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r3.<android.support.v7.media.MediaRouter: void addCallback(android.support.v7.media.MediaRouteSelector,android.support.v7.media.MediaRouter$Callback,int)>($r2, $r1, 1);

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void refreshRoutes()>();

        return;
    }

    public void onDetachedFromWindow()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback $r1;
        android.support.v7.media.MediaRouter $r2;
        android.os.Handler $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        specialinvoke r0.<android.support.v7.app.AppCompatDialog: void onDetachedFromWindow()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: boolean mAttachedToWindow> = 0;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback mCallback>;

        virtualinvoke $r2.<android.support.v7.media.MediaRouter: void removeCallback(android.support.v7.media.MediaRouter$Callback)>($r1);

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(1);

        return;
    }

    public void refreshRoutes()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        java.util.ArrayList r1, $r2;
        boolean $z0;
        android.support.v7.media.MediaRouter $r3;
        java.util.List $r4;
        android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator $r5;
        long $l0, $l1, $l2, $l3, $l5, $l6, $l7;
        byte $b4;
        android.os.Handler $r6, $r7, $r8;
        android.os.Message $r9;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        $z0 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: boolean mAttachedToWindow>;

        if $z0 == 0 goto label2;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.media.MediaRouter mRouter>;

        $r4 = virtualinvoke $r3.<android.support.v7.media.MediaRouter: java.util.List getRoutes()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r1 = $r2;

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void onFilterRoutes(java.util.List)>(r1);

        $r5 = <android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator sInstance>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r5);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mLastUpdateTime>;

        $l3 = $l0 - $l1;

        $l2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mUpdateRoutesDelayMs>;

        $b4 = $l3 cmp $l2;

        if $b4 < 0 goto label1;

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog: void updateRoutes(java.util.List)>(r1);

        goto label2;

     label1:
        $r6 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(1);

        $r8 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler>;

        $r7 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        $l6 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mLastUpdateTime>;

        $l5 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mUpdateRoutesDelayMs>;

        $l7 = $l6 + $l5;

        virtualinvoke $r8.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r9, $l7);

     label2:
        return;
    }

    void updateRoutes(java.util.List)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog r0;
        java.util.List r1, $r2, $r3;
        long $l0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter $r4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog;

        r1 := @parameter0: java.util.List;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog: long mLastUpdateTime> = $l0;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter mAdapter>;

        virtualinvoke $r4.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: void setItems()>();

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$1
<android.support.v7.app.MediaRouteDevicePickerDialog$1: android.support.v7.app.MediaRouteDevicePickerDialog this$0>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$1 r0;
        android.support.v7.app.MediaRouteDevicePickerDialog r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$1;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$1: android.support.v7.app.MediaRouteDevicePickerDialog this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$1 r0;
        android.os.Message r1;
        int $i0;
        java.lang.Object $r2;
        java.util.List $r3;
        android.support.v7.app.MediaRouteDevicePickerDialog $r4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$1;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$1: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (java.util.List) $r2;

        virtualinvoke $r4.<android.support.v7.app.MediaRouteDevicePickerDialog: void updateRoutes(java.util.List)>($r3);

     label2:
        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$2
<android.support.v7.app.MediaRouteDevicePickerDialog$2: android.support.v7.app.MediaRouteDevicePickerDialog this$0>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$2 r0;
        android.support.v7.app.MediaRouteDevicePickerDialog r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$2;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$2: android.support.v7.app.MediaRouteDevicePickerDialog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$2 r0;
        android.view.View r1;
        android.support.v7.app.MediaRouteDevicePickerDialog $r2;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$2;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$2: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        virtualinvoke $r2.<android.support.v7.app.MediaRouteDevicePickerDialog: void dismiss()>();

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback
<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback r0;
        android.support.v7.app.MediaRouteDevicePickerDialog r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0> = r1;

        specialinvoke r0.<android.support.v7.media.MediaRouter$Callback: void <init>()>();

        return;
    }

    public void onRouteAdded(android.support.v7.media.MediaRouter, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback r0;
        android.support.v7.media.MediaRouter r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        android.support.v7.app.MediaRouteDevicePickerDialog $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        r1 := @parameter0: android.support.v7.media.MediaRouter;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog: void refreshRoutes()>();

        return;
    }

    public void onRouteRemoved(android.support.v7.media.MediaRouter, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback r0;
        android.support.v7.media.MediaRouter r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        android.support.v7.app.MediaRouteDevicePickerDialog $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        r1 := @parameter0: android.support.v7.media.MediaRouter;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog: void refreshRoutes()>();

        return;
    }

    public void onRouteChanged(android.support.v7.media.MediaRouter, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback r0;
        android.support.v7.media.MediaRouter r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        android.support.v7.app.MediaRouteDevicePickerDialog $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        r1 := @parameter0: android.support.v7.media.MediaRouter;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog: void refreshRoutes()>();

        return;
    }

    public void onRouteSelected(android.support.v7.media.MediaRouter, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback r0;
        android.support.v7.media.MediaRouter r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        android.support.v7.app.MediaRouteDevicePickerDialog $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback;

        r1 := @parameter0: android.support.v7.media.MediaRouter;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$MediaRouterCallback: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog: void dismiss()>();

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter, android.view.View)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r1;
        android.view.View r2, $r3;
        int $i0;
        android.widget.TextView $r4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>(r2);

        $i0 = <android.support.v7.mediarouter.R$id: int mr_dialog_header_name>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (android.widget.TextView) $r3;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView> = $r4;

        return;
    }

    public void binHeaderView(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r1;
        java.lang.String r2;
        java.lang.Object $r3;
        android.widget.TextView $r4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $r3 = virtualinvoke r1.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: android.widget.TextView mTextView>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: java.lang.Object mData>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int mType>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter, java.lang.Object)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r1;
        java.lang.Object r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r2 := @parameter1: java.lang.Object;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: java.lang.Object mData> = r2;

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int mType> = 1;

        goto label3;

     label1:
        $z1 = r2 instanceof android.support.v7.media.MediaRouter$RouteInfo;

        if $z1 == 0 goto label2;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int mType> = 2;

        goto label3;

     label2:
        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int mType> = 0;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerAdapter", "Wrong type of data passed to Item constructor");

     label3:
        return;
    }

    public java.lang.Object getData()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r0;
        java.lang.Object $r1;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: java.lang.Object mData>;

        return $r1;
    }

    public int getType()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r0;
        int $i0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $i0 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int mType>;

        return $i0;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: android.support.v7.media.MediaRouter$RouteInfo val$route>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder this$2>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1 r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder this$2> = r1;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: android.support.v7.media.MediaRouter$RouteInfo val$route> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1 r0;
        android.view.View r1;
        android.support.v7.media.MediaRouter$RouteInfo $r2;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: android.support.v7.media.MediaRouter$RouteInfo val$route>;

        virtualinvoke $r2.<android.support.v7.media.MediaRouter$RouteInfo: void select()>();

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter, android.view.View)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r1;
        android.view.View r2, $r3, $r5;
        int $i0, $i1;
        android.widget.TextView $r4;
        android.widget.ImageView $r6;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r2 := @parameter1: android.view.View;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1> = r1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>(r2);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView> = r2;

        $i0 = <android.support.v7.mediarouter.R$id: int mr_picker_route_name>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (android.widget.TextView) $r3;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView> = $r4;

        $i1 = <android.support.v7.mediarouter.R$id: int mr_picker_route_icon>;

        $r5 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>($i1);

        $r6 = (android.widget.ImageView) $r5;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView> = $r6;

        return;
    }

    public void bindRouteView(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder r0;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        java.lang.Object $r3;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1 $r4;
        android.view.View $r5;
        android.widget.TextView $r6;
        java.lang.String $r7;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter $r8;
        android.widget.ImageView $r9;
        android.graphics.drawable.Drawable $r10;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $r3 = virtualinvoke r1.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: java.lang.Object getData()>();

        r2 = (android.support.v7.media.MediaRouter$RouteInfo) $r3;

        $r5 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.view.View mItemView>;

        $r4 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1;

        specialinvoke $r4.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder$1: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder,android.support.v7.media.MediaRouter$RouteInfo)>(r0, r2);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r4);

        $r6 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.TextView mTextView>;

        $r7 = virtualinvoke r2.<android.support.v7.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $r9 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.widget.ImageView mImageView>;

        $r8 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter this$1>;

        $r10 = virtualinvoke $r8.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable getIconDrawable(android.support.v7.media.MediaRouter$RouteInfo)>(r2);

        virtualinvoke $r9.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r10);

        return;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.lang.String TAG>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon>
<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>
    void <init>(android.support.v7.app.MediaRouteDevicePickerDialog)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        android.support.v7.app.MediaRouteDevicePickerDialog r1;
        android.content.Context $r2, $r4, $r6, $r8, $r10;
        android.view.LayoutInflater $r3;
        android.graphics.drawable.Drawable $r5, $r7, $r9, $r11;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r1 := @parameter0: android.support.v7.app.MediaRouteDevicePickerDialog;

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0> = r1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$Adapter: void <init>()>();

        $r2 = r1.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater> = $r3;

        $r4 = r1.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r5 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDefaultDrawableIcon(android.content.Context)>($r4);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon> = $r5;

        $r6 = r1.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r7 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getTvDrawableIcon(android.content.Context)>($r6);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon> = $r7;

        $r8 = r1.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r9 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getSpeakerDrawableIcon(android.content.Context)>($r8);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon> = $r9;

        $r10 = r1.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r11 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getSpeakerGropuIcon(android.content.Context)>($r10);

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon> = $r11;

        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: void setItems()>();

        return;
    }

    void setItems()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        java.util.ArrayList r1, $r2, $r3, $r9, $r16, $r20, $r23;
        android.support.v7.app.MediaRouteDevicePickerDialog $r4, $r7, $r11, $r14, $r24, $r27;
        java.util.List $r5, $r12, $r25, $r28;
        int $i0, $i1, $i2, i3;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item $r6, $r13, $r19, $r22;
        android.content.Context $r8, $r15;
        java.lang.String $r10, $r17;
        boolean $z1, $z3, $z6;
        java.lang.Object $r18, $r21, $r26;
        android.support.v7.media.MediaRouter$RouteInfo r30, r32, r34;
        java.util.Iterator r31, r33;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r5 = $r4.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $r24 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r25 = $r24.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i3);

        r30 = (android.support.v7.media.MediaRouter$RouteInfo) $r26;

        $z6 = r30 instanceof android.support.v7.media.MediaRouter$RouteGroup;

        if $z6 == 0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        $r27 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r28 = $r27.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        interfaceinvoke $r28.<java.util.List: java.lang.Object remove(int)>(i3);

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        $r9 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r6 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $r7 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r8 = $r7.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $i1 = <android.support.v7.mediarouter.R$string: int mr_dialog_device_header>;

        $r10 = virtualinvoke $r8.<android.content.Context: java.lang.String getString(int)>($i1);

        specialinvoke $r6.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,java.lang.Object)>(r0, $r10);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r11 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r12 = $r11.<android.support.v7.app.MediaRouteDevicePickerDialog: java.util.List mRoutes>;

        r31 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r21 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (android.support.v7.media.MediaRouter$RouteInfo) $r21;

        $r23 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r22 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        specialinvoke $r22.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,java.lang.Object)>(r0, r32);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label4;

     label5:
        $r16 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r13 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        $r14 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r15 = $r14.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $i2 = <android.support.v7.mediarouter.R$string: int mr_dialog_route_header>;

        $r17 = virtualinvoke $r15.<android.content.Context: java.lang.String getString(int)>($i2);

        specialinvoke $r13.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,java.lang.Object)>(r0, $r17);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        r33 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r18 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (android.support.v7.media.MediaRouter$RouteInfo) $r18;

        $r20 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r19 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item;

        specialinvoke $r19.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,java.lang.Object)>(r0, r34);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        goto label6;

     label7:
        virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: void notifyDataSetChanged()>();

        return;
    }

    public android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        android.view.ViewGroup r1;
        int i0, $i1, $i2;
        android.view.LayoutInflater $r2, $r4;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder $r3;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder $r5;
        android.view.View r6, r7;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i2 = <android.support.v7.mediarouter.R$layout: int mr_dialog_header_item>;

        r6 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i2, r1, 0);

        $r5 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder;

        specialinvoke $r5.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,android.view.View)>(r0, r6);

        return $r5;

     label2:
        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.view.LayoutInflater mInflater>;

        $i1 = <android.support.v7.mediarouter.R$layout: int mr_picker_route_item>;

        r7 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r1, 0);

        $r3 = new android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder;

        specialinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: void <init>(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter,android.view.View)>(r0, r7);

        return $r3;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerAdapter", "Cannot create ViewHolder because of wrong view type");

        return null;
    }

    public void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder, int)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        android.support.v7.widget.RecyclerView$ViewHolder r1;
        int i0, i1;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item r2;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder $r3;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder $r4;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: int getItemViewType(int)>(i0);

        r2 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item getItem(int)>(i0);

        lookupswitch(i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = (android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder) r1;

        virtualinvoke $r4.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$HeaderViewHolder: void binHeaderView(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item)>(r2);

        goto label4;

     label2:
        $r3 = (android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder) r1;

        virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$RouteViewHolder: void bindRouteView(android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item)>(r2);

        goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerAdapter", "Cannot bind item to ViewHolder because of wrong view type");

     label4:
        return;
    }

    public int getItemCount()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    android.graphics.drawable.Drawable getIconDrawable(android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        android.support.v7.media.MediaRouter$RouteInfo r1;
        android.net.Uri r2;
        android.graphics.drawable.Drawable r3, $r14;
        android.support.v7.app.MediaRouteDevicePickerDialog $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7, r13;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        java.io.InputStream r12;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r1 := @parameter0: android.support.v7.media.MediaRouter$RouteInfo;

        r2 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: android.net.Uri getIconUri()>();

        if r2 == null goto label5;

     label1:
        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.support.v7.app.MediaRouteDevicePickerDialog this$0>;

        $r5 = $r4.<android.support.v7.app.MediaRouteDevicePickerDialog: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = virtualinvoke $r6.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r2);

        r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r12, null);

        if r3 == null goto label3;

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r13 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RecyclerAdapter", $r11, r13);

     label5:
        $r14 = specialinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable getDefaultIconDrawable(android.support.v7.media.MediaRouter$RouteInfo)>(r1);

        return $r14;

        catch java.io.IOException from label1 to label2 with label4;
    }

    private android.graphics.drawable.Drawable getDefaultIconDrawable(android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        android.support.v7.media.MediaRouter$RouteInfo r1;
        int $i0;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        r1 := @parameter0: android.support.v7.media.MediaRouter$RouteInfo;

        $i0 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: int getDeviceType()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mTvIcon>;

        return $r3;

     label2:
        $r2 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerIcon>;

        return $r2;

     label3:
        $z0 = r1 instanceof android.support.v7.media.MediaRouter$RouteGroup;

        if $z0 == 0 goto label4;

        $r5 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mSpeakerGroupIcon>;

        return $r5;

     label4:
        $r4 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: android.graphics.drawable.Drawable mDefaultIcon>;

        return $r4;
    }

    public int getItemViewType(int)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item) $r2;

        $i1 = virtualinvoke $r3.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item: int getType()>();

        return $i1;
    }

    public android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item getItem(int)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item $r3;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.support.v7.app.MediaRouteDevicePickerDialog$RecyclerAdapter$Item) $r2;

        return $r3;
    }

android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator
<android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator sInstance>
    void <init>()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator r0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.support.v7.media.MediaRouter$RouteInfo, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator r0;
        android.support.v7.media.MediaRouter$RouteInfo r1, r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator;

        r1 := @parameter0: android.support.v7.media.MediaRouter$RouteInfo;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        $r3 = virtualinvoke r1.<android.support.v7.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<android.support.v7.media.MediaRouter$RouteInfo: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r4);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator r0;
        java.lang.Object r1, r2;
        android.support.v7.media.MediaRouter$RouteInfo $r3, $r4;
        int $i0;

        r0 := @this: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.support.v7.media.MediaRouter$RouteInfo) r1;

        $r3 = (android.support.v7.media.MediaRouter$RouteInfo) r2;

        $i0 = virtualinvoke r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator: int compare(android.support.v7.media.MediaRouter$RouteInfo,android.support.v7.media.MediaRouter$RouteInfo)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator $r0;

        $r0 = new android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator;

        specialinvoke $r0.<android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator: void <init>()>();

        <android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator: android.support.v7.app.MediaRouteDevicePickerDialog$RouteComparator sInstance> = $r0;

        return;
    }

