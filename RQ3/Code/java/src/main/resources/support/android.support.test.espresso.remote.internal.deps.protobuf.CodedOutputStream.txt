android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean serializationDeterministic>
    static int computePreferredBufferSize(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 <= 4096 goto label1;

        return 4096;

     label1:
        return i0;
    }

    public static android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder $r1;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $r1 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void <init>(java.io.OutputStream,int)>(r0, i0);

        return $r1;
    }

    public static android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        specialinvoke $r1.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    boolean isSerializationDeterministic()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        $z0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean serializationDeterministic>;

        return $z0;
    }

    private void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.ByteOutput: void <init>()>();

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32(int,int)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32(int,int)>
    public final void writeSInt32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32(int,int)>(i0, $i2);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>
    public final void writeSFixed32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, i1);

        return;
    }

    public final void writeInt64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, l1);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>
    public final void writeSInt64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1, $l2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, $l2);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>
    public final void writeSFixed64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, l1);

        return;
    }

    public final void writeFloat(int, float) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, $i1;
        float f0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, $i1);

        return;
    }

    public final void writeDouble(int, double) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        double d0;
        long $l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, $l1);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBool(int,boolean)>
    public final void writeEnum(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32(int,int)>(i0, i1);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBytes(int,android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessage(int,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessageSetExtension(int,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeRawMessageSetExtension(int,android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32NoTag(int)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>
    public final void writeSInt32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0, $i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i1);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>
    public final void writeSFixed32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>(i0);

        return;
    }

    public final void writeInt64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>(l0);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>
    public final void writeSInt64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0, $l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l1);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>
    public final void writeSFixed64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>(l0);

        return;
    }

    public final void writeFloatNoTag(float) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        float f0;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeDoubleNoTag(double) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        double d0;
        long $l0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeBoolNoTag(boolean) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        boolean z0, $z1;
        byte $b0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void write(byte)>($b0);

        return;
    }

    public final void writeEnumNoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeInt32NoTag(int)>(i0);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeStringNoTag(java.lang.String)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeBytesNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>
    public final void writeByteArrayNoTag(byte[]) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>(r1, 0, $i0);

        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void write(byte)>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>
    public static int computeInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFloatSize(int, float)
    {
        int i0, $i1, $i2, $i3;
        float f0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>(f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSize(int, double)
    {
        int i0, $i1, $i2, $i3;
        double d0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>(d0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBoolSize(int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>(z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeEnumSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSize(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        int i0, $i1, $i2, $i3;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBytesSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeLazyFieldSize(int, android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        int i0, $i1, $i2, $i3;
        android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSize(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    static int computeMessageSize(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        int i0, $i1, $i2, $i3;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r0, r1);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSetExtensionSize(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeMessageSize(int,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeRawMessageSetExtensionSize(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeBytesSize(int,android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeLazyFieldMessageSetExtensionSize(int, android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLazyFieldSize(int,android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeTagSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, 0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        return $i1;

     label1:
        return 10;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & -16384;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = i0 & -2097152;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = i0 & -268435456;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l0);

        return $i1;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long $l0, $l3, $l5, $l7, l9;
        byte $b1, $b2, $b4, $b6, $b8;
        int i10;

        l9 := @parameter0: long;

        $l0 = l9 & -128L;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        $b2 = l9 cmp 0L;

        if $b2 >= 0 goto label2;

        return 10;

     label2:
        i10 = 2;

        $l3 = l9 & -34359738368L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label3;

        i10 = i10 + 4;

        l9 = l9 >>> 28;

     label3:
        $l5 = l9 & -2097152L;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label4;

        i10 = i10 + 2;

        l9 = l9 >>> 14;

     label4:
        $l7 = l9 & -16384L;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label5;

        i10 = i10 + 1;

     label5:
        return i10;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i2;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float f0;

        f0 := @parameter0: float;

        return 4;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double d0;

        d0 := @parameter0: double;

        return 8;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i0);

        return $i1;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        java.lang.String r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException r1, $r3;
        byte[] r2;
        int $i0, i1;
        java.nio.charset.Charset $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        i1 = lengthof r2;

     label4:
        $i0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>(i1);

        return $i0;

        catch android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label3;
    }

    public static int computeLazyFieldSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite r0;
        int $i0, $i1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite;

        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.LazyFieldLite: int getSerializedSize()>();

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeBytesSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        int $i0, $i1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeMessageSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        int $i0, $i1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeMessageSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r1;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r2;
        int $i0, $i1;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $r2 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r1);

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeLengthDelimitedFieldSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int encodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 << 1;

        $i1 = i0 >> 31;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

    public static long encodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3;

        l0 := @parameter0: long;

        $l2 = l0 << 1;

        $l1 = l0 >> 63;

        $l3 = $l2 ^ $l1;

        return $l3;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void flush()>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int spaceLeft()>
    public final void checkNoSpaceLeft()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        $i0 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int spaceLeft()>();

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;

     label1:
        return;
    }

<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>
    final void inefficientWriteStringNoTag(java.lang.String, android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        java.lang.String r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException r2;
        byte[] r3;
        java.util.logging.Level $r4;
        java.util.logging.Logger $r5;
        java.nio.charset.Charset $r6;
        int $i0, $i1;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException $r7, $r9, r11;
        java.lang.Throwable $r8, r10;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException;

        $r5 = <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger>;

        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", r2);

        $r6 = <android.support.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

     label1:
        $i0 = lengthof r3;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        $i1 = lengthof r3;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>(r3, 0, $i1);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r9.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

     label4:
        $r7 := @caughtexception;

        r11 = $r7;

        throw r11;

     label5:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException from label1 to label2 with label4;
    }

    public final void writeGroup(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeGroupNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    final void writeGroup(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeGroupNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r1, r2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    public final void writeGroupNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    final void writeGroupNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r3);

        return;
    }

    static int computeGroupSize(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        int i0, $i1, $i2, $i3, $i4;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeGroupSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r0, r1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeGroupSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        int $i0;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        return $i0;
    }

    static int computeGroupSizeNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r0;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r1;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r2;
        int $i0;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $r2 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r1);

        return $i0;
    }

    public final void writeRawVarint32(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>(i0);

        return;
    }

    public static int computeRawVarint32Size(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        return $i1;
    }

    void <init>(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream r0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1 r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>()>();

        return;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        $r0 = class "Landroid/support/test/espresso/remote/internal/deps/protobuf/CodedOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: java.util.logging.Logger logger> = $r2;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z0;

        return;
    }

android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1
android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>
    void <init>(int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0, $i1, $i2;
        byte[] $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1)>(null);

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be >= 0");

        throw $r3;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 20);

        $r1 = newarray (byte)[$i1];

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer> = $r1;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i2 = lengthof $r2;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit> = $i2;

        return;
    }

    public final int spaceLeft()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array or ByteBuffer.");

        throw $r1;
    }

    final void buffer(byte)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        byte b0;
        int $i1, $i2, $i3, $i4;
        byte[] $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        b0 := @parameter0: byte;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $r1[$i1] = b0;

        $i3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i4 = $i3 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i4;

        return;
    }

    final void bufferTag(int, int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0, i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>($i2);

        return;
    }

    final void bufferInt32NoTag(int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0;
        long $l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>(i0);

        goto label2;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt64NoTag(long)>($l1);

     label2:
        return;
    }

    final void bufferUInt32NoTag(int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l22, $l26, $l28, $l29;
        int i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i23, $i24, $i27, $i30, $i31, i32;
        boolean $z0;
        byte[] $r1, $r2, $r3, $r4;
        byte $b7, $b12, $b21, $b25;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i32 := @parameter0: int;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label4;

        $i15 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        l0 = (long) $i15;

     label1:
        $i16 = i32 & -128;

        if $i16 != 0 goto label2;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i23 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i24 = $i23 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i24;

        $l26 = (long) $i23;

        $b25 = (byte) i32;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r4, $l26, $b25);

        goto label3;

     label2:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i17 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i18 = $i17 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i18;

        $l22 = (long) $i17;

        $i19 = i32 & 127;

        $i20 = $i19 | 128;

        $b21 = (byte) $i20;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r3, $l22, $b21);

        i32 = i32 >>> 7;

        goto label1;

     label3:
        $i27 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $l28 = (long) $i27;

        $l29 = $l28 - l0;

        i1 = (int) $l29;

        $i30 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i31 = $i30 + i1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i31;

        goto label6;

     label4:
        $i2 = i32 & -128;

        if $i2 != 0 goto label5;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i11;

        $b12 = (byte) i32;

        $r2[$i10] = $b12;

        $i13 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i14 = $i13 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i14;

        return;

     label5:
        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i4 = $i3 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i4;

        $i5 = i32 & 127;

        $i6 = $i5 | 128;

        $b7 = (byte) $i6;

        $r1[$i3] = $b7;

        $i8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i9 = $i8 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i9;

        i32 = i32 >>> 7;

        goto label4;

     label6:
        return;
    }

    final void bufferUInt64NoTag(long)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l2, $l19, $l27, $l32, $l34, $l35, l38;
        int i1, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i30, $i33, $i36, $i37;
        boolean $z0;
        byte $b3, $b9, $b15, $b20, $b26, $b31;
        byte[] $r1, $r2, $r3, $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        l38 := @parameter0: long;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label4;

        $i18 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        l0 = (long) $i18;

     label1:
        $l19 = l38 & -128L;

        $b20 = $l19 cmp 0L;

        if $b20 != 0 goto label2;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i28 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i29 = $i28 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i29;

        $l32 = (long) $i28;

        $i30 = (int) l38;

        $b31 = (byte) $i30;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r4, $l32, $b31);

        goto label3;

     label2:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i21 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i22 = $i21 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i22;

        $l27 = (long) $i21;

        $i23 = (int) l38;

        $i24 = $i23 & 127;

        $i25 = $i24 | 128;

        $b26 = (byte) $i25;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r3, $l27, $b26);

        l38 = l38 >>> 7;

        goto label1;

     label3:
        $i33 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $l34 = (long) $i33;

        $l35 = $l34 - l0;

        i1 = (int) $l35;

        $i36 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i37 = $i36 + i1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i37;

        goto label6;

     label4:
        $l2 = l38 & -128L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label5;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i12 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i13 = $i12 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i13;

        $i14 = (int) l38;

        $b15 = (byte) $i14;

        $r2[$i12] = $b15;

        $i16 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i17 = $i16 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i17;

        return;

     label5:
        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i5 = $i4 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i5;

        $i6 = (int) l38;

        $i7 = $i6 & 127;

        $i8 = $i7 | 128;

        $b9 = (byte) $i8;

        $r1[$i4] = $b9;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i11;

        l38 = l38 >>> 7;

        goto label4;

     label6:
        return;
    }

    final void bufferFixed32NoTag(int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21;
        byte[] $r1, $r2, $r3, $r4;
        byte $b4, $b9, $b14, $b19;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $i3 = i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i6 = $i5 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i6;

        $i7 = i0 >> 8;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $r2[$i5] = $b9;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i11;

        $i12 = i0 >> 16;

        $i13 = $i12 & 255;

        $b14 = (byte) $i13;

        $r3[$i10] = $b14;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i15 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i16 = $i15 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i16;

        $i17 = i0 >> 24;

        $i18 = $i17 & 255;

        $b19 = (byte) $i18;

        $r4[$i15] = $b19;

        $i20 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i21 = $i20 + 4;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i21;

        return;
    }

    final void bufferFixed64NoTag(long)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder r0;
        long l0, $l3, $l8, $l9, $l14, $l15, $l20, $l21, $l26, $l32, $l38, $l44;
        int $i1, $i2, $i4, $i6, $i7, $i10, $i12, $i13, $i16, $i18, $i19, $i22, $i24, $i25, $i27, $i28, $i30, $i31, $i33, $i34, $i36, $i37, $i39, $i40, $i42, $i43, $i45, $i46, $i48, $i49;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b5, $b11, $b17, $b23, $b29, $b35, $b41, $b47;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $l3 = l0 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i1] = $b5;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i7 = $i6 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i7;

        $l8 = l0 >> 8;

        $l9 = $l8 & 255L;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        $r2[$i6] = $b11;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i12 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i13 = $i12 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i13;

        $l14 = l0 >> 16;

        $l15 = $l14 & 255L;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        $r3[$i12] = $b17;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i18 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i19 = $i18 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i19;

        $l20 = l0 >> 24;

        $l21 = $l20 & 255L;

        $i22 = (int) $l21;

        $b23 = (byte) $i22;

        $r4[$i18] = $b23;

        $r5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i24 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i25 = $i24 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i25;

        $l26 = l0 >> 32;

        $i27 = (int) $l26;

        $i28 = $i27 & 255;

        $b29 = (byte) $i28;

        $r5[$i24] = $b29;

        $r6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i30 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i31 = $i30 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i31;

        $l32 = l0 >> 40;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $b35 = (byte) $i34;

        $r6[$i30] = $b35;

        $r7 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i36 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i37 = $i36 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i37;

        $l38 = l0 >> 48;

        $i39 = (int) $l38;

        $i40 = $i39 & 255;

        $b41 = (byte) $i40;

        $r7[$i36] = $b41;

        $r8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i42 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i43 = $i42 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i43;

        $l44 = l0 >> 56;

        $i45 = (int) $l44;

        $i46 = $i45 & 255;

        $b47 = (byte) $i46;

        $r8[$i42] = $b47;

        $i48 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i49 = $i48 + 8;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i49;

        return;
    }

android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int offset>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>
    void <init>(byte[], int, int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void <init>(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$1)>(null);

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("buffer");

        throw $r8;

     label1:
        $i5 = i0 | i1;

        $i3 = lengthof r1;

        $i2 = i0 + i1;

        $i4 = $i3 - $i2;

        $i6 = $i5 | $i4;

        if $i6 >= 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[3];

        $i8 = lengthof r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Array range is invalid. Buffer.length=%d, offset=%d, length=%d", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer> = r1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int offset> = i0;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        $i7 = i0 + i1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit> = $i7;

        return;
    }

    public final void writeTag(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i2);

        return;
    }

    public final void writeInt32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32NoTag(int)>(i1);

        return;
    }

    public final void writeUInt32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i1);

        return;
    }

    public final void writeFixed32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32NoTag(int)>(i1);

        return;
    }

    public final void writeUInt64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>(l1);

        return;
    }

    public final void writeFixed64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64NoTag(long)>(l1);

        return;
    }

    public final void writeBool(int, boolean) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        boolean z0, $z1;
        byte $b1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b1 = (byte) $z1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte)>($b1);

        return;
    }

    public final void writeString(int, java.lang.String) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public final void writeBytes(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeBytesNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(r1);

        return;
    }

    public final void writeBytesNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.ByteOutput)>(r0);

        return;
    }

    public final void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public final void writeMessage(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        return;
    }

    final void writeMessage(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(i0, 2);

        $r3 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $i1 = virtualinvoke $r3.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r4);

        return;
    }

    public final void writeMessageSetExtension(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeRawMessageSetExtension(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeBytes(int,android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    final void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r3;
        int $i0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $r3 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $i0 = virtualinvoke $r3.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r4);

        return;
    }

    public final void write(byte) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte b0;
        int $i1, $i2;
        byte[] $r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        b0 := @parameter0: byte;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $r1[$i1] = b0;

        goto label1;

     label1:
        return;
    }

    public final void writeInt32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0;
        long $l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i0);

        goto label2;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

     label2:
        return;
    }

    public final void writeUInt32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, i20, $i21;
        byte[] $r1, $r2, $r3, $r4;
        byte $b4, $b7, $b14, $b18;
        long $l15, $l19;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i20 := @parameter0: int;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label3;

        $i8 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i8 < 10 goto label3;

     label1:
        $i9 = i20 & -128;

        if $i9 != 0 goto label2;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i16 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i17 = $i16 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i17;

        $l19 = (long) $i16;

        $b18 = (byte) i20;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r4, $l19, $b18);

        return;

     label2:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i11;

        $l15 = (long) $i10;

        $i12 = i20 & 127;

        $i13 = $i12 | 128;

        $b14 = (byte) $i13;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r3, $l15, $b14);

        i20 = i20 >>> 7;

        goto label1;

     label3:
        $i21 = i20 & -128;

        if $i21 != 0 goto label4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i6 = $i5 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i6;

        $b7 = (byte) i20;

        $r2[$i5] = $b7;

        return;

     label4:
        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = $i0 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i2 = i20 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        $r1[$i0] = $b4;

        i20 = i20 >>> 7;

        goto label3;
    }

    public final void writeFixed32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18;
        byte[] $r1, $r2, $r3, $r4;
        byte $b4, $b9, $b14, $b19;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i3 = i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i6 = $i5 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i6;

        $i7 = i0 >> 8;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $r2[$i5] = $b9;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i11 = $i10 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i11;

        $i12 = i0 >> 16;

        $i13 = $i12 & 255;

        $b14 = (byte) $i13;

        $r3[$i10] = $b14;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i15 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i16 = $i15 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i16;

        $i17 = i0 >> 24;

        $i18 = $i17 & 255;

        $b19 = (byte) $i18;

        $r4[$i15] = $b19;

        goto label1;

     label1:
        return;
    }

    public final void writeUInt64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22;
        byte[] $r1, $r2, $r3, $r4;
        byte $b5, $b9, $b12, $b18, $b23, $b27;
        long $l11, $l19, $l24, l25, $l26;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        l25 := @parameter0: long;

        $z0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: boolean access$100()>();

        if $z0 == 0 goto label3;

        $i10 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i10 < 10 goto label3;

     label1:
        $l11 = l25 & -128L;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label2;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i20 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i21 = $i20 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i21;

        $l24 = (long) $i20;

        $i22 = (int) l25;

        $b23 = (byte) $i22;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r4, $l24, $b23);

        return;

     label2:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i13 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i14 = $i13 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i14;

        $l19 = (long) $i13;

        $i15 = (int) l25;

        $i16 = $i15 & 127;

        $i17 = $i16 | 128;

        $b18 = (byte) $i17;

        staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r3, $l19, $b18);

        l25 = l25 >>> 7;

        goto label1;

     label3:
        $l26 = l25 & -128L;

        $b27 = $l26 cmp 0L;

        if $b27 != 0 goto label4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i7 = $i6 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i7;

        $i8 = (int) l25;

        $b9 = (byte) $i8;

        $r2[$i6] = $b9;

        return;

     label4:
        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i1 = $i0 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i2 = (int) l25;

        $i3 = $i2 & 127;

        $i4 = $i3 | 128;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        l25 = l25 >>> 7;

        goto label3;
    }

    public final void writeFixed64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        long l0, $l8, $l14, $l20, $l26, $l32, $l38, $l44;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i31, $i33, $i34, $i36, $i37, $i39, $i40, $i42, $i43, $i45, $i46;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b5, $b11, $b17, $b23, $b29, $b35, $b41, $b47;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        l0 := @parameter0: long;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i3 = (int) l0;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        $r1[$i1] = $b5;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i7 = $i6 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i7;

        $l8 = l0 >> 8;

        $i9 = (int) $l8;

        $i10 = $i9 & 255;

        $b11 = (byte) $i10;

        $r2[$i6] = $b11;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i12 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i13 = $i12 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i13;

        $l14 = l0 >> 16;

        $i15 = (int) $l14;

        $i16 = $i15 & 255;

        $b17 = (byte) $i16;

        $r3[$i12] = $b17;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i18 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i19 = $i18 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i19;

        $l20 = l0 >> 24;

        $i21 = (int) $l20;

        $i22 = $i21 & 255;

        $b23 = (byte) $i22;

        $r4[$i18] = $b23;

        $r5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i24 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i25 = $i24 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i25;

        $l26 = l0 >> 32;

        $i27 = (int) $l26;

        $i28 = $i27 & 255;

        $b29 = (byte) $i28;

        $r5[$i24] = $b29;

        $r6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i30 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i31 = $i30 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i31;

        $l32 = l0 >> 40;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $b35 = (byte) $i34;

        $r6[$i30] = $b35;

        $r7 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i36 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i37 = $i36 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i37;

        $l38 = l0 >> 48;

        $i39 = (int) $l38;

        $i40 = $i39 & 255;

        $b41 = (byte) $i40;

        $r7[$i36] = $b41;

        $r8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i42 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i43 = $i42 + 1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i43;

        $l44 = l0 >> 56;

        $i45 = (int) $l44;

        $i46 = $i45 & 255;

        $b47 = (byte) $i46;

        $r8[$i42] = $b47;

        goto label1;

     label1:
        return;
    }

    public final void write(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i2, i1);

        $i3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i3 + i1;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        $r6 = newarray (java.lang.Object)[3];

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r6[0] = $r7;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[2] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r6);

        specialinvoke $r5.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2);

        throw $r5;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public final void writeLazy(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public final void write(java.nio.ByteBuffer) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        java.nio.ByteBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Throwable r2, $r5;
        byte[] $r3;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

     label1:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r3, $i1, i0);

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i3 = $i2 + i0;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i3;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        $r7 = newarray (java.lang.Object)[3];

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[0] = $r8;

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[2] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pos: %d, limit: %d, len: %d", $r7);

        specialinvoke $r6.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2);

        throw $r6;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public final void writeLazy(java.nio.ByteBuffer) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        java.nio.ByteBuffer r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void write(java.nio.ByteBuffer)>(r1);

        return;
    }

    public final void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        java.lang.String r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        byte[] $r2, $r3;
        java.lang.Throwable $r4, r8;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException $r5;
        android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException $r6, r7;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        r1 := @parameter0: java.lang.String;

        i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label1:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i13 = $i4 * 3;

        i1 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>(i13);

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>($i5);

        if i2 != i1 goto label2;

        $i9 = i0 + i2;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i9;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i11 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        i14 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r3, $i10, $i11);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        $i12 = i14 - i0;

        i3 = $i12 - i2;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i3);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i14;

        goto label3;

     label2:
        i15 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>(i15);

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i7 = virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        $i8 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r2, $i6, $i7);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i8;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r7 = $r6;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position> = i0;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: void inefficientWriteStringNoTag(java.lang.String,android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException)>(r1, r7);

        goto label6;

     label5:
        $r4 := @caughtexception;

        r8 = $r4;

        $r5 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r5.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r8);

        throw $r5;

     label6:
        return;

        catch android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label1 to label3 with label4;
        catch java.lang.IndexOutOfBoundsException from label1 to label3 with label5;
    }

    public void flush()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        return;
    }

    public final int spaceLeft()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 - $i0;

        return $i2;
    }

android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: long serialVersionUID>
    void <init>()
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space.");

        return;
    }

    void <init>(java.lang.Throwable)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;
        java.lang.Throwable r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("CodedOutputStream was writing to a flat byte array and ran out of space.", r1);

        return;
    }

    void <init>(java.lang.String, java.lang.Throwable)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException r0;
        java.lang.String r1, $r3, $r4, $r6;
        java.lang.Throwable r2;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("CodedOutputStream was writing to a flat byte array and ran out of space.: ");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        goto label2;

     label1:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(java.lang.String)>($r3);

     label2:
        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r2);

        return;
    }

android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder
<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>
    void <init>(java.io.OutputStream, int)
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.io.OutputStream r1;
        int i0;
        java.lang.NullPointerException $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$AbstractBufferedEncoder: void <init>(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("out");

        throw $r2;

     label1:
        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out> = r1;

        return;
    }

    public void writeTag(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i2);

        return;
    }

    public void writeInt32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferInt32NoTag(int)>(i1);

        return;
    }

    public void writeUInt32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i1);

        return;
    }

    public void writeFixed32(int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(14);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 5);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>(i1);

        return;
    }

    public void writeUInt64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>(l1);

        return;
    }

    public void writeFixed64(int, long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(18);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>(l1);

        return;
    }

    public void writeBool(int, boolean) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        boolean z0, $z1;
        byte $b1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(11);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>(i0, 0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b1 = (byte) $z1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>($b1);

        return;
    }

    public void writeString(int, java.lang.String) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public void writeBytes(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytesNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(r1);

        return;
    }

    public void writeBytesNoTag(android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.ByteString: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.ByteOutput)>(r0);

        return;
    }

    public void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeMessage(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(r1);

        return;
    }

    void writeMessage(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter2: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite,android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r1, r2);

        return;
    }

    public void writeMessageSetExtension(int, android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,android.support.test.espresso.remote.internal.deps.protobuf.MessageLite)>(3, r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeRawMessageSetExtension(int, android.support.test.espresso.remote.internal.deps.protobuf.ByteString) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        android.support.test.espresso.remote.internal.deps.protobuf.ByteString r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.ByteString;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, i0);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytes(int,android.support.test.espresso.remote.internal.deps.protobuf.ByteString)>(3, r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $i0 = interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke r1.<android.support.test.espresso.remote.internal.deps.protobuf.MessageLite: void writeTo(android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream)>(r0);

        return;
    }

    void writeMessageNoTag(android.support.test.espresso.remote.internal.deps.protobuf.MessageLite, android.support.test.espresso.remote.internal.deps.protobuf.Schema) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        android.support.test.espresso.remote.internal.deps.protobuf.MessageLite r1;
        android.support.test.espresso.remote.internal.deps.protobuf.Schema r2;
        android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite $r3;
        int $i0;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.protobuf.Schema;

        $r3 = (android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite) r1;

        $i0 = virtualinvoke $r3.<android.support.test.espresso.remote.internal.deps.protobuf.AbstractMessageLite: int getSerializedSize(android.support.test.espresso.remote.internal.deps.protobuf.Schema)>(r2);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<android.support.test.espresso.remote.internal.deps.protobuf.Schema: void writeTo(java.lang.Object,android.support.test.espresso.remote.internal.deps.protobuf.Writer)>(r1, $r4);

        return;
    }

    public void write(byte) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte b0;
        int $i1, $i2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        b0 := @parameter0: byte;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i2 != $i1 goto label1;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>(b0);

        return;
    }

    public void writeInt32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;
        long $l1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i0);

        goto label2;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt64NoTag(long)>($l1);

     label2:
        return;
    }

    public void writeUInt32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(10);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i0);

        return;
    }

    public void writeFixed32NoTag(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(4);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>(i0);

        return;
    }

    public void writeUInt64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        long l0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        l0 := @parameter0: long;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(10);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>(l0);

        return;
    }

    public void writeFixed64NoTag(long) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        long l0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        l0 := @parameter0: long;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(8);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>(l0);

        return;
    }

    public void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, i28;
        byte[] $r2, $r3, r9;
        android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException $r5, $r8, r10, r12;
        java.lang.Throwable $r6, r11;
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException $r7;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.lang.String;

     label01:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i23 = $i1 * 3;

        i0 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>(i23);

        $i3 = i0 + i23;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i3 <= $i2 goto label03;

        r9 = newarray (byte)[i23];

        i24 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, r9, 0, i23);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>(i24);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void writeLazy(byte[],int,int)>(r9, 0, i24);

     label02:
        return;

     label03:
        $i7 = i0 + i23;

        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i6 = $i5 - $i4;

        if $i7 <= $i6 goto label04;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label04:
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        i25 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>($i8);

        i26 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

     label05:
        if i25 != i0 goto label06;

        $i13 = i26 + i25;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i13;

        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i17 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i15 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i14 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i16 = $i15 - $i14;

        i27 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r3, $i17, $i16);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i26;

        $i18 = i27 - i26;

        i28 = $i18 - i25;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i28);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i27;

        goto label07;

     label06:
        i28 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>(i28);

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i9 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i10 = staticinvoke <android.support.test.espresso.remote.internal.deps.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r2, $i9, i28);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i10;

     label07:
        $i11 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i12 = $i11 + i28;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

     label08:
        goto label11;

     label09:
        $r5 := @caughtexception;

        r10 = $r5;

        $i21 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i19 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i20 = $i19 - i26;

        $i22 = $i21 - $i20;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i22;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i26;

        throw r10;

     label10:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = new android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r7.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>(r11);

        throw $r7;

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

        r12 = $r8;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void inefficientWriteStringNoTag(java.lang.String,android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException)>(r1, r12);

     label13:
        return;

        catch android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label05 to label08 with label09;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label08 with label10;
        catch android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label01 to label02 with label12;
        catch android.support.test.espresso.remote.internal.deps.protobuf.Utf8$UnpairedSurrogateException from label03 to label11 with label12;
    }

    public void flush() throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int $i0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1, $r2, $r4, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        java.io.OutputStream $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i18 := @parameter1: int;

        i19 := @parameter2: int;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 < i19 goto label1;

        $r6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i13 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i18, $r6, $i13, i19);

        $i14 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i15 = $i14 + i19;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i15;

        $i16 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i17 = $i16 + i19;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i17;

        goto label4;

     label1:
        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        i0 = $i5 - $i4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i18, $r2, $i6, i0);

        i20 = i18 + i0;

        i21 = i19 - i0;

        $i7 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i7;

        $i8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i9 = $i8 + i0;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i9;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if i21 > $i10 goto label2;

        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r4, 0, i21);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i21;

        goto label3;

     label2:
        $r3 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i20, i21);

     label3:
        $i11 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i12 = $i11 + i21;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

     label4:
        return;
    }

    public void writeLazy(byte[], int, int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(java.nio.ByteBuffer) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.nio.ByteBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        byte[] $r2, $r4, $r6, $r8, $r10;
        java.io.OutputStream $r9;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        i24 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 < i24 goto label1;

        $r10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i19 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r10, $i19, i24);

        $i20 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i21 = $i20 + i24;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i21;

        $i22 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i23 = $i22 + i24;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i23;

        goto label4;

     label1:
        $i5 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        i0 = $i5 - $i4;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r2, $i6, i0);

        i25 = i24 - i0;

        $i7 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i7;

        $i8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i9 = $i8 + i0;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i9;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label2:
        $i10 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if i25 <= $i10 goto label3;

        $r6 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i13 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r6, 0, $i13);

        $r9 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        $r8 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i14 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i14);

        $i15 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        i25 = i25 - $i15;

        $i17 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i16 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i18 = $i17 + $i16;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i18;

        goto label2;

     label3:
        $r4 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r4, 0, i25);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = i25;

        $i11 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i12 = $i11 + i25;

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i12;

     label4:
        return;
    }

    public void writeLazy(java.nio.ByteBuffer) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        java.nio.ByteBuffer r1;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void write(java.nio.ByteBuffer)>(r1);

        return;
    }

    private void flushIfNotAvailable(int) throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        i0 := @parameter0: int;

        $i2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i2 - $i1;

        if $i3 >= i0 goto label1;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        return;
    }

    private void doFlush() throws java.io.IOException
    {
        android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder r0;
        int $i0;
        byte[] $r1;
        java.io.OutputStream $r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r2 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        $r1 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i0 = r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        r0.<android.support.test.espresso.remote.internal.deps.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = 0;

        return;
    }

