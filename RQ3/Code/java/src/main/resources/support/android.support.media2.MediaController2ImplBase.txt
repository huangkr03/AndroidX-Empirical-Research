android.support.media2.MediaController2ImplBase
<android.support.media2.MediaController2ImplBase: java.lang.String TAG>
<android.support.media2.MediaController2ImplBase: boolean DEBUG>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>
<android.support.media2.MediaController2ImplBase: android.content.Context mContext>
<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>
<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>
<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>
<android.support.media2.MediaController2ImplBase: android.os.IBinder$DeathRecipient mDeathRecipient>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection>
<android.support.media2.MediaController2ImplBase: boolean mIsReleased>
<android.support.media2.MediaController2ImplBase: java.util.List mPlaylist>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaMetadata2 mPlaylistMetadata>
<android.support.media2.MediaController2ImplBase: int mRepeatMode>
<android.support.media2.MediaController2ImplBase: int mShuffleMode>
<android.support.media2.MediaController2ImplBase: int mPlayerState>
<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs>
<android.support.media2.MediaController2ImplBase: long mPositionMs>
<android.support.media2.MediaController2ImplBase: float mPlaybackSpeed>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem>
<android.support.media2.MediaController2ImplBase: int mBufferingState>
<android.support.media2.MediaController2ImplBase: long mBufferedPositionMs>
<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>
<android.support.media2.MediaController2ImplBase: android.app.PendingIntent mSessionActivity>
<android.support.media2.MediaController2ImplBase: android.support.media2.SessionCommandGroup2 mAllowedCommands>
<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>
    void <init>(android.content.Context, android.support.media2.MediaController2, android.support.media2.SessionToken2, java.util.concurrent.Executor, android.support.media2.MediaController2$ControllerCallback)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.content.Context r1;
        android.support.media2.MediaController2 r2;
        android.support.media2.SessionToken2 r3, $r10, $r13;
        java.util.concurrent.Executor r4;
        android.support.media2.MediaController2$ControllerCallback r5;
        android.support.media2.IMediaSession2 r6;
        java.lang.Object $r7, $r11;
        android.support.media2.MediaController2Stub $r8;
        android.support.media2.MediaController2ImplBase$1 $r9;
        android.os.IBinder $r12;
        int $i0;
        android.support.media2.MediaController2ImplBase$SessionServiceConnection $r14;
        java.lang.IllegalArgumentException $r15, $r16, $r17, $r18;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.MediaController2;

        r3 := @parameter2: android.support.media2.SessionToken2;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: android.support.media2.MediaController2$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock> = $r7;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance> = r2;

        if r1 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r18;

     label1:
        if r3 != null goto label2;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token shouldn\'t be null");

        throw $r17;

     label2:
        if r5 != null goto label3;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r16;

     label3:
        if r4 != null goto label4;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r15;

     label4:
        r0.<android.support.media2.MediaController2ImplBase: android.content.Context mContext> = r1;

        $r8 = new android.support.media2.MediaController2Stub;

        specialinvoke $r8.<android.support.media2.MediaController2Stub: void <init>(android.support.media2.MediaController2ImplBase)>(r0);

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub> = $r8;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken> = r3;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback> = r5;

        r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor> = r4;

        $r9 = new android.support.media2.MediaController2ImplBase$1;

        specialinvoke $r9.<android.support.media2.MediaController2ImplBase$1: void <init>(android.support.media2.MediaController2ImplBase)>(r0);

        r0.<android.support.media2.MediaController2ImplBase: android.os.IBinder$DeathRecipient mDeathRecipient> = $r9;

        $r10 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r11 = virtualinvoke $r10.<android.support.media2.SessionToken2: java.lang.Object getBinder()>();

        $r12 = (android.os.IBinder) $r11;

        r6 = staticinvoke <android.support.media2.IMediaSession2$Stub: android.support.media2.IMediaSession2 asInterface(android.os.IBinder)>($r12);

        $r13 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $i0 = virtualinvoke $r13.<android.support.media2.SessionToken2: int getType()>();

        if $i0 != 0 goto label5;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection> = null;

        virtualinvoke r0.<android.support.media2.MediaController2ImplBase: void connectToSession(android.support.media2.IMediaSession2)>(r6);

        goto label6;

     label5:
        $r14 = new android.support.media2.MediaController2ImplBase$SessionServiceConnection;

        specialinvoke $r14.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: void <init>(android.support.media2.MediaController2ImplBase)>(r0);

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection> = $r14;

        specialinvoke r0.<android.support.media2.MediaController2ImplBase: void connectToService()>();

     label6:
        return;
    }

    public void close()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r16, $r17, r19;
        boolean $z0, $z1;
        java.lang.Object $r3, r18;
        android.support.media2.MediaController2ImplBase$SessionServiceConnection $r4, $r9;
        android.support.media2.MediaController2Stub $r5, $r8;
        android.os.IBinder $r6;
        android.os.IBinder$DeathRecipient $r7;
        android.content.Context $r10;
        java.lang.StringBuilder $r11, $r12, $r14;
        android.support.media2.SessionToken2 $r13;
        java.lang.String $r15;
        java.util.concurrent.Executor $r20;
        android.support.media2.MediaController2ImplBase$2 $r21;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $z0 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("release from ");

        $r13 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MC2ImplBase", $r15);

     label01:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r18 = $r3;

        entermonitor $r3;

     label02:
        r1 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        $z1 = r0.<android.support.media2.MediaController2ImplBase: boolean mIsReleased>;

        if $z1 == 0 goto label04;

        exitmonitor r18;

     label03:
        return;

     label04:
        r0.<android.support.media2.MediaController2ImplBase: boolean mIsReleased> = 1;

        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection>;

        if $r4 == null goto label05;

        $r10 = r0.<android.support.media2.MediaController2ImplBase: android.content.Context mContext>;

        $r9 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection>;

        virtualinvoke $r10.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r9);

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection> = null;

     label05:
        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2> = null;

        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        virtualinvoke $r5.<android.support.media2.MediaController2Stub: void destroy()>();

        exitmonitor r18;

     label06:
        goto label09;

     label07:
        $r17 := @caughtexception;

        r2 = $r17;

        exitmonitor r18;

     label08:
        throw r2;

     label09:
        if r1 == null goto label13;

     label10:
        $r6 = interfaceinvoke r1.<android.support.media2.IMediaSession2: android.os.IBinder asBinder()>();

        $r7 = r0.<android.support.media2.MediaController2ImplBase: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        $r8 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void release(android.support.media2.IMediaController2)>($r8);

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        r19 = $r16;

     label13:
        $r20 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r21 = new android.support.media2.MediaController2ImplBase$2;

        specialinvoke $r21.<android.support.media2.MediaController2ImplBase$2: void <init>(android.support.media2.MediaController2ImplBase)>(r0);

        interfaceinvoke $r20.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r21);

        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    public android.support.media2.SessionToken2 getSessionToken()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.SessionToken2 $r1;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r1 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        return $r1;
    }

    public boolean isConnected()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.IMediaSession2 $r3;
        boolean $z0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        exitmonitor r1;

        return $z0;
    }

    public void play()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(1);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void play(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pause()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(2);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void pause(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reset()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(3);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void reset(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepare()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(6);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void prepare(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void fastForward()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(7);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void fastForward(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void rewind()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(8);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void rewind(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void seekTo(long)
    {
        android.support.media2.MediaController2ImplBase r0;
        long l0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r5;
        byte $b1;
        android.support.media2.MediaController2Stub $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("position shouldn\'t be negative");

        throw $r4;

     label1:
        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(9);

        if r1 == null goto label5;

     label2:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void seekTo(android.support.media2.IMediaController2,long)>($r3, l0);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void skipForward()
    {
        android.support.media2.MediaController2ImplBase r0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        return;
    }

    public void skipBackward()
    {
        android.support.media2.MediaController2ImplBase r0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        return;
    }

    public void playFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(22);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void playFromMediaId(android.support.media2.IMediaController2,java.lang.String,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(24);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void playFromSearch(android.support.media2.IMediaController2,java.lang.String,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromUri(android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(23);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void playFromUri(android.support.media2.IMediaController2,android.net.Uri,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(25);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void prepareFromMediaId(android.support.media2.IMediaController2,java.lang.String,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromSearch(java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(27);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void prepareFromSearch(android.support.media2.IMediaController2,java.lang.String,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromUri(android.net.Uri, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r6;
        android.support.media2.MediaController2Stub $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(26);

        if r3 == null goto label4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void prepareFromUri(android.support.media2.IMediaController2,android.net.Uri,android.os.Bundle)>($r5, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVolumeTo(int, int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0, i1;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(10);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void setVolumeTo(android.support.media2.IMediaController2,int,int)>($r3, i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void adjustVolume(int, int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0, i1;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(11);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void adjustVolume(android.support.media2.IMediaController2,int,int)>($r3, i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        android.app.PendingIntent $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.app.PendingIntent mSessionActivity>;

        exitmonitor r1;

        return $r3;
    }

    public int getPlayerState()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<android.support.media2.MediaController2ImplBase: int mPlayerState>;

        exitmonitor r1;

        return $i0;
    }

    public long getDuration()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r4;
        android.support.media2.MediaMetadata2 r2, $r8;
        java.lang.Throwable r3, $r7;
        android.support.media2.MediaItem2 $r5, $r6;
        boolean $z0;
        long $l0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem>;

        if $r5 != null goto label2;

        $r8 = null;

        goto label3;

     label2:
        $r6 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem>;

        $r8 = virtualinvoke $r6.<android.support.media2.MediaItem2: android.support.media2.MediaMetadata2 getMetadata()>();

     label3:
        r2 = $r8;

        if r2 == null goto label5;

        $z0 = virtualinvoke r2.<android.support.media2.MediaMetadata2: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label5;

        $l0 = virtualinvoke r2.<android.support.media2.MediaMetadata2: long getLong(java.lang.String)>("android.media.metadata.DURATION");

        exitmonitor r1;

     label4:
        return $l0;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return -1L;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public long getCurrentPosition()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r3;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l8;
        java.lang.Throwable r2, $r10;
        android.support.media2.IMediaSession2 $r4;
        android.support.media2.MediaController2 $r5, $r7;
        java.lang.Long $r6, $r8;
        float $f0, $f1, $f2;
        java.lang.IllegalStateException $r9;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r4 != null goto label3;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Session isn\'t active", $r9);

        exitmonitor r1;

     label2:
        return -1L;

     label3:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r6 = $r5.<android.support.media2.MediaController2: java.lang.Long mTimeDiff>;

        if $r6 == null goto label4;

        $r7 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r8 = $r7.<android.support.media2.MediaController2: java.lang.Long mTimeDiff>;

        $l8 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        goto label5;

     label4:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = r0.<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs>;

        $l8 = $l2 - $l3;

     label5:
        l0 = $l8;

        $l5 = r0.<android.support.media2.MediaController2ImplBase: long mPositionMs>;

        $f1 = r0.<android.support.media2.MediaController2ImplBase: float mPlaybackSpeed>;

        $f0 = (float) l0;

        $f2 = $f1 * $f0;

        $l4 = (long) $f2;

        l1 = $l5 + $l4;

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l1);

        exitmonitor r1;

     label6:
        return $l6;

     label7:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public float getPlaybackSpeed()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.support.media2.IMediaSession2 $r4;
        float $f0;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r4 != null goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Session isn\'t active", $r5);

        exitmonitor r1;

     label2:
        return 0.0F;

     label3:
        $f0 = r0.<android.support.media2.MediaController2ImplBase: float mPlaybackSpeed>;

        exitmonitor r1;

     label4:
        return $f0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setPlaybackSpeed(float)
    {
        android.support.media2.MediaController2ImplBase r0;
        float f0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        f0 := @parameter0: float;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(39);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void setPlaybackSpeed(android.support.media2.IMediaController2,float)>($r3, f0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getBufferingState()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.support.media2.IMediaSession2 $r4;
        int $i0;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r4 != null goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Session isn\'t active", $r5);

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $i0 = r0.<android.support.media2.MediaController2ImplBase: int mBufferingState>;

        exitmonitor r1;

     label4:
        return $i0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getBufferedPosition()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.support.media2.IMediaSession2 $r4;
        long $l0;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r4 != null goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Session isn\'t active", $r5);

        exitmonitor r1;

     label2:
        return -1L;

     label3:
        $l0 = r0.<android.support.media2.MediaController2ImplBase: long mBufferedPositionMs>;

        exitmonitor r1;

     label4:
        return $l0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2$PlaybackInfo $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>;

        exitmonitor r1;

        return $r3;
    }

    public void setRating(java.lang.String, android.support.media2.Rating2)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.String r1;
        android.support.media2.Rating2 r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Object $r4, r9;
        android.support.media2.MediaController2Stub $r5;
        android.os.Parcelable $r6;
        androidx.versionedparcelable.ParcelImpl $r7;
        java.lang.Throwable $r8, r10;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.media2.Rating2;

        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r9 = $r4;

        entermonitor $r4;

        r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        exitmonitor r9;

        goto label1;

     label1:
        if r3 == null goto label5;

     label2:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r6 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r2);

        $r7 = (androidx.versionedparcelable.ParcelImpl) $r6;

        interfaceinvoke r3.<android.support.media2.IMediaSession2: void setRating(android.support.media2.IMediaController2,java.lang.String,androidx.versionedparcelable.ParcelImpl)>($r5, r1, $r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r10);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void sendCustomCommand(android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.SessionCommand2 r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        android.support.media2.IMediaSession2 r4;
        java.lang.Throwable r5, $r9;
        android.support.media2.MediaController2Stub $r6;
        android.os.Parcelable $r7;
        androidx.versionedparcelable.ParcelImpl $r8;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        r4 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(android.support.media2.SessionCommand2)>(r1);

        if r4 == null goto label4;

     label1:
        $r6 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r7 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r1);

        $r8 = (androidx.versionedparcelable.ParcelImpl) $r7;

        interfaceinvoke r4.<android.support.media2.IMediaSession2: void sendCustomCommand(android.support.media2.IMediaController2,androidx.versionedparcelable.ParcelImpl,android.os.Bundle,android.os.ResultReceiver)>($r6, $r8, r2, r3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPlaylist()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        java.util.List $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.util.List mPlaylist>;

        exitmonitor r1;

        return $r3;
    }

    public void setPlaylist(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.util.List r1, $r6;
        android.support.media2.MediaMetadata2 r2;
        android.support.media2.IMediaSession2 r3;
        java.lang.Throwable r4, $r8;
        android.support.media2.MediaController2Stub $r5;
        android.os.Bundle $r9;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        r3 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(19);

        if r3 == null goto label6;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r6 = staticinvoke <android.support.media2.MediaUtils2: java.util.List convertMediaItem2ListToParcelImplList(java.util.List)>(r1);

        if r2 != null goto label2;

        $r9 = null;

        goto label3;

     label2:
        $r9 = virtualinvoke r2.<android.support.media2.MediaMetadata2: android.os.Bundle toBundle()>();

     label3:
        interfaceinvoke r3.<android.support.media2.IMediaSession2: void setPlaylist(android.support.media2.IMediaController2,java.util.List,android.os.Bundle)>($r5, $r6, $r9);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r4);

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public void updatePlaylistMetadata(android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaMetadata2 r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r6;
        android.support.media2.MediaController2Stub $r4;
        android.os.Bundle $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(21);

        if r2 == null goto label6;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        if r1 != null goto label2;

        $r7 = null;

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<android.support.media2.MediaMetadata2: android.os.Bundle toBundle()>();

     label3:
        interfaceinvoke r2.<android.support.media2.IMediaSession2: void updatePlaylistMetadata(android.support.media2.IMediaController2,android.os.Bundle)>($r4, $r7);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public android.support.media2.MediaMetadata2 getPlaylistMetadata()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaMetadata2 $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaMetadata2 mPlaylistMetadata>;

        exitmonitor r1;

        return $r3;
    }

    public void addPlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r7;
        android.support.media2.MediaController2Stub $r4;
        android.os.Parcelable $r5;
        androidx.versionedparcelable.ParcelImpl $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(15);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r5 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r1);

        $r6 = (androidx.versionedparcelable.ParcelImpl) $r5;

        interfaceinvoke r2.<android.support.media2.IMediaSession2: void addPlaylistItem(android.support.media2.IMediaController2,int,androidx.versionedparcelable.ParcelImpl)>($r4, i0, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r7;
        android.support.media2.MediaController2Stub $r4;
        android.os.Parcelable $r5;
        androidx.versionedparcelable.ParcelImpl $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(16);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r5 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r1);

        $r6 = (androidx.versionedparcelable.ParcelImpl) $r5;

        interfaceinvoke r2.<android.support.media2.IMediaSession2: void removePlaylistItem(android.support.media2.IMediaController2,androidx.versionedparcelable.ParcelImpl)>($r4, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void replacePlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r7;
        android.support.media2.MediaController2Stub $r4;
        android.os.Parcelable $r5;
        androidx.versionedparcelable.ParcelImpl $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(17);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r5 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r1);

        $r6 = (androidx.versionedparcelable.ParcelImpl) $r5;

        interfaceinvoke r2.<android.support.media2.IMediaSession2: void replacePlaylistItem(android.support.media2.IMediaController2,int,androidx.versionedparcelable.ParcelImpl)>($r4, i0, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.support.media2.MediaItem2 getCurrentMediaItem()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaItem2 $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem>;

        exitmonitor r1;

        return $r3;
    }

    public void skipToPreviousItem()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(5);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void skipToPreviousItem(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToNextItem()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(4);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void skipToNextItem(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToPlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r7;
        android.support.media2.MediaController2Stub $r4;
        android.os.Parcelable $r5;
        androidx.versionedparcelable.ParcelImpl $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(12);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r5 = staticinvoke <androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)>(r1);

        $r6 = (androidx.versionedparcelable.ParcelImpl) $r5;

        interfaceinvoke r2.<android.support.media2.IMediaSession2: void skipToPlaylistItem(android.support.media2.IMediaController2,androidx.versionedparcelable.ParcelImpl)>($r4, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getRepeatMode()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<android.support.media2.MediaController2ImplBase: int mRepeatMode>;

        exitmonitor r1;

        return $i0;
    }

    public void setRepeatMode(int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(14);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void setRepeatMode(android.support.media2.IMediaController2,int)>($r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getShuffleMode()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.lang.Object r1, $r2;
        int $i0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<android.support.media2.MediaController2ImplBase: int mShuffleMode>;

        exitmonitor r1;

        return $i0;
    }

    public void setShuffleMode(int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(13);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void setShuffleMode(android.support.media2.IMediaController2,int)>($r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void subscribeRoutesInfo()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(36);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void subscribeRoutesInfo(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unsubscribeRoutesInfo()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r4;
        android.support.media2.MediaController2Stub $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(37);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void unsubscribeRoutesInfo(android.support.media2.IMediaController2)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void selectRoute(android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.os.Bundle r1;
        android.support.media2.IMediaSession2 r2;
        java.lang.Throwable r3, $r5;
        android.support.media2.MediaController2Stub $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)>(38);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        interfaceinvoke r2.<android.support.media2.IMediaSession2: void selectRoute(android.support.media2.IMediaController2,android.os.Bundle)>($r4, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Cannot connect to the service or the session is gone", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Context getContext()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.content.Context $r1;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r1 = r0.<android.support.media2.MediaController2ImplBase: android.content.Context mContext>;

        return $r1;
    }

    public android.support.media2.MediaController2$ControllerCallback getCallback()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaController2$ControllerCallback $r1;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r1 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        return $r1;
    }

    public java.util.concurrent.Executor getCallbackExecutor()
    {
        android.support.media2.MediaController2ImplBase r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r1 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        return $r1;
    }

    public android.support.v4.media.MediaBrowserCompat getBrowserCompat()
    {
        android.support.media2.MediaController2ImplBase r0;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        return null;
    }

    public android.support.media2.MediaController2 getInstance()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaController2 $r1;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r1 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        return $r1;
    }

    private void connectToService()
    {
        android.support.media2.MediaController2ImplBase r0;
        android.content.Intent r1, $r4;
        java.lang.Object r2, $r10;
        boolean z0, $z1;
        java.lang.Throwable r3, $r25;
        android.support.media2.SessionToken2 $r5, $r7, $r15, $r21;
        java.lang.String $r6, $r8, $r18, $r24;
        android.support.media2.MediaController2ImplBase$SessionServiceConnection $r11;
        android.content.Context $r12;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.MediaSessionService2");

        r1 = $r4;

        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r6 = virtualinvoke $r5.<android.support.media2.SessionToken2: java.lang.String getPackageName()>();

        $r7 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r8 = virtualinvoke $r7.<android.support.media2.SessionToken2: java.lang.String getServiceName()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r6, $r8);

        $r10 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r10;

        entermonitor $r10;

     label1:
        $r12 = r0.<android.support.media2.MediaController2ImplBase: android.content.Context mContext>;

        $r11 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2ImplBase$SessionServiceConnection mServiceConnection>;

        z0 = virtualinvoke $r12.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r1, $r11, 1);

        if z0 != 0 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind to ");

        $r21 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MC2ImplBase", $r24);

        goto label3;

     label2:
        $z1 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind to ");

        $r15 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" succeeded");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MC2ImplBase", $r18);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r25 := @caughtexception;

        r3 = $r25;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void connectToSession(android.support.media2.IMediaSession2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1;
        java.lang.Throwable r2, $r6;
        android.content.Context $r3;
        android.support.media2.MediaController2Stub $r4;
        java.lang.String $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.IMediaSession2;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2Stub mControllerStub>;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke r1.<android.support.media2.IMediaSession2: void connect(android.support.media2.IMediaController2,java.lang.String)>($r4, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MC2ImplBase", "Failed to call connection request. Framework will retry automatically");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    android.support.media2.IMediaSession2 getSessionInterfaceIfAble(int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        android.support.media2.SessionCommandGroup2 $r4;
        boolean $z0;
        android.support.media2.IMediaSession2 $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionCommandGroup2 mAllowedCommands>;

        $z0 = virtualinvoke $r4.<android.support.media2.SessionCommandGroup2: boolean hasCommand(int)>(i0);

        if $z0 != 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller isn\'t allowed to call command, commandCode=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MC2ImplBase", $r9);

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    android.support.media2.IMediaSession2 getSessionInterfaceIfAble(android.support.media2.SessionCommand2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.SessionCommand2 r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        android.support.media2.SessionCommandGroup2 $r5;
        boolean $z0;
        android.support.media2.IMediaSession2 $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionCommandGroup2 mAllowedCommands>;

        $z0 = virtualinvoke $r5.<android.support.media2.SessionCommandGroup2: boolean hasCommand(android.support.media2.SessionCommand2)>(r1);

        if $z0 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller isn\'t allowed to call command, command=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MC2ImplBase", $r10);

        exitmonitor r2;

     label2:
        return null;

     label3:
        $r6 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        exitmonitor r2;

     label4:
        return $r6;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void notifyCurrentMediaItemChanged(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        java.lang.Object r2, $r3;
        android.support.media2.MediaController2ImplBase$3 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = new android.support.media2.MediaController2ImplBase$3;

        specialinvoke $r4.<android.support.media2.MediaController2ImplBase$3: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.MediaItem2)>(r0, r1);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    void notifyPlayerStateChanges(long, long, int)
    {
        android.support.media2.MediaController2ImplBase r0;
        long l0, l1;
        int i2;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2ImplBase$4 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs> = l0;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionMs> = l1;

        r0.<android.support.media2.MediaController2ImplBase: int mPlayerState> = i2;

        exitmonitor r1;

        goto label1;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r3 = new android.support.media2.MediaController2ImplBase$4;

        specialinvoke $r3.<android.support.media2.MediaController2ImplBase$4: void <init>(android.support.media2.MediaController2ImplBase,int)>(r0, i2);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void notifyPlaybackSpeedChanges(long, long, float)
    {
        android.support.media2.MediaController2ImplBase r0;
        long l0, l1;
        float f0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2ImplBase$5 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs> = l0;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionMs> = l1;

        r0.<android.support.media2.MediaController2ImplBase: float mPlaybackSpeed> = f0;

        exitmonitor r1;

        goto label1;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r3 = new android.support.media2.MediaController2ImplBase$5;

        specialinvoke $r3.<android.support.media2.MediaController2ImplBase$5: void <init>(android.support.media2.MediaController2ImplBase,float)>(r0, f0);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void notifyBufferingStateChanged(android.support.media2.MediaItem2, int, long)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        int i0;
        long l1;
        java.lang.Object r2, $r3;
        android.support.media2.MediaController2ImplBase$6 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.media2.MediaController2ImplBase: int mBufferingState> = i0;

        r0.<android.support.media2.MediaController2ImplBase: long mBufferedPositionMs> = l1;

        exitmonitor r2;

        goto label1;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = new android.support.media2.MediaController2ImplBase$6;

        specialinvoke $r4.<android.support.media2.MediaController2ImplBase$6: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.MediaItem2,int)>(r0, r1, i0);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    void notifyPlaylistChanges(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.util.List r1;
        android.support.media2.MediaMetadata2 r2;
        java.lang.Object r3, $r4;
        android.support.media2.MediaController2ImplBase$7 $r5;
        java.util.concurrent.Executor $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r0.<android.support.media2.MediaController2ImplBase: java.util.List mPlaylist> = r1;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaMetadata2 mPlaylistMetadata> = r2;

        exitmonitor r3;

        goto label1;

     label1:
        $r6 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r5 = new android.support.media2.MediaController2ImplBase$7;

        specialinvoke $r5.<android.support.media2.MediaController2ImplBase$7: void <init>(android.support.media2.MediaController2ImplBase,java.util.List,android.support.media2.MediaMetadata2)>(r0, r1, r2);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    void notifyPlaylistMetadataChanges(android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaMetadata2 r1;
        java.lang.Object r2, $r3;
        android.support.media2.MediaController2ImplBase$8 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaMetadata2 mPlaylistMetadata> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = new android.support.media2.MediaController2ImplBase$8;

        specialinvoke $r4.<android.support.media2.MediaController2ImplBase$8: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.MediaMetadata2)>(r0, r1);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    void notifyPlaybackInfoChanges(android.support.media2.MediaController2$PlaybackInfo)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.MediaController2$PlaybackInfo r1;
        java.lang.Object r2, $r3;
        android.support.media2.MediaController2ImplBase$9 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.MediaController2$PlaybackInfo;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = new android.support.media2.MediaController2ImplBase$9;

        specialinvoke $r4.<android.support.media2.MediaController2ImplBase$9: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.MediaController2$PlaybackInfo)>(r0, r1);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    void notifyRepeatModeChanges(int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2ImplBase$10 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.MediaController2ImplBase: int mRepeatMode> = i0;

        exitmonitor r1;

        goto label1;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r3 = new android.support.media2.MediaController2ImplBase$10;

        specialinvoke $r3.<android.support.media2.MediaController2ImplBase$10: void <init>(android.support.media2.MediaController2ImplBase,int)>(r0, i0);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void notifyShuffleModeChanges(int)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2ImplBase$11 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.MediaController2ImplBase: int mShuffleMode> = i0;

        exitmonitor r1;

        goto label1;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r3 = new android.support.media2.MediaController2ImplBase$11;

        specialinvoke $r3.<android.support.media2.MediaController2ImplBase$11: void <init>(android.support.media2.MediaController2ImplBase,int)>(r0, i0);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void notifySeekCompleted(long, long, long)
    {
        android.support.media2.MediaController2ImplBase r0;
        long l0, l1, l2;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2ImplBase$12 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r2 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs> = l0;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionMs> = l1;

        exitmonitor r1;

        goto label1;

     label1:
        $r4 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r3 = new android.support.media2.MediaController2ImplBase$12;

        specialinvoke $r3.<android.support.media2.MediaController2ImplBase$12: void <init>(android.support.media2.MediaController2ImplBase,long)>(r0, l2);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void notifyError(int, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase r0;
        int i0;
        android.os.Bundle r1;
        android.support.media2.MediaController2ImplBase$13 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r2 = new android.support.media2.MediaController2ImplBase$13;

        specialinvoke $r2.<android.support.media2.MediaController2ImplBase$13: void <init>(android.support.media2.MediaController2ImplBase,int,android.os.Bundle)>(r0, i0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    void notifyRoutesInfoChanged(java.util.List)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.util.List r1;
        android.support.media2.MediaController2ImplBase$14 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r2 = new android.support.media2.MediaController2ImplBase$14;

        specialinvoke $r2.<android.support.media2.MediaController2ImplBase$14: void <init>(android.support.media2.MediaController2ImplBase,java.util.List)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    void onConnectedNotLocked(android.support.media2.IMediaSession2, android.support.media2.SessionCommandGroup2, int, android.support.media2.MediaItem2, long, long, float, long, android.support.media2.MediaController2$PlaybackInfo, int, int, java.util.List, android.app.PendingIntent)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.IMediaSession2 r1, $r13, $r14;
        android.support.media2.SessionCommandGroup2 r2;
        int i0, i4, i5;
        android.support.media2.MediaItem2 r3;
        long l1, l2, l3;
        float f0;
        android.support.media2.MediaController2$PlaybackInfo r4;
        java.util.List r5;
        android.app.PendingIntent r6;
        java.lang.Object r7, $r12;
        java.lang.Throwable r8, r9, r10, $r28, $r30, $r32;
        boolean $z0, $z1, $z2, z3, z4, z5, z6;
        android.support.media2.MediaController2 $r11, $r19, $r20, $r21, $r29, $r31;
        android.os.IBinder $r15;
        android.os.IBinder$DeathRecipient $r16;
        android.support.media2.MediaController2ImplBase$15 $r17;
        java.util.concurrent.Executor $r18;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26;
        java.lang.String $r27;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.IMediaSession2;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        i0 := @parameter2: int;

        r3 := @parameter3: android.support.media2.MediaItem2;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        f0 := @parameter6: float;

        l3 := @parameter7: long;

        r4 := @parameter8: android.support.media2.MediaController2$PlaybackInfo;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        r5 := @parameter11: java.util.List;

        r6 := @parameter12: android.app.PendingIntent;

        $z0 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedNotLocked sessionBinder=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowedCommands=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MC2ImplBase", $r27);

     label01:
        z3 = 0;

     label02:
        if r1 == null goto label03;

        if r2 != null goto label06;

     label03:
        z4 = 1;

     label04:
        if z4 == 0 goto label05;

        $r11 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r11.<android.support.media2.MediaController2: void close()>();

     label05:
        return;

     label06:
        $r12 = r0.<android.support.media2.MediaController2ImplBase: java.lang.Object mLock>;

        r7 = $r12;

        entermonitor $r12;

     label07:
        $z1 = r0.<android.support.media2.MediaController2ImplBase: boolean mIsReleased>;

        if $z1 == 0 goto label10;

        exitmonitor r7;

     label08:
        if z3 == 0 goto label09;

        $r21 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r21.<android.support.media2.MediaController2: void close()>();

     label09:
        return;

     label10:
        $r13 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        if $r13 == null goto label13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MC2ImplBase", "Cannot be notified about the connection result many times. Probably a bug or malicious app.");

        z5 = 1;

        exitmonitor r7;

     label11:
        if z5 == 0 goto label12;

        $r20 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r20.<android.support.media2.MediaController2: void close()>();

     label12:
        return;

     label13:
        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionCommandGroup2 mAllowedCommands> = r2;

        r0.<android.support.media2.MediaController2ImplBase: int mPlayerState> = i0;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaItem2 mCurrentMediaItem> = r3;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionEventTimeMs> = l1;

        r0.<android.support.media2.MediaController2ImplBase: long mPositionMs> = l2;

        r0.<android.support.media2.MediaController2ImplBase: float mPlaybackSpeed> = f0;

        r0.<android.support.media2.MediaController2ImplBase: long mBufferedPositionMs> = l3;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo> = r4;

        r0.<android.support.media2.MediaController2ImplBase: int mRepeatMode> = i4;

        r0.<android.support.media2.MediaController2ImplBase: int mShuffleMode> = i5;

        r0.<android.support.media2.MediaController2ImplBase: java.util.List mPlaylist> = r5;

        r0.<android.support.media2.MediaController2ImplBase: android.app.PendingIntent mSessionActivity> = r6;

        r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2> = r1;

     label14:
        $r14 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.IMediaSession2 mISession2>;

        $r15 = interfaceinvoke $r14.<android.support.media2.IMediaSession2: android.os.IBinder asBinder()>();

        $r16 = r0.<android.support.media2.MediaController2ImplBase: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r15.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r16, 0);

     label15:
        goto label20;

     label16:
        $r30 := @caughtexception;

        r8 = $r30;

        $z2 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z2 == 0 goto label17;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MC2ImplBase", "Session died too early.", r8);

     label17:
        z6 = 1;

        exitmonitor r7;

     label18:
        if z6 == 0 goto label19;

        $r31 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r31.<android.support.media2.MediaController2: void close()>();

     label19:
        return;

     label20:
        exitmonitor r7;

     label21:
        goto label24;

     label22:
        $r32 := @caughtexception;

        r9 = $r32;

        exitmonitor r7;

     label23:
        throw r9;

     label24:
        $r18 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r17 = new android.support.media2.MediaController2ImplBase$15;

        specialinvoke $r17.<android.support.media2.MediaController2ImplBase$15: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.SessionCommandGroup2)>(r0, r2);

        interfaceinvoke $r18.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r17);

     label25:
        if z3 == 0 goto label29;

        $r19 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r19.<android.support.media2.MediaController2: void close()>();

        goto label29;

     label26:
        $r28 := @caughtexception;

        r10 = $r28;

     label27:
        if z3 == 0 goto label28;

        $r29 = r0.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r29.<android.support.media2.MediaController2: void close()>();

     label28:
        throw r10;

     label29:
        return;

        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label13 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label02 to label04 with label26;
        catch java.lang.Throwable from label06 to label08 with label26;
        catch java.lang.Throwable from label20 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    void onCustomCommand(android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.SessionCommand2 r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        boolean $z0;
        android.support.media2.MediaController2ImplBase$16 $r4;
        java.util.concurrent.Executor $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        $z0 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCustomCommand cmd=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MC2ImplBase", $r9);

     label1:
        $r5 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = new android.support.media2.MediaController2ImplBase$16;

        specialinvoke $r4.<android.support.media2.MediaController2ImplBase$16: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>(r0, r1, r2, r3);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    void onAllowedCommandsChanged(android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaController2ImplBase r0;
        android.support.media2.SessionCommandGroup2 r1;
        android.support.media2.MediaController2ImplBase$17 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: android.support.media2.SessionCommandGroup2;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r2 = new android.support.media2.MediaController2ImplBase$17;

        specialinvoke $r2.<android.support.media2.MediaController2ImplBase$17: void <init>(android.support.media2.MediaController2ImplBase,android.support.media2.SessionCommandGroup2)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    void onCustomLayoutChanged(java.util.List)
    {
        android.support.media2.MediaController2ImplBase r0;
        java.util.List r1;
        android.support.media2.MediaController2ImplBase$18 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.support.media2.MediaController2ImplBase;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<android.support.media2.MediaController2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r2 = new android.support.media2.MediaController2ImplBase$18;

        specialinvoke $r2.<android.support.media2.MediaController2ImplBase$18: void <init>(android.support.media2.MediaController2ImplBase,java.util.List)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MC2ImplBase", 3);

        <android.support.media2.MediaController2ImplBase: boolean DEBUG> = $z0;

        return;
    }

android.support.media2.MediaController2ImplBase$1
<android.support.media2.MediaController2ImplBase$1: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase)
    {
        android.support.media2.MediaController2ImplBase$1 r0;
        android.support.media2.MediaController2ImplBase r1;

        r0 := @this: android.support.media2.MediaController2ImplBase$1;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r0.<android.support.media2.MediaController2ImplBase$1: android.support.media2.MediaController2ImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void binderDied()
    {
        android.support.media2.MediaController2ImplBase$1 r0;
        android.support.media2.MediaController2ImplBase $r1;
        android.support.media2.MediaController2 $r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$1;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$1: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r2.<android.support.media2.MediaController2: void close()>();

        return;
    }

android.support.media2.MediaController2ImplBase$10
<android.support.media2.MediaController2ImplBase$10: int val$repeatMode>
<android.support.media2.MediaController2ImplBase$10: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, int)
    {
        android.support.media2.MediaController2ImplBase$10 r0;
        android.support.media2.MediaController2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2ImplBase$10;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaController2ImplBase$10: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$10: int val$repeatMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$10 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r5;
        boolean $z0;
        int $i0;
        android.support.media2.MediaController2$ControllerCallback $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$10;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$10: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$10: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$10: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $i0 = r0.<android.support.media2.MediaController2ImplBase$10: int val$repeatMode>;

        virtualinvoke $r6.<android.support.media2.MediaController2$ControllerCallback: void onRepeatModeChanged(android.support.media2.MediaController2,int)>($r5, $i0);

        return;
    }

android.support.media2.MediaController2ImplBase$11
<android.support.media2.MediaController2ImplBase$11: int val$shuffleMode>
<android.support.media2.MediaController2ImplBase$11: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, int)
    {
        android.support.media2.MediaController2ImplBase$11 r0;
        android.support.media2.MediaController2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2ImplBase$11;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaController2ImplBase$11: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$11: int val$shuffleMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$11 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r5;
        boolean $z0;
        int $i0;
        android.support.media2.MediaController2$ControllerCallback $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$11;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$11: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$11: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$11: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $i0 = r0.<android.support.media2.MediaController2ImplBase$11: int val$shuffleMode>;

        virtualinvoke $r6.<android.support.media2.MediaController2$ControllerCallback: void onShuffleModeChanged(android.support.media2.MediaController2,int)>($r5, $i0);

        return;
    }

android.support.media2.MediaController2ImplBase$12
<android.support.media2.MediaController2ImplBase$12: long val$seekPositionMs>
<android.support.media2.MediaController2ImplBase$12: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, long)
    {
        android.support.media2.MediaController2ImplBase$12 r0;
        android.support.media2.MediaController2ImplBase r1;
        long l0;

        r0 := @this: android.support.media2.MediaController2ImplBase$12;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        l0 := @parameter1: long;

        r0.<android.support.media2.MediaController2ImplBase$12: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$12: long val$seekPositionMs> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$12 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r5;
        boolean $z0;
        long $l0;
        android.support.media2.MediaController2$ControllerCallback $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$12;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$12: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$12: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$12: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $l0 = r0.<android.support.media2.MediaController2ImplBase$12: long val$seekPositionMs>;

        virtualinvoke $r6.<android.support.media2.MediaController2$ControllerCallback: void onSeekCompleted(android.support.media2.MediaController2,long)>($r5, $l0);

        return;
    }

android.support.media2.MediaController2ImplBase$13
<android.support.media2.MediaController2ImplBase$13: int val$errorCode>
<android.support.media2.MediaController2ImplBase$13: android.os.Bundle val$extras>
<android.support.media2.MediaController2ImplBase$13: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, int, android.os.Bundle)
    {
        android.support.media2.MediaController2ImplBase$13 r0;
        android.support.media2.MediaController2ImplBase r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$13;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r0.<android.support.media2.MediaController2ImplBase$13: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$13: int val$errorCode> = i0;

        r0.<android.support.media2.MediaController2ImplBase$13: android.os.Bundle val$extras> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$13 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        android.os.Bundle $r5;
        int $i0;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$13;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$13: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$13: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$13: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $i0 = r0.<android.support.media2.MediaController2ImplBase$13: int val$errorCode>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$13: android.os.Bundle val$extras>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onError(android.support.media2.MediaController2,int,android.os.Bundle)>($r6, $i0, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$14
<android.support.media2.MediaController2ImplBase$14: java.util.List val$routes>
<android.support.media2.MediaController2ImplBase$14: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, java.util.List)
    {
        android.support.media2.MediaController2ImplBase$14 r0;
        android.support.media2.MediaController2ImplBase r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$14;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: java.util.List;

        r0.<android.support.media2.MediaController2ImplBase$14: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$14: java.util.List val$routes> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$14 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        java.util.List $r5;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$14;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$14: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$14: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$14: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$14: java.util.List val$routes>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onRoutesInfoChanged(android.support.media2.MediaController2,java.util.List)>($r6, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$15
<android.support.media2.MediaController2ImplBase$15: android.support.media2.SessionCommandGroup2 val$allowedCommands>
<android.support.media2.MediaController2ImplBase$15: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaController2ImplBase$15 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.SessionCommandGroup2 r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$15;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        r0.<android.support.media2.MediaController2ImplBase$15: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$15: android.support.media2.SessionCommandGroup2 val$allowedCommands> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$15 r0;
        android.support.media2.MediaController2ImplBase $r1, $r2;
        android.support.media2.SessionCommandGroup2 $r3;
        android.support.media2.MediaController2 $r4;
        android.support.media2.MediaController2$ControllerCallback $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase$15;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$15: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$15: android.support.media2.MediaController2ImplBase this$0>;

        $r4 = $r2.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r3 = r0.<android.support.media2.MediaController2ImplBase$15: android.support.media2.SessionCommandGroup2 val$allowedCommands>;

        virtualinvoke $r5.<android.support.media2.MediaController2$ControllerCallback: void onConnected(android.support.media2.MediaController2,android.support.media2.SessionCommandGroup2)>($r4, $r3);

        return;
    }

android.support.media2.MediaController2ImplBase$16
<android.support.media2.MediaController2ImplBase$16: android.support.media2.SessionCommand2 val$command>
<android.support.media2.MediaController2ImplBase$16: android.os.Bundle val$args>
<android.support.media2.MediaController2ImplBase$16: android.os.ResultReceiver val$receiver>
<android.support.media2.MediaController2ImplBase$16: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaController2ImplBase$16 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;

        r0 := @this: android.support.media2.MediaController2ImplBase$16;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        r0.<android.support.media2.MediaController2ImplBase$16: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$16: android.support.media2.SessionCommand2 val$command> = r2;

        r0.<android.support.media2.MediaController2ImplBase$16: android.os.Bundle val$args> = r3;

        r0.<android.support.media2.MediaController2ImplBase$16: android.os.ResultReceiver val$receiver> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$16 r0;
        android.support.media2.MediaController2ImplBase $r1, $r2;
        android.os.ResultReceiver $r3;
        android.os.Bundle $r4;
        android.support.media2.SessionCommand2 $r5;
        android.support.media2.MediaController2 $r6;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$16;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$16: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$16: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r2.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$16: android.support.media2.SessionCommand2 val$command>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$16: android.os.Bundle val$args>;

        $r3 = r0.<android.support.media2.MediaController2ImplBase$16: android.os.ResultReceiver val$receiver>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onCustomCommand(android.support.media2.MediaController2,android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>($r6, $r5, $r4, $r3);

        return;
    }

android.support.media2.MediaController2ImplBase$17
<android.support.media2.MediaController2ImplBase$17: android.support.media2.SessionCommandGroup2 val$commands>
<android.support.media2.MediaController2ImplBase$17: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaController2ImplBase$17 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.SessionCommandGroup2 r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$17;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        r0.<android.support.media2.MediaController2ImplBase$17: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$17: android.support.media2.SessionCommandGroup2 val$commands> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$17 r0;
        android.support.media2.MediaController2ImplBase $r1, $r2;
        android.support.media2.SessionCommandGroup2 $r3;
        android.support.media2.MediaController2 $r4;
        android.support.media2.MediaController2$ControllerCallback $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase$17;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$17: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$17: android.support.media2.MediaController2ImplBase this$0>;

        $r4 = $r2.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r3 = r0.<android.support.media2.MediaController2ImplBase$17: android.support.media2.SessionCommandGroup2 val$commands>;

        virtualinvoke $r5.<android.support.media2.MediaController2$ControllerCallback: void onAllowedCommandsChanged(android.support.media2.MediaController2,android.support.media2.SessionCommandGroup2)>($r4, $r3);

        return;
    }

android.support.media2.MediaController2ImplBase$18
<android.support.media2.MediaController2ImplBase$18: java.util.List val$layout>
<android.support.media2.MediaController2ImplBase$18: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, java.util.List)
    {
        android.support.media2.MediaController2ImplBase$18 r0;
        android.support.media2.MediaController2ImplBase r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$18;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: java.util.List;

        r0.<android.support.media2.MediaController2ImplBase$18: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$18: java.util.List val$layout> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$18 r0;
        android.support.media2.MediaController2ImplBase $r1, $r2;
        java.util.List $r3;
        android.support.media2.MediaController2 $r4;
        android.support.media2.MediaController2$ControllerCallback $r5;

        r0 := @this: android.support.media2.MediaController2ImplBase$18;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$18: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$18: android.support.media2.MediaController2ImplBase this$0>;

        $r4 = $r2.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r3 = r0.<android.support.media2.MediaController2ImplBase$18: java.util.List val$layout>;

        virtualinvoke $r5.<android.support.media2.MediaController2$ControllerCallback: void onCustomLayoutChanged(android.support.media2.MediaController2,java.util.List)>($r4, $r3);

        return;
    }

android.support.media2.MediaController2ImplBase$2
<android.support.media2.MediaController2ImplBase$2: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase)
    {
        android.support.media2.MediaController2ImplBase$2 r0;
        android.support.media2.MediaController2ImplBase r1;

        r0 := @this: android.support.media2.MediaController2ImplBase$2;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r0.<android.support.media2.MediaController2ImplBase$2: android.support.media2.MediaController2ImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$2 r0;
        android.support.media2.MediaController2ImplBase $r1, $r2;
        android.support.media2.MediaController2 $r3;
        android.support.media2.MediaController2$ControllerCallback $r4;

        r0 := @this: android.support.media2.MediaController2ImplBase$2;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$2: android.support.media2.MediaController2ImplBase this$0>;

        $r4 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$2: android.support.media2.MediaController2ImplBase this$0>;

        $r3 = $r2.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        virtualinvoke $r4.<android.support.media2.MediaController2$ControllerCallback: void onDisconnected(android.support.media2.MediaController2)>($r3);

        return;
    }

android.support.media2.MediaController2ImplBase$3
<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaItem2 val$item>
<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaController2ImplBase$3 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.MediaItem2 r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$3;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.MediaItem2;

        r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaItem2 val$item> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$3 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        android.support.media2.MediaItem2 $r5;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$3;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$3: android.support.media2.MediaItem2 val$item>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onCurrentMediaItemChanged(android.support.media2.MediaController2,android.support.media2.MediaItem2)>($r6, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$4
<android.support.media2.MediaController2ImplBase$4: int val$state>
<android.support.media2.MediaController2ImplBase$4: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, int)
    {
        android.support.media2.MediaController2ImplBase$4 r0;
        android.support.media2.MediaController2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaController2ImplBase$4;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaController2ImplBase$4: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$4: int val$state> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$4 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r5;
        boolean $z0;
        int $i0;
        android.support.media2.MediaController2$ControllerCallback $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$4;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$4: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$4: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$4: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $i0 = r0.<android.support.media2.MediaController2ImplBase$4: int val$state>;

        virtualinvoke $r6.<android.support.media2.MediaController2$ControllerCallback: void onPlayerStateChanged(android.support.media2.MediaController2,int)>($r5, $i0);

        return;
    }

android.support.media2.MediaController2ImplBase$5
<android.support.media2.MediaController2ImplBase$5: float val$speed>
<android.support.media2.MediaController2ImplBase$5: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, float)
    {
        android.support.media2.MediaController2ImplBase$5 r0;
        android.support.media2.MediaController2ImplBase r1;
        float f0;

        r0 := @this: android.support.media2.MediaController2ImplBase$5;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        f0 := @parameter1: float;

        r0.<android.support.media2.MediaController2ImplBase$5: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$5: float val$speed> = f0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$5 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r5;
        boolean $z0;
        float $f0;
        android.support.media2.MediaController2$ControllerCallback $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$5;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$5: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$5: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$5: android.support.media2.MediaController2ImplBase this$0>;

        $r5 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $f0 = r0.<android.support.media2.MediaController2ImplBase$5: float val$speed>;

        virtualinvoke $r6.<android.support.media2.MediaController2$ControllerCallback: void onPlaybackSpeedChanged(android.support.media2.MediaController2,float)>($r5, $f0);

        return;
    }

android.support.media2.MediaController2ImplBase$6
<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaItem2 val$item>
<android.support.media2.MediaController2ImplBase$6: int val$state>
<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.MediaItem2, int)
    {
        android.support.media2.MediaController2ImplBase$6 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.MediaItem2 r2;
        int i0;

        r0 := @this: android.support.media2.MediaController2ImplBase$6;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.MediaItem2;

        i0 := @parameter2: int;

        r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaItem2 val$item> = r2;

        r0.<android.support.media2.MediaController2ImplBase$6: int val$state> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$6 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        int $i0;
        android.support.media2.MediaItem2 $r5;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$6;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$6: android.support.media2.MediaItem2 val$item>;

        $i0 = r0.<android.support.media2.MediaController2ImplBase$6: int val$state>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onBufferingStateChanged(android.support.media2.MediaController2,android.support.media2.MediaItem2,int)>($r6, $r5, $i0);

        return;
    }

android.support.media2.MediaController2ImplBase$7
<android.support.media2.MediaController2ImplBase$7: java.util.List val$playlist>
<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaMetadata2 val$metadata>
<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase$7 r0;
        android.support.media2.MediaController2ImplBase r1;
        java.util.List r2;
        android.support.media2.MediaMetadata2 r3;

        r0 := @this: android.support.media2.MediaController2ImplBase$7;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$7: java.util.List val$playlist> = r2;

        r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaMetadata2 val$metadata> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$7 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r7;
        boolean $z0;
        android.support.media2.MediaMetadata2 $r5;
        java.util.List $r6;
        android.support.media2.MediaController2$ControllerCallback $r8;

        r0 := @this: android.support.media2.MediaController2ImplBase$7;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaController2ImplBase this$0>;

        $r8 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r6 = r0.<android.support.media2.MediaController2ImplBase$7: java.util.List val$playlist>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$7: android.support.media2.MediaMetadata2 val$metadata>;

        virtualinvoke $r8.<android.support.media2.MediaController2$ControllerCallback: void onPlaylistChanged(android.support.media2.MediaController2,java.util.List,android.support.media2.MediaMetadata2)>($r7, $r6, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$8
<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaMetadata2 val$metadata>
<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaController2ImplBase$8 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.MediaMetadata2 r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$8;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaMetadata2 val$metadata> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$8 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        android.support.media2.MediaMetadata2 $r5;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$8;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$8: android.support.media2.MediaMetadata2 val$metadata>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onPlaylistMetadataChanged(android.support.media2.MediaController2,android.support.media2.MediaMetadata2)>($r6, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$9
<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2$PlaybackInfo val$info>
<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase, android.support.media2.MediaController2$PlaybackInfo)
    {
        android.support.media2.MediaController2ImplBase$9 r0;
        android.support.media2.MediaController2ImplBase r1;
        android.support.media2.MediaController2$PlaybackInfo r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$9;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r2 := @parameter1: android.support.media2.MediaController2$PlaybackInfo;

        r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2$PlaybackInfo val$info> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaController2ImplBase$9 r0;
        android.support.media2.MediaController2ImplBase $r1, $r3, $r4;
        android.support.media2.MediaController2 $r2, $r6;
        boolean $z0;
        android.support.media2.MediaController2$PlaybackInfo $r5;
        android.support.media2.MediaController2$ControllerCallback $r7;

        r0 := @this: android.support.media2.MediaController2ImplBase$9;

        $r1 = r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2ImplBase this$0>;

        $r2 = $r1.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $z0 = virtualinvoke $r2.<android.support.media2.MediaController2: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2ImplBase this$0>;

        $r7 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2$ControllerCallback mCallback>;

        $r4 = r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2ImplBase this$0>;

        $r6 = $r4.<android.support.media2.MediaController2ImplBase: android.support.media2.MediaController2 mInstance>;

        $r5 = r0.<android.support.media2.MediaController2ImplBase$9: android.support.media2.MediaController2$PlaybackInfo val$info>;

        virtualinvoke $r7.<android.support.media2.MediaController2$ControllerCallback: void onPlaybackInfoChanged(android.support.media2.MediaController2,android.support.media2.MediaController2$PlaybackInfo)>($r6, $r5);

        return;
    }

android.support.media2.MediaController2ImplBase$SessionServiceConnection
<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>
    void <init>(android.support.media2.MediaController2ImplBase)
    {
        android.support.media2.MediaController2ImplBase$SessionServiceConnection r0;
        android.support.media2.MediaController2ImplBase r1;

        r0 := @this: android.support.media2.MediaController2ImplBase$SessionServiceConnection;

        r1 := @parameter0: android.support.media2.MediaController2ImplBase;

        r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.support.media2.MediaController2ImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        boolean $z0, $z1;
        android.support.media2.MediaController2ImplBase $r3, $r7, $r12, $r17;
        android.support.media2.SessionToken2 $r4, $r13, $r18;
        java.lang.String $r5, $r6, $r14, $r19, $r21, $r27;
        android.support.media2.IMediaSession2 $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r16, $r20, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: android.support.media2.MediaController2ImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $z0 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServiceConnected ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MC2ImplBase", $r27);

     label1:
        $r3 = r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>;

        $r4 = $r3.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r5 = virtualinvoke $r4.<android.support.media2.SessionToken2: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was connected, but expected pkg=");

        $r12 = r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>;

        $r13 = $r12.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r14 = virtualinvoke $r13.<android.support.media2.SessionToken2: java.lang.String getPackageName()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id=");

        $r17 = r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>;

        $r18 = $r17.<android.support.media2.MediaController2ImplBase: android.support.media2.SessionToken2 mToken>;

        $r19 = virtualinvoke $r18.<android.support.media2.SessionToken2: java.lang.String getId()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("MC2ImplBase", $r21);

        return;

     label2:
        $r7 = r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>;

        $r8 = staticinvoke <android.support.media2.IMediaSession2$Stub: android.support.media2.IMediaSession2 asInterface(android.os.IBinder)>(r2);

        virtualinvoke $r7.<android.support.media2.MediaController2ImplBase: void connectToSession(android.support.media2.IMediaSession2)>($r8);

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        android.support.media2.MediaController2ImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.media2.MediaController2ImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        $z0 = <android.support.media2.MediaController2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session service ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disconnected.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MC2ImplBase", $r6);

     label1:
        return;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        android.support.media2.MediaController2ImplBase$SessionServiceConnection r0;
        android.content.ComponentName r1;
        android.support.media2.MediaController2ImplBase $r2;

        r0 := @this: android.support.media2.MediaController2ImplBase$SessionServiceConnection;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<android.support.media2.MediaController2ImplBase$SessionServiceConnection: android.support.media2.MediaController2ImplBase this$0>;

        virtualinvoke $r2.<android.support.media2.MediaController2ImplBase: void close()>();

        return;
    }

