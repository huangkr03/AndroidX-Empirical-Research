android.support.test.espresso.action.TapRemoteMessage
<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tap tap>
<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.remote.EspressoRemoteMessage$From FROM>
    public void <init>(android.support.test.espresso.action.Tap)
    {
        android.support.test.espresso.action.TapRemoteMessage r0;
        android.support.test.espresso.action.Tap r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage;

        r1 := @parameter0: android.support.test.espresso.action.Tap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.action.Tap) $r2;

        r0.<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tap tap> = $r3;

        return;
    }

    public android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap toProto()
    {
        android.support.test.espresso.action.TapRemoteMessage r0;
        android.support.test.espresso.action.Tap $r1, $r8;
        int[] $r2;
        int $i0, $i1;
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.lang.String $r9, $r10;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage;

        $r2 = <android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap>;

        $r1 = r0.<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tap tap>;

        $i0 = virtualinvoke $r1.<android.support.test.espresso.action.Tap: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = <android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap SINGLE>;

        return $r5;

     label2:
        $r4 = <android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap LONG>;

        return $r4;

     label3:
        $r3 = <android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap DOUBLE>;

        return $r3;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = r0.<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tap tap>;

        $r9 = virtualinvoke $r8.<android.support.test.espresso.action.Tap: java.lang.String toString()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Tap proto enum for general location: %s not found!", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    private static android.support.test.espresso.action.Tapper getTapperFromTapProto(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)
    {
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap r0;
        int $i0;
        java.lang.Enum $r1;
        android.support.test.espresso.action.Tapper $r2;

        r0 := @parameter0: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap;

        $i0 = virtualinvoke r0.<android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap: int getNumber()>();

        $r1 = staticinvoke <android.support.test.espresso.remote.ProtoUtils: java.lang.Enum checkedGetEnumForProto(int,java.lang.Class)>($i0, class "Landroid/support/test/espresso/action/Tap;");

        $r2 = (android.support.test.espresso.action.Tapper) $r1;

        return $r2;
    }

    public volatile java.lang.Object toProto()
    {
        android.support.test.espresso.action.TapRemoteMessage r0;
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap $r1;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage;

        $r1 = virtualinvoke r0.<android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap toProto()>();

        return $r1;
    }

    static android.support.test.espresso.action.Tapper access$000(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)
    {
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap r0;
        android.support.test.espresso.action.Tapper $r1;

        r0 := @parameter0: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap;

        $r1 = staticinvoke <android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tapper getTapperFromTapProto(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        android.support.test.espresso.action.TapRemoteMessage$1 $r0;

        $r0 = new android.support.test.espresso.action.TapRemoteMessage$1;

        specialinvoke $r0.<android.support.test.espresso.action.TapRemoteMessage$1: void <init>()>();

        <android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.remote.EspressoRemoteMessage$From FROM> = $r0;

        return;
    }

android.support.test.espresso.action.TapRemoteMessage$1
    void <init>()
    {
        android.support.test.espresso.action.TapRemoteMessage$1 r0;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.support.test.espresso.action.Tapper fromProto(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)
    {
        android.support.test.espresso.action.TapRemoteMessage$1 r0;
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap r1;
        android.support.test.espresso.action.Tapper $r2;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage$1;

        r1 := @parameter0: android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap;

        $r2 = staticinvoke <android.support.test.espresso.action.TapRemoteMessage: android.support.test.espresso.action.Tapper access$000(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)>(r1);

        return $r2;
    }

    public volatile java.lang.Object fromProto(java.lang.Object)
    {
        android.support.test.espresso.action.TapRemoteMessage$1 r0;
        java.lang.Object r1;
        android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap $r2;
        android.support.test.espresso.action.Tapper $r3;

        r0 := @this: android.support.test.espresso.action.TapRemoteMessage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap) r1;

        $r3 = virtualinvoke r0.<android.support.test.espresso.action.TapRemoteMessage$1: android.support.test.espresso.action.Tapper fromProto(android.support.test.espresso.proto.action.ViewActions$ClickViewActionProto$Tap)>($r2);

        return $r3;
    }

android.support.test.espresso.action.TapRemoteMessage$2
<android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap>
    static void <clinit>()
    {
        android.support.test.espresso.action.Tap[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r3, $r5, $r7;
        android.support.test.espresso.action.Tap $r2, $r4, $r6;
        java.lang.Throwable $r8, $r9, $r10, r11, r12, r13;

        $r0 = staticinvoke <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap> = $r1;

     label01:
        $r3 = <android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap>;

        $r2 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap SINGLE>;

        $i1 = virtualinvoke $r2.<android.support.test.espresso.action.Tap: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        r11 = $r10;

     label04:
        $r5 = <android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap>;

        $r4 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap LONG>;

        $i2 = virtualinvoke $r4.<android.support.test.espresso.action.Tap: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

        r12 = $r9;

     label07:
        $r7 = <android.support.test.espresso.action.TapRemoteMessage$2: int[] $SwitchMap$android$support$test$espresso$action$Tap>;

        $r6 = <android.support.test.espresso.action.Tap: android.support.test.espresso.action.Tap DOUBLE>;

        $i3 = virtualinvoke $r6.<android.support.test.espresso.action.Tap: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        r13 = $r8;

     label10:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

