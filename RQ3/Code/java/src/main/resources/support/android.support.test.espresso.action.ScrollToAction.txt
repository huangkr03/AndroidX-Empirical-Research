android.support.test.espresso.action.ScrollToAction
<android.support.test.espresso.action.ScrollToAction: java.lang.String TAG>
    public void <init>()
    {
        android.support.test.espresso.action.ScrollToAction r0;

        r0 := @this: android.support.test.espresso.action.ScrollToAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.hamcrest.Matcher getConstraints()
    {
        android.support.test.espresso.action.ScrollToAction r0;
        android.support.test.espresso.matcher.ViewMatchers$Visibility $r1;
        org.hamcrest.Matcher $r2, $r3, $r4, $r5, $r7, $r8;
        org.hamcrest.core.AnyOf $r6;

        r0 := @this: android.support.test.espresso.action.ScrollToAction;

        $r1 = <android.support.test.espresso.matcher.ViewMatchers$Visibility: android.support.test.espresso.matcher.ViewMatchers$Visibility VISIBLE>;

        $r2 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withEffectiveVisibility(android.support.test.espresso.matcher.ViewMatchers$Visibility)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/ScrollView;");

        $r4 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/HorizontalScrollView;");

        $r5 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/ListView;");

        $r6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>($r3, $r4, $r5);

        $r7 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDescendantOfA(org.hamcrest.Matcher)>($r6);

        $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r7);

        return $r8;
    }

    public void perform(android.support.test.espresso.UiController, android.view.View)
    {
        android.support.test.espresso.action.ScrollToAction r0;
        android.support.test.espresso.UiController r1;
        android.view.View r2;
        android.graphics.Rect r3, r17;
        org.hamcrest.Matcher $r4, $r6;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r10, $r15, $r16;
        android.support.test.espresso.PerformException$Builder $r9, $r11, $r13, r18;
        android.support.test.espresso.PerformException $r14;
        java.lang.RuntimeException r19;
        java.lang.Throwable r20, r21;

        r0 := @this: android.support.test.espresso.action.ScrollToAction;

        r1 := @parameter0: android.support.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        $r4 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z0 = interfaceinvoke $r4.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r16 = <android.support.test.espresso.action.ScrollToAction: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r16, "View is already displayed. Returning.");

        return;

     label1:
        r17 = new android.graphics.Rect;

        specialinvoke r17.<android.graphics.Rect: void <init>()>();

        r3 = r17;

        virtualinvoke r2.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r3);

        $z1 = virtualinvoke r2.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>(r3, 1);

        if $z1 != 0 goto label2;

        $r15 = <android.support.test.espresso.action.ScrollToAction: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r15, "Scrolling to view was requested, but none of the parents scrolled.");

     label2:
        interfaceinvoke r1.<android.support.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        $r6 = staticinvoke <android.support.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z2 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r2);

        if $z2 != 0 goto label3;

        r18 = new android.support.test.espresso.PerformException$Builder;

        specialinvoke r18.<android.support.test.espresso.PerformException$Builder: void <init>()>();

        $r8 = virtualinvoke r0.<android.support.test.espresso.action.ScrollToAction: java.lang.String getDescription()>();

        $r9 = virtualinvoke r18.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r8);

        $r10 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r2);

        $r11 = virtualinvoke $r9.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>($r10);

        r19 = new java.lang.RuntimeException;

        specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String)>("Scrolling to view was attempted, but the view is not displayed");

        r20 = (java.lang.Throwable) r19;

        $r13 = virtualinvoke $r11.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r20);

        $r14 = virtualinvoke $r13.<android.support.test.espresso.PerformException$Builder: android.support.test.espresso.PerformException build()>();

        r21 = (java.lang.Throwable) $r14;

        throw r21;

     label3:
        return;
    }

    public java.lang.String getDescription()
    {
        android.support.test.espresso.action.ScrollToAction r0;

        r0 := @this: android.support.test.espresso.action.ScrollToAction;

        return "scroll to";
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/test/espresso/action/ScrollToAction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.test.espresso.action.ScrollToAction: java.lang.String TAG> = $r1;

        return;
    }

