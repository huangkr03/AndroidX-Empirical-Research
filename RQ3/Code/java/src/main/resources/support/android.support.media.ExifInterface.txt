android.support.media.ExifInterface
<android.support.media.ExifInterface: java.lang.String TAG>
<android.support.media.ExifInterface: boolean DEBUG>
<android.support.media.ExifInterface: java.lang.String TAG_IMAGE_WIDTH>
<android.support.media.ExifInterface: java.lang.String TAG_IMAGE_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_BITS_PER_SAMPLE>
<android.support.media.ExifInterface: java.lang.String TAG_COMPRESSION>
<android.support.media.ExifInterface: java.lang.String TAG_PHOTOMETRIC_INTERPRETATION>
<android.support.media.ExifInterface: java.lang.String TAG_ORIENTATION>
<android.support.media.ExifInterface: java.lang.String TAG_SAMPLES_PER_PIXEL>
<android.support.media.ExifInterface: java.lang.String TAG_PLANAR_CONFIGURATION>
<android.support.media.ExifInterface: java.lang.String TAG_Y_CB_CR_SUB_SAMPLING>
<android.support.media.ExifInterface: java.lang.String TAG_Y_CB_CR_POSITIONING>
<android.support.media.ExifInterface: java.lang.String TAG_X_RESOLUTION>
<android.support.media.ExifInterface: java.lang.String TAG_Y_RESOLUTION>
<android.support.media.ExifInterface: java.lang.String TAG_RESOLUTION_UNIT>
<android.support.media.ExifInterface: java.lang.String TAG_STRIP_OFFSETS>
<android.support.media.ExifInterface: java.lang.String TAG_ROWS_PER_STRIP>
<android.support.media.ExifInterface: java.lang.String TAG_STRIP_BYTE_COUNTS>
<android.support.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT>
<android.support.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_TRANSFER_FUNCTION>
<android.support.media.ExifInterface: java.lang.String TAG_WHITE_POINT>
<android.support.media.ExifInterface: java.lang.String TAG_PRIMARY_CHROMATICITIES>
<android.support.media.ExifInterface: java.lang.String TAG_Y_CB_CR_COEFFICIENTS>
<android.support.media.ExifInterface: java.lang.String TAG_REFERENCE_BLACK_WHITE>
<android.support.media.ExifInterface: java.lang.String TAG_DATETIME>
<android.support.media.ExifInterface: java.lang.String TAG_IMAGE_DESCRIPTION>
<android.support.media.ExifInterface: java.lang.String TAG_MAKE>
<android.support.media.ExifInterface: java.lang.String TAG_MODEL>
<android.support.media.ExifInterface: java.lang.String TAG_SOFTWARE>
<android.support.media.ExifInterface: java.lang.String TAG_ARTIST>
<android.support.media.ExifInterface: java.lang.String TAG_COPYRIGHT>
<android.support.media.ExifInterface: java.lang.String TAG_EXIF_VERSION>
<android.support.media.ExifInterface: java.lang.String TAG_FLASHPIX_VERSION>
<android.support.media.ExifInterface: java.lang.String TAG_COLOR_SPACE>
<android.support.media.ExifInterface: java.lang.String TAG_GAMMA>
<android.support.media.ExifInterface: java.lang.String TAG_PIXEL_X_DIMENSION>
<android.support.media.ExifInterface: java.lang.String TAG_PIXEL_Y_DIMENSION>
<android.support.media.ExifInterface: java.lang.String TAG_COMPONENTS_CONFIGURATION>
<android.support.media.ExifInterface: java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL>
<android.support.media.ExifInterface: java.lang.String TAG_MAKER_NOTE>
<android.support.media.ExifInterface: java.lang.String TAG_USER_COMMENT>
<android.support.media.ExifInterface: java.lang.String TAG_RELATED_SOUND_FILE>
<android.support.media.ExifInterface: java.lang.String TAG_DATETIME_ORIGINAL>
<android.support.media.ExifInterface: java.lang.String TAG_DATETIME_DIGITIZED>
<android.support.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME>
<android.support.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_ORIGINAL>
<android.support.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_DIGITIZED>
<android.support.media.ExifInterface: java.lang.String TAG_EXPOSURE_TIME>
<android.support.media.ExifInterface: java.lang.String TAG_F_NUMBER>
<android.support.media.ExifInterface: java.lang.String TAG_EXPOSURE_PROGRAM>
<android.support.media.ExifInterface: java.lang.String TAG_SPECTRAL_SENSITIVITY>
<android.support.media.ExifInterface: java.lang.String TAG_ISO_SPEED_RATINGS>
<android.support.media.ExifInterface: java.lang.String TAG_PHOTOGRAPHIC_SENSITIVITY>
<android.support.media.ExifInterface: java.lang.String TAG_OECF>
<android.support.media.ExifInterface: java.lang.String TAG_SENSITIVITY_TYPE>
<android.support.media.ExifInterface: java.lang.String TAG_STANDARD_OUTPUT_SENSITIVITY>
<android.support.media.ExifInterface: java.lang.String TAG_RECOMMENDED_EXPOSURE_INDEX>
<android.support.media.ExifInterface: java.lang.String TAG_ISO_SPEED>
<android.support.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_YYY>
<android.support.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_ZZZ>
<android.support.media.ExifInterface: java.lang.String TAG_SHUTTER_SPEED_VALUE>
<android.support.media.ExifInterface: java.lang.String TAG_APERTURE_VALUE>
<android.support.media.ExifInterface: java.lang.String TAG_BRIGHTNESS_VALUE>
<android.support.media.ExifInterface: java.lang.String TAG_EXPOSURE_BIAS_VALUE>
<android.support.media.ExifInterface: java.lang.String TAG_MAX_APERTURE_VALUE>
<android.support.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE>
<android.support.media.ExifInterface: java.lang.String TAG_METERING_MODE>
<android.support.media.ExifInterface: java.lang.String TAG_LIGHT_SOURCE>
<android.support.media.ExifInterface: java.lang.String TAG_FLASH>
<android.support.media.ExifInterface: java.lang.String TAG_SUBJECT_AREA>
<android.support.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_FLASH_ENERGY>
<android.support.media.ExifInterface: java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE>
<android.support.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION>
<android.support.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION>
<android.support.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT>
<android.support.media.ExifInterface: java.lang.String TAG_SUBJECT_LOCATION>
<android.support.media.ExifInterface: java.lang.String TAG_EXPOSURE_INDEX>
<android.support.media.ExifInterface: java.lang.String TAG_SENSING_METHOD>
<android.support.media.ExifInterface: java.lang.String TAG_FILE_SOURCE>
<android.support.media.ExifInterface: java.lang.String TAG_SCENE_TYPE>
<android.support.media.ExifInterface: java.lang.String TAG_CFA_PATTERN>
<android.support.media.ExifInterface: java.lang.String TAG_CUSTOM_RENDERED>
<android.support.media.ExifInterface: java.lang.String TAG_EXPOSURE_MODE>
<android.support.media.ExifInterface: java.lang.String TAG_WHITE_BALANCE>
<android.support.media.ExifInterface: java.lang.String TAG_DIGITAL_ZOOM_RATIO>
<android.support.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM>
<android.support.media.ExifInterface: java.lang.String TAG_SCENE_CAPTURE_TYPE>
<android.support.media.ExifInterface: java.lang.String TAG_GAIN_CONTROL>
<android.support.media.ExifInterface: java.lang.String TAG_CONTRAST>
<android.support.media.ExifInterface: java.lang.String TAG_SATURATION>
<android.support.media.ExifInterface: java.lang.String TAG_SHARPNESS>
<android.support.media.ExifInterface: java.lang.String TAG_DEVICE_SETTING_DESCRIPTION>
<android.support.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE_RANGE>
<android.support.media.ExifInterface: java.lang.String TAG_IMAGE_UNIQUE_ID>
<android.support.media.ExifInterface: java.lang.String TAG_CAMARA_OWNER_NAME>
<android.support.media.ExifInterface: java.lang.String TAG_BODY_SERIAL_NUMBER>
<android.support.media.ExifInterface: java.lang.String TAG_LENS_SPECIFICATION>
<android.support.media.ExifInterface: java.lang.String TAG_LENS_MAKE>
<android.support.media.ExifInterface: java.lang.String TAG_LENS_MODEL>
<android.support.media.ExifInterface: java.lang.String TAG_LENS_SERIAL_NUMBER>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_VERSION_ID>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_TIMESTAMP>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_SATELLITES>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_STATUS>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_MEASURE_MODE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DOP>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_SPEED_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_SPEED>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_TRACK_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_TRACK>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_MAP_DATUM>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE_REF>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_PROCESSING_METHOD>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_AREA_INFORMATION>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DATESTAMP>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_DIFFERENTIAL>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_H_POSITIONING_ERROR>
<android.support.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_INDEX>
<android.support.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH>
<android.support.media.ExifInterface: java.lang.String TAG_DNG_VERSION>
<android.support.media.ExifInterface: java.lang.String TAG_DEFAULT_CROP_SIZE>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_THUMBNAIL_IMAGE>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_START>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_ASPECT_FRAME>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_LEFT_BORDER>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_TOP_BORDER>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_ISO>
<android.support.media.ExifInterface: java.lang.String TAG_RW2_JPG_FROM_RAW>
<android.support.media.ExifInterface: java.lang.String TAG_NEW_SUBFILE_TYPE>
<android.support.media.ExifInterface: java.lang.String TAG_SUBFILE_TYPE>
<android.support.media.ExifInterface: java.lang.String TAG_EXIF_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_GPS_INFO_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_SUB_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_CAMERA_SETTINGS_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_ORF_IMAGE_PROCESSING_IFD_POINTER>
<android.support.media.ExifInterface: java.lang.String TAG_HAS_THUMBNAIL>
<android.support.media.ExifInterface: java.lang.String TAG_THUMBNAIL_OFFSET>
<android.support.media.ExifInterface: java.lang.String TAG_THUMBNAIL_LENGTH>
<android.support.media.ExifInterface: java.lang.String TAG_THUMBNAIL_DATA>
<android.support.media.ExifInterface: int MAX_THUMBNAIL_SIZE>
<android.support.media.ExifInterface: int ORIENTATION_UNDEFINED>
<android.support.media.ExifInterface: int ORIENTATION_NORMAL>
<android.support.media.ExifInterface: int ORIENTATION_FLIP_HORIZONTAL>
<android.support.media.ExifInterface: int ORIENTATION_ROTATE_180>
<android.support.media.ExifInterface: int ORIENTATION_FLIP_VERTICAL>
<android.support.media.ExifInterface: int ORIENTATION_TRANSPOSE>
<android.support.media.ExifInterface: int ORIENTATION_ROTATE_90>
<android.support.media.ExifInterface: int ORIENTATION_TRANSVERSE>
<android.support.media.ExifInterface: int ORIENTATION_ROTATE_270>
<android.support.media.ExifInterface: java.util.List ROTATION_ORDER>
<android.support.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>
<android.support.media.ExifInterface: short FORMAT_CHUNKY>
<android.support.media.ExifInterface: short FORMAT_PLANAR>
<android.support.media.ExifInterface: short Y_CB_CR_POSITIONING_CENTERED>
<android.support.media.ExifInterface: short Y_CB_CR_POSITIONING_CO_SITED>
<android.support.media.ExifInterface: short RESOLUTION_UNIT_INCHES>
<android.support.media.ExifInterface: short RESOLUTION_UNIT_CENTIMETERS>
<android.support.media.ExifInterface: int COLOR_SPACE_S_RGB>
<android.support.media.ExifInterface: int COLOR_SPACE_UNCALIBRATED>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_NOT_DEFINED>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_MANUAL>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_NORMAL>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_APERTURE_PRIORITY>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_SHUTTER_PRIORITY>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_CREATIVE>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_ACTION>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_PORTRAIT_MODE>
<android.support.media.ExifInterface: short EXPOSURE_PROGRAM_LANDSCAPE_MODE>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_UNKNOWN>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_SOS>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_REI>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_ISO_SPEED>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_ISO>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_REI_AND_ISO>
<android.support.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI_AND_ISO>
<android.support.media.ExifInterface: short METERING_MODE_UNKNOWN>
<android.support.media.ExifInterface: short METERING_MODE_AVERAGE>
<android.support.media.ExifInterface: short METERING_MODE_CENTER_WEIGHT_AVERAGE>
<android.support.media.ExifInterface: short METERING_MODE_SPOT>
<android.support.media.ExifInterface: short METERING_MODE_MULTI_SPOT>
<android.support.media.ExifInterface: short METERING_MODE_PATTERN>
<android.support.media.ExifInterface: short METERING_MODE_PARTIAL>
<android.support.media.ExifInterface: short METERING_MODE_OTHER>
<android.support.media.ExifInterface: short LIGHT_SOURCE_UNKNOWN>
<android.support.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_TUNGSTEN>
<android.support.media.ExifInterface: short LIGHT_SOURCE_FLASH>
<android.support.media.ExifInterface: short LIGHT_SOURCE_FINE_WEATHER>
<android.support.media.ExifInterface: short LIGHT_SOURCE_CLOUDY_WEATHER>
<android.support.media.ExifInterface: short LIGHT_SOURCE_SHADE>
<android.support.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_DAY_WHITE_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_COOL_WHITE_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_WHITE_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_WARM_WHITE_FLUORESCENT>
<android.support.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_A>
<android.support.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_B>
<android.support.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_C>
<android.support.media.ExifInterface: short LIGHT_SOURCE_D55>
<android.support.media.ExifInterface: short LIGHT_SOURCE_D65>
<android.support.media.ExifInterface: short LIGHT_SOURCE_D75>
<android.support.media.ExifInterface: short LIGHT_SOURCE_D50>
<android.support.media.ExifInterface: short LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN>
<android.support.media.ExifInterface: short LIGHT_SOURCE_OTHER>
<android.support.media.ExifInterface: short FLAG_FLASH_FIRED>
<android.support.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_NOT_DETECTED>
<android.support.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_DETECTED>
<android.support.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_FIRING>
<android.support.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_SUPPRESSION>
<android.support.media.ExifInterface: short FLAG_FLASH_MODE_AUTO>
<android.support.media.ExifInterface: short FLAG_FLASH_NO_FLASH_FUNCTION>
<android.support.media.ExifInterface: short FLAG_FLASH_RED_EYE_SUPPORTED>
<android.support.media.ExifInterface: short SENSOR_TYPE_NOT_DEFINED>
<android.support.media.ExifInterface: short SENSOR_TYPE_ONE_CHIP>
<android.support.media.ExifInterface: short SENSOR_TYPE_TWO_CHIP>
<android.support.media.ExifInterface: short SENSOR_TYPE_THREE_CHIP>
<android.support.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL>
<android.support.media.ExifInterface: short SENSOR_TYPE_TRILINEAR>
<android.support.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL_LINEAR>
<android.support.media.ExifInterface: short FILE_SOURCE_OTHER>
<android.support.media.ExifInterface: short FILE_SOURCE_TRANSPARENT_SCANNER>
<android.support.media.ExifInterface: short FILE_SOURCE_REFLEX_SCANNER>
<android.support.media.ExifInterface: short FILE_SOURCE_DSC>
<android.support.media.ExifInterface: short SCENE_TYPE_DIRECTLY_PHOTOGRAPHED>
<android.support.media.ExifInterface: short RENDERED_PROCESS_NORMAL>
<android.support.media.ExifInterface: short RENDERED_PROCESS_CUSTOM>
<android.support.media.ExifInterface: short EXPOSURE_MODE_AUTO>
<android.support.media.ExifInterface: short EXPOSURE_MODE_MANUAL>
<android.support.media.ExifInterface: short EXPOSURE_MODE_AUTO_BRACKET>
<android.support.media.ExifInterface: int WHITEBALANCE_AUTO>
<android.support.media.ExifInterface: int WHITEBALANCE_MANUAL>
<android.support.media.ExifInterface: short WHITE_BALANCE_AUTO>
<android.support.media.ExifInterface: short WHITE_BALANCE_MANUAL>
<android.support.media.ExifInterface: short SCENE_CAPTURE_TYPE_STANDARD>
<android.support.media.ExifInterface: short SCENE_CAPTURE_TYPE_LANDSCAPE>
<android.support.media.ExifInterface: short SCENE_CAPTURE_TYPE_PORTRAIT>
<android.support.media.ExifInterface: short SCENE_CAPTURE_TYPE_NIGHT>
<android.support.media.ExifInterface: short GAIN_CONTROL_NONE>
<android.support.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_UP>
<android.support.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_UP>
<android.support.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_DOWN>
<android.support.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_DOWN>
<android.support.media.ExifInterface: short CONTRAST_NORMAL>
<android.support.media.ExifInterface: short CONTRAST_SOFT>
<android.support.media.ExifInterface: short CONTRAST_HARD>
<android.support.media.ExifInterface: short SATURATION_NORMAL>
<android.support.media.ExifInterface: short SATURATION_LOW>
<android.support.media.ExifInterface: short SATURATION_HIGH>
<android.support.media.ExifInterface: short SHARPNESS_NORMAL>
<android.support.media.ExifInterface: short SHARPNESS_SOFT>
<android.support.media.ExifInterface: short SHARPNESS_HARD>
<android.support.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_UNKNOWN>
<android.support.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_MACRO>
<android.support.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_CLOSE_VIEW>
<android.support.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_DISTANT_VIEW>
<android.support.media.ExifInterface: java.lang.String LATITUDE_NORTH>
<android.support.media.ExifInterface: java.lang.String LATITUDE_SOUTH>
<android.support.media.ExifInterface: java.lang.String LONGITUDE_EAST>
<android.support.media.ExifInterface: java.lang.String LONGITUDE_WEST>
<android.support.media.ExifInterface: short ALTITUDE_ABOVE_SEA_LEVEL>
<android.support.media.ExifInterface: short ALTITUDE_BELOW_SEA_LEVEL>
<android.support.media.ExifInterface: java.lang.String GPS_MEASUREMENT_IN_PROGRESS>
<android.support.media.ExifInterface: java.lang.String GPS_MEASUREMENT_INTERRUPTED>
<android.support.media.ExifInterface: java.lang.String GPS_MEASUREMENT_2D>
<android.support.media.ExifInterface: java.lang.String GPS_MEASUREMENT_3D>
<android.support.media.ExifInterface: java.lang.String GPS_SPEED_KILOMETERS_PER_HOUR>
<android.support.media.ExifInterface: java.lang.String GPS_SPEED_MILES_PER_HOUR>
<android.support.media.ExifInterface: java.lang.String GPS_SPEED_KNOTS>
<android.support.media.ExifInterface: java.lang.String GPS_DIRECTION_TRUE>
<android.support.media.ExifInterface: java.lang.String GPS_DIRECTION_MAGNETIC>
<android.support.media.ExifInterface: java.lang.String GPS_DISTANCE_KILOMETERS>
<android.support.media.ExifInterface: java.lang.String GPS_DISTANCE_MILES>
<android.support.media.ExifInterface: java.lang.String GPS_DISTANCE_NAUTICAL_MILES>
<android.support.media.ExifInterface: short GPS_MEASUREMENT_NO_DIFFERENTIAL>
<android.support.media.ExifInterface: short GPS_MEASUREMENT_DIFFERENTIAL_CORRECTED>
<android.support.media.ExifInterface: int DATA_UNCOMPRESSED>
<android.support.media.ExifInterface: int DATA_HUFFMAN_COMPRESSED>
<android.support.media.ExifInterface: int DATA_JPEG>
<android.support.media.ExifInterface: int DATA_JPEG_COMPRESSED>
<android.support.media.ExifInterface: int DATA_DEFLATE_ZIP>
<android.support.media.ExifInterface: int DATA_PACK_BITS_COMPRESSED>
<android.support.media.ExifInterface: int DATA_LOSSY_JPEG>
<android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>
<android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1>
<android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2>
<android.support.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO>
<android.support.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO>
<android.support.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_RGB>
<android.support.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_YCBCR>
<android.support.media.ExifInterface: int ORIGINAL_RESOLUTION_IMAGE>
<android.support.media.ExifInterface: int REDUCED_RESOLUTION_IMAGE>
<android.support.media.ExifInterface: int SIGNATURE_CHECK_SIZE>
<android.support.media.ExifInterface: byte[] JPEG_SIGNATURE>
<android.support.media.ExifInterface: java.lang.String RAF_SIGNATURE>
<android.support.media.ExifInterface: int RAF_OFFSET_TO_JPEG_IMAGE_OFFSET>
<android.support.media.ExifInterface: int RAF_INFO_SIZE>
<android.support.media.ExifInterface: int RAF_JPEG_LENGTH_VALUE_SIZE>
<android.support.media.ExifInterface: short ORF_SIGNATURE_1>
<android.support.media.ExifInterface: short ORF_SIGNATURE_2>
<android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>
<android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>
<android.support.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_1_SIZE>
<android.support.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_2_SIZE>
<android.support.media.ExifInterface: short RW2_SIGNATURE>
<android.support.media.ExifInterface: java.lang.String PEF_SIGNATURE>
<android.support.media.ExifInterface: int PEF_MAKER_NOTE_SKIP_SIZE>
<android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>
<android.support.media.ExifInterface: short BYTE_ALIGN_II>
<android.support.media.ExifInterface: short BYTE_ALIGN_MM>
<android.support.media.ExifInterface: byte START_CODE>
<android.support.media.ExifInterface: int IFD_OFFSET>
<android.support.media.ExifInterface: int IFD_FORMAT_BYTE>
<android.support.media.ExifInterface: int IFD_FORMAT_STRING>
<android.support.media.ExifInterface: int IFD_FORMAT_USHORT>
<android.support.media.ExifInterface: int IFD_FORMAT_ULONG>
<android.support.media.ExifInterface: int IFD_FORMAT_URATIONAL>
<android.support.media.ExifInterface: int IFD_FORMAT_SBYTE>
<android.support.media.ExifInterface: int IFD_FORMAT_UNDEFINED>
<android.support.media.ExifInterface: int IFD_FORMAT_SSHORT>
<android.support.media.ExifInterface: int IFD_FORMAT_SLONG>
<android.support.media.ExifInterface: int IFD_FORMAT_SRATIONAL>
<android.support.media.ExifInterface: int IFD_FORMAT_SINGLE>
<android.support.media.ExifInterface: int IFD_FORMAT_DOUBLE>
<android.support.media.ExifInterface: int IFD_FORMAT_IFD>
<android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>
<android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>
<android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_GPS_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] PEF_TAGS>
<android.support.media.ExifInterface: int IFD_TYPE_PRIMARY>
<android.support.media.ExifInterface: int IFD_TYPE_EXIF>
<android.support.media.ExifInterface: int IFD_TYPE_GPS>
<android.support.media.ExifInterface: int IFD_TYPE_INTEROPERABILITY>
<android.support.media.ExifInterface: int IFD_TYPE_THUMBNAIL>
<android.support.media.ExifInterface: int IFD_TYPE_PREVIEW>
<android.support.media.ExifInterface: int IFD_TYPE_ORF_MAKER_NOTE>
<android.support.media.ExifInterface: int IFD_TYPE_ORF_CAMERA_SETTINGS>
<android.support.media.ExifInterface: int IFD_TYPE_ORF_IMAGE_PROCESSING>
<android.support.media.ExifInterface: int IFD_TYPE_PEF>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>
<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG>
<android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>
<android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>
<android.support.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>
<android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>
<android.support.media.ExifInterface: java.nio.charset.Charset ASCII>
<android.support.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>
<android.support.media.ExifInterface: byte MARKER>
<android.support.media.ExifInterface: byte MARKER_SOI>
<android.support.media.ExifInterface: byte MARKER_SOF0>
<android.support.media.ExifInterface: byte MARKER_SOF1>
<android.support.media.ExifInterface: byte MARKER_SOF2>
<android.support.media.ExifInterface: byte MARKER_SOF3>
<android.support.media.ExifInterface: byte MARKER_SOF5>
<android.support.media.ExifInterface: byte MARKER_SOF6>
<android.support.media.ExifInterface: byte MARKER_SOF7>
<android.support.media.ExifInterface: byte MARKER_SOF9>
<android.support.media.ExifInterface: byte MARKER_SOF10>
<android.support.media.ExifInterface: byte MARKER_SOF11>
<android.support.media.ExifInterface: byte MARKER_SOF13>
<android.support.media.ExifInterface: byte MARKER_SOF14>
<android.support.media.ExifInterface: byte MARKER_SOF15>
<android.support.media.ExifInterface: byte MARKER_SOS>
<android.support.media.ExifInterface: byte MARKER_APP1>
<android.support.media.ExifInterface: byte MARKER_COM>
<android.support.media.ExifInterface: byte MARKER_EOI>
<android.support.media.ExifInterface: int IMAGE_TYPE_UNKNOWN>
<android.support.media.ExifInterface: int IMAGE_TYPE_ARW>
<android.support.media.ExifInterface: int IMAGE_TYPE_CR2>
<android.support.media.ExifInterface: int IMAGE_TYPE_DNG>
<android.support.media.ExifInterface: int IMAGE_TYPE_JPEG>
<android.support.media.ExifInterface: int IMAGE_TYPE_NEF>
<android.support.media.ExifInterface: int IMAGE_TYPE_NRW>
<android.support.media.ExifInterface: int IMAGE_TYPE_ORF>
<android.support.media.ExifInterface: int IMAGE_TYPE_PEF>
<android.support.media.ExifInterface: int IMAGE_TYPE_RAF>
<android.support.media.ExifInterface: int IMAGE_TYPE_RW2>
<android.support.media.ExifInterface: int IMAGE_TYPE_SRW>
<android.support.media.ExifInterface: java.lang.String mFilename>
<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>
<android.support.media.ExifInterface: int mMimeType>
<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>
<android.support.media.ExifInterface: java.util.Set mAttributesOffsets>
<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>
<android.support.media.ExifInterface: boolean mHasThumbnail>
<android.support.media.ExifInterface: int mThumbnailOffset>
<android.support.media.ExifInterface: int mThumbnailLength>
<android.support.media.ExifInterface: byte[] mThumbnailBytes>
<android.support.media.ExifInterface: int mThumbnailCompression>
<android.support.media.ExifInterface: int mExifOffset>
<android.support.media.ExifInterface: int mOrfMakerNoteOffset>
<android.support.media.ExifInterface: int mOrfThumbnailOffset>
<android.support.media.ExifInterface: int mOrfThumbnailLength>
<android.support.media.ExifInterface: int mRw2JpgFromRawOffset>
<android.support.media.ExifInterface: boolean mIsSupportedFile>
<android.support.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>
<android.support.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern>
    public void <init>(java.lang.String) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r10;
        android.support.media.ExifInterface$ExifTag[][] $r3, $r6;
        int $i0, $i1;
        java.util.HashMap[] $r4;
        java.util.HashSet $r5;
        java.nio.ByteOrder $r7;
        java.io.FileInputStream $r8, r11;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r3;

        $r4 = newarray (java.util.HashMap)[$i0];

        r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes> = $r4;

        $r5 = new java.util.HashSet;

        $r6 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r6;

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.support.media.ExifInterface: java.util.Set mAttributesOffsets> = $r5;

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r7;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filename cannot be null");

        throw $r9;

     label1:
        r11 = null;

        r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<android.support.media.ExifInterface: java.lang.String mFilename> = r1;

     label2:
        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r11 = $r8;

        specialinvoke r0.<android.support.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r11);

     label3:
        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r11);

        goto label5;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r11);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.io.InputStream r1;
        android.support.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        boolean $z0;
        android.content.res.AssetManager$AssetInputStream $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.support.media.ExifInterface: java.util.Set mAttributesOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("inputStream cannot be null");

        throw $r8;

     label1:
        r0.<android.support.media.ExifInterface: java.lang.String mFilename> = null;

        $z0 = r1 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z0 == 0 goto label2;

        $r7 = (android.content.res.AssetManager$AssetInputStream) r1;

        r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = $r7;

        goto label3;

     label2:
        r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

     label3:
        specialinvoke r0.<android.support.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r1);

        return;
    }

    private android.support.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ExifAttribute r1;
        java.lang.String $r2, r6;
        boolean $z0;
        java.util.HashMap[] $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        int i0, $i1;
        android.support.media.ExifInterface$ExifTag[][] $r7;

        r0 := @this: android.support.media.ExifInterface;

        r6 := @parameter0: java.lang.String;

        $r2 = "ISOSpeedRatings";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        r6 = "PhotographicSensitivity";

     label1:
        i0 = 0;

     label2:
        $r7 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r7;

        if i0 >= $i1 goto label4;

        $r3 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r1 = (android.support.media.ExifInterface$ExifAttribute) $r5;

        if r1 == null goto label3;

        return r1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return null;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1, $r5, $r11, $r13, $r24, $r28, $r30;
        android.support.media.ExifInterface$ExifAttribute r2;
        java.util.HashSet $r3;
        boolean $z0, $z1;
        java.nio.ByteOrder $r4, $r6, $r29;
        double $d0;
        int $i0, $i2, $i5, $i8, $i11, $i12, $i13;
        java.lang.Object $r7;
        android.support.media.ExifInterface$Rational[] $r8, r32;
        java.lang.StringBuilder $r9, $r10, $r12, $r25, $r26, $r27;
        java.lang.Object[] $r14;
        android.support.media.ExifInterface$Rational $r15, $r16, $r18, $r19, $r21, $r22;
        long $l3, $l4, $l6, $l7, $l9, $l10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.Integer $r17, $r20, $r23;
        java.lang.Throwable $r31, r33;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 == null goto label8;

        $r3 = <android.support.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r29 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r30 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r29);

        return $r30;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z1 == 0 goto label5;

        $i0 = r2.<android.support.media.ExifInterface$ExifAttribute: int format>;

        if $i0 == 5 goto label2;

        $i12 = r2.<android.support.media.ExifInterface$ExifAttribute: int format>;

        if $i12 == 10 goto label2;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GPS Timestamp format is not rational. format=");

        $i13 = r2.<android.support.media.ExifInterface$ExifAttribute: int format>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r28);

        return null;

     label2:
        $r6 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r7 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r6);

        $r8 = (android.support.media.ExifInterface$Rational[]) $r7;

        r32 = (android.support.media.ExifInterface$Rational[]) $r8;

        if r32 == null goto label3;

        $i2 = lengthof r32;

        if $i2 == 3 goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid GPS Timestamp array. array=");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r32);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r13);

        return null;

     label4:
        $r14 = newarray (java.lang.Object)[3];

        $r15 = r32[0];

        $l3 = $r15.<android.support.media.ExifInterface$Rational: long numerator>;

        $f1 = (float) $l3;

        $r16 = r32[0];

        $l4 = $r16.<android.support.media.ExifInterface$Rational: long denominator>;

        $f0 = (float) $l4;

        $f2 = $f1 / $f0;

        $i5 = (int) $f2;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r14[0] = $r17;

        $r18 = r32[1];

        $l6 = $r18.<android.support.media.ExifInterface$Rational: long numerator>;

        $f4 = (float) $l6;

        $r19 = r32[1];

        $l7 = $r19.<android.support.media.ExifInterface$Rational: long denominator>;

        $f3 = (float) $l7;

        $f5 = $f4 / $f3;

        $i8 = (int) $f5;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r14[1] = $r20;

        $r21 = r32[2];

        $l9 = $r21.<android.support.media.ExifInterface$Rational: long numerator>;

        $f7 = (float) $l9;

        $r22 = r32[2];

        $l10 = $r22.<android.support.media.ExifInterface$Rational: long denominator>;

        $f6 = (float) $l10;

        $f8 = $f7 / $f6;

        $i11 = (int) $f8;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r14[2] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r14);

        return $r24;

     label5:
        $r4 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $d0 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r4);

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

     label6:
        return $r5;

     label7:
        $r31 := @caughtexception;

        r33 = $r31;

        return null;

     label8:
        return null;

        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    public int getAttributeInt(java.lang.String, int)
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1;
        int i0, $i1;
        android.support.media.ExifInterface$ExifAttribute r2;
        java.lang.Throwable r3, $r5;
        java.nio.ByteOrder $r4;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $r4 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i1 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r4);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double getAttributeDouble(java.lang.String, double)
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1;
        double d0, $d1;
        android.support.media.ExifInterface$ExifAttribute r2;
        java.lang.Throwable r3, $r5;
        java.nio.ByteOrder $r4;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 = specialinvoke r0.<android.support.media.ExifInterface: android.support.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 != null goto label1;

        return d0;

     label1:
        $r4 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $d1 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r4);

     label2:
        return $d1;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        return d0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ExifTag r1;
        android.util.Pair r2;
        java.lang.String $r3, $r14, $r20, $r22, $r23, $r29, $r35, $r37, $r38, $r44, $r50, $r62, $r72, $r77, $r84, $r93, $r97, $r109, $r112, $r115, $r123, $r130, r131, r132, $r136, $r137;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashMap[] $r4, $r9, $r15, $r24, $r30, $r39, $r45, $r51, $r55, $r102;
        java.util.HashMap $r5, $r11, $r17, $r26, $r32, $r41, $r47, $r52, $r56, $r103;
        java.lang.Object $r6, $r7, $r63, $r81, $r86, $r90, $r98, $r100;
        java.lang.Integer $r8, $r64, $r82, $r87, $r91, $r99, $r101;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i44, $i45, i46, i47, i48, i49, i50, i51, i52;
        java.nio.ByteOrder $r10, $r16, $r25, $r31, $r40, $r46;
        android.support.media.ExifInterface$ExifAttribute $r12, $r18, $r27, $r33, $r42, $r48, $r53, $r57;
        double $d0, $d1, $d2, $d3, $d4, d5;
        android.support.media.ExifInterface$Rational $r21, $r36, $r106;
        long $l6, $l7, $l13, $l14, $l17;
        java.lang.StringBuilder $r59, $r60, $r61, $r65, $r67, $r68, $r69, $r70, $r73, $r74, $r75, $r78, $r79, $r80, $r85, $r88, $r89, $r94, $r95, $r96, $r108, $r110, $r111, $r113, $r114, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r125, $r126, $r127, $r128, $r129;
        java.lang.String[] $r71, $r76, $r83, $r92, r138, r140, r142, r144, r146, r147, r149, r150;
        java.util.HashSet $r105;
        java.util.regex.Pattern $r107;
        java.lang.Throwable $r124, r134;
        java.util.regex.Matcher r133;
        android.support.media.ExifInterface$ExifTag[][] $r135;
        int[] r139, r141;
        long[] r143;
        android.support.media.ExifInterface$Rational[] r145, r148;
        double[] r151;

        r0 := @this: android.support.media.ExifInterface;

        r131 := @parameter0: java.lang.String;

        r132 := @parameter1: java.lang.String;

        $r3 = "ISOSpeedRatings";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r131);

        if $z0 == 0 goto label01;

        r131 = "PhotographicSensitivity";

     label01:
        if r132 == null goto label06;

        $r105 = <android.support.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z2 = virtualinvoke $r105.<java.util.HashSet: boolean contains(java.lang.Object)>(r131);

        if $z2 == 0 goto label06;

        $z3 = virtualinvoke r131.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z3 == 0 goto label03;

        $r107 = <android.support.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern>;

        r133 = virtualinvoke $r107.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r132);

        $z4 = virtualinvoke r133.<java.util.regex.Matcher: boolean find()>();

        if $z4 != 0 goto label02;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r132);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r123);

        return;

     label02:
        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke r133.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i39 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r109);

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r112 = virtualinvoke r133.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i40 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r112);

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r115 = virtualinvoke r133.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i41 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r115);

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1");

        r132 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label03:
        d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r132);

        $r106 = new android.support.media.ExifInterface$Rational;

        specialinvoke $r106.<android.support.media.ExifInterface$Rational: void <init>(double)>(d5);

        r132 = virtualinvoke $r106.<android.support.media.ExifInterface$Rational: java.lang.String toString()>();

     label04:
        goto label06;

     label05:
        $r124 := @caughtexception;

        r134 = $r124;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r132);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r130);

        return;

     label06:
        i44 = 0;

     label07:
        $r135 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i45 = lengthof $r135;

        if i44 >= $i45 goto label43;

        if i44 != 4 goto label08;

        $z1 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z1 != 0 goto label08;

        goto label42;

     label08:
        $r4 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r5 = $r4[i44];

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r131);

        r1 = (android.support.media.ExifInterface$ExifTag) $r6;

        if r1 == null goto label42;

        if r132 != null goto label09;

        $r102 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r103 = $r102[i44];

        virtualinvoke $r103.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r131);

        goto label42;

     label09:
        r2 = staticinvoke <android.support.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>(r132);

        $i0 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        $r7 = r2.<android.util.Pair: java.lang.Object first>;

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i0 == $i1 goto label10;

        $i22 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        $r63 = r2.<android.util.Pair: java.lang.Object second>;

        $r64 = (java.lang.Integer) $r63;

        $i23 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        if $i22 != $i23 goto label11;

     label10:
        i46 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        goto label20;

     label11:
        $i24 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i24 == -1 goto label13;

        $i35 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r98 = r2.<android.util.Pair: java.lang.Object first>;

        $r99 = (java.lang.Integer) $r98;

        $i36 = virtualinvoke $r99.<java.lang.Integer: int intValue()>();

        if $i35 == $i36 goto label12;

        $i37 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r100 = r2.<android.util.Pair: java.lang.Object second>;

        $r101 = (java.lang.Integer) $r100;

        $i38 = virtualinvoke $r101.<java.lang.Integer: int intValue()>();

        if $i37 != $i38 goto label13;

     label12:
        i46 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        goto label20;

     label13:
        $i25 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i25 == 1 goto label14;

        $i26 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i26 == 7 goto label14;

        $i27 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i27 != 2 goto label15;

     label14:
        i46 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        goto label20;

     label15:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given tag (");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") value didn\'t match with one of expected ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formats: ");

        $r71 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i28 = r1.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        $r72 = $r71[$i28];

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $i29 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i29 != -1 goto label16;

        $r136 = "";

        goto label17;

     label16:
        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r76 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i30 = r1.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r77 = $r76[$i30];

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r136 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        $r79 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r136);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (guess: ");

        $r83 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r81 = r2.<android.util.Pair: java.lang.Object first>;

        $r82 = (java.lang.Integer) $r81;

        $i31 = virtualinvoke $r82.<java.lang.Integer: int intValue()>();

        $r84 = $r83[$i31];

        $r85 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = r2.<android.util.Pair: java.lang.Object second>;

        $r87 = (java.lang.Integer) $r86;

        $i32 = virtualinvoke $r87.<java.lang.Integer: int intValue()>();

        if $i32 != -1 goto label18;

        $r137 = "";

        goto label19;

     label18:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r92 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r90 = r2.<android.util.Pair: java.lang.Object second>;

        $r91 = (java.lang.Integer) $r90;

        $i33 = virtualinvoke $r91.<java.lang.Integer: int intValue()>();

        $r93 = $r92[$i33];

        $r94 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r137 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        $r95 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r97);

        goto label42;

     label20:
        tableswitch(i46)
        {
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label23;
            case 4: goto label29;
            case 5: goto label32;
            case 6: goto label41;
            case 7: goto label22;
            case 8: goto label41;
            case 9: goto label26;
            case 10: goto label35;
            case 11: goto label41;
            case 12: goto label38;
            default: goto label41;
        };

     label21:
        $r55 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r56 = $r55[i44];

        $r57 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createByte(java.lang.String)>(r132);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r57);

        goto label42;

     label22:
        $r51 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r52 = $r51[i44];

        $r53 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r132);

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r53);

        goto label42;

     label23:
        r138 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i18 = lengthof r138;

        r139 = newarray (int)[$i18];

        i47 = 0;

     label24:
        $i19 = lengthof r138;

        if i47 >= $i19 goto label25;

        $r50 = r138[i47];

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r50);

        r139[i47] = $i20;

        i47 = i47 + 1;

        goto label24;

     label25:
        $r45 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r47 = $r45[i44];

        $r46 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r48 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)>(r139, $r46);

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r48);

        goto label42;

     label26:
        r140 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i8 = lengthof r140;

        r141 = newarray (int)[$i8];

        i48 = 0;

     label27:
        $i9 = lengthof r140;

        if i48 >= $i9 goto label28;

        $r29 = r140[i48];

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        r141[i48] = $i10;

        i48 = i48 + 1;

        goto label27;

     label28:
        $r24 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r26 = $r24[i44];

        $r25 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r27 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)>(r141, $r25);

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r27);

        goto label42;

     label29:
        r142 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i15 = lengthof r142;

        r143 = newarray (long)[$i15];

        i49 = 0;

     label30:
        $i16 = lengthof r142;

        if i49 >= $i16 goto label31;

        $r44 = r142[i49];

        $l17 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r44);

        r143[i49] = $l17;

        i49 = i49 + 1;

        goto label30;

     label31:
        $r39 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r41 = $r39[i44];

        $r40 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r42 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)>(r143, $r40);

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r42);

        goto label42;

     label32:
        r144 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i11 = lengthof r144;

        r145 = newarray (android.support.media.ExifInterface$Rational)[$i11];

        i50 = 0;

     label33:
        $i12 = lengthof r144;

        if i50 >= $i12 goto label34;

        $r35 = r144[i50];

        r146 = virtualinvoke $r35.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r36 = new android.support.media.ExifInterface$Rational;

        $r37 = r146[0];

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r37);

        $l13 = (long) $d3;

        $r38 = r146[1];

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r38);

        $l14 = (long) $d4;

        specialinvoke $r36.<android.support.media.ExifInterface$Rational: void <init>(long,long)>($l13, $l14);

        r145[i50] = $r36;

        i50 = i50 + 1;

        goto label33;

     label34:
        $r30 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r32 = $r30[i44];

        $r31 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r33 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r145, $r31);

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r33);

        goto label42;

     label35:
        r147 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i4 = lengthof r147;

        r148 = newarray (android.support.media.ExifInterface$Rational)[$i4];

        i51 = 0;

     label36:
        $i5 = lengthof r147;

        if i51 >= $i5 goto label37;

        $r20 = r147[i51];

        r149 = virtualinvoke $r20.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r21 = new android.support.media.ExifInterface$Rational;

        $r22 = r149[0];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        $l6 = (long) $d1;

        $r23 = r149[1];

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r23);

        $l7 = (long) $d2;

        specialinvoke $r21.<android.support.media.ExifInterface$Rational: void <init>(long,long)>($l6, $l7);

        r148[i51] = $r21;

        i51 = i51 + 1;

        goto label36;

     label37:
        $r15 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r15[i44];

        $r16 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r18 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createSRational(android.support.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r148, $r16);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r18);

        goto label42;

     label38:
        r150 = virtualinvoke r132.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i2 = lengthof r150;

        r151 = newarray (double)[$i2];

        i52 = 0;

     label39:
        $i3 = lengthof r150;

        if i52 >= $i3 goto label40;

        $r14 = r150[i52];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        r151[i52] = $d0;

        i52 = i52 + 1;

        goto label39;

     label40:
        $r9 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r9[i44];

        $r10 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r12 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)>(r151, $r10);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r131, $r12);

        goto label42;

     label41:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data format isn\'t one of expected formats: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i46);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r62);

        goto label42;

     label42:
        i44 = i44 + 1;

        goto label07;

     label43:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
    }

    public void resetOrientation()
    {
        android.support.media.ExifInterface r0;
        java.lang.String $r1;

        r0 := @this: android.support.media.ExifInterface;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public void rotate(int)
    {
        android.support.media.ExifInterface r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, i9, i10, i12, i13, i14, i15, i17;
        java.util.List $r1, $r3, $r5, $r7, $r10, $r12;
        java.lang.Integer $r2, $r4, $r6, $r9, $r11, $r14;
        boolean $z0, $z1;
        java.lang.Object $r8, $r13;
        java.lang.IllegalArgumentException $r15;
        byte $b11, $b16;
        java.lang.String $r16;

        r0 := @this: android.support.media.ExifInterface;

        i0 := @parameter0: int;

        $i2 = i0 % 90;

        if $i2 == 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("degree should be a multiple of 90");

        throw $r15;

     label1:
        i1 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        $r1 = <android.support.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r10 = <android.support.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        i9 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>($r11);

        $i6 = i0 / 90;

        $i7 = i9 + $i6;

        i10 = $i7 % 4;

        if i10 >= 0 goto label2;

        $b11 = 4;

        goto label3;

     label2:
        $b11 = 0;

     label3:
        i12 = i10 + $b11;

        $r12 = <android.support.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i12);

        $r14 = (java.lang.Integer) $r13;

        i13 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        goto label8;

     label4:
        $r3 = <android.support.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z1 == 0 goto label7;

        $r5 = <android.support.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        i14 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>($r6);

        $i3 = i0 / 90;

        $i4 = i14 + $i3;

        i15 = $i4 % 4;

        if i15 >= 0 goto label5;

        $b16 = 4;

        goto label6;

     label5:
        $b16 = 0;

     label6:
        i17 = i15 + $b16;

        $r7 = <android.support.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i17);

        $r9 = (java.lang.Integer) $r8;

        i13 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label8;

     label7:
        i13 = 0;

     label8:
        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i13);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r16);

        return;
    }

    public void flipVertically()
    {
        android.support.media.ExifInterface r0;
        int i0;
        byte b1;
        java.lang.String $r1;

        r0 := @this: android.support.media.ExifInterface;

        i0 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            default: goto label09;
        };

     label01:
        b1 = 3;

        goto label10;

     label02:
        b1 = 2;

        goto label10;

     label03:
        b1 = 1;

        goto label10;

     label04:
        b1 = 8;

        goto label10;

     label05:
        b1 = 7;

        goto label10;

     label06:
        b1 = 6;

        goto label10;

     label07:
        b1 = 5;

        goto label10;

     label08:
        b1 = 4;

        goto label10;

     label09:
        b1 = 0;

     label10:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b1);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public void flipHorizontally()
    {
        android.support.media.ExifInterface r0;
        int i0;
        byte b1;
        java.lang.String $r1;

        r0 := @this: android.support.media.ExifInterface;

        i0 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            default: goto label09;
        };

     label01:
        b1 = 1;

        goto label10;

     label02:
        b1 = 4;

        goto label10;

     label03:
        b1 = 3;

        goto label10;

     label04:
        b1 = 6;

        goto label10;

     label05:
        b1 = 5;

        goto label10;

     label06:
        b1 = 8;

        goto label10;

     label07:
        b1 = 7;

        goto label10;

     label08:
        b1 = 2;

        goto label10;

     label09:
        b1 = 0;

     label10:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b1);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public boolean isFlipped()
    {
        android.support.media.ExifInterface r0;
        int i0;

        r0 := @this: android.support.media.ExifInterface;

        i0 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public int getRotationDegrees()
    {
        android.support.media.ExifInterface r0;
        int i0;

        r0 := @this: android.support.media.ExifInterface;

        i0 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        return 90;

     label2:
        return 180;

     label3:
        return 270;

     label4:
        return 0;
    }

    private boolean updateAttribute(java.lang.String, android.support.media.ExifInterface$ExifAttribute)
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1;
        android.support.media.ExifInterface$ExifAttribute r2;
        android.support.media.ExifInterface$ExifTag[][] $r3;
        int $i0, i1;
        java.util.HashMap[] $r4, $r6;
        java.util.HashMap $r5, $r7;
        boolean $z0, z1;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.media.ExifInterface$ExifAttribute;

        z1 = 0;

        i1 = 0;

     label1:
        $r3 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r5 = $r4[i1];

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[i1];

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        z1 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z1;
    }

    private void removeAttribute(java.lang.String)
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1;
        android.support.media.ExifInterface$ExifTag[][] $r2;
        int $i0, i1;
        java.util.HashMap[] $r3;
        java.util.HashMap $r4;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r2 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void loadAttributes(java.io.InputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.lang.Throwable r1, $r8, $r9, r13;
        android.support.media.ExifInterface$ExifTag[][] $r2;
        int $i0, $i1, $i2, i3;
        java.io.BufferedInputStream $r3, $r4, r11;
        android.support.media.ExifInterface$ByteOrderedDataInputStream $r5, r12;
        java.util.HashMap $r6;
        java.util.HashMap[] $r7;
        java.io.InputStream r10;

        r0 := @this: android.support.media.ExifInterface;

        r10 := @parameter0: java.io.InputStream;

     label01:
        i3 = 0;

     label02:
        $r2 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label03;

        $r7 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7[i3] = $r6;

        i3 = i3 + 1;

        goto label02;

     label03:
        $r3 = new java.io.BufferedInputStream;

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r10, 5000);

        r11 = $r3;

        $r4 = (java.io.BufferedInputStream) r11;

        $i1 = specialinvoke r0.<android.support.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)>($r4);

        r0.<android.support.media.ExifInterface: int mMimeType> = $i1;

        $r5 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r5.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r11);

        r12 = $r5;

        $i2 = r0.<android.support.media.ExifInterface: int mMimeType>;

        tableswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label04;
            case 5: goto label08;
            case 6: goto label08;
            case 7: goto label06;
            case 8: goto label08;
            case 9: goto label05;
            case 10: goto label07;
            case 11: goto label08;
            default: goto label09;
        };

     label04:
        specialinvoke r0.<android.support.media.ExifInterface: void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r12, 0, 0);

        goto label09;

     label05:
        specialinvoke r0.<android.support.media.ExifInterface: void getRafAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r12);

        goto label09;

     label06:
        specialinvoke r0.<android.support.media.ExifInterface: void getOrfAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r12);

        goto label09;

     label07:
        specialinvoke r0.<android.support.media.ExifInterface: void getRw2Attributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r12);

        goto label09;

     label08:
        specialinvoke r0.<android.support.media.ExifInterface: void getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r12);

        goto label09;

     label09:
        specialinvoke r0.<android.support.media.ExifInterface: void setThumbnailData(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r12);

        r0.<android.support.media.ExifInterface: boolean mIsSupportedFile> = 1;

     label10:
        specialinvoke r0.<android.support.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        goto label14;

     label11:
        $r8 := @caughtexception;

        r13 = $r8;

        r0.<android.support.media.ExifInterface: boolean mIsSupportedFile> = 0;

     label12:
        specialinvoke r0.<android.support.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        goto label14;

     label13:
        $r9 := @caughtexception;

        r1 = $r9;

        specialinvoke r0.<android.support.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        throw r1;

     label14:
        return;

        catch java.io.IOException from label01 to label10 with label11;
        catch java.lang.Throwable from label01 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private void printAttributes()
    {
        android.support.media.ExifInterface r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        android.support.media.ExifInterface$ExifAttribute r3;
        java.util.HashMap[] $r4, $r9, $r13;
        int $i0, $i1, i4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r18, $r19, $r22, $r23, $r25, $r26, $r29, $r30;
        java.util.HashMap $r10, $r14;
        java.lang.String $r12, $r21, $r24, $r28, $r31;
        java.util.Set $r15;
        boolean $z0;
        java.lang.Object $r16, $r17, $r20;
        java.nio.ByteOrder $r27;

        r0 := @this: android.support.media.ExifInterface;

        i4 = 0;

     label1:
        $r4 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $i0 = lengthof $r4;

        if i4 >= $i0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The size of tag group[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r9 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i4];

        $i1 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r12);

        $r13 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i4];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagName: ");

        $r20 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagType: ");

        $r24 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: java.lang.String toString()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagValue: \'");

        $r27 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r28 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r31);

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    public void saveAttributes() throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.io.File r1, r2, $r7, $r13;
        java.lang.Throwable r3, $r25;
        boolean $z0, $z1;
        java.io.IOException $r4, $r18, $r24;
        int $i0;
        java.lang.String $r5, $r9, $r12, $r14, $r17, $r21, $r23;
        byte[] $r6;
        java.lang.StringBuilder $r8, $r10, $r11, $r19, $r20, $r22;
        java.io.FileInputStream $r15, r26;
        java.io.FileOutputStream $r16, r27;

        r0 := @this: android.support.media.ExifInterface;

        $z0 = r0.<android.support.media.ExifInterface: boolean mIsSupportedFile>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i0 == 4 goto label2;

     label1:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface only supports saving attributes on JPEG formats.");

        throw $r4;

     label2:
        $r5 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        if $r5 != null goto label3;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface does not support saving attributes for the current input.");

        throw $r24;

     label3:
        $r6 = virtualinvoke r0.<android.support.media.ExifInterface: byte[] getThumbnail()>();

        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = $r6;

        $r7 = new java.io.File;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r12);

        r1 = $r7;

        $r13 = new java.io.File;

        $r14 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        r2 = $r13;

        $z1 = virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z1 != 0 goto label4;

        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not rename to ");

        $r21 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label4:
        r26 = null;

        r27 = null;

     label5:
        $r15 = new java.io.FileInputStream;

        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r26 = $r15;

        $r16 = new java.io.FileOutputStream;

        $r17 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.lang.String)>($r17);

        r27 = $r16;

        specialinvoke r0.<android.support.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)>(r26, r27);

     label6:
        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r26);

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r27);

        virtualinvoke r1.<java.io.File: boolean delete()>();

        goto label9;

     label7:
        $r25 := @caughtexception;

        r3 = $r25;

     label8:
        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r26);

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r27);

        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw r3;

     label9:
        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = null;

        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean hasThumbnail()
    {
        android.support.media.ExifInterface r0;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface;

        $z0 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        return $z0;
    }

    public byte[] getThumbnail()
    {
        android.support.media.ExifInterface r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: android.support.media.ExifInterface;

        $i0 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i0 == 6 goto label1;

        $i1 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i1 != 7 goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.support.media.ExifInterface: byte[] getThumbnailBytes()>();

        return $r1;

     label2:
        return null;
    }

    public byte[] getThumbnailBytes()
    {
        android.support.media.ExifInterface r0;
        byte[] r1, $r3, $r11, r15;
        java.lang.Throwable r2, $r12, $r13, r16;
        boolean $z0, $z1;
        android.content.res.AssetManager$AssetInputStream $r4;
        java.lang.String $r5, $r10;
        int $i0, $i3, $i6, $i7, $i8;
        long $l1, $l2, $l4;
        byte $b5;
        java.lang.Object r14;
        java.io.FileInputStream r17;
        java.io.FileNotFoundException r18;
        java.io.IOException r19, r20;
        java.io.InputStream r21, r22, r24, r25;
        java.io.Closeable r23, r26, r27, r28;

        r0 := @this: android.support.media.ExifInterface;

        $z0 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        if $r3 == null goto label02;

        $r11 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        return $r11;

     label02:
        r14 = null;

     label03:
        $r4 = r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r4 == null goto label06;

        r14 = r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        r21 = (java.io.InputStream) r14;

        $z1 = virtualinvoke r21.<java.io.InputStream: boolean markSupported()>();

        if $z1 == 0 goto label04;

        r22 = (java.io.InputStream) r14;

        virtualinvoke r22.<java.io.InputStream: void reset()>();

        goto label07;

     label04:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Cannot read thumbnail from inputstream without mark/reset support");

     label05:
        r23 = (java.io.Closeable) r14;

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r23);

        return null;

     label06:
        $r5 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        if $r5 == null goto label07;

        r17 = new java.io.FileInputStream;

        $r10 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r17.<java.io.FileInputStream: void <init>(java.lang.String)>($r10);

        r14 = r17;

     label07:
        if r14 != null goto label08;

        r18 = new java.io.FileNotFoundException;

        specialinvoke r18.<java.io.FileNotFoundException: void <init>()>();

        throw r18;

     label08:
        $i0 = r0.<android.support.media.ExifInterface: int mThumbnailOffset>;

        $l1 = (long) $i0;

        r24 = (java.io.InputStream) r14;

        $l2 = virtualinvoke r24.<java.io.InputStream: long skip(long)>($l1);

        $i3 = r0.<android.support.media.ExifInterface: int mThumbnailOffset>;

        $l4 = (long) $i3;

        $b5 = $l2 cmp $l4;

        if $b5 == 0 goto label09;

        r19 = new java.io.IOException;

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

        throw r19;

     label09:
        $i6 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        r15 = newarray (byte)[$i6];

        r25 = (java.io.InputStream) r14;

        $i7 = virtualinvoke r25.<java.io.InputStream: int read(byte[])>(r15);

        $i8 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        if $i7 == $i8 goto label10;

        r20 = new java.io.IOException;

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

        throw r20;

     label10:
        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = r15;

        r1 = r15;

     label11:
        r26 = (java.io.Closeable) r14;

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r26);

        return r1;

     label12:
        $r12 := @caughtexception;

        r16 = $r12;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Encountered exception while getting thumbnail", r16);

     label13:
        r27 = (java.io.Closeable) r14;

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r27);

        goto label16;

     label14:
        $r13 := @caughtexception;

        r2 = $r13;

     label15:
        r28 = (java.io.Closeable) r14;

        staticinvoke <android.support.media.ExifInterface: void closeQuietly(java.io.Closeable)>(r28);

        throw r2;

     label16:
        return null;

        catch java.io.IOException from label03 to label05 with label12;
        catch java.io.IOException from label06 to label11 with label12;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.lang.Throwable from label06 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public android.graphics.Bitmap getThumbnailBitmap()
    {
        android.support.media.ExifInterface r0;
        int[] r1;
        byte b0, $b11, $b15, $b20;
        android.support.media.ExifInterface$ExifAttribute r2, r21;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, i23;
        boolean $z0;
        byte[] $r3, $r4, $r6, $r17, $r18, $r19, $r20;
        android.graphics.Bitmap $r5, $r16;
        java.util.HashMap[] $r7, $r10;
        java.util.HashMap $r8, $r11;
        java.lang.Object $r9, $r12;
        java.nio.ByteOrder $r13, $r14;
        android.graphics.Bitmap$Config $r15;

        r0 := @this: android.support.media.ExifInterface;

        $z0 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        if $r3 != null goto label2;

        $r20 = virtualinvoke r0.<android.support.media.ExifInterface: byte[] getThumbnailBytes()>();

        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = $r20;

     label2:
        $i3 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i3 == 6 goto label3;

        $i5 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i5 != 7 goto label4;

     label3:
        $r4 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        $i4 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r4, 0, $i4);

        return $r5;

     label4:
        $i6 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i6 != 1 goto label7;

        $r6 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        $i7 = lengthof $r6;

        $i8 = $i7 / 3;

        r1 = newarray (int)[$i8];

        b0 = 0;

        i23 = 0;

     label5:
        $i9 = lengthof r1;

        if i23 >= $i9 goto label6;

        $r17 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        $i10 = 3 * i23;

        $b11 = $r17[$i10];

        $i12 = $b11 << 16;

        $i17 = b0 + $i12;

        $r18 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        $i13 = 3 * i23;

        $i14 = $i13 + 1;

        $b15 = $r18[$i14];

        $i16 = $b15 << 8;

        $i21 = $i17 + $i16;

        $r19 = r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes>;

        $i18 = 3 * i23;

        $i19 = $i18 + 2;

        $b20 = $r19[$i19];

        $i22 = $i21 + $b20;

        r1[i23] = $i22;

        i23 = i23 + 1;

        goto label5;

     label6:
        $r7 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[4];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r21 = (android.support.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[4];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r12;

        if r21 == null goto label7;

        if r2 == null goto label7;

        $r13 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r21.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r13);

        $r14 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r14);

        $r15 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r16 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, i2, i1, $r15);

        return $r16;

     label7:
        return null;
    }

    public boolean isThumbnailCompressed()
    {
        android.support.media.ExifInterface r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface;

        $i0 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i0 == 6 goto label1;

        $i1 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        if $i1 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public long[] getThumbnailRange()
    {
        android.support.media.ExifInterface r0;
        long[] r1;
        boolean $z0;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: android.support.media.ExifInterface;

        $z0 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = newarray (long)[2];

        $i0 = r0.<android.support.media.ExifInterface: int mThumbnailOffset>;

        $l1 = (long) $i0;

        r1[0] = $l1;

        $i2 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        $l3 = (long) $i2;

        r1[1] = $l3;

        return r1;
    }

    public boolean getLatLong(float[])
    {
        android.support.media.ExifInterface r0;
        float[] r1;
        double[] r2;
        double $d0, $d1;
        float $f0, $f1;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: float[];

        r2 = virtualinvoke r0.<android.support.media.ExifInterface: double[] getLatLong()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $d0 = r2[0];

        $f0 = (float) $d0;

        r1[0] = $f0;

        $d1 = r2[1];

        $f1 = (float) $d1;

        r1[1] = $f1;

        return 1;
    }

    public double[] getLatLong()
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1, r2, r3, r4, $r10, $r12;
        double d0, d1;
        double[] $r5;
        java.lang.Throwable $r6, r13;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.Object[] $r9;

        r0 := @this: android.support.media.ExifInterface;

        r1 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitude");

        r2 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitudeRef");

        r3 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitude");

        r4 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitudeRef");

        if r1 == null goto label4;

        if r2 == null goto label4;

        if r3 == null goto label4;

        if r4 == null goto label4;

     label1:
        d1 = staticinvoke <android.support.media.ExifInterface: double convertRationalLatLonToDouble(java.lang.String,java.lang.String)>(r1, r2);

        d0 = staticinvoke <android.support.media.ExifInterface: double convertRationalLatLonToDouble(java.lang.String,java.lang.String)>(r3, r4);

        $r5 = newarray (double)[2];

        $r5[0] = d1;

        $r5[1] = d0;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latitude/longitude values are not parseable. ");

        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = r1;

        $r9[1] = r2;

        $r9[2] = r3;

        $r9[3] = r4;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("latValue=%s, latRef=%s, lngValue=%s, lngRef=%s", $r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r12);

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void setGpsInfo(android.location.Location)
    {
        android.support.media.ExifInterface r0;
        android.location.Location r1;
        java.lang.String[] r2;
        java.lang.String $r3, $r6, $r9, $r10, $r11;
        double $d0, $d1, $d2, $d3;
        android.support.media.ExifInterface$Rational $r4;
        float $f0, $f1, $f2, $f3;
        java.util.concurrent.TimeUnit $r5;
        long $l0, $l1;
        java.util.Date $r7;
        java.text.SimpleDateFormat $r8;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.location.Location;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.location.Location: java.lang.String getProvider()>();

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSProcessingMethod", $r3);

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        virtualinvoke r0.<android.support.media.ExifInterface: void setLatLong(double,double)>($d0, $d1);

        $d2 = virtualinvoke r1.<android.location.Location: double getAltitude()>();

        virtualinvoke r0.<android.support.media.ExifInterface: void setAltitude(double)>($d2);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSSpeedRef", "K");

        $r4 = new android.support.media.ExifInterface$Rational;

        $f0 = virtualinvoke r1.<android.location.Location: float getSpeed()>();

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l0 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);

        $f1 = (float) $l0;

        $f2 = $f0 * $f1;

        $f3 = $f2 / 1000.0F;

        $d3 = (double) $f3;

        specialinvoke $r4.<android.support.media.ExifInterface$Rational: void <init>(double)>($d3);

        $r6 = virtualinvoke $r4.<android.support.media.ExifInterface$Rational: java.lang.String toString()>();

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSSpeed", $r6);

        $r8 = <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        $r7 = new java.util.Date;

        $l1 = virtualinvoke r1.<android.location.Location: long getTime()>();

        specialinvoke $r7.<java.util.Date: void <init>(long)>($l1);

        $r9 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        r2 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\s+", -1);

        $r10 = r2[0];

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSDateStamp", $r10);

        $r11 = r2[1];

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSTimeStamp", $r11);

        return;
    }

    public void setLatLong(double, double)
    {
        android.support.media.ExifInterface r0;
        double d0, d1, $d2, $d3;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1;
        java.lang.String $r1, $r2, $r12, $r18, $r19, $r20;
        java.lang.IllegalArgumentException $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: android.support.media.ExifInterface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpg -90.0;

        if $b0 < 0 goto label1;

        $b1 = d0 cmpl 90.0;

        if $b1 > 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latitude value ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        $b2 = d1 cmpg -180.0;

        if $b2 < 0 goto label3;

        $b3 = d1 cmpl 180.0;

        if $b3 > 0 goto label3;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z1 == 0 goto label4;

     label3:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Longitude value ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label4:
        $b4 = d0 cmpl 0.0;

        if $b4 < 0 goto label5;

        $r19 = "N";

        goto label6;

     label5:
        $r19 = "S";

     label6:
        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLatitudeRef", $r19);

        $d2 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $r1 = specialinvoke r0.<android.support.media.ExifInterface: java.lang.String convertDecimalDegree(double)>($d2);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLatitude", $r1);

        $b5 = d1 cmpl 0.0;

        if $b5 < 0 goto label7;

        $r20 = "E";

        goto label8;

     label7:
        $r20 = "W";

     label8:
        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLongitudeRef", $r20);

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $r2 = specialinvoke r0.<android.support.media.ExifInterface: java.lang.String convertDecimalDegree(double)>($d3);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLongitude", $r2);

        return;
    }

    public double getAltitude(double)
    {
        android.support.media.ExifInterface r0;
        double d0, d1, $d2, $d3;
        int i0;
        byte $b1, $b2;

        r0 := @this: android.support.media.ExifInterface;

        d0 := @parameter0: double;

        d1 = virtualinvoke r0.<android.support.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>("GPSAltitude", -1.0);

        i0 = virtualinvoke r0.<android.support.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("GPSAltitudeRef", -1);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label3;

        if i0 < 0 goto label3;

        if i0 != 1 goto label1;

        $b2 = -1;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        $d2 = (double) $b2;

        $d3 = d1 * $d2;

        return $d3;

     label3:
        return d0;
    }

    public void setAltitude(double)
    {
        android.support.media.ExifInterface r0;
        double d0, $d1;
        java.lang.String r1, $r3, $r4;
        byte $b0;
        android.support.media.ExifInterface$Rational $r2;

        r0 := @this: android.support.media.ExifInterface;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $r4 = "0";

        goto label2;

     label1:
        $r4 = "1";

     label2:
        r1 = $r4;

        $r2 = new android.support.media.ExifInterface$Rational;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        specialinvoke $r2.<android.support.media.ExifInterface$Rational: void <init>(double)>($d1);

        $r3 = virtualinvoke $r2.<android.support.media.ExifInterface$Rational: java.lang.String toString()>();

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSAltitude", $r3);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSAltitudeRef", r1);

        return;
    }

    public void setDateTime(long)
    {
        android.support.media.ExifInterface r0;
        long l0, l1;
        java.util.Date $r1;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r3, $r4;

        r0 := @this: android.support.media.ExifInterface;

        l0 := @parameter0: long;

        l1 = l0 % 1000L;

        $r2 = <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l0);

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("DateTime", $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        virtualinvoke r0.<android.support.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("SubSecTime", $r4);

        return;
    }

    public long getDateTime()
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1, r3;
        java.text.ParsePosition r2, $r6;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;
        boolean $z0;
        java.text.SimpleDateFormat $r7;
        byte $b0;
        java.lang.Throwable $r8, $r9, r11, r12;
        java.util.Date r10;
        long l1, l2;

        r0 := @this: android.support.media.ExifInterface;

        r1 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        if r1 == null goto label01;

        $r4 = <android.support.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label02;

     label01:
        return -1L;

     label02:
        $r6 = new java.text.ParsePosition;

        specialinvoke $r6.<java.text.ParsePosition: void <init>(int)>(0);

        r2 = $r6;

     label03:
        $r7 = <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r10 = virtualinvoke $r7.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        if r10 != null goto label05;

     label04:
        return -1L;

     label05:
        l1 = virtualinvoke r10.<java.util.Date: long getTime()>();

        r3 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTime");

        if r3 == null goto label11;

     label06:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label07:
        $b0 = l2 cmp 1000L;

        if $b0 <= 0 goto label08;

        l2 = l2 / 10L;

        goto label07;

     label08:
        l1 = l1 + l2;

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        r11 = $r8;

     label11:
        return l1;

     label12:
        $r9 := @caughtexception;

        r12 = $r9;

        return -1L;

        catch java.lang.NumberFormatException from label06 to label09 with label10;
        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label05 to label11 with label12;
    }

    public long getGpsDateTime()
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1, r2, r3;
        java.text.ParsePosition r4, $r11;
        java.util.regex.Pattern $r5, $r13;
        java.util.regex.Matcher $r6, $r14;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.text.SimpleDateFormat $r12;
        long $l0;
        java.lang.Throwable $r15, r17;
        java.util.Date r16;

        r0 := @this: android.support.media.ExifInterface;

        r1 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSDateStamp");

        r2 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSTimeStamp");

        if r1 == null goto label1;

        if r2 == null goto label1;

        $r5 = <android.support.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

        $r13 = <android.support.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r14 = virtualinvoke $r13.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        $z1 = virtualinvoke $r14.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label2;

     label1:
        return -1L;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.text.ParsePosition;

        specialinvoke $r11.<java.text.ParsePosition: void <init>(int)>(0);

        r4 = $r11;

     label3:
        $r12 = <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r16 = virtualinvoke $r12.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r3, r4);

        if r16 != null goto label5;

     label4:
        return -1L;

     label5:
        $l0 = virtualinvoke r16.<java.util.Date: long getTime()>();

     label6:
        return $l0;

     label7:
        $r15 := @caughtexception;

        r17 = $r15;

        return -1L;

        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    private static double convertRationalLatLonToDouble(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r17, $r19;
        java.lang.Throwable $r18, r24;
        java.lang.String[] r20, r21, r22, r23;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        r20 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $r2 = r20[0];

        r21 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r3 = r21[0];

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r5 = r21[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        d0 = $d4 / $d5;

        $r7 = r20[1];

        r22 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r8 = r22[0];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $r10 = r22[1];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        d1 = $d6 / $d7;

        $r12 = r20[2];

        r23 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r13 = r23[0];

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        $r15 = r23[1];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $d9 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r16);

        d2 = $d8 / $d9;

        $d10 = d1 / 60.0;

        $d12 = d0 + $d10;

        $d11 = d2 / 3600.0;

        d3 = $d12 + $d11;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("S");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("W");

        if $z1 == 0 goto label4;

     label2:
        $d13 = neg d3;

     label3:
        return $d13;

     label4:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("N");

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("E");

        if $z3 == 0 goto label6;

     label5:
        return d3;

     label6:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r17;

     label7:
        $r18 := @caughtexception;

        r24 = $r18;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

        catch java.lang.NumberFormatException from label1 to label3 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label3 with label7;
        catch java.lang.NumberFormatException from label4 to label5 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label4 to label5 with label7;
        catch java.lang.NumberFormatException from label6 to label7 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label6 to label7 with label7;
    }

    private java.lang.String convertDecimalDegree(double)
    {
        android.support.media.ExifInterface r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        long l0, l1, l2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.support.media.ExifInterface;

        d0 := @parameter0: double;

        l0 = (long) d0;

        $d1 = (double) l0;

        $d2 = d0 - $d1;

        $d3 = $d2 * 60.0;

        l1 = (long) $d3;

        $d4 = (double) l0;

        $d7 = d0 - $d4;

        $d5 = (double) l1;

        $d6 = $d5 / 60.0;

        $d8 = $d7 - $d6;

        $d9 = $d8 * 3600.0;

        $d10 = $d9 * 1.0E7;

        l2 = staticinvoke <java.lang.Math: long round(double)>($d10);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/10000000");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private int getMimeType(java.io.BufferedInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.io.BufferedInputStream r1;
        byte[] r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.io.BufferedInputStream;

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(5000);

        r2 = newarray (byte)[5000];

        virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        $z0 = staticinvoke <android.support.media.ExifInterface: boolean isJpegFormat(byte[])>(r2);

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $z1 = specialinvoke r0.<android.support.media.ExifInterface: boolean isRafFormat(byte[])>(r2);

        if $z1 == 0 goto label2;

        return 9;

     label2:
        $z2 = specialinvoke r0.<android.support.media.ExifInterface: boolean isOrfFormat(byte[])>(r2);

        if $z2 == 0 goto label3;

        return 7;

     label3:
        $z3 = specialinvoke r0.<android.support.media.ExifInterface: boolean isRw2Format(byte[])>(r2);

        if $z3 == 0 goto label4;

        return 10;

     label4:
        return 0;
    }

    private static boolean isJpegFormat(byte[]) throws java.io.IOException
    {
        byte[] r0, $r1, $r2;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @parameter0: byte[];

        i3 = 0;

     label1:
        $r1 = <android.support.media.ExifInterface: byte[] JPEG_SIGNATURE>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $b2 = r0[i3];

        $r2 = <android.support.media.ExifInterface: byte[] JPEG_SIGNATURE>;

        $b1 = $r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isRafFormat(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        byte[] r1, r2;
        java.lang.String $r3;
        java.nio.charset.Charset $r4;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: byte[];

        $r3 = "FUJIFILMCCD-RAW";

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        i3 = 0;

     label1:
        $i0 = lengthof r2;

        if i3 >= $i0 goto label3;

        $b2 = r1[i3];

        $b1 = r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isOrfFormat(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        byte[] r1;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r2, $r3;
        short s0;
        java.nio.ByteOrder $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: byte[];

        $r3 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r2 = $r3;

        $r4 = specialinvoke r0.<android.support.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r2);

        r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r4;

        $r5 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        s0 = virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        if s0 == 20306 goto label1;

        if s0 != 21330 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isRw2Format(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        byte[] r1;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r2, $r3;
        short s0;
        java.nio.ByteOrder $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: byte[];

        $r3 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r2 = $r3;

        $r4 = specialinvoke r0.<android.support.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r2);

        r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r4;

        $r5 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        s0 = virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        virtualinvoke r2.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        if s0 != 85 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream, int, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, i18, i20, i21, i23, i25, i26, i27;
        byte[] r2, $r15, r49, r50;
        java.nio.ByteOrder $r3, $r4, $r21, $r26;
        long $l2, $l12, $l14;
        byte $b3, $b4, b19, b22, b24;
        java.lang.String $r5, $r9, $r34, $r36, $r40, $r42, $r46, $r48;
        java.io.IOException $r6, $r7, $r14, $r16, $r17, $r18, $r29, $r30, $r31, $r37, $r43;
        java.util.HashMap[] $r8, $r19, $r24;
        java.nio.charset.Charset $r10;
        java.util.HashMap $r11, $r20, $r25;
        android.support.media.ExifInterface$ExifAttribute $r12, $r22, $r27;
        boolean $z0;
        java.lang.StringBuilder $r32, $r33, $r35, $r38, $r39, $r41, $r44, $r45, $r47;
        short $s15, $s16, $s17;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r3);

        $l2 = (long) i0;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l2);

        i18 = i0;

        $b3 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        b19 = $b3;

        if $b3 == -1 goto label01;

        $r43 = new java.io.IOException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s17 = b19 & 255;

        $r46 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s17);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>($r48);

        throw $r43;

     label01:
        i20 = i18 + 1;

        $b4 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if $b4 == -40 goto label02;

        $r37 = new java.io.IOException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s16 = b19 & 255;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s16);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r42);

        throw $r37;

     label02:
        i21 = i20 + 1;

     label03:
        b22 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b22 == -1 goto label04;

        $r31 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker:");

        $s15 = b22 & 255;

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s15);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r31;

     label04:
        i23 = i21 + 1;

        b24 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        i25 = i23 + 1;

        if b24 == -39 goto label20;

        if b24 != -38 goto label05;

        goto label20;

     label05:
        $i5 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i26 = $i5 - 2;

        i27 = i25 + 2;

        if i26 >= 0 goto label06;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r30;

     label06:
        tableswitch(b24)
        {
            case -64: goto label15;
            case -63: goto label15;
            case -62: goto label15;
            case -61: goto label15;
            case -60: goto label17;
            case -59: goto label15;
            case -58: goto label15;
            case -57: goto label15;
            case -56: goto label17;
            case -55: goto label15;
            case -54: goto label15;
            case -53: goto label15;
            case -52: goto label17;
            case -51: goto label15;
            case -50: goto label15;
            case -49: goto label15;
            case -48: goto label17;
            case -47: goto label17;
            case -46: goto label17;
            case -45: goto label17;
            case -44: goto label17;
            case -43: goto label17;
            case -42: goto label17;
            case -41: goto label17;
            case -40: goto label17;
            case -39: goto label17;
            case -38: goto label17;
            case -37: goto label17;
            case -36: goto label17;
            case -35: goto label17;
            case -34: goto label17;
            case -33: goto label17;
            case -32: goto label17;
            case -31: goto label07;
            case -30: goto label17;
            case -29: goto label17;
            case -28: goto label17;
            case -27: goto label17;
            case -26: goto label17;
            case -25: goto label17;
            case -24: goto label17;
            case -23: goto label17;
            case -22: goto label17;
            case -21: goto label17;
            case -20: goto label17;
            case -19: goto label17;
            case -18: goto label17;
            case -17: goto label17;
            case -16: goto label17;
            case -15: goto label17;
            case -14: goto label17;
            case -13: goto label17;
            case -12: goto label17;
            case -11: goto label17;
            case -10: goto label17;
            case -9: goto label17;
            case -8: goto label17;
            case -7: goto label17;
            case -6: goto label17;
            case -5: goto label17;
            case -4: goto label17;
            case -3: goto label17;
            case -2: goto label13;
            default: goto label17;
        };

     label07:
        if i26 >= 6 goto label08;

        goto label17;

     label08:
        r49 = newarray (byte)[6];

        $i8 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r49);

        if $i8 == 6 goto label09;

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r18;

     label09:
        i27 = i27 + 6;

        i26 = i26 + -6;

        $r15 = <android.support.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, $r15);

        if $z0 != 0 goto label10;

        goto label17;

     label10:
        if i26 > 0 goto label11;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r17;

     label11:
        r0.<android.support.media.ExifInterface: int mExifOffset> = i27;

        r2 = newarray (byte)[i26];

        $i9 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        if $i9 == i26 goto label12;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r16;

     label12:
        i27 = i27 + i26;

        i26 = 0;

        specialinvoke r0.<android.support.media.ExifInterface: void readExifSegment(byte[],int)>(r2, i1);

        goto label17;

     label13:
        r50 = newarray (byte)[i26];

        $i6 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r50);

        if $i6 == i26 goto label14;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r14;

     label14:
        i26 = 0;

        $r5 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("UserComment");

        if $r5 != null goto label17;

        $r8 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r8[1];

        $r9 = new java.lang.String;

        $r10 = <android.support.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r50, $r10);

        $r12 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createString(java.lang.String)>($r9);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UserComment", $r12);

        goto label17;

     label15:
        $i10 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(1);

        if $i10 == 1 goto label16;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Invalid SOFx");

        throw $r29;

     label16:
        $r19 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[i1];

        $i11 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l12 = (long) $i11;

        $r21 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r22 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l12, $r21);

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r22);

        $r24 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r25 = $r24[i1];

        $i13 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l14 = (long) $i13;

        $r26 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r27 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l14, $r26);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r27);

        i26 = i26 + -5;

        goto label17;

     label17:
        if i26 >= 0 goto label18;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r7;

     label18:
        $i7 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i26);

        if $i7 == i26 goto label19;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Invalid JPEG segment");

        throw $r6;

     label19:
        i21 = i27 + i26;

        goto label03;

     label20:
        $r4 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r4);

        return;
    }

    private void getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1, r3, $r8;
        android.support.media.ExifInterface$ExifAttribute r2, r4;
        int $i0, $i1;
        java.util.HashMap[] $r5, $r11, $r14;
        java.util.HashMap $r6, $r12, $r15;
        java.lang.Object $r7, $r13;
        byte[] $r9;
        java.nio.ByteOrder $r10;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int available()>();

        specialinvoke r0.<android.support.media.ExifInterface: void parseTiffHeaders(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, $i0);

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 0);

        specialinvoke r0.<android.support.media.ExifInterface: void updateImageSizeValues(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 0);

        specialinvoke r0.<android.support.media.ExifInterface: void updateImageSizeValues(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 5);

        specialinvoke r0.<android.support.media.ExifInterface: void updateImageSizeValues(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 4);

        specialinvoke r0.<android.support.media.ExifInterface: void validateImages(java.io.InputStream)>(r1);

        $i1 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i1 != 8 goto label1;

        $r5 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[1];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r7;

        if r2 == null goto label1;

        $r8 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $r9 = r2.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r8.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r9);

        r3 = $r8;

        $r10 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r10);

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(6L);

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r3, 9);

        $r11 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[9];

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ColorSpace");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r13;

        if r4 == null goto label1;

        $r14 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[1];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ColorSpace", r4);

     label1:
        return;
    }

    private void getRafAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        byte[] r2, r3;
        int i0, i1, i2, i3, i4, $i12, i14;
        short s5, s6;
        android.support.media.ExifInterface$ExifAttribute r4, r5;
        java.nio.ByteBuffer $r6, $r7;
        long $l11;
        java.nio.ByteOrder $r8, $r10, $r11;
        android.support.media.ExifInterface$ExifTag $r9;
        java.util.HashMap[] $r12, $r15;
        java.util.HashMap $r13, $r16;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(84);

        r2 = newarray (byte)[4];

        r3 = newarray (byte)[4];

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(4);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r3);

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        i0 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt()>();

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        i1 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke r0.<android.support.media.ExifInterface: void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r1, i0, 5);

        $l11 = (long) i1;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l11);

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r8);

        i2 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i14 = 0;

     label1:
        if i14 >= i2 goto label3;

        i3 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i4 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $r9 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE>;

        $i12 = $r9.<android.support.media.ExifInterface$ExifTag: int number>;

        if i3 != $i12 goto label2;

        s5 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        s6 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        $r10 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r4 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s5, $r10);

        $r11 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r5 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s6, $r11);

        $r12 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[0];

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r4);

        $r15 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[0];

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r5);

        return;

     label2:
        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i4);

        i14 = i14 + 1;

        goto label1;

     label3:
        return;
    }

    private void getOrfAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1, r3, $r15;
        android.support.media.ExifInterface$ExifAttribute r2, r6, r7, r8, r10, r11;
        byte[] r4, r5, $r16, $r18, $r19, $r20, $r21;
        int[] r9, $r24;
        java.util.HashMap[] $r12, $r32, $r35, $r38, $r41, $r44, $r47, $r50;
        java.util.HashMap $r13, $r33, $r36, $r39, $r42, $r45, $r48, $r51;
        java.lang.Object $r14, $r23, $r46, $r49, $r52;
        java.nio.ByteOrder $r17, $r22, $r30, $r31;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r25, $r26, $r28;
        java.lang.String $r27, $r29;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r0.<android.support.media.ExifInterface: void getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r1);

        $r12 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[1];

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r14;

        if r2 == null goto label7;

        $r15 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $r16 = r2.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r15.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r16);

        r3 = $r15;

        $r17 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r17);

        $r18 = <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $i0 = lengthof $r18;

        r4 = newarray (byte)[$i0];

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r4);

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(0L);

        $r19 = <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $i1 = lengthof $r19;

        r5 = newarray (byte)[$i1];

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r5);

        $r20 = <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r20);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(8L);

        goto label2;

     label1:
        $r21 = <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r5, $r21);

        if $z1 == 0 goto label2;

        virtualinvoke r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(12L);

     label2:
        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r3, 6);

        $r44 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r45 = $r44[7];

        $r46 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageStart");

        r6 = (android.support.media.ExifInterface$ExifAttribute) $r46;

        $r47 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r48 = $r47[7];

        $r49 = virtualinvoke $r48.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageLength");

        r7 = (android.support.media.ExifInterface$ExifAttribute) $r49;

        if r6 == null goto label3;

        if r7 == null goto label3;

        $r38 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r39 = $r38[5];

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r6);

        $r41 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r42 = $r41[5];

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r7);

     label3:
        $r50 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r51 = $r50[8];

        $r52 = virtualinvoke $r51.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("AspectFrame");

        r8 = (android.support.media.ExifInterface$ExifAttribute) $r52;

        if r8 == null goto label7;

        $r22 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r23 = virtualinvoke r8.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r22);

        $r24 = (int[]) $r23;

        r9 = (int[]) $r24;

        if r9 == null goto label4;

        $i3 = lengthof r9;

        if $i3 == 4 goto label5;

     label4:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid aspect frame values. frame=");

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r9);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r29);

        return;

     label5:
        $i5 = r9[2];

        $i4 = r9[0];

        if $i5 <= $i4 goto label7;

        $i7 = r9[3];

        $i6 = r9[1];

        if $i7 <= $i6 goto label7;

        $i9 = r9[2];

        $i8 = r9[0];

        $i10 = $i9 - $i8;

        i14 = $i10 + 1;

        $i12 = r9[3];

        $i11 = r9[1];

        $i13 = $i12 - $i11;

        i15 = $i13 + 1;

        if i14 >= i15 goto label6;

        i16 = i14 + i15;

        i15 = i16 - i15;

        i14 = i16 - i15;

     label6:
        $r30 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r10 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i14, $r30);

        $r31 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r11 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i15, $r31);

        $r32 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r33 = $r32[0];

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r10);

        $r35 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r36 = $r35[0];

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r11);

     label7:
        return;
    }

    private void getRw2Attributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        android.support.media.ExifInterface$ExifAttribute r2, r3, r4;
        java.util.HashMap[] $r5, $r8, $r11, $r14;
        java.util.HashMap $r6, $r9, $r12, $r15;
        java.lang.Object $r7, $r10, $r13;
        int $i0;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r0.<android.support.media.ExifInterface: void getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r1);

        $r5 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[0];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JpgFromRaw");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r7;

        if r2 == null goto label1;

        $i0 = r0.<android.support.media.ExifInterface: int mRw2JpgFromRawOffset>;

        specialinvoke r0.<android.support.media.ExifInterface: void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r1, $i0, 5);

     label1:
        $r8 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ISO");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r10;

        $r11 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[1];

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PhotographicSensitivity");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r13;

        if r3 == null goto label2;

        if r4 != null goto label2;

        $r14 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[1];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PhotographicSensitivity", r3);

     label2:
        return;
    }

    private void saveJpegAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.io.InputStream r1;
        java.io.OutputStream r2, r27;
        java.io.DataInputStream r3, r18;
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r4, r19;
        byte[] r5, $r9, r17;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, i19, i20, i21, i22;
        java.nio.ByteOrder $r8;
        byte $b1, $b2, b17, b18;
        boolean $z0;
        java.io.IOException r20, r21, r22, r23, r24, r25, r26;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r18 = new java.io.DataInputStream;

        specialinvoke r18.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r3 = r18;

        r19 = new android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r19.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r2, $r8);

        r4 = r19;

        $b1 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        if $b1 == -1 goto label01;

        r20 = new java.io.IOException;

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r20;

     label01:
        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        $b2 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        if $b2 == -40 goto label02;

        r21 = new java.io.IOException;

        specialinvoke r21.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r21;

     label02:
        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-40);

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-31);

        specialinvoke r0.<android.support.media.ExifInterface: int writeExifSegment(android.support.media.ExifInterface$ByteOrderedDataOutputStream,int)>(r4, 6);

        r5 = newarray (byte)[4096];

     label03:
        b17 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        if b17 == -1 goto label04;

        r22 = new java.io.IOException;

        specialinvoke r22.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r22;

     label04:
        b18 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        lookupswitch(b18)
        {
            case -39: goto label10;
            case -38: goto label10;
            case -31: goto label05;
            default: goto label11;
        };

     label05:
        $i4 = virtualinvoke r3.<java.io.DataInputStream: int readUnsignedShort()>();

        i19 = $i4 - 2;

        if i19 >= 0 goto label06;

        r23 = new java.io.IOException;

        specialinvoke r23.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw r23;

     label06:
        r17 = newarray (byte)[6];

        if i19 < 6 goto label08;

        $i9 = virtualinvoke r3.<java.io.DataInputStream: int read(byte[])>(r17);

        if $i9 == 6 goto label07;

        r24 = new java.io.IOException;

        specialinvoke r24.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw r24;

     label07:
        $r9 = <android.support.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r17, $r9);

        if $z0 == 0 goto label08;

        $i10 = i19 - 6;

        $i11 = virtualinvoke r3.<java.io.DataInputStream: int skipBytes(int)>($i10);

        $i12 = i19 - 6;

        if $i11 == $i12 goto label13;

        r25 = new java.io.IOException;

        specialinvoke r25.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw r25;

     label08:
        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b18);

        $i5 = i19 + 2;

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i5);

        if i19 < 6 goto label09;

        i19 = i19 + -6;

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r17);

     label09:
        if i19 <= 0 goto label13;

        $i6 = lengthof r5;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i6);

        $i8 = virtualinvoke r3.<java.io.DataInputStream: int read(byte[],int,int)>(r5, 0, $i7);

        i0 = $i8;

        if $i8 < 0 goto label13;

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r5, 0, i0);

        i19 = i19 - i0;

        goto label09;

     label10:
        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b18);

        r27 = (java.io.OutputStream) r4;

        staticinvoke <android.support.media.ExifInterface: int copy(java.io.InputStream,java.io.OutputStream)>(r3, r27);

        return;

     label11:
        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b18);

        i20 = virtualinvoke r3.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i20);

        i21 = i20 + -2;

        if i21 >= 0 goto label12;

        r26 = new java.io.IOException;

        specialinvoke r26.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw r26;

     label12:
        if i21 <= 0 goto label13;

        $i14 = lengthof r5;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i21, $i14);

        $i16 = virtualinvoke r3.<java.io.DataInputStream: int read(byte[],int,int)>(r5, 0, $i15);

        i22 = $i16;

        if $i16 < 0 goto label13;

        virtualinvoke r4.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r5, 0, i22);

        i21 = i21 - i22;

        goto label12;

     label13:
        goto label03;
    }

    private void readExifSegment(byte[], int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        byte[] r1;
        int i0, $i1;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r2, $r3;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r2 = $r3;

        $i1 = lengthof r1;

        specialinvoke r0.<android.support.media.ExifInterface: void parseTiffHeaders(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r2, $i1);

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r2, i0);

        return;
    }

    private void addDefaultValuesForCompatibility()
    {
        android.support.media.ExifInterface r0;
        java.lang.String r1, $r2, $r3, $r4, $r25, $r30;
        java.util.HashMap[] $r5, $r10, $r15, $r20, $r26;
        java.nio.ByteOrder $r6, $r11, $r16, $r21;
        java.util.HashMap $r7, $r12, $r17, $r22, $r27;
        android.support.media.ExifInterface$ExifAttribute $r8, $r13, $r18, $r23, $r28;

        r0 := @this: android.support.media.ExifInterface;

        r1 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeOriginal");

        if r1 == null goto label1;

        $r25 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        if $r25 != null goto label1;

        $r26 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = $r26[0];

        $r28 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r1);

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("DateTime", $r28);

     label1:
        $r30 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageWidth");

        if $r30 != null goto label2;

        $r20 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r20[0];

        $r21 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r23 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r21);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r23);

     label2:
        $r2 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageLength");

        if $r2 != null goto label3;

        $r15 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r15[0];

        $r16 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r18 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r16);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r18);

     label3:
        $r3 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Orientation");

        if $r3 != null goto label4;

        $r10 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r10[0];

        $r11 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r11);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Orientation", $r13);

     label4:
        $r4 = virtualinvoke r0.<android.support.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("LightSource");

        if $r4 != null goto label5;

        $r5 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r5[1];

        $r6 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r8 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r6);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LightSource", $r8);

     label5:
        return;
    }

    private java.nio.ByteOrder readByteOrder(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        short s0;
        java.nio.ByteOrder $r2, $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        s0 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        lookupswitch(s0)
        {
            case 18761: goto label1;
            case 19789: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        return $r3;

     label2:
        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        return $r2;

     label3:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(s0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    private void parseTiffHeaders(android.support.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.nio.ByteOrder $r2, $r3;
        java.io.IOException $r4, $r9, $r14;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r18;
        java.lang.String $r8, $r13, $r17, $r19;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<android.support.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.support.media.ExifInterface$ByteOrderedDataInputStream)>(r1);

        r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r2;

        $r3 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r3);

        i1 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $i2 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i2 == 7 goto label1;

        $i4 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i4 == 10 goto label1;

        if i1 == 42 goto label1;

        $r14 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid start code: ");

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label1:
        i5 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        if i5 < 8 goto label2;

        if i5 < i0 goto label3;

     label2:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid first Ifd offset: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        i6 = i5 + -8;

        if i6 <= 0 goto label4;

        $i3 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i6);

        if $i3 == i6 goto label4;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t jump to first Ifd: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        return;
    }

    private void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i19, $i22, $i26, $i27, $i28, $i30, $i33, $i35, $i37, $i38, $i39, $i42, $i44, $i46, $i47, i56, i58, $i61, $i66, $i69, i70;
        short s1, $s36, s55;
        long l4, $l16, $l21, $l23, $l31, $l41, $l43, $l45, $l48, $l49, l57, $l59, $l60, $l62, l64, $l67;
        android.support.media.ExifInterface$ExifTag r2;
        android.support.media.ExifInterface$ExifAttribute r3, $r31, r101, r102, r105;
        java.util.Set $r4, $r10, $r51;
        java.lang.Integer $r5, $r11, $r22, $r29, $r52, r103;
        byte $b17, $b25, $b32, $b50, $b52, $b63, $b65, $b68;
        java.lang.StringBuilder $r6, $r7, $r8, $r12, $r13, $r14, $r24, $r25, $r26, $r47, $r48, $r49, $r53, $r54, $r55, $r56, $r57, $r58, $r60, $r61, $r62, $r84, $r85, $r86, $r88, $r89, $r92, $r93, $r95, $r97, $r98, $r99;
        java.lang.String $r9, $r15, $r27, $r33, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r46, $r50, $r59, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r87, $r91, $r94, $r96, $r100;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14;
        java.util.HashMap[] $r16, $r18, $r20, $r32, $r73, $r76, $r79;
        java.util.HashMap $r17, $r19, $r21, $r28, $r34, $r74, $r77, $r80;
        java.lang.Object $r23, $r30;
        java.nio.ByteOrder $r40, $r44, $r70, $r71, $r72;
        int[] $r82, $r83;
        java.lang.String[] $r90;
        byte[] r104;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r4 = r0.<android.support.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $i5 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $i6 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i8 = $i6 + 2;

        $i7 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i8 <= $i7 goto label01;

        return;

     label01:
        s1 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        $i10 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i9 = 12 * s1;

        $i12 = $i10 + $i9;

        $i11 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i12 > $i11 goto label02;

        if s1 > 0 goto label03;

     label02:
        return;

     label03:
        s55 = 0;

     label04:
        if s55 >= s1 goto label34;

        i2 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i56 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i3 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i22 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $l23 = (long) $i22;

        l4 = $l23 + 4L;

        $r20 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r21 = $r20[i0];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r23 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r22);

        r2 = (android.support.media.ExifInterface$ExifTag) $r23;

        l57 = 0L;

        z14 = 0;

        if r2 != null goto label05;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since tag number is not defined: ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r100);

        goto label12;

     label05:
        if i56 <= 0 goto label06;

        $r82 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i46 = lengthof $r82;

        if i56 < $i46 goto label07;

     label06:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data format is invalid: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i56);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r27);

        goto label12;

     label07:
        $z13 = virtualinvoke r2.<android.support.media.ExifInterface$ExifTag: boolean isFormatCompatible(int)>(i56);

        if $z13 != 0 goto label08;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data format (");

        $r90 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r91 = $r90[i56];

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is unexpected for tag: ");

        $r94 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r96);

        goto label12;

     label08:
        if i56 != 7 goto label09;

        i56 = r2.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

     label09:
        $l49 = (long) i3;

        $r83 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i47 = $r83[i56];

        $l48 = (long) $i47;

        l57 = $l49 * $l48;

        $b50 = l57 cmp 0L;

        if $b50 < 0 goto label10;

        $b52 = l57 cmp 2147483647L;

        if $b52 <= 0 goto label11;

     label10:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since the number of components is invalid: ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r87);

        goto label12;

     label11:
        z14 = 1;

     label12:
        if z14 != 0 goto label13;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label33;

     label13:
        $b25 = l57 cmp 4L;

        if $b25 <= 0 goto label18;

        i58 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i38 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i38 != 7 goto label15;

        $r67 = "MakerNote";

        $r66 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z11 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z11 == 0 goto label14;

        r0.<android.support.media.ExifInterface: int mOrfMakerNoteOffset> = i58;

        goto label16;

     label14:
        if i0 != 6 goto label16;

        $r69 = "ThumbnailImage";

        $r68 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z12 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>($r68);

        if $z12 == 0 goto label16;

        r0.<android.support.media.ExifInterface: int mOrfThumbnailOffset> = i58;

        r0.<android.support.media.ExifInterface: int mOrfThumbnailLength> = i3;

        $r70 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r101 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(6, $r70);

        $i42 = r0.<android.support.media.ExifInterface: int mOrfThumbnailOffset>;

        $l43 = (long) $i42;

        $r71 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r102 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l43, $r71);

        $i44 = r0.<android.support.media.ExifInterface: int mOrfThumbnailLength>;

        $l45 = (long) $i44;

        $r72 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r3 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l45, $r72);

        $r73 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r74 = $r73[4];

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Compression", r101);

        $r76 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r77 = $r76[4];

        virtualinvoke $r77.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r102);

        $r79 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r80 = $r79[4];

        virtualinvoke $r80.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r3);

        goto label16;

     label15:
        $i39 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i39 != 10 goto label16;

        $r65 = "JpgFromRaw";

        $r64 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z10 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>($r64);

        if $z10 == 0 goto label16;

        r0.<android.support.media.ExifInterface: int mRw2JpgFromRawOffset> = i58;

     label16:
        $l59 = (long) i58;

        $l60 = $l59 + l57;

        $i61 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        $l62 = (long) $i61;

        $b63 = $l60 cmp $l62;

        if $b63 > 0 goto label17;

        $l41 = (long) i58;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l41);

        goto label18;

     label17:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data offset is invalid: ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i58);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r63);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label33;

     label18:
        $r28 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r30 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r29);

        r103 = (java.lang.Integer) $r30;

        if r103 == null goto label27;

        l64 = -1L;

        tableswitch(i56)
        {
            case 3: goto label19;
            case 4: goto label21;
            case 5: goto label23;
            case 6: goto label23;
            case 7: goto label23;
            case 8: goto label20;
            case 9: goto label22;
            case 10: goto label23;
            case 11: goto label23;
            case 12: goto label23;
            case 13: goto label22;
            default: goto label23;
        };

     label19:
        $i37 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        l64 = (long) $i37;

        goto label23;

     label20:
        $s36 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        l64 = (long) $s36;

        goto label23;

     label21:
        l64 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        goto label23;

     label22:
        $i28 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l64 = (long) $i28;

        goto label23;

     label23:
        $b65 = l64 cmp 0L;

        if $b65 <= 0 goto label25;

        $i30 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        $l31 = (long) $i30;

        $b32 = l64 cmp $l31;

        if $b32 >= 0 goto label25;

        $r51 = r0.<android.support.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $i33 = (int) l64;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i33);

        $z9 = interfaceinvoke $r51.<java.util.Set: boolean contains(java.lang.Object)>($r52);

        if $z9 != 0 goto label24;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l64);

        $i35 = virtualinvoke r103.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, $i35);

        goto label26;

     label24:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since it has already been read: IfdType ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r103);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l64);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r59);

        goto label26;

     label25:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since its offset is invalid: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l64);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r50);

     label26:
        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label33;

     label27:
        $i26 = (int) l57;

        r104 = newarray (byte)[$i26];

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r104);

        $r31 = new android.support.media.ExifInterface$ExifAttribute;

        specialinvoke $r31.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(i56, i3, r104);

        r105 = $r31;

        $r32 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r34 = $r32[i0];

        $r33 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, r105);

        $r37 = "DNGVersion";

        $r36 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z4 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z4 == 0 goto label28;

        r0.<android.support.media.ExifInterface: int mMimeType> = 3;

     label28:
        $r39 = "Make";

        $r38 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z5 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z5 != 0 goto label29;

        $r46 = "Model";

        $r45 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z8 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z8 == 0 goto label30;

     label29:
        $r40 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r41 = virtualinvoke r105.<android.support.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r40);

        $z6 = virtualinvoke $r41.<java.lang.String: boolean contains(java.lang.CharSequence)>("PENTAX");

        if $z6 != 0 goto label31;

     label30:
        $r43 = "Compression";

        $r42 = r2.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $z7 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z7 == 0 goto label32;

        $r44 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i27 = virtualinvoke r105.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r44);

        if $i27 != 65535 goto label32;

     label31:
        r0.<android.support.media.ExifInterface: int mMimeType> = 8;

     label32:
        $i66 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $l67 = (long) $i66;

        $b68 = $l67 cmp l4;

        if $b68 == 0 goto label33;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

     label33:
        $i69 = s55 + 1;

        s55 = (short) $i69;

        goto label04;

     label34:
        $i13 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $i15 = $i13 + 4;

        $i14 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i15 > $i14 goto label38;

        i70 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $l16 = (long) i70;

        $b17 = $l16 cmp 0L;

        if $b17 <= 0 goto label37;

        $i19 = r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if i70 >= $i19 goto label37;

        $r10 = r0.<android.support.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i70);

        $z1 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z1 != 0 goto label36;

        $l21 = (long) i70;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l21);

        $r16 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[4];

        $z2 = virtualinvoke $r17.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label35;

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 4);

        goto label38;

     label35:
        $r18 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[5];

        $z3 = virtualinvoke $r19.<java.util.HashMap: boolean isEmpty()>();

        if $z3 == 0 goto label38;

        specialinvoke r0.<android.support.media.ExifInterface: void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, 5);

        goto label38;

     label36:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since re-reading an IFD may cause an infinite loop: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i70);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r15);

        goto label38;

     label37:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since a wrong offset may cause an infinite loop: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i70);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r9);

     label38:
        return;
    }

    private void retrieveJpegImageSize(android.support.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, i1;
        android.support.media.ExifInterface$ExifAttribute r2, r3, r4;
        java.util.HashMap[] $r5, $r8, $r11;
        java.util.HashMap $r6, $r9, $r12;
        java.lang.Object $r7, $r10, $r13;
        java.nio.ByteOrder $r14;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r5 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[i0];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r7;

        $r8 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[i0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r10;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r11 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[i0];

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r13;

        if r4 == null goto label2;

        $r14 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r14);

        specialinvoke r0.<android.support.media.ExifInterface: void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r1, i1, i0);

     label2:
        return;
    }

    private void setThumbnailData(android.support.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        android.support.media.ExifInterface$ExifAttribute r3;
        java.util.HashMap[] $r4;
        java.lang.Object $r5;
        java.nio.ByteOrder $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $r4 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r2 = $r4[4];

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Compression");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r5;

        if r3 == null goto label4;

        $r6 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i0 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        r0.<android.support.media.ExifInterface: int mThumbnailCompression> = $i0;

        $i1 = r0.<android.support.media.ExifInterface: int mThumbnailCompression>;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 6: goto label1;
            case 7: goto label2;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<android.support.media.ExifInterface: void handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

        goto label3;

     label2:
        $z0 = specialinvoke r0.<android.support.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)>(r2);

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.support.media.ExifInterface: void handleThumbnailFromStrips(android.support.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label3:
        goto label5;

     label4:
        r0.<android.support.media.ExifInterface: int mThumbnailCompression> = 6;

        specialinvoke r0.<android.support.media.ExifInterface: void handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label5:
        return;
    }

    private void handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        android.support.media.ExifInterface$ExifAttribute r3, r4;
        byte[] r5;
        java.lang.Object $r6, $r7;
        java.nio.ByteOrder $r8, $r9;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, i8, i9, i10, $i11;
        java.lang.String $r10;
        android.content.res.AssetManager$AssetInputStream $r11;
        long $l3;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: java.util.HashMap;

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r6;

        $r7 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormatLength");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r7;

        if r3 == null goto label4;

        if r4 == null goto label4;

        $r8 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i8 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r8);

        $r9 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i9 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r9);

        $i0 = virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int available()>();

        $i1 = $i0 - i8;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i9, $i1);

        $i2 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i2 == 4 goto label1;

        $i4 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i4 == 9 goto label1;

        $i5 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i5 != 10 goto label2;

     label1:
        $i11 = r0.<android.support.media.ExifInterface: int mExifOffset>;

        i8 = i8 + $i11;

        goto label3;

     label2:
        $i6 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i6 != 7 goto label3;

        $i7 = r0.<android.support.media.ExifInterface: int mOrfMakerNoteOffset>;

        i8 = i8 + $i7;

     label3:
        if i8 <= 0 goto label4;

        if i10 <= 0 goto label4;

        r0.<android.support.media.ExifInterface: boolean mHasThumbnail> = 1;

        r0.<android.support.media.ExifInterface: int mThumbnailOffset> = i8;

        r0.<android.support.media.ExifInterface: int mThumbnailLength> = i10;

        $r10 = r0.<android.support.media.ExifInterface: java.lang.String mFilename>;

        if $r10 != null goto label4;

        $r11 = r0.<android.support.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r11 != null goto label4;

        r5 = newarray (byte)[i10];

        $l3 = (long) i8;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l3);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r5);

        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = r5;

     label4:
        return;
    }

    private void handleThumbnailFromStrips(android.support.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        android.support.media.ExifInterface$ExifAttribute r3, r4;
        long[] r5, r6, r14;
        int i0, i1, i2, $i3, $i4, $i5, $i10, $i11, i16, i17, i19, i20, i21, i22;
        byte[] r7, r15;
        java.lang.Object $r8, $r9, $r11, $r13;
        java.nio.ByteOrder $r10, $r12;
        long $l6, $l7, $l8, l15, l18;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: java.util.HashMap;

        $r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripOffsets");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r8;

        $r9 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripByteCounts");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r9;

        if r3 == null goto label8;

        if r4 == null goto label8;

        $r10 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r11 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r10);

        r5 = staticinvoke <android.support.media.ExifInterface: long[] convertToLongArray(java.lang.Object)>($r11);

        $r12 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r12);

        r6 = staticinvoke <android.support.media.ExifInterface: long[] convertToLongArray(java.lang.Object)>($r13);

        if r5 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripOffsets should not be null.");

        return;

     label1:
        if r6 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripByteCounts should not be null.");

        return;

     label2:
        l15 = 0L;

        r14 = r6;

        i16 = lengthof r14;

        i17 = 0;

     label3:
        if i17 >= i16 goto label4;

        l18 = r14[i17];

        l15 = l15 + l18;

        i17 = i17 + 1;

        goto label3;

     label4:
        $i3 = (int) l15;

        r15 = newarray (byte)[$i3];

        i19 = 0;

        i20 = 0;

        i21 = 0;

     label5:
        $i4 = lengthof r5;

        if i21 >= $i4 goto label7;

        $l6 = r5[i21];

        i0 = (int) $l6;

        $l7 = r6[i21];

        i1 = (int) $l7;

        i2 = i0 - i19;

        if i2 >= 0 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Invalid strip offset value");

     label6:
        $l8 = (long) i2;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l8);

        i22 = i19 + i2;

        r7 = newarray (byte)[i1];

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r7);

        i19 = i22 + i1;

        $i10 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r15, i20, $i10);

        $i11 = lengthof r7;

        i20 = i20 + $i11;

        i21 = i21 + 1;

        goto label5;

     label7:
        r0.<android.support.media.ExifInterface: boolean mHasThumbnail> = 1;

        r0.<android.support.media.ExifInterface: byte[] mThumbnailBytes> = r15;

        $i5 = lengthof r15;

        r0.<android.support.media.ExifInterface: int mThumbnailLength> = $i5;

     label8:
        return;
    }

    private boolean isSupportedDataType(java.util.HashMap) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.util.HashMap r1;
        android.support.media.ExifInterface$ExifAttribute r2, r4;
        int[] r3, $r8, $r9, $r12, $r13;
        int i0, $i1;
        java.lang.Object $r5, $r7, $r10;
        java.nio.ByteOrder $r6, $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.util.HashMap;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("BitsPerSample");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r5;

        if r2 == null goto label4;

        $r6 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r7 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r6);

        $r8 = (int[]) $r7;

        r3 = (int[]) $r8;

        $r9 = <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r9, r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i1 = r0.<android.support.media.ExifInterface: int mMimeType>;

        if $i1 != 3 goto label4;

        $r10 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PhotometricInterpretation");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r10;

        if r4 == null goto label4;

        $r11 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r11);

        if i0 != 1 goto label2;

        $r13 = <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, $r13);

        if $z2 != 0 goto label3;

     label2:
        if i0 != 6 goto label4;

        $r12 = <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, $r12);

        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    private boolean isThumbnail(java.util.HashMap) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.util.HashMap r1;
        android.support.media.ExifInterface$ExifAttribute r2, r3;
        int i0, i1;
        java.lang.Object $r4, $r5;
        java.nio.ByteOrder $r6, $r7;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.util.HashMap;

        $r4 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r4;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r5;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r6 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        $r7 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r7);

        if i0 > 512 goto label1;

        if i1 > 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void validateImages(java.io.InputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        java.io.InputStream r1;
        android.support.media.ExifInterface$ExifAttribute r2, r3;
        java.util.HashMap[] $r4, $r7, $r10, $r12, $r14, $r16, $r17, $r20, $r23, $r25;
        java.util.HashMap $r5, $r8, $r11, $r13, $r15, $r18, $r21, $r24, $r26;
        java.lang.Object $r6, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<android.support.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 5);

        specialinvoke r0.<android.support.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 4);

        specialinvoke r0.<android.support.media.ExifInterface: void swapBasedOnImageSize(int,int)>(5, 4);

        $r4 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r5 = $r4[1];

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelXDimension");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r6;

        $r7 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[1];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelYDimension");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r9;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r17 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r18 = $r17[0];

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r2);

        $r20 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r21 = $r20[0];

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r3);

     label1:
        $r23 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r24 = $r23[4];

        $z1 = virtualinvoke $r24.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r10 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[5];

        $z0 = specialinvoke r0.<android.support.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r11);

        if $z0 == 0 goto label2;

        $r14 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[5];

        $r14[4] = $r13;

        $r16 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16[5] = $r15;

     label2:
        $r25 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r26 = $r25[4];

        $z2 = specialinvoke r0.<android.support.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r26);

        if $z2 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "No image meets the size requirements of a thumbnail image.");

     label3:
        return;
    }

    private void updateImageSizeValues(android.support.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i10, i11, i12, i13;
        android.support.media.ExifInterface$ExifAttribute r2, r3, r4, r5, r6, r7, r8, r65, r66;
        java.util.HashMap[] $r9, $r12, $r15, $r18, $r21, $r30, $r33, $r46, $r49;
        java.util.HashMap $r10, $r13, $r16, $r19, $r22, $r31, $r34, $r47, $r50;
        java.lang.Object $r11, $r14, $r17, $r20, $r23, $r37, $r53;
        java.nio.ByteOrder $r24, $r25, $r26, $r27, $r28, $r29, $r36, $r44, $r45, $r52, $r60, $r62;
        int[] $r38, r67;
        java.lang.StringBuilder $r39, $r40, $r42, $r55, $r56, $r58;
        java.lang.String $r41, $r43, $r57, $r59;
        android.support.media.ExifInterface$Rational[] $r54, r64;
        android.support.media.ExifInterface$Rational $r61, $r63;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r9 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i0];

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("DefaultCropSize");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r11;

        $r12 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[i0];

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorTopBorder");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r14;

        $r15 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[i0];

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorLeftBorder");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r17;

        $r18 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[i0];

        $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorBottomBorder");

        r5 = (android.support.media.ExifInterface$ExifAttribute) $r20;

        $r21 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r21[i0];

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorRightBorder");

        r6 = (android.support.media.ExifInterface$ExifAttribute) $r23;

        if r2 == null goto label07;

        $i4 = r2.<android.support.media.ExifInterface$ExifAttribute: int format>;

        if $i4 != 5 goto label03;

        $r52 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r53 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r52);

        $r54 = (android.support.media.ExifInterface$Rational[]) $r53;

        r64 = (android.support.media.ExifInterface$Rational[]) $r54;

        if r64 == null goto label01;

        $i10 = lengthof r64;

        if $i10 == 2 goto label02;

     label01:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid crop size values. cropSize=");

        $r57 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r64);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r59);

        return;

     label02:
        $r61 = r64[0];

        $r60 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r65 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational,java.nio.ByteOrder)>($r61, $r60);

        $r63 = r64[1];

        $r62 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r66 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational,java.nio.ByteOrder)>($r63, $r62);

        goto label06;

     label03:
        $r36 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r37 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r36);

        $r38 = (int[]) $r37;

        r67 = (int[]) $r38;

        if r67 == null goto label04;

        $i6 = lengthof r67;

        if $i6 == 2 goto label05;

     label04:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid crop size values. cropSize=");

        $r41 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r67);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r43);

        return;

     label05:
        $i7 = r67[0];

        $r44 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r65 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i7, $r44);

        $i8 = r67[1];

        $r45 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r66 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i8, $r45);

     label06:
        $r46 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r47 = $r46[i0];

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r65);

        $r49 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r50 = $r49[i0];

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r66);

        goto label10;

     label07:
        if r3 == null goto label09;

        if r4 == null goto label09;

        if r5 == null goto label09;

        if r6 == null goto label09;

        $r24 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i11 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r24);

        $r25 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i12 = virtualinvoke r5.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r25);

        $r26 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i13 = virtualinvoke r6.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r26);

        $r27 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r27);

        if i12 <= i11 goto label08;

        if i13 <= i1 goto label08;

        i2 = i12 - i11;

        i3 = i13 - i1;

        $r28 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r7 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i2, $r28);

        $r29 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r8 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i3, $r29);

        $r30 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r31 = $r30[i0];

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r7);

        $r33 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r34 = $r33[i0];

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r8);

     label08:
        goto label10;

     label09:
        specialinvoke r0.<android.support.media.ExifInterface: void retrieveJpegImageSize(android.support.media.ExifInterface$ByteOrderedDataInputStream,int)>(r1, i0);

     label10:
        return;
    }

    private int writeExifSegment(android.support.media.ExifInterface$ByteOrderedDataOutputStream, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i22, $i24, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i39, i40, i41, i42, i43, i44, $i45, i46, i47, i48, i49, i50, i51, i53, $i54, i55, i56;
        int[] r2, r3;
        android.support.media.ExifInterface$ExifAttribute r4, $r61, $r69, $r77, $r84, $r100, $r107, $r115, $r123, $r131, r150, r160;
        android.support.media.ExifInterface$ExifTag[][] $r5, $r6, $r11, $r18, $r147, $r151;
        android.support.media.ExifInterface$ExifTag $r7, $r9, $r57, $r65, $r73, $r80, $r96, $r103, $r111, $r119, $r127, r143, r154;
        java.lang.String $r8, $r10, $r60, $r68, $r76, $r83, $r99, $r106, $r114, $r122, $r130, $r141;
        java.util.HashMap[] $r12, $r14, $r16, $r19, $r21, $r23, $r31, $r33, $r35, $r37, $r45, $r48, $r55, $r63, $r71, $r79, $r86, $r88, $r90, $r95, $r102, $r109, $r117, $r125, $r133, $r137, $r155;
        java.util.HashMap $r13, $r15, $r17, $r20, $r22, $r24, $r32, $r34, $r36, $r38, $r46, $r49, $r59, $r67, $r75, $r82, $r87, $r89, $r91, $r98, $r105, $r113, $r121, $r129, $r134, $r138, $r156;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        byte[] $r25, $r30, $r42, $r43, $r44, $r53;
        java.nio.ByteOrder $r26, $r27, $r28, $r29, $r58, $r66, $r74, $r81, $r97, $r104, $r112, $r120, $r128;
        java.util.Set $r39, $r92, $r135, $r157;
        java.lang.Object $r40, $r41, $r47, $r50, $r51, $r52, $r93, $r94, $r136, $r139, r145;
        long $l16, $l19, $l21, $l23, $l25, $l26, $l38;
        android.support.media.ExifInterface$ExifTag[] $r56, $r64, $r72, $r110, $r118, $r126, r142;
        java.lang.Object[] r144;
        java.util.Map$Entry r146, r149, r153, r159;
        java.util.Iterator r148, r152, r158;
        short $s52;

        r0 := @this: android.support.media.ExifInterface;

        r1 := @parameter0: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter1: int;

        $r5 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r5;

        r2 = newarray (int)[$i3];

        $r6 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i4 = lengthof $r6;

        r3 = newarray (int)[$i4];

        r142 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        i39 = lengthof r142;

        i40 = 0;

     label01:
        if i40 >= i39 goto label02;

        r143 = r142[i40];

        $r141 = r143.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.support.media.ExifInterface: void removeAttribute(java.lang.String)>($r141);

        i40 = i40 + 1;

        goto label01;

     label02:
        $r7 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r8 = $r7.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.support.media.ExifInterface: void removeAttribute(java.lang.String)>($r8);

        $r9 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG>;

        $r10 = $r9.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.support.media.ExifInterface: void removeAttribute(java.lang.String)>($r10);

        i41 = 0;

     label03:
        $r11 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i5 = lengthof $r11;

        if i41 >= $i5 goto label07;

        $r133 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r134 = $r133[i41];

        $r135 = virtualinvoke $r134.<java.util.HashMap: java.util.Set entrySet()>();

        r144 = interfaceinvoke $r135.<java.util.Set: java.lang.Object[] toArray()>();

        i42 = lengthof r144;

        i43 = 0;

     label04:
        if i43 >= i42 goto label06;

        r145 = r144[i43];

        r146 = (java.util.Map$Entry) r145;

        $r136 = interfaceinvoke r146.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r136 != null goto label05;

        $r137 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r138 = $r137[i41];

        $r139 = interfaceinvoke r146.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r138.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r139);

     label05:
        i43 = i43 + 1;

        goto label04;

     label06:
        i41 = i41 + 1;

        goto label03;

     label07:
        $r12 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[1];

        $z0 = virtualinvoke $r13.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        $r125 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r129 = $r125[0];

        $r126 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r127 = $r126[1];

        $r130 = $r127.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $r128 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r131 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r128);

        virtualinvoke $r129.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r130, $r131);

     label08:
        $r14 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[2];

        $z1 = virtualinvoke $r15.<java.util.HashMap: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $r117 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r121 = $r117[0];

        $r118 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r119 = $r118[2];

        $r122 = $r119.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $r120 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r123 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r120);

        virtualinvoke $r121.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r122, $r123);

     label09:
        $r16 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[3];

        $z2 = virtualinvoke $r17.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $r109 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r113 = $r109[1];

        $r110 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r111 = $r110[3];

        $r114 = $r111.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $r112 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r115 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r112);

        virtualinvoke $r113.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r114, $r115);

     label10:
        $z3 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z3 == 0 goto label11;

        $r95 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r98 = $r95[4];

        $r96 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r99 = $r96.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $r97 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r100 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r97);

        virtualinvoke $r98.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r99, $r100);

        $r102 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r105 = $r102[4];

        $r103 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG>;

        $r106 = $r103.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $i37 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        $l38 = (long) $i37;

        $r104 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r107 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l38, $r104);

        virtualinvoke $r105.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r106, $r107);

     label11:
        i44 = 0;

     label12:
        $r147 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i45 = lengthof $r147;

        if i44 >= $i45 goto label16;

        i46 = 0;

        $r90 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r91 = $r90[i44];

        $r92 = virtualinvoke $r91.<java.util.HashMap: java.util.Set entrySet()>();

        r148 = interfaceinvoke $r92.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z13 = interfaceinvoke r148.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label15;

        $r93 = interfaceinvoke r148.<java.util.Iterator: java.lang.Object next()>();

        r149 = (java.util.Map$Entry) $r93;

        $r94 = interfaceinvoke r149.<java.util.Map$Entry: java.lang.Object getValue()>();

        r150 = (android.support.media.ExifInterface$ExifAttribute) $r94;

        i47 = virtualinvoke r150.<android.support.media.ExifInterface$ExifAttribute: int size()>();

        if i47 <= 4 goto label14;

        i46 = i46 + i47;

     label14:
        goto label13;

     label15:
        $i35 = r3[i44];

        $i36 = $i35 + i46;

        r3[i44] = $i36;

        i44 = i44 + 1;

        goto label12;

     label16:
        i48 = 8;

        i49 = 0;

     label17:
        $r18 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i6 = lengthof $r18;

        if i49 >= $i6 goto label19;

        $r86 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r87 = $r86[i49];

        $z12 = virtualinvoke $r87.<java.util.HashMap: boolean isEmpty()>();

        if $z12 != 0 goto label18;

        r2[i49] = i48;

        $r88 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r89 = $r88[i49];

        $i29 = virtualinvoke $r89.<java.util.HashMap: int size()>();

        $i30 = $i29 * 12;

        $i31 = 2 + $i30;

        $i33 = $i31 + 4;

        $i32 = r3[i49];

        $i34 = $i33 + $i32;

        i48 = i48 + $i34;

     label18:
        i49 = i49 + 1;

        goto label17;

     label19:
        $z4 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z4 == 0 goto label20;

        i50 = i48;

        $r79 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r82 = $r79[4];

        $r80 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r83 = $r80.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $l26 = (long) i50;

        $r81 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r84 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l26, $r81);

        virtualinvoke $r82.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r83, $r84);

        $i27 = i0 + i50;

        r0.<android.support.media.ExifInterface: int mThumbnailOffset> = $i27;

        $i28 = r0.<android.support.media.ExifInterface: int mThumbnailLength>;

        i48 = i48 + $i28;

     label20:
        i51 = i48 + 8;

        $r19 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[1];

        $z5 = virtualinvoke $r20.<java.util.HashMap: boolean isEmpty()>();

        if $z5 != 0 goto label21;

        $r71 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r75 = $r71[0];

        $r72 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r73 = $r72[1];

        $r76 = $r73.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $i24 = r2[1];

        $l25 = (long) $i24;

        $r74 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r77 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l25, $r74);

        virtualinvoke $r75.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r76, $r77);

     label21:
        $r21 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r21[2];

        $z6 = virtualinvoke $r22.<java.util.HashMap: boolean isEmpty()>();

        if $z6 != 0 goto label22;

        $r63 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r67 = $r63[0];

        $r64 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r65 = $r64[2];

        $r68 = $r65.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $i22 = r2[2];

        $l23 = (long) $i22;

        $r66 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r69 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l23, $r66);

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, $r69);

     label22:
        $r23 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r24 = $r23[3];

        $z7 = virtualinvoke $r24.<java.util.HashMap: boolean isEmpty()>();

        if $z7 != 0 goto label23;

        $r55 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r59 = $r55[1];

        $r56 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r57 = $r56[3];

        $r60 = $r57.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        $i20 = r2[3];

        $l21 = (long) $i20;

        $r58 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r61 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l21, $r58);

        virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r60, $r61);

     label23:
        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i51);

        $r25 = <android.support.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r25);

        $r27 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r26 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r27 != $r26 goto label24;

        $s52 = 19789;

        goto label25;

     label24:
        $s52 = 18761;

     label25:
        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)>($s52);

        $r28 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r28);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(42);

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(8L);

        i53 = 0;

     label26:
        $r151 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i54 = lengthof $r151;

        if i53 >= $i54 goto label37;

        $r31 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r32 = $r31[i53];

        $z9 = virtualinvoke $r32.<java.util.HashMap: boolean isEmpty()>();

        if $z9 != 0 goto label36;

        $r33 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r34 = $r33[i53];

        $i7 = virtualinvoke $r34.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i7);

        $i8 = r2[i53];

        $i9 = $i8 + 2;

        $r35 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r36 = $r35[i53];

        $i10 = virtualinvoke $r36.<java.util.HashMap: int size()>();

        $i11 = $i10 * 12;

        $i12 = $i9 + $i11;

        i55 = $i12 + 4;

        $r37 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r38 = $r37[i53];

        $r39 = virtualinvoke $r38.<java.util.HashMap: java.util.Set entrySet()>();

        r152 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z10 = interfaceinvoke r152.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label31;

        $r47 = interfaceinvoke r152.<java.util.Iterator: java.lang.Object next()>();

        r153 = (java.util.Map$Entry) $r47;

        $r48 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r49 = $r48[i53];

        $r50 = interfaceinvoke r153.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r51 = virtualinvoke $r49.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r50);

        r154 = (android.support.media.ExifInterface$ExifTag) $r51;

        i1 = r154.<android.support.media.ExifInterface$ExifTag: int number>;

        $r52 = interfaceinvoke r153.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r52;

        i2 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int size()>();

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i1);

        $i17 = r4.<android.support.media.ExifInterface$ExifAttribute: int format>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i17);

        $i18 = r4.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i18);

        if i2 <= 4 goto label28;

        $l19 = (long) i55;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l19);

        i55 = i55 + i2;

        goto label30;

     label28:
        $r53 = r4.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r53);

        if i2 >= 4 goto label30;

        i56 = i2;

     label29:
        if i56 >= 4 goto label30;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(0);

        i56 = i56 + 1;

        goto label29;

     label30:
        goto label27;

     label31:
        if i53 != 0 goto label32;

        $r45 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r46 = $r45[4];

        $z11 = virtualinvoke $r46.<java.util.HashMap: boolean isEmpty()>();

        if $z11 != 0 goto label32;

        $i15 = r2[4];

        $l16 = (long) $i15;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l16);

        goto label33;

     label32:
        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(0L);

     label33:
        $r155 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r156 = $r155[i53];

        $r157 = virtualinvoke $r156.<java.util.HashMap: java.util.Set entrySet()>();

        r158 = interfaceinvoke $r157.<java.util.Set: java.util.Iterator iterator()>();

     label34:
        $z14 = interfaceinvoke r158.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label36;

        $r40 = interfaceinvoke r158.<java.util.Iterator: java.lang.Object next()>();

        r159 = (java.util.Map$Entry) $r40;

        $r41 = interfaceinvoke r159.<java.util.Map$Entry: java.lang.Object getValue()>();

        r160 = (android.support.media.ExifInterface$ExifAttribute) $r41;

        $r42 = r160.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i13 = lengthof $r42;

        if $i13 <= 4 goto label35;

        $r44 = r160.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $r43 = r160.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i14 = lengthof $r43;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>($r44, 0, $i14);

     label35:
        goto label34;

     label36:
        i53 = i53 + 1;

        goto label26;

     label37:
        $z8 = r0.<android.support.media.ExifInterface: boolean mHasThumbnail>;

        if $z8 == 0 goto label38;

        $r30 = virtualinvoke r0.<android.support.media.ExifInterface: byte[] getThumbnailBytes()>();

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r30);

     label38:
        $r29 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r29);

        return i51;
    }

    private static android.util.Pair guessDataFormat(java.lang.String)
    {
        java.lang.String r0, $r13, $r14, $r24, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l0, $l1, $l3, $l5, l18, l19;
        byte $b2, $b4, $b6, $b8, $b9, $b10, $b11;
        android.util.Pair $r1, $r4, $r7, $r10, $r15, $r18, $r21, $r33, $r36, $r39, $r55, $r59, r63, r64;
        java.lang.Integer $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r16, $r17, $r19, $r20, $r22, $r23, $r26, $r30, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r44, $r46, $r49, $r52, $r56, $r57, $r60, $r61, $r66;
        int $i7, $i12, $i13, i14, i15, i16, $i17;
        double $d0, $d1;
        java.lang.Object $r25, $r28, $r29, $r31, $r42, $r43, $r45, $r47, $r48, $r50, $r51, $r65;
        java.lang.Throwable $r53, $r54, $r58, r68, r70, r71;
        java.lang.String[] r62, r67;
        java.lang.Long r69;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z0 == 0 goto label11;

        r62 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $r24 = r62[0];

        r63 = staticinvoke <android.support.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r24);

        $r25 = r63.<android.util.Pair: java.lang.Object first>;

        $r26 = (java.lang.Integer) $r25;

        $i12 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        if $i12 != 2 goto label01;

        return r63;

     label01:
        i14 = 1;

     label02:
        $i13 = lengthof r62;

        if i14 >= $i13 goto label10;

        $r27 = r62[i14];

        r64 = staticinvoke <android.support.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r27);

        i15 = -1;

        i16 = -1;

        $r28 = r64.<android.util.Pair: java.lang.Object first>;

        $r30 = (java.lang.Integer) $r28;

        $r29 = r63.<android.util.Pair: java.lang.Object first>;

        $z2 = virtualinvoke $r30.<java.lang.Integer: boolean equals(java.lang.Object)>($r29);

        if $z2 != 0 goto label03;

        $r50 = r64.<android.util.Pair: java.lang.Object second>;

        $r52 = (java.lang.Integer) $r50;

        $r51 = r63.<android.util.Pair: java.lang.Object first>;

        $z5 = virtualinvoke $r52.<java.lang.Integer: boolean equals(java.lang.Object)>($r51);

        if $z5 == 0 goto label04;

     label03:
        $r31 = r63.<android.util.Pair: java.lang.Object first>;

        $r32 = (java.lang.Integer) $r31;

        i15 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

     label04:
        $r65 = r63.<android.util.Pair: java.lang.Object second>;

        $r66 = (java.lang.Integer) $r65;

        $i17 = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        if $i17 == -1 goto label06;

        $r42 = r64.<android.util.Pair: java.lang.Object first>;

        $r44 = (java.lang.Integer) $r42;

        $r43 = r63.<android.util.Pair: java.lang.Object second>;

        $z3 = virtualinvoke $r44.<java.lang.Integer: boolean equals(java.lang.Object)>($r43);

        if $z3 != 0 goto label05;

        $r47 = r64.<android.util.Pair: java.lang.Object second>;

        $r49 = (java.lang.Integer) $r47;

        $r48 = r63.<android.util.Pair: java.lang.Object second>;

        $z4 = virtualinvoke $r49.<java.lang.Integer: boolean equals(java.lang.Object)>($r48);

        if $z4 == 0 goto label06;

     label05:
        $r45 = r63.<android.util.Pair: java.lang.Object second>;

        $r46 = (java.lang.Integer) $r45;

        i16 = virtualinvoke $r46.<java.lang.Integer: int intValue()>();

     label06:
        if i15 != -1 goto label07;

        if i16 != -1 goto label07;

        $r39 = new android.util.Pair;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r39.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r40, $r41);

        return $r39;

     label07:
        if i15 != -1 goto label08;

        $r36 = new android.util.Pair;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r36.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r37, $r38);

        r63 = $r36;

        goto label09;

     label08:
        if i16 != -1 goto label09;

        $r33 = new android.util.Pair;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r33.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r34, $r35);

        r63 = $r33;

        goto label09;

     label09:
        i14 = i14 + 1;

        goto label02;

     label10:
        return r63;

     label11:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label22;

        r67 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $i7 = lengthof r67;

        if $i7 != 2 goto label21;

     label12:
        $r13 = r67[0];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        l18 = (long) $d0;

        $r14 = r67[1];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        l19 = (long) $d1;

        $b8 = l18 cmp 0L;

        if $b8 < 0 goto label13;

        $b9 = l19 cmp 0L;

        if $b9 >= 0 goto label15;

     label13:
        $r15 = new android.util.Pair;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r16, $r17);

     label14:
        return $r15;

     label15:
        $b10 = l18 cmp 2147483647L;

        if $b10 > 0 goto label16;

        $b11 = l19 cmp 2147483647L;

        if $b11 <= 0 goto label18;

     label16:
        $r18 = new android.util.Pair;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r18.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r19, $r20);

     label17:
        return $r18;

     label18:
        $r21 = new android.util.Pair;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        specialinvoke $r21.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r22, $r23);

     label19:
        return $r21;

     label20:
        $r53 := @caughtexception;

        r68 = $r53;

     label21:
        $r10 = new android.util.Pair;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r11, $r12);

        return $r10;

     label22:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

        r69 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l1 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label24;

        $l5 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp 65535L;

        if $b6 > 0 goto label24;

        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

     label23:
        return $r7;

     label24:
        $l3 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label26;

        $r4 = new android.util.Pair;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r4.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r6);

     label25:
        return $r4;

     label26:
        $r1 = new android.util.Pair;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r1.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

     label27:
        return $r1;

     label28:
        $r54 := @caughtexception;

        r70 = $r54;

     label29:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        $r55 = new android.util.Pair;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r55.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r56, $r57);

     label30:
        return $r55;

     label31:
        $r58 := @caughtexception;

        r71 = $r58;

        $r59 = new android.util.Pair;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r59.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r60, $r61);

        return $r59;

        catch java.lang.NumberFormatException from label12 to label14 with label20;
        catch java.lang.NumberFormatException from label15 to label17 with label20;
        catch java.lang.NumberFormatException from label18 to label19 with label20;
        catch java.lang.NumberFormatException from label22 to label23 with label28;
        catch java.lang.NumberFormatException from label24 to label25 with label28;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
        catch java.lang.NumberFormatException from label29 to label30 with label31;
    }

    private void swapBasedOnImageSize(int, int) throws java.io.IOException
    {
        android.support.media.ExifInterface r0;
        int i0, i1, i2, i3, i4, i5;
        android.support.media.ExifInterface$ExifAttribute r1, r2, r3, r4;
        java.util.HashMap r5, $r7, $r9, $r11, $r14, $r17, $r20, $r28;
        java.util.HashMap[] $r6, $r8, $r10, $r13, $r16, $r19, $r26, $r27, $r29, $r30;
        boolean $z0, $z1;
        java.lang.Object $r12, $r15, $r18, $r21;
        java.nio.ByteOrder $r22, $r23, $r24, $r25;

        r0 := @this: android.support.media.ExifInterface;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r6 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[i0];

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[i1];

        $z1 = virtualinvoke $r9.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r10 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[i0];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r1 = (android.support.media.ExifInterface$ExifAttribute) $r12;

        $r13 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i0];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r2 = (android.support.media.ExifInterface$ExifAttribute) $r15;

        $r16 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[i1];

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r3 = (android.support.media.ExifInterface$ExifAttribute) $r18;

        $r19 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[i1];

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r4 = (android.support.media.ExifInterface$ExifAttribute) $r21;

        if r1 == null goto label5;

        if r2 != null goto label3;

        goto label5;

     label3:
        if r3 == null goto label5;

        if r4 != null goto label4;

        goto label5;

     label4:
        $r22 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r1.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r22);

        $r23 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i3 = virtualinvoke r2.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r23);

        $r24 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i4 = virtualinvoke r3.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r24);

        $r25 = r0.<android.support.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i5 = virtualinvoke r4.<android.support.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r25);

        if i2 >= i4 goto label5;

        if i3 >= i5 goto label5;

        $r26 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r5 = $r26[i0];

        $r29 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r28 = $r27[i1];

        $r29[i0] = $r28;

        $r30 = r0.<android.support.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30[i1] = r5;

     label5:
        return;
    }

    private static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Throwable $r1, $r2, r3, r4;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        r3 = $r2;

        throw r3;

     label4:
        $r1 := @caughtexception;

        r4 = $r1;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private static int copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        byte[] r2;
        int i0, $i1, i2;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        i2 = 0;

        r2 = newarray (byte)[8192];

     label1:
        $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2);

        i0 = $i1;

        if $i1 == -1 goto label2;

        i2 = i2 + i0;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i0);

        goto label1;

     label2:
        return i2;
    }

    private static long[] convertToLongArray(java.lang.Object)
    {
        java.lang.Object r0;
        int[] r1, $r5;
        long[] r2, $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i4;
        long $l3;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof int[];

        if $z0 == 0 goto label3;

        $r5 = (int[]) r0;

        r1 = (int[]) $r5;

        $i0 = lengthof r1;

        r2 = newarray (long)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        $i2 = r1[i4];

        $l3 = (long) $i2;

        r2[i4] = $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r2;

     label3:
        $z1 = r0 instanceof long[];

        if $z1 == 0 goto label4;

        $r3 = (long[]) r0;

        $r4 = (long[]) $r3;

        return $r4;

     label4:
        return null;
    }

    static void <clinit>()
    {
        android.support.media.ExifInterface$ExifTag[] r0, $r23, $r65, $r125, $r157, $r159, $r198, $r202, $r205, $r207, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r245, $r251, $r257, $r263, $r269, $r275;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        android.support.media.ExifInterface$ExifTag r1, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r158, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r199, $r200, $r201, $r203, $r204, $r206, $r208, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r246, $r252, $r258, $r264, $r270, $r276;
        java.lang.Integer[] $r2, $r8;
        java.lang.Integer $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r248, $r249, $r254, $r255, $r260, $r261, $r266, $r267, $r272, $r273, $r278, $r279, $r290;
        java.util.List $r7, $r13, $r235;
        int[] $r14, $r15, $r16, $r21;
        byte[] $r17, $r18, $r19, $r22, $r240;
        java.lang.String[] $r20, $r234;
        android.support.media.ExifInterface$ExifTag[][] $r209, $r229, $r231, $r244, $r287;
        java.util.HashMap[] $r230, $r232, $r284, $r286, $r288, $r292;
        java.util.HashSet $r233;
        java.util.HashMap $r236, $r247, $r253, $r259, $r265, $r271, $r277, $r283, $r285, $r289, $r294;
        java.nio.charset.Charset $r237, $r238;
        java.lang.String $r239, $r293;
        java.text.SimpleDateFormat $r241, $r242;
        java.util.TimeZone $r243;
        java.util.regex.Pattern $r281, $r282;

        $r2 = newarray (java.lang.Integer)[4];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r2[3] = $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        <android.support.media.ExifInterface: java.util.List ROTATION_ORDER> = $r7;

        $r8 = newarray (java.lang.Integer)[4];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r8[2] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r8[3] = $r12;

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        <android.support.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER> = $r13;

        $r14 = newarray (int)[3];

        $r14[0] = 8;

        $r14[1] = 8;

        $r14[2] = 8;

        <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB> = $r14;

        $r15 = newarray (int)[1];

        $r15[0] = 4;

        <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1> = $r15;

        $r16 = newarray (int)[1];

        $r16[0] = 8;

        <android.support.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2> = $r16;

        $r17 = newarray (byte)[3];

        $r17[0] = -1;

        $r17[1] = -40;

        $r17[2] = -1;

        <android.support.media.ExifInterface: byte[] JPEG_SIGNATURE> = $r17;

        $r18 = newarray (byte)[6];

        $r18[0] = 79;

        $r18[1] = 76;

        $r18[2] = 89;

        $r18[3] = 77;

        $r18[4] = 80;

        $r18[5] = 0;

        <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1> = $r18;

        $r19 = newarray (byte)[10];

        $r19[0] = 79;

        $r19[1] = 76;

        $r19[2] = 89;

        $r19[3] = 77;

        $r19[4] = 80;

        $r19[5] = 85;

        $r19[6] = 83;

        $r19[7] = 0;

        $r19[8] = 73;

        $r19[9] = 73;

        <android.support.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2> = $r19;

        $r20 = newarray (java.lang.String)[13];

        $r20[0] = "";

        $r20[1] = "BYTE";

        $r20[2] = "STRING";

        $r20[3] = "USHORT";

        $r20[4] = "ULONG";

        $r20[5] = "URATIONAL";

        $r20[6] = "SBYTE";

        $r20[7] = "UNDEFINED";

        $r20[8] = "SSHORT";

        $r20[9] = "SLONG";

        $r20[10] = "SRATIONAL";

        $r20[11] = "SINGLE";

        $r20[12] = "DOUBLE";

        <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES> = $r20;

        $r21 = newarray (int)[14];

        $r21[0] = 0;

        $r21[1] = 1;

        $r21[2] = 1;

        $r21[3] = 2;

        $r21[4] = 4;

        $r21[5] = 8;

        $r21[6] = 1;

        $r21[7] = 1;

        $r21[8] = 2;

        $r21[9] = 4;

        $r21[10] = 8;

        $r21[11] = 4;

        $r21[12] = 8;

        $r21[13] = 1;

        <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT> = $r21;

        $r22 = newarray (byte)[8];

        $r22[0] = 65;

        $r22[1] = 83;

        $r22[2] = 67;

        $r22[3] = 73;

        $r22[4] = 73;

        $r22[5] = 0;

        $r22[6] = 0;

        $r22[7] = 0;

        <android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX> = $r22;

        $r23 = newarray (android.support.media.ExifInterface$ExifTag)[41];

        $r24 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r24.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("NewSubfileType", 254, 4);

        $r23[0] = $r24;

        $r25 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r25.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubfileType", 255, 4);

        $r23[1] = $r25;

        $r26 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r26.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ImageWidth", 256, 3, 4);

        $r23[2] = $r26;

        $r27 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r27.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ImageLength", 257, 3, 4);

        $r23[3] = $r27;

        $r28 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r28.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BitsPerSample", 258, 3);

        $r23[4] = $r28;

        $r29 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r29.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Compression", 259, 3);

        $r23[5] = $r29;

        $r30 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r30.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotometricInterpretation", 262, 3);

        $r23[6] = $r30;

        $r31 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r31.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageDescription", 270, 2);

        $r23[7] = $r31;

        $r32 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r32.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Make", 271, 2);

        $r23[8] = $r32;

        $r33 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r33.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Model", 272, 2);

        $r23[9] = $r33;

        $r34 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r34.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripOffsets", 273, 3, 4);

        $r23[10] = $r34;

        $r35 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r35.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Orientation", 274, 3);

        $r23[11] = $r35;

        $r36 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r36.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SamplesPerPixel", 277, 3);

        $r23[12] = $r36;

        $r37 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r37.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("RowsPerStrip", 278, 3, 4);

        $r23[13] = $r37;

        $r38 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r38.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripByteCounts", 279, 3, 4);

        $r23[14] = $r38;

        $r39 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r39.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("XResolution", 282, 5);

        $r23[15] = $r39;

        $r40 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r40.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YResolution", 283, 5);

        $r23[16] = $r40;

        $r41 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r41.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PlanarConfiguration", 284, 3);

        $r23[17] = $r41;

        $r42 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r42.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ResolutionUnit", 296, 3);

        $r23[18] = $r42;

        $r43 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r43.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("TransferFunction", 301, 3);

        $r23[19] = $r43;

        $r44 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r44.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Software", 305, 2);

        $r23[20] = $r44;

        $r45 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r45.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTime", 306, 2);

        $r23[21] = $r45;

        $r46 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r46.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Artist", 315, 2);

        $r23[22] = $r46;

        $r47 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r47.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhitePoint", 318, 5);

        $r23[23] = $r47;

        $r48 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r48.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PrimaryChromaticities", 319, 5);

        $r23[24] = $r48;

        $r49 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r49.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r23[25] = $r49;

        $r50 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r50.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormat", 513, 4);

        $r23[26] = $r50;

        $r51 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r51.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormatLength", 514, 4);

        $r23[27] = $r51;

        $r52 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r52.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrCoefficients", 529, 5);

        $r23[28] = $r52;

        $r53 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r53.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrSubSampling", 530, 3);

        $r23[29] = $r53;

        $r54 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r54.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrPositioning", 531, 3);

        $r23[30] = $r54;

        $r55 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r55.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ReferenceBlackWhite", 532, 5);

        $r23[31] = $r55;

        $r56 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r56.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Copyright", 33432, 2);

        $r23[32] = $r56;

        $r57 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r57.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r23[33] = $r57;

        $r58 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r58.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r23[34] = $r58;

        $r59 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r59.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorTopBorder", 4, 4);

        $r23[35] = $r59;

        $r60 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r60.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorLeftBorder", 5, 4);

        $r23[36] = $r60;

        $r61 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r61.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorBottomBorder", 6, 4);

        $r23[37] = $r61;

        $r62 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r62.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorRightBorder", 7, 4);

        $r23[38] = $r62;

        $r63 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r63.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ISO", 23, 3);

        $r23[39] = $r63;

        $r64 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r64.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JpgFromRaw", 46, 7);

        $r23[40] = $r64;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS> = $r23;

        $r65 = newarray (android.support.media.ExifInterface$ExifTag)[59];

        $r66 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r66.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureTime", 33434, 5);

        $r65[0] = $r66;

        $r67 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r67.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FNumber", 33437, 5);

        $r65[1] = $r67;

        $r68 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r68.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureProgram", 34850, 3);

        $r65[2] = $r68;

        $r69 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r69.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SpectralSensitivity", 34852, 2);

        $r65[3] = $r69;

        $r70 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r70.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotographicSensitivity", 34855, 3);

        $r65[4] = $r70;

        $r71 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r71.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("OECF", 34856, 7);

        $r65[5] = $r71;

        $r72 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r72.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifVersion", 36864, 2);

        $r65[6] = $r72;

        $r73 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r73.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTimeOriginal", 36867, 2);

        $r65[7] = $r73;

        $r74 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r74.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTimeDigitized", 36868, 2);

        $r65[8] = $r74;

        $r75 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r75.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ComponentsConfiguration", 37121, 7);

        $r65[9] = $r75;

        $r76 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r76.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CompressedBitsPerPixel", 37122, 5);

        $r65[10] = $r76;

        $r77 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r77.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ShutterSpeedValue", 37377, 10);

        $r65[11] = $r77;

        $r78 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r78.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ApertureValue", 37378, 5);

        $r65[12] = $r78;

        $r79 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r79.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BrightnessValue", 37379, 10);

        $r65[13] = $r79;

        $r80 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r80.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureBiasValue", 37380, 10);

        $r65[14] = $r80;

        $r81 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r81.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MaxApertureValue", 37381, 5);

        $r65[15] = $r81;

        $r82 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r82.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectDistance", 37382, 5);

        $r65[16] = $r82;

        $r83 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r83.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MeteringMode", 37383, 3);

        $r65[17] = $r83;

        $r84 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r84.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("LightSource", 37384, 3);

        $r65[18] = $r84;

        $r85 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r85.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Flash", 37385, 3);

        $r65[19] = $r85;

        $r86 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r86.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalLength", 37386, 5);

        $r65[20] = $r86;

        $r87 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r87.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectArea", 37396, 3);

        $r65[21] = $r87;

        $r88 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r88.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MakerNote", 37500, 7);

        $r65[22] = $r88;

        $r89 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r89.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("UserComment", 37510, 7);

        $r65[23] = $r89;

        $r90 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r90.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTime", 37520, 2);

        $r65[24] = $r90;

        $r91 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r91.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTimeOriginal", 37521, 2);

        $r65[25] = $r91;

        $r92 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r92.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTimeDigitized", 37522, 2);

        $r65[26] = $r92;

        $r93 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r93.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FlashpixVersion", 40960, 7);

        $r65[27] = $r93;

        $r94 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r94.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ColorSpace", 40961, 3);

        $r65[28] = $r94;

        $r95 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r95.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("PixelXDimension", 40962, 3, 4);

        $r65[29] = $r95;

        $r96 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r96.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("PixelYDimension", 40963, 3, 4);

        $r65[30] = $r96;

        $r97 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r97.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("RelatedSoundFile", 40964, 2);

        $r65[31] = $r97;

        $r98 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r98.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIFDPointer", 40965, 4);

        $r65[32] = $r98;

        $r99 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r99.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FlashEnergy", 41483, 5);

        $r65[33] = $r99;

        $r100 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r100.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SpatialFrequencyResponse", 41484, 7);

        $r65[34] = $r100;

        $r101 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r101.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneXResolution", 41486, 5);

        $r65[35] = $r101;

        $r102 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r102.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneYResolution", 41487, 5);

        $r65[36] = $r102;

        $r103 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r103.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneResolutionUnit", 41488, 3);

        $r65[37] = $r103;

        $r104 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r104.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectLocation", 41492, 3);

        $r65[38] = $r104;

        $r105 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r105.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureIndex", 41493, 5);

        $r65[39] = $r105;

        $r106 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r106.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensingMethod", 41495, 3);

        $r65[40] = $r106;

        $r107 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r107.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FileSource", 41728, 7);

        $r65[41] = $r107;

        $r108 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r108.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SceneType", 41729, 7);

        $r65[42] = $r108;

        $r109 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r109.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CFAPattern", 41730, 7);

        $r65[43] = $r109;

        $r110 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r110.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CustomRendered", 41985, 3);

        $r65[44] = $r110;

        $r111 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r111.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureMode", 41986, 3);

        $r65[45] = $r111;

        $r112 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r112.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhiteBalance", 41987, 3);

        $r65[46] = $r112;

        $r113 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r113.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DigitalZoomRatio", 41988, 5);

        $r65[47] = $r113;

        $r114 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r114.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalLengthIn35mmFilm", 41989, 3);

        $r65[48] = $r114;

        $r115 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r115.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SceneCaptureType", 41990, 3);

        $r65[49] = $r115;

        $r116 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r116.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GainControl", 41991, 3);

        $r65[50] = $r116;

        $r117 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r117.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Contrast", 41992, 3);

        $r65[51] = $r117;

        $r118 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r118.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Saturation", 41993, 3);

        $r65[52] = $r118;

        $r119 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r119.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Sharpness", 41994, 3);

        $r65[53] = $r119;

        $r120 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r120.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DeviceSettingDescription", 41995, 7);

        $r65[54] = $r120;

        $r121 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r121.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectDistanceRange", 41996, 3);

        $r65[55] = $r121;

        $r122 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r122.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageUniqueID", 42016, 2);

        $r65[56] = $r122;

        $r123 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r123.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DNGVersion", 50706, 1);

        $r65[57] = $r123;

        $r124 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r124.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("DefaultCropSize", 50720, 3, 4);

        $r65[58] = $r124;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS> = $r65;

        $r125 = newarray (android.support.media.ExifInterface$ExifTag)[31];

        $r126 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r126.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSVersionID", 0, 1);

        $r125[0] = $r126;

        $r127 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r127.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLatitudeRef", 1, 2);

        $r125[1] = $r127;

        $r128 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r128.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLatitude", 2, 5);

        $r125[2] = $r128;

        $r129 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r129.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLongitudeRef", 3, 2);

        $r125[3] = $r129;

        $r130 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r130.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLongitude", 4, 5);

        $r125[4] = $r130;

        $r131 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r131.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAltitudeRef", 5, 1);

        $r125[5] = $r131;

        $r132 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r132.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAltitude", 6, 5);

        $r125[6] = $r132;

        $r133 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r133.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTimeStamp", 7, 5);

        $r125[7] = $r133;

        $r134 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r134.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSatellites", 8, 2);

        $r125[8] = $r134;

        $r135 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r135.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSStatus", 9, 2);

        $r125[9] = $r135;

        $r136 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r136.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSMeasureMode", 10, 2);

        $r125[10] = $r136;

        $r137 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r137.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDOP", 11, 5);

        $r125[11] = $r137;

        $r138 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r138.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSpeedRef", 12, 2);

        $r125[12] = $r138;

        $r139 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r139.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSpeed", 13, 5);

        $r125[13] = $r139;

        $r140 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r140.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTrackRef", 14, 2);

        $r125[14] = $r140;

        $r141 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r141.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTrack", 15, 5);

        $r125[15] = $r141;

        $r142 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r142.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSImgDirectionRef", 16, 2);

        $r125[16] = $r142;

        $r143 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r143.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSImgDirection", 17, 5);

        $r125[17] = $r143;

        $r144 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r144.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSMapDatum", 18, 2);

        $r125[18] = $r144;

        $r145 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r145.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLatitudeRef", 19, 2);

        $r125[19] = $r145;

        $r146 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r146.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLatitude", 20, 5);

        $r125[20] = $r146;

        $r147 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r147.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLongitudeRef", 21, 2);

        $r125[21] = $r147;

        $r148 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r148.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLongitude", 22, 5);

        $r125[22] = $r148;

        $r149 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r149.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestBearingRef", 23, 2);

        $r125[23] = $r149;

        $r150 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r150.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestBearing", 24, 5);

        $r125[24] = $r150;

        $r151 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r151.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestDistanceRef", 25, 2);

        $r125[25] = $r151;

        $r152 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r152.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestDistance", 26, 5);

        $r125[26] = $r152;

        $r153 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r153.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSProcessingMethod", 27, 7);

        $r125[27] = $r153;

        $r154 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r154.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAreaInformation", 28, 7);

        $r125[28] = $r154;

        $r155 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r155.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDateStamp", 29, 2);

        $r125[29] = $r155;

        $r156 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r156.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDifferential", 30, 3);

        $r125[30] = $r156;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_GPS_TAGS> = $r125;

        $r157 = newarray (android.support.media.ExifInterface$ExifTag)[1];

        $r158 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r158.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIndex", 1, 2);

        $r157[0] = $r158;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS> = $r157;

        $r159 = newarray (android.support.media.ExifInterface$ExifTag)[37];

        $r160 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r160.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("NewSubfileType", 254, 4);

        $r159[0] = $r160;

        $r161 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r161.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubfileType", 255, 4);

        $r159[1] = $r161;

        $r162 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r162.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ThumbnailImageWidth", 256, 3, 4);

        $r159[2] = $r162;

        $r163 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r163.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ThumbnailImageLength", 257, 3, 4);

        $r159[3] = $r163;

        $r164 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r164.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BitsPerSample", 258, 3);

        $r159[4] = $r164;

        $r165 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r165.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Compression", 259, 3);

        $r159[5] = $r165;

        $r166 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r166.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotometricInterpretation", 262, 3);

        $r159[6] = $r166;

        $r167 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r167.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageDescription", 270, 2);

        $r159[7] = $r167;

        $r168 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r168.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Make", 271, 2);

        $r159[8] = $r168;

        $r169 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r169.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Model", 272, 2);

        $r159[9] = $r169;

        $r170 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r170.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripOffsets", 273, 3, 4);

        $r159[10] = $r170;

        $r171 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r171.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Orientation", 274, 3);

        $r159[11] = $r171;

        $r172 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r172.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SamplesPerPixel", 277, 3);

        $r159[12] = $r172;

        $r173 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r173.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("RowsPerStrip", 278, 3, 4);

        $r159[13] = $r173;

        $r174 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r174.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripByteCounts", 279, 3, 4);

        $r159[14] = $r174;

        $r175 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r175.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("XResolution", 282, 5);

        $r159[15] = $r175;

        $r176 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r176.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YResolution", 283, 5);

        $r159[16] = $r176;

        $r177 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r177.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PlanarConfiguration", 284, 3);

        $r159[17] = $r177;

        $r178 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r178.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ResolutionUnit", 296, 3);

        $r159[18] = $r178;

        $r179 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r179.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("TransferFunction", 301, 3);

        $r159[19] = $r179;

        $r180 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r180.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Software", 305, 2);

        $r159[20] = $r180;

        $r181 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r181.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTime", 306, 2);

        $r159[21] = $r181;

        $r182 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r182.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Artist", 315, 2);

        $r159[22] = $r182;

        $r183 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r183.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhitePoint", 318, 5);

        $r159[23] = $r183;

        $r184 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r184.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PrimaryChromaticities", 319, 5);

        $r159[24] = $r184;

        $r185 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r185.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r159[25] = $r185;

        $r186 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r186.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormat", 513, 4);

        $r159[26] = $r186;

        $r187 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r187.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormatLength", 514, 4);

        $r159[27] = $r187;

        $r188 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r188.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrCoefficients", 529, 5);

        $r159[28] = $r188;

        $r189 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r189.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrSubSampling", 530, 3);

        $r159[29] = $r189;

        $r190 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r190.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrPositioning", 531, 3);

        $r159[30] = $r190;

        $r191 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r191.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ReferenceBlackWhite", 532, 5);

        $r159[31] = $r191;

        $r192 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r192.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Copyright", 33432, 2);

        $r159[32] = $r192;

        $r193 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r193.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r159[33] = $r193;

        $r194 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r194.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r159[34] = $r194;

        $r195 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r195.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DNGVersion", 50706, 1);

        $r159[35] = $r195;

        $r196 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r196.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("DefaultCropSize", 50720, 3, 4);

        $r159[36] = $r196;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS> = $r159;

        $r197 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r197.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("StripOffsets", 273, 3);

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE> = $r197;

        $r198 = newarray (android.support.media.ExifInterface$ExifTag)[3];

        $r199 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r199.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ThumbnailImage", 256, 7);

        $r198[0] = $r199;

        $r200 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r200.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CameraSettingsIFDPointer", 8224, 4);

        $r198[1] = $r200;

        $r201 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r201.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageProcessingIFDPointer", 8256, 4);

        $r198[2] = $r201;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS> = $r198;

        $r202 = newarray (android.support.media.ExifInterface$ExifTag)[2];

        $r203 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r203.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PreviewImageStart", 257, 4);

        $r202[0] = $r203;

        $r204 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r204.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PreviewImageLength", 258, 4);

        $r202[1] = $r204;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS> = $r202;

        $r205 = newarray (android.support.media.ExifInterface$ExifTag)[1];

        $r206 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r206.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("AspectFrame", 4371, 3);

        $r205[0] = $r206;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS> = $r205;

        $r207 = newarray (android.support.media.ExifInterface$ExifTag)[1];

        $r208 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r208.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ColorSpace", 55, 3);

        $r207[0] = $r208;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] PEF_TAGS> = $r207;

        $r209 = newarray (android.support.media.ExifInterface$ExifTag[])[10];

        $r210 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>;

        $r209[0] = $r210;

        $r211 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS>;

        $r209[1] = $r211;

        $r212 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_GPS_TAGS>;

        $r209[2] = $r212;

        $r213 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS>;

        $r209[3] = $r213;

        $r214 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS>;

        $r209[4] = $r214;

        $r215 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>;

        $r209[5] = $r215;

        $r216 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS>;

        $r209[6] = $r216;

        $r217 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS>;

        $r209[7] = $r217;

        $r218 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS>;

        $r209[8] = $r218;

        $r219 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] PEF_TAGS>;

        $r209[9] = $r219;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS> = $r209;

        $r220 = newarray (android.support.media.ExifInterface$ExifTag)[6];

        $r221 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r221.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r220[0] = $r221;

        $r222 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r222.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r220[1] = $r222;

        $r223 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r223.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r220[2] = $r223;

        $r224 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r224.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIFDPointer", 40965, 4);

        $r220[3] = $r224;

        $r225 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r225.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CameraSettingsIFDPointer", 8224, 1);

        $r220[4] = $r225;

        $r226 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r226.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageProcessingIFDPointer", 8256, 1);

        $r220[5] = $r226;

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS> = $r220;

        $r227 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r227.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormat", 513, 4);

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG> = $r227;

        $r228 = new android.support.media.ExifInterface$ExifTag;

        specialinvoke $r228.<android.support.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormatLength", 514, 4);

        <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG> = $r228;

        $r229 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r229;

        $r230 = newarray (java.util.HashMap)[$i1];

        <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading> = $r230;

        $r231 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r231;

        $r232 = newarray (java.util.HashMap)[$i2];

        <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting> = $r232;

        $r233 = new java.util.HashSet;

        $r234 = newarray (java.lang.String)[5];

        $r234[0] = "FNumber";

        $r234[1] = "DigitalZoomRatio";

        $r234[2] = "ExposureTime";

        $r234[3] = "SubjectDistance";

        $r234[4] = "GPSTimeStamp";

        $r235 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r234);

        specialinvoke $r233.<java.util.HashSet: void <init>(java.util.Collection)>($r235);

        <android.support.media.ExifInterface: java.util.HashSet sTagSetForCompatibility> = $r233;

        $r236 = new java.util.HashMap;

        specialinvoke $r236.<java.util.HashMap: void <init>()>();

        <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap> = $r236;

        $r237 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <android.support.media.ExifInterface: java.nio.charset.Charset ASCII> = $r237;

        $r239 = "Exif\u0000\u0000";

        $r238 = <android.support.media.ExifInterface: java.nio.charset.Charset ASCII>;

        $r240 = virtualinvoke $r239.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r238);

        <android.support.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1> = $r240;

        $r241 = new java.text.SimpleDateFormat;

        specialinvoke $r241.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy:MM:dd HH:mm:ss");

        <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter> = $r241;

        $r242 = <android.support.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        $r243 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r242.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r243);

        i11 = 0;

     label1:
        $r244 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r244;

        if i11 >= $i3 goto label4;

        $r284 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r283 = new java.util.HashMap;

        specialinvoke $r283.<java.util.HashMap: void <init>()>();

        $r284[i11] = $r283;

        $r286 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r285 = new java.util.HashMap;

        specialinvoke $r285.<java.util.HashMap: void <init>()>();

        $r286[i11] = $r285;

        $r287 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        r0 = $r287[i11];

        i0 = lengthof r0;

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        r1 = r0[i12];

        $r288 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r289 = $r288[i11];

        $i10 = r1.<android.support.media.ExifInterface$ExifTag: int number>;

        $r290 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r289.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r290, r1);

        $r292 = <android.support.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r294 = $r292[i11];

        $r293 = r1.<android.support.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r294.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r293, r1);

        i12 = i12 + 1;

        goto label2;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        $r247 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r245 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r246 = $r245[0];

        $i4 = $r246.<android.support.media.ExifInterface$ExifTag: int number>;

        $r248 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r249 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r247.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r248, $r249);

        $r253 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r251 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r252 = $r251[1];

        $i5 = $r252.<android.support.media.ExifInterface$ExifTag: int number>;

        $r254 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r255 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r253.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r254, $r255);

        $r259 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r257 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r258 = $r257[2];

        $i6 = $r258.<android.support.media.ExifInterface$ExifTag: int number>;

        $r260 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r261 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r259.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r260, $r261);

        $r265 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r263 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r264 = $r263[3];

        $i7 = $r264.<android.support.media.ExifInterface$ExifTag: int number>;

        $r266 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r267 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r265.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r266, $r267);

        $r271 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r269 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r270 = $r269[4];

        $i8 = $r270.<android.support.media.ExifInterface$ExifTag: int number>;

        $r272 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r273 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r271.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r272, $r273);

        $r277 = <android.support.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r275 = <android.support.media.ExifInterface: android.support.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r276 = $r275[5];

        $i9 = $r276.<android.support.media.ExifInterface$ExifTag: int number>;

        $r278 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r279 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        virtualinvoke $r277.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r278, $r279);

        $r281 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".*[1-9].*");

        <android.support.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern> = $r281;

        $r282 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([0-9][0-9]):([0-9][0-9]):([0-9][0-9])$");

        <android.support.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern> = $r282;

        return;
    }

android.support.media.ExifInterface$ByteOrderedDataInputStream
<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>
<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>
<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>
<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>
<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>
<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.io.InputStream r1;
        java.nio.ByteOrder $r2;
        java.io.DataInputStream $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder> = $r2;

        $r3 = new java.io.DataInputStream;

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream> = $r3;

        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i0 = virtualinvoke $r4.<java.io.DataInputStream: int available()>();

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength> = $i0;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = 0;

        $r5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        virtualinvoke $r5.<java.io.DataInputStream: void mark(int)>($i1);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        specialinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>($r2);

        return;
    }

    public void setByteOrder(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.nio.ByteOrder r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: java.nio.ByteOrder;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder> = r1;

        return;
    }

    public void seek(long) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i3, $i5, $i6, $i7, $i8;
        long $l1, $l4, l9;
        byte $b2;
        java.io.IOException $r1;
        java.io.DataInputStream $r2, $r3;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        l9 := @parameter0: long;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $l1 = (long) $i0;

        $b2 = $l1 cmp l9;

        if $b2 <= 0 goto label1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = 0;

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void reset()>();

        $r3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i8 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        virtualinvoke $r3.<java.io.DataInputStream: void mark(int)>($i8);

        goto label2;

     label1:
        $i3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $l4 = (long) $i3;

        l9 = l9 - $l4;

     label2:
        $i5 = (int) l9;

        $i6 = virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i5);

        $i7 = (int) l9;

        if $i6 == $i7 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Couldn\'t seek up to the byteCount");

        throw $r1;

     label3:
        return;
    }

    public int peek()
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        return $i0;
    }

    public int available() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.io.DataInputStream $r1;
        int $i0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int available()>();

        return $i0;
    }

    public int read() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1, $i2;
        java.io.DataInputStream $r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i2 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4;
        java.io.DataInputStream $r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = $i3 + i2;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i4;

        return i2;
    }

    public int readUnsignedByte() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1, $i2;
        java.io.DataInputStream $r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i2 = virtualinvoke $r1.<java.io.DataInputStream: int readUnsignedByte()>();

        return $i2;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Currently unsupported");

        return null;
    }

    public boolean readBoolean() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        boolean $z0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $z0 = virtualinvoke $r1.<java.io.DataInputStream: boolean readBoolean()>();

        return $z0;
    }

    public char readChar() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        char $c2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 2;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $c2 = virtualinvoke $r1.<java.io.DataInputStream: char readChar()>();

        return $c2;
    }

    public java.lang.String readUTF() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        java.lang.String $r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 2;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $r2 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        return $r2;
    }

    public void readFully(byte[], int, int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.io.DataInputStream $r2;
        java.io.IOException $r3;
        java.io.EOFException $r4;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + i1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $i5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i5 <= $i4 goto label1;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i6 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r1, i0, i1);

        if $i6 == i1 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Couldn\'t read up to the length of buffer");

        throw $r3;

     label2:
        return;
    }

    public void readFully(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.DataInputStream $r2;
        java.io.IOException $r3;
        java.io.EOFException $r4;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        $i1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i2;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i4 <= $i3 goto label1;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i5 = lengthof r1;

        $i6 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r1, 0, $i5);

        $i7 = lengthof r1;

        if $i6 == $i7 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Couldn\'t read up to the length of buffer");

        throw $r3;

     label2:
        return;
    }

    public byte readByte() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4;
        java.io.DataInputStream $r1;
        byte $b5;
        java.io.EOFException $r2, $r3;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i2 = $i1 + 1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i2;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i4 <= $i3 goto label1;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        if i0 >= 0 goto label2;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label2:
        $b5 = (byte) i0;

        return $b5;
    }

    public short readShort() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11;
        java.io.DataInputStream $r1, $r2;
        java.nio.ByteOrder $r3, $r4, $r5, $r6, $r10;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r12;
        short $s9, $s12;
        java.io.EOFException $r13, $r14;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + 2;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $i5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i5 <= $i4 goto label1;

        $r14 = new java.io.EOFException;

        specialinvoke $r14.<java.io.EOFException: void <init>()>();

        throw $r14;

     label1:
        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $i6 = i0 | i1;

        if $i6 >= 0 goto label2;

        $r13 = new java.io.EOFException;

        specialinvoke $r13.<java.io.EOFException: void <init>()>();

        throw $r13;

     label2:
        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r4 != $r3 goto label3;

        $i10 = i1 << 8;

        $i11 = $i10 + i0;

        $s12 = (short) $i11;

        return $s12;

     label3:
        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r5 goto label4;

        $i7 = i0 << 8;

        $i8 = $i7 + i1;

        $s9 = (short) $i8;

        return $s9;

     label4:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r10 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public int readInt() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.io.DataInputStream $r1, $r2, $r3, $r4;
        java.nio.ByteOrder $r5, $r6, $r7, $r8, $r12;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r14;
        java.io.EOFException $r15, $r16;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i5 = $i4 + 4;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i5;

        $i7 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i6 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i7 <= $i6 goto label1;

        $r16 = new java.io.EOFException;

        specialinvoke $r16.<java.io.EOFException: void <init>()>();

        throw $r16;

     label1:
        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r3.<java.io.DataInputStream: int read()>();

        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i3 = virtualinvoke $r4.<java.io.DataInputStream: int read()>();

        $i8 = i0 | i1;

        $i9 = $i8 | i2;

        $i10 = $i9 | i3;

        if $i10 >= 0 goto label2;

        $r15 = new java.io.EOFException;

        specialinvoke $r15.<java.io.EOFException: void <init>()>();

        throw $r15;

     label2:
        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r6 != $r5 goto label3;

        $i18 = i3 << 24;

        $i17 = i2 << 16;

        $i20 = $i18 + $i17;

        $i19 = i1 << 8;

        $i21 = $i20 + $i19;

        $i22 = $i21 + i0;

        return $i22;

     label3:
        $r8 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r7 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r8 != $r7 goto label4;

        $i12 = i0 << 24;

        $i11 = i1 << 16;

        $i14 = $i12 + $i11;

        $i13 = i2 << 8;

        $i15 = $i14 + $i13;

        $i16 = $i15 + i3;

        return $i16;

     label4:
        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r12 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;
    }

    public int skipBytes(int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.io.DataInputStream $r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter0: int;

        $i3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        $i2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = $i3 - $i2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i4);

        i9 = 0;

     label1:
        if i9 >= i1 goto label2;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i7 = i1 - i9;

        $i8 = virtualinvoke $r1.<java.io.DataInputStream: int skipBytes(int)>($i7);

        i9 = i9 + $i8;

        goto label1;

     label2:
        $i5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i6 = $i5 + i9;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i6;

        return i9;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.io.DataInputStream $r1, $r2;
        java.nio.ByteOrder $r3, $r4, $r5, $r6, $r10;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r12;
        java.io.EOFException $r13, $r14;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + 2;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $i5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i5 <= $i4 goto label1;

        $r14 = new java.io.EOFException;

        specialinvoke $r14.<java.io.EOFException: void <init>()>();

        throw $r14;

     label1:
        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $i6 = i0 | i1;

        if $i6 >= 0 goto label2;

        $r13 = new java.io.EOFException;

        specialinvoke $r13.<java.io.EOFException: void <init>()>();

        throw $r13;

     label2:
        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r4 != $r3 goto label3;

        $i9 = i1 << 8;

        $i10 = $i9 + i0;

        return $i10;

     label3:
        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r5 goto label4;

        $i7 = i0 << 8;

        $i8 = $i7 + i1;

        return $i8;

     label4:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r10 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public long readUnsignedInt() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public long readLong() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.io.DataInputStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.nio.ByteOrder $r9, $r10, $r11, $r12, $r16;
        java.io.IOException $r13;
        java.lang.StringBuilder $r14, $r15, $r17;
        java.lang.String $r18;
        long $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, $l61, $l62;
        java.io.EOFException $r19, $r20;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i8 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i9 = $i8 + 8;

        r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i9;

        $i11 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i10 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int mLength>;

        if $i11 <= $i10 goto label1;

        $r20 = new java.io.EOFException;

        specialinvoke $r20.<java.io.EOFException: void <init>()>();

        throw $r20;

     label1:
        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r3 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r3.<java.io.DataInputStream: int read()>();

        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i3 = virtualinvoke $r4.<java.io.DataInputStream: int read()>();

        $r5 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i4 = virtualinvoke $r5.<java.io.DataInputStream: int read()>();

        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i5 = virtualinvoke $r6.<java.io.DataInputStream: int read()>();

        $r7 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i6 = virtualinvoke $r7.<java.io.DataInputStream: int read()>();

        $r8 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i7 = virtualinvoke $r8.<java.io.DataInputStream: int read()>();

        $i12 = i0 | i1;

        $i13 = $i12 | i2;

        $i14 = $i13 | i3;

        $i15 = $i14 | i4;

        $i16 = $i15 | i5;

        $i17 = $i16 | i6;

        $i18 = $i17 | i7;

        if $i18 >= 0 goto label2;

        $r19 = new java.io.EOFException;

        specialinvoke $r19.<java.io.EOFException: void <init>()>();

        throw $r19;

     label2:
        $r10 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r9 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r10 != $r9 goto label3;

        $l41 = (long) i7;

        $l44 = $l41 << 56;

        $l42 = (long) i6;

        $l43 = $l42 << 48;

        $l47 = $l44 + $l43;

        $l45 = (long) i5;

        $l46 = $l45 << 40;

        $l50 = $l47 + $l46;

        $l48 = (long) i4;

        $l49 = $l48 << 32;

        $l53 = $l50 + $l49;

        $l51 = (long) i3;

        $l52 = $l51 << 24;

        $l56 = $l53 + $l52;

        $l54 = (long) i2;

        $l55 = $l54 << 16;

        $l59 = $l56 + $l55;

        $l57 = (long) i1;

        $l58 = $l57 << 8;

        $l61 = $l59 + $l58;

        $l60 = (long) i0;

        $l62 = $l61 + $l60;

        return $l62;

     label3:
        $r12 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r12 != $r11 goto label4;

        $l19 = (long) i0;

        $l22 = $l19 << 56;

        $l20 = (long) i1;

        $l21 = $l20 << 48;

        $l25 = $l22 + $l21;

        $l23 = (long) i2;

        $l24 = $l23 << 40;

        $l28 = $l25 + $l24;

        $l26 = (long) i3;

        $l27 = $l26 << 32;

        $l31 = $l28 + $l27;

        $l29 = (long) i4;

        $l30 = $l29 << 24;

        $l34 = $l31 + $l30;

        $l32 = (long) i5;

        $l33 = $l32 << 16;

        $l37 = $l34 + $l33;

        $l35 = (long) i6;

        $l36 = $l35 << 8;

        $l39 = $l37 + $l36;

        $l38 = (long) i7;

        $l40 = $l39 + $l38;

        return $l40;

     label4:
        $r13 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r16 = r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r13;
    }

    public float readFloat() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;
        float $f0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public double readDouble() throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataInputStream r0;
        long $l0;
        double $d0;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $l0 = virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    static void <clinit>()
    {
        java.nio.ByteOrder $r0, $r1;

        $r0 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN> = $r0;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        <android.support.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN> = $r1;

        return;
    }

android.support.media.ExifInterface$ByteOrderedDataOutputStream
<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>
<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>
    public void <init>(java.io.OutputStream, java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        java.io.OutputStream r1;
        java.nio.ByteOrder r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.nio.ByteOrder;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream> = r1;

        r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder> = r2;

        return;
    }

    public void setByteOrder(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        java.nio.ByteOrder r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: java.nio.ByteOrder;

        r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder> = r1;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        byte[] r1;
        java.io.OutputStream $r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeByte(int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void writeShort(short) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        short s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        java.nio.ByteOrder $r1, $r2, $r3, $r4;
        java.io.OutputStream $r5, $r6, $r7, $r8;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        s0 := @parameter0: short;

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r2 != $r1 goto label1;

        $r7 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s5 = s0 >>> 0;

        $s6 = $s5 & 255;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>($s6);

        $r8 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s7 = s0 >>> 8;

        $s8 = $s7 & 255;

        virtualinvoke $r8.<java.io.OutputStream: void write(int)>($s8);

        goto label2;

     label1:
        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s1 = s0 >>> 8;

        $s2 = $s1 & 255;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($s2);

        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s3 = s0 >>> 0;

        $s4 = $s3 & 255;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($s4);

     label2:
        return;
    }

    public void writeInt(int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.nio.ByteOrder $r1, $r2, $r3, $r4;
        java.io.OutputStream $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r2 != $r1 goto label1;

        $r9 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i9 = i0 >>> 0;

        $i10 = $i9 & 255;

        virtualinvoke $r9.<java.io.OutputStream: void write(int)>($i10);

        $r10 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i11 = i0 >>> 8;

        $i12 = $i11 & 255;

        virtualinvoke $r10.<java.io.OutputStream: void write(int)>($i12);

        $r11 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i13 = i0 >>> 16;

        $i14 = $i13 & 255;

        virtualinvoke $r11.<java.io.OutputStream: void write(int)>($i14);

        $r12 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i15 = i0 >>> 24;

        $i16 = $i15 & 255;

        virtualinvoke $r12.<java.io.OutputStream: void write(int)>($i16);

        goto label2;

     label1:
        $r4 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i1 = i0 >>> 24;

        $i2 = $i1 & 255;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($i2);

        $r6 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i3 = i0 >>> 16;

        $i4 = $i3 & 255;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i4);

        $r7 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i5 = i0 >>> 8;

        $i6 = $i5 & 255;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>($i6);

        $r8 = r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i7 = i0 >>> 0;

        $i8 = $i7 & 255;

        virtualinvoke $r8.<java.io.OutputStream: void write(int)>($i8);

     label2:
        return;
    }

    public void writeUnsignedShort(int) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0;
        short $s1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $s1 = (short) i0;

        virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)>($s1);

        return;
    }

    public void writeUnsignedInt(long) throws java.io.IOException
    {
        android.support.media.ExifInterface$ByteOrderedDataOutputStream r0;
        long l0;
        int $i1;

        r0 := @this: android.support.media.ExifInterface$ByteOrderedDataOutputStream;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        virtualinvoke r0.<android.support.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i1);

        return;
    }

android.support.media.ExifInterface$ExifAttribute
<android.support.media.ExifInterface$ExifAttribute: int format>
<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>
<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>
    void <init>(int, int, byte[])
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media.ExifInterface$ExifAttribute: int format> = i0;

        r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents> = i1;

        r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes> = r1;

        return;
    }

    public static android.support.media.ExifInterface$ExifAttribute createUShort(int[], java.nio.ByteOrder)
    {
        int[] r0, r3, $r4;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5, i7;
        byte[] $r5, $r8;
        android.support.media.ExifInterface$ExifAttribute $r7;
        short $s6;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[3];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        i1 = r3[i7];

        $s6 = (short) i1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = new android.support.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(3, $i5, $r8);

        return $r7;
    }

    public static android.support.media.ExifInterface$ExifAttribute createUShort(int, java.nio.ByteOrder)
    {
        int i0;
        java.nio.ByteOrder r0;
        int[] $r1;
        android.support.media.ExifInterface$ExifAttribute $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        $r2 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static android.support.media.ExifInterface$ExifAttribute createULong(long[], java.nio.ByteOrder)
    {
        long[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i2, $i3, $i4, $i5, $i6, i7;
        long l1;
        int[] $r4;
        byte[] $r5, $r8;
        android.support.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: long[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[4];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        l1 = r3[i7];

        $i6 = (int) l1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = new android.support.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(4, $i5, $r8);

        return $r7;
    }

    public static android.support.media.ExifInterface$ExifAttribute createULong(long, java.nio.ByteOrder)
    {
        long l0;
        java.nio.ByteOrder r0;
        long[] $r1;
        android.support.media.ExifInterface$ExifAttribute $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (long)[1];

        $r1[0] = l0;

        $r2 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static android.support.media.ExifInterface$ExifAttribute createSLong(int[], java.nio.ByteOrder)
    {
        int[] r0, r3, $r4;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        byte[] $r5, $r8;
        android.support.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[9];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        i1 = r3[i6];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r7 = new android.support.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(9, $i5, $r8);

        return $r7;
    }

    public static android.support.media.ExifInterface$ExifAttribute createSLong(int, java.nio.ByteOrder)
    {
        int i0;
        java.nio.ByteOrder r0;
        int[] $r1;
        android.support.media.ExifInterface$ExifAttribute $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        $r2 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static android.support.media.ExifInterface$ExifAttribute createByte(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i4, $i6, $i7;
        char $c1, $c2, $c3;
        byte[] $r1, r3, r5;
        byte $b5;
        android.support.media.ExifInterface$ExifAttribute $r2, $r6;
        java.nio.charset.Charset $r4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 < 48 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c2 > 49 goto label1;

        $r1 = newarray (byte)[1];

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = $c3 - 48;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        r3 = $r1;

        $r2 = new android.support.media.ExifInterface$ExifAttribute;

        $i6 = lengthof r3;

        specialinvoke $r2.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(1, $i6, r3);

        return $r2;

     label1:
        $r4 = <android.support.media.ExifInterface: java.nio.charset.Charset ASCII>;

        r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r6 = new android.support.media.ExifInterface$ExifAttribute;

        $i7 = lengthof r5;

        specialinvoke $r6.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(1, $i7, r5);

        return $r6;
    }

    public static android.support.media.ExifInterface$ExifAttribute createString(java.lang.String)
    {
        java.lang.String r0, $r5;
        byte[] r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.nio.charset.Charset $r6;
        android.support.media.ExifInterface$ExifAttribute $r7;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <android.support.media.ExifInterface: java.nio.charset.Charset ASCII>;

        r1 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        $r7 = new android.support.media.ExifInterface$ExifAttribute;

        $i0 = lengthof r1;

        specialinvoke $r7.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(2, $i0, r1);

        return $r7;
    }

    public static android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational[], java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$Rational[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, i9;
        android.support.media.ExifInterface$Rational r4;
        int[] $r5;
        byte[] $r6, $r9;
        android.support.media.ExifInterface$ExifAttribute $r8;
        long $l5, $l7;

        r0 := @parameter0: android.support.media.ExifInterface$Rational[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r5 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r5[5];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r6 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        r4 = r3[i9];

        $l5 = r4.<android.support.media.ExifInterface$Rational: long numerator>;

        $i6 = (int) $l5;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $l7 = r4.<android.support.media.ExifInterface$Rational: long denominator>;

        $i8 = (int) $l7;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r8 = new android.support.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r9 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r8.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(5, $i4, $r9);

        return $r8;
    }

    public static android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational, java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$Rational r0;
        java.nio.ByteOrder r1;
        android.support.media.ExifInterface$Rational[] $r2;
        android.support.media.ExifInterface$ExifAttribute $r3;

        r0 := @parameter0: android.support.media.ExifInterface$Rational;

        r1 := @parameter1: java.nio.ByteOrder;

        $r2 = newarray (android.support.media.ExifInterface$Rational)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational[],java.nio.ByteOrder)>($r2, r1);

        return $r3;
    }

    public static android.support.media.ExifInterface$ExifAttribute createSRational(android.support.media.ExifInterface$Rational[], java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$Rational[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, i9;
        android.support.media.ExifInterface$Rational r4;
        int[] $r5;
        byte[] $r6, $r9;
        android.support.media.ExifInterface$ExifAttribute $r8;
        long $l5, $l7;

        r0 := @parameter0: android.support.media.ExifInterface$Rational[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r5 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r5[10];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r6 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        r4 = r3[i9];

        $l5 = r4.<android.support.media.ExifInterface$Rational: long numerator>;

        $i6 = (int) $l5;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $l7 = r4.<android.support.media.ExifInterface$Rational: long denominator>;

        $i8 = (int) $l7;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r8 = new android.support.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r9 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r8.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(10, $i4, $r9);

        return $r8;
    }

    public static android.support.media.ExifInterface$ExifAttribute createSRational(android.support.media.ExifInterface$Rational, java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$Rational r0;
        java.nio.ByteOrder r1;
        android.support.media.ExifInterface$Rational[] $r2;
        android.support.media.ExifInterface$ExifAttribute $r3;

        r0 := @parameter0: android.support.media.ExifInterface$Rational;

        r1 := @parameter1: java.nio.ByteOrder;

        $r2 = newarray (android.support.media.ExifInterface$Rational)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createSRational(android.support.media.ExifInterface$Rational[],java.nio.ByteOrder)>($r2, r1);

        return $r3;
    }

    public static android.support.media.ExifInterface$ExifAttribute createDouble(double[], java.nio.ByteOrder)
    {
        double[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        double d0;
        int[] $r4;
        byte[] $r5, $r8;
        android.support.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: double[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r4[12];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r5 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        d0 = r3[i5];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>(d0);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r7 = new android.support.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<android.support.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(12, $i4, $r8);

        return $r7;
    }

    public static android.support.media.ExifInterface$ExifAttribute createDouble(double, java.nio.ByteOrder)
    {
        double d0;
        java.nio.ByteOrder r0;
        double[] $r1;
        android.support.media.ExifInterface$ExifAttribute $r2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (double)[1];

        $r1[0] = d0;

        $r2 = staticinvoke <android.support.media.ExifInterface$ExifAttribute: android.support.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.String $r4, $r10;
        byte[] $r7;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = <android.support.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i0 = r0.<android.support.media.ExifInterface$ExifAttribute: int format>;

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data length:");

        $r7 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i1 = lengthof $r7;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    java.lang.Object getValue(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Throwable r2, r3, r4, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, r39, r44, r50, r53, r56, r59, r62, r65, r68, r71, r72, r73, r74;
        android.support.media.ExifInterface$ByteOrderedDataInputStream $r5, r37;
        byte[] $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i26, $i29, $i33, i35, i36, $i37, i39, i40, i41, i44, i45, i46, i49, i50;
        double $d0, $d1;
        float $f0;
        android.support.media.ExifInterface$Rational $r7, $r8;
        short $s14;
        long $l19, l42, l43, l47, l48;
        char $c25, $c34;
        byte $b27, $b28, $b30, $b31, $b32, b38;
        java.lang.String $r18, r38, $r40, r43, r47;
        char[] $r19;
        java.nio.charset.Charset $r42;
        boolean z0;
        java.lang.StringBuilder $r45, r46;
        int[] r48, r49, r57, r58, r60, r61;
        long[] r51, r52;
        android.support.media.ExifInterface$Rational[] r54, r55, r63, r64;
        double[] r66, r67, r69, r70;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r37 = null;

     label001:
        $r5 = new android.support.media.ExifInterface$ByteOrderedDataInputStream;

        $r6 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r5.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r6);

        r37 = $r5;

        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>(r1);

        $i0 = r0.<android.support.media.ExifInterface$ExifAttribute: int format>;

        tableswitch($i0)
        {
            case 1: goto label002;
            case 2: goto label014;
            case 3: goto label029;
            case 4: goto label037;
            case 5: goto label045;
            case 6: goto label002;
            case 7: goto label014;
            case 8: goto label053;
            case 9: goto label061;
            case 10: goto label069;
            case 11: goto label077;
            case 12: goto label085;
            default: goto label093;
        };

     label002:
        $r15 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i29 = lengthof $r15;

        if $i29 != 1 goto label008;

        $r16 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b30 = $r16[0];

        if $b30 < 0 goto label008;

        $r17 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b31 = $r17[0];

        if $b31 > 1 goto label008;

        $r18 = new java.lang.String;

        $r19 = newarray (char)[1];

        $r20 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b32 = $r20[0];

        $i33 = $b32 + 48;

        $c34 = (char) $i33;

        $r19[0] = $c34;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        r38 = $r18;

     label003:
        if r37 == null goto label007;

     label004:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label005:
        goto label007;

     label006:
        $r31 := @caughtexception;

        r39 = $r31;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r39);

     label007:
        return r38;

     label008:
        $r40 = new java.lang.String;

        $r41 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $r42 = <android.support.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r40.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r41, $r42);

        r43 = $r40;

     label009:
        if r37 == null goto label013;

     label010:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label011:
        goto label013;

     label012:
        $r21 := @caughtexception;

        r44 = $r21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r44);

     label013:
        return r43;

     label014:
        i35 = 0;

        $i24 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        $r9 = <android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $i23 = lengthof $r9;

        if $i24 < $i23 goto label018;

        z0 = 1;

        i36 = 0;

     label015:
        $r11 = <android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $i26 = lengthof $r11;

        if i36 >= $i26 goto label017;

        $r13 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b28 = $r13[i36];

        $r14 = <android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $b27 = $r14[i36];

        if $b28 == $b27 goto label016;

        z0 = 0;

        goto label017;

     label016:
        i36 = i36 + 1;

        goto label015;

     label017:
        if z0 == 0 goto label018;

        $r12 = <android.support.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        i35 = lengthof $r12;

     label018:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        r46 = $r45;

     label019:
        $i37 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i35 >= $i37 goto label023;

        $r10 = r0.<android.support.media.ExifInterface$ExifAttribute: byte[] bytes>;

        b38 = $r10[i35];

        if b38 != 0 goto label020;

        goto label023;

     label020:
        if b38 < 32 goto label021;

        $c25 = (char) b38;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c25);

        goto label022;

     label021:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label022:
        i35 = i35 + 1;

        goto label019;

     label023:
        r47 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

     label024:
        if r37 == null goto label028;

     label025:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label026:
        goto label028;

     label027:
        $r26 := @caughtexception;

        r2 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r2);

     label028:
        return r47;

     label029:
        $i20 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r48 = newarray (int)[$i20];

        i39 = 0;

     label030:
        $i21 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i39 >= $i21 goto label031;

        $i22 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        r48[i39] = $i22;

        i39 = i39 + 1;

        goto label030;

     label031:
        r49 = r48;

     label032:
        if r37 == null goto label036;

     label033:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label034:
        goto label036;

     label035:
        $r35 := @caughtexception;

        r50 = $r35;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r50);

     label036:
        return r49;

     label037:
        $i17 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r51 = newarray (long)[$i17];

        i40 = 0;

     label038:
        $i18 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i40 >= $i18 goto label039;

        $l19 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        r51[i40] = $l19;

        i40 = i40 + 1;

        goto label038;

     label039:
        r52 = r51;

     label040:
        if r37 == null goto label044;

     label041:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label042:
        goto label044;

     label043:
        $r36 := @caughtexception;

        r53 = $r36;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r53);

     label044:
        return r52;

     label045:
        $i15 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r54 = newarray (android.support.media.ExifInterface$Rational)[$i15];

        i41 = 0;

     label046:
        $i16 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i41 >= $i16 goto label047;

        l42 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        l43 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        $r8 = new android.support.media.ExifInterface$Rational;

        specialinvoke $r8.<android.support.media.ExifInterface$Rational: void <init>(long,long)>(l42, l43);

        r54[i41] = $r8;

        i41 = i41 + 1;

        goto label046;

     label047:
        r55 = r54;

     label048:
        if r37 == null goto label052;

     label049:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label050:
        goto label052;

     label051:
        $r25 := @caughtexception;

        r56 = $r25;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r56);

     label052:
        return r55;

     label053:
        $i12 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r57 = newarray (int)[$i12];

        i44 = 0;

     label054:
        $i13 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i44 >= $i13 goto label055;

        $s14 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        r57[i44] = $s14;

        i44 = i44 + 1;

        goto label054;

     label055:
        r58 = r57;

     label056:
        if r37 == null goto label060;

     label057:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label058:
        goto label060;

     label059:
        $r23 := @caughtexception;

        r59 = $r23;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r59);

     label060:
        return r58;

     label061:
        $i9 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r60 = newarray (int)[$i9];

        i45 = 0;

     label062:
        $i10 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i45 >= $i10 goto label063;

        $i11 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        r60[i45] = $i11;

        i45 = i45 + 1;

        goto label062;

     label063:
        r61 = r60;

     label064:
        if r37 == null goto label068;

     label065:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label066:
        goto label068;

     label067:
        $r28 := @caughtexception;

        r62 = $r28;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r62);

     label068:
        return r61;

     label069:
        $i5 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r63 = newarray (android.support.media.ExifInterface$Rational)[$i5];

        i46 = 0;

     label070:
        $i6 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i46 >= $i6 goto label071;

        $i7 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l47 = (long) $i7;

        $i8 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l48 = (long) $i8;

        $r7 = new android.support.media.ExifInterface$Rational;

        specialinvoke $r7.<android.support.media.ExifInterface$Rational: void <init>(long,long)>(l47, l48);

        r63[i46] = $r7;

        i46 = i46 + 1;

        goto label070;

     label071:
        r64 = r63;

     label072:
        if r37 == null goto label076;

     label073:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label074:
        goto label076;

     label075:
        $r33 := @caughtexception;

        r65 = $r33;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r65);

     label076:
        return r64;

     label077:
        $i3 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r66 = newarray (double)[$i3];

        i49 = 0;

     label078:
        $i4 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i49 >= $i4 goto label079;

        $f0 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()>();

        $d1 = (double) $f0;

        r66[i49] = $d1;

        i49 = i49 + 1;

        goto label078;

     label079:
        r67 = r66;

     label080:
        if r37 == null goto label084;

     label081:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label082:
        goto label084;

     label083:
        $r24 := @caughtexception;

        r68 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r68);

     label084:
        return r67;

     label085:
        $i1 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r69 = newarray (double)[$i1];

        i50 = 0;

     label086:
        $i2 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i50 >= $i2 goto label087;

        $d0 = virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()>();

        r69[i50] = $d0;

        i50 = i50 + 1;

        goto label086;

     label087:
        r70 = r69;

     label088:
        if r37 == null goto label092;

     label089:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label090:
        goto label092;

     label091:
        $r30 := @caughtexception;

        r71 = $r30;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r71);

     label092:
        return r70;

     label093:
        if r37 == null goto label097;

     label094:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label095:
        goto label097;

     label096:
        $r32 := @caughtexception;

        r72 = $r32;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r72);

     label097:
        return null;

     label098:
        $r27 := @caughtexception;

        r73 = $r27;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred during reading a value", r73);

     label099:
        if r37 == null goto label103;

     label100:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label101:
        goto label103;

     label102:
        $r29 := @caughtexception;

        r74 = $r29;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r74);

     label103:
        return null;

     label104:
        $r34 := @caughtexception;

        r3 = $r34;

     label105:
        if r37 == null goto label109;

     label106:
        virtualinvoke r37.<android.support.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label107:
        goto label109;

     label108:
        $r22 := @caughtexception;

        r4 = $r22;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r4);

     label109:
        throw r3;

        catch java.io.IOException from label004 to label005 with label006;
        catch java.io.IOException from label010 to label011 with label012;
        catch java.io.IOException from label025 to label026 with label027;
        catch java.io.IOException from label033 to label034 with label035;
        catch java.io.IOException from label041 to label042 with label043;
        catch java.io.IOException from label049 to label050 with label051;
        catch java.io.IOException from label057 to label058 with label059;
        catch java.io.IOException from label065 to label066 with label067;
        catch java.io.IOException from label073 to label074 with label075;
        catch java.io.IOException from label081 to label082 with label083;
        catch java.io.IOException from label089 to label090 with label091;
        catch java.io.IOException from label094 to label095 with label096;
        catch java.io.IOException from label001 to label003 with label098;
        catch java.io.IOException from label008 to label009 with label098;
        catch java.io.IOException from label014 to label024 with label098;
        catch java.io.IOException from label029 to label032 with label098;
        catch java.io.IOException from label037 to label040 with label098;
        catch java.io.IOException from label045 to label048 with label098;
        catch java.io.IOException from label053 to label056 with label098;
        catch java.io.IOException from label061 to label064 with label098;
        catch java.io.IOException from label069 to label072 with label098;
        catch java.io.IOException from label077 to label080 with label098;
        catch java.io.IOException from label085 to label088 with label098;
        catch java.io.IOException from label100 to label101 with label102;
        catch java.lang.Throwable from label001 to label003 with label104;
        catch java.lang.Throwable from label008 to label009 with label104;
        catch java.lang.Throwable from label014 to label024 with label104;
        catch java.lang.Throwable from label029 to label032 with label104;
        catch java.lang.Throwable from label037 to label040 with label104;
        catch java.lang.Throwable from label045 to label048 with label104;
        catch java.lang.Throwable from label053 to label056 with label104;
        catch java.lang.Throwable from label061 to label064 with label104;
        catch java.lang.Throwable from label069 to label072 with label104;
        catch java.lang.Throwable from label077 to label080 with label104;
        catch java.lang.Throwable from label085 to label088 with label104;
        catch java.lang.Throwable from label098 to label099 with label104;
        catch java.io.IOException from label106 to label107 with label108;
        catch java.lang.Throwable from label104 to label105 with label104;
    }

    public double getDoubleValue(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.NumberFormatException $r3, $r5, $r8, $r10, $r12, $r14;
        android.support.media.ExifInterface$Rational[] $r4, r18;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.media.ExifInterface$Rational $r6;
        double $d0, $d1, $d2, $d3, $d4;
        double[] $r7, r17;
        int[] $r9, r16;
        long[] $r11, r15;
        long $l5;
        java.lang.String $r13;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label01;

        $r14 = new java.lang.NumberFormatException;

        specialinvoke $r14.<java.lang.NumberFormatException: void <init>(java.lang.String)>("NULL can\'t be converted to a double value");

        throw $r14;

     label01:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r13 = (java.lang.String) r2;

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        return $d4;

     label02:
        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label04;

        $r11 = (long[]) r2;

        r15 = (long[]) $r11;

        $i4 = lengthof r15;

        if $i4 != 1 goto label03;

        $l5 = r15[0];

        $d3 = (double) $l5;

        return $d3;

     label03:
        $r12 = new java.lang.NumberFormatException;

        specialinvoke $r12.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r12;

     label04:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label06;

        $r9 = (int[]) r2;

        r16 = (int[]) $r9;

        $i2 = lengthof r16;

        if $i2 != 1 goto label05;

        $i3 = r16[0];

        $d2 = (double) $i3;

        return $d2;

     label05:
        $r10 = new java.lang.NumberFormatException;

        specialinvoke $r10.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r10;

     label06:
        $z3 = r2 instanceof double[];

        if $z3 == 0 goto label08;

        $r7 = (double[]) r2;

        r17 = (double[]) $r7;

        $i1 = lengthof r17;

        if $i1 != 1 goto label07;

        $d1 = r17[0];

        return $d1;

     label07:
        $r8 = new java.lang.NumberFormatException;

        specialinvoke $r8.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r8;

     label08:
        $z4 = r2 instanceof android.support.media.ExifInterface$Rational[];

        if $z4 == 0 goto label10;

        $r4 = (android.support.media.ExifInterface$Rational[]) r2;

        r18 = (android.support.media.ExifInterface$Rational[]) $r4;

        $i0 = lengthof r18;

        if $i0 != 1 goto label09;

        $r6 = r18[0];

        $d0 = virtualinvoke $r6.<android.support.media.ExifInterface$Rational: double calculate()>();

        return $d0;

     label09:
        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r5;

     label10:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Couldn\'t find a double value");

        throw $r3;
    }

    public int getIntValue(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r3, $r5, $r7, $r9;
        int[] $r4, r11;
        int $i0, $i1, $i2, $i4, $i5;
        long[] $r6, r10;
        long $l3;
        java.lang.String $r8;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label1;

        $r9 = new java.lang.NumberFormatException;

        specialinvoke $r9.<java.lang.NumberFormatException: void <init>(java.lang.String)>("NULL can\'t be converted to a integer value");

        throw $r9;

     label1:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.String) r2;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        return $i5;

     label2:
        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label4;

        $r6 = (long[]) r2;

        r10 = (long[]) $r6;

        $i2 = lengthof r10;

        if $i2 != 1 goto label3;

        $l3 = r10[0];

        $i4 = (int) $l3;

        return $i4;

     label3:
        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r7;

     label4:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label6;

        $r4 = (int[]) r2;

        r11 = (int[]) $r4;

        $i0 = lengthof r11;

        if $i0 != 1 goto label5;

        $i1 = r11[0];

        return $i1;

     label5:
        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r5;

     label6:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Couldn\'t find a integer value");

        throw $r3;
    }

    public java.lang.String getStringValue(java.nio.ByteOrder)
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        java.lang.StringBuilder r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.support.media.ExifInterface$Rational[] $r5, r29;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, i16, i17, i18, i19;
        java.lang.String $r6, $r14, $r18, $r22, $r25;
        android.support.media.ExifInterface$Rational $r7, $r10;
        long $l1, $l2, $l13;
        double[] $r13, r28;
        double $d0;
        int[] $r17, r27;
        long[] $r21, r26;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<android.support.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label01;

        return null;

     label01:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r25 = (java.lang.String) r2;

        return $r25;

     label02:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label06;

        $r21 = (long[]) r2;

        r26 = (long[]) $r21;

        i16 = 0;

     label03:
        $i12 = lengthof r26;

        if i16 >= $i12 goto label05;

        $l13 = r26[i16];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $i15 = i16 + 1;

        $i14 = lengthof r26;

        if $i15 == $i14 goto label04;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label04:
        i16 = i16 + 1;

        goto label03;

     label05:
        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label06:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label10;

        $r17 = (int[]) r2;

        r27 = (int[]) $r17;

        i17 = 0;

     label07:
        $i8 = lengthof r27;

        if i17 >= $i8 goto label09;

        $i9 = r27[i17];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $i11 = i17 + 1;

        $i10 = lengthof r27;

        if $i11 == $i10 goto label08;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label08:
        i17 = i17 + 1;

        goto label07;

     label09:
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label10:
        $z3 = r2 instanceof double[];

        if $z3 == 0 goto label14;

        $r13 = (double[]) r2;

        r28 = (double[]) $r13;

        i18 = 0;

     label11:
        $i5 = lengthof r28;

        if i18 >= $i5 goto label13;

        $d0 = r28[i18];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $i7 = i18 + 1;

        $i6 = lengthof r28;

        if $i7 == $i6 goto label12;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label12:
        i18 = i18 + 1;

        goto label11;

     label13:
        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label14:
        $z4 = r2 instanceof android.support.media.ExifInterface$Rational[];

        if $z4 == 0 goto label18;

        $r5 = (android.support.media.ExifInterface$Rational[]) r2;

        r29 = (android.support.media.ExifInterface$Rational[]) $r5;

        i19 = 0;

     label15:
        $i0 = lengthof r29;

        if i19 >= $i0 goto label17;

        $r7 = r29[i19];

        $l1 = $r7.<android.support.media.ExifInterface$Rational: long numerator>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r10 = r29[i19];

        $l2 = $r10.<android.support.media.ExifInterface$Rational: long denominator>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $i4 = i19 + 1;

        $i3 = lengthof r29;

        if $i4 == $i3 goto label16;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label16:
        i19 = i19 + 1;

        goto label15;

     label17:
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label18:
        return null;
    }

    public int size()
    {
        android.support.media.ExifInterface$ExifAttribute r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.support.media.ExifInterface$ExifAttribute;

        $r1 = <android.support.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i0 = r0.<android.support.media.ExifInterface$ExifAttribute: int format>;

        $i2 = $r1[$i0];

        $i1 = r0.<android.support.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        $i3 = $i2 * $i1;

        return $i3;
    }

android.support.media.ExifInterface$ExifTag
<android.support.media.ExifInterface$ExifTag: int number>
<android.support.media.ExifInterface$ExifTag: java.lang.String name>
<android.support.media.ExifInterface$ExifTag: int primaryFormat>
<android.support.media.ExifInterface$ExifTag: int secondaryFormat>
    void <init>(java.lang.String, int, int)
    {
        android.support.media.ExifInterface$ExifTag r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: android.support.media.ExifInterface$ExifTag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media.ExifInterface$ExifTag: java.lang.String name> = r1;

        r0.<android.support.media.ExifInterface$ExifTag: int number> = i0;

        r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat> = i1;

        r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat> = -1;

        return;
    }

    void <init>(java.lang.String, int, int, int)
    {
        android.support.media.ExifInterface$ExifTag r0;
        java.lang.String r1;
        int i0, i1, i2;

        r0 := @this: android.support.media.ExifInterface$ExifTag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.media.ExifInterface$ExifTag: java.lang.String name> = r1;

        r0.<android.support.media.ExifInterface$ExifTag: int number> = i0;

        r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat> = i1;

        r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat> = i2;

        return;
    }

    boolean isFormatCompatible(int)
    {
        android.support.media.ExifInterface$ExifTag r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.support.media.ExifInterface$ExifTag;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i1 == 7 goto label01;

        if i0 != 7 goto label02;

     label01:
        return 1;

     label02:
        $i2 = r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i2 == i0 goto label03;

        $i3 = r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i3 != i0 goto label04;

     label03:
        return 1;

     label04:
        $i4 = r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i4 == 4 goto label05;

        $i9 = r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i9 != 4 goto label06;

     label05:
        if i0 != 3 goto label06;

        return 1;

     label06:
        $i5 = r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i5 == 9 goto label07;

        $i8 = r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i8 != 9 goto label08;

     label07:
        if i0 != 8 goto label08;

        return 1;

     label08:
        $i6 = r0.<android.support.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i6 == 12 goto label09;

        $i7 = r0.<android.support.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i7 != 12 goto label10;

     label09:
        if i0 != 11 goto label10;

        return 1;

     label10:
        return 0;
    }

android.support.media.ExifInterface$IfdType
android.support.media.ExifInterface$Rational
<android.support.media.ExifInterface$Rational: long numerator>
<android.support.media.ExifInterface$Rational: long denominator>
    void <init>(double)
    {
        android.support.media.ExifInterface$Rational r0;
        double d0, $d1;
        long $l0;

        r0 := @this: android.support.media.ExifInterface$Rational;

        d0 := @parameter0: double;

        $d1 = d0 * 10000.0;

        $l0 = (long) $d1;

        specialinvoke r0.<android.support.media.ExifInterface$Rational: void <init>(long,long)>($l0, 10000L);

        return;
    }

    void <init>(long, long)
    {
        android.support.media.ExifInterface$Rational r0;
        long l0, l1;
        byte $b2;

        r0 := @this: android.support.media.ExifInterface$Rational;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<android.support.media.ExifInterface$Rational: long numerator> = 0L;

        r0.<android.support.media.ExifInterface$Rational: long denominator> = 1L;

        return;

     label1:
        r0.<android.support.media.ExifInterface$Rational: long numerator> = l0;

        r0.<android.support.media.ExifInterface$Rational: long denominator> = l1;

        return;
    }

    public java.lang.String toString()
    {
        android.support.media.ExifInterface$Rational r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        long $l0, $l1;
        java.lang.String $r5;

        r0 := @this: android.support.media.ExifInterface$Rational;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $l0 = r0.<android.support.media.ExifInterface$Rational: long numerator>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $l1 = r0.<android.support.media.ExifInterface$Rational: long denominator>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public double calculate()
    {
        android.support.media.ExifInterface$Rational r0;
        long $l0, $l1;
        double $d0, $d1, $d2;

        r0 := @this: android.support.media.ExifInterface$Rational;

        $l0 = r0.<android.support.media.ExifInterface$Rational: long numerator>;

        $d1 = (double) $l0;

        $l1 = r0.<android.support.media.ExifInterface$Rational: long denominator>;

        $d0 = (double) $l1;

        $d2 = $d1 / $d0;

        return $d2;
    }

