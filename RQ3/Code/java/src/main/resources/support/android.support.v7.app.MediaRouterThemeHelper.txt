android.support.v7.app.MediaRouterThemeHelper
<android.support.v7.app.MediaRouterThemeHelper: float MIN_CONTRAST>
<android.support.v7.app.MediaRouterThemeHelper: int COLOR_DARK_ON_LIGHT_BACKGROUND>
<android.support.v7.app.MediaRouterThemeHelper: int COLOR_WHITE_ON_DARK_BACKGROUND>
<android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sDefaultIcon>
<android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sTvIcon>
<android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerIcon>
<android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerGroupIcon>
    private void <init>()
    {
        android.support.v7.app.MediaRouterThemeHelper r0;

        r0 := @this: android.support.v7.app.MediaRouterThemeHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.drawable.Drawable getDefaultDrawableIcon(android.content.Context)
    {
        android.content.Context r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sDefaultIcon>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDrawableIcon(android.content.Context,int)>(r0, 0);

        <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sDefaultIcon> = $r3;

     label1:
        $r2 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sDefaultIcon>;

        return $r2;
    }

    static android.graphics.drawable.Drawable getTvDrawableIcon(android.content.Context)
    {
        android.content.Context r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sTvIcon>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDrawableIcon(android.content.Context,int)>(r0, 1);

        <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sTvIcon> = $r3;

     label1:
        $r2 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sTvIcon>;

        return $r2;
    }

    static android.graphics.drawable.Drawable getSpeakerDrawableIcon(android.content.Context)
    {
        android.content.Context r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerIcon>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDrawableIcon(android.content.Context,int)>(r0, 2);

        <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerIcon> = $r3;

     label1:
        $r2 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerIcon>;

        return $r2;
    }

    static android.graphics.drawable.Drawable getSpeakerGropuIcon(android.content.Context)
    {
        android.content.Context r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerGroupIcon>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable getDrawableIcon(android.content.Context,int)>(r0, 3);

        <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerGroupIcon> = $r3;

     label1:
        $r2 = <android.support.v7.app.MediaRouterThemeHelper: android.graphics.drawable.Drawable sSpeakerGroupIcon>;

        return $r2;
    }

    private static android.graphics.drawable.Drawable getDrawableIcon(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1, $i2, $i3, $i4;
        android.content.res.TypedArray r1;
        android.graphics.drawable.Drawable r2;
        int[] $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = newarray (int)[4];

        $i1 = <android.support.v7.mediarouter.R$attr: int mediaRouteDefaultIconDrawable>;

        $r3[0] = $i1;

        $i2 = <android.support.v7.mediarouter.R$attr: int mediaRouteTvIconDrawable>;

        $r3[1] = $i2;

        $i3 = <android.support.v7.mediarouter.R$attr: int mediaRouteSpeakerIconDrawable>;

        $r3[2] = $i3;

        $i4 = <android.support.v7.mediarouter.R$attr: int mediaRouteSpeakerGroupIconDrawable>;

        $r3[3] = $i4;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r2;
    }

    static android.content.Context createThemedButtonContext(android.content.Context)
    {
        int i0, $i1, $i2;
        android.view.ContextThemeWrapper $r0, $r1, r3;
        android.content.Context r2;

        r2 := @parameter0: android.content.Context;

        $r0 = new android.view.ContextThemeWrapper;

        $i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getRouterThemeId(android.content.Context)>(r2);

        specialinvoke $r0.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r2, $i1);

        r3 = $r0;

        $i2 = <android.support.v7.mediarouter.R$attr: int mediaRouteTheme>;

        i0 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeResource(android.content.Context,int)>(r3, $i2);

        if i0 == 0 goto label1;

        $r1 = new android.view.ContextThemeWrapper;

        specialinvoke $r1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r3, i0);

        r3 = $r1;

     label1:
        return r3;
    }

    static android.content.Context createThemedDialogContext(android.content.Context, int, boolean)
    {
        boolean z0;
        android.view.ContextThemeWrapper $r0, $r3, r4;
        int $i0, i1, $i2, $i3, $i4;
        android.content.Context r2;

        r2 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i1 != 0 goto label3;

        if z0 != 0 goto label1;

        $i2 = <android.support.v7.appcompat.R$attr: int dialogTheme>;

        goto label2;

     label1:
        $i2 = <android.support.v7.appcompat.R$attr: int alertDialogTheme>;

     label2:
        i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeResource(android.content.Context,int)>(r2, $i2);

     label3:
        $r3 = new android.view.ContextThemeWrapper;

        specialinvoke $r3.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r2, i1);

        r4 = $r3;

        $i3 = <android.support.v7.mediarouter.R$attr: int mediaRouteTheme>;

        $i4 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeResource(android.content.Context,int)>(r4, $i3);

        if $i4 == 0 goto label4;

        $r0 = new android.view.ContextThemeWrapper;

        $i0 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getRouterThemeId(android.content.Context)>(r4);

        specialinvoke $r0.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r4, $i0);

        r4 = $r0;

     label4:
        return r4;
    }

    static int createThemedDialogStyle(android.content.Context)
    {
        android.content.Context r0;
        int $i0, i1;

        r0 := @parameter0: android.content.Context;

        $i0 = <android.support.v7.mediarouter.R$attr: int mediaRouteTheme>;

        i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeResource(android.content.Context,int)>(r0, $i0);

        if i1 != 0 goto label1;

        i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getRouterThemeId(android.content.Context)>(r0);

     label1:
        return i1;
    }

    static int getThemeResource(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1;
        android.util.TypedValue r1, $r2;
        android.content.res.Resources$Theme $r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        if $z0 == 0 goto label1;

        $i1 = r1.<android.util.TypedValue: int resourceId>;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    static float getDisabledAlpha(android.content.Context)
    {
        android.content.Context r0;
        android.util.TypedValue r1, $r2;
        android.content.res.Resources$Theme $r3;
        boolean $z0;
        float $f0;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842803, r1, 1);

        if $z0 == 0 goto label1;

        $f0 = virtualinvoke r1.<android.util.TypedValue: float getFloat()>();

        goto label2;

     label1:
        $f0 = 0.5F;

     label2:
        return $f0;
    }

    static int getControllerColor(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        double $d0;
        byte $b3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $i2 = <android.support.v7.appcompat.R$attr: int colorPrimary>;

        i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, i0, $i2);

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>(-1, i1);

        $b3 = $d0 cmpl 3.0;

        if $b3 < 0 goto label1;

        return -1;

     label1:
        return -570425344;
    }

    static int getButtonTextColor(android.content.Context)
    {
        android.content.Context r0;
        int i0, i1, $i2, $i4, $i5;
        double $d0;
        byte $b3;

        r0 := @parameter0: android.content.Context;

        $i2 = <android.support.v7.appcompat.R$attr: int colorPrimary>;

        i0 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, 0, $i2);

        i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, 0, 16842801);

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>(i0, i1);

        $b3 = $d0 cmpg 3.0;

        if $b3 >= 0 goto label1;

        $i4 = <android.support.v7.appcompat.R$attr: int colorAccent>;

        $i5 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, 0, $i4);

        return $i5;

     label1:
        return i0;
    }

    static android.content.res.TypedArray getStyledAttributes(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: android.content.Context;

        $r2 = newarray (int)[4];

        $i0 = <android.support.v7.mediarouter.R$attr: int mediaRouteDefaultIconDrawable>;

        $r2[0] = $i0;

        $i1 = <android.support.v7.mediarouter.R$attr: int mediaRouteTvIconDrawable>;

        $r2[1] = $i1;

        $i2 = <android.support.v7.mediarouter.R$attr: int mediaRouteSpeakerIconDrawable>;

        $r2[2] = $i2;

        $i3 = <android.support.v7.mediarouter.R$attr: int mediaRouteSpeakerGroupIconDrawable>;

        $r2[3] = $i3;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        return r1;
    }

    static void setMediaControlsBackgroundColor(android.content.Context, android.view.View, android.view.View, boolean)
    {
        android.content.Context r0;
        android.view.View r1, r2;
        boolean z0;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Integer $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        $i0 = <android.support.v7.appcompat.R$attr: int colorPrimary>;

        i3 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, 0, $i0);

        $i1 = <android.support.v7.appcompat.R$attr: int colorPrimaryDark>;

        i4 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getThemeColor(android.content.Context,int,int)>(r0, 0, $i1);

        if z0 == 0 goto label1;

        $i2 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getControllerColor(android.content.Context,int)>(r0, 0);

        if $i2 != -570425344 goto label1;

        i4 = i3;

        i3 = -1;

     label1:
        virtualinvoke r1.<android.view.View: void setBackgroundColor(int)>(i3);

        virtualinvoke r2.<android.view.View: void setBackgroundColor(int)>(i4);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>($r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r2.<android.view.View: void setTag(java.lang.Object)>($r4);

        return;
    }

    static void setVolumeSliderColor(android.content.Context, android.support.v7.app.MediaRouteVolumeSlider, android.view.View)
    {
        android.content.Context r0;
        android.support.v7.app.MediaRouteVolumeSlider r1;
        android.view.View r2;
        int i0, $i1, i2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v7.app.MediaRouteVolumeSlider;

        r2 := @parameter2: android.view.View;

        i2 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getControllerColor(android.content.Context,int)>(r0, 0);

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i2);

        if $i1 == 255 goto label1;

        $r3 = virtualinvoke r2.<android.view.View: java.lang.Object getTag()>();

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        i2 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>(i2, i0);

     label1:
        virtualinvoke r1.<android.support.v7.app.MediaRouteVolumeSlider: void setColor(int)>(i2);

        return;
    }

    private static boolean isLightTheme(android.content.Context)
    {
        android.content.Context r0;
        android.util.TypedValue r1, $r2;
        android.content.res.Resources$Theme $r3;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <android.support.v7.appcompat.R$attr: int isLightTheme>;

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        if $z0 == 0 goto label1;

        $i1 = r1.<android.util.TypedValue: int data>;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static int getThemeColor(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.content.res.TypedArray r1;
        android.util.TypedValue $r2, r7;
        android.content.res.Resources$Theme $r3;
        android.content.res.Resources $r4;
        int[] $r5, r6;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 0 goto label1;

        $r5 = newarray (int)[1];

        $r5[0] = i1;

        r6 = $r5;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, r6);

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        if i2 == 0 goto label1;

        return i2;

     label1:
        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r7 = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i1, r7, 1);

        $i3 = r7.<android.util.TypedValue: int resourceId>;

        if $i3 == 0 goto label2;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i5 = r7.<android.util.TypedValue: int resourceId>;

        $i6 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i5);

        return $i6;

     label2:
        $i4 = r7.<android.util.TypedValue: int data>;

        return $i4;
    }

    private static int getRouterThemeId(android.content.Context)
    {
        android.content.Context r0;
        boolean $z0;
        int $i0, $i1, i2;

        r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: boolean isLightTheme(android.content.Context)>(r0);

        if $z0 == 0 goto label2;

        $i1 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getControllerColor(android.content.Context,int)>(r0, 0);

        if $i1 != -570425344 goto label1;

        i2 = <android.support.v7.mediarouter.R$style: int Theme_MediaRouter_Light>;

        goto label4;

     label1:
        i2 = <android.support.v7.mediarouter.R$style: int Theme_MediaRouter_Light_DarkControlPanel>;

        goto label4;

     label2:
        $i0 = staticinvoke <android.support.v7.app.MediaRouterThemeHelper: int getControllerColor(android.content.Context,int)>(r0, 0);

        if $i0 != -570425344 goto label3;

        i2 = <android.support.v7.mediarouter.R$style: int Theme_MediaRouter_LightControlPanel>;

        goto label4;

     label3:
        i2 = <android.support.v7.mediarouter.R$style: int Theme_MediaRouter>;

     label4:
        return i2;
    }

