android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader
<android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader: java.lang.Object load(java.lang.Object)>
    public android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture reload(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader r0;
        java.lang.Object r1, r2, $r5;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture $r6;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = virtualinvoke r0.<android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader: java.lang.Object load(java.lang.Object)>(r1);

        $r6 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r5);

        return $r6;
    }

android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader$InvalidCacheLoadException
    public void <init>(java.lang.String)
    {
        android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader$InvalidCacheLoadException r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.cache.CacheLoader$InvalidCacheLoadException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        return;
    }

