android.support.test.espresso.NoMatchingViewException
<android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.NoMatchingViewException: android.view.View rootView>
<android.support.test.espresso.NoMatchingViewException: java.util.List adapterViews>
<android.support.test.espresso.NoMatchingViewException: boolean includeViewHierarchy>
<android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional adapterViewWarning>
    private void <init>(java.lang.String)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        android.support.test.espresso.util.EspressoOptional $r3;
        java.util.List r4;

        r0 := @this: android.support.test.espresso.NoMatchingViewException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r4 = (java.util.List) $r2;

        r0.<android.support.test.espresso.NoMatchingViewException: java.util.List adapterViews> = r4;

        r0.<android.support.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = 1;

        $r3 = staticinvoke <android.support.test.espresso.util.EspressoOptional: android.support.test.espresso.util.EspressoOptional absent()>();

        r0.<android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = $r3;

        return;
    }

    private void <init>(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        android.support.test.espresso.NoMatchingViewException$Builder r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        android.support.test.espresso.util.EspressoOptional $r4, $r8;
        org.hamcrest.Matcher $r5;
        android.view.View $r6;
        java.util.List $r7, r9;
        boolean $z0;

        r0 := @this: android.support.test.espresso.NoMatchingViewException;

        r1 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $r2 = staticinvoke <android.support.test.espresso.NoMatchingViewException: java.lang.String getErrorMessage(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        $r3 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r9 = (java.util.List) $r3;

        r0.<android.support.test.espresso.NoMatchingViewException: java.util.List adapterViews> = r9;

        r0.<android.support.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = 1;

        $r4 = staticinvoke <android.support.test.espresso.util.EspressoOptional: android.support.test.espresso.util.EspressoOptional absent()>();

        r0.<android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher access$000(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher> = $r5;

        $r6 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: android.view.View access$100(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException: android.view.View rootView> = $r6;

        $r7 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: java.util.List access$200(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException: java.util.List adapterViews> = $r7;

        $r8 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional access$300(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = $r8;

        $z0 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: boolean access$400(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = $z0;

        return;
    }

    public java.lang.String getViewMatcherDescription()
    {
        android.support.test.espresso.NoMatchingViewException r0;
        org.hamcrest.Matcher $r1, $r2;
        java.lang.String r3;

        r0 := @this: android.support.test.espresso.NoMatchingViewException;

        r3 = "unknown";

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        if null == $r1 goto label1;

        $r2 = r0.<android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label1:
        return r3;
    }

    private static java.lang.String getErrorMessage(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        boolean $z0, $z1;
        java.lang.Object[] $r1, $r3;
        org.hamcrest.Matcher $r2, $r4;
        android.support.test.espresso.util.EspressoOptional $r5, $r7;
        java.lang.String $r6, $r9, $r10, r11, r12, $r13, r15;
        java.lang.Object $r8;
        int $i0;
        android.view.View $r14;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        r11 = "";

        $z0 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: boolean access$400(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        if $z0 == 0 goto label4;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher access$000(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        $r3[0] = $r4;

        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No views in hierarchy found matching: %s", $r3);

        $r5 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional access$300(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        $z1 = virtualinvoke $r5.<android.support.test.espresso.util.EspressoOptional: boolean isPresent()>();

        if $z1 == 0 goto label3;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r12);

        $r7 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional access$300(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        $r8 = virtualinvoke $r7.<android.support.test.espresso.util.EspressoOptional: java.lang.Object get()>();

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r13 = virtualinvoke $r6.<java.lang.String: java.lang.String concat(java.lang.String)>($r10);

        goto label2;

     label1:
        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(java.lang.String)>($r6);

     label2:
        r12 = $r13;

     label3:
        $r14 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: android.view.View access$100(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        r15 = staticinvoke <android.support.test.espresso.util.HumanReadables: java.lang.String getViewHierarchyErrorMessage(android.view.View,java.util.List,java.lang.String,java.lang.String)>($r14, null, r12, null);

        goto label5;

     label4:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher access$000(android.support.test.espresso.NoMatchingViewException$Builder)>(r0);

        $r1[0] = $r2;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find a view that matches %s", $r1);

     label5:
        return r15;
    }

    static org.hamcrest.Matcher access$500(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    static android.view.View access$600(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        android.view.View $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException: android.view.View rootView>;

        return $r1;
    }

    static java.util.List access$700(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        java.util.List $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException: java.util.List adapterViews>;

        return $r1;
    }

    static android.support.test.espresso.util.EspressoOptional access$800(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        android.support.test.espresso.util.EspressoOptional $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional adapterViewWarning>;

        return $r1;
    }

    static boolean access$900(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        boolean $z0;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $z0 = r0.<android.support.test.espresso.NoMatchingViewException: boolean includeViewHierarchy>;

        return $z0;
    }

    void <init>(android.support.test.espresso.NoMatchingViewException$Builder, android.support.test.espresso.NoMatchingViewException$1)
    {
        android.support.test.espresso.NoMatchingViewException r0;
        android.support.test.espresso.NoMatchingViewException$Builder r1;
        android.support.test.espresso.NoMatchingViewException$1 r2;

        r0 := @this: android.support.test.espresso.NoMatchingViewException;

        r1 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        r2 := @parameter1: android.support.test.espresso.NoMatchingViewException$1;

        specialinvoke r0.<android.support.test.espresso.NoMatchingViewException: void <init>(android.support.test.espresso.NoMatchingViewException$Builder)>(r1);

        return;
    }

android.support.test.espresso.NoMatchingViewException$1
android.support.test.espresso.NoMatchingViewException$Builder
<android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>
<android.support.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>
<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>
<android.support.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy>
<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning>
    public void <init>()
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        java.util.ArrayList $r1;
        android.support.test.espresso.util.EspressoOptional $r2;
        java.util.List r3;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r3 = (java.util.List) $r1;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = r3;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = 1;

        $r2 = staticinvoke <android.support.test.espresso.util.EspressoOptional: android.support.test.espresso.util.EspressoOptional absent()>();

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = $r2;

        return;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder 'from'(android.support.test.espresso.NoMatchingViewException)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        android.support.test.espresso.NoMatchingViewException r1;
        org.hamcrest.Matcher $r2;
        android.view.View $r3;
        java.util.List $r4;
        android.support.test.espresso.util.EspressoOptional $r5;
        boolean $z0;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: android.support.test.espresso.NoMatchingViewException;

        $r2 = staticinvoke <android.support.test.espresso.NoMatchingViewException: org.hamcrest.Matcher access$500(android.support.test.espresso.NoMatchingViewException)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher> = $r2;

        $r3 = staticinvoke <android.support.test.espresso.NoMatchingViewException: android.view.View access$600(android.support.test.espresso.NoMatchingViewException)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.view.View rootView> = $r3;

        $r4 = staticinvoke <android.support.test.espresso.NoMatchingViewException: java.util.List access$700(android.support.test.espresso.NoMatchingViewException)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = $r4;

        $r5 = staticinvoke <android.support.test.espresso.NoMatchingViewException: android.support.test.espresso.util.EspressoOptional access$800(android.support.test.espresso.NoMatchingViewException)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = $r5;

        $z0 = staticinvoke <android.support.test.espresso.NoMatchingViewException: boolean access$900(android.support.test.espresso.NoMatchingViewException)>(r1);

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = $z0;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder withViewMatcher(org.hamcrest.Matcher)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher> = r1;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder withRootView(android.view.View)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        android.view.View r1;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: android.view.View;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.view.View rootView> = r1;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder withAdapterViews(java.util.List)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        java.util.List r1;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: java.util.List;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = r1;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder includeViewHierarchy(boolean)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        boolean z0;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        z0 := @parameter0: boolean;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = z0;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException$Builder withAdapterViewWarning(android.support.test.espresso.util.EspressoOptional)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        android.support.test.espresso.util.EspressoOptional r1;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: android.support.test.espresso.util.EspressoOptional;

        r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning> = r1;

        return r0;
    }

    public android.support.test.espresso.NoMatchingViewException build()
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        org.hamcrest.Matcher $r1;
        android.view.View $r3;
        java.util.List $r5;
        android.support.test.espresso.util.EspressoOptional $r7;
        android.support.test.espresso.NoMatchingViewException $r9;

        r0 := @this: android.support.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning>;

        staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = new android.support.test.espresso.NoMatchingViewException;

        specialinvoke $r9.<android.support.test.espresso.NoMatchingViewException: void <init>(android.support.test.espresso.NoMatchingViewException$Builder,android.support.test.espresso.NoMatchingViewException$1)>(r0, null);

        return $r9;
    }

    static org.hamcrest.Matcher access$000(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    static android.view.View access$100(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        android.view.View $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>;

        return $r1;
    }

    static java.util.List access$200(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        java.util.List $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>;

        return $r1;
    }

    static android.support.test.espresso.util.EspressoOptional access$300(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        android.support.test.espresso.util.EspressoOptional $r1;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: android.support.test.espresso.util.EspressoOptional adapterViewWarning>;

        return $r1;
    }

    static boolean access$400(android.support.test.espresso.NoMatchingViewException$Builder)
    {
        android.support.test.espresso.NoMatchingViewException$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.support.test.espresso.NoMatchingViewException$Builder;

        $z0 = r0.<android.support.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy>;

        return $z0;
    }

