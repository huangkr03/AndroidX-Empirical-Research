android.support.v7.graphics.drawable.DrawerArrowDrawable
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_LEFT>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_RIGHT>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_START>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_END>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mSpin>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mSize>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize>
<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection>
    public void <init>(android.content.Context)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        android.graphics.Paint $r3, $r6, $r8, $r10, $r11;
        android.graphics.Path $r4;
        android.graphics.Paint$Style $r5;
        android.graphics.Paint$Join $r7;
        android.graphics.Paint$Cap $r9;
        android.content.res.Resources$Theme $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath> = $r4;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror> = 0;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection> = 2;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r6.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r8 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r7 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        virtualinvoke $r8.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r7);

        $r10 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r9 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r9);

        $r11 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r12 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r13 = <android.support.v7.appcompat.R$styleable: int[] DrawerArrowToggle>;

        $i1 = <android.support.v7.appcompat.R$attr: int drawerArrowStyle>;

        $i0 = <android.support.v7.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle>;

        r2 = virtualinvoke $r12.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r13, $i1, $i0);

        $i2 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_color>;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>($i2, 0);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void setColor(int)>($i3);

        $i4 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_thickness>;

        $f0 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i4, 0.0F);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void setBarThickness(float)>($f0);

        $i5 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_spinBars>;

        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i5, 1);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void setSpinEnabled(boolean)>($z0);

        $i6 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars>;

        $f1 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i6, 0.0F);

        $i7 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $f2 = (float) $i7;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void setGapSize(float)>($f2);

        $i8 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_drawableSize>;

        $i9 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i8, 0);

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mSize> = $i9;

        $i10 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_barLength>;

        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i10, 0.0F);

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $f4 = (float) $i11;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength> = $f4;

        $i12 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_arrowHeadLength>;

        $f5 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i12, 0.0F);

        $i13 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $f6 = (float) $i13;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength> = $f6;

        $i14 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_arrowShaftLength>;

        $f7 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i14, 0.0F);

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength> = $f7;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setArrowHeadLength(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength> = f0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getArrowHeadLength()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        return $f0;
    }

    public void setArrowShaftLength(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength> = f0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getArrowShaftLength()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        return $f0;
    }

    public float getBarLength()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        return $f0;
    }

    public void setBarLength(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength> = f0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColor(int)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int i0, $i1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if i0 == $i1 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public int getColor()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    public void setBarThickness(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Paint $r1, $r2;
        byte $b0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $f2 = f0 / 2.0F;

        $d1 = (double) $f2;

        $f3 = <android.support.v7.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $d0 = (double) $f3;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d3 = $d1 * $d2;

        $f4 = (float) $d3;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize> = $f4;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getBarThickness()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint $r1;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }

    public float getGapSize()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        return $f0;
    }

    public void setGapSize(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap> = f0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setDirection(int)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int i0, $i1;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        if i0 == $i1 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection> = i0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public boolean isSpinEnabled()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        boolean $z0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        return $z0;
    }

    public void setSpinEnabled(boolean)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        boolean z0, $z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == z0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mSpin> = z0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public int getDirection()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        return $i0;
    }

    public void setVerticalMirror(boolean)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        boolean z0, $z1;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror>;

        if $z1 == z0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror> = z0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f12, $f13, $f14, $f15, f16, $f17, $f18, f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, f49, $f50, $f51, $f52, f53, $f54;
        int i0, $i1, $i2, $i4, $i5, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, z2, $z3, $z4, $z5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        long $l6, $l7;
        android.graphics.Path $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        android.graphics.Paint $r5, $r13, $r15;
        byte $b12;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Rect getBounds()>();

        $i1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label03;
            default: goto label06;
        };

     label01:
        z2 = 0;

        goto label09;

     label02:
        z2 = 1;

        goto label09;

     label03:
        $i2 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>(r0);

        if $i2 != 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z2 = $z3;

        goto label09;

     label06:
        $i4 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>(r0);

        if $i4 != 1 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z2 = $z4;

     label09:
        $f12 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        $f13 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        $f14 = $f12 * $f13;

        $f15 = $f14 * 2.0F;

        $d0 = (double) $f15;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f16 = (float) $d1;

        $f17 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $f18 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        f19 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f17, f16, $f18);

        $f20 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $f21 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        $f22 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        f0 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f20, $f21, $f22);

        $f23 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize>;

        $f24 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f25 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f23, $f24);

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f25);

        f1 = (float) $i5;

        $f26 = <android.support.v7.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $f27 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        f2 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f26, $f27);

        if z2 == 0 goto label10;

        $f28 = 0.0F;

        goto label11;

     label10:
        $f28 = -180.0F;

     label11:
        if z2 == 0 goto label12;

        $f29 = 180.0F;

        goto label13;

     label12:
        $f29 = 0.0F;

     label13:
        $f30 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        f3 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f28, $f29, $f30);

        $d2 = (double) f19;

        $d3 = (double) f2;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d5 = $d2 * $d4;

        $l6 = staticinvoke <java.lang.Math: long round(double)>($d5);

        f4 = (float) $l6;

        $d6 = (double) f19;

        $d7 = (double) f2;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);

        $d9 = $d6 * $d8;

        $l7 = staticinvoke <java.lang.Math: long round(double)>($d9);

        f5 = (float) $l7;

        $r4 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r4.<android.graphics.Path: void rewind()>();

        $f31 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $r5 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f32 = virtualinvoke $r5.<android.graphics.Paint: float getStrokeWidth()>();

        $f33 = $f31 + $f32;

        $f34 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize>;

        $f35 = neg $f34;

        $f36 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        f6 = staticinvoke <android.support.v7.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f33, $f35, $f36);

        $f37 = neg f0;

        f7 = $f37 / 2.0F;

        $r6 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f38 = f7 + f1;

        virtualinvoke $r6.<android.graphics.Path: void moveTo(float,float)>($f38, 0.0F);

        $r7 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f39 = f1 * 2.0F;

        $f40 = f0 - $f39;

        virtualinvoke $r7.<android.graphics.Path: void rLineTo(float,float)>($f40, 0.0F);

        $r8 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r8.<android.graphics.Path: void moveTo(float,float)>(f7, f6);

        $r9 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r9.<android.graphics.Path: void rLineTo(float,float)>(f4, f5);

        $r10 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f41 = neg f6;

        virtualinvoke $r10.<android.graphics.Path: void moveTo(float,float)>(f7, $f41);

        $r11 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f42 = neg f5;

        virtualinvoke $r11.<android.graphics.Path: void rLineTo(float,float)>(f4, $f42);

        $r12 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r12.<android.graphics.Path: void close()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r13 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        f8 = virtualinvoke $r13.<android.graphics.Paint: float getStrokeWidth()>();

        $i8 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $f43 = (float) $i8;

        $f44 = f8 * 3.0F;

        $f45 = $f43 - $f44;

        $f46 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $f47 = $f46 * 2.0F;

        $f48 = $f45 - $f47;

        i0 = (int) $f48;

        $i9 = i0 / 4;

        $i10 = $i9 * 2;

        f49 = (float) $i10;

        $f50 = f8 * 1.5F;

        $f51 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $f52 = $f50 + $f51;

        f53 = f49 + $f52;

        $i11 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f54 = (float) $i11;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f54, f53);

        $z5 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        if $z5 == 0 goto label16;

        $z0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror>;

        $z1 = $z0 ^ z2;

        if $z1 == 0 goto label14;

        $b12 = -1;

        goto label15;

     label14:
        $b12 = 1;

     label15:
        $f9 = (float) $b12;

        $f10 = f3 * $f9;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>($f10);

        goto label17;

     label16:
        if z2 == 0 goto label17;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

     label17:
        $r14 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $r15 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r15);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void setAlpha(int)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int i0, $i1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        if i0 == $i1 goto label1;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

        return;
    }

    public int getIntrinsicHeight()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mSize>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        int $i0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $i0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: int mSize>;

        return $i0;
    }

    public int getOpacity()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        return -3;
    }

    public float getProgress()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        return $f0;
    }

    public void setProgress(float)
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: float mProgress> = f0;

        virtualinvoke r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public final android.graphics.Paint getPaint()
    {
        android.support.v7.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v7.graphics.drawable.DrawerArrowDrawable;

        $r1 = r0.<android.support.v7.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        return $r1;
    }

    private static float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = $f3 * f2;

        $f5 = f0 + $f4;

        return $f5;
    }

    static void <clinit>()
    {
        double $d0;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $f0 = (float) $d0;

        <android.support.v7.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE> = $f0;

        return;
    }

android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrowDirection
