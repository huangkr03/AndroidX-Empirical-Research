android.support.media2.MediaLibrarySessionImplBase
<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>
    void <init>(android.support.media2.MediaSession2, android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2 r1;
        android.content.Context r2;
        java.lang.String r3;
        android.support.media2.MediaPlayerConnector r4;
        android.support.media2.MediaPlaylistAgent r5;
        android.app.PendingIntent r6;
        java.util.concurrent.Executor r7;
        android.support.media2.MediaSession2$SessionCallback r8;
        android.support.v4.util.ArrayMap $r9;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.support.media2.MediaPlayerConnector;

        r5 := @parameter4: android.support.media2.MediaPlaylistAgent;

        r6 := @parameter5: android.app.PendingIntent;

        r7 := @parameter6: java.util.concurrent.Executor;

        r8 := @parameter7: android.support.media2.MediaSession2$SessionCallback;

        specialinvoke r0.<android.support.media2.MediaSession2ImplBase: void <init>(android.support.media2.MediaSession2,android.content.Context,java.lang.String,android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent,android.app.PendingIntent,java.util.concurrent.Executor,android.support.media2.MediaSession2$SessionCallback)>(r1, r2, r3, r4, r5, r6, r7, r8);

        $r9 = new android.support.v4.util.ArrayMap;

        specialinvoke $r9.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions> = $r9;

        return;
    }

    android.support.v4.media.MediaBrowserServiceCompat createLegacyBrowserService(android.content.Context, android.support.media2.SessionToken2, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.content.Context r1;
        android.support.media2.SessionToken2 r2;
        android.support.v4.media.session.MediaSessionCompat$Token r3;
        android.support.media2.MediaLibraryService2LegacyStub $r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.SessionToken2;

        r3 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        $r4 = new android.support.media2.MediaLibraryService2LegacyStub;

        specialinvoke $r4.<android.support.media2.MediaLibraryService2LegacyStub: void <init>(android.content.Context,android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionImpl,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r0, r3);

        return $r4;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2 $r1;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r2;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r2 = (android.support.media2.MediaLibraryService2$MediaLibrarySession) $r1;

        return $r2;
    }

    public android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$SessionCallback $r1;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r2;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r2 = (android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback) $r1;

        return $r2;
    }

    android.support.media2.MediaLibraryService2LegacyStub getLegacyBrowserService()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.v4.media.MediaBrowserServiceCompat $r1;
        android.support.media2.MediaLibraryService2LegacyStub $r2;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat getLegacyBrowserService()>();

        $r2 = (android.support.media2.MediaLibraryService2LegacyStub) $r1;

        return $r2;
    }

    public java.util.List getConnectedControllers()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        java.util.List r1, $r4;
        android.support.media2.MediaLibraryService2LegacyStub $r2;
        android.support.media2.ConnectedControllersManager $r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: java.util.List getConnectedControllers()>();

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2LegacyStub getLegacyBrowserService()>();

        $r3 = virtualinvoke $r2.<android.support.media2.MediaLibraryService2LegacyStub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        $r4 = virtualinvoke $r3.<android.support.media2.ConnectedControllersManager: java.util.List getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return r1;
    }

    public void notifyChildrenChanged(java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        boolean $z0;
        android.support.media2.MediaLibrarySessionImplBase$1 $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r5;

     label1:
        if i0 >= 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemCount shouldn\'t be negative");

        throw $r4;

     label2:
        $r3 = new android.support.media2.MediaLibrarySessionImplBase$1;

        specialinvoke $r3.<android.support.media2.MediaLibrarySessionImplBase$1: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,int,android.os.Bundle)>(r0, r1, i0, r2);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r3);

        return;
    }

    public void notifyChildrenChanged(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;
        boolean $z0;
        android.support.media2.MediaLibrarySessionImplBase$2 $r4;
        java.lang.IllegalArgumentException $r5, $r6, $r7;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r7;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r6;

     label2:
        if i0 >= 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemCount shouldn\'t be negative");

        throw $r5;

     label3:
        $r4 = new android.support.media2.MediaLibrarySessionImplBase$2;

        specialinvoke $r4.<android.support.media2.MediaLibrarySessionImplBase$2: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,android.support.media2.MediaSession2$ControllerInfo,int,android.os.Bundle)>(r0, r2, r1, i0, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r4);

        return;
    }

    public void notifySearchResultChanged(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;
        boolean $z0;
        android.support.media2.MediaLibrarySessionImplBase$3 $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r6;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r5;

     label2:
        $r4 = new android.support.media2.MediaLibrarySessionImplBase$3;

        specialinvoke $r4.<android.support.media2.MediaLibrarySessionImplBase$3: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,int,android.os.Bundle)>(r0, r2, i0, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r4);

        return;
    }

    public void onGetLibraryRootOnExecutor(android.support.media2.MediaSession2$ControllerInfo, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.os.Bundle r2;
        android.support.media2.MediaLibraryService2$LibraryRoot r3;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r5;
        android.support.media2.MediaLibrarySessionImplBase$4 $r6;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        r3 = virtualinvoke $r4.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: android.support.media2.MediaLibraryService2$LibraryRoot onGetLibraryRoot(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,android.os.Bundle)>($r5, r1, r2);

        $r6 = new android.support.media2.MediaLibrarySessionImplBase$4;

        specialinvoke $r6.<android.support.media2.MediaLibrarySessionImplBase$4: void <init>(android.support.media2.MediaLibrarySessionImplBase,android.os.Bundle,android.support.media2.MediaLibraryService2$LibraryRoot)>(r0, r2, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r6);

        return;
    }

    public void onGetItemOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        android.support.media2.MediaItem2 r3;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r5;
        android.support.media2.MediaLibrarySessionImplBase$5 $r6;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        r3 = virtualinvoke $r4.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: android.support.media2.MediaItem2 onGetItem(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String)>($r5, r1, r2);

        $r6 = new android.support.media2.MediaLibrarySessionImplBase$5;

        specialinvoke $r6.<android.support.media2.MediaLibrarySessionImplBase$5: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,android.support.media2.MediaItem2)>(r0, r2, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r6);

        return;
    }

    public void onGetChildrenOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2, $r14;
        int i0, i1, $i2, $i3;
        android.os.Bundle r3;
        java.util.List r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r6;
        android.support.media2.MediaLibrarySessionImplBase$6 $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        r4 = virtualinvoke $r5.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: java.util.List onGetChildren(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,int,android.os.Bundle)>($r6, r1, r2, i0, i1, r3);

        if r4 == null goto label1;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i2 <= i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onGetChildren() shouldn\'t return media items more than pageSize. result.size()=");

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pageSize=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r7 = new android.support.media2.MediaLibrarySessionImplBase$6;

        specialinvoke $r7.<android.support.media2.MediaLibrarySessionImplBase$6: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,int,int,java.util.List,android.os.Bundle)>(r0, r2, i0, i1, r4, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r7);

        return;
    }

    public void onSubscribeOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        android.os.Bundle r3;
        java.lang.Object r4, $r6, $r9, r17;
        java.lang.Throwable r5, $r16;
        android.support.v4.util.ArrayMap $r7, $r13;
        android.support.media2.MediaSession2$ControllerCb $r8, $r14;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r10;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r11;
        java.util.HashSet r18;
        java.util.Set r19;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r6 = r0.<android.support.media2.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r8 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb getControllerCb()>();

        $r9 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r17 = (java.util.Set) $r9;

        if r17 != null goto label2;

        r18 = new java.util.HashSet;

        specialinvoke r18.<java.util.HashSet: void <init>()>();

        r17 = r18;

        $r13 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r14 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb getControllerCb()>();

        virtualinvoke $r13.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r17);

     label2:
        r19 = (java.util.Set) r17;

        interfaceinvoke r19.<java.util.Set: boolean add(java.lang.Object)>(r2);

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        $r10 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r11 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        virtualinvoke $r10.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: void onSubscribe(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String,android.os.Bundle)>($r11, r1, r2, r3);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onUnsubscribeOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        java.lang.Object r3, $r7;
        java.lang.Throwable r4, $r11;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r6;
        android.support.v4.util.ArrayMap $r8;
        android.support.media2.MediaSession2$ControllerCb $r9;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        virtualinvoke $r5.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: void onUnsubscribe(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String)>($r6, r1, r2);

        $r7 = r0.<android.support.media2.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r9 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb getControllerCb()>();

        virtualinvoke $r8.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onSearchOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r5;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        virtualinvoke $r4.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: void onSearch(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String,android.os.Bundle)>($r5, r1, r2, r3);

        return;
    }

    public void onGetSearchResultOnExecutor(android.support.media2.MediaSession2$ControllerInfo, java.lang.String, int, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.String r2, $r14;
        int i0, i1, $i2, $i3;
        android.os.Bundle r3;
        java.util.List r4;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r5;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r6;
        android.support.media2.MediaLibrarySessionImplBase$7 $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        $r5 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        $r6 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        r4 = virtualinvoke $r5.<android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback: java.util.List onGetSearchResult(android.support.media2.MediaLibraryService2$MediaLibrarySession,android.support.media2.MediaSession2$ControllerInfo,java.lang.String,int,int,android.os.Bundle)>($r6, r1, r2, i0, i1, r3);

        if r4 == null goto label1;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i2 <= i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onGetSearchResult() shouldn\'t return media items more than pageSize. result.size()=");

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pageSize=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r7 = new android.support.media2.MediaLibrarySessionImplBase$7;

        specialinvoke $r7.<android.support.media2.MediaLibrarySessionImplBase$7: void <init>(android.support.media2.MediaLibrarySessionImplBase,java.lang.String,int,int,java.util.List,android.os.Bundle)>(r0, r2, i0, i1, r4, r3);

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r7);

        return;
    }

    void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2ImplBase$NotifyRunnable r1;
        android.support.media2.MediaLibraryService2LegacyStub $r2;
        android.support.media2.MediaSession2$ControllerInfo $r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$NotifyRunnable;

        specialinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1);

        $r2 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2LegacyStub getLegacyBrowserService()>();

        $r3 = virtualinvoke $r2.<android.support.media2.MediaLibraryService2LegacyStub: android.support.media2.MediaSession2$ControllerInfo getControllersForAll()>();

        virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r3, r1);

        return;
    }

    boolean isSubscribed(android.support.media2.MediaSession2$ControllerCb, java.lang.String)
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        java.lang.String r2;
        java.lang.Object r3, $r6, $r8;
        java.util.Set r4;
        java.lang.Throwable r5, $r9;
        android.support.v4.util.ArrayMap $r7;
        boolean $z0;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<android.support.media2.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r8 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        if r4 == null goto label2;

        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

     label2:
        exitmonitor r3;

     label3:
        return 0;

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return 1;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void dumpSubscription()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        java.lang.Object r1, $r5, $r15, $r19, $r21;
        java.util.Iterator r2;
        java.lang.String r3, $r10, $r17, $r25;
        java.lang.Throwable r4, $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r9, $r12, $r13, $r16, $r22, $r23, $r24;
        android.support.v4.util.ArrayMap $r8, $r11, $r14, $r18;
        int $i0, $i2, i5;
        java.util.Set $r20;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $z0 = <android.support.media2.MediaLibrarySessionImplBase: boolean DEBUG>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<android.support.media2.MediaLibrarySessionImplBase: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label02:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumping subscription, controller sz=");

        $r8 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $i0 = virtualinvoke $r8.<android.support.v4.util.ArrayMap: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ImplBase", $r10);

        i5 = 0;

     label03:
        $r11 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $i2 = virtualinvoke $r11.<android.support.v4.util.ArrayMap: int size()>();

        if i5 >= $i2 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  controller ");

        $r14 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r15 = virtualinvoke $r14.<android.support.v4.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ImplBase", $r17);

        $r18 = r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.v4.util.ArrayMap mSubscriptions>;

        $r19 = virtualinvoke $r18.<android.support.v4.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r20 = (java.util.Set) $r19;

        r2 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  - ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ImplBase", $r25);

        goto label04;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        r4 = $r26;

        exitmonitor r1;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    volatile android.support.v4.media.MediaBrowserServiceCompat getLegacyBrowserService()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaLibraryService2LegacyStub $r1;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2LegacyStub getLegacyBrowserService()>();

        return $r1;
    }

    public volatile android.support.media2.MediaSession2$SessionCallback getCallback()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback $r1;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession$MediaLibrarySessionCallback getCallback()>();

        return $r1;
    }

    public volatile android.support.media2.MediaSession2 getInstance()
    {
        android.support.media2.MediaLibrarySessionImplBase r0;
        android.support.media2.MediaLibraryService2$MediaLibrarySession $r1;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase;

        $r1 = virtualinvoke r0.<android.support.media2.MediaLibrarySessionImplBase: android.support.media2.MediaLibraryService2$MediaLibrarySession getInstance()>();

        return $r1;
    }

android.support.media2.MediaLibrarySessionImplBase$1
<android.support.media2.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>
<android.support.media2.MediaLibrarySessionImplBase$1: int val$itemCount>
<android.support.media2.MediaLibrarySessionImplBase$1: android.os.Bundle val$extras>
<android.support.media2.MediaLibrarySessionImplBase$1: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase$1 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$1;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r0.<android.support.media2.MediaLibrarySessionImplBase$1: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$1: java.lang.String val$parentId> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$1: int val$itemCount> = i0;

        r0.<android.support.media2.MediaLibrarySessionImplBase$1: android.os.Bundle val$extras> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        java.lang.String $r2, $r5;
        android.support.media2.MediaLibrarySessionImplBase $r3;
        boolean $z0;
        android.os.Bundle $r4;
        int $i0;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$1: android.support.media2.MediaLibrarySessionImplBase this$0>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>;

        $z0 = virtualinvoke $r3.<android.support.media2.MediaLibrarySessionImplBase: boolean isSubscribed(android.support.media2.MediaSession2$ControllerCb,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.support.media2.MediaLibrarySessionImplBase$1: java.lang.String val$parentId>;

        $i0 = r0.<android.support.media2.MediaLibrarySessionImplBase$1: int val$itemCount>;

        $r4 = r0.<android.support.media2.MediaLibrarySessionImplBase$1: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onChildrenChanged(java.lang.String,int,android.os.Bundle)>($r5, $i0, $r4);

     label1:
        return;
    }

android.support.media2.MediaLibrarySessionImplBase$2
<android.support.media2.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>
<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaSession2$ControllerInfo val$controller>
<android.support.media2.MediaLibrarySessionImplBase$2: int val$itemCount>
<android.support.media2.MediaLibrarySessionImplBase$2: android.os.Bundle val$extras>
<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, android.support.media2.MediaSession2$ControllerInfo, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase$2 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        android.support.media2.MediaSession2$ControllerInfo r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$2;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaSession2$ControllerInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$2: java.lang.String val$parentId> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaSession2$ControllerInfo val$controller> = r3;

        r0.<android.support.media2.MediaLibrarySessionImplBase$2: int val$itemCount> = i0;

        r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.os.Bundle val$extras> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$2 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        java.lang.String $r2, $r5, $r11;
        android.support.media2.MediaLibrarySessionImplBase $r3, $r12;
        boolean $z0, $z1;
        android.os.Bundle $r4;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        android.support.media2.MediaSession2$ControllerInfo $r8;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaLibrarySessionImplBase this$0>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>;

        $z0 = virtualinvoke $r3.<android.support.media2.MediaLibrarySessionImplBase: boolean isSubscribed(android.support.media2.MediaSession2$ControllerCb,java.lang.String)>(r1, $r2);

        if $z0 != 0 goto label2;

        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping notifyChildrenChanged() to ");

        $r8 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaSession2$ControllerInfo val$controller>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it hasn\'t subscribed");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ImplBase", $r11);

        $r12 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.support.media2.MediaLibrarySessionImplBase this$0>;

        virtualinvoke $r12.<android.support.media2.MediaLibrarySessionImplBase: void dumpSubscription()>();

     label1:
        return;

     label2:
        $r5 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: java.lang.String val$parentId>;

        $i0 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: int val$itemCount>;

        $r4 = r0.<android.support.media2.MediaLibrarySessionImplBase$2: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onChildrenChanged(java.lang.String,int,android.os.Bundle)>($r5, $i0, $r4);

        return;
    }

android.support.media2.MediaLibrarySessionImplBase$3
<android.support.media2.MediaLibrarySessionImplBase$3: java.lang.String val$query>
<android.support.media2.MediaLibrarySessionImplBase$3: int val$itemCount>
<android.support.media2.MediaLibrarySessionImplBase$3: android.os.Bundle val$extras>
<android.support.media2.MediaLibrarySessionImplBase$3: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, int, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase$3 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$3;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r0.<android.support.media2.MediaLibrarySessionImplBase$3: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$3: java.lang.String val$query> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$3: int val$itemCount> = i0;

        r0.<android.support.media2.MediaLibrarySessionImplBase$3: android.os.Bundle val$extras> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$3 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.Bundle $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$3;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$3: java.lang.String val$query>;

        $i0 = r0.<android.support.media2.MediaLibrarySessionImplBase$3: int val$itemCount>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$3: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onSearchResultChanged(java.lang.String,int,android.os.Bundle)>($r3, $i0, $r2);

        return;
    }

android.support.media2.MediaLibrarySessionImplBase$4
<android.support.media2.MediaLibrarySessionImplBase$4: android.os.Bundle val$rootHints>
<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root>
<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, android.os.Bundle, android.support.media2.MediaLibraryService2$LibraryRoot)
    {
        android.support.media2.MediaLibrarySessionImplBase$4 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        android.os.Bundle r2;
        android.support.media2.MediaLibraryService2$LibraryRoot r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$4;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.support.media2.MediaLibraryService2$LibraryRoot;

        r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.os.Bundle val$rootHints> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$4 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaLibraryService2$LibraryRoot $r2, $r3, $r4, $r5;
        android.os.Bundle $r7, $r9;
        java.lang.String $r8;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$4;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r7 = r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.os.Bundle val$rootHints>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root>;

        if $r2 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root>;

        $r8 = virtualinvoke $r3.<android.support.media2.MediaLibraryService2$LibraryRoot: java.lang.String getRootId()>();

     label2:
        $r4 = r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root>;

        if $r4 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r5 = r0.<android.support.media2.MediaLibrarySessionImplBase$4: android.support.media2.MediaLibraryService2$LibraryRoot val$root>;

        $r9 = virtualinvoke $r5.<android.support.media2.MediaLibraryService2$LibraryRoot: android.os.Bundle getExtras()>();

     label4:
        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onGetLibraryRootDone(android.os.Bundle,java.lang.String,android.os.Bundle)>($r7, $r8, $r9);

        return;
    }

android.support.media2.MediaLibrarySessionImplBase$5
<android.support.media2.MediaLibrarySessionImplBase$5: java.lang.String val$mediaId>
<android.support.media2.MediaLibrarySessionImplBase$5: android.support.media2.MediaItem2 val$result>
<android.support.media2.MediaLibrarySessionImplBase$5: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaLibrarySessionImplBase$5 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        android.support.media2.MediaItem2 r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$5;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.support.media2.MediaItem2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$5: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$5: java.lang.String val$mediaId> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$5: android.support.media2.MediaItem2 val$result> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$5 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaItem2 $r2;
        java.lang.String $r3;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$5;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$5: java.lang.String val$mediaId>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$5: android.support.media2.MediaItem2 val$result>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onGetItemDone(java.lang.String,android.support.media2.MediaItem2)>($r3, $r2);

        return;
    }

android.support.media2.MediaLibrarySessionImplBase$6
<android.support.media2.MediaLibrarySessionImplBase$6: java.lang.String val$parentId>
<android.support.media2.MediaLibrarySessionImplBase$6: int val$page>
<android.support.media2.MediaLibrarySessionImplBase$6: int val$pageSize>
<android.support.media2.MediaLibrarySessionImplBase$6: java.util.List val$result>
<android.support.media2.MediaLibrarySessionImplBase$6: android.os.Bundle val$extras>
<android.support.media2.MediaLibrarySessionImplBase$6: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, int, int, java.util.List, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase$6 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0, i1;
        java.util.List r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$6;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.List;

        r4 := @parameter5: android.os.Bundle;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: java.lang.String val$parentId> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: int val$page> = i0;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: int val$pageSize> = i1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: java.util.List val$result> = r3;

        r0.<android.support.media2.MediaLibrarySessionImplBase$6: android.os.Bundle val$extras> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$6 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.Bundle $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$6;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r4 = r0.<android.support.media2.MediaLibrarySessionImplBase$6: java.lang.String val$parentId>;

        $i1 = r0.<android.support.media2.MediaLibrarySessionImplBase$6: int val$page>;

        $i0 = r0.<android.support.media2.MediaLibrarySessionImplBase$6: int val$pageSize>;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$6: java.util.List val$result>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$6: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onGetChildrenDone(java.lang.String,int,int,java.util.List,android.os.Bundle)>($r4, $i1, $i0, $r3, $r2);

        return;
    }

android.support.media2.MediaLibrarySessionImplBase$7
<android.support.media2.MediaLibrarySessionImplBase$7: java.lang.String val$query>
<android.support.media2.MediaLibrarySessionImplBase$7: int val$page>
<android.support.media2.MediaLibrarySessionImplBase$7: int val$pageSize>
<android.support.media2.MediaLibrarySessionImplBase$7: java.util.List val$result>
<android.support.media2.MediaLibrarySessionImplBase$7: android.os.Bundle val$extras>
<android.support.media2.MediaLibrarySessionImplBase$7: android.support.media2.MediaLibrarySessionImplBase this$0>
    void <init>(android.support.media2.MediaLibrarySessionImplBase, java.lang.String, int, int, java.util.List, android.os.Bundle)
    {
        android.support.media2.MediaLibrarySessionImplBase$7 r0;
        android.support.media2.MediaLibrarySessionImplBase r1;
        java.lang.String r2;
        int i0, i1;
        java.util.List r3;
        android.os.Bundle r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$7;

        r1 := @parameter0: android.support.media2.MediaLibrarySessionImplBase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.List;

        r4 := @parameter5: android.os.Bundle;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: android.support.media2.MediaLibrarySessionImplBase this$0> = r1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: java.lang.String val$query> = r2;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: int val$page> = i0;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: int val$pageSize> = i1;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: java.util.List val$result> = r3;

        r0.<android.support.media2.MediaLibrarySessionImplBase$7: android.os.Bundle val$extras> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaLibrarySessionImplBase$7 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.Bundle $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: android.support.media2.MediaLibrarySessionImplBase$7;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r4 = r0.<android.support.media2.MediaLibrarySessionImplBase$7: java.lang.String val$query>;

        $i1 = r0.<android.support.media2.MediaLibrarySessionImplBase$7: int val$page>;

        $i0 = r0.<android.support.media2.MediaLibrarySessionImplBase$7: int val$pageSize>;

        $r3 = r0.<android.support.media2.MediaLibrarySessionImplBase$7: java.util.List val$result>;

        $r2 = r0.<android.support.media2.MediaLibrarySessionImplBase$7: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onGetSearchResultDone(java.lang.String,int,int,java.util.List,android.os.Bundle)>($r4, $i1, $i0, $r3, $r2);

        return;
    }

