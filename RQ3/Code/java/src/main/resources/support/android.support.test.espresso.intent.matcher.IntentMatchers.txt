android.support.test.espresso.intent.matcher.IntentMatchers
    private void <init>()
    {
        android.support.test.espresso.intent.matcher.IntentMatchers r0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hamcrest.Matcher anyIntent()
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$1 r1;
        org.hamcrest.Matcher r2;

        r1 = new android.support.test.espresso.intent.matcher.IntentMatchers$1;

        specialinvoke r1.<android.support.test.espresso.intent.matcher.IntentMatchers$1: void <init>()>();

        r2 = (org.hamcrest.Matcher) r1;

        return r2;
    }

    public static org.hamcrest.Matcher hasAction(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasAction(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasAction(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$2 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$2;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$2: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasCategories(java.util.Set)
    {
        java.util.Set r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasCategories(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasCategories(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$3 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$3;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$3: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasComponent(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasClassName(java.lang.String)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasComponent(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasComponent(android.content.ComponentName)
    {
        android.content.ComponentName r0;
        java.lang.String $r1;
        org.hamcrest.Matcher $r2, $r3;

        r0 := @parameter0: android.content.ComponentName;

        $r1 = virtualinvoke r0.<android.content.ComponentName: java.lang.String getClassName()>();

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasClassName(java.lang.String)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasComponent(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static org.hamcrest.Matcher hasComponent(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$4 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$4;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$4: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasData(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1;
        org.hamcrest.Matcher $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasData(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static org.hamcrest.Matcher hasData(android.net.Uri)
    {
        android.net.Uri r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasData(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasData(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$5 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$5;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$5: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasExtraWithKey(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasExtraWithKey(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasExtraWithKey(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1, $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <android.support.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasKey(org.hamcrest.Matcher)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasExtras(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasExtra(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1;
        org.hamcrest.Matcher $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasEntry(java.lang.String,java.lang.Object)>(r0, r1);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasExtras(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static org.hamcrest.Matcher hasExtra(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, $r2, $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasEntry(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasExtras(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static org.hamcrest.Matcher hasExtras(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$6 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$6;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$6: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasType(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasType(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasType(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$7 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$7;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$7: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasPackage(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        android.support.test.espresso.intent.matcher.IntentMatchers$8 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$8;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$8: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasPackage(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r2, $r3;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r0);

        $r3 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasPackage(org.hamcrest.Matcher)>($r2);

        return $r3;
    }

    public static org.hamcrest.Matcher toPackage(java.lang.String)
    {
        java.lang.String r0;
        android.support.test.espresso.intent.matcher.IntentMatchers$9 r3;
        org.hamcrest.Matcher r4;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.support.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new android.support.test.espresso.intent.matcher.IntentMatchers$9;

        specialinvoke r3.<android.support.test.espresso.intent.matcher.IntentMatchers$9: void <init>(java.lang.String)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasFlag(int)
    {
        int i0;
        org.hamcrest.Matcher $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasFlags(int)>(i0);

        return $r0;
    }

    public static transient org.hamcrest.Matcher hasFlags(int[])
    {
        int[] r0, r1;
        int i0, i1, i2, i3;
        org.hamcrest.Matcher $r2;

        r0 := @parameter0: int[];

        i2 = 0;

        r1 = r0;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        i1 = r1[i3];

        i2 = i2 | i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <android.support.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher hasFlags(int)>(i2);

        return $r2;
    }

    public static org.hamcrest.Matcher hasFlags(int)
    {
        int i0;
        android.support.test.espresso.intent.matcher.IntentMatchers$10 r1;
        org.hamcrest.Matcher r2;

        i0 := @parameter0: int;

        r1 = new android.support.test.espresso.intent.matcher.IntentMatchers$10;

        specialinvoke r1.<android.support.test.espresso.intent.matcher.IntentMatchers$10: void <init>(int)>(i0);

        r2 = (org.hamcrest.Matcher) r1;

        return r2;
    }

    public static org.hamcrest.Matcher isInternal()
    {
        android.content.Context r0;
        android.support.test.espresso.intent.matcher.IntentMatchers$11 r2;
        org.hamcrest.Matcher r3;

        r0 = staticinvoke <android.support.test.InstrumentationRegistry: android.content.Context getTargetContext()>();

        r2 = new android.support.test.espresso.intent.matcher.IntentMatchers$11;

        specialinvoke r2.<android.support.test.espresso.intent.matcher.IntentMatchers$11: void <init>(android.content.Context)>(r0);

        r3 = (org.hamcrest.Matcher) r2;

        return r3;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$1
    void <init>()
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$1 r0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$1 r0;
        org.hamcrest.Description r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("any intent");

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$1 r0;
        android.content.Intent r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$1;

        r1 := @parameter0: android.content.Intent;

        return 1;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$1 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$1: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$10
<android.support.test.espresso.intent.matcher.IntentMatchers$10: int val$flags>
    void <init>(int)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$10 r0;
        int i0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$10;

        i0 := @parameter0: int;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$10: int val$flags> = i0;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$10 r0;
        org.hamcrest.Description r1;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r7;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$10;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = "flags: ";

        $i0 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$10: int val$flags>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == 0 goto label1;

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        goto label2;

     label1:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>("flags: ");

     label2:
        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r7);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$10 r0;
        android.content.Intent r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$10;

        r1 := @parameter0: android.content.Intent;

        i0 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i1 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$10: int val$flags>;

        $i3 = i0 & $i1;

        $i2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$10: int val$flags>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$10 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$10: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$11
<android.support.test.espresso.intent.matcher.IntentMatchers$11: android.content.Context val$targetContext>
    void <init>(android.content.Context)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$11 r0;
        android.content.Context r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$11;

        r1 := @parameter0: android.content.Context;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$11: android.content.Context val$targetContext> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$11 r0;
        org.hamcrest.Description r1;
        android.content.Context $r2;
        java.lang.String $r3, $r4, $r5, $r8;
        int $i0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$11;

        r1 := @parameter0: org.hamcrest.Description;

        $r3 = "target package: ";

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$11: android.content.Context val$targetContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r8 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r5);

        goto label2;

     label1:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("target package: ");

     label2:
        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r8);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$11 r0;
        android.content.Intent r1;
        android.content.ComponentName r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        org.hamcrest.Matcher $r5;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$11;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$11: android.content.Context val$targetContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r4);

        if r2 == null goto label1;

        $r5 = staticinvoke <android.support.test.espresso.intent.matcher.ComponentNameMatchers: org.hamcrest.Matcher hasMyPackageName()>();

        $z0 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r2);

        return $z0;

     label1:
        return 0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$11 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$11;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$11: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$2
<android.support.test.espresso.intent.matcher.IntentMatchers$2: org.hamcrest.Matcher val$actionMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$2 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$2;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$2: org.hamcrest.Matcher val$actionMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$2 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$2;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has action: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$2: org.hamcrest.Matcher val$actionMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$2 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$2;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$2: org.hamcrest.Matcher val$actionMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$2 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$2: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$3
<android.support.test.espresso.intent.matcher.IntentMatchers$3: org.hamcrest.Matcher val$categoriesMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$3 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$3;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$3: org.hamcrest.Matcher val$categoriesMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$3 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$3;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has categories: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$3: org.hamcrest.Matcher val$categoriesMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$3 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        java.util.Set $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$3;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$3: org.hamcrest.Matcher val$categoriesMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: java.util.Set getCategories()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$3 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$3: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$4
<android.support.test.espresso.intent.matcher.IntentMatchers$4: org.hamcrest.Matcher val$componentMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$4 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$4;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$4: org.hamcrest.Matcher val$componentMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$4 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$4;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has component: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$4: org.hamcrest.Matcher val$componentMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$4 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        android.content.ComponentName $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$4;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$4: org.hamcrest.Matcher val$componentMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$4 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$4: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$5
<android.support.test.espresso.intent.matcher.IntentMatchers$5: org.hamcrest.Matcher val$uriMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$5 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$5;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$5: org.hamcrest.Matcher val$uriMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$5 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$5;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has data: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$5: org.hamcrest.Matcher val$uriMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$5 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        android.net.Uri $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$5;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$5: org.hamcrest.Matcher val$uriMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$5 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$5: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$6
<android.support.test.espresso.intent.matcher.IntentMatchers$6: org.hamcrest.Matcher val$bundleMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$6 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$6;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$6: org.hamcrest.Matcher val$bundleMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$6 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$6;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has extras: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$6: org.hamcrest.Matcher val$bundleMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$6 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        android.os.Bundle $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$6;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$6: org.hamcrest.Matcher val$bundleMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$6 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$6: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$7
<android.support.test.espresso.intent.matcher.IntentMatchers$7: org.hamcrest.Matcher val$typeMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$7 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$7;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$7: org.hamcrest.Matcher val$typeMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$7 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$7;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has type: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$7: org.hamcrest.Matcher val$typeMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$7 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$7;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$7: org.hamcrest.Matcher val$typeMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$7 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$7: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$8
<android.support.test.espresso.intent.matcher.IntentMatchers$8: org.hamcrest.Matcher val$packageMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$8 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$8;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$8: org.hamcrest.Matcher val$packageMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$8 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$8;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has pkg: ");

        $r3 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$8: org.hamcrest.Matcher val$packageMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$8 r0;
        android.content.Intent r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$8;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$8: org.hamcrest.Matcher val$packageMatcher>;

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$8 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$8;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$8: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

android.support.test.espresso.intent.matcher.IntentMatchers$9
<android.support.test.espresso.intent.matcher.IntentMatchers$9: java.lang.String val$packageName>
    void <init>(java.lang.String)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$9 r0;
        java.lang.String r1;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$9;

        r1 := @parameter0: java.lang.String;

        r0.<android.support.test.espresso.intent.matcher.IntentMatchers$9: java.lang.String val$packageName> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$9 r0;
        org.hamcrest.Description r1;
        java.lang.String $r2, $r3, $r4, $r7;
        int $i0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$9;

        r1 := @parameter0: org.hamcrest.Description;

        $r3 = "resolvesTo: ";

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$9: java.lang.String val$packageName>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r7 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        goto label2;

     label1:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>("resolvesTo: ");

     label2:
        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r7);

        return;
    }

    public boolean matchesSafely(android.content.Intent)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$9 r0;
        android.content.Intent r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r7, $r8;
        android.support.test.espresso.intent.ResolvedIntent $r3;
        java.lang.RuntimeException $r4;
        java.lang.Object[] $r5;
        java.lang.Class $r6;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$9;

        r1 := @parameter0: android.content.Intent;

        $z0 = r1 instanceof android.support.test.espresso.intent.ResolvedIntent;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = class "Landroid/support/test/espresso/intent/ResolvedIntent;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("toPackage.matches was given an intent that is not of type %s. This should not happen as this method is only invoked internally by Intents.", $r5);

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = (android.support.test.espresso.intent.ResolvedIntent) r1;

        $r2 = r0.<android.support.test.espresso.intent.matcher.IntentMatchers$9: java.lang.String val$packageName>;

        $z1 = interfaceinvoke $r3.<android.support.test.espresso.intent.ResolvedIntent: boolean canBeHandledBy(java.lang.String)>($r2);

        return $z1;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        android.support.test.espresso.intent.matcher.IntentMatchers$9 r0;
        java.lang.Object r1;
        android.content.Intent $r2;
        boolean $z0;

        r0 := @this: android.support.test.espresso.intent.matcher.IntentMatchers$9;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.content.Intent) r1;

        $z0 = virtualinvoke r0.<android.support.test.espresso.intent.matcher.IntentMatchers$9: boolean matchesSafely(android.content.Intent)>($r2);

        return $z0;
    }

