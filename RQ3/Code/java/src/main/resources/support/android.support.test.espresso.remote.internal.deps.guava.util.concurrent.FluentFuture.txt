android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture
    void <init>()
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        specialinvoke r0.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.GwtFluentFutureCatchingSpecialization: void <init>()>();

        return;
    }

    public static android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture 'from'(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r0;
        boolean $z0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture $r1;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ForwardingFluentFuture r2;

        r0 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        $z0 = r0 instanceof android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        if $z0 == 0 goto label1;

        $r1 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) r0;

        goto label2;

     label1:
        r2 = new android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ForwardingFluentFuture;

        $r1 = r2;

        specialinvoke r2.<android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ForwardingFluentFuture: void <init>(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>(r0);

     label2:
        return $r1;
    }

    public final android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture catching(java.lang.Class, android.support.test.espresso.remote.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0, $r5;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.guava.base.Function r2;
        java.util.concurrent.Executor r3;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.base.Function;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture catching(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Class,android.support.test.espresso.remote.internal.deps.guava.base.Function,java.util.concurrent.Executor)>(r0, r1, r2, r3);

        $r5 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) $r4;

        return $r5;
    }

    public final android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture catchingAsync(java.lang.Class, android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0, $r5;
        java.lang.Class r1;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction r2;
        java.util.concurrent.Executor r3;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r4;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture catchingAsync(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Class,android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, r1, r2, r3);

        $r5 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) $r4;

        return $r5;
    }

    public final android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture withTimeout(long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0, $r4;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ScheduledExecutorService r2;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        r2 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture withTimeout(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>(r0, l0, r1, r2);

        $r4 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) $r3;

        return $r4;
    }

    public final android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture transformAsync(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0, $r4;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction r1;
        java.util.concurrent.Executor r2;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture transformAsync(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, r1, r2);

        $r4 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) $r3;

        return $r4;
    }

    public final android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture transform(android.support.test.espresso.remote.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0, $r4;
        android.support.test.espresso.remote.internal.deps.guava.base.Function r1;
        java.util.concurrent.Executor r2;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r3;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.base.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture transform(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.remote.internal.deps.guava.base.Function,java.util.concurrent.Executor)>(r0, r1, r2);

        $r4 = (android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture) $r3;

        return $r4;
    }

    public final void addCallback(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FutureCallback, java.util.concurrent.Executor)
    {
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture r0;
        android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FutureCallback r1;
        java.util.concurrent.Executor r2;

        r0 := @this: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture;

        r1 := @parameter0: android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FutureCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <android.support.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: void addCallback(android.support.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.remote.internal.deps.guava.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r0, r1, r2);

        return;
    }

