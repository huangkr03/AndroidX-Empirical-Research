android.support.media2.MediaSession2ImplBase
<android.support.media2.MediaSession2ImplBase: java.lang.String DEFAULT_MEDIA_SESSION_TAG_PREFIX>
<android.support.media2.MediaSession2ImplBase: java.lang.String DEFAULT_MEDIA_SESSION_TAG_DELIM>
<android.support.media2.MediaSession2ImplBase: java.lang.String TAG>
<android.support.media2.MediaSession2ImplBase: boolean DEBUG>
<android.support.media2.MediaSession2ImplBase: android.content.Context mContext>
<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>
<android.support.media2.MediaSession2ImplBase: android.os.Handler mHandler>
<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub>
<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor mCallbackExecutor>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>
<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken>
<android.support.media2.MediaSession2ImplBase: android.media.AudioManager mAudioManager>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector$PlayerEventCallback mPlayerEventCallback>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent$PlaylistEventCallback mPlaylistEventCallback>
<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>
<android.support.media2.MediaSession2ImplBase: android.app.PendingIntent mSessionActivity>
<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub>
<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>
<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>
<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper>
    void <init>(android.support.media2.MediaSession2, android.content.Context, java.lang.String, android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent, android.app.PendingIntent, java.util.concurrent.Executor, android.support.media2.MediaSession2$SessionCallback)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2 r1;
        android.content.Context r2;
        java.lang.String r3, r9, r10, r11, $r26, $r37, $r41, $r47;
        android.support.media2.MediaPlayerConnector r4;
        android.support.media2.MediaPlaylistAgent r5;
        android.app.PendingIntent r6;
        java.util.concurrent.Executor r7;
        android.support.media2.MediaSession2$SessionCallback r8;
        java.lang.Object $r12, $r19;
        android.os.HandlerThread $r13, $r14, $r16;
        android.os.Handler $r15, $r32;
        android.os.Looper $r17;
        android.support.media2.MediaSession2Stub $r18, $r27, $r38, $r42;
        android.media.AudioManager $r20;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback $r21;
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback $r22;
        android.support.media2.AudioFocusHandler $r23;
        android.support.media2.SessionToken2 $r24, $r29, $r35, $r39, $r50, $r56;
        android.support.media2.SessionToken2ImplBase $r25, $r36, $r40;
        int $i0, $i1, $i2, $i3;
        android.support.v4.media.session.MediaSessionCompat $r28, $r34, $r49, $r53, $r54, $r55;
        android.support.v4.media.session.MediaSessionCompat$Token $r30;
        android.support.v4.media.MediaBrowserServiceCompat $r31;
        android.support.media2.MediaSessionLegacyStub $r33, $r52;
        java.lang.IllegalArgumentException $r43;
        java.lang.StringBuilder $r44, $r45, $r46;
        java.lang.String[] $r48;
        android.os.Bundle $r51;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.support.media2.MediaPlayerConnector;

        r5 := @parameter4: android.support.media2.MediaPlaylistAgent;

        r6 := @parameter5: android.app.PendingIntent;

        r7 := @parameter6: java.util.concurrent.Executor;

        r8 := @parameter7: android.support.media2.MediaSession2$SessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock> = $r12;

        r0.<android.support.media2.MediaSession2ImplBase: android.content.Context mContext> = r2;

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance> = r1;

        $r13 = new android.os.HandlerThread;

        specialinvoke $r13.<android.os.HandlerThread: void <init>(java.lang.String)>("MediaController2_Thread");

        r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread> = $r13;

        $r14 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r14.<android.os.HandlerThread: void start()>();

        $r15 = new android.os.Handler;

        $r16 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        $r17 = virtualinvoke $r16.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r15.<android.os.Handler: void <init>(android.os.Looper)>($r17);

        r0.<android.support.media2.MediaSession2ImplBase: android.os.Handler mHandler> = $r15;

        $r18 = new android.support.media2.MediaSession2Stub;

        specialinvoke $r18.<android.support.media2.MediaSession2Stub: void <init>(android.support.media2.MediaSession2$MediaSession2Impl)>(r0);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub> = $r18;

        r0.<android.support.media2.MediaSession2ImplBase: android.app.PendingIntent mSessionActivity> = r6;

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback> = r8;

        r0.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor mCallbackExecutor> = r7;

        $r19 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r20 = (android.media.AudioManager) $r19;

        r0.<android.support.media2.MediaSession2ImplBase: android.media.AudioManager mAudioManager> = $r20;

        $r21 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        specialinvoke $r21.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: void <init>(android.support.media2.MediaSession2ImplBase)>(r0);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector$PlayerEventCallback mPlayerEventCallback> = $r21;

        $r22 = new android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        specialinvoke $r22.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: void <init>(android.support.media2.MediaSession2ImplBase)>(r0);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent$PlaylistEventCallback mPlaylistEventCallback> = $r22;

        $r23 = new android.support.media2.AudioFocusHandler;

        specialinvoke $r23.<android.support.media2.AudioFocusHandler: void <init>(android.content.Context,android.support.media2.MediaSession2)>(r2, r1);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler> = $r23;

        r9 = staticinvoke <android.support.media2.MediaSession2ImplBase: java.lang.String getServiceName(android.content.Context,java.lang.String,java.lang.String)>(r2, "android.media.MediaLibraryService2", r3);

        r10 = staticinvoke <android.support.media2.MediaSession2ImplBase: java.lang.String getServiceName(android.content.Context,java.lang.String,java.lang.String)>(r2, "android.media.MediaSessionService2", r3);

        if r10 == null goto label1;

        if r9 == null goto label1;

        $r43 = new java.lang.IllegalArgumentException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ambiguous session type. Multiple session services define the same id=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47);

        throw $r43;

     label1:
        if r9 == null goto label2;

        $r39 = new android.support.media2.SessionToken2;

        $r40 = new android.support.media2.SessionToken2ImplBase;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r41 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r42 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        specialinvoke $r40.<android.support.media2.SessionToken2ImplBase: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.support.media2.IMediaSession2)>($i2, 2, $r41, r9, r3, $r42);

        specialinvoke $r39.<android.support.media2.SessionToken2: void <init>(android.support.media2.SessionToken2$SessionToken2Impl)>($r40);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken> = $r39;

        goto label4;

     label2:
        if r10 == null goto label3;

        $r35 = new android.support.media2.SessionToken2;

        $r36 = new android.support.media2.SessionToken2ImplBase;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r37 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r38 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        specialinvoke $r36.<android.support.media2.SessionToken2ImplBase: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.support.media2.IMediaSession2)>($i1, 1, $r37, r10, r3, $r38);

        specialinvoke $r35.<android.support.media2.SessionToken2: void <init>(android.support.media2.SessionToken2$SessionToken2Impl)>($r36);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken> = $r35;

        goto label4;

     label3:
        $r24 = new android.support.media2.SessionToken2;

        $r25 = new android.support.media2.SessionToken2ImplBase;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r26 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r27 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        specialinvoke $r25.<android.support.media2.SessionToken2ImplBase: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.support.media2.IMediaSession2)>($i0, 0, $r26, null, r3, $r27);

        specialinvoke $r24.<android.support.media2.SessionToken2: void <init>(android.support.media2.SessionToken2$SessionToken2Impl)>($r25);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken> = $r24;

     label4:
        $r48 = newarray (java.lang.String)[2];

        $r48[0] = "android.media.session2.id";

        $r48[1] = r3;

        r11 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(".", $r48);

        $r49 = new android.support.v4.media.session.MediaSessionCompat;

        $r50 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken>;

        $r51 = virtualinvoke $r50.<android.support.media2.SessionToken2: android.os.Bundle toBundle()>();

        specialinvoke $r49.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,java.lang.String,android.os.Bundle)>(r2, r11, $r51);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat> = $r49;

        $r52 = new android.support.media2.MediaSessionLegacyStub;

        specialinvoke $r52.<android.support.media2.MediaSessionLegacyStub: void <init>(android.support.media2.MediaSession2$MediaSession2Impl)>(r0);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub> = $r52;

        $r53 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r53.<android.support.v4.media.session.MediaSessionCompat: void setSessionActivity(android.app.PendingIntent)>(r6);

        $r54 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r54.<android.support.v4.media.session.MediaSessionCompat: void setFlags(int)>(7);

        $r55 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r55.<android.support.v4.media.session.MediaSessionCompat: void setActive(boolean)>(1);

        $r56 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken>;

        $i3 = virtualinvoke $r56.<android.support.media2.SessionToken2: int getType()>();

        if $i3 != 0 goto label5;

        r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub> = null;

        goto label6;

     label5:
        $r29 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken>;

        $r28 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        $r30 = virtualinvoke $r28.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        $r31 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat createLegacyBrowserService(android.content.Context,android.support.media2.SessionToken2,android.support.v4.media.session.MediaSessionCompat$Token)>(r2, $r29, $r30);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub> = $r31;

     label6:
        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void updatePlayer(android.support.media2.MediaPlayerConnector,android.support.media2.MediaPlaylistAgent)>(r4, r5);

        $r34 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        $r33 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub>;

        $r32 = r0.<android.support.media2.MediaSession2ImplBase: android.os.Handler mHandler>;

        virtualinvoke $r34.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>($r33, $r32);

        return;
    }

    public void updatePlayer(android.support.media2.MediaPlayerConnector, android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1, r2, $r6, $r22, $r24, $r27, $r37;
        android.support.media2.MediaPlaylistAgent r3, $r18, $r31, r34, $r38;
        android.support.media2.MediaController2$PlaybackInfo r4, $r8;
        java.lang.Object $r5, $r7, r35, r36;
        boolean $z0, $z1, z2, $z3;
        android.support.media2.SessionPlaylistAgentImplBase $r9, $r25, $r26, $r30;
        android.support.v4.media.AudioAttributesCompat $r10;
        android.support.v4.media.session.MediaSessionCompat $r11, $r13, $r14;
        android.support.media2.MediaSession2ImplBase$1 $r12, r41;
        int $i0, $i1, $i2, i3;
        float $f0, $f1;
        android.support.v4.media.session.PlaybackStateCompat $r15;
        android.support.media2.MediaPlaylistAgent$PlaylistEventCallback $r16, $r19;
        java.util.concurrent.Executor $r17, $r21;
        android.support.media2.MediaPlayerConnector$PlayerEventCallback $r20, $r23;
        android.support.media2.MediaSession2$OnDataSourceMissingHelper $r28, $r29;
        java.lang.IllegalArgumentException $r32;
        java.lang.Throwable $r33, r39;
        android.support.media2.BaseRemoteMediaPlayerConnector r40;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r34 := @parameter1: android.support.media2.MediaPlaylistAgent;

        if r1 != null goto label01;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("player shouldn\'t be null");

        throw $r32;

     label01:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r35 = $r5;

        entermonitor $r5;

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        if r1 != $r6 goto label02;

        $r31 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r34 != $r31 goto label02;

        exitmonitor r35;

        return;

     label02:
        exitmonitor r35;

        goto label03;

     label03:
        r4 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(android.support.media2.MediaPlayerConnector)>(r1);

        $r7 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r36 = $r7;

        entermonitor $r7;

     label04:
        $r8 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>;

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        z2 = $z1;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer> = r1;

        if r34 != null goto label08;

        $r26 = new android.support.media2.SessionPlaylistAgentImplBase;

        $r27 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        specialinvoke $r26.<android.support.media2.SessionPlaylistAgentImplBase: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaPlayerConnector)>(r0, $r27);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent> = $r26;

        $r28 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper>;

        if $r28 == null goto label07;

        $r30 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        $r29 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper>;

        virtualinvoke $r30.<android.support.media2.SessionPlaylistAgentImplBase: void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)>($r29);

     label07:
        r34 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        goto label09;

     label08:
        $r9 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        if $r9 == null goto label09;

        $r25 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        $r24 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        virtualinvoke $r25.<android.support.media2.SessionPlaylistAgentImplBase: void setPlayer(android.support.media2.MediaPlayerConnector)>($r24);

     label09:
        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent> = r34;

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo> = r4;

        $r37 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        if r2 == $r37 goto label11;

        if r2 == null goto label10;

        $r23 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector$PlayerEventCallback mPlayerEventCallback>;

        virtualinvoke r2.<android.support.media2.MediaPlayerConnector: void unregisterPlayerEventCallback(android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r23);

     label10:
        $r22 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r21 = r0.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r20 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector$PlayerEventCallback mPlayerEventCallback>;

        virtualinvoke $r22.<android.support.media2.MediaPlayerConnector: void registerPlayerEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r21, $r20);

     label11:
        $r38 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r3 == $r38 goto label13;

        if r3 == null goto label12;

        $r19 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent$PlaylistEventCallback mPlaylistEventCallback>;

        virtualinvoke r3.<android.support.media2.MediaPlaylistAgent: void unregisterPlaylistEventCallback(android.support.media2.MediaPlaylistAgent$PlaylistEventCallback)>($r19);

     label12:
        $r18 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        $r17 = r0.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        $r16 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent$PlaylistEventCallback mPlaylistEventCallback>;

        virtualinvoke $r18.<android.support.media2.MediaPlaylistAgent: void registerPlaylistEventCallback(java.util.concurrent.Executor,android.support.media2.MediaPlaylistAgent$PlaylistEventCallback)>($r17, $r16);

     label13:
        exitmonitor r36;

     label14:
        goto label17;

     label15:
        $r33 := @caughtexception;

        r39 = $r33;

        exitmonitor r36;

     label16:
        throw r39;

     label17:
        if r2 != null goto label18;

        $r14 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        $r15 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r14.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r15);

        goto label21;

     label18:
        if r34 == r3 goto label19;

        specialinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyAgentUpdatedNotLocked(android.support.media2.MediaPlaylistAgent)>(r3);

     label19:
        if r1 == r2 goto label20;

        specialinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyPlayerUpdatedNotLocked(android.support.media2.MediaPlayerConnector)>(r2);

     label20:
        if z2 == 0 goto label21;

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyPlaybackInfoChangedNotLocked(android.support.media2.MediaController2$PlaybackInfo)>(r4);

     label21:
        $z3 = r1 instanceof android.support.media2.BaseRemoteMediaPlayerConnector;

        if $z3 == 0 goto label22;

        r40 = (android.support.media2.BaseRemoteMediaPlayerConnector) r1;

        $r12 = new android.support.media2.MediaSession2ImplBase$1;

        $i0 = virtualinvoke r40.<android.support.media2.BaseRemoteMediaPlayerConnector: int getVolumeControlType()>();

        $f0 = virtualinvoke r40.<android.support.media2.BaseRemoteMediaPlayerConnector: float getMaxPlayerVolume()>();

        $i1 = (int) $f0;

        $f1 = virtualinvoke r40.<android.support.media2.BaseRemoteMediaPlayerConnector: float getPlayerVolume()>();

        $i2 = (int) $f1;

        specialinvoke $r12.<android.support.media2.MediaSession2ImplBase$1: void <init>(android.support.media2.MediaSession2ImplBase,int,int,int,android.support.media2.BaseRemoteMediaPlayerConnector)>(r0, $i0, $i1, $i2, r40);

        r41 = $r12;

        $r13 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r13.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)>(r41);

        goto label23;

     label22:
        $r10 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>();

        i3 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: int getLegacyStreamType(android.support.v4.media.AudioAttributesCompat)>($r10);

        $r11 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r11.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackToLocal(int)>(i3);

     label23:
        return;

        catch java.lang.Throwable from label04 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.v4.media.AudioAttributesCompat r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, i4, $i6, $i7;
        float $f0, $f1;
        android.support.media2.MediaController2$PlaybackInfo $r3, $r7;
        android.media.AudioManager $r4, $r5, $r6;
        byte b5;
        android.support.media2.BaseRemoteMediaPlayerConnector r8;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>();

        $z0 = r1 instanceof android.support.media2.BaseRemoteMediaPlayerConnector;

        if $z0 != 0 goto label2;

        i4 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: int getLegacyStreamType(android.support.v4.media.AudioAttributesCompat)>(r2);

        b5 = 2;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 21 goto label1;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.media.AudioManager mAudioManager>;

        $z1 = virtualinvoke $r4.<android.media.AudioManager: boolean isVolumeFixed()>();

        if $z1 == 0 goto label1;

        b5 = 0;

     label1:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.media.AudioManager mAudioManager>;

        $i6 = virtualinvoke $r5.<android.media.AudioManager: int getStreamMaxVolume(int)>(i4);

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.media.AudioManager mAudioManager>;

        $i7 = virtualinvoke $r6.<android.media.AudioManager: int getStreamVolume(int)>(i4);

        $r7 = staticinvoke <android.support.media2.MediaController2$PlaybackInfo: android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(int,android.support.v4.media.AudioAttributesCompat,int,int,int)>(1, r2, b5, $i6, $i7);

        return $r7;

     label2:
        r8 = (android.support.media2.BaseRemoteMediaPlayerConnector) r1;

        $i0 = virtualinvoke r8.<android.support.media2.BaseRemoteMediaPlayerConnector: int getVolumeControlType()>();

        $f0 = virtualinvoke r8.<android.support.media2.BaseRemoteMediaPlayerConnector: float getMaxPlayerVolume()>();

        $i1 = (int) $f0;

        $f1 = virtualinvoke r8.<android.support.media2.BaseRemoteMediaPlayerConnector: float getPlayerVolume()>();

        $i2 = (int) $f1;

        $r3 = staticinvoke <android.support.media2.MediaController2$PlaybackInfo: android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(int,android.support.v4.media.AudioAttributesCompat,int,int,int)>(2, r2, $i0, $i1, $i2);

        return $r3;
    }

    private int getLegacyStreamType(android.support.v4.media.AudioAttributesCompat)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.v4.media.AudioAttributesCompat r1;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.v4.media.AudioAttributesCompat;

        if r1 != null goto label1;

        i0 = 3;

        goto label2;

     label1:
        i0 = virtualinvoke r1.<android.support.v4.media.AudioAttributesCompat: int getLegacyStreamType()>();

        if i0 != -2147483648 goto label2;

        i0 = 3;

     label2:
        return i0;
    }

    public void close()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r14;
        android.support.media2.MediaPlayerConnector $r4, $r7;
        android.support.media2.AudioFocusHandler $r5;
        android.support.media2.MediaPlayerConnector$PlayerEventCallback $r6;
        android.support.v4.media.session.MediaSessionCompat $r8;
        android.support.media2.MediaSession2ImplBase$2 $r9;
        android.os.Handler $r10;
        android.os.HandlerThread $r11, $r12, $r13;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        if $r4 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>;

        virtualinvoke $r5.<android.support.media2.AudioFocusHandler: void close()>();

        $r7 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector$PlayerEventCallback mPlayerEventCallback>;

        virtualinvoke $r7.<android.support.media2.MediaPlayerConnector: void unregisterPlayerEventCallback(android.support.media2.MediaPlayerConnector$PlayerEventCallback)>($r6);

        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer> = null;

        $r8 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        virtualinvoke $r8.<android.support.v4.media.session.MediaSessionCompat: void release()>();

        $r9 = new android.support.media2.MediaSession2ImplBase$2;

        specialinvoke $r9.<android.support.media2.MediaSession2ImplBase$2: void <init>(android.support.media2.MediaSession2ImplBase)>(r0);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r9);

        $r10 = r0.<android.support.media2.MediaSession2ImplBase: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r11 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        $z0 = virtualinvoke $r11.<android.os.HandlerThread: boolean isAlive()>();

        if $z0 == 0 goto label5;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label4;

        $r13 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r13.<android.os.HandlerThread: boolean quitSafely()>();

        goto label5;

     label4:
        $r12 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r12.<android.os.HandlerThread: boolean quit()>();

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r1;

     label8:
        throw r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.support.media2.MediaPlayerConnector getPlayer()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaPlayerConnector $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r1;

        return $r3;
    }

    public android.support.media2.MediaPlaylistAgent getPlaylistAgent()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaPlaylistAgent $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r1;

        return $r3;
    }

    public android.support.media2.SessionToken2 getToken()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.SessionToken2 $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionToken2 mSessionToken>;

        return $r1;
    }

    public java.util.List getConnectedControllers()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.util.ArrayList r1, $r2;
        android.support.media2.MediaSession2Stub $r3;
        android.support.media2.ConnectedControllersManager $r4, $r7;
        java.util.List $r5, $r8;
        android.support.media2.MediaSessionLegacyStub $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2Stub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        $r5 = virtualinvoke $r4.<android.support.media2.ConnectedControllersManager: java.util.List getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub>;

        $r7 = virtualinvoke $r6.<android.support.media2.MediaSessionLegacyStub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        $r8 = virtualinvoke $r7.<android.support.media2.ConnectedControllersManager: java.util.List getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        return r1;
    }

    public void setCustomLayout(android.support.media2.MediaSession2$ControllerInfo, java.util.List)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.util.List r2;
        android.support.media2.MediaSession2ImplBase$3 $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.util.List;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("layout shouldn\'t be null");

        throw $r4;

     label2:
        $r3 = new android.support.media2.MediaSession2ImplBase$3;

        specialinvoke $r3.<android.support.media2.MediaSession2ImplBase$3: void <init>(android.support.media2.MediaSession2ImplBase,java.util.List)>(r0, r2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r3);

        return;
    }

    public void setAllowedCommands(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommandGroup2 r2;
        android.support.media2.MediaSession2Stub $r3, $r7;
        android.support.media2.ConnectedControllersManager $r4, $r6, $r8;
        boolean $z0;
        android.support.media2.MediaSessionLegacyStub $r5;
        android.support.media2.MediaSession2ImplBase$4 $r9;
        java.lang.IllegalArgumentException $r10, $r11;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r11;

     label1:
        if r2 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("commands shouldn\'t be null");

        throw $r10;

     label2:
        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2Stub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        $z0 = virtualinvoke $r4.<android.support.media2.ConnectedControllersManager: boolean isConnected(android.support.media2.MediaSession2$ControllerInfo)>(r1);

        if $z0 == 0 goto label3;

        $r7 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r8 = virtualinvoke $r7.<android.support.media2.MediaSession2Stub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r8.<android.support.media2.ConnectedControllersManager: void updateAllowedCommands(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommandGroup2)>(r1, r2);

        $r9 = new android.support.media2.MediaSession2ImplBase$4;

        specialinvoke $r9.<android.support.media2.MediaSession2ImplBase$4: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.SessionCommandGroup2)>(r0, r2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r9);

        goto label4;

     label3:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub>;

        $r6 = virtualinvoke $r5.<android.support.media2.MediaSessionLegacyStub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r6.<android.support.media2.ConnectedControllersManager: void updateAllowedCommands(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.SessionCommandGroup2)>(r1, r2);

     label4:
        return;
    }

    public void sendCustomCommand(android.support.media2.SessionCommand2, android.os.Bundle)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.SessionCommand2 r1;
        android.os.Bundle r2;
        android.support.media2.MediaSession2ImplBase$5 $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.SessionCommand2;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = new android.support.media2.MediaSession2ImplBase$5;

        specialinvoke $r3.<android.support.media2.MediaSession2ImplBase$5: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.SessionCommand2,android.os.Bundle)>(r0, r1, r2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r3);

        return;
    }

    public void sendCustomCommand(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;
        android.support.media2.MediaSession2ImplBase$6 $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r6;

     label2:
        $r5 = new android.support.media2.MediaSession2ImplBase$6;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$6: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>(r0, r2, r3, r4);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r5);

        return;
    }

    public void play()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        android.support.media2.AudioFocusHandler $r5;
        int $i2;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label4;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>;

        $z1 = virtualinvoke $r5.<android.support.media2.AudioFocusHandler: boolean onPlayRequested()>();

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: int getPlayerState()>();

        if $i2 != 0 goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void prepare()>();

     label2:
        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void play()>();

        goto label5;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MS2ImplBase", "play() wouldn\'t be called because of the failure in audio focus");

        goto label5;

     label4:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label5:
        return;
    }

    public void pause()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        android.support.media2.AudioFocusHandler $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>;

        virtualinvoke $r5.<android.support.media2.AudioFocusHandler: void onPauseRequested()>();

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void pause()>();

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void reset()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void reset()>();

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void prepare()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void prepare()>();

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void seekTo(long)
    {
        android.support.media2.MediaSession2ImplBase r0;
        long l0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        l0 := @parameter0: long;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void seekTo(long)>(l0);

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void skipForward()
    {
        android.support.media2.MediaSession2ImplBase r0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        return;
    }

    public void skipBackward()
    {
        android.support.media2.MediaSession2ImplBase r0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        return;
    }

    public void notifyError(int, android.os.Bundle)
    {
        android.support.media2.MediaSession2ImplBase r0;
        int i0;
        android.os.Bundle r1;
        android.support.media2.MediaSession2ImplBase$7 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = new android.support.media2.MediaSession2ImplBase$7;

        specialinvoke $r2.<android.support.media2.MediaSession2ImplBase$7: void <init>(android.support.media2.MediaSession2ImplBase,int,android.os.Bundle)>(r0, i0, r1);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r2);

        return;
    }

    public void notifyRoutesInfoChanged(android.support.media2.MediaSession2$ControllerInfo, java.util.List)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.util.List r2;
        android.support.media2.MediaSession2ImplBase$8 $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: java.util.List;

        $r3 = new android.support.media2.MediaSession2ImplBase$8;

        specialinvoke $r3.<android.support.media2.MediaSession2ImplBase$8: void <init>(android.support.media2.MediaSession2ImplBase,java.util.List)>(r0, r2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r1, $r3);

        return;
    }

    public int getPlayerState()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        int $i1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: int getPlayerState()>();

        return $i1;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return 3;
    }

    public long getCurrentPosition()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        long $l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: boolean isInPlaybackState(android.support.media2.MediaPlayerConnector)>(r1);

        if $z0 == 0 goto label2;

        $l1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: long getCurrentPosition()>();

        return $l1;

     label2:
        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return -1L;
    }

    public long getDuration()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        long $l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: boolean isInPlaybackState(android.support.media2.MediaPlayerConnector)>(r1);

        if $z0 == 0 goto label2;

        $l1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: long getDuration()>();

        return $l1;

     label2:
        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return -1L;
    }

    public long getBufferedPosition()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        long $l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: boolean isInPlaybackState(android.support.media2.MediaPlayerConnector)>(r1);

        if $z0 == 0 goto label2;

        $l1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: long getBufferedPosition()>();

        return $l1;

     label2:
        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return -1L;
    }

    public int getBufferingState()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        int $i1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: int getBufferingState()>();

        return $i1;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return 0;
    }

    public float getPlaybackSpeed()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        float $f0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        $z0 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase: boolean isInPlaybackState(android.support.media2.MediaPlayerConnector)>(r1);

        if $z0 == 0 goto label2;

        $f0 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: float getPlaybackSpeed()>();

        return $f0;

     label2:
        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return 1.0F;
    }

    public void setPlaybackSpeed(float)
    {
        android.support.media2.MediaSession2ImplBase r0;
        float f0;
        android.support.media2.MediaPlayerConnector r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        f0 := @parameter0: float;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlayerConnector mPlayer>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlayerConnector: void setPlaybackSpeed(float)>(f0);

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$OnDataSourceMissingHelper r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.support.media2.SessionPlaylistAgentImplBase $r5, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$OnDataSourceMissingHelper;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("helper shouldn\'t be null");

        throw $r7;

     label1:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper> = r1;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        if $r5 == null goto label3;

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        virtualinvoke $r6.<android.support.media2.SessionPlaylistAgentImplBase: void setOnDataSourceMissingHelper(android.support.media2.MediaSession2$OnDataSourceMissingHelper)>(r1);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void clearOnDataSourceMissingHelper()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.support.media2.SessionPlaylistAgentImplBase $r4, $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$OnDataSourceMissingHelper mDsmHelper> = null;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        if $r4 == null goto label2;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.SessionPlaylistAgentImplBase mSessionPlaylistAgent>;

        virtualinvoke $r5.<android.support.media2.SessionPlaylistAgentImplBase: void clearOnDataSourceMissingHelper()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List getPlaylist()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.util.List $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: java.util.List getPlaylist()>();

        return $r5;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return null;
    }

    public void setPlaylist(java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.util.List r1;
        android.support.media2.MediaMetadata2 r2;
        android.support.media2.MediaPlaylistAgent r3;
        java.lang.Object r4, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list shouldn\'t be null");

        throw $r7;

     label1:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r4 = $r5;

        entermonitor $r5;

        r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r4;

        goto label2;

     label2:
        if r3 == null goto label3;

        virtualinvoke r3.<android.support.media2.MediaPlaylistAgent: void setPlaylist(java.util.List,android.support.media2.MediaMetadata2)>(r1, r2);

        goto label4;

     label3:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r6);

     label4:
        return;
    }

    public void skipToPlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.lang.Object r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r6;

     label1:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r3;

        goto label2;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.support.media2.MediaPlaylistAgent: void skipToPlaylistItem(android.support.media2.MediaItem2)>(r1);

        goto label4;

     label3:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r5);

     label4:
        return;
    }

    public void skipToPreviousItem()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: void skipToPreviousItem()>();

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public void skipToNextItem()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: void skipToNextItem()>();

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public android.support.media2.MediaMetadata2 getPlaylistMetadata()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        android.support.media2.MediaMetadata2 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        return $r5;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return null;
    }

    public void addPlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.lang.Object r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r6;

     label2:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r3;

        goto label3;

     label3:
        if r2 == null goto label4;

        virtualinvoke r2.<android.support.media2.MediaPlaylistAgent: void addPlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        goto label5;

     label4:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label5;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r5);

     label5:
        return;
    }

    public void removePlaylistItem(android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.lang.Object r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaItem2;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r6;

     label1:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r3;

        goto label2;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.support.media2.MediaPlaylistAgent: void removePlaylistItem(android.support.media2.MediaItem2)>(r1);

        goto label4;

     label3:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r5);

     label4:
        return;
    }

    public void replacePlaylistItem(int, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        int i0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.lang.Object r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.media2.MediaItem2;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("item shouldn\'t be null");

        throw $r6;

     label2:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r3;

        goto label3;

     label3:
        if r2 == null goto label4;

        virtualinvoke r2.<android.support.media2.MediaPlaylistAgent: void replacePlaylistItem(int,android.support.media2.MediaItem2)>(i0, r1);

        goto label5;

     label4:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label5;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r5);

     label5:
        return;
    }

    public android.support.media2.MediaItem2 getCurrentMediaItem()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        android.support.media2.MediaItem2 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        return $r5;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return null;
    }

    public void updatePlaylistMetadata(android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaMetadata2 r1;
        android.support.media2.MediaPlaylistAgent r2;
        java.lang.Object r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaMetadata2;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r3;

        goto label1;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<android.support.media2.MediaPlaylistAgent: void updatePlaylistMetadata(android.support.media2.MediaMetadata2)>(r1);

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r5);

     label3:
        return;
    }

    public int getRepeatMode()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        int $i1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: int getRepeatMode()>();

        return $i1;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return 0;
    }

    public void setRepeatMode(int)
    {
        android.support.media2.MediaSession2ImplBase r0;
        int i0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter0: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: void setRepeatMode(int)>(i0);

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public int getShuffleMode()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        int $i1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: int getShuffleMode()>();

        return $i1;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return 0;
    }

    public void setShuffleMode(int)
    {
        android.support.media2.MediaSession2ImplBase r0;
        int i0;
        android.support.media2.MediaPlaylistAgent r1;
        java.lang.Object r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter0: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        exitmonitor r2;

        goto label1;

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: void setShuffleMode(int)>(i0);

        goto label3;

     label2:
        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "API calls after the close()", $r4);

     label3:
        return;
    }

    public android.support.media2.MediaSession2 getInstance()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2 $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>;

        return $r1;
    }

    public android.os.IBinder getSessionBinder()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2Stub $r1;
        android.os.IBinder $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaSession2Stub: android.os.IBinder asBinder()>();

        return $r2;
    }

    public android.content.Context getContext()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.content.Context $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.content.Context mContext>;

        return $r1;
    }

    public java.util.concurrent.Executor getCallbackExecutor()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor mCallbackExecutor>;

        return $r1;
    }

    public android.support.media2.MediaSession2$SessionCallback getCallback()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$SessionCallback $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>;

        return $r1;
    }

    public android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.v4.media.session.MediaSessionCompat $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.session.MediaSessionCompat mSessionCompat>;

        return $r1;
    }

    public android.support.media2.AudioFocusHandler getAudioFocusHandler()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.AudioFocusHandler $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>;

        return $r1;
    }

    public boolean isClosed()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.os.HandlerThread $r1;
        boolean $z0, $z1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.os.HandlerThread mHandlerThread>;

        $z0 = virtualinvoke $r1.<android.os.HandlerThread: boolean isAlive()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r3;
        int i0, $i2, $i3;
        long l1, $l4, $l5, $l6;
        java.lang.Throwable r2, $r9;
        android.support.v4.media.session.PlaybackStateCompat$Builder $r4, $r5, $r6, $r7;
        float $f0;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i2 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getPlayerState()>();

        $i3 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getBufferingState()>();

        i0 = staticinvoke <android.support.media2.MediaUtils2: int convertToPlaybackStateCompatState(int,int)>($i2, $i3);

        l1 = 3670015L;

        $r4 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r4.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>()>();

        $l4 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: long getCurrentPosition()>();

        $f0 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: float getPlaybackSpeed()>();

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5 = virtualinvoke $r4.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>(i0, $l4, $f0, $l5);

        $r6 = virtualinvoke $r5.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long)>(l1);

        $l6 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: long getBufferedPosition()>();

        $r7 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long)>($l6);

        $r8 = virtualinvoke $r7.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

        exitmonitor r1;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.support.media2.MediaController2$PlaybackInfo getPlaybackInfo()
    {
        android.support.media2.MediaSession2ImplBase r0;
        java.lang.Object r1, $r2;
        android.support.media2.MediaController2$PlaybackInfo $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>;

        exitmonitor r1;

        return $r3;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.app.PendingIntent mSessionActivity>;

        return $r1;
    }

    android.support.v4.media.MediaBrowserServiceCompat createLegacyBrowserService(android.content.Context, android.support.media2.SessionToken2, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.content.Context r1;
        android.support.media2.SessionToken2 r2;
        android.support.v4.media.session.MediaSessionCompat$Token r3;
        int $i0;
        android.support.media2.MediaSessionService2LegacyStub $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.media2.SessionToken2;

        r3 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        $i0 = virtualinvoke r2.<android.support.media2.SessionToken2: int getType()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return null;

     label2:
        $r4 = new android.support.media2.MediaSessionService2LegacyStub;

        specialinvoke $r4.<android.support.media2.MediaSessionService2LegacyStub: void <init>(android.content.Context,android.support.media2.MediaSession2$MediaSession2Impl,android.support.v4.media.session.MediaSessionCompat$Token)>(r1, r0, r3);

        return $r4;

     label3:
        return null;
    }

    public android.os.IBinder getLegacyBrowserServiceBinder()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.content.Intent r1, $r3;
        android.support.v4.media.MediaBrowserServiceCompat $r2, $r4;
        android.os.IBinder $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub>;

        if $r2 == null goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.browse.MediaBrowserService");

        r1 = $r3;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.MediaBrowserServiceCompat: android.os.IBinder onBind(android.content.Intent)>(r1);

        return $r5;

     label1:
        return null;
    }

    android.support.v4.media.MediaBrowserServiceCompat getLegacyBrowserService()
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.v4.media.MediaBrowserServiceCompat $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase: android.support.v4.media.MediaBrowserServiceCompat mBrowserServiceLegacyStub>;

        return $r1;
    }

    private static java.lang.String getServiceName(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r6, $r8, $r22, r23;
        android.content.pm.PackageManager r3;
        android.content.Intent r4, $r7;
        java.util.List r5;
        int $i0, i1;
        java.lang.Object $r10, $r12, $r15;
        android.content.pm.ResolveInfo $r11, $r13, $r16;
        boolean $z0;
        android.content.pm.ServiceInfo $r14, $r17;
        java.lang.IllegalArgumentException $r18;
        java.lang.StringBuilder $r19, $r20, $r21;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>(r1);

        r4 = $r7;

        $r8 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r8);

        r5 = virtualinvoke r3.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r4, 128);

        r23 = null;

        if r5 == null goto label5;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (android.content.pm.ResolveInfo) $r10;

        r6 = staticinvoke <android.support.media2.SessionToken2: java.lang.String getSessionId(android.content.pm.ResolveInfo)>($r11);

        if r6 == null goto label4;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, r6);

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (android.content.pm.ResolveInfo) $r12;

        $r14 = $r13.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r14 != null goto label2;

        goto label4;

     label2:
        if r23 == null goto label3;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ambiguous session type. Multiple session services define the same id=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label3:
        $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r16 = (android.content.pm.ResolveInfo) $r15;

        $r17 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r23 = $r17.<android.content.pm.ServiceInfo: java.lang.String name>;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return r23;
    }

    private boolean isInPlaybackState(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: int getPlayerState()>();

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: int getPlayerState()>();

        if $i1 == 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void notifyAgentUpdatedNotLocked(android.support.media2.MediaPlaylistAgent)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.util.List r2, r3;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        android.support.media2.MediaSession2ImplBase$13 $r4;
        android.support.media2.MediaSession2ImplBase$12 $r5;
        android.support.media2.MediaSession2ImplBase$11 $r6;
        android.support.media2.MediaSession2ImplBase$10 $r7;
        android.support.media2.MediaSession2ImplBase$9 $r8;
        android.support.media2.MediaMetadata2 r9, r10;
        android.support.media2.MediaItem2 r11, r12;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        r2 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: java.util.List getPlaylist()>();

        r3 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: java.util.List getPlaylist()>();

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z0 != 0 goto label1;

        $r8 = new android.support.media2.MediaSession2ImplBase$9;

        specialinvoke $r8.<android.support.media2.MediaSession2ImplBase$9: void <init>(android.support.media2.MediaSession2ImplBase,java.util.List)>(r0, r3);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r8);

        goto label2;

     label1:
        r9 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        r10 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        $z1 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>(r9, r10);

        if $z1 != 0 goto label2;

        $r7 = new android.support.media2.MediaSession2ImplBase$10;

        specialinvoke $r7.<android.support.media2.MediaSession2ImplBase$10: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaMetadata2)>(r0, r10);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r7);

     label2:
        r11 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        r12 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        $z2 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>(r11, r12);

        if $z2 != 0 goto label3;

        $r6 = new android.support.media2.MediaSession2ImplBase$11;

        specialinvoke $r6.<android.support.media2.MediaSession2ImplBase$11: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaItem2)>(r0, r12);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r6);

     label3:
        i0 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getRepeatMode()>();

        $i2 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: int getRepeatMode()>();

        if $i2 == i0 goto label4;

        $r5 = new android.support.media2.MediaSession2ImplBase$12;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$12: void <init>(android.support.media2.MediaSession2ImplBase,int)>(r0, i0);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r5);

     label4:
        i1 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getShuffleMode()>();

        $i3 = virtualinvoke r1.<android.support.media2.MediaPlaylistAgent: int getShuffleMode()>();

        if $i3 == i1 goto label5;

        $r4 = new android.support.media2.MediaSession2ImplBase$13;

        specialinvoke $r4.<android.support.media2.MediaSession2ImplBase$13: void <init>(android.support.media2.MediaSession2ImplBase,int)>(r0, i1);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r4);

     label5:
        return;
    }

    private void notifyPlayerUpdatedNotLocked(android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlayerConnector r1;
        long l0, l1, l3;
        int i2, i5;
        android.support.media2.MediaItem2 r2;
        android.support.media2.MediaSession2ImplBase$14 $r3;
        float $f0, f1;
        byte $b4;
        android.support.media2.MediaSession2ImplBase$16 $r4;
        android.support.media2.MediaSession2ImplBase$15 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: long getCurrentPosition()>();

        i2 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getPlayerState()>();

        $r3 = new android.support.media2.MediaSession2ImplBase$14;

        specialinvoke $r3.<android.support.media2.MediaSession2ImplBase$14: void <init>(android.support.media2.MediaSession2ImplBase,long,long,int)>(r0, l0, l1, i2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r3);

        r2 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        if r2 == null goto label1;

        i5 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: int getBufferingState()>();

        l3 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: long getBufferedPosition()>();

        $r5 = new android.support.media2.MediaSession2ImplBase$15;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$15: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaItem2,int,long)>(r0, r2, i5, l3);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r5);

     label1:
        f1 = virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: float getPlaybackSpeed()>();

        $f0 = virtualinvoke r1.<android.support.media2.MediaPlayerConnector: float getPlaybackSpeed()>();

        $b4 = f1 cmpl $f0;

        if $b4 == 0 goto label2;

        $r4 = new android.support.media2.MediaSession2ImplBase$16;

        specialinvoke $r4.<android.support.media2.MediaSession2ImplBase$16: void <init>(android.support.media2.MediaSession2ImplBase,long,long,float)>(r0, l0, l1, f1);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r4);

     label2:
        return;
    }

    void notifyPlaylistChangedOnExecutor(android.support.media2.MediaPlaylistAgent, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1, $r6;
        java.util.List r2;
        android.support.media2.MediaMetadata2 r3;
        java.lang.Object r4, $r5;
        android.support.media2.MediaSession2 $r7;
        android.support.media2.MediaSession2$SessionCallback $r8;
        android.support.media2.MediaSession2ImplBase$17 $r9;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r4 = $r5;

        entermonitor $r5;

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r1 == $r6 goto label1;

        exitmonitor r4;

        return;

     label1:
        exitmonitor r4;

        goto label2;

     label2:
        $r8 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>;

        $r7 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>;

        virtualinvoke $r8.<android.support.media2.MediaSession2$SessionCallback: void onPlaylistChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlaylistAgent,java.util.List,android.support.media2.MediaMetadata2)>($r7, r1, r2, r3);

        $r9 = new android.support.media2.MediaSession2ImplBase$17;

        specialinvoke $r9.<android.support.media2.MediaSession2ImplBase$17: void <init>(android.support.media2.MediaSession2ImplBase,java.util.List,android.support.media2.MediaMetadata2)>(r0, r2, r3);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r9);

        return;
    }

    void notifyPlaylistMetadataChangedOnExecutor(android.support.media2.MediaPlaylistAgent, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1, $r5;
        android.support.media2.MediaMetadata2 r2;
        java.lang.Object r3, $r4;
        android.support.media2.MediaSession2 $r6;
        android.support.media2.MediaSession2$SessionCallback $r7;
        android.support.media2.MediaSession2ImplBase$18 $r8;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r1 == $r5 goto label1;

        exitmonitor r3;

        return;

     label1:
        exitmonitor r3;

        goto label2;

     label2:
        $r7 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>;

        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>;

        virtualinvoke $r7.<android.support.media2.MediaSession2$SessionCallback: void onPlaylistMetadataChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlaylistAgent,android.support.media2.MediaMetadata2)>($r6, r1, r2);

        $r8 = new android.support.media2.MediaSession2ImplBase$18;

        specialinvoke $r8.<android.support.media2.MediaSession2ImplBase$18: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaMetadata2)>(r0, r2);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r8);

        return;
    }

    void notifyRepeatModeChangedOnExecutor(android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1, $r4;
        int i0;
        java.lang.Object r2, $r3;
        android.support.media2.MediaSession2 $r5;
        android.support.media2.MediaSession2$SessionCallback $r6;
        android.support.media2.MediaSession2ImplBase$19 $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r1 == $r4 goto label1;

        exitmonitor r2;

        return;

     label1:
        exitmonitor r2;

        goto label2;

     label2:
        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>;

        virtualinvoke $r6.<android.support.media2.MediaSession2$SessionCallback: void onRepeatModeChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlaylistAgent,int)>($r5, r1, i0);

        $r7 = new android.support.media2.MediaSession2ImplBase$19;

        specialinvoke $r7.<android.support.media2.MediaSession2ImplBase$19: void <init>(android.support.media2.MediaSession2ImplBase,int)>(r0, i0);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r7);

        return;
    }

    void notifyShuffleModeChangedOnExecutor(android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaPlaylistAgent r1, $r4;
        int i0;
        java.lang.Object r2, $r3;
        android.support.media2.MediaSession2 $r5;
        android.support.media2.MediaSession2$SessionCallback $r6;
        android.support.media2.MediaSession2ImplBase$20 $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent mPlaylistAgent>;

        if r1 == $r4 goto label1;

        exitmonitor r2;

        return;

     label1:
        exitmonitor r2;

        goto label2;

     label2:
        $r6 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback mCallback>;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 mInstance>;

        virtualinvoke $r6.<android.support.media2.MediaSession2$SessionCallback: void onShuffleModeChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlaylistAgent,int)>($r5, r1, i0);

        $r7 = new android.support.media2.MediaSession2ImplBase$20;

        specialinvoke $r7.<android.support.media2.MediaSession2ImplBase$20: void <init>(android.support.media2.MediaSession2ImplBase,int)>(r0, i0);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r7);

        return;
    }

    void notifyPlaybackInfoChangedNotLocked(android.support.media2.MediaController2$PlaybackInfo)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaController2$PlaybackInfo r1;
        android.support.media2.MediaSession2ImplBase$21 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaController2$PlaybackInfo;

        $r2 = new android.support.media2.MediaSession2ImplBase$21;

        specialinvoke $r2.<android.support.media2.MediaSession2ImplBase$21: void <init>(android.support.media2.MediaSession2ImplBase,android.support.media2.MediaController2$PlaybackInfo)>(r0, r1);

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r2);

        return;
    }

    void notifyToController(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.MediaSession2ImplBase$NotifyRunnable)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.MediaSession2ImplBase$NotifyRunnable r2;
        android.support.media2.MediaSession2$ControllerCb $r3;
        java.lang.Throwable $r4, $r10, r18, r19;
        java.lang.StringBuilder $r5, $r6, $r8, $r13, $r15, $r16;
        java.lang.String $r7, $r9, $r14, $r17;
        boolean $z0;
        android.support.media2.MediaSession2Stub $r11;
        android.support.media2.ConnectedControllersManager $r12;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase$NotifyRunnable;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: android.support.media2.MediaSession2$ControllerCb getControllerCb()>();

        interfaceinvoke r2.<android.support.media2.MediaSession2ImplBase$NotifyRunnable: void run(android.support.media2.MediaSession2$ControllerCb)>($r3);

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

        r18 = $r10;

        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is gone");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", $r17, r18);

     label4:
        $r11 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r12 = virtualinvoke $r11.<android.support.media2.MediaSession2Stub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r12.<android.support.media2.ConnectedControllersManager: void removeController(android.support.media2.MediaSession2$ControllerInfo)>(r1);

        goto label6;

     label5:
        $r4 := @caughtexception;

        r19 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r7 = virtualinvoke r1.<android.support.media2.MediaSession2$ControllerInfo: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", $r9, r19);

     label6:
        return;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label5;
    }

    void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)
    {
        android.support.media2.MediaSession2ImplBase r0;
        android.support.media2.MediaSession2ImplBase$NotifyRunnable r1;
        java.util.List r2;
        android.support.media2.MediaSession2Stub $r3;
        android.support.media2.ConnectedControllersManager $r4;
        int $i0, i1;
        android.support.media2.MediaSessionLegacyStub $r5;
        java.lang.Object $r6;
        android.support.media2.MediaSession2$ControllerInfo $r7, r8;

        r0 := @this: android.support.media2.MediaSession2ImplBase;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$NotifyRunnable;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2Stub mSession2Stub>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2Stub: android.support.media2.ConnectedControllersManager getConnectedControllersManager()>();

        r2 = virtualinvoke $r4.<android.support.media2.ConnectedControllersManager: java.util.List getConnectedControllers()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (android.support.media2.MediaSession2$ControllerInfo) $r6;

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r7, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSessionLegacyStub mSessionLegacyStub>;

        r8 = virtualinvoke $r5.<android.support.media2.MediaSessionLegacyStub: android.support.media2.MediaSession2$ControllerInfo getControllersForAll()>();

        virtualinvoke r0.<android.support.media2.MediaSession2ImplBase: void notifyToController(android.support.media2.MediaSession2$ControllerInfo,android.support.media2.MediaSession2ImplBase$NotifyRunnable)>(r8, r1);

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MS2ImplBase", 3);

        <android.support.media2.MediaSession2ImplBase: boolean DEBUG> = $z0;

        return;
    }

android.support.media2.MediaSession2ImplBase$1
<android.support.media2.MediaSession2ImplBase$1: android.support.media2.BaseRemoteMediaPlayerConnector val$remotePlayer>
<android.support.media2.MediaSession2ImplBase$1: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int, int, int, android.support.media2.BaseRemoteMediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase$1 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0, i1, i2;
        android.support.media2.BaseRemoteMediaPlayerConnector r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.support.media2.BaseRemoteMediaPlayerConnector;

        r0.<android.support.media2.MediaSession2ImplBase$1: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$1: android.support.media2.BaseRemoteMediaPlayerConnector val$remotePlayer> = r2;

        specialinvoke r0.<android.support.v4.media.VolumeProviderCompat: void <init>(int,int,int)>(i0, i1, i2);

        return;
    }

    public void onSetVolumeTo(int)
    {
        android.support.media2.MediaSession2ImplBase$1 r0;
        int i0;
        float $f0;
        android.support.media2.BaseRemoteMediaPlayerConnector $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$1;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase$1: android.support.media2.BaseRemoteMediaPlayerConnector val$remotePlayer>;

        $f0 = (float) i0;

        virtualinvoke $r1.<android.support.media2.BaseRemoteMediaPlayerConnector: void setPlayerVolume(float)>($f0);

        return;
    }

    public void onAdjustVolume(int)
    {
        android.support.media2.MediaSession2ImplBase$1 r0;
        int i0;
        android.support.media2.BaseRemoteMediaPlayerConnector $r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$1;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase$1: android.support.media2.BaseRemoteMediaPlayerConnector val$remotePlayer>;

        virtualinvoke $r1.<android.support.media2.BaseRemoteMediaPlayerConnector: void adjustPlayerVolume(int)>(i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$10
<android.support.media2.MediaSession2ImplBase$10: android.support.media2.MediaMetadata2 val$newMetadata>
<android.support.media2.MediaSession2ImplBase$10: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase$10 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.MediaMetadata2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$10;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        r0.<android.support.media2.MediaSession2ImplBase$10: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$10: android.support.media2.MediaMetadata2 val$newMetadata> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$10 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaMetadata2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$10;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$10: android.support.media2.MediaMetadata2 val$newMetadata>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaylistMetadataChanged(android.support.media2.MediaMetadata2)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$11
<android.support.media2.MediaSession2ImplBase$11: android.support.media2.MediaItem2 val$newCurrentItem>
<android.support.media2.MediaSession2ImplBase$11: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase$11 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.MediaItem2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$11;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaItem2;

        r0.<android.support.media2.MediaSession2ImplBase$11: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$11: android.support.media2.MediaItem2 val$newCurrentItem> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$11 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaItem2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$11;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$11: android.support.media2.MediaItem2 val$newCurrentItem>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onCurrentMediaItemChanged(android.support.media2.MediaItem2)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$12
<android.support.media2.MediaSession2ImplBase$12: int val$repeatMode>
<android.support.media2.MediaSession2ImplBase$12: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int)
    {
        android.support.media2.MediaSession2ImplBase$12 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$12;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaSession2ImplBase$12: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$12: int val$repeatMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$12 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$12;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$12: int val$repeatMode>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onRepeatModeChanged(int)>($i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$13
<android.support.media2.MediaSession2ImplBase$13: int val$shuffleMode>
<android.support.media2.MediaSession2ImplBase$13: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int)
    {
        android.support.media2.MediaSession2ImplBase$13 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$13;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaSession2ImplBase$13: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$13: int val$shuffleMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$13 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$13;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$13: int val$shuffleMode>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onShuffleModeChanged(int)>($i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$14
<android.support.media2.MediaSession2ImplBase$14: long val$currentTimeMs>
<android.support.media2.MediaSession2ImplBase$14: long val$positionMs>
<android.support.media2.MediaSession2ImplBase$14: int val$playerState>
<android.support.media2.MediaSession2ImplBase$14: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, long, long, int)
    {
        android.support.media2.MediaSession2ImplBase$14 r0;
        android.support.media2.MediaSession2ImplBase r1;
        long l0, l1;
        int i2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$14;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        r0.<android.support.media2.MediaSession2ImplBase$14: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$14: long val$currentTimeMs> = l0;

        r0.<android.support.media2.MediaSession2ImplBase$14: long val$positionMs> = l1;

        r0.<android.support.media2.MediaSession2ImplBase$14: int val$playerState> = i2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$14 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        int $i0;
        long $l1, $l2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$14;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $l2 = r0.<android.support.media2.MediaSession2ImplBase$14: long val$currentTimeMs>;

        $l1 = r0.<android.support.media2.MediaSession2ImplBase$14: long val$positionMs>;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$14: int val$playerState>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlayerStateChanged(long,long,int)>($l2, $l1, $i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$15
<android.support.media2.MediaSession2ImplBase$15: android.support.media2.MediaItem2 val$item>
<android.support.media2.MediaSession2ImplBase$15: int val$bufferingState>
<android.support.media2.MediaSession2ImplBase$15: long val$bufferedPositionMs>
<android.support.media2.MediaSession2ImplBase$15: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaItem2, int, long)
    {
        android.support.media2.MediaSession2ImplBase$15 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.MediaItem2 r2;
        int i0;
        long l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$15;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaItem2;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r0.<android.support.media2.MediaSession2ImplBase$15: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$15: android.support.media2.MediaItem2 val$item> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$15: int val$bufferingState> = i0;

        r0.<android.support.media2.MediaSession2ImplBase$15: long val$bufferedPositionMs> = l1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$15 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        long $l0;
        int $i1;
        android.support.media2.MediaItem2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$15;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$15: android.support.media2.MediaItem2 val$item>;

        $i1 = r0.<android.support.media2.MediaSession2ImplBase$15: int val$bufferingState>;

        $l0 = r0.<android.support.media2.MediaSession2ImplBase$15: long val$bufferedPositionMs>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onBufferingStateChanged(android.support.media2.MediaItem2,int,long)>($r2, $i1, $l0);

        return;
    }

android.support.media2.MediaSession2ImplBase$16
<android.support.media2.MediaSession2ImplBase$16: long val$currentTimeMs>
<android.support.media2.MediaSession2ImplBase$16: long val$positionMs>
<android.support.media2.MediaSession2ImplBase$16: float val$speed>
<android.support.media2.MediaSession2ImplBase$16: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, long, long, float)
    {
        android.support.media2.MediaSession2ImplBase$16 r0;
        android.support.media2.MediaSession2ImplBase r1;
        long l0, l1;
        float f0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$16;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        f0 := @parameter3: float;

        r0.<android.support.media2.MediaSession2ImplBase$16: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$16: long val$currentTimeMs> = l0;

        r0.<android.support.media2.MediaSession2ImplBase$16: long val$positionMs> = l1;

        r0.<android.support.media2.MediaSession2ImplBase$16: float val$speed> = f0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$16 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        float $f0;
        long $l0, $l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$16;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $l1 = r0.<android.support.media2.MediaSession2ImplBase$16: long val$currentTimeMs>;

        $l0 = r0.<android.support.media2.MediaSession2ImplBase$16: long val$positionMs>;

        $f0 = r0.<android.support.media2.MediaSession2ImplBase$16: float val$speed>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaybackSpeedChanged(long,long,float)>($l1, $l0, $f0);

        return;
    }

android.support.media2.MediaSession2ImplBase$17
<android.support.media2.MediaSession2ImplBase$17: java.util.List val$list>
<android.support.media2.MediaSession2ImplBase$17: android.support.media2.MediaMetadata2 val$metadata>
<android.support.media2.MediaSession2ImplBase$17: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase$17 r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.util.List r2;
        android.support.media2.MediaMetadata2 r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$17;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        r0.<android.support.media2.MediaSession2ImplBase$17: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$17: java.util.List val$list> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$17: android.support.media2.MediaMetadata2 val$metadata> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$17 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaMetadata2 $r2;
        java.util.List $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$17;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$17: java.util.List val$list>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$17: android.support.media2.MediaMetadata2 val$metadata>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaylistChanged(java.util.List,android.support.media2.MediaMetadata2)>($r3, $r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$18
<android.support.media2.MediaSession2ImplBase$18: android.support.media2.MediaMetadata2 val$metadata>
<android.support.media2.MediaSession2ImplBase$18: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase$18 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.MediaMetadata2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$18;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        r0.<android.support.media2.MediaSession2ImplBase$18: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$18: android.support.media2.MediaMetadata2 val$metadata> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$18 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaMetadata2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$18;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$18: android.support.media2.MediaMetadata2 val$metadata>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaylistMetadataChanged(android.support.media2.MediaMetadata2)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$19
<android.support.media2.MediaSession2ImplBase$19: int val$repeatMode>
<android.support.media2.MediaSession2ImplBase$19: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int)
    {
        android.support.media2.MediaSession2ImplBase$19 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$19;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaSession2ImplBase$19: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$19: int val$repeatMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$19 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$19;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$19: int val$repeatMode>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onRepeatModeChanged(int)>($i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$2
<android.support.media2.MediaSession2ImplBase$2: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase)
    {
        android.support.media2.MediaSession2ImplBase$2 r0;
        android.support.media2.MediaSession2ImplBase r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$2;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r0.<android.support.media2.MediaSession2ImplBase$2: android.support.media2.MediaSession2ImplBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$2 r0;
        android.support.media2.MediaSession2$ControllerCb r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$2;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onDisconnected()>();

        return;
    }

android.support.media2.MediaSession2ImplBase$20
<android.support.media2.MediaSession2ImplBase$20: int val$shuffleMode>
<android.support.media2.MediaSession2ImplBase$20: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int)
    {
        android.support.media2.MediaSession2ImplBase$20 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$20;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        r0.<android.support.media2.MediaSession2ImplBase$20: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$20: int val$shuffleMode> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$20 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$20;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$20: int val$shuffleMode>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onShuffleModeChanged(int)>($i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$21
<android.support.media2.MediaSession2ImplBase$21: android.support.media2.MediaController2$PlaybackInfo val$info>
<android.support.media2.MediaSession2ImplBase$21: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.MediaController2$PlaybackInfo)
    {
        android.support.media2.MediaSession2ImplBase$21 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.MediaController2$PlaybackInfo r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$21;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.MediaController2$PlaybackInfo;

        r0.<android.support.media2.MediaSession2ImplBase$21: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$21: android.support.media2.MediaController2$PlaybackInfo val$info> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$21 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaController2$PlaybackInfo $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$21;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$21: android.support.media2.MediaController2$PlaybackInfo val$info>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaybackInfoChanged(android.support.media2.MediaController2$PlaybackInfo)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$3
<android.support.media2.MediaSession2ImplBase$3: java.util.List val$layout>
<android.support.media2.MediaSession2ImplBase$3: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, java.util.List)
    {
        android.support.media2.MediaSession2ImplBase$3 r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$3;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: java.util.List;

        r0.<android.support.media2.MediaSession2ImplBase$3: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$3: java.util.List val$layout> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$3 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        java.util.List $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$3;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$3: java.util.List val$layout>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onCustomLayoutChanged(java.util.List)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$4
<android.support.media2.MediaSession2ImplBase$4: android.support.media2.SessionCommandGroup2 val$commands>
<android.support.media2.MediaSession2ImplBase$4: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.MediaSession2ImplBase$4 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.SessionCommandGroup2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$4;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        r0.<android.support.media2.MediaSession2ImplBase$4: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$4: android.support.media2.SessionCommandGroup2 val$commands> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$4 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.SessionCommandGroup2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$4;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$4: android.support.media2.SessionCommandGroup2 val$commands>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onAllowedCommandsChanged(android.support.media2.SessionCommandGroup2)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$5
<android.support.media2.MediaSession2ImplBase$5: android.support.media2.SessionCommand2 val$command>
<android.support.media2.MediaSession2ImplBase$5: android.os.Bundle val$args>
<android.support.media2.MediaSession2ImplBase$5: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.SessionCommand2, android.os.Bundle)
    {
        android.support.media2.MediaSession2ImplBase$5 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$5;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r0.<android.support.media2.MediaSession2ImplBase$5: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$5: android.support.media2.SessionCommand2 val$command> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$5: android.os.Bundle val$args> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$5 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.Bundle $r2;
        android.support.media2.SessionCommand2 $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$5;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$5: android.support.media2.SessionCommand2 val$command>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$5: android.os.Bundle val$args>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>($r3, $r2, null);

        return;
    }

android.support.media2.MediaSession2ImplBase$6
<android.support.media2.MediaSession2ImplBase$6: android.support.media2.SessionCommand2 val$command>
<android.support.media2.MediaSession2ImplBase$6: android.os.Bundle val$args>
<android.support.media2.MediaSession2ImplBase$6: android.os.ResultReceiver val$receiver>
<android.support.media2.MediaSession2ImplBase$6: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, android.support.media2.SessionCommand2, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.media2.MediaSession2ImplBase$6 r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.SessionCommand2 r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$6;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        r0.<android.support.media2.MediaSession2ImplBase$6: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$6: android.support.media2.SessionCommand2 val$command> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$6: android.os.Bundle val$args> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$6: android.os.ResultReceiver val$receiver> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$6 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.ResultReceiver $r2;
        android.os.Bundle $r3;
        android.support.media2.SessionCommand2 $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$6;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$6: android.support.media2.SessionCommand2 val$command>;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$6: android.os.Bundle val$args>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$6: android.os.ResultReceiver val$receiver>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onCustomCommand(android.support.media2.SessionCommand2,android.os.Bundle,android.os.ResultReceiver)>($r4, $r3, $r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$7
<android.support.media2.MediaSession2ImplBase$7: int val$errorCode>
<android.support.media2.MediaSession2ImplBase$7: android.os.Bundle val$extras>
<android.support.media2.MediaSession2ImplBase$7: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, int, android.os.Bundle)
    {
        android.support.media2.MediaSession2ImplBase$7 r0;
        android.support.media2.MediaSession2ImplBase r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$7;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r0.<android.support.media2.MediaSession2ImplBase$7: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$7: int val$errorCode> = i0;

        r0.<android.support.media2.MediaSession2ImplBase$7: android.os.Bundle val$extras> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$7 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.os.Bundle $r2;
        int $i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$7;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$7: int val$errorCode>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$7: android.os.Bundle val$extras>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onError(int,android.os.Bundle)>($i0, $r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$8
<android.support.media2.MediaSession2ImplBase$8: java.util.List val$routes>
<android.support.media2.MediaSession2ImplBase$8: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, java.util.List)
    {
        android.support.media2.MediaSession2ImplBase$8 r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$8;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: java.util.List;

        r0.<android.support.media2.MediaSession2ImplBase$8: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$8: java.util.List val$routes> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$8 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        java.util.List $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$8;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$8: java.util.List val$routes>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onRoutesInfoChanged(java.util.List)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$9
<android.support.media2.MediaSession2ImplBase$9: java.util.List val$newPlaylist>
<android.support.media2.MediaSession2ImplBase$9: android.support.media2.MediaSession2ImplBase this$0>
    void <init>(android.support.media2.MediaSession2ImplBase, java.util.List)
    {
        android.support.media2.MediaSession2ImplBase$9 r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.util.List r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$9;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: java.util.List;

        r0.<android.support.media2.MediaSession2ImplBase$9: android.support.media2.MediaSession2ImplBase this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$9: java.util.List val$newPlaylist> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$9 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaSession2ImplBase $r2;
        java.util.List $r3;
        android.support.media2.MediaMetadata2 $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$9;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$9: java.util.List val$newPlaylist>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$9: android.support.media2.MediaSession2ImplBase this$0>;

        $r4 = virtualinvoke $r2.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaylistChanged(java.util.List,android.support.media2.MediaMetadata2)>($r3, $r4);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: android.support.media2.MediaItem2 val$item>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 r1;
        android.support.media2.MediaItem2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1;

        r2 := @parameter1: android.support.media2.MediaItem2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 this$1> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: android.support.media2.MediaItem2 val$item> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaItem2 $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: android.support.media2.MediaItem2 val$item>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onCurrentMediaItemChanged(android.support.media2.MediaItem2)>($r2);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.DataSourceDesc2 val$dsd>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaPlayerConnector val$player>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.DataSourceDesc2, android.support.media2.MediaSession2ImplBase, android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaSession2ImplBase r3;
        android.support.media2.MediaPlayerConnector r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 := @parameter2: android.support.media2.MediaSession2ImplBase;

        r4 := @parameter3: android.support.media2.MediaPlayerConnector;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.DataSourceDesc2 val$dsd> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaPlayerConnector val$player> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 r0;
        android.support.media2.DataSourceDesc2 $r1, $r2, $r14;
        android.support.media2.MediaSession2ImplBase $r3, $r5, $r7, $r11;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback $r4;
        android.support.media2.MediaSession2$SessionCallback $r6;
        android.support.media2.MediaSession2 $r8;
        android.support.media2.MediaPlayerConnector $r9;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1 $r10;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.String $r16;
        android.support.media2.MediaItem2 r17;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.DataSourceDesc2 val$dsd>;

        if $r1 != null goto label1;

        r17 = null;

        goto label2;

     label1:
        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.DataSourceDesc2 val$dsd>;

        r17 = virtualinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaItem2 getMediaItem(android.support.media2.MediaSession2ImplBase,android.support.media2.DataSourceDesc2)>($r3, $r2);

        if r17 != null goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot obtain media item from the dsd=");

        $r14 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.DataSourceDesc2 val$dsd>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MS2ImplBase", $r16);

        return;

     label2:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session>;

        $r6 = virtualinvoke $r5.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r7 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session>;

        $r8 = virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r9 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaPlayerConnector val$player>;

        virtualinvoke $r6.<android.support.media2.MediaSession2$SessionCallback: void onCurrentMediaItemChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,android.support.media2.MediaItem2)>($r8, $r9, r17);

        $r11 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: android.support.media2.MediaSession2ImplBase val$session>;

        $r10 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1;

        specialinvoke $r10.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1,android.support.media2.MediaItem2)>(r0, r17);

        virtualinvoke $r11.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r10);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 $r2, $r5;
        android.support.media2.MediaSession2ImplBase $r3, $r6;
        java.util.List $r4;
        android.support.media2.MediaMetadata2 $r7;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 this$1>;

        $r3 = $r2.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2ImplBase: java.util.List getPlaylist()>();

        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 this$1>;

        $r6 = $r5.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r7 = virtualinvoke $r6.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaMetadata2 getPlaylistMetadata()>();

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaylistChanged(java.util.List,android.support.media2.MediaMetadata2)>($r4, $r7);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.DataSourceDesc2 val$dsd>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaPlayerConnector val$mpb>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.MediaSession2ImplBase, android.support.media2.DataSourceDesc2, android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.MediaSession2ImplBase r2;
        android.support.media2.DataSourceDesc2 r3;
        android.support.media2.MediaPlayerConnector r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase;

        r3 := @parameter2: android.support.media2.DataSourceDesc2;

        r4 := @parameter3: android.support.media2.MediaPlayerConnector;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.DataSourceDesc2 val$dsd> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaPlayerConnector val$mpb> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 r0;
        android.support.media2.MediaItem2 r1, $r6;
        long l0, l1;
        android.support.media2.DataSourceDesc2 $r2;
        android.support.media2.MediaSession2ImplBase $r3, $r5, $r7, $r13, $r25, $r27;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback $r4;
        boolean $z0, $z1;
        byte $b2, $b3;
        android.support.media2.MediaMetadata2$Builder $r8, $r9, $r11, $r21, $r22;
        java.lang.String $r10, $r20;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1 $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19;
        android.support.media2.MediaMetadata2 r23, r24;
        android.support.media2.MediaSession2$SessionCallback $r26;
        android.support.media2.MediaSession2 $r28;
        android.support.media2.MediaPlayerConnector $r29;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.DataSourceDesc2 val$dsd>;

        r1 = virtualinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaItem2 getMediaItem(android.support.media2.MediaSession2ImplBase,android.support.media2.DataSourceDesc2)>($r3, $r2);

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r6 = virtualinvoke $r5.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaItem2 getCurrentMediaItem()>();

        $z0 = virtualinvoke r1.<android.support.media2.MediaItem2: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label7;

        $r7 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        l0 = virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: long getDuration()>();

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label2;

        return;

     label2:
        r23 = virtualinvoke r1.<android.support.media2.MediaItem2: android.support.media2.MediaMetadata2 getMetadata()>();

        if r23 == null goto label5;

        $z1 = virtualinvoke r23.<android.support.media2.MediaMetadata2: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z1 != 0 goto label3;

        $r21 = new android.support.media2.MediaMetadata2$Builder;

        specialinvoke $r21.<android.support.media2.MediaMetadata2$Builder: void <init>(android.support.media2.MediaMetadata2)>(r23);

        $r22 = virtualinvoke $r21.<android.support.media2.MediaMetadata2$Builder: android.support.media2.MediaMetadata2$Builder putLong(java.lang.String,long)>("android.media.metadata.DURATION", l0);

        r24 = virtualinvoke $r22.<android.support.media2.MediaMetadata2$Builder: android.support.media2.MediaMetadata2 build()>();

        goto label6;

     label3:
        l1 = virtualinvoke r23.<android.support.media2.MediaMetadata2: long getLong(java.lang.String)>("android.media.metadata.DURATION");

        $b3 = l0 cmp l1;

        if $b3 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duration mismatch for an item. duration from player=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration from metadata=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". May be a timing issue?");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MS2ImplBase", $r20);

     label4:
        r24 = null;

        goto label6;

     label5:
        $r8 = new android.support.media2.MediaMetadata2$Builder;

        specialinvoke $r8.<android.support.media2.MediaMetadata2$Builder: void <init>()>();

        $r9 = virtualinvoke $r8.<android.support.media2.MediaMetadata2$Builder: android.support.media2.MediaMetadata2$Builder putLong(java.lang.String,long)>("android.media.metadata.DURATION", l0);

        $r10 = virtualinvoke r1.<android.support.media2.MediaItem2: java.lang.String getMediaId()>();

        $r11 = virtualinvoke $r9.<android.support.media2.MediaMetadata2$Builder: android.support.media2.MediaMetadata2$Builder putString(java.lang.String,java.lang.String)>("android.media.metadata.MEDIA_ID", $r10);

        r24 = virtualinvoke $r11.<android.support.media2.MediaMetadata2$Builder: android.support.media2.MediaMetadata2 build()>();

     label6:
        if r24 == null goto label7;

        virtualinvoke r1.<android.support.media2.MediaItem2: void setMetadata(android.support.media2.MediaMetadata2)>(r24);

        $r13 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r12 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1;

        specialinvoke $r12.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2)>(r0);

        virtualinvoke $r13.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r12);

     label7:
        $r25 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r26 = virtualinvoke $r25.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r27 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaSession2ImplBase val$session>;

        $r28 = virtualinvoke $r27.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r29 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: android.support.media2.MediaPlayerConnector val$mpb>;

        virtualinvoke $r26.<android.support.media2.MediaSession2$SessionCallback: void onMediaPrepared(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,android.support.media2.MediaItem2)>($r28, $r29, r1);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        long $l0, $l1;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 $r2, $r4;
        android.support.media2.MediaPlayerConnector $r3;
        int $i2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 this$1>;

        $r3 = $r2.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaPlayerConnector val$player>;

        $l1 = virtualinvoke $r3.<android.support.media2.MediaPlayerConnector: long getCurrentPosition()>();

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 this$1>;

        $i2 = $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: int val$state>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlayerStateChanged(long,long,int)>($l0, $l1, $i2);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: int val$state>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaPlayerConnector val$player>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.MediaSession2ImplBase, int, android.support.media2.MediaPlayerConnector)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.MediaSession2ImplBase r2;
        int i0;
        android.support.media2.MediaPlayerConnector r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase;

        i0 := @parameter2: int;

        r3 := @parameter3: android.support.media2.MediaPlayerConnector;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: int val$state> = i0;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaPlayerConnector val$player> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 r0;
        android.support.media2.MediaController2$PlaybackInfo r1, r2;
        java.lang.Object r3, $r16;
        android.support.media2.MediaSession2ImplBase $r4, $r6, $r8, $r12, $r14, $r15, $r17, $r18, $r21;
        int $i0, $i1;
        android.support.media2.AudioFocusHandler $r5;
        android.support.media2.MediaSession2$SessionCallback $r7;
        android.support.media2.MediaSession2 $r9;
        android.support.media2.MediaPlayerConnector $r10, $r13;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1 $r11;
        android.support.v4.media.AudioAttributesCompat $r19, $r20;
        boolean $z0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r5 = $r4.<android.support.media2.MediaSession2ImplBase: android.support.media2.AudioFocusHandler mAudioFocusHandler>;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: int val$state>;

        virtualinvoke $r5.<android.support.media2.AudioFocusHandler: void onPlayerStateChanged(int)>($i0);

        $r6 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r7 = virtualinvoke $r6.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r8 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r9 = virtualinvoke $r8.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r10 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaPlayerConnector val$player>;

        $i1 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: int val$state>;

        virtualinvoke $r7.<android.support.media2.MediaSession2$SessionCallback: void onPlayerStateChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,int)>($r9, $r10, $i1);

        $r12 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r11 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1;

        specialinvoke $r11.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3)>(r0);

        virtualinvoke $r12.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r11);

        $r14 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r13 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaPlayerConnector val$player>;

        r1 = virtualinvoke $r14.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo createPlaybackInfo(android.support.media2.MediaPlayerConnector)>($r13);

        $r15 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r16 = $r15.<android.support.media2.MediaSession2ImplBase: java.lang.Object mLock>;

        r3 = $r16;

        entermonitor $r16;

        $r17 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        r2 = $r17.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo>;

        $r18 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        $r18.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaController2$PlaybackInfo mPlaybackInfo> = r1;

        exitmonitor r3;

        goto label1;

     label1:
        $r19 = virtualinvoke r1.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>();

        $r20 = virtualinvoke r2.<android.support.media2.MediaController2$PlaybackInfo: android.support.v4.media.AudioAttributesCompat getAudioAttributes()>();

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r19, $r20);

        if $z0 != 0 goto label2;

        $r21 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: android.support.media2.MediaSession2ImplBase val$session>;

        virtualinvoke $r21.<android.support.media2.MediaSession2ImplBase: void notifyPlaybackInfoChangedNotLocked(android.support.media2.MediaController2$PlaybackInfo)>(r1);

     label2:
        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaItem2 val$item>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4, android.support.media2.MediaItem2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 r1;
        android.support.media2.MediaItem2 r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4;

        r2 := @parameter1: android.support.media2.MediaItem2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 this$1> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaItem2 val$item> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 $r2, $r3;
        android.support.media2.MediaPlayerConnector $r4;
        android.support.media2.MediaItem2 $r5;
        int $i0;
        long $l1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaItem2 val$item>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 this$1>;

        $i0 = $r2.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: int val$state>;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 this$1>;

        $r4 = $r3.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaPlayerConnector val$mpb>;

        $l1 = virtualinvoke $r4.<android.support.media2.MediaPlayerConnector: long getBufferedPosition()>();

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onBufferingStateChanged(android.support.media2.MediaItem2,int,long)>($r5, $i0, $l1);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.DataSourceDesc2 val$dsd>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaPlayerConnector val$mpb>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: int val$state>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.MediaSession2ImplBase, android.support.media2.DataSourceDesc2, android.support.media2.MediaPlayerConnector, int)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.MediaSession2ImplBase r2;
        android.support.media2.DataSourceDesc2 r3;
        android.support.media2.MediaPlayerConnector r4;
        int i0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase;

        r3 := @parameter2: android.support.media2.DataSourceDesc2;

        r4 := @parameter3: android.support.media2.MediaPlayerConnector;

        i0 := @parameter4: int;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.DataSourceDesc2 val$dsd> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaPlayerConnector val$mpb> = r4;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: int val$state> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 r0;
        android.support.media2.MediaItem2 r1;
        android.support.media2.DataSourceDesc2 $r2;
        android.support.media2.MediaSession2ImplBase $r3, $r5, $r7, $r11;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback $r4;
        android.support.media2.MediaSession2$SessionCallback $r6;
        android.support.media2.MediaSession2 $r8;
        int $i0;
        android.support.media2.MediaPlayerConnector $r9;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1 $r10;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session>;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.DataSourceDesc2 val$dsd>;

        r1 = virtualinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaItem2 getMediaItem(android.support.media2.MediaSession2ImplBase,android.support.media2.DataSourceDesc2)>($r3, $r2);

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session>;

        $r6 = virtualinvoke $r5.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r7 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session>;

        $r8 = virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r9 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaPlayerConnector val$mpb>;

        $i0 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: int val$state>;

        virtualinvoke $r6.<android.support.media2.MediaSession2$SessionCallback: void onBufferingStateChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,android.support.media2.MediaItem2,int)>($r8, $r9, r1, $i0);

        $r11 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: android.support.media2.MediaSession2ImplBase val$session>;

        $r10 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1;

        specialinvoke $r10.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4,android.support.media2.MediaItem2)>(r0, r1);

        virtualinvoke $r11.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r10);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        long $l0, $l1;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 $r2, $r4;
        android.support.media2.MediaSession2ImplBase $r3;
        float $f0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 this$1>;

        $r3 = $r2.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session>;

        $l1 = virtualinvoke $r3.<android.support.media2.MediaSession2ImplBase: long getCurrentPosition()>();

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 this$1>;

        $f0 = $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: float val$speed>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onPlaybackSpeedChanged(long,long,float)>($l0, $l1, $f0);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaPlayerConnector val$mpb>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: float val$speed>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.MediaSession2ImplBase, android.support.media2.MediaPlayerConnector, float)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.MediaSession2ImplBase r2;
        android.support.media2.MediaPlayerConnector r3;
        float f0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        f0 := @parameter3: float;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaPlayerConnector val$mpb> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: float val$speed> = f0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 r0;
        android.support.media2.MediaSession2ImplBase $r1, $r3, $r7;
        android.support.media2.MediaSession2$SessionCallback $r2;
        android.support.media2.MediaSession2 $r4;
        float $f0;
        android.support.media2.MediaPlayerConnector $r5;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1 $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaPlayerConnector val$mpb>;

        $f0 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: float val$speed>;

        virtualinvoke $r2.<android.support.media2.MediaSession2$SessionCallback: void onPlaybackSpeedChanged(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,float)>($r4, $r5, $f0);

        $r7 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: android.support.media2.MediaSession2ImplBase val$session>;

        $r6 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1;

        specialinvoke $r6.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5)>(r0);

        virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r6);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 this$1>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 r1;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run(android.support.media2.MediaSession2$ControllerCb) throws android.os.RemoteException
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1 r0;
        android.support.media2.MediaSession2$ControllerCb r1;
        long $l0, $l1, $l2;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 $r2, $r4;
        android.support.media2.MediaSession2ImplBase $r3;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerCb;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 this$1>;

        $r3 = $r2.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session>;

        $l1 = virtualinvoke $r3.<android.support.media2.MediaSession2ImplBase: long getCurrentPosition()>();

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 this$1>;

        $l2 = $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: long val$position>;

        virtualinvoke r1.<android.support.media2.MediaSession2$ControllerCb: void onSeekCompleted(long,long,long)>($l0, $l1, $l2);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaPlayerConnector val$mpb>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: long val$position>
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0>
    void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback, android.support.media2.MediaSession2ImplBase, android.support.media2.MediaPlayerConnector, long)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 r0;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r1;
        android.support.media2.MediaSession2ImplBase r2;
        android.support.media2.MediaPlayerConnector r3;
        long l0;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r2 := @parameter1: android.support.media2.MediaSession2ImplBase;

        r3 := @parameter2: android.support.media2.MediaPlayerConnector;

        l0 := @parameter3: long;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback this$0> = r1;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session> = r2;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaPlayerConnector val$mpb> = r3;

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: long val$position> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 r0;
        android.support.media2.MediaSession2ImplBase $r1, $r3, $r7;
        android.support.media2.MediaSession2$SessionCallback $r2;
        android.support.media2.MediaSession2 $r4;
        long $l0;
        android.support.media2.MediaPlayerConnector $r5;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1 $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6;

        $r1 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session>;

        $r2 = virtualinvoke $r1.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session>;

        $r4 = virtualinvoke $r3.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaSession2 getInstance()>();

        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaPlayerConnector val$mpb>;

        $l0 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: long val$position>;

        virtualinvoke $r2.<android.support.media2.MediaSession2$SessionCallback: void onSeekCompleted(android.support.media2.MediaSession2,android.support.media2.MediaPlayerConnector,long)>($r4, $r5, $l0);

        $r7 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: android.support.media2.MediaSession2ImplBase val$session>;

        $r6 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1;

        specialinvoke $r6.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6)>(r0);

        virtualinvoke $r7.<android.support.media2.MediaSession2ImplBase: void notifyToAllControllers(android.support.media2.MediaSession2ImplBase$NotifyRunnable)>($r6);

        return;
    }

android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback
<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: java.lang.ref.WeakReference mSession>
    void <init>(android.support.media2.MediaSession2ImplBase)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        specialinvoke r0.<android.support.media2.MediaPlayerConnector$PlayerEventCallback: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: java.lang.ref.WeakReference mSession> = $r2;

        return;
    }

    public void onCurrentDataSourceChanged(android.support.media2.MediaPlayerConnector, android.support.media2.DataSourceDesc2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaSession2ImplBase r3;
        java.util.concurrent.Executor $r4;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r3 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r3.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r5 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$1: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.DataSourceDesc2,android.support.media2.MediaSession2ImplBase,android.support.media2.MediaPlayerConnector)>(r0, r2, r3, r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public void onMediaPrepared(android.support.media2.MediaPlayerConnector, android.support.media2.DataSourceDesc2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaSession2ImplBase r3;
        java.util.concurrent.Executor $r4;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r3 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = virtualinvoke r3.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r5 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$2: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.MediaSession2ImplBase,android.support.media2.DataSourceDesc2,android.support.media2.MediaPlayerConnector)>(r0, r3, r2, r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public void onPlayerStateChanged(android.support.media2.MediaPlayerConnector, int)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        int i0;
        android.support.media2.MediaSession2ImplBase r2;
        java.util.concurrent.Executor $r3;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3 $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r4 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3;

        specialinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$3: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.MediaSession2ImplBase,int,android.support.media2.MediaPlayerConnector)>(r0, r2, i0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void onBufferingStateChanged(android.support.media2.MediaPlayerConnector, android.support.media2.DataSourceDesc2, int)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        android.support.media2.DataSourceDesc2 r2;
        int i0;
        android.support.media2.MediaSession2ImplBase r3;
        java.util.concurrent.Executor $r4;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4 $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        i0 := @parameter2: int;

        r3 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r3 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = virtualinvoke r3.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r5 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4;

        specialinvoke $r5.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$4: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.MediaSession2ImplBase,android.support.media2.DataSourceDesc2,android.support.media2.MediaPlayerConnector,int)>(r0, r3, r2, r1, i0);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public void onPlaybackSpeedChanged(android.support.media2.MediaPlayerConnector, float)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        float f0;
        android.support.media2.MediaSession2ImplBase r2;
        java.util.concurrent.Executor $r3;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5 $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        f0 := @parameter1: float;

        r2 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r4 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5;

        specialinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$5: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.MediaSession2ImplBase,android.support.media2.MediaPlayerConnector,float)>(r0, r2, r1, f0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void onSeekCompleted(android.support.media2.MediaPlayerConnector, long)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaPlayerConnector r1;
        long l0;
        android.support.media2.MediaSession2ImplBase r2;
        java.util.concurrent.Executor $r3;
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6 $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlayerConnector;

        l0 := @parameter1: long;

        r2 = specialinvoke r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: android.support.media2.MediaSession2ImplBase getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.support.media2.MediaSession2ImplBase: java.util.concurrent.Executor getCallbackExecutor()>();

        $r4 = new android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6;

        specialinvoke $r4.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback$6: void <init>(android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback,android.support.media2.MediaSession2ImplBase,android.support.media2.MediaPlayerConnector,long)>(r0, r2, r1, l0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private android.support.media2.MediaSession2ImplBase getSession()
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        $r2 = r0.<android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback: java.lang.ref.WeakReference mSession>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.support.media2.MediaSession2ImplBase) $r3;

        if r1 != null goto label1;

        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "Session is closed", $r4);

     label1:
        return r1;
    }

    android.support.media2.MediaItem2 getMediaItem(android.support.media2.MediaSession2ImplBase, android.support.media2.DataSourceDesc2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback r0;
        android.support.media2.MediaSession2ImplBase r1;
        android.support.media2.DataSourceDesc2 r2;
        android.support.media2.MediaPlaylistAgent r3;
        android.support.media2.MediaItem2 r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.util.NoSuchElementException $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlayerEventCallback;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        r2 := @parameter1: android.support.media2.DataSourceDesc2;

        r3 = virtualinvoke r1.<android.support.media2.MediaSession2ImplBase: android.support.media2.MediaPlaylistAgent getPlaylistAgent()>();

        if r3 != null goto label2;

        $z1 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", "Session is closed", $r10);

     label1:
        return null;

     label2:
        r4 = virtualinvoke r3.<android.support.media2.MediaPlaylistAgent: android.support.media2.MediaItem2 getMediaItem(android.support.media2.DataSourceDesc2)>(r2);

        if r4 != null goto label3;

        $z0 = <android.support.media2.MediaSession2ImplBase: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find matching item for dsd=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MS2ImplBase", $r8, $r9);

     label3:
        return r4;
    }

android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback
<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession>
    void <init>(android.support.media2.MediaSession2ImplBase)
    {
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback r0;
        android.support.media2.MediaSession2ImplBase r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        r1 := @parameter0: android.support.media2.MediaSession2ImplBase;

        specialinvoke r0.<android.support.media2.MediaPlaylistAgent$PlaylistEventCallback: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession> = $r2;

        return;
    }

    public void onPlaylistChanged(android.support.media2.MediaPlaylistAgent, java.util.List, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback r0;
        android.support.media2.MediaPlaylistAgent r1;
        java.util.List r2;
        android.support.media2.MediaMetadata2 r3;
        android.support.media2.MediaSession2ImplBase r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.support.media2.MediaMetadata2;

        $r5 = r0.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.support.media2.MediaSession2ImplBase) $r6;

        if r4 != null goto label1;

        return;

     label1:
        virtualinvoke r4.<android.support.media2.MediaSession2ImplBase: void notifyPlaylistChangedOnExecutor(android.support.media2.MediaPlaylistAgent,java.util.List,android.support.media2.MediaMetadata2)>(r1, r2, r3);

        return;
    }

    public void onPlaylistMetadataChanged(android.support.media2.MediaPlaylistAgent, android.support.media2.MediaMetadata2)
    {
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback r0;
        android.support.media2.MediaPlaylistAgent r1;
        android.support.media2.MediaMetadata2 r2;
        android.support.media2.MediaSession2ImplBase r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        r2 := @parameter1: android.support.media2.MediaMetadata2;

        $r4 = r0.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.support.media2.MediaSession2ImplBase) $r5;

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<android.support.media2.MediaSession2ImplBase: void notifyPlaylistMetadataChangedOnExecutor(android.support.media2.MediaPlaylistAgent,android.support.media2.MediaMetadata2)>(r1, r2);

        return;
    }

    public void onRepeatModeChanged(android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback r0;
        android.support.media2.MediaPlaylistAgent r1;
        int i0;
        android.support.media2.MediaSession2ImplBase r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.support.media2.MediaSession2ImplBase) $r4;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<android.support.media2.MediaSession2ImplBase: void notifyRepeatModeChangedOnExecutor(android.support.media2.MediaPlaylistAgent,int)>(r1, i0);

        return;
    }

    public void onShuffleModeChanged(android.support.media2.MediaPlaylistAgent, int)
    {
        android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback r0;
        android.support.media2.MediaPlaylistAgent r1;
        int i0;
        android.support.media2.MediaSession2ImplBase r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback;

        r1 := @parameter0: android.support.media2.MediaPlaylistAgent;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.media2.MediaSession2ImplBase$MyPlaylistEventCallback: java.lang.ref.WeakReference mSession>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.support.media2.MediaSession2ImplBase) $r4;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<android.support.media2.MediaSession2ImplBase: void notifyShuffleModeChangedOnExecutor(android.support.media2.MediaPlaylistAgent,int)>(r1, i0);

        return;
    }

android.support.media2.MediaSession2ImplBase$NotifyRunnable
<android.support.media2.MediaSession2ImplBase$NotifyRunnable: void run(android.support.media2.MediaSession2$ControllerCb)>
