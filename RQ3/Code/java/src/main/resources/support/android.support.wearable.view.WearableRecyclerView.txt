android.support.wearable.view.WearableRecyclerView
<android.support.wearable.view.WearableRecyclerView: java.lang.String TAG>
<android.support.wearable.view.WearableRecyclerView: int NO_VALUE>
<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>
<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper mOffsettingHelper>
<android.support.wearable.view.WearableRecyclerView: boolean mCircularScrollingEnabled>
<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItems>
<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItemsWhenThereAreChildren>
<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingTop>
<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingBottom>
<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver$OnPreDrawListener mPaddingPreDrawListener>
    public void <init>(android.content.Context)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.content.Context r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.content.Context r1, $r7;
        android.util.AttributeSet r2;
        int i0, $i2, $i3, $i4;
        byte b1;
        android.content.res.TypedArray r3;
        android.support.wearable.view.ScrollManager $r4, $r9, $r10;
        android.support.wearable.view.WearableRecyclerView$1 $r5;
        android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager $r6;
        int[] $r8;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r4 = new android.support.wearable.view.ScrollManager;

        specialinvoke $r4.<android.support.wearable.view.ScrollManager: void <init>()>();

        r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager> = $r4;

        r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingTop> = -2147483648;

        r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingBottom> = -2147483648;

        $r5 = new android.support.wearable.view.WearableRecyclerView$1;

        specialinvoke $r5.<android.support.wearable.view.WearableRecyclerView$1: void <init>(android.support.wearable.view.WearableRecyclerView)>(r0);

        r0.<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver$OnPreDrawListener mPaddingPreDrawListener> = $r5;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setHasFixedSize(boolean)>(1);

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setClipToPadding(boolean)>(0);

        if r2 == null goto label1;

        b1 = 0;

        $r8 = <android.support.wearable.R$styleable: int[] RecyclerView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r8, i0, b1);

        $i2 = <android.support.wearable.R$styleable: int WearableRecyclerView_circular_scrolling_gesture_enabled>;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCircularScrollingEnabled>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, $z0);

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setCircularScrollingGestureEnabled(boolean)>($z1);

        $i3 = <android.support.wearable.R$styleable: int WearableRecyclerView_bezel_width>;

        $r9 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        $f0 = virtualinvoke $r9.<android.support.wearable.view.ScrollManager: float getBezelWidth()>();

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i3, $f0);

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setBezelWidth(float)>($f1);

        $i4 = <android.support.wearable.R$styleable: int WearableRecyclerView_scroll_degrees_per_screen>;

        $r10 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        $f2 = virtualinvoke $r10.<android.support.wearable.view.ScrollManager: float getScrollDegreesPerScreen()>();

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i4, $f2);

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setScrollDegreesPerScreen(float)>($f3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label1:
        $r6 = new android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager;

        $r7 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.content.Context getContext()>();

        specialinvoke $r6.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: void <init>(android.support.wearable.view.WearableRecyclerView,android.content.Context)>(r0, $r7);

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>($r6);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.support.wearable.view.ScrollManager $r2;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCircularScrollingEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        $z2 = virtualinvoke $r2.<android.support.wearable.view.ScrollManager: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.view.MotionEvent r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r2;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2, $f3;
        android.content.Context $r3;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: boolean isLayoutFrozen()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i1 != 8 goto label4;

        $z1 = staticinvoke <android.support.wearable.input.RotaryEncoder: boolean isFromRotaryEncoder(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label4;

        $f0 = staticinvoke <android.support.wearable.input.RotaryEncoder: float getRotaryAxisValue(android.view.MotionEvent)>(r1);

        $f1 = neg $f0;

        $r3 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.content.Context getContext()>();

        $f2 = staticinvoke <android.support.wearable.input.RotaryEncoder: float getScaledScrollFactor(android.content.Context)>($r3);

        $f3 = $f1 * $f2;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void scrollBy(int,int)>(0, i0);

        return 1;

     label3:
        $z3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z3 == 0 goto label4;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void scrollBy(int,int)>(i0, 0);

        return 1;

     label4:
        $z4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z4;
    }

    protected void onAttachedToWindow()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.ScrollManager $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r3;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()>();

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        virtualinvoke $r1.<android.support.wearable.view.ScrollManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

        $r2 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver$OnPreDrawListener mPaddingPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.ScrollManager $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r3;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()>();

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        virtualinvoke $r1.<android.support.wearable.view.ScrollManager: void clearRecyclerView()>();

        $r2 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.wearable.view.WearableRecyclerView: android.view.ViewTreeObserver$OnPreDrawListener mPaddingPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

        return;
    }

    public void setScrollDegreesPerScreen(float)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        float f0;
        android.support.wearable.view.ScrollManager $r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        virtualinvoke $r1.<android.support.wearable.view.ScrollManager: void setScrollDegreesPerScreen(float)>(f0);

        return;
    }

    public float getScrollDegreesPerScreen()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.ScrollManager $r1;
        float $f0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        $f0 = virtualinvoke $r1.<android.support.wearable.view.ScrollManager: float getScrollDegreesPerScreen()>();

        return $f0;
    }

    public void setBezelWidth(float)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        float f0;
        android.support.wearable.view.ScrollManager $r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        virtualinvoke $r1.<android.support.wearable.view.ScrollManager: void setBezelWidth(float)>(f0);

        return;
    }

    public float getBezelWidth()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.ScrollManager $r1;
        float $f0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.ScrollManager mScrollManager>;

        $f0 = virtualinvoke $r1.<android.support.wearable.view.ScrollManager: float getBezelWidth()>();

        return $f0;
    }

    public void setCircularScrollingGestureEnabled(boolean)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.WearableRecyclerView: boolean mCircularScrollingEnabled> = z0;

        return;
    }

    public boolean isCircularScrollingGestureEnabled()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCircularScrollingEnabled>;

        return $z0;
    }

    public void setOffsettingHelper(android.support.wearable.view.WearableRecyclerView$OffsettingHelper)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.WearableRecyclerView$OffsettingHelper r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        r1 := @parameter0: android.support.wearable.view.WearableRecyclerView$OffsettingHelper;

        r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper mOffsettingHelper> = r1;

        return;
    }

    public void clearOffsettingHelper()
    {
        android.support.wearable.view.WearableRecyclerView r0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setOffsettingHelper(android.support.wearable.view.WearableRecyclerView$OffsettingHelper)>(null);

        return;
    }

    public android.support.wearable.view.WearableRecyclerView$OffsettingHelper getOffsettingHelper()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.WearableRecyclerView$OffsettingHelper $r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper mOffsettingHelper>;

        return $r1;
    }

    public void setCenterEdgeItems(boolean)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean z0, $z1;
        int $i0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItems> = z0;

        $z1 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItems>;

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setupCenteredPadding()>();

        goto label3;

     label1:
        r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItemsWhenThereAreChildren> = 1;

        goto label3;

     label2:
        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setupOriginalPadding()>();

        r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItemsWhenThereAreChildren> = 0;

     label3:
        return;
    }

    public boolean getCenterEdgeItems()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItems>;

        return $z0;
    }

    private void setupCenteredPadding()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.view.View r1, r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;
        java.lang.String $r3;
        float $f0, $f1, $f2, $f3, $f4;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r5;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItems>;

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getChildCount()>();

        if $i4 >= 1 goto label2;

     label1:
        $r3 = <android.support.wearable.view.WearableRecyclerView: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "No children available");

        return;

     label2:
        r1 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.view.View getChildAt(int)>(0);

        i0 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i5 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getHeight()>();

        $f0 = (float) $i5;

        $f3 = $f0 * 0.5F;

        $f1 = (float) i0;

        $f2 = $f1 * 0.5F;

        $f4 = $f3 - $f2;

        i1 = (int) $f4;

        $i6 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingTop()>();

        if $i6 == i1 goto label5;

        $i7 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingTop()>();

        r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingTop> = $i7;

        $i8 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingBottom()>();

        r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingBottom> = $i8;

        $i9 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingLeft()>();

        $i10 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingRight()>();

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setPadding(int,int,int,int)>($i9, i1, $i10, i1);

        r2 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: android.view.View getFocusedChild()>();

        if r2 == null goto label3;

        $r5 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $i11 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>(r2);

        goto label4;

     label3:
        $i11 = 0;

     label4:
        i2 = $i11;

        $r4 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>(i2);

     label5:
        return;
    }

    private void setupOriginalPadding()
    {
        android.support.wearable.view.WearableRecyclerView r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.wearable.view.WearableRecyclerView;

        $i0 = r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingTop>;

        if $i0 != -2147483648 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingLeft()>();

        $i2 = r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingTop>;

        $i3 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: int getPaddingRight()>();

        $i4 = r0.<android.support.wearable.view.WearableRecyclerView: int mOriginalPaddingBottom>;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setPadding(int,int,int,int)>($i1, $i2, $i3, $i4);

        return;
    }

    static boolean access$000(android.support.wearable.view.WearableRecyclerView)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean $z0;

        r0 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        $z0 = r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItemsWhenThereAreChildren>;

        return $z0;
    }

    static void access$100(android.support.wearable.view.WearableRecyclerView)
    {
        android.support.wearable.view.WearableRecyclerView r0;

        r0 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView: void setupCenteredPadding()>();

        return;
    }

    static boolean access$002(android.support.wearable.view.WearableRecyclerView, boolean)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        boolean z0;

        r0 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        z0 := @parameter1: boolean;

        r0.<android.support.wearable.view.WearableRecyclerView: boolean mCenterEdgeItemsWhenThereAreChildren> = z0;

        return z0;
    }

    static android.support.wearable.view.WearableRecyclerView$OffsettingHelper access$200(android.support.wearable.view.WearableRecyclerView)
    {
        android.support.wearable.view.WearableRecyclerView r0;
        android.support.wearable.view.WearableRecyclerView$OffsettingHelper $r1;

        r0 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper mOffsettingHelper>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/support/wearable/view/WearableRecyclerView;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.wearable.view.WearableRecyclerView: java.lang.String TAG> = $r1;

        return;
    }

android.support.wearable.view.WearableRecyclerView$1
<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0>
    void <init>(android.support.wearable.view.WearableRecyclerView)
    {
        android.support.wearable.view.WearableRecyclerView$1 r0;
        android.support.wearable.view.WearableRecyclerView r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$1;

        r1 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        r0.<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onPreDraw()
    {
        android.support.wearable.view.WearableRecyclerView$1 r0;
        android.support.wearable.view.WearableRecyclerView $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$1;

        $r1 = r0.<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0>;

        $z0 = staticinvoke <android.support.wearable.view.WearableRecyclerView: boolean access$000(android.support.wearable.view.WearableRecyclerView)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0>;

        $i0 = virtualinvoke $r2.<android.support.wearable.view.WearableRecyclerView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = r0.<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0>;

        staticinvoke <android.support.wearable.view.WearableRecyclerView: void access$100(android.support.wearable.view.WearableRecyclerView)>($r3);

        $r4 = r0.<android.support.wearable.view.WearableRecyclerView$1: android.support.wearable.view.WearableRecyclerView this$0>;

        staticinvoke <android.support.wearable.view.WearableRecyclerView: boolean access$002(android.support.wearable.view.WearableRecyclerView,boolean)>($r4, 0);

     label1:
        return 1;
    }

android.support.wearable.view.WearableRecyclerView$ChildLayoutManager
    public void <init>(android.content.Context)
    {
        android.support.wearable.view.WearableRecyclerView$ChildLayoutManager r0;
        android.content.Context r1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$ChildLayoutManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r1, 1, 0);

        return;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        android.support.wearable.view.WearableRecyclerView$ChildLayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$ChildLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        i1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: void updateLayout()>();

        return i1;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        android.support.wearable.view.WearableRecyclerView$ChildLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$ChildLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: void updateLayout()>();

        return;
    }

    private void updateLayout()
    {
        android.support.wearable.view.WearableRecyclerView$ChildLayoutManager r0;
        android.view.View r1;
        int $i0, i1;
        android.view.ViewParent $r2;
        android.support.wearable.view.WearableRecyclerView $r3;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$ChildLayoutManager;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: int getChildCount()>();

        if i1 >= $i0 goto label2;

        r1 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = (android.support.wearable.view.WearableRecyclerView) $r2;

        virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: void updateChild(android.view.View,android.support.wearable.view.WearableRecyclerView)>(r1, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

<android.support.wearable.view.WearableRecyclerView$ChildLayoutManager: void updateChild(android.view.View,android.support.wearable.view.WearableRecyclerView)>
android.support.wearable.view.WearableRecyclerView$OffsettingHelper
    public void <init>()
    {
        android.support.wearable.view.WearableRecyclerView$OffsettingHelper r0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$OffsettingHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<android.support.wearable.view.WearableRecyclerView$OffsettingHelper: void updateChild(android.view.View,android.support.wearable.view.WearableRecyclerView)>
android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager
<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.support.wearable.view.WearableRecyclerView this$0>
    public void <init>(android.support.wearable.view.WearableRecyclerView, android.content.Context)
    {
        android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager r0;
        android.support.wearable.view.WearableRecyclerView r1;
        android.content.Context r2;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager;

        r1 := @parameter0: android.support.wearable.view.WearableRecyclerView;

        r2 := @parameter1: android.content.Context;

        r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.support.wearable.view.WearableRecyclerView this$0> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r2, 1, 0);

        return;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        i1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: void updateLayout()>();

        return i1;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: void updateLayout()>();

        return;
    }

    private void updateLayout()
    {
        android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager r0;
        android.view.View r1;
        android.support.wearable.view.WearableRecyclerView $r2, $r4, $r6;
        android.support.wearable.view.WearableRecyclerView$OffsettingHelper $r3, $r5;
        int $i0, i1;

        r0 := @this: android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager;

        $r2 = r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.support.wearable.view.WearableRecyclerView this$0>;

        $r3 = staticinvoke <android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper access$200(android.support.wearable.view.WearableRecyclerView)>($r2);

        if $r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: int getChildCount()>();

        if i1 >= $i0 goto label2;

        r1 = virtualinvoke r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.view.View getChildAt(int)>(i1);

        $r4 = r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.support.wearable.view.WearableRecyclerView this$0>;

        $r5 = staticinvoke <android.support.wearable.view.WearableRecyclerView: android.support.wearable.view.WearableRecyclerView$OffsettingHelper access$200(android.support.wearable.view.WearableRecyclerView)>($r4);

        $r6 = r0.<android.support.wearable.view.WearableRecyclerView$OffsettingLinearLayoutManager: android.support.wearable.view.WearableRecyclerView this$0>;

        virtualinvoke $r5.<android.support.wearable.view.WearableRecyclerView$OffsettingHelper: void updateChild(android.view.View,android.support.wearable.view.WearableRecyclerView)>(r1, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

