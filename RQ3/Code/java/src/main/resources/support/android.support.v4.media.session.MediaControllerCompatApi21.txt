android.support.v4.media.session.MediaControllerCompatApi21
    public static java.lang.Object fromToken(android.content.Context, java.lang.Object)
    {
        android.content.Context r0;
        java.lang.Object r1;
        android.media.session.MediaController $r2;
        android.media.session.MediaSession$Token $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Object;

        $r2 = new android.media.session.MediaController;

        $r3 = (android.media.session.MediaSession$Token) r1;

        specialinvoke $r2.<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession$Token)>(r0, $r3);

        return $r2;
    }

    public static java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$Callback r0;
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy $r1;

        r0 := @parameter0: android.support.v4.media.session.MediaControllerCompatApi21$Callback;

        $r1 = new android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        specialinvoke $r1.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback)>(r0);

        return $r1;
    }

    public static void registerCallback(java.lang.Object, java.lang.Object, android.os.Handler)
    {
        java.lang.Object r0, r1;
        android.os.Handler r2;
        android.media.session.MediaController$Callback $r3;
        android.media.session.MediaController $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: android.os.Handler;

        $r4 = (android.media.session.MediaController) r0;

        $r3 = (android.media.session.MediaController$Callback) r1;

        virtualinvoke $r4.<android.media.session.MediaController: void registerCallback(android.media.session.MediaController$Callback,android.os.Handler)>($r3, r2);

        return;
    }

    public static void unregisterCallback(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.session.MediaController$Callback $r2;
        android.media.session.MediaController $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaController) r0;

        $r2 = (android.media.session.MediaController$Callback) r1;

        virtualinvoke $r3.<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController$Callback)>($r2);

        return;
    }

    public static void setMediaController(android.app.Activity, java.lang.Object)
    {
        android.app.Activity r0;
        java.lang.Object r1;
        android.media.session.MediaController $r2;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.session.MediaController) r1;

        virtualinvoke r0.<android.app.Activity: void setMediaController(android.media.session.MediaController)>($r2);

        return;
    }

    public static java.lang.Object getMediaController(android.app.Activity)
    {
        android.app.Activity r0;
        android.media.session.MediaController $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.media.session.MediaController getMediaController()>();

        return $r1;
    }

    public static java.lang.Object getSessionToken(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.media.session.MediaSession$Token $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.media.session.MediaSession$Token getSessionToken()>();

        return $r2;
    }

    public static java.lang.Object getTransportControls(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.media.session.MediaController$TransportControls $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.media.session.MediaController$TransportControls getTransportControls()>();

        return $r2;
    }

    public static java.lang.Object getPlaybackState(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.media.session.PlaybackState $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>();

        return $r2;
    }

    public static java.lang.Object getMetadata(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.media.MediaMetadata $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>();

        return $r2;
    }

    public static java.util.List getQueue(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.List r1;
        java.util.ArrayList r2, $r4;
        android.media.session.MediaController $r3;

        r0 := @parameter0: java.lang.Object;

        $r3 = (android.media.session.MediaController) r0;

        r1 = virtualinvoke $r3.<android.media.session.MediaController: java.util.List getQueue()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r2 = $r4;

        return r2;
    }

    public static java.lang.CharSequence getQueueTitle(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        java.lang.CharSequence $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>();

        return $r2;
    }

    public static android.os.Bundle getExtras(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.os.Bundle $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.os.Bundle getExtras()>();

        return $r2;
    }

    public static int getRatingType(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $i0 = virtualinvoke $r1.<android.media.session.MediaController: int getRatingType()>();

        return $i0;
    }

    public static long getFlags(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        long $l0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $l0 = virtualinvoke $r1.<android.media.session.MediaController: long getFlags()>();

        return $l0;
    }

    public static java.lang.Object getPlaybackInfo(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.media.session.MediaController$PlaybackInfo $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.media.session.MediaController$PlaybackInfo getPlaybackInfo()>();

        return $r2;
    }

    public static android.app.PendingIntent getSessionActivity(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        android.app.PendingIntent $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public static boolean dispatchMediaButtonEvent(java.lang.Object, android.view.KeyEvent)
    {
        java.lang.Object r0;
        android.view.KeyEvent r1;
        android.media.session.MediaController $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = (android.media.session.MediaController) r0;

        $z0 = virtualinvoke $r2.<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public static void setVolumeTo(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        android.media.session.MediaController $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = (android.media.session.MediaController) r0;

        virtualinvoke $r1.<android.media.session.MediaController: void setVolumeTo(int,int)>(i0, i1);

        return;
    }

    public static void adjustVolume(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        android.media.session.MediaController $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = (android.media.session.MediaController) r0;

        virtualinvoke $r1.<android.media.session.MediaController: void adjustVolume(int,int)>(i0, i1);

        return;
    }

    public static void sendCommand(java.lang.Object, java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;
        android.media.session.MediaController $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.ResultReceiver;

        $r4 = (android.media.session.MediaController) r0;

        virtualinvoke $r4.<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>(r1, r2, r3);

        return;
    }

    public static java.lang.String getPackageName(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController: java.lang.String getPackageName()>();

        return $r2;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaControllerCompatApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.v4.media.session.MediaControllerCompatApi21$Callback
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionDestroyed()>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onPlaybackStateChanged(java.lang.Object)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onMetadataChanged(java.lang.Object)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueChanged(java.util.List)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueTitleChanged(java.lang.CharSequence)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onExtrasChanged(android.os.Bundle)>
<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onAudioInfoChanged(int,int,int,int,int)>
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy
<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>
    public void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompatApi21$Callback;

        specialinvoke r0.<android.media.session.MediaController$Callback: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback> = r1;

        return;
    }

    public void onSessionDestroyed()
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionDestroyed()>();

        return;
    }

    public void onSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r3;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r2);

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void onPlaybackStateChanged(android.media.session.PlaybackState)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.media.session.PlaybackState r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: android.media.session.PlaybackState;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onPlaybackStateChanged(java.lang.Object)>(r1);

        return;
    }

    public void onMetadataChanged(android.media.MediaMetadata)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.media.MediaMetadata r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: android.media.MediaMetadata;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onMetadataChanged(java.lang.Object)>(r1);

        return;
    }

    public void onQueueChanged(java.util.List)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        java.util.List r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueChanged(java.util.List)>(r1);

        return;
    }

    public void onQueueTitleChanged(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        java.lang.CharSequence r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueTitleChanged(java.lang.CharSequence)>(r1);

        return;
    }

    public void onExtrasChanged(android.os.Bundle)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.os.Bundle r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)>(r1);

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onExtrasChanged(android.os.Bundle)>(r1);

        return;
    }

    public void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo)
    {
        android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy r0;
        android.media.session.MediaController$PlaybackInfo r1;
        android.support.v4.media.session.MediaControllerCompatApi21$Callback $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy;

        r1 := @parameter0: android.media.session.MediaController$PlaybackInfo;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback>;

        $i0 = virtualinvoke r1.<android.media.session.MediaController$PlaybackInfo: int getPlaybackType()>();

        $i1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getLegacyAudioStream(java.lang.Object)>(r1);

        $i2 = virtualinvoke r1.<android.media.session.MediaController$PlaybackInfo: int getVolumeControl()>();

        $i3 = virtualinvoke r1.<android.media.session.MediaController$PlaybackInfo: int getMaxVolume()>();

        $i4 = virtualinvoke r1.<android.media.session.MediaController$PlaybackInfo: int getCurrentVolume()>();

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onAudioInfoChanged(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        return;
    }

android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
<android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int FLAG_SCO>
<android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int STREAM_BLUETOOTH_SCO>
<android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int STREAM_SYSTEM_ENFORCED>
    public static int getPlaybackType(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$PlaybackInfo $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$PlaybackInfo) r0;

        $i0 = virtualinvoke $r1.<android.media.session.MediaController$PlaybackInfo: int getPlaybackType()>();

        return $i0;
    }

    public static android.media.AudioAttributes getAudioAttributes(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$PlaybackInfo $r1;
        android.media.AudioAttributes $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$PlaybackInfo) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaController$PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>();

        return $r2;
    }

    public static int getLegacyAudioStream(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.AudioAttributes r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: android.media.AudioAttributes getAudioAttributes(java.lang.Object)>(r0);

        $i0 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int toLegacyStreamType(android.media.AudioAttributes)>(r1);

        return $i0;
    }

    public static int getVolumeControl(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$PlaybackInfo $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$PlaybackInfo) r0;

        $i0 = virtualinvoke $r1.<android.media.session.MediaController$PlaybackInfo: int getVolumeControl()>();

        return $i0;
    }

    public static int getMaxVolume(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$PlaybackInfo $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$PlaybackInfo) r0;

        $i0 = virtualinvoke $r1.<android.media.session.MediaController$PlaybackInfo: int getMaxVolume()>();

        return $i0;
    }

    public static int getCurrentVolume(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$PlaybackInfo $r1;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$PlaybackInfo) r0;

        $i0 = virtualinvoke $r1.<android.media.session.MediaController$PlaybackInfo: int getCurrentVolume()>();

        return $i0;
    }

    private static int toLegacyStreamType(android.media.AudioAttributes)
    {
        android.media.AudioAttributes r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: android.media.AudioAttributes;

        $i0 = virtualinvoke r0.<android.media.AudioAttributes: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label01;

        return 7;

     label01:
        $i2 = virtualinvoke r0.<android.media.AudioAttributes: int getFlags()>();

        $i3 = $i2 & 4;

        if $i3 != 4 goto label02;

        return 6;

     label02:
        $i4 = virtualinvoke r0.<android.media.AudioAttributes: int getUsage()>();

        tableswitch($i4)
        {
            case 0: goto label10;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label09;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label04;
            case 14: goto label03;
            default: goto label10;
        };

     label03:
        return 3;

     label04:
        return 1;

     label05:
        return 0;

     label06:
        return 8;

     label07:
        return 4;

     label08:
        return 2;

     label09:
        return 5;

     label10:
        return 3;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
    public static void play(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void play()>();

        return;
    }

    public static void pause(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void pause()>();

        return;
    }

    public static void stop(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void stop()>();

        return;
    }

    public static void seekTo(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void seekTo(long)>(l0);

        return;
    }

    public static void fastForward(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void fastForward()>();

        return;
    }

    public static void rewind(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void rewind()>();

        return;
    }

    public static void skipToNext(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void skipToNext()>();

        return;
    }

    public static void skipToPrevious(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void skipToPrevious()>();

        return;
    }

    public static void setRating(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.Rating $r2;
        android.media.session.MediaController$TransportControls $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaController$TransportControls) r0;

        $r2 = (android.media.Rating) r1;

        virtualinvoke $r3.<android.media.session.MediaController$TransportControls: void setRating(android.media.Rating)>($r2);

        return;
    }

    public static void playFromMediaId(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.session.MediaController$TransportControls $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r3.<android.media.session.MediaController$TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public static void playFromSearch(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.session.MediaController$TransportControls $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r3.<android.media.session.MediaController$TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public static void skipToQueueItem(java.lang.Object, long)
    {
        java.lang.Object r0;
        long l0;
        android.media.session.MediaController$TransportControls $r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $r1 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r1.<android.media.session.MediaController$TransportControls: void skipToQueueItem(long)>(l0);

        return;
    }

    public static void sendCustomAction(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.session.MediaController$TransportControls $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaController$TransportControls) r0;

        virtualinvoke $r3.<android.media.session.MediaController$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    private void <init>()
    {
        android.support.v4.media.session.MediaControllerCompatApi21$TransportControls r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompatApi21$TransportControls;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

