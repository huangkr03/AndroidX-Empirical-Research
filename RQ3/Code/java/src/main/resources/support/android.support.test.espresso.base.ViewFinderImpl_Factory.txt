android.support.test.espresso.base.ViewFinderImpl_Factory
<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider viewMatcherProvider>
<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider rootViewProvider>
    public void <init>(javax.inject.Provider, javax.inject.Provider)
    {
        android.support.test.espresso.base.ViewFinderImpl_Factory r0;
        javax.inject.Provider r1, r2;

        r0 := @this: android.support.test.espresso.base.ViewFinderImpl_Factory;

        r1 := @parameter0: javax.inject.Provider;

        r2 := @parameter1: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider viewMatcherProvider> = r1;

        r0.<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider rootViewProvider> = r2;

        return;
    }

    public android.support.test.espresso.base.ViewFinderImpl get()
    {
        android.support.test.espresso.base.ViewFinderImpl_Factory r0;
        android.support.test.espresso.base.ViewFinderImpl $r1;
        javax.inject.Provider $r2, $r4;
        java.lang.Object $r3;
        org.hamcrest.Matcher $r5;

        r0 := @this: android.support.test.espresso.base.ViewFinderImpl_Factory;

        $r1 = new android.support.test.espresso.base.ViewFinderImpl;

        $r2 = r0.<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider viewMatcherProvider>;

        $r3 = interfaceinvoke $r2.<javax.inject.Provider: java.lang.Object get()>();

        $r5 = (org.hamcrest.Matcher) $r3;

        $r4 = r0.<android.support.test.espresso.base.ViewFinderImpl_Factory: javax.inject.Provider rootViewProvider>;

        specialinvoke $r1.<android.support.test.espresso.base.ViewFinderImpl: void <init>(org.hamcrest.Matcher,javax.inject.Provider)>($r5, $r4);

        return $r1;
    }

    public static android.support.test.espresso.base.ViewFinderImpl_Factory create(javax.inject.Provider, javax.inject.Provider)
    {
        javax.inject.Provider r0, r1;
        android.support.test.espresso.base.ViewFinderImpl_Factory $r2;

        r0 := @parameter0: javax.inject.Provider;

        r1 := @parameter1: javax.inject.Provider;

        $r2 = new android.support.test.espresso.base.ViewFinderImpl_Factory;

        specialinvoke $r2.<android.support.test.espresso.base.ViewFinderImpl_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>(r0, r1);

        return $r2;
    }

    public static android.support.test.espresso.base.ViewFinderImpl newViewFinderImpl(org.hamcrest.Matcher, javax.inject.Provider)
    {
        org.hamcrest.Matcher r0;
        javax.inject.Provider r1;
        android.support.test.espresso.base.ViewFinderImpl $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: javax.inject.Provider;

        $r2 = new android.support.test.espresso.base.ViewFinderImpl;

        specialinvoke $r2.<android.support.test.espresso.base.ViewFinderImpl: void <init>(org.hamcrest.Matcher,javax.inject.Provider)>(r0, r1);

        return $r2;
    }

    public volatile java.lang.Object get()
    {
        android.support.test.espresso.base.ViewFinderImpl_Factory r0;
        android.support.test.espresso.base.ViewFinderImpl $r1;

        r0 := @this: android.support.test.espresso.base.ViewFinderImpl_Factory;

        $r1 = virtualinvoke r0.<android.support.test.espresso.base.ViewFinderImpl_Factory: android.support.test.espresso.base.ViewFinderImpl get()>();

        return $r1;
    }

