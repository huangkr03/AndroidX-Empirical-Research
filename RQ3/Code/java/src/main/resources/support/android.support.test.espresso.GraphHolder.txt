android.support.test.espresso.GraphHolder
<android.support.test.espresso.GraphHolder: java.util.concurrent.atomic.AtomicReference instance>
<android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent component>
    private void <init>(android.support.test.espresso.BaseLayerComponent)
    {
        android.support.test.espresso.GraphHolder r0;
        android.support.test.espresso.BaseLayerComponent r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.support.test.espresso.GraphHolder;

        r1 := @parameter0: android.support.test.espresso.BaseLayerComponent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.support.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.support.test.espresso.BaseLayerComponent) $r2;

        r0.<android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent component> = $r3;

        return;
    }

    static android.support.test.espresso.BaseLayerComponent baseLayer()
    {
        java.util.concurrent.atomic.AtomicReference $r0, $r5, $r6;
        java.lang.Object $r1, $r7;
        android.support.test.espresso.BaseLayerComponent $r2, $r4, $r9, $r11;
        android.support.test.espresso.GraphHolder $r3, $r8, r12, r13;
        boolean $z0;
        android.support.test.internal.runner.tracker.UsageTracker $r10;

        $r0 = <android.support.test.espresso.GraphHolder: java.util.concurrent.atomic.AtomicReference instance>;

        $r1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r12 = (android.support.test.espresso.GraphHolder) $r1;

        if null != r12 goto label2;

        $r3 = new android.support.test.espresso.GraphHolder;

        $r4 = staticinvoke <android.support.test.espresso.DaggerBaseLayerComponent: android.support.test.espresso.BaseLayerComponent create()>();

        specialinvoke $r3.<android.support.test.espresso.GraphHolder: void <init>(android.support.test.espresso.BaseLayerComponent)>($r4);

        r13 = $r3;

        $r5 = <android.support.test.espresso.GraphHolder: java.util.concurrent.atomic.AtomicReference instance>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, r13);

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <android.support.test.internal.runner.tracker.UsageTrackerRegistry: android.support.test.internal.runner.tracker.UsageTracker getInstance()>();

        interfaceinvoke $r10.<android.support.test.internal.runner.tracker.UsageTracker: void trackUsage(java.lang.String,java.lang.String)>("Espresso", "3.0.2");

        $r11 = r13.<android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent component>;

        return $r11;

     label1:
        $r6 = <android.support.test.espresso.GraphHolder: java.util.concurrent.atomic.AtomicReference instance>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r8 = (android.support.test.espresso.GraphHolder) $r7;

        $r9 = $r8.<android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent component>;

        return $r9;

     label2:
        $r2 = r12.<android.support.test.espresso.GraphHolder: android.support.test.espresso.BaseLayerComponent component>;

        return $r2;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        <android.support.test.espresso.GraphHolder: java.util.concurrent.atomic.AtomicReference instance> = $r0;

        return;
    }

