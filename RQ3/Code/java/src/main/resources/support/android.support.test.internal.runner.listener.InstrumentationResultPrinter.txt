android.support.test.internal.runner.listener.InstrumentationResultPrinter
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String LOG_TAG>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_VALUE_ID>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NUM_TOTAL>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NUM_CURRENT>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NAME_CLASS>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NAME_TEST>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_START>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_OK>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_ERROR>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_FAILURE>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_IGNORED>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_ASSUMPTION_FAILURE>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_STACK>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mResultTemplate>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestNum>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String mTestClass>
<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription>
    public void <init>()
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description $r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        specialinvoke r0.<android.support.test.internal.runner.listener.InstrumentationRunListener: void <init>()>();

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestNum> = 0;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = 0;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String mTestClass> = null;

        $r1 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription> = $r1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mResultTemplate> = $r2;

        return;
    }

    public void testRunStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        android.os.Bundle $r2, $r3;
        int $i0;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mResultTemplate>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "AndroidJUnitRunner");

        $r3 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mResultTemplate>;

        $i0 = virtualinvoke r1.<org.junit.runner.Description: int testCount()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("numtests", $i0);

        return;
    }

    public void testRunFinished(org.junit.runner.Result) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Result r1;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Result;

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        java.lang.String r2, r3, $r9, $r12;
        android.os.Bundle $r4, $r5, $r6, $r7, $r8, $r11, $r13;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r10;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription> = r1;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r4 = virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle getTestResult()>();

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult> = $r4;

        $r5 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("class", r2);

        $r6 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("test", r3);

        $r7 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $i0 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestNum>;

        $i1 = $i0 + 1;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestNum> = $i1;

        virtualinvoke $r7.<android.os.Bundle: void putInt(java.lang.String,int)>("current", $i1);

        if r2 == null goto label1;

        $r9 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String mTestClass>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $r11 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r2;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s:", $r10);

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r12);

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String mTestClass> = r2;

        goto label2;

     label1:
        $r8 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", "");

     label2:
        $r13 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void sendStatus(int,android.os.Bundle)>(1, $r13);

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = 0;

        return;
    }

    android.os.Bundle getTestResult()
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        android.os.Bundle $r1, $r2, $r3, $r4;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        $r1 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        $r4 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mResultTemplate>;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult> = $r3;

     label1:
        $r2 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        return $r2;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        int $i0, $i1;
        android.os.Bundle $r2, $r3;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $i0 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode>;

        if $i0 != 0 goto label1;

        $r3 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", ".");

     label1:
        $i1 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode>;

        $r2 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void sendStatus(int,android.os.Bundle)>($i1, $r2);

        return;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = -2;

        specialinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void reportFailure(org.junit.runner.notification.Failure)>(r1);

        return;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = -4;

        specialinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void reportFailure(org.junit.runner.notification.Failure)>(r1);

        return;
    }

    private void reportFailure(org.junit.runner.notification.Failure)
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;
        android.os.Bundle $r2, $r5;
        java.lang.String $r3, $r7, $r8, $r9;
        java.lang.Object[] $r4;
        org.junit.runner.Description $r6;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r2 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $r3 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r3);

        $r5 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r7 = virtualinvoke $r6.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r4[0] = $r7;

        $r8 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        $r4[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nError in %s:\n%s", $r4);

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r9);

        return;
    }

    public void testIgnored(org.junit.runner.Description) throws java.lang.Exception
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void testStarted(org.junit.runner.Description)>(r1);

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = -3;

        virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void testFinished(org.junit.runner.Description)>(r1);

        return;
    }

    public void reportProcessCrash(java.lang.Throwable)
    {
        android.support.test.internal.runner.listener.InstrumentationResultPrinter r0;
        java.lang.Throwable r1, r3, $r15;
        org.junit.runner.notification.Failure r2, $r4;
        org.junit.runner.Description $r5, $r9, $r14, $r18;
        android.os.Bundle $r6, $r10;
        java.lang.String $r7, $r11, $r12, $r13, $r19, $r22;
        java.lang.Object[] $r8;
        java.lang.StringBuilder $r16, $r17, $r20, $r21;

        r0 := @this: android.support.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: java.lang.Throwable;

        r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: int mTestResultCode> = -2;

        $r4 = new org.junit.runner.notification.Failure;

        $r5 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription>;

        specialinvoke $r4.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r5, r1);

        r2 = $r4;

        $r6 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $r7 = virtualinvoke r2.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r7);

        $r10 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle mTestResult>;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription>;

        $r11 = virtualinvoke $r9.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r8[0] = $r11;

        $r12 = virtualinvoke r2.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        $r8[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nProcess crashed while executing %s:\n%s", $r8);

        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r13);

     label1:
        $r14 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription>;

        virtualinvoke r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: void testFinished(org.junit.runner.Description)>($r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r3 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mark test ");

        $r18 = r0.<android.support.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description mDescription>;

        $r19 = virtualinvoke $r18.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as finished after process crash");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InstrumentationResultPrinter", $r22);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

