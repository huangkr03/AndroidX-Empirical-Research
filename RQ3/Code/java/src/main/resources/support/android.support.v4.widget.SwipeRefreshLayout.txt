android.support.v4.widget.SwipeRefreshLayout
<android.support.v4.widget.SwipeRefreshLayout: int LARGE>
<android.support.v4.widget.SwipeRefreshLayout: int DEFAULT>
<android.support.v4.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE>
<android.support.v4.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER>
<android.support.v4.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER_LARGE>
<android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>
<android.support.v4.widget.SwipeRefreshLayout: int MAX_ALPHA>
<android.support.v4.widget.SwipeRefreshLayout: int STARTING_PROGRESS_ALPHA>
<android.support.v4.widget.SwipeRefreshLayout: float DECELERATE_INTERPOLATION_FACTOR>
<android.support.v4.widget.SwipeRefreshLayout: int INVALID_POINTER>
<android.support.v4.widget.SwipeRefreshLayout: float DRAG_RATE>
<android.support.v4.widget.SwipeRefreshLayout: float MAX_PROGRESS_ANGLE>
<android.support.v4.widget.SwipeRefreshLayout: int SCALE_DOWN_DURATION>
<android.support.v4.widget.SwipeRefreshLayout: int ALPHA_ANIMATION_DURATION>
<android.support.v4.widget.SwipeRefreshLayout: int ANIMATE_TO_TRIGGER_DURATION>
<android.support.v4.widget.SwipeRefreshLayout: int ANIMATE_TO_START_DURATION>
<android.support.v4.widget.SwipeRefreshLayout: int CIRCLE_BG_LIGHT>
<android.support.v4.widget.SwipeRefreshLayout: int DEFAULT_CIRCLE_TARGET>
<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener>
<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>
<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop>
<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>
<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>
<android.support.v4.widget.SwipeRefreshLayout: int[] mParentScrollConsumed>
<android.support.v4.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow>
<android.support.v4.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress>
<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration>
<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>
<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY>
<android.support.v4.widget.SwipeRefreshLayout: float mInitialDownY>
<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>
<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>
<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>
<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>
<android.support.v4.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>
<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex>
<android.support.v4.widget.SwipeRefreshLayout: int mFrom>
<android.support.v4.widget.SwipeRefreshLayout: float mStartingScale>
<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>
<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>
<android.support.v4.widget.SwipeRefreshLayout: int mCustomSlingshotDistance>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation>
<android.support.v4.widget.SwipeRefreshLayout: boolean mNotify>
<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter>
<android.support.v4.widget.SwipeRefreshLayout: boolean mUsingCustomStart>
<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition>
<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>
    void reset()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.CircleImageView $r1, $r3, $r4;
        android.support.v4.widget.CircularProgressDrawable $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r1.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void stop()>();

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r3.<android.support.v4.widget.CircleImageView: void setVisibility(int)>(8);

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setColorViewAlpha(int)>(255);

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setAnimationProgress(float)>(0.0F);

        goto label2;

     label1:
        $i1 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i2 = $i1 - $i0;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i2);

     label2:
        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i3 = virtualinvoke $r4.<android.support.v4.widget.CircleImageView: int getTop()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop> = $i3;

        return;
    }

    public void setEnabled(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void setEnabled(boolean)>(z0);

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void reset()>();

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void reset()>();

        return;
    }

    private void setColorViewAlpha(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.support.v4.widget.CircleImageView $r1;
        android.graphics.drawable.Drawable $r2;
        android.support.v4.widget.CircularProgressDrawable $r3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r2 = virtualinvoke $r1.<android.support.v4.widget.CircleImageView: android.graphics.drawable.Drawable getBackground()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setAlpha(int)>(i0);

        return;
    }

    public void setProgressViewOffset(boolean, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0;
        int i0, i1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale> = z0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop> = i0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd> = i1;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mUsingCustomStart> = 1;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void reset()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = 0;

        return;
    }

    public int getProgressViewStartOffset()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        return $i0;
    }

    public int getProgressViewEndOffset()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

        return $i0;
    }

    public void setProgressViewEndTarget(boolean, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0;
        int i0;
        android.support.v4.widget.CircleImageView $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd> = i0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale> = z0;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r1.<android.support.v4.widget.CircleImageView: void invalidate()>();

        return;
    }

    public void setSlingshotDistance(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCustomSlingshotDistance> = i0;

        return;
    }

    public void setSize(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, $i1, $i2;
        android.util.DisplayMetrics r1;
        android.content.res.Resources $r2;
        float $f0, $f1, $f2, $f3;
        android.support.v4.widget.CircleImageView $r3, $r6;
        android.support.v4.widget.CircularProgressDrawable $r4, $r5;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        if i0 != 0 goto label2;

        $f2 = r1.<android.util.DisplayMetrics: float density>;

        $f3 = 56.0F * $f2;

        $i2 = (int) $f3;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter> = $i2;

        goto label3;

     label2:
        $f0 = r1.<android.util.DisplayMetrics: float density>;

        $f1 = 40.0F * $f0;

        $i1 = (int) $f1;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter> = $i1;

     label3:
        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r3.<android.support.v4.widget.CircleImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r4.<android.support.v4.widget.CircularProgressDrawable: void setStyle(int)>(i0);

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.util.DisplayMetrics r3;
        android.content.res.TypedArray r4;
        int[] $r5, $r6, $r16;
        android.view.ViewConfiguration $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.res.Resources $r11, $r13;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        android.support.v4.widget.SwipeRefreshLayout$1 r17;
        android.support.v4.widget.SwipeRefreshLayout$6 r18;
        android.support.v4.widget.SwipeRefreshLayout$7 r19;
        android.view.animation.DecelerateInterpolator r20;
        android.support.v4.view.NestedScrollingParentHelper r21;
        android.support.v4.view.NestedScrollingChildHelper r22;
        android.view.View r23;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = 0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance> = -1.0F;

        $r5 = newarray (int)[2];

        r0.<android.support.v4.widget.SwipeRefreshLayout: int[] mParentScrollConsumed> = $r5;

        $r6 = newarray (int)[2];

        r0.<android.support.v4.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow> = $r6;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex> = -1;

        r17 = new android.support.v4.widget.SwipeRefreshLayout$1;

        specialinvoke r17.<android.support.v4.widget.SwipeRefreshLayout$1: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener> = r17;

        r18 = new android.support.v4.widget.SwipeRefreshLayout$6;

        specialinvoke r18.<android.support.v4.widget.SwipeRefreshLayout$6: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition> = r18;

        r19 = new android.support.v4.widget.SwipeRefreshLayout$7;

        specialinvoke r19.<android.support.v4.widget.SwipeRefreshLayout$7: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition> = r19;

        $r10 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i0 = virtualinvoke $r10.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop> = $i0;

        $r11 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r11.<android.content.res.Resources: int getInteger(int)>(17694721);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration> = $i1;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setWillNotDraw(boolean)>(0);

        r20 = new android.view.animation.DecelerateInterpolator;

        specialinvoke r20.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.0F);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator> = r20;

        $r13 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r13.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = r3.<android.util.DisplayMetrics: float density>;

        $f1 = 40.0F * $f0;

        $i2 = (int) $f1;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter> = $i2;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void createProgressView()>();

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setChildrenDrawingOrderEnabled(boolean)>(1);

        $f2 = r3.<android.util.DisplayMetrics: float density>;

        $f3 = 64.0F * $f2;

        $i3 = (int) $f3;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd> = $i3;

        $i4 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

        $f4 = (float) $i4;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance> = $f4;

        r21 = new android.support.v4.view.NestedScrollingParentHelper;

        specialinvoke r21.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper> = r21;

        r22 = new android.support.v4.view.NestedScrollingChildHelper;

        r23 = (android.view.View) r0;

        specialinvoke r22.<android.support.v4.view.NestedScrollingChildHelper: void <init>(android.view.View)>(r23);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper> = r22;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)>(1);

        $i5 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter>;

        $i6 = neg $i5;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop> = $i6;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop> = $i6;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void moveToStart(float)>(1.0F);

        $r16 = <android.support.v4.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r16);

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setEnabled(boolean)>($z0);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    protected int getChildDrawingOrder(int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex>;

        if $i2 >= 0 goto label1;

        return i1;

     label1:
        $i3 = i0 - 1;

        if i1 != $i3 goto label2;

        $i6 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex>;

        return $i6;

     label2:
        $i4 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex>;

        if i1 < $i4 goto label3;

        $i5 = i1 + 1;

        return $i5;

     label3:
        return i1;
    }

    private void createProgressView()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.content.Context $r2, $r4;
        android.support.v4.widget.CircularProgressDrawable $r5, $r6, r11;
        android.support.v4.widget.CircleImageView $r7, $r8, $r9, r10;
        android.view.View r12;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r10 = new android.support.v4.widget.CircleImageView;

        $r2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.Context getContext()>();

        specialinvoke r10.<android.support.v4.widget.CircleImageView: void <init>(android.content.Context,int)>($r2, -328966);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView> = r10;

        r11 = new android.support.v4.widget.CircularProgressDrawable;

        $r4 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.Context getContext()>();

        specialinvoke r11.<android.support.v4.widget.CircularProgressDrawable: void <init>(android.content.Context)>($r4);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress> = r11;

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r5.<android.support.v4.widget.CircularProgressDrawable: void setStyle(int)>(1);

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r7.<android.support.v4.widget.CircleImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r6);

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void setVisibility(int)>(8);

        $r9 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        r12 = (android.view.View) $r9;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void addView(android.view.View)>(r12);

        return;
    }

    public void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener;

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener> = r1;

        return;
    }

    public void setRefreshing(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0, $z1, $z2, z3;
        int $i0, $i1, $i2, $i3, i4;
        android.view.animation.Animation$AnimationListener $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $z1 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z1 == z0 goto label3;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = z0;

        z3 = 0;

        $z2 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mUsingCustomStart>;

        if $z2 != 0 goto label1;

        $i3 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

        $i2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        i4 = $i3 + $i2;

        goto label2;

     label1:
        i4 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

     label2:
        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i1 = i4 - $i0;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i1);

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNotify> = 0;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startScaleUpAnimation(android.view.animation.Animation$AnimationListener)>($r1);

        goto label4;

     label3:
        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean,boolean)>(z0, 0);

     label4:
        return;
    }

    private void startScaleUpAnimation(android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.animation.Animation$AnimationListener r1;
        android.support.v4.widget.CircleImageView $r2, $r6, $r8, $r9;
        android.support.v4.widget.CircularProgressDrawable $r3;
        android.support.v4.widget.SwipeRefreshLayout$2 $r4;
        int $i0;
        long $l1;
        android.view.animation.Animation $r5, $r7;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.animation.Animation$AnimationListener;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r2.<android.support.v4.widget.CircleImageView: void setVisibility(int)>(0);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r3.<android.support.v4.widget.CircularProgressDrawable: void setAlpha(int)>(255);

        $r4 = new android.support.v4.widget.SwipeRefreshLayout$2;

        specialinvoke $r4.<android.support.v4.widget.SwipeRefreshLayout$2: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation> = $r4;

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation>;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration>;

        $l1 = (long) $i0;

        virtualinvoke $r5.<android.view.animation.Animation: void setDuration(long)>($l1);

        if r1 == null goto label1;

        $r9 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r9.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r1);

     label1:
        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>($r7);

        return;
    }

    void setAnimationProgress(float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0;
        android.support.v4.widget.CircleImageView $r1, $r2;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r1.<android.support.v4.widget.CircleImageView: void setScaleX(float)>(f0);

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r2.<android.support.v4.widget.CircleImageView: void setScaleY(float)>(f0);

        return;
    }

    private void setRefreshing(boolean, boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0, z1, $z2, $z3;
        android.view.animation.Animation$AnimationListener $r1, $r2;
        int $i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z2 == z0 goto label2;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNotify> = z1;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = z0;

        $z3 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z3 == 0 goto label1;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener)>($i0, $r2);

        goto label2;

     label1:
        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener>;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)>($r1);

     label2:
        return;
    }

    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.animation.Animation$AnimationListener r1;
        android.support.v4.widget.SwipeRefreshLayout$3 $r2;
        android.view.animation.Animation $r3, $r6;
        android.support.v4.widget.CircleImageView $r4, $r5, $r7;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.animation.Animation$AnimationListener;

        $r2 = new android.support.v4.widget.SwipeRefreshLayout$3;

        specialinvoke $r2.<android.support.v4.widget.SwipeRefreshLayout$3: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation> = $r2;

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation>;

        virtualinvoke $r3.<android.view.animation.Animation: void setDuration(long)>(150L);

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r4.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r1);

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r5.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation>;

        virtualinvoke $r7.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>($r6);

        return;
    }

    private void startProgressAlphaStartAnimation()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;
        int $i0;
        android.view.animation.Animation $r2;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $i0 = virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: int getAlpha()>();

        $r2 = specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation startAlphaAnimation(int,int)>($i0, 76);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation> = $r2;

        return;
    }

    private void startProgressAlphaMaxAnimation()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.CircularProgressDrawable $r1;
        int $i0;
        android.view.animation.Animation $r2;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $i0 = virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: int getAlpha()>();

        $r2 = specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation startAlphaAnimation(int,int)>($i0, 255);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation> = $r2;

        return;
    }

    private android.view.animation.Animation startAlphaAnimation(int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, i1;
        android.support.v4.widget.SwipeRefreshLayout$4 r1, $r2;
        android.support.v4.widget.CircleImageView $r3, $r4, $r5;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.support.v4.widget.SwipeRefreshLayout$4;

        specialinvoke $r2.<android.support.v4.widget.SwipeRefreshLayout$4: void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int)>(r0, i0, i1);

        r1 = $r2;

        virtualinvoke r1.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r3.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(null);

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r4.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r5.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>(r1);

        return r1;
    }

    public void setProgressBackgroundColor(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)>(i0);

        return;
    }

    public void setProgressBackgroundColorSchemeResource(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, $i1;
        android.content.Context $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.Context getContext()>();

        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)>($i1);

        return;
    }

    public void setProgressBackgroundColorSchemeColor(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.support.v4.widget.CircleImageView $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r1.<android.support.v4.widget.CircleImageView: void setBackgroundColor(int)>(i0);

        return;
    }

    public transient void setColorScheme(int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int[] r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: int[];

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])>(r1);

        return;
    }

    public transient void setColorSchemeResources(int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int[] r1, r3;
        android.content.Context r2;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: int[];

        r2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.Context getContext()>();

        $i0 = lengthof r1;

        r3 = newarray (int)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        $i2 = r1[i4];

        $i3 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r2, $i2);

        r3[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])>(r3);

        return;
    }

    public transient void setColorSchemeColors(int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int[] r1;
        android.support.v4.widget.CircularProgressDrawable $r2;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: int[];

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setColorSchemeColors(int[])>(r1);

        return;
    }

    public boolean isRefreshing()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        return $z0;
    }

    private void ensureTarget()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1, $r2;
        int $i0, i1;
        android.support.v4.widget.CircleImageView $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r2 != null goto label3;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if i1 >= $i0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View getChildAt(int)>(i1);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget> = r1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setDistanceToTriggerSync(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        float $f0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance> = $f0;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.view.View r1, $r2, $r3;
        android.support.v4.widget.CircleImageView $r4, $r5, $r6;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredWidth()>();

        i5 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredHeight()>();

        $i12 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if $i12 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r2 != null goto label2;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

     label2:
        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r3 != null goto label3;

        return;

     label3:
        r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        i6 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        i7 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i13 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        $i14 = i4 - $i13;

        $i15 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingRight()>();

        i8 = $i14 - $i15;

        $i16 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i17 = i5 - $i16;

        $i18 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingBottom()>();

        i9 = $i17 - $i18;

        $i20 = i6 + i8;

        $i19 = i7 + i9;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i6, i7, $i20, $i19);

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        i10 = virtualinvoke $r4.<android.support.v4.widget.CircleImageView: int getMeasuredWidth()>();

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        i11 = virtualinvoke $r5.<android.support.v4.widget.CircleImageView: int getMeasuredHeight()>();

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i22 = i4 / 2;

        $i21 = i10 / 2;

        $i29 = $i22 - $i21;

        $i28 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i24 = i4 / 2;

        $i23 = i10 / 2;

        $i27 = $i24 + $i23;

        $i25 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i26 = $i25 + i11;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void layout(int,int,int,int)>($i29, $i28, $i27, $i26);

        return;
    }

    public void onMeasure(int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        android.view.View $r1, $r2, $r3, $r5;
        android.support.v4.widget.CircleImageView $r4, $r6;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onMeasure(int,int)>(i0, i1);

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

     label1:
        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredWidth()>();

        $i3 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);

        $i8 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredHeight()>();

        $i9 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingBottom()>();

        $i12 = $i10 - $i11;

        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i7, $i13);

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i14 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter>;

        $i15 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, 1073741824);

        $i16 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter>;

        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i16, 1073741824);

        virtualinvoke $r4.<android.support.v4.widget.CircleImageView: void measure(int,int)>($i15, $i17);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex> = -1;

        i19 = 0;

     label3:
        $i18 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if i19 >= $i18 goto label5;

        $r5 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View getChildAt(int)>(i19);

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        if $r5 != $r6 goto label4;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleViewIndex> = i19;

        goto label5;

     label4:
        i19 = i19 + 1;

        goto label3;

     label5:
        return;
    }

    public int getProgressCircleDiameter()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCircleDiameter>;

        return $i0;
    }

    public boolean canChildScrollUp()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback $r1, $r7;
        android.view.View $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        android.widget.ListView $r5;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback>;

        if $r1 == null goto label1;

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback>;

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z3 = interfaceinvoke $r7.<android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback: boolean canChildScrollUp(android.support.v4.widget.SwipeRefreshLayout,android.view.View)>(r0, $r6);

        return $z3;

     label1:
        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z0 = $r2 instanceof android.widget.ListView;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $r5 = (android.widget.ListView) $r4;

        $z2 = staticinvoke <android.support.v4.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>($r5, -1);

        return $z2;

     label2:
        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z1 = virtualinvoke $r3.<android.view.View: boolean canScrollVertically(int)>(-1);

        return $z1;
    }

    public void setOnChildScrollUpCallback(android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback;

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback> = r1;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, i9, i10;
        float f0, $f1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r2;
        android.support.v4.widget.CircleImageView $r3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 == 0 goto label01;

        if i0 != 0 goto label01;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart> = 0;

     label01:
        $z5 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isEnabled()>();

        if $z5 == 0 goto label02;

        $z1 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z1 != 0 goto label02;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean canChildScrollUp()>();

        if $z2 != 0 goto label02;

        $z3 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z3 != 0 goto label02;

        $z4 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress>;

        if $z4 == 0 goto label03;

     label02:
        return 0;

     label03:
        tableswitch(i0)
        {
            case 0: goto label04;
            case 1: goto label10;
            case 2: goto label06;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label09;
            default: goto label11;
        };

     label04:
        $i4 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i5 = virtualinvoke $r3.<android.support.v4.widget.CircleImageView: int getTop()>();

        $i6 = $i4 - $i5;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i6);

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i7;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        $i8 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        i9 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i8);

        if i9 >= 0 goto label05;

        return 0;

     label05:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i9);

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialDownY> = $f1;

        goto label11;

     label06:
        $i1 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        if $i1 != -1 goto label07;

        $r2 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got ACTION_MOVE event but don\'t have an active pointer id.");

        return 0;

     label07:
        $i2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        i10 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i2);

        if i10 >= 0 goto label08;

        return 0;

     label08:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i10);

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startDragging(float)>(f0);

        goto label11;

     label09:
        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label11;

     label10:
        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

     label11:
        $z6 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        return $z6;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0, $z1, $z2;
        int $i0;
        android.view.View $r1, $r2, $r3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z2 = $r3 instanceof android.widget.AbsListView;

        if $z2 != 0 goto label3;

     label1:
        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r1 == null goto label2;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>($r2);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

     label3:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1, r2;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z1 != 0 goto label1;

        $z2 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z2 != 0 goto label1;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1, r2;
        int i0, $i1;
        android.support.v4.view.NestedScrollingParentHelper $r3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r3.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r1, r2, i0);

        $i1 = i0 & 2;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>($i1);

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed> = 0.0F;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress> = 1;

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19;
        int[] r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        byte $b8, $b12, $b13;
        android.support.v4.widget.CircleImageView $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        if i1 <= 0 goto label3;

        $f1 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label3;

        $f3 = (float) i1;

        $f2 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $b13 = $f3 cmpl $f2;

        if $b13 <= 0 goto label1;

        $f8 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $i14 = (int) $f8;

        $i15 = i1 - $i14;

        r2[1] = $i15;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed> = 0.0F;

        goto label2;

     label1:
        $f5 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $f4 = (float) i1;

        $f6 = $f5 - $f4;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed> = $f6;

        r2[1] = i1;

     label2:
        $f7 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void moveSpinner(float)>($f7);

     label3:
        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mUsingCustomStart>;

        if $z0 == 0 goto label4;

        if i1 <= 0 goto label4;

        $f0 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $b8 = $f0 cmpl 0.0F;

        if $b8 != 0 goto label4;

        $i9 = r2[1];

        $i10 = i1 - $i9;

        $i11 = staticinvoke <java.lang.Math: int abs(int)>($i10);

        if $i11 <= 0 goto label4;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r4.<android.support.v4.widget.CircleImageView: void setVisibility(int)>(8);

     label4:
        r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: int[] mParentScrollConsumed>;

        $i16 = r2[0];

        $i17 = i0 - $i16;

        $i18 = r2[1];

        $i19 = i1 - $i18;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i17, $i19, r3, null);

        if $z1 == 0 goto label5;

        $i3 = r2[0];

        $i2 = r3[0];

        $i4 = $i3 + $i2;

        r2[0] = $i4;

        $i6 = r2[1];

        $i5 = r3[1];

        $i7 = $i6 + $i5;

        r2[1] = $i7;

     label5:
        return;
    }

    public int getNestedScrollAxes()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.view.NestedScrollingParentHelper $r1;
        int $i0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1;
        android.support.v4.view.NestedScrollingParentHelper $r2;
        float $f0, $f1;
        byte $b0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r2.<android.support.v4.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)>(r1);

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress> = 0;

        $f0 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $f1 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void finishSpinner(float)>($f1);

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed> = 0.0F;

     label1:
        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void stopNestedScroll()>();

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        int[] $r2, $r3;
        boolean $z1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow>;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])>(i0, i1, i2, i3, $r2);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow>;

        $i5 = $r3[1];

        i4 = i3 + $i5;

        if i4 >= 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean canChildScrollUp()>();

        if $z1 != 0 goto label1;

        $f0 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>(i4);

        $f1 = (float) $i6;

        $f2 = $f0 + $f1;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed> = $f2;

        $f3 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalUnconsumed>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void moveSpinner(float)>($f3);

     label1:
        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        boolean z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>(z0);

        return;
    }

    public boolean isNestedScrollingEnabled()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $z0;
    }

    public boolean startNestedScroll(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>(i0);

        return $z0;
    }

    public void stopNestedScroll()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void stopNestedScroll()>();

        return;
    }

    public boolean hasNestedScrollingParent()
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, i1, i2, i3;
        int[] r1;
        android.support.v4.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>(i0, i1, i2, i3, r1);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, i1;
        int[] r1, r2;
        android.support.v4.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>(i0, i1, r1, r2);

        return $z0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1;
        float f0, f1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z0;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.View r1;
        float f0, f1;
        boolean z0, $z1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z1;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, f1;
        boolean z0, $z1;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z1 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z1;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, f1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z0;
    }

    private boolean isAnimationRunning(android.view.animation.Animation)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.animation.Animation r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.animation.Animation;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.animation.Animation: boolean hasStarted()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.animation.Animation: boolean hasEnded()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void moveSpinner(float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.support.v4.widget.CircularProgressDrawable $r1, $r2, $r4, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b2;
        android.view.animation.Animation $r3, $r5;
        android.support.v4.widget.CircleImageView $r6, $r7, $r8, $r9;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: void setArrowEnabled(boolean)>(1);

        $f11 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>;

        f1 = f0 / $f11;

        $f12 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f12);

        $d0 = (double) f2;

        $d1 = $d0 - 0.4;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d1, 0.0);

        $f13 = (float) $d2;

        $f14 = $f13 * 5.0F;

        f3 = $f14 / 3.0F;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f16 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>;

        f4 = $f15 - $f16;

        $i1 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCustomSlingshotDistance>;

        if $i1 <= 0 goto label1;

        $i7 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCustomSlingshotDistance>;

        $f21 = (float) $i7;

        goto label4;

     label1:
        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mUsingCustomStart>;

        if $z0 == 0 goto label2;

        $i6 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

        $i5 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        $i8 = $i6 - $i5;

        goto label3;

     label2:
        $i8 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd>;

     label3:
        $f21 = (float) $i8;

     label4:
        f5 = $f21;

        $f22 = f5 * 2.0F;

        $f23 = staticinvoke <java.lang.Math: float min(float,float)>(f4, $f22);

        $f24 = $f23 / f5;

        f6 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f24);

        $f25 = f6 / 4.0F;

        $d3 = (double) $f25;

        $f26 = f6 / 4.0F;

        $d4 = (double) $f26;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 2.0);

        $d6 = $d3 - $d5;

        $f27 = (float) $d6;

        f7 = $f27 * 2.0F;

        $f28 = f5 * f7;

        f8 = $f28 * 2.0F;

        $i9 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        $f29 = f5 * f2;

        $f30 = $f29 + f8;

        $i10 = (int) $f30;

        i0 = $i9 + $i10;

        $r9 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i11 = virtualinvoke $r9.<android.support.v4.widget.CircleImageView: int getVisibility()>();

        if $i11 == 0 goto label5;

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void setVisibility(int)>(0);

     label5:
        $z1 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>;

        if $z1 != 0 goto label6;

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void setScaleX(float)>(1.0F);

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r7.<android.support.v4.widget.CircleImageView: void setScaleY(float)>(1.0F);

     label6:
        $z2 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>;

        if $z2 == 0 goto label7;

        $f18 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>;

        $f19 = f0 / $f18;

        $f20 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f19);

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setAnimationProgress(float)>($f20);

     label7:
        $f17 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>;

        $b2 = f0 cmpg $f17;

        if $b2 >= 0 goto label8;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $i4 = virtualinvoke $r4.<android.support.v4.widget.CircularProgressDrawable: int getAlpha()>();

        if $i4 <= 76 goto label9;

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation>;

        $z4 = specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isAnimationRunning(android.view.animation.Animation)>($r5);

        if $z4 != 0 goto label9;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startProgressAlphaStartAnimation()>();

        goto label9;

     label8:
        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $i3 = virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: int getAlpha()>();

        if $i3 >= 255 goto label9;

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation>;

        $z3 = specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isAnimationRunning(android.view.animation.Animation)>($r3);

        if $z3 != 0 goto label9;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startProgressAlphaMaxAnimation()>();

     label9:
        f9 = f3 * 0.8F;

        $r10 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $f31 = staticinvoke <java.lang.Math: float min(float,float)>(0.8F, f9);

        virtualinvoke $r10.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, $f31);

        $r11 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        $f32 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, f3);

        virtualinvoke $r11.<android.support.v4.widget.CircularProgressDrawable: void setArrowScale(float)>($f32);

        $f33 = 0.4F * f3;

        $f34 = -0.25F + $f33;

        $f35 = f7 * 2.0F;

        $f36 = $f34 + $f35;

        f10 = $f36 * 0.5F;

        $r12 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r12.<android.support.v4.widget.CircularProgressDrawable: void setProgressRotation(float)>(f10);

        $i12 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i13 = i0 - $i12;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i13);

        return;
    }

    private void finishSpinner(float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, $f1;
        byte $b0;
        android.support.v4.widget.CircularProgressDrawable $r1, $r2;
        boolean $z0;
        int $i1;
        android.support.v4.widget.SwipeRefreshLayout$5 $r3, r4;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mTotalDragDistance>;

        $b0 = f0 cmpl $f1;

        if $b0 <= 0 goto label1;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean,boolean)>(1, 1);

        goto label3;

     label1:
        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = 0;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: void setStartEndTrim(float,float)>(0.0F, 0.0F);

        r4 = null;

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>;

        if $z0 != 0 goto label2;

        $r3 = new android.support.v4.widget.SwipeRefreshLayout$5;

        specialinvoke $r3.<android.support.v4.widget.SwipeRefreshLayout$5: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r4 = $r3;

     label2:
        $i1 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)>($i1, r4);

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r2.<android.support.v4.widget.CircularProgressDrawable: void setArrowEnabled(boolean)>(0);

     label3:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i3, $i6, $i8, i10, i11, i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r2, $r3, $r4;
        float $f0, $f1, $f2, $f3, f4, f5, f6, f7;
        byte $b4, b9;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        b9 = -1;

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 == 0 goto label01;

        if i0 != 0 goto label01;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart> = 0;

     label01:
        $z7 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isEnabled()>();

        if $z7 == 0 goto label02;

        $z1 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z1 != 0 goto label02;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: boolean canChildScrollUp()>();

        if $z2 != 0 goto label02;

        $z3 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z3 != 0 goto label02;

        $z4 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress>;

        if $z4 == 0 goto label03;

     label02:
        return 0;

     label03:
        tableswitch(i0)
        {
            case 0: goto label04;
            case 1: goto label12;
            case 2: goto label05;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label09;
            case 6: goto label11;
            default: goto label16;
        };

     label04:
        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i8;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        goto label16;

     label05:
        $i3 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        i10 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i3);

        if i10 >= 0 goto label06;

        $r3 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Got ACTION_MOVE event but have an invalid active pointer id.");

        return 0;

     label06:
        f4 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i10);

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startDragging(float)>(f4);

        $z5 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        if $z5 == 0 goto label16;

        $f0 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY>;

        $f1 = f4 - $f0;

        f5 = $f1 * 0.5F;

        $b4 = f5 cmpl 0.0F;

        if $b4 <= 0 goto label07;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void moveSpinner(float)>(f5);

        goto label08;

     label07:
        return 0;

     label08:
        goto label16;

     label09:
        i11 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        if i11 >= 0 goto label10;

        $r2 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got ACTION_POINTER_DOWN event but have an invalid action index.");

        return 0;

     label10:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i11);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i1;

        goto label16;

     label11:
        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label16;

     label12:
        $i6 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        i12 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i6);

        if i12 >= 0 goto label13;

        $r4 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "Got ACTION_UP event but don\'t have an active pointer id.");

        return 0;

     label13:
        $z6 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        if $z6 == 0 goto label14;

        f6 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i12);

        $f2 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY>;

        $f3 = f6 - $f2;

        f7 = $f3 * 0.5F;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void finishSpinner(float)>(f7);

     label14:
        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

        return 0;

     label15:
        return 0;

     label16:
        return 1;
    }

    private void startDragging(float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        int $i0, $i2;
        byte $b1;
        boolean $z0;
        android.support.v4.widget.CircularProgressDrawable $r1;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        $f2 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialDownY>;

        f1 = f0 - $f2;

        $i0 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop>;

        $f3 = (float) $i0;

        $b1 = f1 cmpl $f3;

        if $b1 <= 0 goto label1;

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        if $z0 != 0 goto label1;

        $f5 = r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialDownY>;

        $i2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop>;

        $f4 = (float) $i2;

        $f6 = $f5 + $f4;

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY> = $f6;

        r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 1;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircularProgressDrawable mProgress>;

        virtualinvoke $r1.<android.support.v4.widget.CircularProgressDrawable: void setAlpha(int)>(76);

     label1:
        return;
    }

    private void animateOffsetToCorrectPosition(int, android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.view.animation.Animation$AnimationListener r1;
        android.view.animation.Animation $r2, $r3, $r5, $r7;
        android.view.animation.DecelerateInterpolator $r4;
        android.support.v4.widget.CircleImageView $r6, $r8, $r9;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.animation.Animation$AnimationListener;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom> = i0;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition>;

        virtualinvoke $r2.<android.view.animation.Animation: void reset()>();

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition>;

        virtualinvoke $r3.<android.view.animation.Animation: void setDuration(long)>(200L);

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition>;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke $r5.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r4);

        if r1 == null goto label1;

        $r9 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r9.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r1);

     label1:
        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>($r7);

        return;
    }

    private void animateOffsetToStartPosition(int, android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.view.animation.Animation$AnimationListener r1;
        boolean $z0;
        android.view.animation.Animation $r2, $r3, $r5, $r7;
        android.view.animation.DecelerateInterpolator $r4;
        android.support.v4.widget.CircleImageView $r6, $r8, $r9;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.animation.Animation$AnimationListener;

        $z0 = r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mScale>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener)>(i0, r1);

        goto label3;

     label1:
        r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom> = i0;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r2.<android.view.animation.Animation: void reset()>();

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r3.<android.view.animation.Animation: void setDuration(long)>(200L);

        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke $r5.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r4);

        if r1 == null goto label2;

        $r9 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r9.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r1);

     label2:
        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r6.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>($r7);

     label3:
        return;
    }

    void moveToStart(float)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        float f0, $f1, $f2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.support.v4.widget.CircleImageView $r1;
        boolean z0;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        f0 := @parameter0: float;

        z0 = 0;

        $i5 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom>;

        $i2 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        $i1 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = $f1 * f0;

        $i4 = (int) $f2;

        i7 = $i5 + $i4;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i6 = virtualinvoke $r1.<android.support.v4.widget.CircleImageView: int getTop()>();

        i0 = i7 - $i6;

        virtualinvoke r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>(i0);

        return;
    }

    private void startScaleDownReturnToStartAnimation(int, android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0;
        android.view.animation.Animation$AnimationListener r1;
        android.support.v4.widget.CircleImageView $r2, $r5, $r7, $r8;
        float $f0;
        android.support.v4.widget.SwipeRefreshLayout$8 $r3;
        android.view.animation.Animation $r4, $r6;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.animation.Animation$AnimationListener;

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom> = i0;

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $f0 = virtualinvoke $r2.<android.support.v4.widget.CircleImageView: float getScaleX()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: float mStartingScale> = $f0;

        $r3 = new android.support.v4.widget.SwipeRefreshLayout$8;

        specialinvoke $r3.<android.support.v4.widget.SwipeRefreshLayout$8: void <init>(android.support.v4.widget.SwipeRefreshLayout)>(r0);

        r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation> = $r3;

        $r4 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation>;

        virtualinvoke $r4.<android.view.animation.Animation: void setDuration(long)>(150L);

        if r1 == null goto label1;

        $r8 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r8.<android.support.v4.widget.CircleImageView: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r1);

     label1:
        $r5 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r5.<android.support.v4.widget.CircleImageView: void clearAnimation()>();

        $r7 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $r6 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation>;

        virtualinvoke $r7.<android.support.v4.widget.CircleImageView: void startAnimation(android.view.animation.Animation)>($r6);

        return;
    }

    void setTargetOffsetTopAndBottom(int)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        int i0, $i1;
        android.support.v4.widget.CircleImageView $r1, $r2, $r3;
        android.view.View r4;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        virtualinvoke $r1.<android.support.v4.widget.CircleImageView: void bringToFront()>();

        $r2 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        r4 = (android.view.View) $r2;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r4, i0);

        $r3 = r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.CircleImageView mCircleView>;

        $i1 = virtualinvoke $r3.<android.support.v4.widget.CircleImageView: int getTop()>();

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop> = $i1;

        return;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i3, $i4;
        byte b2, $b5;

        r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i3 = r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        if i1 != $i3 goto label3;

        if i0 != 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        b2 = $b5;

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b2);

        r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i4;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int[] $r2;

        $r0 = class "Landroid/support/v4/widget/SwipeRefreshLayout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 16842766;

        <android.support.v4.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS> = $r2;

        return;
    }

