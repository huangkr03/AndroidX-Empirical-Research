android.support.design.widget.HeaderScrollingViewBehavior
<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect1>
<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect2>
<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap>
<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop>
    public void <init>()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.graphics.Rect $r1, $r2;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect1> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect2> = $r2;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap> = 0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect1> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect2> = $r4;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap> = 0;

        return;
    }

    public boolean onMeasureChild(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int, int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout r1;
        android.view.View r2, r4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, i11, $i12;
        java.util.List r3;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        i4 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if i4 == -1 goto label1;

        if i4 != -2 goto label6;

     label1:
        r3 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>(r2);

        r4 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>(r3);

        if r4 == null goto label6;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r4);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r2);

        if $z1 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>(r2, 1);

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r2);

        if $z2 == 0 goto label2;

        virtualinvoke r2.<android.view.View: void requestLayout()>();

        return 1;

     label2:
        i11 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i2);

        if i11 != 0 goto label3;

        i11 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

     label3:
        $i7 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        $i8 = i11 - $i7;

        $i9 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getScrollRange(android.view.View)>(r4);

        i5 = $i8 + $i9;

        if i4 != -1 goto label4;

        $i12 = 1073741824;

        goto label5;

     label4:
        $i12 = -2147483648;

     label5:
        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, $i12);

        virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>(r2, i0, i1, i6, i3);

        return 1;

     label6:
        return 0;
    }

    protected void layoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout r1;
        android.view.View r2, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.util.List r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.graphics.Rect r6, r8;
        android.support.v4.view.WindowInsetsCompat r7;
        android.view.ViewGroup$LayoutParams $r9;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>(r2);

        r4 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>(r3);

        if r4 == null goto label2;

        $r9 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r9;

        r6 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect1>;

        $i2 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i3 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r4.<android.view.View: int getBottom()>();

        $i6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i9 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i11 = $i8 - $i9;

        $i10 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i12 = $i11 - $i10;

        $i13 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i14 = virtualinvoke r4.<android.view.View: int getBottom()>();

        $i15 = $i13 + $i14;

        $i16 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i18 = $i15 - $i16;

        $i17 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i19 = $i18 - $i17;

        virtualinvoke r6.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i7, $i12, $i19);

        r7 = virtualinvoke r1.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat getLastWindowInsets()>();

        if r7 == null goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r2);

        if $z1 != 0 goto label1;

        $i20 = r6.<android.graphics.Rect: int left>;

        $i21 = virtualinvoke r7.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i22 = $i20 + $i21;

        r6.<android.graphics.Rect: int left> = $i22;

        $i23 = r6.<android.graphics.Rect: int right>;

        $i24 = virtualinvoke r7.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i25 = $i23 - $i24;

        r6.<android.graphics.Rect: int right> = $i25;

     label1:
        r8 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect tempRect2>;

        $i26 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i27 = staticinvoke <android.support.design.widget.HeaderScrollingViewBehavior: int resolveGravity(int)>($i26);

        $i28 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i29 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        staticinvoke <android.support.v4.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i27, $i28, $i29, r6, r8, i0);

        i1 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getOverlapPixelsForOffset(android.view.View)>(r4);

        $i30 = r8.<android.graphics.Rect: int left>;

        $i31 = r8.<android.graphics.Rect: int top>;

        $i32 = $i31 - i1;

        $i33 = r8.<android.graphics.Rect: int right>;

        $i34 = r8.<android.graphics.Rect: int bottom>;

        $i35 = $i34 - i1;

        virtualinvoke r2.<android.view.View: void layout(int,int,int,int)>($i30, $i32, $i33, $i35);

        $i36 = r8.<android.graphics.Rect: int top>;

        $i37 = virtualinvoke r4.<android.view.View: int getBottom()>();

        $i38 = $i36 - $i37;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap> = $i38;

        goto label3;

     label2:
        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>(r1, r2, i0);

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap> = 0;

     label3:
        return;
    }

    float getOverlapRatioForOffset(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View r1;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.view.View;

        return 1.0F;
    }

    final int getOverlapPixelsForOffset(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.view.View;

        $i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop>;

        if $i0 != 0 goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $f0 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)>(r1);

        $i1 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop>;

        $f1 = (float) $i1;

        $f2 = $f0 * $f1;

        $i3 = (int) $f2;

        $i2 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop>;

        $i4 = staticinvoke <android.support.design.widget.MathUtils: int constrain(int,int,int)>($i3, 0, $i2);

     label2:
        return $i4;
    }

    private static int resolveGravity(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i1 = 8388659;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

<android.support.design.widget.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>
    int getScrollRange(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View r1;
        int $i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        return $i0;
    }

    final int getVerticalLayoutGap()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int verticalLayoutGap>;

        return $i0;
    }

    public final void setOverlayTop(int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        i0 := @parameter0: int;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop> = i0;

        return;
    }

    public final int getOverlayTop()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int overlayTop>;

        return $i0;
    }

