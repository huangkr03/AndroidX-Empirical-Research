android.support.v4.provider.RawDocumentFile
<android.support.v4.provider.RawDocumentFile: java.io.File mFile>
    void <init>(android.support.v4.provider.DocumentFile, java.io.File)
    {
        android.support.v4.provider.RawDocumentFile r0;
        android.support.v4.provider.DocumentFile r1;
        java.io.File r2;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        r1 := @parameter0: android.support.v4.provider.DocumentFile;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<android.support.v4.provider.DocumentFile: void <init>(android.support.v4.provider.DocumentFile)>(r1);

        r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = r2;

        return;
    }

    public android.support.v4.provider.DocumentFile createFile(java.lang.String, java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile r0, $r8;
        java.lang.String r1, r2, $r17, r18;
        java.io.File r3, $r6, $r7;
        java.lang.Throwable r4, $r13;
        android.webkit.MimeTypeMap $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        r1 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        $r5 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        r2 = virtualinvoke $r5.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = new java.io.File;

        $r7 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r18);

        r3 = $r6;

     label2:
        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

        $r8 = new android.support.v4.provider.RawDocumentFile;

        specialinvoke $r8.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>(r0, r3);

     label3:
        return $r8;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to createFile: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r17);

        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public android.support.v4.provider.DocumentFile createDirectory(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile r0, $r5;
        java.lang.String r1;
        java.io.File r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.io.File;

        $r4 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r1);

        r2 = $r3;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>();

        if $z1 == 0 goto label2;

     label1:
        $r5 = new android.support.v4.provider.RawDocumentFile;

        specialinvoke $r5.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>(r0, r2);

        return $r5;

     label2:
        return null;
    }

    public android.net.Uri getUri()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        android.net.Uri $r2;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        return $r2;
    }

    public java.lang.String getName()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getType()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1, $r2;
        boolean $z0;
        java.lang.String $r3, $r4;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r4 = staticinvoke <android.support.v4.provider.RawDocumentFile: java.lang.String getTypeForName(java.lang.String)>($r3);

        return $r4;
    }

    public boolean isDirectory()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        return $z0;
    }

    public boolean isFile()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        return $z0;
    }

    public boolean isVirtual()
    {
        android.support.v4.provider.RawDocumentFile r0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        return 0;
    }

    public long lastModified()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        long $l0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();

        return $l0;
    }

    public long length()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        long $l0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public boolean canRead()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        return $z0;
    }

    public boolean canWrite()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        return $z0;
    }

    public boolean delete()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1, $r2;
        boolean $z1;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r1);

        $r2 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        return $z1;
    }

    public boolean exists()
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public android.support.v4.provider.DocumentFile[] listFiles()
    {
        android.support.v4.provider.RawDocumentFile r0, $r10;
        java.util.ArrayList r1, $r5;
        java.io.File[] r2, r3;
        int i0, $i1, i2;
        java.io.File r4, $r6;
        android.support.v4.provider.DocumentFile[] $r7, $r9;
        java.lang.Object[] $r8;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        r2 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        if r2 == null goto label2;

        r3 = r2;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r4 = r3[i2];

        $r10 = new android.support.v4.provider.RawDocumentFile;

        specialinvoke $r10.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>(r0, r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r7 = newarray (android.support.v4.provider.DocumentFile)[$i1];

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.support.v4.provider.DocumentFile[]) $r8;

        return $r9;
    }

    public boolean renameTo(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile r0;
        java.lang.String r1;
        java.io.File r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.support.v4.provider.RawDocumentFile;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.io.File;

        $r4 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r5 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r1);

        r2 = $r3;

        $r6 = r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r6.<java.io.File: boolean renameTo(java.io.File)>(r2);

        if $z0 == 0 goto label1;

        r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = r2;

        return 1;

     label1:
        return 0;
    }

    private static java.lang.String getTypeForName(java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3;
        int i0, $i1;
        android.webkit.MimeTypeMap $r4;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label1;

        $i1 = i0 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        r2 = virtualinvoke $r4.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        return "application/octet-stream";
    }

    private static boolean deleteContents(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i2;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        z3 = 1;

        if r1 == null goto label4;

        r2 = r1;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r3 = r2[i2];

        $z0 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $z2 = staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>(r3);

        z3 = z3 & $z2;

     label2:
        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r7);

        z3 = 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return z3;
    }

