android.support.design.widget.TextInputLayout
<android.support.design.widget.TextInputLayout: int LABEL_SCALE_ANIMATION_DURATION>
<android.support.design.widget.TextInputLayout: int INVALID_MAX_LENGTH>
<android.support.design.widget.TextInputLayout: java.lang.String LOG_TAG>
<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>
<android.support.design.widget.TextInputLayout: android.widget.EditText editText>
<android.support.design.widget.TextInputLayout: java.lang.CharSequence originalHint>
<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>
<android.support.design.widget.TextInputLayout: boolean counterEnabled>
<android.support.design.widget.TextInputLayout: int counterMaxLength>
<android.support.design.widget.TextInputLayout: boolean counterOverflowed>
<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>
<android.support.design.widget.TextInputLayout: int counterOverflowTextAppearance>
<android.support.design.widget.TextInputLayout: int counterTextAppearance>
<android.support.design.widget.TextInputLayout: boolean hintEnabled>
<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>
<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>
<android.support.design.widget.TextInputLayout: int boxPaddingLeftPx>
<android.support.design.widget.TextInputLayout: int boxExpandedPaddingTopPx>
<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingTopPx>
<android.support.design.widget.TextInputLayout: int boxPaddingRightPx>
<android.support.design.widget.TextInputLayout: int boxExpandedPaddingBottomPx>
<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingBottomPx>
<android.support.design.widget.TextInputLayout: int boxBottomOffsetPx>
<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx>
<android.support.design.widget.TextInputLayout: int boxBackgroundMode>
<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft>
<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight>
<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight>
<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft>
<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx>
<android.support.design.widget.TextInputLayout: int boxStrokeWidthDefaultPx>
<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>
<android.support.design.widget.TextInputLayout: int boxStrokeColor>
<android.support.design.widget.TextInputLayout: int boxBackgroundColor>
<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable editTextOriginalDrawable>
<android.support.design.widget.TextInputLayout: int BOX_BACKGROUND_NONE>
<android.support.design.widget.TextInputLayout: int BOX_BACKGROUND_FILLED>
<android.support.design.widget.TextInputLayout: int BOX_BACKGROUND_OUTLINE>
<android.support.design.widget.TextInputLayout: android.graphics.Rect tmpRect>
<android.support.design.widget.TextInputLayout: android.graphics.RectF tmpRectF>
<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface>
<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled>
<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>
<android.support.design.widget.TextInputLayout: java.lang.CharSequence passwordToggleContentDesc>
<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>
<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>
<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>
<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable>
<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList passwordToggleTintList>
<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintList>
<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode passwordToggleTintMode>
<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintMode>
<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor>
<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor>
<android.support.design.widget.TextInputLayout: int defaultStrokeColor>
<android.support.design.widget.TextInputLayout: int hoveredStrokeColor>
<android.support.design.widget.TextInputLayout: int focusedStrokeColor>
<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor>
<android.support.design.widget.TextInputLayout: int disabledColor>
<android.support.design.widget.TextInputLayout: boolean hintExpanded>
<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>
<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled>
<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>
<android.support.design.widget.TextInputLayout: boolean hasReconstructedEditTextBackground>
<android.support.design.widget.TextInputLayout: boolean inDrawableStateChanged>
<android.support.design.widget.TextInputLayout: boolean restoringSavedState>
    public void <init>(android.content.Context)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <android.support.design.widget.R$attr: int textInputStyle>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71;
        android.support.v7.widget.TintTypedArray r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.CharSequence r4, $r18, $r24;
        android.widget.FrameLayout $r10, $r11, r33;
        android.animation.TimeInterpolator $r12, $r14;
        android.support.design.widget.CollapsingTextHelper $r13, $r15, $r16, r32;
        int[] $r17;
        android.content.res.Resources $r19, $r20, $r21, $r22;
        float $f0, $f1, $f2, $f3;
        android.graphics.drawable.Drawable $r23;
        android.graphics.PorterDuff$Mode $r26;
        android.content.res.ColorStateList $r27, $r28;
        android.support.design.widget.IndicatorViewController r29;
        android.graphics.Rect r30;
        android.graphics.RectF r31;
        android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate r34;
        android.view.View r35, r36, r37, r38, r39;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r29 = new android.support.design.widget.IndicatorViewController;

        specialinvoke r29.<android.support.design.widget.IndicatorViewController: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController> = r29;

        r30 = new android.graphics.Rect;

        specialinvoke r30.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Rect tmpRect> = r30;

        r31 = new android.graphics.RectF;

        specialinvoke r31.<android.graphics.RectF: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.RectF tmpRectF> = r31;

        r32 = new android.support.design.widget.CollapsingTextHelper;

        r35 = (android.view.View) r0;

        specialinvoke r32.<android.support.design.widget.CollapsingTextHelper: void <init>(android.view.View)>(r35);

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper> = r32;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setOrientation(int)>(1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setAddStatesFromChildren(boolean)>(1);

        r33 = new android.widget.FrameLayout;

        specialinvoke r33.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame> = r33;

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r10.<android.widget.FrameLayout: void setAddStatesFromChildren(boolean)>(1);

        $r11 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        r36 = (android.view.View) $r11;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void addView(android.view.View)>(r36);

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r12 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r13.<android.support.design.widget.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>($r12);

        $r15 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r14 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r15.<android.support.design.widget.CollapsingTextHelper: void setPositionInterpolator(android.animation.TimeInterpolator)>($r14);

        $r16 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r16.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>(8388659);

        $r17 = <android.support.design.widget.R$styleable: int[] TextInputLayout>;

        $i5 = <android.support.design.widget.R$style: int Widget_Design_TextInputLayout>;

        r3 = staticinvoke <android.support.design.internal.ThemeEnforcement: android.support.v7.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>(r1, r2, $r17, i0, $i5);

        $i6 = <android.support.design.widget.R$styleable: int TextInputLayout_hintEnabled>;

        $z3 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i6, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled> = $z3;

        $i7 = <android.support.design.widget.R$styleable: int TextInputLayout_android_hint>;

        $r18 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i7);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r18);

        $i8 = <android.support.design.widget.R$styleable: int TextInputLayout_hintAnimationEnabled>;

        $z4 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i8, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled> = $z4;

        $i9 = <android.support.design.widget.R$styleable: int TextInputLayout_boxPaddingLeft>;

        $i10 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i9, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxPaddingLeftPx> = $i10;

        $i11 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCollapsedPaddingTop>;

        $i12 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i11, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingTopPx> = $i12;

        $i13 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCollapsedPaddingBottom>;

        $i14 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i13, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingBottomPx> = $i14;

        $i15 = <android.support.design.widget.R$styleable: int TextInputLayout_boxExpandedPaddingTop>;

        $i16 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i15, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingTopPx> = $i16;

        $i17 = <android.support.design.widget.R$styleable: int TextInputLayout_boxPaddingRight>;

        $i18 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i17, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxPaddingRightPx> = $i18;

        $i19 = <android.support.design.widget.R$styleable: int TextInputLayout_boxExpandedPaddingBottom>;

        $i20 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i19, 0);

        r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingBottomPx> = $i20;

        $r19 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i21 = <android.support.design.widget.R$dimen: int mtrl_textinput_box_bottom_offset>;

        $i22 = virtualinvoke $r19.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i21);

        r0.<android.support.design.widget.TextInputLayout: int boxBottomOffsetPx> = $i22;

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i23 = <android.support.design.widget.R$dimen: int mtrl_textinput_box_label_cutout_padding>;

        $i24 = virtualinvoke $r20.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i23);

        r0.<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx> = $i24;

        $i25 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCornerRadiusTopLeft>;

        $f0 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: float getDimension(int,float)>($i25, 0.0F);

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft> = $f0;

        $i26 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCornerRadiusTopRight>;

        $f1 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: float getDimension(int,float)>($i26, 0.0F);

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight> = $f1;

        $i27 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCornerRadiusBottomRight>;

        $f2 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: float getDimension(int,float)>($i27, 0.0F);

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight> = $f2;

        $i28 = <android.support.design.widget.R$styleable: int TextInputLayout_boxCornerRadiusBottomLeft>;

        $f3 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: float getDimension(int,float)>($i28, 0.0F);

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft> = $f3;

        $i29 = <android.support.design.widget.R$styleable: int TextInputLayout_boxBackgroundColor>;

        $i30 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getColor(int,int)>($i29, 0);

        r0.<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor> = $i30;

        $i31 = r0.<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor>;

        r0.<android.support.design.widget.TextInputLayout: int boxBackgroundColor> = $i31;

        $i32 = <android.support.design.widget.R$styleable: int TextInputLayout_boxStrokeColor>;

        $i33 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getColor(int,int)>($i32, 0);

        r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor> = $i33;

        $r21 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i34 = <android.support.design.widget.R$dimen: int mtrl_textinput_box_stroke_width_default>;

        $i35 = virtualinvoke $r21.<android.content.res.Resources: int getDimensionPixelSize(int)>($i34);

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthDefaultPx> = $i35;

        $r22 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i36 = <android.support.design.widget.R$dimen: int mtrl_textinput_box_stroke_width_focused>;

        $i37 = virtualinvoke $r22.<android.content.res.Resources: int getDimensionPixelSize(int)>($i36);

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx> = $i37;

        $i38 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthDefaultPx>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx> = $i38;

        $i39 = <android.support.design.widget.R$styleable: int TextInputLayout_boxBackgroundMode>;

        i1 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i39, 0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setBoxBackgroundMode(int)>(i1);

        $i40 = <android.support.design.widget.R$styleable: int TextInputLayout_android_textColorHint>;

        $z5 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i40);

        if $z5 == 0 goto label1;

        $i71 = <android.support.design.widget.R$styleable: int TextInputLayout_android_textColorHint>;

        $r28 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($i71);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r28;

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor> = $r28;

     label1:
        $i41 = <android.support.design.widget.R$color: int mtrl_textinput_default_box_stroke_color>;

        $i42 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r1, $i41);

        r0.<android.support.design.widget.TextInputLayout: int defaultStrokeColor> = $i42;

        $i43 = <android.support.design.widget.R$color: int mtrl_textinput_disabled_color>;

        $i44 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r1, $i43);

        r0.<android.support.design.widget.TextInputLayout: int disabledColor> = $i44;

        $i45 = <android.support.design.widget.R$color: int mtrl_textinput_hovered_box_stroke_color>;

        $i46 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r1, $i45);

        r0.<android.support.design.widget.TextInputLayout: int hoveredStrokeColor> = $i46;

        $i47 = <android.support.design.widget.R$styleable: int TextInputLayout_hintTextAppearance>;

        i2 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i47, -1);

        if i2 == -1 goto label2;

        $i69 = <android.support.design.widget.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i70 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i69, 0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHintTextAppearance(int)>($i70);

     label2:
        $i48 = <android.support.design.widget.R$styleable: int TextInputLayout_errorTextAppearance>;

        i3 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i48, 0);

        $i49 = <android.support.design.widget.R$styleable: int TextInputLayout_errorEnabled>;

        z0 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i49, 0);

        $i50 = <android.support.design.widget.R$styleable: int TextInputLayout_helperTextTextAppearance>;

        i4 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i50, 0);

        $i51 = <android.support.design.widget.R$styleable: int TextInputLayout_helperTextEnabled>;

        z1 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i51, 0);

        $i52 = <android.support.design.widget.R$styleable: int TextInputLayout_helperText>;

        r4 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i52);

        $i53 = <android.support.design.widget.R$styleable: int TextInputLayout_counterEnabled>;

        z2 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i53, 0);

        $i54 = <android.support.design.widget.R$styleable: int TextInputLayout_counterMaxLength>;

        $i55 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i54, -1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterMaxLength(int)>($i55);

        $i56 = <android.support.design.widget.R$styleable: int TextInputLayout_counterTextAppearance>;

        $i57 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i56, 0);

        r0.<android.support.design.widget.TextInputLayout: int counterTextAppearance> = $i57;

        $i58 = <android.support.design.widget.R$styleable: int TextInputLayout_counterOverflowTextAppearance>;

        $i59 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i58, 0);

        r0.<android.support.design.widget.TextInputLayout: int counterOverflowTextAppearance> = $i59;

        $i60 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleEnabled>;

        $z6 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i60, 0);

        r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled> = $z6;

        $i61 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleDrawable>;

        $r23 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i61);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable> = $r23;

        $i62 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleContentDescription>;

        $r24 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i62);

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence passwordToggleContentDesc> = $r24;

        $i63 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleTint>;

        $z7 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i63);

        if $z7 == 0 goto label3;

        r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintList> = 1;

        $i68 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleTint>;

        $r27 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($i68);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList passwordToggleTintList> = $r27;

     label3:
        $i64 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $z8 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i64);

        if $z8 == 0 goto label4;

        r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintMode> = 1;

        $i66 = <android.support.design.widget.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $i67 = virtualinvoke r3.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i66, -1);

        $r26 = staticinvoke <android.support.design.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i67, null);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode passwordToggleTintMode> = $r26;

     label4:
        virtualinvoke r3.<android.support.v7.widget.TintTypedArray: void recycle()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHelperTextEnabled(boolean)>(z1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHelperText(java.lang.CharSequence)>(r4);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHelperTextTextAppearance(int)>(i4);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>(z0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorTextAppearance(int)>(i3);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterEnabled(boolean)>(z2);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        r37 = (android.view.View) r0;

        $i65 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r37);

        if $i65 != 0 goto label5;

        r38 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r38, 1);

     label5:
        r34 = new android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate;

        specialinvoke r34.<android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        r39 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r39, r34);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.TextInputLayout r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams r2, r9;
        android.widget.FrameLayout$LayoutParams r3, r8;
        boolean $z0;
        android.widget.FrameLayout $r5, $r6;
        android.widget.EditText $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.EditText;

        if $z0 == 0 goto label1;

        r8 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r8.<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r2);

        r3 = r8;

        $i1 = r3.<android.widget.FrameLayout$LayoutParams: int gravity>;

        $i2 = $i1 & -113;

        $i3 = 16 | $i2;

        r3.<android.widget.FrameLayout$LayoutParams: int gravity> = $i3;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        r9 = (android.view.ViewGroup$LayoutParams) r3;

        virtualinvoke $r5.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r9);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r6.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

        $r7 = (android.widget.EditText) r1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setEditText(android.widget.EditText)>($r7);

        goto label2;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

     label2:
        return;
    }

    private android.graphics.drawable.Drawable getBoxBackground()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        android.graphics.drawable.GradientDrawable $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 1 goto label1;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i1 != 2 goto label2;

     label1:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        return $r1;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;
    }

    public void setBoxBackgroundMode(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode> = i0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void onApplyBoxBackgroundMode()>();

        return;
    }

    private void onApplyBoxBackgroundMode()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void assignBoxBackgroundByMode()>();

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

     label1:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateTextInputBoxBounds()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyEditTextBoxPadding()>();

        return;
    }

    private void assignBoxBackgroundByMode()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        android.graphics.drawable.GradientDrawable $r1, $r2, $r4;
        boolean $z0, $z1, $z2;
        android.support.design.widget.CutoutDrawable $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 0 goto label1;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground> = null;

        goto label3;

     label1:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i1 != 2 goto label2;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $z1 = $r2 instanceof android.support.design.widget.CutoutDrawable;

        if $z1 != 0 goto label2;

        $r3 = new android.support.design.widget.CutoutDrawable;

        specialinvoke $r3.<android.support.design.widget.CutoutDrawable: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground> = $r3;

        goto label3;

     label2:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $z2 = $r4 instanceof android.graphics.drawable.GradientDrawable;

        if $z2 != 0 goto label3;

        $r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground> = $r1;

     label3:
        return;
    }

    private void applyEditTextBoxPadding()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.EditText $r1, $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i1 == 0 goto label2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i5 = r0.<android.support.design.widget.TextInputLayout: int boxPaddingLeftPx>;

        $i4 = r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingTopPx>;

        $i3 = r0.<android.support.design.widget.TextInputLayout: int boxPaddingRightPx>;

        $i2 = r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingBottomPx>;

        virtualinvoke $r2.<android.widget.EditText: void setPadding(int,int,int,int)>($i5, $i4, $i3, $i2);

     label2:
        return;
    }

    public void setBoxPadding(int, int, int, int, int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r0.<android.support.design.widget.TextInputLayout: int boxPaddingLeftPx> = i0;

        r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingTopPx> = i1;

        r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingTopPx> = i2;

        r0.<android.support.design.widget.TextInputLayout: int boxPaddingRightPx> = i3;

        r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingBottomPx> = i4;

        r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingBottomPx> = i5;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyEditTextBoxPadding()>();

        return;
    }

    public int getBoxPaddingLeft()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxPaddingLeftPx>;

        return $i0;
    }

    public int getBoxCollapsedPaddingTop()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingTopPx>;

        return $i0;
    }

    public int getBoxExpandedPaddingTop()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingTopPx>;

        return $i0;
    }

    public int getBoxPaddingRight()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxPaddingRightPx>;

        return $i0;
    }

    public int getBoxCollapsedPaddingBottom()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingBottomPx>;

        return $i0;
    }

    public int getBoxExpandedPaddingBottom()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxExpandedPaddingBottomPx>;

        return $i0;
    }

    public void setBoxStrokeColor(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor>;

        if $i1 == i0 goto label1;

        r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor> = i0;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateTextInputBoxState()>();

     label1:
        return;
    }

    public int getBoxStrokeColor()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor>;

        return $i0;
    }

    public void setBoxBackgroundColorResource(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setBoxBackgroundColor(int)>($i1);

        return;
    }

    public void setBoxBackgroundColor(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor>;

        if $i1 == i0 goto label1;

        r0.<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor> = i0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyBoxAttributes()>();

     label1:
        return;
    }

    public int getBoxBackgroundColor()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int defaultBoxBackgroundColor>;

        return $i0;
    }

    public void setBoxCornerRadiiResources(int, int, int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, i1, i2, i3;
        android.content.Context $r1, $r3, $r5, $r7;
        android.content.res.Resources $r2, $r4, $r6, $r8;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>(i0);

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $f1 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>(i1);

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $f2 = virtualinvoke $r6.<android.content.res.Resources: float getDimension(int)>(i2);

        $r7 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $f3 = virtualinvoke $r8.<android.content.res.Resources: float getDimension(int)>(i3);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setBoxCornerRadii(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;
    }

    public void setBoxCornerRadii(float, float, float, float)
    {
        android.support.design.widget.TextInputLayout r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f4 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft>;

        $b0 = $f4 cmpl f0;

        if $b0 != 0 goto label1;

        $f5 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight>;

        $b1 = $f5 cmpl f1;

        if $b1 != 0 goto label1;

        $f6 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight>;

        $b2 = $f6 cmpl f3;

        if $b2 != 0 goto label1;

        $f7 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft>;

        $b3 = $f7 cmpl f2;

        if $b3 == 0 goto label2;

     label1:
        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft> = f0;

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight> = f1;

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight> = f3;

        r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft> = f2;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyBoxAttributes()>();

     label2:
        return;
    }

    public float getBoxCornerRadiusTopLeft()
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft>;

        return $f0;
    }

    public float getBoxCornerRadiusTopRight()
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight>;

        return $f0;
    }

    public float getBoxCornerRadiusBottomRight()
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight>;

        return $f0;
    }

    public float getBoxCornerRadiusBottomLeft()
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft>;

        return $f0;
    }

    private float[] getCornerRadiiAsArray()
    {
        android.support.design.widget.TextInputLayout r0;
        float[] r1, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = newarray (float)[8];

        $f0 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft>;

        $r2[0] = $f0;

        $f1 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopLeft>;

        $r2[1] = $f1;

        $f2 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight>;

        $r2[2] = $f2;

        $f3 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusTopRight>;

        $r2[3] = $f3;

        $f4 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight>;

        $r2[4] = $f4;

        $f5 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomRight>;

        $r2[5] = $f5;

        $f6 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft>;

        $r2[6] = $f6;

        $f7 = r0.<android.support.design.widget.TextInputLayout: float boxCornerRadiusBottomLeft>;

        $r2[7] = $f7;

        r1 = $r2;

        return r1;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface r1, $r2;
        android.support.design.widget.CollapsingTextHelper $r3;
        android.support.design.widget.IndicatorViewController $r4;
        android.widget.TextView $r5, $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface>;

        if r1 == $r2 goto label1;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface> = r1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>(r1);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r4.<android.support.design.widget.IndicatorViewController: void setTypefaces(android.graphics.Typeface)>(r1);

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        if $r5 == null goto label1;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r6.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r1);

     label1:
        return;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface>;

        return $r1;
    }

    public void dispatchProvideAutofillStructure(android.view.ViewStructure, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.view.ViewStructure r1;
        int i0;
        java.lang.CharSequence r2, $r4, $r7;
        java.lang.Throwable r3, $r10;
        android.widget.EditText $r5, $r6, $r8, $r9, $r11;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.view.ViewStructure;

        i0 := @parameter1: int;

        $r4 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence originalHint>;

        if $r4 == null goto label1;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r5 != null goto label2;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>(r1, i0);

        return;

     label2:
        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r2 = virtualinvoke $r6.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $r8 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r7 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence originalHint>;

        virtualinvoke $r8.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r7);

     label3:
        specialinvoke r0.<android.widget.LinearLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>(r1, i0);

     label4:
        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r9.<android.widget.EditText: void setHint(java.lang.CharSequence)>(r2);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r11.<android.widget.EditText: void setHint(java.lang.CharSequence)>(r2);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void setEditText(android.widget.EditText)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText r1, $r2, $r3, $r5, $r9, $r12, $r15, $r18, $r20, $r21, $r23;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, $i2, $i3;
        android.support.design.widget.CollapsingTextHelper $r4, $r6, $r7, $r24;
        float $f0;
        android.support.design.widget.TextInputLayout$1 $r8;
        android.content.res.ColorStateList $r10, $r22;
        android.support.design.widget.IndicatorViewController $r11;
        android.text.Editable $r13;
        java.lang.CharSequence $r14, $r16, $r17, $r19;
        android.graphics.Typeface $r25;
        java.lang.IllegalArgumentException $r26;
        android.widget.TextView $r27;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.widget.EditText;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("We already have an EditText, can only have one");

        throw $r26;

     label1:
        $z1 = r1 instanceof android.support.design.widget.TextInputEditText;

        if $z1 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextInputLayout", "EditText added is not a TextInputEditText. Please switch to using that class instead.");

     label2:
        r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText> = r1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void onApplyBoxBackgroundMode()>();

        z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if z0 != 0 goto label3;

        $r24 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r23 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r25 = virtualinvoke $r23.<android.widget.EditText: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r24.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r25);

     label3:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $f0 = virtualinvoke $r3.<android.widget.EditText: float getTextSize()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextSize(float)>($f0);

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        i0 = virtualinvoke $r5.<android.widget.EditText: int getGravity()>();

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i1 = i0 & -113;

        $i2 = 48 | $i1;

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>($i2);

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r7.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextGravity(int)>(i0);

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r8 = new android.support.design.widget.TextInputLayout$1;

        specialinvoke $r8.<android.support.design.widget.TextInputLayout$1: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r9.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r8);

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor>;

        if $r10 != null goto label4;

        $r21 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r22 = virtualinvoke $r21.<android.widget.EditText: android.content.res.ColorStateList getHintTextColors()>();

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor> = $r22;

     label4:
        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z2 == 0 goto label5;

        $r14 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r14);

        if $z3 == 0 goto label5;

        $r15 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r16 = virtualinvoke $r15.<android.widget.EditText: java.lang.CharSequence getHint()>();

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence originalHint> = $r16;

        $r17 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence originalHint>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r17);

        $r18 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r19 = virtualinvoke $r18.<android.widget.EditText: java.lang.CharSequence getHint()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r19);

        $r20 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r20.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label5:
        $r27 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        if $r27 == null goto label6;

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r13 = virtualinvoke $r12.<android.widget.EditText: android.text.Editable getText()>();

        $i3 = interfaceinvoke $r13.<android.text.Editable: int length()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i3);

     label6:
        $r11 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r11.<android.support.design.widget.IndicatorViewController: void adjustIndicatorPadding()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean,boolean)>(0, 1);

        return;
    }

    private void updateInputLayoutMargins()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.LinearLayout$LayoutParams r1;
        int i0, $i1;
        android.widget.FrameLayout $r2, $r4;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.LinearLayout$LayoutParams) $r3;

        i0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: int calculateLabelMarginTop()>();

        $i1 = r1.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        if i0 == $i1 goto label1;

        r1.<android.widget.LinearLayout$LayoutParams: int topMargin> = i0;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r4.<android.widget.FrameLayout: void requestLayout()>();

     label1:
        return;
    }

    void updateLabelState(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean,boolean)>(z0, 0);

        return;
    }

    private void updateLabelState(boolean, boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        android.widget.EditText $r1, $r20, $r21, $r23;
        android.content.res.ColorStateList $r2, $r3, $r8, $r11, $r13, $r15, $r16, $r18, $r25;
        android.support.design.widget.CollapsingTextHelper $r4, $r7, $r10, $r12, $r14, $r17, $r19;
        android.widget.TextView $r5, $r6;
        android.support.design.widget.IndicatorViewController $r9, $r24;
        int $i0, $i1;
        android.text.Editable $r22;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label01;

        $r21 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r22 = virtualinvoke $r21.<android.widget.EditText: android.text.Editable getText()>();

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        if $z11 != 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        z3 = $z12;

        $r23 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r23 == null goto label03;

        $r20 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $z10 = virtualinvoke $r20.<android.widget.EditText: boolean hasFocus()>();

        if $z10 == 0 goto label03;

        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        z4 = $z13;

        $r24 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        z5 = virtualinvoke $r24.<android.support.design.widget.IndicatorViewController: boolean errorShouldBeShown()>();

        $r25 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor>;

        if $r25 == null goto label05;

        $r17 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r16 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor>;

        virtualinvoke $r17.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r16);

        $r19 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r18 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList defaultTextColor>;

        virtualinvoke $r19.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>($r18);

     label05:
        if z2 != 0 goto label06;

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int disabledColor>;

        $r13 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r12.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r13);

        $r14 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int disabledColor>;

        $r15 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i1);

        virtualinvoke $r14.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>($r15);

        goto label09;

     label06:
        if z5 == 0 goto label07;

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $r11 = virtualinvoke $r9.<android.support.design.widget.IndicatorViewController: android.content.res.ColorStateList getErrorViewTextColors()>();

        virtualinvoke $r10.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r11);

        goto label09;

     label07:
        $z6 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        if $z6 == 0 goto label08;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        if $r5 == null goto label08;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $r8 = virtualinvoke $r6.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke $r7.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r8);

        goto label09;

     label08:
        if z4 == 0 goto label09;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        if $r2 == null goto label09;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r3);

     label09:
        if z3 != 0 goto label10;

        $z8 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z8 == 0 goto label12;

        if z4 != 0 goto label10;

        if z5 == 0 goto label12;

     label10:
        if z1 != 0 goto label11;

        $z7 = r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded>;

        if $z7 == 0 goto label14;

     label11:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void collapseHint(boolean)>(z0);

        goto label14;

     label12:
        if z1 != 0 goto label13;

        $z9 = r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded>;

        if $z9 != 0 goto label14;

     label13:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void expandHint(boolean)>(z0);

     label14:
        return;
    }

    public android.widget.EditText getEditText()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        return $r1;
    }

    public void setHint(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void sendAccessibilityEvent(int)>(2048);

     label1:
        return;
    }

    private void setHintInternal(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1, $r2;
        boolean $z0, $z1;
        android.support.design.widget.CollapsingTextHelper $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r2);

        if $z0 != 0 goto label1;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint> = r1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setText(java.lang.CharSequence)>(r1);

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void openCutout()>();

     label1:
        return;
    }

    public java.lang.CharSequence getHint()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setHintEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence r1, $r3, $r5, $r6;
        android.widget.EditText $r2, $r4, $r7, $r8;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if z0 == $z1 goto label5;

        r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled> = z0;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r1 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z2 != 0 goto label2;

        $r5 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z5 != 0 goto label1;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z6 == 0 goto label1;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r6 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        virtualinvoke $r7.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r6);

     label1:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>(null);

        goto label4;

     label2:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z3 != 0 goto label4;

        $r3 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z4 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>(r1);

     label3:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r4.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label4:
        $r8 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r8 == null goto label5;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

     label5:
        return;
    }

    public boolean isHintEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        return $z0;
    }

    public void setHintTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.support.design.widget.CollapsingTextHelper $r1, $r2;
        android.content.res.ColorStateList $r3;
        android.widget.EditText $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextAppearance(int)>(i0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: android.content.res.ColorStateList getCollapsedTextColor()>();

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r4 == null goto label1;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

     label1:
        return;
    }

    public void setErrorEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;
        android.support.design.widget.IndicatorViewController $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: void setErrorEnabled(boolean)>(z0);

        return;
    }

    public void setErrorTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.support.design.widget.IndicatorViewController $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: void setErrorTextAppearance(int)>(i0);

        return;
    }

    public void setHelperTextTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.support.design.widget.IndicatorViewController $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: void setHelperTextAppearance(int)>(i0);

        return;
    }

    public boolean isErrorEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: boolean isErrorEnabled()>();

        return $z0;
    }

    public void setHelperTextEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;
        android.support.design.widget.IndicatorViewController $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: void setHelperTextEnabled(boolean)>(z0);

        return;
    }

    public void setHelperText(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1;
        boolean $z0, $z1, $z2;
        android.support.design.widget.IndicatorViewController $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isHelperTextEnabled()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHelperTextEnabled(boolean)>(0);

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isHelperTextEnabled()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHelperTextEnabled(boolean)>(1);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<android.support.design.widget.IndicatorViewController: void showHelper(java.lang.CharSequence)>(r1);

     label3:
        return;
    }

    public boolean isHelperTextEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: boolean isHelperTextEnabled()>();

        return $z0;
    }

    public void setError(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1;
        android.support.design.widget.IndicatorViewController $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r2.<android.support.design.widget.IndicatorViewController: boolean isErrorEnabled()>();

        if $z0 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>(1);

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r4.<android.support.design.widget.IndicatorViewController: void showError(java.lang.CharSequence)>(r1);

        goto label4;

     label3:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        virtualinvoke $r3.<android.support.design.widget.IndicatorViewController: void hideError()>();

     label4:
        return;
    }

    public void setCounterEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1;
        android.widget.TextView $r1, $r5, $r7, $r8, $r9, $r15;
        android.support.design.widget.IndicatorViewController $r2, $r10;
        android.support.v7.widget.AppCompatTextView $r3;
        android.content.Context $r4;
        int $i0, $i1, $i2;
        android.graphics.Typeface $r6, $r14;
        android.widget.EditText $r11, $r12;
        android.text.Editable $r13;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean counterEnabled>;

        if $z1 == z0 goto label5;

        if z0 == 0 goto label3;

        $r3 = new android.support.v7.widget.AppCompatTextView;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r3.<android.support.v7.widget.AppCompatTextView: void <init>(android.content.Context)>($r4);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView> = $r3;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $i0 = <android.support.design.widget.R$id: int textinput_counter>;

        virtualinvoke $r5.<android.widget.TextView: void setId(int)>($i0);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface>;

        if $r6 == null goto label1;

        $r15 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $r14 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface typeface>;

        virtualinvoke $r15.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r14);

     label1:
        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r7.<android.widget.TextView: void setMaxLines(int)>(1);

        $r8 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int counterTextAppearance>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>($r8, $i1);

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r10.<android.support.design.widget.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r9, 2);

        $r11 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r11 != null goto label2;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>(0);

        goto label4;

     label2:
        $r12 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r13 = virtualinvoke $r12.<android.widget.EditText: android.text.Editable getText()>();

        $i2 = interfaceinvoke $r13.<android.text.Editable: int length()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i2);

        goto label4;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r2.<android.support.design.widget.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r1, 2);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView> = null;

     label4:
        r0.<android.support.design.widget.TextInputLayout: boolean counterEnabled> = z0;

     label5:
        return;
    }

    public boolean isCounterEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean counterEnabled>;

        return $z0;
    }

    public void setCounterMaxLength(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1, $i2;
        boolean $z0;
        android.widget.EditText $r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int counterMaxLength>;

        if $i1 == i0 goto label5;

        if i0 <= 0 goto label1;

        r0.<android.support.design.widget.TextInputLayout: int counterMaxLength> = i0;

        goto label2;

     label1:
        r0.<android.support.design.widget.TextInputLayout: int counterMaxLength> = -1;

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean counterEnabled>;

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        $i2 = interfaceinvoke $r3.<android.text.Editable: int length()>();

     label4:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i2);

     label5:
        return;
    }

    public void setEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;
        android.view.ViewGroup r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        r1 = (android.view.ViewGroup) r0;

        staticinvoke <android.support.design.widget.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>(r1, z0);

        specialinvoke r0.<android.widget.LinearLayout: void setEnabled(boolean)>(z0);

        return;
    }

    private static void recursiveSetEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup r0, $r2;
        boolean z0, $z1;
        int i0, i1;
        android.view.View r1;

        r0 := @parameter0: android.view.ViewGroup;

        z0 := @parameter1: boolean;

        i1 = 0;

        i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        virtualinvoke r1.<android.view.View: void setEnabled(boolean)>(z0);

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label2;

        $r2 = (android.view.ViewGroup) r1;

        staticinvoke <android.support.design.widget.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>($r2, z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public int getCounterMaxLength()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int counterMaxLength>;

        return $i0;
    }

    void updateCounter(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2, $z3, $z4;
        android.widget.TextView $r1, $r4, $r6;
        java.lang.String $r5, $r11;
        android.content.Context $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9, $r10;
        android.widget.EditText $r12;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int counterMaxLength>;

        if $i1 != -1 goto label1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed> = 0;

        goto label7;

     label1:
        $i2 = r0.<android.support.design.widget.TextInputLayout: int counterMaxLength>;

        if i0 <= $i2 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed> = $z4;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        if z0 == $z1 goto label6;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $z3 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        if $z3 == 0 goto label4;

        $i3 = r0.<android.support.design.widget.TextInputLayout: int counterOverflowTextAppearance>;

        goto label5;

     label4:
        $i3 = r0.<android.support.design.widget.TextInputLayout: int counterTextAppearance>;

     label5:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>($r1, $i3);

     label6:
        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $r7 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i4 = <android.support.design.widget.R$string: int character_counter_pattern>;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r9;

        $i5 = r0.<android.support.design.widget.TextInputLayout: int counterMaxLength>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r8[1] = $r10;

        $r11 = virtualinvoke $r7.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i4, $r8);

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

     label7:
        $r12 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r12 == null goto label8;

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        if z0 == $z2 goto label8;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

     label8:
        return;
    }

    void setTextAppearanceCompatWithErrorFallback(android.widget.TextView, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.TextView r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Throwable r2, $r5;
        android.content.Context $r3;
        android.content.res.ColorStateList $r4;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        z0 = 0;

     label1:
        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>(r1, i0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label2;

        $r4 = virtualinvoke r1.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $i5 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        if $i5 != -65281 goto label2;

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        $i2 = <android.support.design.widget.R$style: int TextAppearance_AppCompat_Caption>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>(r1, $i2);

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i3 = <android.support.design.widget.R$color: int design_error>;

        $i4 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i3);

        virtualinvoke r1.<android.widget.TextView: void setTextColor(int)>($i4);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void updateTextInputBoxBounds()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        android.graphics.drawable.GradientDrawable $r1, $r6;
        android.widget.EditText $r2, $r3, $r4, $r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        $i1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getRight()>();

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        i13 = virtualinvoke $r3.<android.widget.EditText: int getLeft()>();

        i14 = specialinvoke r0.<android.support.design.widget.TextInputLayout: int calculateBoxBackgroundTop()>();

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        i15 = virtualinvoke $r4.<android.widget.EditText: int getRight()>();

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i2 = virtualinvoke $r5.<android.widget.EditText: int getBottom()>();

        $i3 = r0.<android.support.design.widget.TextInputLayout: int boxBottomOffsetPx>;

        i16 = $i2 + $i3;

        $i4 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i4 != 2 goto label3;

        $i5 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>;

        $i6 = $i5 / 2;

        i13 = i13 + $i6;

        $i7 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>;

        $i8 = $i7 / 2;

        i14 = i14 - $i8;

        $i9 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>;

        $i10 = $i9 / 2;

        i15 = i15 - $i10;

        $i11 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>;

        $i12 = $i11 / 2;

        i16 = i16 + $i12;

     label3:
        $r6 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        virtualinvoke $r6.<android.graphics.drawable.GradientDrawable: void setBounds(int,int,int,int)>(i13, i14, i15, i16);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyBoxAttributes()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackgroundBounds()>();

        return;
    }

    private int calculateBoxBackgroundTop()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i4 = virtualinvoke $r3.<android.widget.EditText: int getTop()>();

        return $i4;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getTop()>();

        $i2 = specialinvoke r0.<android.support.design.widget.TextInputLayout: int calculateLabelMarginTop()>();

        $i3 = $i1 + $i2;

        return $i3;

     label4:
        return 0;
    }

    private int calculateLabelMarginTop()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.design.widget.CollapsingTextHelper $r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label4;
        };

     label2:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getCollapsedTextHeight()>();

        $f1 = $f0 / 2.0F;

        $i1 = (int) $f1;

        return $i1;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $f2 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: float getCollapsedTextHeight()>();

        $i2 = (int) $f2;

        return $i2;

     label4:
        return 0;
    }

    private int calculateCollapsedTextTopBounds()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.Rect $r2, $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = specialinvoke r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable getBoxBackground()>();

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i2 = specialinvoke r0.<android.support.design.widget.TextInputLayout: int calculateLabelMarginTop()>();

        $i3 = $i1 - $i2;

        return $i3;

     label2:
        $r3 = specialinvoke r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable getBoxBackground()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i5 = $r4.<android.graphics.Rect: int top>;

        $i4 = r0.<android.support.design.widget.TextInputLayout: int boxCollapsedPaddingTopPx>;

        $i6 = $i5 + $i4;

        return $i6;

     label3:
        $i7 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingTop()>();

        return $i7;
    }

    private void updateEditTextBackgroundBounds()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Rect r1, r2, r3, r11, r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.widget.EditText $r4, $r5, $r7, $r9;
        boolean $z0;
        android.graphics.drawable.Drawable r10;
        android.view.ViewGroup r13;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r10 = virtualinvoke $r5.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if r10 != null goto label2;

        return;

     label2:
        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r10);

        if $z0 == 0 goto label3;

        r10 = virtualinvoke r10.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label3:
        r11 = new android.graphics.Rect;

        specialinvoke r11.<android.graphics.Rect: void <init>()>();

        r1 = r11;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r13 = (android.view.ViewGroup) r0;

        staticinvoke <android.support.design.widget.DescendantOffsetUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r13, $r7, r1);

        r2 = virtualinvoke r10.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i3 = r2.<android.graphics.Rect: int left>;

        $i2 = r2.<android.graphics.Rect: int right>;

        if $i3 == $i2 goto label4;

        r12 = new android.graphics.Rect;

        specialinvoke r12.<android.graphics.Rect: void <init>()>();

        r3 = r12;

        virtualinvoke r10.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r3);

        $i5 = r2.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int left>;

        i0 = $i5 - $i4;

        $i8 = r2.<android.graphics.Rect: int right>;

        $i6 = r3.<android.graphics.Rect: int right>;

        $i7 = $i6 * 2;

        i1 = $i8 + $i7;

        $i9 = r2.<android.graphics.Rect: int top>;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i10 = virtualinvoke $r9.<android.widget.EditText: int getBottom()>();

        virtualinvoke r10.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, $i9, i1, $i10);

     label4:
        return;
    }

    private void setBoxAttributes()
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1, $i2, $i3;
        android.content.res.ColorStateList $r1, $r3;
        int[] $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx> = 0;

        goto label3;

     label2:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor>;

        if $i1 != 0 goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        $r2 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int[] getDrawableState()>();

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        $i2 = virtualinvoke $r3.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i3 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i2);

        r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor> = $i3;

        goto label3;

     label3:
        return;
    }

    private void applyBoxAttributes()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.GradientDrawable $r1, $r3, $r13, $r15;
        android.widget.EditText $r2, $r6, $r7, $r9, $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.drawable.Drawable $r4, $r5, $r8, $r11;
        float[] $r14;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setBoxAttributes()>();

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label3;

        $i4 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i4 != 2 goto label3;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r8 = virtualinvoke $r7.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if $r8 == null goto label2;

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r11 = virtualinvoke $r10.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable editTextOriginalDrawable> = $r11;

     label2:
        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r9, null);

     label3:
        $r12 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r12 == null goto label4;

        $i3 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i3 != 1 goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable editTextOriginalDrawable>;

        if $r4 == null goto label4;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable editTextOriginalDrawable>;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r6, $r5);

     label4:
        $i5 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx>;

        if $i5 <= -1 goto label5;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor>;

        if $i0 == 0 goto label5;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $i2 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>($i2, $i1);

     label5:
        $r13 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $r14 = specialinvoke r0.<android.support.design.widget.TextInputLayout: float[] getCornerRadiiAsArray()>();

        virtualinvoke $r13.<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>($r14);

        $r15 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $i6 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundColor>;

        virtualinvoke $r15.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i6);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void invalidate()>();

        return;
    }

    void updateEditTextBackground()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r2, $r4;
        boolean $z0, $z1, $z2;
        android.support.design.widget.IndicatorViewController $r3, $r9;
        android.widget.TextView $r5, $r6;
        int $i0, $i1;
        android.graphics.PorterDuff$Mode $r7, $r10;
        android.graphics.PorterDuffColorFilter $r8, $r11;
        android.graphics.drawable.Drawable r12;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r12 = virtualinvoke $r2.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if r12 != null goto label2;

        return;

     label2:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void ensureBackgroundDrawableStateWorkaround()>();

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r12);

        if $z0 == 0 goto label3;

        r12 = virtualinvoke r12.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label3:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z1 = virtualinvoke $r3.<android.support.design.widget.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z1 == 0 goto label4;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $i1 = virtualinvoke $r9.<android.support.design.widget.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        $r10 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r11 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i1, $r10);

        virtualinvoke r12.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r11);

        goto label6;

     label4:
        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean counterOverflowed>;

        if $z2 == 0 goto label5;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        if $r5 == null goto label5;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView counterView>;

        $i0 = virtualinvoke $r6.<android.widget.TextView: int getCurrentTextColor()>();

        $r7 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r8 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r7);

        virtualinvoke r12.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r8);

        goto label6;

     label5:
        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>(r12);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r4.<android.widget.EditText: void refreshDrawableState()>();

     label6:
        return;
    }

    private void ensureBackgroundDrawableStateWorkaround()
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.graphics.drawable.Drawable r1, r2;
        android.widget.EditText $r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.Drawable$ConstantState $r4, $r7;
        android.graphics.drawable.DrawableContainer $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 == 21 goto label1;

        if i0 == 22 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r1 = virtualinvoke $r3.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if r1 != null goto label2;

        return;

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hasReconstructedEditTextBackground>;

        if $z0 != 0 goto label4;

        $r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        r2 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $z1 = r1 instanceof android.graphics.drawable.DrawableContainer;

        if $z1 == 0 goto label3;

        $r6 = (android.graphics.drawable.DrawableContainer) r1;

        $r7 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $z3 = staticinvoke <android.support.design.widget.DrawableUtils: boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState)>($r6, $r7);

        r0.<android.support.design.widget.TextInputLayout: boolean hasReconstructedEditTextBackground> = $z3;

     label3:
        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean hasReconstructedEditTextBackground>;

        if $z2 != 0 goto label4;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r5, r2);

        r0.<android.support.design.widget.TextInputLayout: boolean hasReconstructedEditTextBackground> = 1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void onApplyBoxBackgroundMode()>();

     label4:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.design.widget.TextInputLayout r0;
        android.os.Parcelable r1, r7;
        android.support.design.widget.TextInputLayout$SavedState r2, r6;
        android.support.design.widget.IndicatorViewController $r4;
        boolean $z0, $z1;
        java.lang.CharSequence $r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = specialinvoke r0.<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>();

        r6 = new android.support.design.widget.TextInputLayout$SavedState;

        specialinvoke r6.<android.support.design.widget.TextInputLayout$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = r6;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r4.<android.support.design.widget.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence getError()>();

        r2.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error> = $r5;

     label1:
        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>;

        r2.<android.support.design.widget.TextInputLayout$SavedState: boolean isPasswordToggledVisible> = $z1;

        r7 = (android.os.Parcelable) r2;

        return r7;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.design.widget.TextInputLayout r0;
        android.os.Parcelable r1, $r3;
        android.support.design.widget.TextInputLayout$SavedState r2;
        boolean $z0, $z1;
        java.lang.CharSequence $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.support.design.widget.TextInputLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.support.design.widget.TextInputLayout$SavedState) r1;

        $r3 = virtualinvoke r2.<android.support.design.widget.TextInputLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $r4 = r2.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setError(java.lang.CharSequence)>($r4);

        $z1 = r2.<android.support.design.widget.TextInputLayout$SavedState: boolean isPasswordToggledVisible>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void passwordVisibilityToggleRequested(boolean)>(1);

     label2:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void requestLayout()>();

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.support.design.widget.TextInputLayout r0;
        android.util.SparseArray r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.util.SparseArray;

        r0.<android.support.design.widget.TextInputLayout: boolean restoringSavedState> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>(r1);

        r0.<android.support.design.widget.TextInputLayout: boolean restoringSavedState> = 0;

        return;
    }

    public java.lang.CharSequence getError()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1, $r2;
        boolean $z0;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: boolean isErrorEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence getErrorText()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.CharSequence getHelperText()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1, $r2;
        boolean $z0;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: boolean isHelperTextEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.IndicatorViewController: java.lang.CharSequence getHelperText()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean isHintAnimationEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled>;

        return $z0;
    }

    public void setHintAnimationEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        r0.<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled> = z0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Canvas r1;
        boolean $z0;
        android.graphics.drawable.GradientDrawable $r2, $r3;
        android.support.design.widget.CollapsingTextHelper $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>(r1);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void draw(android.graphics.Canvas)>(r1);

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0, i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        return;
    }

    private void updatePasswordToggleView()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r3, $r10, $r14, $r17, $r24, $r25, $r27, $r28, $r29, $r32, $r34;
        boolean $z0, $z1;
        android.support.design.widget.CheckableImageButton $r2, $r11, $r12, $r13, $r15, $r26, $r33, $r39, $r41, $r43, $r44, $r47, $r48, $r49;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7, $r8, $r9, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r30, $r40, $r50, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.Context $r35;
        android.view.LayoutInflater $r36;
        android.widget.FrameLayout $r37, $r45;
        android.view.View $r38;
        java.lang.CharSequence $r42;
        android.graphics.drawable.Drawable[] r51, r53;
        android.support.design.widget.TextInputLayout$2 r54;
        android.graphics.drawable.ColorDrawable r55;
        android.view.ViewGroup r56;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean shouldShowPasswordIcon()>();

        if $z0 == 0 goto label6;

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        if $r13 != null goto label2;

        $r35 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r36 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r35);

        $i8 = <android.support.design.widget.R$layout: int design_text_input_password_icon>;

        $r37 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        r56 = (android.view.ViewGroup) $r37;

        $r38 = virtualinvoke $r36.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i8, r56, 0);

        $r39 = (android.support.design.widget.CheckableImageButton) $r38;

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView> = $r39;

        $r41 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $r40 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        virtualinvoke $r41.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r40);

        $r43 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $r42 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence passwordToggleContentDesc>;

        virtualinvoke $r43.<android.support.design.widget.CheckableImageButton: void setContentDescription(java.lang.CharSequence)>($r42);

        $r45 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout inputFrame>;

        $r44 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r45.<android.widget.FrameLayout: void addView(android.view.View)>($r44);

        $r47 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        r54 = new android.support.design.widget.TextInputLayout$2;

        specialinvoke r54.<android.support.design.widget.TextInputLayout$2: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r47.<android.support.design.widget.CheckableImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r54);

     label2:
        $r14 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r14 == null goto label3;

        $r32 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i6 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r32);

        if $i6 > 0 goto label3;

        $r34 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r33 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $i7 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r33);

        virtualinvoke $r34.<android.widget.EditText: void setMinimumHeight(int)>($i7);

     label3:
        $r48 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r48.<android.support.design.widget.CheckableImageButton: void setVisibility(int)>(0);

        $r49 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>;

        virtualinvoke $r49.<android.support.design.widget.CheckableImageButton: void setChecked(boolean)>($z1);

        $r50 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        if $r50 != null goto label4;

        r55 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r55.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable> = r55;

     label4:
        $r16 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        $r15 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $i1 = virtualinvoke $r15.<android.support.design.widget.CheckableImageButton: int getMeasuredWidth()>();

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, 1);

        $r17 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r51 = staticinvoke <android.support.v4.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>($r17);

        $r19 = r51[2];

        $r18 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        if $r19 == $r18 goto label5;

        $r30 = r51[2];

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable> = $r30;

     label5:
        $r24 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r23 = r51[0];

        $r22 = r51[1];

        $r21 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        $r20 = r51[3];

        staticinvoke <android.support.v4.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r24, $r23, $r22, $r21, $r20);

        $r26 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $r25 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i2 = virtualinvoke $r25.<android.widget.EditText: int getPaddingLeft()>();

        $r27 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i3 = virtualinvoke $r27.<android.widget.EditText: int getPaddingTop()>();

        $r28 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i4 = virtualinvoke $r28.<android.widget.EditText: int getPaddingRight()>();

        $r29 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i5 = virtualinvoke $r29.<android.widget.EditText: int getPaddingBottom()>();

        virtualinvoke $r26.<android.support.design.widget.CheckableImageButton: void setPadding(int,int,int,int)>($i2, $i3, $i4, $i5);

        goto label8;

     label6:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        if $r2 == null goto label7;

        $r11 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $i0 = virtualinvoke $r11.<android.support.design.widget.CheckableImageButton: int getVisibility()>();

        if $i0 != 0 goto label7;

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r12.<android.support.design.widget.CheckableImageButton: void setVisibility(int)>(8);

     label7:
        $r52 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        if $r52 == null goto label8;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r53 = staticinvoke <android.support.v4.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>($r3);

        $r5 = r53[2];

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable>;

        if $r5 != $r4 goto label8;

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r9 = r53[0];

        $r8 = r53[1];

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable>;

        $r6 = r53[3];

        staticinvoke <android.support.v4.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r10, $r9, $r8, $r7, $r6);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDummyDrawable> = null;

     label8:
        return;
    }

    public void setPasswordVisibilityToggleDrawable(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable r1;
        android.support.design.widget.CheckableImageButton $r2, $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable> = r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r3.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    public void setPasswordVisibilityToggleContentDescription(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.content.res.Resources $r1;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>($r3);

        return;
    }

    public void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1;
        android.support.design.widget.CheckableImageButton $r2, $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence passwordToggleContentDesc> = r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r3.<android.support.design.widget.CheckableImageButton: void setContentDescription(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    public android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        return $r1;
    }

    public java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence passwordToggleContentDesc>;

        return $r1;
    }

    public boolean isPasswordVisibilityToggleEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled>;

        return $z0;
    }

    public void setPasswordVisibilityToggleEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2;
        android.widget.EditText $r1, $r2;
        android.text.method.PasswordTransformationMethod $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled>;

        if $z1 == z0 goto label2;

        r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled> = z0;

        if z0 != 0 goto label1;

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>;

        if $z2 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r3 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r2.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r3);

     label1:
        r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible> = 0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

     label2:
        return;
    }

    public void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList passwordToggleTintList> = r1;

        r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintList> = 1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        return;
    }

    public void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode passwordToggleTintMode> = r1;

        r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintMode> = 1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        return;
    }

    private void passwordVisibilityToggleRequested(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2, $z3;
        int i0;
        android.widget.EditText $r1, $r2, $r5, $r7;
        android.text.method.PasswordTransformationMethod $r3;
        android.support.design.widget.CheckableImageButton $r4, $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled>;

        if $z1 == 0 goto label4;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        i0 = virtualinvoke $r1.<android.widget.EditText: int getSelectionEnd()>();

        $z2 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if $z2 == 0 goto label1;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r7.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

        r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible> = 1;

        goto label2;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r3 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r2.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r3);

        r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible> = 0;

     label2:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $z3 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>;

        virtualinvoke $r4.<android.support.design.widget.CheckableImageButton: void setChecked(boolean)>($z3);

        if z0 == 0 goto label3;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        virtualinvoke $r6.<android.support.design.widget.CheckableImageButton: void jumpDrawablesToCurrentState()>();

     label3:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r5.<android.widget.EditText: void setSelection(int)>(i0);

     label4:
        return;
    }

    private boolean hasPasswordTransformation()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r2;
        android.text.method.TransformationMethod $r3;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.method.TransformationMethod getTransformationMethod()>();

        $z0 = $r3 instanceof android.text.method.PasswordTransformationMethod;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean shouldShowPasswordIcon()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggleEnabled>;

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if $z1 != 0 goto label1;

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean passwordToggledVisible>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private void applyPasswordToggleTint()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        android.support.design.widget.CheckableImageButton $r5, $r6, $r10;
        android.graphics.PorterDuff$Mode $r11;
        android.content.res.ColorStateList $r13;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        if $r1 == null goto label4;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintList>;

        if $z0 != 0 goto label1;

        $z3 = r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintMode>;

        if $z3 == 0 goto label4;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        $r3 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r2);

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable> = $r4;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintList>;

        if $z1 == 0 goto label2;

        $r14 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList passwordToggleTintList>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r14, $r13);

     label2:
        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordToggleTintMode>;

        if $z2 == 0 goto label3;

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        $r11 = r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode passwordToggleTintMode>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r12, $r11);

     label3:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        if $r5 == null goto label4;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $r7 = virtualinvoke $r6.<android.support.design.widget.CheckableImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r8 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        if $r7 == $r8 goto label4;

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton passwordToggleView>;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable passwordToggleDrawable>;

        virtualinvoke $r10.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r9);

     label4:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.Rect r1;
        android.graphics.drawable.GradientDrawable $r2;
        android.widget.EditText $r3, $r4, $r5, $r6, $r7, $r9;
        android.support.design.widget.CollapsingTextHelper $r8, $r10, $r11;
        android.view.ViewGroup r12;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateTextInputBoxBounds()>();

     label1:
        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z1 == 0 goto label2;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label2;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Rect tmpRect>;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        r12 = (android.view.ViewGroup) r0;

        staticinvoke <android.support.design.widget.DescendantOffsetUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r12, $r4, r1);

        $i7 = r1.<android.graphics.Rect: int left>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i8 = virtualinvoke $r5.<android.widget.EditText: int getCompoundPaddingLeft()>();

        i4 = $i7 + $i8;

        $i9 = r1.<android.graphics.Rect: int right>;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i10 = virtualinvoke $r6.<android.widget.EditText: int getCompoundPaddingRight()>();

        i5 = $i9 - $i10;

        i6 = specialinvoke r0.<android.support.design.widget.TextInputLayout: int calculateCollapsedTextTopBounds()>();

        $r8 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i11 = r1.<android.graphics.Rect: int top>;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i12 = virtualinvoke $r7.<android.widget.EditText: int getCompoundPaddingTop()>();

        $i13 = $i11 + $i12;

        $i14 = r1.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $i15 = virtualinvoke $r9.<android.widget.EditText: int getCompoundPaddingBottom()>();

        $i16 = $i14 - $i15;

        virtualinvoke $r8.<android.support.design.widget.CollapsingTextHelper: void setExpandedBounds(int,int,int,int)>(i4, $i13, i5, $i16);

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i17 = i3 - i1;

        $i18 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingBottom()>();

        $i19 = $i17 - $i18;

        virtualinvoke $r10.<android.support.design.widget.CollapsingTextHelper: void setCollapsedBounds(int,int,int,int)>(i4, i6, i5, $i19);

        $r11 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r11.<android.support.design.widget.CollapsingTextHelper: void recalculate()>();

        $z2 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z2 == 0 goto label2;

        $z3 = r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded>;

        if $z3 != 0 goto label2;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void openCutout()>();

     label2:
        return;
    }

    private void collapseHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2, $z3;
        android.animation.ValueAnimator $r1, $r3, $r4;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        $z2 = virtualinvoke $r3.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z2 == 0 goto label1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r4.<android.animation.ValueAnimator: void cancel()>();

     label1:
        if z0 == 0 goto label2;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(1.0F);

        goto label3;

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(1.0F);

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded> = 0;

        $z3 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z3 == 0 goto label4;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void openCutout()>();

     label4:
        return;
    }

    private boolean cutoutEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r1;
        android.graphics.drawable.GradientDrawable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence hint>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $z2 = $r2 instanceof android.support.design.widget.CutoutDrawable;

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private void openCutout()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.RectF r1;
        boolean $z0;
        android.support.design.widget.CollapsingTextHelper $r2;
        android.graphics.drawable.GradientDrawable $r3;
        android.support.design.widget.CutoutDrawable $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.RectF tmpRectF>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void getCollapsedTextActualBounds(android.graphics.RectF)>(r1);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyCutoutPadding(android.graphics.RectF)>(r1);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $r4 = (android.support.design.widget.CutoutDrawable) $r3;

        virtualinvoke $r4.<android.support.design.widget.CutoutDrawable: void setCutout(android.graphics.RectF)>(r1);

        return;
    }

    private void closeCutout()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        android.graphics.drawable.GradientDrawable $r1;
        android.support.design.widget.CutoutDrawable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $r2 = (android.support.design.widget.CutoutDrawable) $r1;

        virtualinvoke $r2.<android.support.design.widget.CutoutDrawable: void removeCutout()>();

     label1:
        return;
    }

    private void applyCutoutPadding(android.graphics.RectF)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.RectF r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.graphics.RectF;

        $f1 = r1.<android.graphics.RectF: float left>;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx>;

        $f0 = (float) $i0;

        $f2 = $f1 - $f0;

        r1.<android.graphics.RectF: float left> = $f2;

        $f4 = r1.<android.graphics.RectF: float top>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx>;

        $f3 = (float) $i1;

        $f5 = $f4 - $f3;

        r1.<android.graphics.RectF: float top> = $f5;

        $f7 = r1.<android.graphics.RectF: float right>;

        $i2 = r0.<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx>;

        $f6 = (float) $i2;

        $f8 = $f7 + $f6;

        r1.<android.graphics.RectF: float right> = $f8;

        $f10 = r1.<android.graphics.RectF: float bottom>;

        $i3 = r0.<android.support.design.widget.TextInputLayout: int boxLabelCutoutPaddingPx>;

        $f9 = (float) $i3;

        $f11 = $f10 + $f9;

        r1.<android.graphics.RectF: float bottom> = $f11;

        return;
    }

    boolean cutoutIsOpen()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.GradientDrawable $r1;
        android.support.design.widget.CutoutDrawable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $r2 = (android.support.design.widget.CutoutDrawable) $r1;

        $z1 = virtualinvoke $r2.<android.support.design.widget.CutoutDrawable: boolean hasCutout()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected void drawableStateChanged()
    {
        android.support.design.widget.TextInputLayout r0;
        int[] r1;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        android.support.design.widget.CollapsingTextHelper $r2, $r4;
        android.view.View r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean inDrawableStateChanged>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.design.widget.TextInputLayout: boolean inDrawableStateChanged> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int[] getDrawableState()>();

        z4 = 0;

        r5 = (android.view.View) r0;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r5);

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>($z5);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateTextInputBoxBounds()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateTextInputBoxState()>();

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        if $r4 == null goto label4;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $z2 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: boolean setState(int[])>(r1);

        z4 = z4 | $z2;

     label4:
        if z4 == 0 goto label5;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void invalidate()>();

     label5:
        r0.<android.support.design.widget.TextInputLayout: boolean inDrawableStateChanged> = 0;

        return;
    }

    void updateTextInputBoxState()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.graphics.drawable.GradientDrawable $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.widget.EditText $r2, $r5, $r6, $r7;
        android.support.design.widget.IndicatorViewController $r3, $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        if $r1 == null goto label01;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 0 goto label02;

     label01:
        return;

     label02:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label03;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $z6 = virtualinvoke $r6.<android.widget.EditText: boolean hasFocus()>();

        if $z6 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z0 = $z7;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        if $r7 == null goto label05;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText editText>;

        $z5 = virtualinvoke $r5.<android.widget.EditText: boolean isHovered()>();

        if $z5 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z1 = $z8;

        $i8 = r0.<android.support.design.widget.TextInputLayout: int boxBackgroundMode>;

        if $i8 != 2 goto label15;

        $z2 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z2 != 0 goto label07;

        $i7 = r0.<android.support.design.widget.TextInputLayout: int disabledColor>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor> = $i7;

        goto label11;

     label07:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z3 = virtualinvoke $r3.<android.support.design.widget.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z3 == 0 goto label08;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $i6 = virtualinvoke $r4.<android.support.design.widget.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor> = $i6;

        goto label11;

     label08:
        if z0 == 0 goto label09;

        $i5 = r0.<android.support.design.widget.TextInputLayout: int focusedStrokeColor>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor> = $i5;

        goto label11;

     label09:
        if z1 == 0 goto label10;

        $i4 = r0.<android.support.design.widget.TextInputLayout: int hoveredStrokeColor>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor> = $i4;

        goto label11;

     label10:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int defaultStrokeColor>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeColor> = $i1;

     label11:
        if z1 != 0 goto label12;

        if z0 == 0 goto label13;

     label12:
        $z4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z4 == 0 goto label13;

        $i3 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthFocusedPx>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx> = $i3;

        goto label14;

     label13:
        $i2 = r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthDefaultPx>;

        r0.<android.support.design.widget.TextInputLayout: int boxStrokeWidthPx> = $i2;

     label14:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyBoxAttributes()>();

     label15:
        return;
    }

    private void expandHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.animation.ValueAnimator $r1, $r5, $r6;
        android.support.design.widget.CollapsingTextHelper $r2;
        android.graphics.drawable.GradientDrawable $r3;
        android.support.design.widget.CutoutDrawable $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r1 == null goto label1;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        $z3 = virtualinvoke $r5.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z3 == 0 goto label1;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void cancel()>();

     label1:
        if z0 == 0 goto label2;

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean hintAnimationEnabled>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(0.0F);

        goto label3;

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(0.0F);

     label3:
        $z4 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean cutoutEnabled()>();

        if $z4 == 0 goto label4;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.GradientDrawable boxBackground>;

        $r4 = (android.support.design.widget.CutoutDrawable) $r3;

        $z1 = virtualinvoke $r4.<android.support.design.widget.CutoutDrawable: boolean hasCutout()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void closeCutout()>();

     label4:
        r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded> = 1;

        return;
    }

    void animateToExpansionFraction(float)
    {
        android.support.design.widget.TextInputLayout r0;
        float f0, $f1, $f2;
        android.support.design.widget.CollapsingTextHelper $r1, $r4;
        byte $b0;
        android.animation.ValueAnimator $r2, $r5, $r6, $r7, $r9, $r10, $r13;
        float[] $r3;
        android.animation.TimeInterpolator $r8;
        android.support.design.widget.TextInputLayout$3 $r12;

        r0 := @this: android.support.design.widget.TextInputLayout;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $f1 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        $b0 = $f1 cmpl f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r2 != null goto label2;

        $r7 = new android.animation.ValueAnimator;

        specialinvoke $r7.<android.animation.ValueAnimator: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator> = $r7;

        $r9 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        $r8 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r9.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r8);

        $r10 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r10.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(167L);

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        $r12 = new android.support.design.widget.TextInputLayout$3;

        specialinvoke $r12.<android.support.design.widget.TextInputLayout$3: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r13.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r12);

     label2:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        $r3 = newarray (float)[2];

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $f2 = virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        $r3[0] = $f2;

        $r3[1] = f0;

        virtualinvoke $r5.<android.animation.ValueAnimator: void setFloatValues(float[])>($r3);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void start()>();

        return;
    }

    final boolean isHintExpanded()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean hintExpanded>;

        return $z0;
    }

    final boolean isHelperTextDisplayed()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: boolean helperTextIsDisplayed()>();

        return $z0;
    }

    final int getHintCurrentCollapsedTextColor()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.CollapsingTextHelper $r1;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: int getCurrentCollapsedTextColor()>();

        return $i0;
    }

    final float getHintCollapsedTextHeight()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.CollapsingTextHelper $r1;
        float $f0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getCollapsedTextHeight()>();

        return $f0;
    }

    final int getErrorTextCurrentColor()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        return $i0;
    }

    static boolean access$000(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @parameter0: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean restoringSavedState>;

        return $z0;
    }

    static void access$100(android.support.design.widget.TextInputLayout, boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @parameter0: android.support.design.widget.TextInputLayout;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void passwordVisibilityToggleRequested(boolean)>(z0);

        return;
    }

    static android.support.design.widget.IndicatorViewController access$200(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.IndicatorViewController $r1;

        r0 := @parameter0: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.IndicatorViewController indicatorViewController>;

        return $r1;
    }

