android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures
    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)
    {
        java.lang.Object r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture r1, $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        r1 = <android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture NULL>;

        return r1;

     label1:
        $r2 = new android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture;

        specialinvoke $r2.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture: void <init>(java.lang.Object)>(r0);

        return $r2;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateFailedFuture $r2;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateFailedFuture;

        specialinvoke $r2.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.ImmediateFuture$ImmediateFailedFuture: void <init>(java.lang.Throwable)>(r0);

        return $r2;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture catching(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, java.lang.Class, android.support.test.espresso.web.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0, $r4;
        java.lang.Class r1;
        android.support.test.espresso.web.internal.deps.guava.base.Function r2;
        java.util.concurrent.Executor r3;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: android.support.test.espresso.web.internal.deps.guava.base.Function;

        r3 := @parameter3: java.util.concurrent.Executor;

        $r4 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractCatchingFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Class,android.support.test.espresso.web.internal.deps.guava.base.Function,java.util.concurrent.Executor)>(r0, r1, r2, r3);

        return $r4;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture catchingAsync(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, java.lang.Class, android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0, $r4;
        java.lang.Class r1;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction r2;
        java.util.concurrent.Executor r3;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction;

        r3 := @parameter3: java.util.concurrent.Executor;

        $r4 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractCatchingFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Class,android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, r1, r2, r3);

        return $r4;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture withTimeout(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0, $r3;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ScheduledExecutorService r2;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.concurrent.TimeUnit;

        r2 := @parameter3: java.util.concurrent.ScheduledExecutorService;

        $r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.TimeoutFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>(r0, l0, r1, r2);

        return $r3;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture transformAsync(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0, $r3;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction r1;
        java.util.concurrent.Executor r2;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction;

        r2 := @parameter2: java.util.concurrent.Executor;

        $r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.web.internal.deps.guava.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, r1, r2);

        return $r3;
    }

    public static android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture transform(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0, $r3;
        android.support.test.espresso.web.internal.deps.guava.base.Function r1;
        java.util.concurrent.Executor r2;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.support.test.espresso.web.internal.deps.guava.base.Function;

        r2 := @parameter2: java.util.concurrent.Executor;

        $r3 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.AbstractTransformFuture: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture create(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture,android.support.test.espresso.web.internal.deps.guava.base.Function,java.util.concurrent.Executor)>(r0, r1, r2);

        return $r3;
    }

    public static void addCallback(android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture, android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback, java.util.concurrent.Executor)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture r0;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback r1;
        java.util.concurrent.Executor r2;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener $r4;

        r0 := @parameter0: android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener;

        specialinvoke $r4.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: void <init>(java.util.concurrent.Future,android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback)>(r0, r1);

        interfaceinvoke r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r4, r2);

        return;
    }

    public static java.lang.Object getDone(java.util.concurrent.Future) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Future r0;
        boolean $z0;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.concurrent.Future;

        $z0 = interfaceinvoke r0.<java.util.concurrent.Future: boolean isDone()>();

        staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z0, "Future was expected to be done: %s", r0);

        $r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>(r0);

        return $r1;
    }

android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener
<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future>
<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback>
    void <init>(java.util.concurrent.Future, android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback)
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener r0;
        java.util.concurrent.Future r1;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback r2;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future> = r1;

        r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback> = r2;

        return;
    }

    public void run()
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener r0;
        java.lang.Object r1;
        java.util.concurrent.Future $r2;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback $r3, $r5, $r8;
        java.lang.Throwable $r4, $r6, $r7, r9, r10;
        java.util.concurrent.ExecutionException r11;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener;

     label1:
        $r2 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future>;

        r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>($r2);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r9 = $r4;

        $r5 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback>;

        r11 = (java.util.concurrent.ExecutionException) r9;

        $r6 = virtualinvoke r11.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        interfaceinvoke $r5.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>($r6);

        return;

     label4:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback>;

        interfaceinvoke $r8.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>(r10);

        return;

     label5:
        $r3 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback>;

        interfaceinvoke $r3.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback: void onSuccess(java.lang.Object)>(r1);

        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Error from label1 to label2 with label4;
    }

    public java.lang.String toString()
    {
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener r0;
        android.support.test.espresso.web.internal.deps.guava.base.MoreObjects$ToStringHelper $r1, $r3;
        android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback $r2;
        java.lang.String $r4;

        r0 := @this: android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener;

        $r1 = staticinvoke <android.support.test.espresso.web.internal.deps.guava.base.MoreObjects: android.support.test.espresso.web.internal.deps.guava.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = r0.<android.support.test.espresso.web.internal.deps.guava.util.concurrent.Futures$CallbackListener: android.support.test.espresso.web.internal.deps.guava.util.concurrent.FutureCallback callback>;

        $r3 = virtualinvoke $r1.<android.support.test.espresso.web.internal.deps.guava.base.MoreObjects$ToStringHelper: android.support.test.espresso.web.internal.deps.guava.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<android.support.test.espresso.web.internal.deps.guava.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r4;
    }

