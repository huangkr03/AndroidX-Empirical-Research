android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner
    public void <init>()
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner r0;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner;

        specialinvoke r0.<android.test.InstrumentationTestRunner: void <init>()>();

        return;
    }

    public void onStart()
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner r0;
        java.lang.String r1, r3;
        android.support.test.uiautomator.Tracer$Mode r2, $r6, $r11;
        android.os.Bundle $r4, $r7;
        java.lang.Enum $r5;
        android.support.test.uiautomator.Tracer $r8, $r9;
        java.lang.RuntimeException r12;
        java.lang.Throwable r13;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner;

        $r4 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner: android.os.Bundle getArguments()>();

        r1 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("traceOutputMode");

        if r1 == null goto label4;

        $r5 = staticinvoke <android.support.test.uiautomator.Tracer$Mode: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/support/test/uiautomator/Tracer$Mode;", r1);

        r2 = (android.support.test.uiautomator.Tracer$Mode) $r5;

        $r6 = <android.support.test.uiautomator.Tracer$Mode: android.support.test.uiautomator.Tracer$Mode FILE>;

        if r2 == $r6 goto label1;

        $r11 = <android.support.test.uiautomator.Tracer$Mode: android.support.test.uiautomator.Tracer$Mode ALL>;

        if r2 != $r11 goto label3;

     label1:
        $r7 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner: android.os.Bundle getArguments()>();

        r3 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("traceLogFilename");

        if r3 != null goto label2;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Name of log file not specified. Please specify it using traceLogFilename parameter");

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label2:
        $r8 = staticinvoke <android.support.test.uiautomator.Tracer: android.support.test.uiautomator.Tracer getInstance()>();

        virtualinvoke $r8.<android.support.test.uiautomator.Tracer: void setOutputFilename(java.lang.String)>(r3);

     label3:
        $r9 = staticinvoke <android.support.test.uiautomator.Tracer: android.support.test.uiautomator.Tracer getInstance()>();

        virtualinvoke $r9.<android.support.test.uiautomator.Tracer: void setOutputMode(android.support.test.uiautomator.Tracer$Mode)>(r2);

     label4:
        specialinvoke r0.<android.test.InstrumentationTestRunner: void onStart()>();

        return;
    }

    protected void initializeUiAutomatorTest(android.support.test.uiautomator.UiAutomatorTestCase)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner r0;
        android.support.test.uiautomator.UiAutomatorTestCase r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner;

        r1 := @parameter0: android.support.test.uiautomator.UiAutomatorTestCase;

        $r2 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner: android.os.Bundle getArguments()>();

        virtualinvoke r1.<android.support.test.uiautomator.UiAutomatorTestCase: void initialize(android.os.Bundle)>($r2);

        return;
    }

    protected android.test.AndroidTestRunner getAndroidTestRunner()
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner r0;
        android.test.AndroidTestRunner r1;
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 $r2;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner;

        r1 = specialinvoke r0.<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>();

        $r2 = new android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        specialinvoke $r2.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1: void <init>(android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner)>(r0);

        virtualinvoke r1.<android.test.AndroidTestRunner: void addTestListener(junit.framework.TestListener)>($r2);

        return r1;
    }

android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1
<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner this$0>
    void <init>(android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 r0;
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner r1;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        r1 := @parameter0: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner;

        r0.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void startTest(junit.framework.Test)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 r0;
        junit.framework.Test r1;
        boolean $z0;
        android.support.test.uiautomator.UiAutomatorTestCase $r2;
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner $r3;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        r1 := @parameter0: junit.framework.Test;

        $z0 = r1 instanceof android.support.test.uiautomator.UiAutomatorTestCase;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner this$0>;

        $r2 = (android.support.test.uiautomator.UiAutomatorTestCase) r1;

        virtualinvoke $r3.<android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner: void initializeUiAutomatorTest(android.support.test.uiautomator.UiAutomatorTestCase)>($r2);

     label1:
        return;
    }

    public void endTest(junit.framework.Test)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 r0;
        junit.framework.Test r1;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        r1 := @parameter0: junit.framework.Test;

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 r0;
        junit.framework.Test r1;
        junit.framework.AssertionFailedError r2;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: junit.framework.AssertionFailedError;

        return;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1 r0;
        junit.framework.Test r1;
        java.lang.Throwable r2;

        r0 := @this: android.support.test.uiautomator.UiAutomatorInstrumentationTestRunner$1;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

