android.support.constraint.Constraints
<android.support.constraint.Constraints: java.lang.String TAG>
<android.support.constraint.Constraints: android.support.constraint.ConstraintSet myConstraintSet>
    public void <init>(android.content.Context)
    {
        android.support.constraint.Constraints r0;
        android.content.Context r1;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.Constraints r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        specialinvoke r0.<android.support.constraint.Constraints: void init(android.util.AttributeSet)>(r2);

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.Constraints r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        specialinvoke r0.<android.support.constraint.Constraints: void init(android.util.AttributeSet)>(r2);

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(8);

        return;
    }

    public android.support.constraint.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.Constraints r0;
        android.util.AttributeSet r1;
        android.support.constraint.Constraints$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.constraint.Constraints$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.constraint.Constraints: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.constraint.Constraints$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.support.constraint.Constraints$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.Constraints r0;
        android.support.constraint.Constraints$LayoutParams $r1;

        r0 := @this: android.support.constraint.Constraints;

        $r1 = new android.support.constraint.Constraints$LayoutParams;

        specialinvoke $r1.<android.support.constraint.Constraints$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    private void init(android.util.AttributeSet)
    {
        android.support.constraint.Constraints r0;
        android.util.AttributeSet r1;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.util.AttributeSet;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Constraints", " ################# init");

        return;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.Constraints r0;
        android.view.ViewGroup$LayoutParams r1, r4;
        android.support.constraint.ConstraintLayout$LayoutParams r3;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        r3 = new android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke r3.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        r4 = (android.view.ViewGroup$LayoutParams) r3;

        return r4;
    }

    public android.support.constraint.ConstraintSet getConstraintSet()
    {
        android.support.constraint.Constraints r0;
        android.support.constraint.ConstraintSet $r1, $r2, $r3, $r4;

        r0 := @this: android.support.constraint.Constraints;

        $r1 = r0.<android.support.constraint.Constraints: android.support.constraint.ConstraintSet myConstraintSet>;

        if $r1 != null goto label1;

        $r4 = new android.support.constraint.ConstraintSet;

        specialinvoke $r4.<android.support.constraint.ConstraintSet: void <init>()>();

        r0.<android.support.constraint.Constraints: android.support.constraint.ConstraintSet myConstraintSet> = $r4;

     label1:
        $r2 = r0.<android.support.constraint.Constraints: android.support.constraint.ConstraintSet myConstraintSet>;

        virtualinvoke $r2.<android.support.constraint.ConstraintSet: void clone(android.support.constraint.Constraints)>(r0);

        $r3 = r0.<android.support.constraint.Constraints: android.support.constraint.ConstraintSet myConstraintSet>;

        return $r3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.constraint.Constraints r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.support.constraint.Constraints;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.Constraints r0;
        android.support.constraint.Constraints$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.support.constraint.Constraints;

        $r1 = virtualinvoke r0.<android.support.constraint.Constraints: android.support.constraint.Constraints$LayoutParams generateDefaultLayoutParams()>();

        r2 = (android.view.ViewGroup$LayoutParams) $r1;

        return r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.Constraints r0;
        android.util.AttributeSet r1;
        android.support.constraint.Constraints$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: android.support.constraint.Constraints;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.constraint.Constraints: android.support.constraint.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

android.support.constraint.Constraints$LayoutParams
<android.support.constraint.Constraints$LayoutParams: float alpha>
<android.support.constraint.Constraints$LayoutParams: boolean applyElevation>
<android.support.constraint.Constraints$LayoutParams: float elevation>
<android.support.constraint.Constraints$LayoutParams: float rotation>
<android.support.constraint.Constraints$LayoutParams: float rotationX>
<android.support.constraint.Constraints$LayoutParams: float rotationY>
<android.support.constraint.Constraints$LayoutParams: float scaleX>
<android.support.constraint.Constraints$LayoutParams: float scaleY>
<android.support.constraint.Constraints$LayoutParams: float transformPivotX>
<android.support.constraint.Constraints$LayoutParams: float transformPivotY>
<android.support.constraint.Constraints$LayoutParams: float translationX>
<android.support.constraint.Constraints$LayoutParams: float translationY>
<android.support.constraint.Constraints$LayoutParams: float translationZ>
    public void <init>(int, int)
    {
        android.support.constraint.Constraints$LayoutParams r0;
        int i0, i1;

        r0 := @this: android.support.constraint.Constraints$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(int,int)>(i0, i1);

        r0.<android.support.constraint.Constraints$LayoutParams: float alpha> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: boolean applyElevation> = 0;

        r0.<android.support.constraint.Constraints$LayoutParams: float elevation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleX> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleY> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationZ> = 0.0F;

        return;
    }

    public void <init>(android.support.constraint.Constraints$LayoutParams)
    {
        android.support.constraint.Constraints$LayoutParams r0, r1;

        r0 := @this: android.support.constraint.Constraints$LayoutParams;

        r1 := @parameter0: android.support.constraint.Constraints$LayoutParams;

        specialinvoke r0.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.support.constraint.ConstraintLayout$LayoutParams)>(r1);

        r0.<android.support.constraint.Constraints$LayoutParams: float alpha> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: boolean applyElevation> = 0;

        r0.<android.support.constraint.Constraints$LayoutParams: float elevation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleX> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleY> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationZ> = 0.0F;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.Constraints$LayoutParams r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        int[] $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;

        r0 := @this: android.support.constraint.Constraints$LayoutParams;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.support.constraint.Constraints$LayoutParams: float alpha> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: boolean applyElevation> = 0;

        r0.<android.support.constraint.Constraints$LayoutParams: float elevation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotation> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleX> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleY> = 1.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationX> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationY> = 0.0F;

        r0.<android.support.constraint.Constraints$LayoutParams: float translationZ> = 0.0F;

        $r4 = <android.support.constraint.R$styleable: int[] ConstraintSet>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getIndexCount()>();

        i16 = 0;

     label01:
        if i16 >= i0 goto label14;

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getIndex(int)>(i16);

        $i2 = <android.support.constraint.R$styleable: int ConstraintSet_android_alpha>;

        if i1 != $i2 goto label02;

        $f22 = r0.<android.support.constraint.Constraints$LayoutParams: float alpha>;

        $f23 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f22);

        r0.<android.support.constraint.Constraints$LayoutParams: float alpha> = $f23;

        goto label13;

     label02:
        $i3 = <android.support.constraint.R$styleable: int ConstraintSet_android_elevation>;

        if i1 != $i3 goto label03;

        $i15 = <android.os.Build$VERSION: int SDK_INT>;

        if $i15 < 21 goto label13;

        $f20 = r0.<android.support.constraint.Constraints$LayoutParams: float elevation>;

        $f21 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f20);

        r0.<android.support.constraint.Constraints$LayoutParams: float elevation> = $f21;

        r0.<android.support.constraint.Constraints$LayoutParams: boolean applyElevation> = 1;

        goto label13;

     label03:
        $i4 = <android.support.constraint.R$styleable: int ConstraintSet_android_rotationX>;

        if i1 != $i4 goto label04;

        $f18 = r0.<android.support.constraint.Constraints$LayoutParams: float rotationX>;

        $f19 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f18);

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationX> = $f19;

        goto label13;

     label04:
        $i5 = <android.support.constraint.R$styleable: int ConstraintSet_android_rotationY>;

        if i1 != $i5 goto label05;

        $f16 = r0.<android.support.constraint.Constraints$LayoutParams: float rotationY>;

        $f17 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f16);

        r0.<android.support.constraint.Constraints$LayoutParams: float rotationY> = $f17;

        goto label13;

     label05:
        $i6 = <android.support.constraint.R$styleable: int ConstraintSet_android_rotation>;

        if i1 != $i6 goto label06;

        $f14 = r0.<android.support.constraint.Constraints$LayoutParams: float rotation>;

        $f15 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f14);

        r0.<android.support.constraint.Constraints$LayoutParams: float rotation> = $f15;

        goto label13;

     label06:
        $i7 = <android.support.constraint.R$styleable: int ConstraintSet_android_scaleX>;

        if i1 != $i7 goto label07;

        $f12 = r0.<android.support.constraint.Constraints$LayoutParams: float scaleX>;

        $f13 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f12);

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleX> = $f13;

        goto label13;

     label07:
        $i8 = <android.support.constraint.R$styleable: int ConstraintSet_android_scaleY>;

        if i1 != $i8 goto label08;

        $f10 = r0.<android.support.constraint.Constraints$LayoutParams: float scaleY>;

        $f11 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f10);

        r0.<android.support.constraint.Constraints$LayoutParams: float scaleY> = $f11;

        goto label13;

     label08:
        $i9 = <android.support.constraint.R$styleable: int ConstraintSet_android_transformPivotX>;

        if i1 != $i9 goto label09;

        $f8 = r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotX>;

        $f9 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f8);

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotX> = $f9;

        goto label13;

     label09:
        $i10 = <android.support.constraint.R$styleable: int ConstraintSet_android_transformPivotY>;

        if i1 != $i10 goto label10;

        $f6 = r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotY>;

        $f7 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f6);

        r0.<android.support.constraint.Constraints$LayoutParams: float transformPivotY> = $f7;

        goto label13;

     label10:
        $i11 = <android.support.constraint.R$styleable: int ConstraintSet_android_translationX>;

        if i1 != $i11 goto label11;

        $f4 = r0.<android.support.constraint.Constraints$LayoutParams: float translationX>;

        $f5 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f4);

        r0.<android.support.constraint.Constraints$LayoutParams: float translationX> = $f5;

        goto label13;

     label11:
        $i12 = <android.support.constraint.R$styleable: int ConstraintSet_android_translationY>;

        if i1 != $i12 goto label12;

        $f2 = r0.<android.support.constraint.Constraints$LayoutParams: float translationY>;

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f2);

        r0.<android.support.constraint.Constraints$LayoutParams: float translationY> = $f3;

        goto label13;

     label12:
        $i13 = <android.support.constraint.R$styleable: int ConstraintSet_android_translationZ>;

        if i1 != $i13 goto label13;

        $i14 = <android.os.Build$VERSION: int SDK_INT>;

        if $i14 < 21 goto label13;

        $f0 = r0.<android.support.constraint.Constraints$LayoutParams: float translationZ>;

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f0);

        r0.<android.support.constraint.Constraints$LayoutParams: float translationZ> = $f1;

     label13:
        i16 = i16 + 1;

        goto label01;

     label14:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

