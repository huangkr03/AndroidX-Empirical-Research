android.support.v17.leanback.widget.NonOverlappingLinearLayout
<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mFocusableViewAvailableFixEnabled>
<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>
<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>
    public void <init>(android.content.Context)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        java.util.ArrayList $r3;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mFocusableViewAvailableFixEnabled> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews> = $r3;

        return;
    }

    public boolean hasOverlappingRendering()
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        return 0;
    }

    public void setFocusableViewAvailableFixEnabled(boolean)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        boolean z0;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mFocusableViewAvailableFixEnabled> = z0;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        java.lang.Throwable r1, $r22;
        java.util.ArrayList $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r26;
        java.lang.Object $r4, $r8, $r11, $r13, $r25;
        android.view.View $r14;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

     label01:
        $z1 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mFocusableViewAvailableFixEnabled>;

        if $z1 == 0 goto label02;

        $i13 = virtualinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: int getOrientation()>();

        if $i13 != 0 goto label02;

        $i14 = virtualinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: int getLayoutDirection()>();

        if $i14 != 1 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout> = $z6;

        $z7 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>;

        if $z7 == 0 goto label06;

     label04:
        $r15 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i7 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $i8 = virtualinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: int getChildCount()>();

        if $i7 <= $i8 goto label05;

        $r20 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r19 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i11 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        $i12 = $i11 - 1;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>($i12);

        goto label04;

     label05:
        $r16 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i9 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $i10 = virtualinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: int getChildCount()>();

        if $i9 >= $i10 goto label06;

        $r18 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        goto label05;

     label06:
        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $z2 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>;

        if $z2 == 0 goto label10;

        i16 = 0;

     label07:
        $r6 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i16 >= $i5 goto label10;

        i17 = 0;

     label08:
        $r7 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r9 = (java.util.ArrayList) $r8;

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i17 >= $i6 goto label09;

        $r10 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r12 = (java.util.ArrayList) $r11;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r14 = (android.view.View) $r13;

        specialinvoke r0.<android.widget.LinearLayout: void focusableViewAvailable(android.view.View)>($r14);

        i17 = i17 + 1;

        goto label08;

     label09:
        i16 = i16 + 1;

        goto label07;

     label10:
        $z3 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>;

        if $z3 == 0 goto label17;

        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout> = 0;

        i18 = 0;

     label11:
        $r2 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i18 >= $i4 goto label12;

        $r3 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        $r5 = (java.util.ArrayList) $r4;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        i18 = i18 + 1;

        goto label11;

     label12:
        goto label17;

     label13:
        $r22 := @caughtexception;

        r1 = $r22;

     label14:
        $z5 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>;

        if $z5 == 0 goto label16;

        r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout> = 0;

        i19 = 0;

     label15:
        $r23 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $i15 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if i19 >= $i15 goto label16;

        $r24 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r26 = (java.util.ArrayList) $r25;

        virtualinvoke $r26.<java.util.ArrayList: void clear()>();

        i19 = i19 + 1;

        goto label15;

     label16:
        throw r1;

     label17:
        return;

        catch java.lang.Throwable from label01 to label10 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void focusableViewAvailable(android.view.View)
    {
        android.support.v17.leanback.widget.NonOverlappingLinearLayout r0;
        android.view.View r1, r7;
        boolean $z0;
        java.util.ArrayList $r2, $r4;
        java.lang.Object $r3;
        android.view.ViewParent $r5, $r6;
        int i0;

        r0 := @this: android.support.v17.leanback.widget.NonOverlappingLinearLayout;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: boolean mDeferFocusableViewAvailableInLayout>;

        if $z0 == 0 goto label5;

        r7 = r1;

        i0 = -1;

     label1:
        if r7 == r0 goto label3;

        if r7 == null goto label3;

        $r5 = virtualinvoke r7.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 != r0 goto label2;

        i0 = virtualinvoke r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: int indexOfChild(android.view.View)>(r7);

        goto label3;

     label2:
        $r6 = virtualinvoke r7.<android.view.View: android.view.ViewParent getParent()>();

        r7 = (android.view.View) $r6;

        goto label1;

     label3:
        if i0 == -1 goto label4;

        $r2 = r0.<android.support.v17.leanback.widget.NonOverlappingLinearLayout: java.util.ArrayList mSortedAvailableViews>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (java.util.ArrayList) $r3;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label4:
        goto label6;

     label5:
        specialinvoke r0.<android.widget.LinearLayout: void focusableViewAvailable(android.view.View)>(r1);

     label6:
        return;
    }

