android.support.design.widget.FloatingActionButtonImpl
<android.support.design.widget.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR>
<android.support.design.widget.FloatingActionButtonImpl: long ELEVATION_ANIM_DURATION>
<android.support.design.widget.FloatingActionButtonImpl: long ELEVATION_ANIM_DELAY>
<android.support.design.widget.FloatingActionButtonImpl: int ANIM_STATE_NONE>
<android.support.design.widget.FloatingActionButtonImpl: int ANIM_STATE_HIDING>
<android.support.design.widget.FloatingActionButtonImpl: int ANIM_STATE_SHOWING>
<android.support.design.widget.FloatingActionButtonImpl: float HIDE_OPACITY>
<android.support.design.widget.FloatingActionButtonImpl: float HIDE_SCALE>
<android.support.design.widget.FloatingActionButtonImpl: float HIDE_ICON_SCALE>
<android.support.design.widget.FloatingActionButtonImpl: float SHOW_OPACITY>
<android.support.design.widget.FloatingActionButtonImpl: float SHOW_SCALE>
<android.support.design.widget.FloatingActionButtonImpl: float SHOW_ICON_SCALE>
<android.support.design.widget.FloatingActionButtonImpl: int animState>
<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec showMotionSpec>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec hideMotionSpec>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultShowMotionSpec>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultHideMotionSpec>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>
<android.support.design.widget.FloatingActionButtonImpl: float rotation>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>
<android.support.design.widget.FloatingActionButtonImpl: float elevation>
<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>
<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>
<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>
<android.support.design.widget.FloatingActionButtonImpl: float imageMatrixScale>
<android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: int[] ENABLED_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>
<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate shadowViewDelegate>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect tmpRect>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2>
<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>
<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>
    void <init>(android.support.design.widget.VisibilityAwareImageButton, android.support.design.widget.ShadowViewDelegate)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton r1, $r32;
        android.support.design.widget.ShadowViewDelegate r2;
        android.graphics.Rect $r3;
        android.graphics.RectF $r4, $r5;
        android.graphics.Matrix $r6;
        android.support.design.widget.StateListAnimator $r7, $r9, $r13, $r17, $r21, $r25, $r29;
        android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation $r8;
        int[] $r10, $r14, $r18, $r22, $r26, $r30;
        android.animation.ValueAnimator $r11, $r15, $r19, $r23, $r27, $r31;
        android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation $r12, $r16, $r20;
        android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation $r24;
        android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation $r28;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.widget.VisibilityAwareImageButton;

        r2 := @parameter1: android.support.design.widget.ShadowViewDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: int animState> = 0;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float imageMatrixScale> = 1.0F;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect tmpRect> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2> = $r5;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix> = $r6;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view> = r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate shadowViewDelegate> = r2;

        $r7 = new android.support.design.widget.StateListAnimator;

        specialinvoke $r7.<android.support.design.widget.StateListAnimator: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator> = $r7;

        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r10 = <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET>;

        $r8 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation;

        specialinvoke $r8.<android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r11 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r8);

        virtualinvoke $r9.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r10, $r11);

        $r13 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r14 = <android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET>;

        $r12 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r12.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r15 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r12);

        virtualinvoke $r13.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r14, $r15);

        $r17 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r18 = <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET>;

        $r16 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r16.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r19 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r16);

        virtualinvoke $r17.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r18, $r19);

        $r21 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r22 = <android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET>;

        $r20 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r20.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r23 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r20);

        virtualinvoke $r21.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r22, $r23);

        $r25 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r26 = <android.support.design.widget.FloatingActionButtonImpl: int[] ENABLED_STATE_SET>;

        $r24 = new android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation;

        specialinvoke $r24.<android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r27 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r24);

        virtualinvoke $r25.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r26, $r27);

        $r29 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        $r30 = <android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET>;

        $r28 = new android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation;

        specialinvoke $r28.<android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r31 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r28);

        virtualinvoke $r29.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r30, $r31);

        $r32 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $f0 = virtualinvoke $r32.<android.support.design.widget.VisibilityAwareImageButton: float getRotation()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation> = $f0;

        return;
    }

    void setBackgroundDrawable(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, android.content.res.ColorStateList, int)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList r1, r3, $r10;
        android.graphics.PorterDuff$Mode r2;
        int i0;
        android.graphics.drawable.GradientDrawable r4, $r5;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r9, $r12, $r13, $r19, $r26, $r27, $r28;
        android.graphics.drawable.Drawable[] $r11, r32;
        android.support.design.widget.VisibilityAwareImageButton $r16;
        android.content.Context $r17;
        android.support.design.widget.ShadowViewDelegate $r18, $r22;
        float $f0, $f1, $f2, $f3, $f4;
        android.support.design.widget.ShadowDrawableWrapper $r20, $r21, r31;
        android.support.design.widget.CircularBorderDrawable $r23, $r25;
        java.lang.Object[] $r24, r29;
        android.graphics.drawable.LayerDrawable r30;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.content.res.ColorStateList;

        r2 := @parameter1: android.graphics.PorterDuff$Mode;

        r3 := @parameter2: android.content.res.ColorStateList;

        i0 := @parameter3: int;

        $r5 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable createShapeDrawable()>();

        $r6 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r5);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable> = $r6;

        $r7 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r7, r1);

        if r2 == null goto label1;

        $r28 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r28, r2);

     label1:
        r4 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable createShapeDrawable()>();

        $r8 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>(r4);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable> = $r8;

        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        $r10 = staticinvoke <android.support.design.ripple.RippleUtils: android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)>(r3);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r9, $r10);

        if i0 <= 0 goto label2;

        $r23 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>(i0, r1);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable> = $r23;

        $r24 = newarray (android.graphics.drawable.Drawable)[3];

        $r25 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>;

        $r24[0] = $r25;

        $r26 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        $r24[1] = $r26;

        $r27 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        $r24[2] = $r27;

        r29 = $r24;

        goto label3;

     label2:
        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable> = null;

        $r11 = newarray (android.graphics.drawable.Drawable)[2];

        $r12 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        $r11[0] = $r12;

        $r13 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        $r11[1] = $r13;

        r29 = $r11;

     label3:
        r30 = new android.graphics.drawable.LayerDrawable;

        r32 = (android.graphics.drawable.Drawable[]) r29;

        specialinvoke r30.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r32);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground> = r30;

        r31 = new android.support.design.widget.ShadowDrawableWrapper;

        $r16 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r17 = virtualinvoke $r16.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        $r19 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        $r18 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate shadowViewDelegate>;

        $f0 = interfaceinvoke $r18.<android.support.design.widget.ShadowViewDelegate: float getRadius()>();

        $f4 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        $f3 = $f2 + $f1;

        specialinvoke r31.<android.support.design.widget.ShadowDrawableWrapper: void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float)>($r17, $r19, $f0, $f4, $f3);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable> = r31;

        $r20 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        virtualinvoke $r20.<android.support.design.widget.ShadowDrawableWrapper: void setAddPaddingForCorners(boolean)>(0);

        $r22 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate shadowViewDelegate>;

        $r21 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        interfaceinvoke $r22.<android.support.design.widget.ShadowViewDelegate: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r21);

        return;
    }

    void setBackgroundTintList(android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.Drawable $r2, $r5;
        android.support.design.widget.CircularBorderDrawable $r3, $r4;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r5, r1);

     label1:
        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>;

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setBorderTint(android.content.res.ColorStateList)>(r1);

     label2:
        return;
    }

    void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable shapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r3, r1);

     label1:
        return;
    }

    void setRippleColor(android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList r1, $r4;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        $r4 = staticinvoke <android.support.design.ripple.RippleUtils: android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)>(r1);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r3, $r4);

     label1:
        return;
    }

    final void setElevation(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, $f1, $f2, $f3, $f4;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation> = f0;

        $f4 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $f3 = r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f4, $f3, $f2);

     label1:
        return;
    }

    float getElevation()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        return $f0;
    }

    float getHoveredFocusedTranslationZ()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        return $f0;
    }

    float getPressedTranslationZ()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        return $f0;
    }

    final void setHoveredFocusedTranslationZ(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, $f1, $f2, $f3, $f4;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ> = f0;

        $f4 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $f3 = r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f4, $f3, $f2);

     label1:
        return;
    }

    final void setPressedTranslationZ(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, $f1, $f2, $f3, $f4;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ> = f0;

        $f4 = r0.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $f3 = r0.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f4, $f3, $f2);

     label1:
        return;
    }

    final void setMaxImageSize(int)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int i0, $i1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        if $i1 == i0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize> = i0;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void updateImageMatrixScale()>();

     label1:
        return;
    }

    final void updateImageMatrixScale()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float imageMatrixScale>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void setImageMatrixScale(float)>($f0);

        return;
    }

    final void setImageMatrixScale(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0;
        android.graphics.Matrix r1;
        android.support.design.widget.VisibilityAwareImageButton $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float imageMatrixScale> = f0;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)>(f0, r1);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setImageMatrix(android.graphics.Matrix)>(r1);

        return;
    }

    private void calculateImageMatrixFromScale(float, android.graphics.Matrix)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.Matrix r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.RectF r3, r4;
        android.support.design.widget.VisibilityAwareImageButton $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Matrix$ScaleToFit $r6;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.Matrix;

        virtualinvoke r1.<android.graphics.Matrix: void reset()>();

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        r2 = virtualinvoke $r5.<android.support.design.widget.VisibilityAwareImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if r2 == null goto label1;

        $i0 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        if $i0 == 0 goto label1;

        r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1>;

        r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2>;

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f1 = (float) $i1;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f2 = (float) $i2;

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        $i3 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        $f4 = (float) $i3;

        $i4 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        $f3 = (float) $i4;

        virtualinvoke r4.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f4, $f3);

        $r6 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r1.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r3, r4, $r6);

        $i5 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        $f5 = (float) $i5;

        $f8 = $f5 / 2.0F;

        $i6 = r0.<android.support.design.widget.FloatingActionButtonImpl: int maxImageSize>;

        $f6 = (float) $i6;

        $f7 = $f6 / 2.0F;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>(f0, f0, $f8, $f7);

     label1:
        return;
    }

    final android.support.design.animation.MotionSpec getShowMotionSpec()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec showMotionSpec>;

        return $r1;
    }

    final void setShowMotionSpec(android.support.design.animation.MotionSpec)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.animation.MotionSpec;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec showMotionSpec> = r1;

        return;
    }

    final android.support.design.animation.MotionSpec getHideMotionSpec()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec hideMotionSpec>;

        return $r1;
    }

    final void setHideMotionSpec(android.support.design.animation.MotionSpec)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.animation.MotionSpec;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec hideMotionSpec> = r1;

        return;
    }

    void onElevationsChanged(float, float, float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, f1, f2, $f3, $f4;
        android.support.design.widget.ShadowDrawableWrapper $r1, $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        $f3 = r0.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        $f4 = f0 + $f3;

        virtualinvoke $r2.<android.support.design.widget.ShadowDrawableWrapper: void setShadowSize(float,float)>(f0, $f4);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void updatePadding()>();

     label1:
        return;
    }

    void onDrawableStateChanged(int[])
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int[] r1;
        android.support.design.widget.StateListAnimator $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: int[];

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        virtualinvoke $r2.<android.support.design.widget.StateListAnimator: void setState(int[])>(r1);

        return;
    }

    void jumpDrawableToCurrentState()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.StateListAnimator $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator stateListAnimator>;

        virtualinvoke $r1.<android.support.design.widget.StateListAnimator: void jumpToCurrentState()>();

        return;
    }

    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener r1;
        boolean z0, $z1, $z2;
        android.animation.AnimatorSet r2;
        android.animation.Animator $r3, $r8;
        android.support.design.widget.VisibilityAwareImageButton $r4;
        android.support.design.animation.MotionSpec $r5, $r9;
        byte $b0;
        android.support.design.widget.FloatingActionButtonImpl$1 r10;
        android.animation.Animator$AnimatorListener r11;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean isOrWillBeHidden()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        if $r3 == null goto label2;

        $r8 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        virtualinvoke $r8.<android.animation.Animator: void cancel()>();

     label2:
        $z2 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z2 == 0 goto label5;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec hideMotionSpec>;

        if $r5 == null goto label3;

        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec hideMotionSpec>;

        goto label4;

     label3:
        $r9 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec getDefaultHideMotionSpec()>();

     label4:
        r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(android.support.design.animation.MotionSpec,float,float,float)>($r9, 0.0F, 0.0F, 0.0F);

        r10 = new android.support.design.widget.FloatingActionButtonImpl$1;

        specialinvoke r10.<android.support.design.widget.FloatingActionButtonImpl$1: void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, z0, r1);

        r11 = (android.animation.Animator$AnimatorListener) r10;

        virtualinvoke r2.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r11);

        virtualinvoke r2.<android.animation.AnimatorSet: void start()>();

        goto label8;

     label5:
        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        if z0 == 0 goto label6;

        $b0 = 8;

        goto label7;

     label6:
        $b0 = 4;

     label7:
        virtualinvoke $r4.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>($b0, z0);

        if r1 == null goto label8;

        interfaceinvoke r1.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>();

     label8:
        return;
    }

    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener r1;
        boolean z0, $z1, $z2;
        android.animation.AnimatorSet r2;
        android.animation.Animator $r3, $r15;
        android.support.design.widget.VisibilityAwareImageButton $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14;
        int $i0;
        android.support.design.animation.MotionSpec $r9, $r16;
        android.support.design.widget.FloatingActionButtonImpl$2 r17;
        android.animation.Animator$AnimatorListener r18;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean isOrWillBeShown()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        if $r3 == null goto label2;

        $r15 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        virtualinvoke $r15.<android.animation.Animator: void cancel()>();

     label2:
        $z2 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z2 == 0 goto label6;

        $r8 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $i0 = virtualinvoke $r8.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 == 0 goto label3;

        $r12 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r12.<android.support.design.widget.VisibilityAwareImageButton: void setAlpha(float)>(0.0F);

        $r13 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r13.<android.support.design.widget.VisibilityAwareImageButton: void setScaleY(float)>(0.0F);

        $r14 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r14.<android.support.design.widget.VisibilityAwareImageButton: void setScaleX(float)>(0.0F);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void setImageMatrixScale(float)>(0.0F);

     label3:
        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec showMotionSpec>;

        if $r9 == null goto label4;

        $r16 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec showMotionSpec>;

        goto label5;

     label4:
        $r16 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec getDefaultShowMotionSpec()>();

     label5:
        r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(android.support.design.animation.MotionSpec,float,float,float)>($r16, 1.0F, 1.0F, 1.0F);

        r17 = new android.support.design.widget.FloatingActionButtonImpl$2;

        specialinvoke r17.<android.support.design.widget.FloatingActionButtonImpl$2: void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, z0, r1);

        r18 = (android.animation.Animator$AnimatorListener) r17;

        virtualinvoke r2.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r18);

        virtualinvoke r2.<android.animation.AnimatorSet: void start()>();

        goto label7;

     label6:
        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r4.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>(0, z0);

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r5.<android.support.design.widget.VisibilityAwareImageButton: void setAlpha(float)>(1.0F);

        $r6 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r6.<android.support.design.widget.VisibilityAwareImageButton: void setScaleY(float)>(1.0F);

        $r7 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r7.<android.support.design.widget.VisibilityAwareImageButton: void setScaleX(float)>(1.0F);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void setImageMatrixScale(float)>(1.0F);

        if r1 == null goto label7;

        interfaceinvoke r1.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>();

     label7:
        return;
    }

    private android.support.design.animation.MotionSpec getDefaultShowMotionSpec()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec $r1, $r2, $r5;
        android.support.design.widget.VisibilityAwareImageButton $r3;
        android.content.Context $r4;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultShowMotionSpec>;

        if $r1 != null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r4 = virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        $i0 = <android.support.design.widget.R$animator: int design_fab_show_motion_spec>;

        $r5 = staticinvoke <android.support.design.animation.MotionSpec: android.support.design.animation.MotionSpec createFromResource(android.content.Context,int)>($r4, $i0);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultShowMotionSpec> = $r5;

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultShowMotionSpec>;

        return $r2;
    }

    private android.support.design.animation.MotionSpec getDefaultHideMotionSpec()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec $r1, $r2, $r5;
        android.support.design.widget.VisibilityAwareImageButton $r3;
        android.content.Context $r4;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultHideMotionSpec>;

        if $r1 != null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r4 = virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        $i0 = <android.support.design.widget.R$animator: int design_fab_hide_motion_spec>;

        $r5 = staticinvoke <android.support.design.animation.MotionSpec: android.support.design.animation.MotionSpec createFromResource(android.content.Context,int)>($r4, $i0);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultHideMotionSpec> = $r5;

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.animation.MotionSpec defaultHideMotionSpec>;

        return $r2;
    }

    private android.animation.AnimatorSet createAnimator(android.support.design.animation.MotionSpec, float, float, float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.animation.MotionSpec r1;
        float f0, f1, f2;
        java.util.ArrayList r2, $r4;
        android.animation.AnimatorSet r3, $r25;
        float[] $r5, $r9, $r13;
        android.util.Property $r6, $r10, $r14;
        android.support.design.widget.VisibilityAwareImageButton $r7, $r11, $r15, $r19;
        android.support.design.animation.MotionTiming $r8, $r12, $r16, $r24;
        android.graphics.Matrix $r17, $r22, $r23;
        android.support.design.animation.ImageMatrixProperty $r18;
        android.support.design.animation.MatrixEvaluator $r20;
        android.graphics.Matrix[] $r21;
        android.animation.ObjectAnimator r26, r27, r28, r29;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.animation.MotionSpec;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r7 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r6 = <android.view.View: android.util.Property ALPHA>;

        $r5 = newarray (float)[1];

        $r5[0] = f0;

        r26 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r7, $r6, $r5);

        $r8 = virtualinvoke r1.<android.support.design.animation.MotionSpec: android.support.design.animation.MotionTiming getTiming(java.lang.String)>("opacity");

        virtualinvoke $r8.<android.support.design.animation.MotionTiming: void apply(android.animation.Animator)>(r26);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r26);

        $r11 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r10 = <android.view.View: android.util.Property SCALE_X>;

        $r9 = newarray (float)[1];

        $r9[0] = f1;

        r27 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r11, $r10, $r9);

        $r12 = virtualinvoke r1.<android.support.design.animation.MotionSpec: android.support.design.animation.MotionTiming getTiming(java.lang.String)>("scale");

        virtualinvoke $r12.<android.support.design.animation.MotionTiming: void apply(android.animation.Animator)>(r27);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r27);

        $r15 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r14 = <android.view.View: android.util.Property SCALE_Y>;

        $r13 = newarray (float)[1];

        $r13[0] = f1;

        r28 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r15, $r14, $r13);

        $r16 = virtualinvoke r1.<android.support.design.animation.MotionSpec: android.support.design.animation.MotionTiming getTiming(java.lang.String)>("scale");

        virtualinvoke $r16.<android.support.design.animation.MotionTiming: void apply(android.animation.Animator)>(r28);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r28);

        $r17 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)>(f2, $r17);

        $r19 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r18 = new android.support.design.animation.ImageMatrixProperty;

        specialinvoke $r18.<android.support.design.animation.ImageMatrixProperty: void <init>()>();

        $r20 = new android.support.design.animation.MatrixEvaluator;

        specialinvoke $r20.<android.support.design.animation.MatrixEvaluator: void <init>()>();

        $r21 = newarray (android.graphics.Matrix)[1];

        $r22 = new android.graphics.Matrix;

        $r23 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke $r22.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r23);

        $r21[0] = $r22;

        r29 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r19, $r18, $r20, $r21);

        $r24 = virtualinvoke r1.<android.support.design.animation.MotionSpec: android.support.design.animation.MotionTiming getTiming(java.lang.String)>("iconScale");

        virtualinvoke $r24.<android.support.design.animation.MotionTiming: void apply(android.animation.Animator)>(r29);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r29);

        $r25 = new android.animation.AnimatorSet;

        specialinvoke $r25.<android.animation.AnimatorSet: void <init>()>();

        r3 = $r25;

        staticinvoke <android.support.design.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>(r3, r2);

        return r3;
    }

    final android.graphics.drawable.Drawable getContentBackground()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        return $r1;
    }

    void onCompatShadowChanged()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return;
    }

    final void updatePadding()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3;
        android.support.design.widget.ShadowViewDelegate $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect tmpRect>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)>(r1);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate shadowViewDelegate>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r2.<android.support.design.widget.ShadowViewDelegate: void setShadowPadding(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    void getPadding(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect r1;
        android.support.design.widget.ShadowDrawableWrapper $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        virtualinvoke $r2.<android.support.design.widget.ShadowDrawableWrapper: boolean getPadding(android.graphics.Rect)>(r1);

        return;
    }

    void onPaddingUpdated(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.graphics.Rect;

        return;
    }

    void onAttachedToWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        boolean $z0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $z0 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean requirePreDrawListener()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void ensurePreDrawListener()>();

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r2 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

     label1:
        return;
    }

    void onDetachedFromWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1, $r4;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.view.ViewTreeObserver $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r4);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener> = null;

     label1:
        return;
    }

    boolean requirePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return 1;
    }

    android.support.design.widget.CircularBorderDrawable createBorderDrawable(int, android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.res.ColorStateList r1;
        android.content.Context r2;
        android.support.design.widget.CircularBorderDrawable r3;
        android.support.design.widget.VisibilityAwareImageButton $r4;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        r2 = virtualinvoke $r4.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable newCircularDrawable()>();

        $i1 = <android.support.design.widget.R$color: int design_fab_stroke_top_outer_color>;

        $i2 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r2, $i1);

        $i3 = <android.support.design.widget.R$color: int design_fab_stroke_top_inner_color>;

        $i4 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r2, $i3);

        $i5 = <android.support.design.widget.R$color: int design_fab_stroke_end_inner_color>;

        $i6 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r2, $i5);

        $i7 = <android.support.design.widget.R$color: int design_fab_stroke_end_outer_color>;

        $i8 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r2, $i7);

        virtualinvoke r3.<android.support.design.widget.CircularBorderDrawable: void setGradientColors(int,int,int,int)>($i2, $i4, $i6, $i8);

        $f0 = (float) i0;

        virtualinvoke r3.<android.support.design.widget.CircularBorderDrawable: void setBorderWidth(float)>($f0);

        virtualinvoke r3.<android.support.design.widget.CircularBorderDrawable: void setBorderTint(android.content.res.ColorStateList)>(r1);

        return r3;
    }

    android.support.design.widget.CircularBorderDrawable newCircularDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.CircularBorderDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = new android.support.design.widget.CircularBorderDrawable;

        specialinvoke $r1.<android.support.design.widget.CircularBorderDrawable: void <init>()>();

        return $r1;
    }

    void onPreDraw()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0, $f1;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        f0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: float getRotation()>();

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation> = f0;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void updateFromViewRotation()>();

     label1:
        return;
    }

    private void ensurePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.support.design.widget.FloatingActionButtonImpl$3 $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        if $r1 != null goto label1;

        $r2 = new android.support.design.widget.FloatingActionButtonImpl$3;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl$3: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener> = $r2;

     label1:
        return;
    }

    android.graphics.drawable.GradientDrawable createShapeDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.GradientDrawable r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable newGradientDrawableForShape()>();

        virtualinvoke r1.<android.graphics.drawable.GradientDrawable: void setShape(int)>(1);

        virtualinvoke r1.<android.graphics.drawable.GradientDrawable: void setColor(int)>(-1);

        return r1;
    }

    android.graphics.drawable.GradientDrawable newGradientDrawableForShape()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.GradientDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable: void <init>()>();

        return $r1;
    }

    boolean isOrWillBeShown()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 == 0 goto label3;

        $i2 = r0.<android.support.design.widget.FloatingActionButtonImpl: int animState>;

        if $i2 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $i1 = r0.<android.support.design.widget.FloatingActionButtonImpl: int animState>;

        if $i1 == 1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    boolean isOrWillBeHidden()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 != 0 goto label3;

        $i2 = r0.<android.support.design.widget.FloatingActionButtonImpl: int animState>;

        if $i2 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $i1 = r0.<android.support.design.widget.FloatingActionButtonImpl: int animState>;

        if $i1 == 2 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    private android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl r1;
        android.animation.ValueAnimator r2, r7;
        android.animation.TimeInterpolator $r4;
        float[] $r6;
        android.animation.Animator$AnimatorListener r8;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r7 = new android.animation.ValueAnimator;

        specialinvoke r7.<android.animation.ValueAnimator: void <init>()>();

        r2 = r7;

        $r4 = <android.support.design.widget.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR>;

        virtualinvoke r2.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        virtualinvoke r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(100L);

        r8 = (android.animation.Animator$AnimatorListener) r1;

        virtualinvoke r2.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r8);

        virtualinvoke r2.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r1);

        $r6 = newarray (float)[2];

        $r6[0] = 0.0F;

        $r6[1] = 1.0F;

        virtualinvoke r2.<android.animation.ValueAnimator: void setFloatValues(float[])>($r6);

        return r2;
    }

    private boolean shouldAnimateVisibilityChange()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1, $r2;
        boolean $z0, $z1, $z2;
        android.view.View r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        r3 = (android.view.View) $r1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r3);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $z1 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: boolean isInEditMode()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void updateFromViewRotation()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0, $i2, $i3;
        android.support.design.widget.CircularBorderDrawable $r1, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.support.design.widget.ShadowDrawableWrapper $r3, $r8;
        byte $b1;
        android.support.design.widget.VisibilityAwareImageButton $r4, $r5, $r6, $r7;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 19 goto label2;

        $f4 = r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation>;

        $f5 = $f4 % 90.0F;

        $b1 = $f5 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $r6 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $i3 = virtualinvoke $r6.<android.support.design.widget.VisibilityAwareImageButton: int getLayerType()>();

        if $i3 == 1 goto label2;

        $r7 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r7.<android.support.design.widget.VisibilityAwareImageButton: void setLayerType(int,android.graphics.Paint)>(1, null);

        goto label2;

     label1:
        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $i2 = virtualinvoke $r4.<android.support.design.widget.VisibilityAwareImageButton: int getLayerType()>();

        if $i2 == 0 goto label2;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        virtualinvoke $r5.<android.support.design.widget.VisibilityAwareImageButton: void setLayerType(int,android.graphics.Paint)>(0, null);

     label2:
        $r8 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        if $r8 == null goto label3;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation>;

        $f3 = neg $f2;

        virtualinvoke $r3.<android.support.design.widget.ShadowDrawableWrapper: void setRotation(float)>($f3);

     label3:
        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>;

        if $r1 == null goto label4;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable borderDrawable>;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float rotation>;

        $f1 = neg $f0;

        virtualinvoke $r2.<android.support.design.widget.CircularBorderDrawable: void setRotation(float)>($f1);

     label4:
        return;
    }

    static void <clinit>()
    {
        android.animation.TimeInterpolator $r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = <android.support.design.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        <android.support.design.widget.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 16842919;

        $r1[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET> = $r1;

        $r2 = newarray (int)[3];

        $r2[0] = 16843623;

        $r2[1] = 16842908;

        $r2[2] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 16842908;

        $r3[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET> = $r3;

        $r4 = newarray (int)[2];

        $r4[0] = 16843623;

        $r4[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET> = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] ENABLED_STATE_SET> = $r5;

        $r6 = newarray (int)[0];

        <android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET> = $r6;

        return;
    }

android.support.design.widget.FloatingActionButtonImpl$1
<android.support.design.widget.FloatingActionButtonImpl$1: boolean cancelled>
<android.support.design.widget.FloatingActionButtonImpl$1: boolean val$fromUser>
<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>
<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl, boolean, android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
    {
        android.support.design.widget.FloatingActionButtonImpl$1 r0;
        android.support.design.widget.FloatingActionButtonImpl r1;
        boolean z0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$1;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean val$fromUser> = z0;

        r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener> = r2;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$1 r0;
        android.animation.Animator r1;
        android.support.design.widget.FloatingActionButtonImpl $r2, $r4, $r5;
        boolean $z0;
        android.support.design.widget.VisibilityAwareImageButton $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3 = $r2.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $z0 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean val$fromUser>;

        virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>(0, $z0);

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r4.<android.support.design.widget.FloatingActionButtonImpl: int animState> = 1;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r5.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator> = r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean cancelled> = 0;

        return;
    }

    public void onAnimationCancel(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$1 r0;
        android.animation.Animator r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$1;

        r1 := @parameter0: android.animation.Animator;

        r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean cancelled> = 1;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$1 r0;
        android.animation.Animator r1;
        android.support.design.widget.FloatingActionButtonImpl $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.support.design.widget.VisibilityAwareImageButton $r5;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r6, $r7;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$1;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r2.<android.support.design.widget.FloatingActionButtonImpl: int animState> = 0;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator> = null;

        $z0 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean cancelled>;

        if $z0 != 0 goto label3;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r5 = $r4.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $z1 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean val$fromUser>;

        if $z1 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        $z2 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: boolean val$fromUser>;

        virtualinvoke $r5.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>($b0, $z2);

        $r6 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>;

        if $r6 == null goto label3;

        $r7 = r0.<android.support.design.widget.FloatingActionButtonImpl$1: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>;

        interfaceinvoke $r7.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>();

     label3:
        return;
    }

android.support.design.widget.FloatingActionButtonImpl$2
<android.support.design.widget.FloatingActionButtonImpl$2: boolean val$fromUser>
<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>
<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl, boolean, android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
    {
        android.support.design.widget.FloatingActionButtonImpl$2 r0;
        android.support.design.widget.FloatingActionButtonImpl r1;
        boolean z0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$2;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl$2: boolean val$fromUser> = z0;

        r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener> = r2;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$2 r0;
        android.animation.Animator r1;
        android.support.design.widget.FloatingActionButtonImpl $r2, $r4, $r5;
        boolean $z0;
        android.support.design.widget.VisibilityAwareImageButton $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$2;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3 = $r2.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton view>;

        $z0 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: boolean val$fromUser>;

        virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>(0, $z0);

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r4.<android.support.design.widget.FloatingActionButtonImpl: int animState> = 2;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r5.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator> = r1;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$2 r0;
        android.animation.Animator r1;
        android.support.design.widget.FloatingActionButtonImpl $r2, $r3;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r4, $r5;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$2;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r2.<android.support.design.widget.FloatingActionButtonImpl: int animState> = 0;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3.<android.support.design.widget.FloatingActionButtonImpl: android.animation.Animator currentAnimator> = null;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>;

        if $r4 == null goto label1;

        $r5 = r0.<android.support.design.widget.FloatingActionButtonImpl$2: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener>;

        interfaceinvoke $r5.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>();

     label1:
        return;
    }

android.support.design.widget.FloatingActionButtonImpl$3
<android.support.design.widget.FloatingActionButtonImpl$3: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$3 r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$3;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$3: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onPreDraw()
    {
        android.support.design.widget.FloatingActionButtonImpl$3 r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$3;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl$3: android.support.design.widget.FloatingActionButtonImpl this$0>;

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void onPreDraw()>();

        return 1;
    }

android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation
<android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1)>(r1, null);

        return;
    }

    protected float getTargetShadowSize()
    {
        android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation;

        return 0.0F;
    }

android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation
<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1)>(r1, null);

        return;
    }

    protected float getTargetShadowSize()
    {
        android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl $r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $f1 = $r1.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $f0 = $r2.<android.support.design.widget.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f2 = $f1 + $f0;

        return $f2;
    }

android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation
<android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1)>(r1, null);

        return;
    }

    protected float getTargetShadowSize()
    {
        android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl $r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $f1 = $r1.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $f0 = $r2.<android.support.design.widget.FloatingActionButtonImpl: float pressedTranslationZ>;

        $f2 = $f1 + $f0;

        return $f2;
    }

android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener
<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>
<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>
android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation
<android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>
    void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1)>(r1, null);

        return;
    }

    protected float getTargetShadowSize()
    {
        android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $f0 = $r1.<android.support.design.widget.FloatingActionButtonImpl: float elevation>;

        return $f0;
    }

android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl
<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: boolean validValues>
<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeStart>
<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeEnd>
<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: android.support.design.widget.FloatingActionButtonImpl this$0>
    private void <init>(android.support.design.widget.FloatingActionButtonImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl r0;
        android.support.design.widget.FloatingActionButtonImpl r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: android.support.design.widget.FloatingActionButtonImpl this$0> = r1;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl r0;
        android.animation.ValueAnimator r1;
        boolean $z0;
        android.support.design.widget.FloatingActionButtonImpl $r2, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.support.design.widget.ShadowDrawableWrapper $r3, $r5;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r1 := @parameter0: android.animation.ValueAnimator;

        $z0 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: boolean validValues>;

        if $z0 != 0 goto label1;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r5 = $r4.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        $f7 = virtualinvoke $r5.<android.support.design.widget.ShadowDrawableWrapper: float getShadowSize()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeStart> = $f7;

        $f8 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float getTargetShadowSize()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeEnd> = $f8;

        r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: boolean validValues> = 1;

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3 = $r2.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        $f2 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeStart>;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeEnd>;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeStart>;

        $f3 = $f1 - $f0;

        $f4 = virtualinvoke r1.<android.animation.ValueAnimator: float getAnimatedFraction()>();

        $f5 = $f3 * $f4;

        $f6 = $f2 + $f5;

        virtualinvoke $r3.<android.support.design.widget.ShadowDrawableWrapper: void setShadowSize(float)>($f6);

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl r0;
        android.animation.Animator r1;
        android.support.design.widget.FloatingActionButtonImpl $r2;
        float $f0;
        android.support.design.widget.ShadowDrawableWrapper $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: android.support.design.widget.FloatingActionButtonImpl this$0>;

        $r3 = $r2.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper shadowDrawable>;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float shadowSizeEnd>;

        virtualinvoke $r3.<android.support.design.widget.ShadowDrawableWrapper: void setShadowSize(float)>($f0);

        r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: boolean validValues> = 0;

        return;
    }

<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: float getTargetShadowSize()>
    void <init>(android.support.design.widget.FloatingActionButtonImpl, android.support.design.widget.FloatingActionButtonImpl$1)
    {
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl r0;
        android.support.design.widget.FloatingActionButtonImpl r1;
        android.support.design.widget.FloatingActionButtonImpl$1 r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl;

        r2 := @parameter1: android.support.design.widget.FloatingActionButtonImpl$1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r1);

        return;
    }

