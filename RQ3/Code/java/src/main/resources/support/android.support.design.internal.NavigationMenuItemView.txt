android.support.design.internal.NavigationMenuItemView
<android.support.design.internal.NavigationMenuItemView: int[] CHECKED_STATE_SET>
<android.support.design.internal.NavigationMenuItemView: int iconSize>
<android.support.design.internal.NavigationMenuItemView: boolean needsEmptyIcon>
<android.support.design.internal.NavigationMenuItemView: boolean checkable>
<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>
<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>
<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>
<android.support.design.internal.NavigationMenuItemView: android.content.res.ColorStateList iconTintList>
<android.support.design.internal.NavigationMenuItemView: boolean hasIconTintList>
<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable>
<android.support.design.internal.NavigationMenuItemView: android.support.v4.view.AccessibilityDelegateCompat accessibilityDelegate>
    public void <init>(android.content.Context)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.content.Context r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4;
        android.support.design.internal.NavigationMenuItemView$1 $r3;
        android.view.LayoutInflater $r4;
        android.content.res.Resources $r6;
        android.view.View $r7;
        android.widget.CheckedTextView $r8, $r9, $r11;
        android.support.v4.view.AccessibilityDelegateCompat $r10;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.design.internal.ForegroundLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.support.design.internal.NavigationMenuItemView$1;

        specialinvoke $r3.<android.support.design.internal.NavigationMenuItemView$1: void <init>(android.support.design.internal.NavigationMenuItemView)>(r0);

        r0.<android.support.design.internal.NavigationMenuItemView: android.support.v4.view.AccessibilityDelegateCompat accessibilityDelegate> = $r3;

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setOrientation(int)>(0);

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        $i1 = <android.support.design.internal.R$layout: int design_navigation_menu_item>;

        virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r0, 1);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <android.support.design.internal.R$dimen: int design_navigation_icon_size>;

        $i3 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        r0.<android.support.design.internal.NavigationMenuItemView: int iconSize> = $i3;

        $i4 = <android.support.design.internal.R$id: int design_menu_item_text>;

        $r7 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.view.View findViewById(int)>($i4);

        $r8 = (android.widget.CheckedTextView) $r7;

        r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView> = $r8;

        $r9 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r9.<android.widget.CheckedTextView: void setDuplicateParentStateEnabled(boolean)>(1);

        $r11 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        $r10 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v4.view.AccessibilityDelegateCompat accessibilityDelegate>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r11, $r10);

        return;
    }

    public void initialize(android.support.v7.view.menu.MenuItemImpl, int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.support.v7.view.menu.MenuItemImpl r1;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.Drawable $r2, $r4;
        java.lang.CharSequence $r3, $r6, $r7;
        android.view.View $r5, r10, r11;
        android.graphics.drawable.StateListDrawable $r8;
        byte $b1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.support.v7.view.menu.MenuItemImpl;

        i0 := @parameter1: int;

        r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData> = r1;

        $z0 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 8;

     label2:
        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setVisibility(int)>($b1);

        $r2 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label3;

        $r8 = specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable createDefaultBackground()>();

        r10 = (android.view.View) r0;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>(r10, $r8);

     label3:
        $z1 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: boolean isCheckable()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setCheckable(boolean)>($z1);

        $z2 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: boolean isChecked()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setChecked(boolean)>($z2);

        $z3 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: boolean isEnabled()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setEnabled(boolean)>($z3);

        $r3 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)>($r3);

        $r4 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r4);

        $r5 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: android.view.View getActionView()>();

        specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setActionView(android.view.View)>($r5);

        $r6 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setContentDescription(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke r1.<android.support.v7.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()>();

        r11 = (android.view.View) r0;

        staticinvoke <android.support.v7.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>(r11, $r7);

        specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: void adjustAppearance()>();

        return;
    }

    private boolean shouldExpandActionArea()
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.support.v7.view.menu.MenuItemImpl $r1, $r3, $r5;
        java.lang.CharSequence $r2;
        android.graphics.drawable.Drawable $r4;
        android.view.View $r6;
        boolean $z0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $r2 = virtualinvoke $r1.<android.support.v7.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        if $r2 != null goto label1;

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $r4 = virtualinvoke $r3.<android.support.v7.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        if $r4 != null goto label1;

        $r5 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $r6 = virtualinvoke $r5.<android.support.v7.view.menu.MenuItemImpl: android.view.View getActionView()>();

        if $r6 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void adjustAppearance()
    {
        android.support.design.internal.NavigationMenuItemView r0;
        boolean $z0;
        android.widget.CheckedTextView $r1, $r6;
        android.widget.FrameLayout $r2, $r3, $r5, $r7, $r8, $r10;
        android.view.ViewGroup$LayoutParams $r4, $r9;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r11, r12;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        $z0 = specialinvoke r0.<android.support.design.internal.NavigationMenuItemView: boolean shouldExpandActionArea()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r6.<android.widget.CheckedTextView: void setVisibility(int)>(8);

        $r7 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        if $r7 == null goto label2;

        $r8 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        $r9 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r11 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r9;

        r11.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = -1;

        $r10 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        virtualinvoke $r10.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r11);

        goto label2;

     label1:
        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r1.<android.widget.CheckedTextView: void setVisibility(int)>(0);

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        if $r2 == null goto label2;

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        $r4 = virtualinvoke $r3.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        r12.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = -2;

        $r5 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        virtualinvoke $r5.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r12);

     label2:
        return;
    }

    public void recycle()
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.widget.FrameLayout $r1, $r3;
        android.widget.CheckedTextView $r2;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        virtualinvoke $r3.<android.widget.FrameLayout: void removeAllViews()>();

     label1:
        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r2.<android.widget.CheckedTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, null, null, null);

        return;
    }

    private void setActionView(android.view.View)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.view.View r1, $r5, $r7;
        android.widget.FrameLayout $r2, $r3, $r4, $r8;
        int $i0;
        android.view.ViewStub $r6;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label2;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        if $r2 != null goto label1;

        $i0 = <android.support.design.internal.R$id: int design_menu_item_action_area_stub>;

        $r5 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.view.View findViewById(int)>($i0);

        $r6 = (android.view.ViewStub) $r5;

        $r7 = virtualinvoke $r6.<android.view.ViewStub: android.view.View inflate()>();

        $r8 = (android.widget.FrameLayout) $r7;

        r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea> = $r8;

     label1:
        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        virtualinvoke $r3.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.FrameLayout actionArea>;

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

     label2:
        return;
    }

    private android.graphics.drawable.StateListDrawable createDefaultBackground()
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.util.TypedValue r1, $r3;
        android.graphics.drawable.StateListDrawable r2, $r6;
        android.content.Context $r4;
        android.content.res.Resources$Theme $r5;
        int $i0, $i1;
        boolean $z0;
        android.graphics.drawable.ColorDrawable $r7, $r9;
        int[] $r8, $r10;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlHighlight>;

        $z0 = virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        if $z0 == 0 goto label1;

        $r6 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r6.<android.graphics.drawable.StateListDrawable: void <init>()>();

        r2 = $r6;

        $r8 = <android.support.design.internal.NavigationMenuItemView: int[] CHECKED_STATE_SET>;

        $r7 = new android.graphics.drawable.ColorDrawable;

        $i1 = r1.<android.util.TypedValue: int data>;

        specialinvoke $r7.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i1);

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r8, $r7);

        $r10 = <android.support.design.internal.NavigationMenuItemView: int[] EMPTY_STATE_SET>;

        $r9 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r9.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r10, $r9);

        return r2;

     label1:
        return null;
    }

    public android.support.v7.view.menu.MenuItemImpl getItemData()
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.support.v7.view.menu.MenuItemImpl $r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        return $r1;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        java.lang.CharSequence r1;
        android.widget.CheckedTextView $r2;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r2.<android.widget.CheckedTextView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    public void setCheckable(boolean)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        boolean z0, $z1;
        android.widget.CheckedTextView $r1;
        android.support.v4.view.AccessibilityDelegateCompat $r2;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void refreshDrawableState()>();

        $z1 = r0.<android.support.design.internal.NavigationMenuItemView: boolean checkable>;

        if $z1 == z0 goto label1;

        r0.<android.support.design.internal.NavigationMenuItemView: boolean checkable> = z0;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v4.view.AccessibilityDelegateCompat accessibilityDelegate>;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r2.<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)>($r1, 2048);

     label1:
        return;
    }

    public void setChecked(boolean)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        boolean z0;
        android.widget.CheckedTextView $r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void refreshDrawableState()>();

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r1.<android.widget.CheckedTextView: void setChecked(boolean)>(z0);

        return;
    }

    public void setShortcut(boolean, char)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        boolean z0;
        char c0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        z0 := @parameter0: boolean;

        c0 := @parameter1: char;

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.graphics.drawable.Drawable$ConstantState r1;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r2, $r6, $r7, $r8, $r9, r11, $r12;
        android.content.res.Resources $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Context $r4;
        android.content.res.Resources$Theme $r5;
        android.content.res.ColorStateList $r10;
        android.widget.CheckedTextView $r13;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r11 := @parameter0: android.graphics.drawable.Drawable;

        if r11 == null goto label4;

        $z1 = r0.<android.support.design.internal.NavigationMenuItemView: boolean hasIconTintList>;

        if $z1 == 0 goto label3;

        r1 = virtualinvoke r11.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r1 != null goto label1;

        $r12 = r11;

        goto label2;

     label1:
        $r12 = virtualinvoke r1.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

     label2:
        $r9 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r12);

        r11 = virtualinvoke $r9.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r10 = r0.<android.support.design.internal.NavigationMenuItemView: android.content.res.ColorStateList iconTintList>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>(r11, $r10);

     label3:
        $i3 = r0.<android.support.design.internal.NavigationMenuItemView: int iconSize>;

        $i4 = r0.<android.support.design.internal.NavigationMenuItemView: int iconSize>;

        virtualinvoke r11.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i4);

        goto label6;

     label4:
        $z0 = r0.<android.support.design.internal.NavigationMenuItemView: boolean needsEmptyIcon>;

        if $z0 == 0 goto label6;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable>;

        if $r2 != null goto label5;

        $r3 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.content.res.Resources getResources()>();

        $i0 = <android.support.design.internal.R$drawable: int navigation_empty_icon>;

        $r4 = virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r3, $i0, $r5);

        r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable> = $r6;

        $r7 = r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable>;

        if $r7 == null goto label5;

        $r8 = r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable>;

        $i2 = r0.<android.support.design.internal.NavigationMenuItemView: int iconSize>;

        $i1 = r0.<android.support.design.internal.NavigationMenuItemView: int iconSize>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i1);

     label5:
        r11 = r0.<android.support.design.internal.NavigationMenuItemView: android.graphics.drawable.Drawable emptyDrawable>;

     label6:
        $r13 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r13, r11, null, null, null);

        return;
    }

    public boolean prefersCondensedTitle()
    {
        android.support.design.internal.NavigationMenuItemView r0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        return 0;
    }

    public boolean showsIcon()
    {
        android.support.design.internal.NavigationMenuItemView r0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        return 1;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        int i0, $i1;
        int[] r1, $r5;
        android.support.v7.view.menu.MenuItemImpl $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.support.design.internal.ForegroundLinearLayout: int[] onCreateDrawableState(int)>($i1);

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $z0 = virtualinvoke $r3.<android.support.v7.view.menu.MenuItemImpl: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $z1 = virtualinvoke $r4.<android.support.v7.view.menu.MenuItemImpl: boolean isChecked()>();

        if $z1 == 0 goto label1;

        $r5 = <android.support.design.internal.NavigationMenuItemView: int[] CHECKED_STATE_SET>;

        staticinvoke <android.support.design.internal.NavigationMenuItemView: int[] mergeDrawableStates(int[],int[])>(r1, $r5);

     label1:
        return r1;
    }

    void setIconTintList(android.content.res.ColorStateList)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.content.res.ColorStateList r1, $r2;
        android.support.v7.view.menu.MenuItemImpl $r3, $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.support.design.internal.NavigationMenuItemView: android.content.res.ColorStateList iconTintList> = r1;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.content.res.ColorStateList iconTintList>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<android.support.design.internal.NavigationMenuItemView: boolean hasIconTintList> = $z0;

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        if $r3 == null goto label3;

        $r4 = r0.<android.support.design.internal.NavigationMenuItemView: android.support.v7.view.menu.MenuItemImpl itemData>;

        $r5 = virtualinvoke $r4.<android.support.v7.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r5);

     label3:
        return;
    }

    public void setTextAppearance(int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        int i0;
        android.widget.CheckedTextView $r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r1, i0);

        return;
    }

    public void setTextColor(android.content.res.ColorStateList)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        android.content.res.ColorStateList r1;
        android.widget.CheckedTextView $r2;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r2.<android.widget.CheckedTextView: void setTextColor(android.content.res.ColorStateList)>(r1);

        return;
    }

    public void setNeedsEmptyIcon(boolean)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        boolean z0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        z0 := @parameter0: boolean;

        r0.<android.support.design.internal.NavigationMenuItemView: boolean needsEmptyIcon> = z0;

        return;
    }

    public void setHorizontalPadding(int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        int i0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.design.internal.NavigationMenuItemView: void setPadding(int,int,int,int)>(i0, 0, i0, 0);

        return;
    }

    public void setIconPadding(int)
    {
        android.support.design.internal.NavigationMenuItemView r0;
        int i0;
        android.widget.CheckedTextView $r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.design.internal.NavigationMenuItemView: android.widget.CheckedTextView textView>;

        virtualinvoke $r1.<android.widget.CheckedTextView: void setCompoundDrawablePadding(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.support.design.internal.NavigationMenuItemView: int[] CHECKED_STATE_SET> = $r0;

        return;
    }

android.support.design.internal.NavigationMenuItemView$1
<android.support.design.internal.NavigationMenuItemView$1: android.support.design.internal.NavigationMenuItemView this$0>
    void <init>(android.support.design.internal.NavigationMenuItemView)
    {
        android.support.design.internal.NavigationMenuItemView$1 r0;
        android.support.design.internal.NavigationMenuItemView r1;

        r0 := @this: android.support.design.internal.NavigationMenuItemView$1;

        r1 := @parameter0: android.support.design.internal.NavigationMenuItemView;

        r0.<android.support.design.internal.NavigationMenuItemView$1: android.support.design.internal.NavigationMenuItemView this$0> = r1;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.design.internal.NavigationMenuItemView$1 r0;
        android.view.View r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r2;
        android.support.design.internal.NavigationMenuItemView $r3;
        boolean $z0;

        r0 := @this: android.support.design.internal.NavigationMenuItemView$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r1, r2);

        $r3 = r0.<android.support.design.internal.NavigationMenuItemView$1: android.support.design.internal.NavigationMenuItemView this$0>;

        $z0 = $r3.<android.support.design.internal.NavigationMenuItemView: boolean checkable>;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)>($z0);

        return;
    }

