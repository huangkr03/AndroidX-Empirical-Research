android.support.constraint.VirtualLayout
<android.support.constraint.VirtualLayout: boolean mApplyVisibilityOnAttach>
<android.support.constraint.VirtualLayout: boolean mApplyElevationOnAttach>
    public void <init>(android.content.Context)
    {
        android.support.constraint.VirtualLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.constraint.VirtualLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.VirtualLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.constraint.VirtualLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.VirtualLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.constraint.VirtualLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        return;
    }

    protected void init(android.util.AttributeSet)
    {
        android.support.constraint.VirtualLayout r0;
        android.util.AttributeSet r1;
        android.content.res.TypedArray r2;
        int i0, i1, $i2, $i3, i4;
        android.content.Context $r3;
        int[] $r4;

        r0 := @this: android.support.constraint.VirtualLayout;

        r1 := @parameter0: android.util.AttributeSet;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void init(android.util.AttributeSet)>(r1);

        if r1 == null goto label5;

        $r3 = virtualinvoke r0.<android.support.constraint.VirtualLayout: android.content.Context getContext()>();

        $r4 = <android.support.constraint.R$styleable: int[] ConstraintLayout_Layout>;

        r2 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r4);

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getIndexCount()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getIndex(int)>(i4);

        $i2 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_visibility>;

        if i1 != $i2 goto label2;

        r0.<android.support.constraint.VirtualLayout: boolean mApplyVisibilityOnAttach> = 1;

        goto label3;

     label2:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_elevation>;

        if i1 != $i3 goto label3;

        r0.<android.support.constraint.VirtualLayout: boolean mApplyElevationOnAttach> = 1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

     label5:
        return;
    }

    public void onMeasure(android.support.constraint.solver.widgets.VirtualLayout, int, int)
    {
        android.support.constraint.VirtualLayout r0;
        android.support.constraint.solver.widgets.VirtualLayout r1;
        int i0, i1;

        r0 := @this: android.support.constraint.VirtualLayout;

        r1 := @parameter0: android.support.constraint.solver.widgets.VirtualLayout;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.constraint.VirtualLayout r0;
        android.view.ViewParent r1;
        android.support.constraint.ConstraintLayout r2;
        int i0, i1, $i2, $i4, i5, $i6;
        android.view.View r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r4;
        byte $b3;
        float $f0, $f1, f2;

        r0 := @this: android.support.constraint.VirtualLayout;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void onAttachedToWindow()>();

        $z0 = r0.<android.support.constraint.VirtualLayout: boolean mApplyVisibilityOnAttach>;

        if $z0 != 0 goto label1;

        $z4 = r0.<android.support.constraint.VirtualLayout: boolean mApplyElevationOnAttach>;

        if $z4 == 0 goto label6;

     label1:
        r1 = virtualinvoke r0.<android.support.constraint.VirtualLayout: android.view.ViewParent getParent()>();

        if r1 == null goto label6;

        $z1 = r1 instanceof android.support.constraint.ConstraintLayout;

        if $z1 == 0 goto label6;

        r2 = (android.support.constraint.ConstraintLayout) r1;

        i0 = virtualinvoke r0.<android.support.constraint.VirtualLayout: int getVisibility()>();

        f2 = 0.0F;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label2;

        f2 = virtualinvoke r0.<android.support.constraint.VirtualLayout: float getElevation()>();

     label2:
        i5 = 0;

     label3:
        $i6 = r0.<android.support.constraint.VirtualLayout: int mCount>;

        if i5 >= $i6 goto label6;

        $r4 = r0.<android.support.constraint.VirtualLayout: int[] mIds>;

        i1 = $r4[i5];

        r3 = virtualinvoke r2.<android.support.constraint.ConstraintLayout: android.view.View getViewById(int)>(i1);

        if r3 == null goto label5;

        $z2 = r0.<android.support.constraint.VirtualLayout: boolean mApplyVisibilityOnAttach>;

        if $z2 == 0 goto label4;

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(i0);

     label4:
        $z3 = r0.<android.support.constraint.VirtualLayout: boolean mApplyElevationOnAttach>;

        if $z3 == 0 goto label5;

        $b3 = f2 cmpl 0.0F;

        if $b3 <= 0 goto label5;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label5;

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationZ()>();

        $f1 = $f0 + f2;

        virtualinvoke r3.<android.view.View: void setTranslationZ(float)>($f1);

     label5:
        i5 = i5 + 1;

        goto label3;

     label6:
        return;
    }

    public void setVisibility(int)
    {
        android.support.constraint.VirtualLayout r0;
        int i0;

        r0 := @this: android.support.constraint.VirtualLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void setVisibility(int)>(i0);

        virtualinvoke r0.<android.support.constraint.VirtualLayout: void applyLayoutFeatures()>();

        return;
    }

    public void setElevation(float)
    {
        android.support.constraint.VirtualLayout r0;
        float f0;

        r0 := @this: android.support.constraint.VirtualLayout;

        f0 := @parameter0: float;

        specialinvoke r0.<android.support.constraint.ConstraintHelper: void setElevation(float)>(f0);

        virtualinvoke r0.<android.support.constraint.VirtualLayout: void applyLayoutFeatures()>();

        return;
    }

