android.support.v7.widget.AppCompatDrawableManager
<android.support.v7.widget.AppCompatDrawableManager: java.lang.String TAG>
<android.support.v7.widget.AppCompatDrawableManager: boolean DEBUG>
<android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>
<android.support.v7.widget.AppCompatDrawableManager: java.lang.String SKIP_DRAWABLE_TAG>
<android.support.v7.widget.AppCompatDrawableManager: java.lang.String PLATFORM_VD_CLAZZ>
<android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>
<android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>
<android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>
<android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL>
<android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>
<android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>
<android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST>
<android.support.v7.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST>
<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>
<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>
<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags>
<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>
<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>
<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup>
    public void <init>()
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.util.WeakHashMap $r1;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>(int)>(0);

        r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches> = $r1;

        return;
    }

    public static synchronized android.support.v7.widget.AppCompatDrawableManager get()
    {
        android.support.v7.widget.AppCompatDrawableManager $r0, $r1, $r2, $r3;

        $r0 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        if $r0 != null goto label1;

        $r2 = new android.support.v7.widget.AppCompatDrawableManager;

        specialinvoke $r2.<android.support.v7.widget.AppCompatDrawableManager: void <init>()>();

        <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE> = $r2;

        $r3 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)>($r3);

     label1:
        $r1 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        return $r1;
    }

    private static void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        int $i0;
        android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate $r1;
        android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate $r2;
        android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate $r3;

        r0 := @parameter0: android.support.v7.widget.AppCompatDrawableManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 24 goto label1;

        $r1 = new android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate;

        specialinvoke $r1.<android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate: void <init>()>();

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)>("vector", $r1);

        $r2 = new android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate;

        specialinvoke $r2.<android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate: void <init>()>();

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)>("animated-vector", $r2);

        $r3 = new android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate;

        specialinvoke $r3.<android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate: void <init>()>();

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)>("animated-selector", $r3);

     label1:
        return;
    }

    public synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0;
        boolean z0;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)>(r1);

        r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>(r1, i0);

        if r2 != null goto label1;

        r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>(r1, i0);

     label1:
        if r2 != null goto label2;

        r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i0);

     label2:
        if r2 == null goto label3;

        r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>(r1, i0, z0, r2);

     label3:
        if r2 == null goto label4;

        staticinvoke <android.support.v7.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>(r2);

     label4:
        return r2;
    }

    public synchronized void onConfigurationChanged(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        android.support.v4.util.LongSparseArray r2;
        java.util.WeakHashMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.support.v4.util.LongSparseArray) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.support.v4.util.LongSparseArray: void clear()>();

     label1:
        return;
    }

    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0, $i2;
        long $l1, $l3, $l4, $l5;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int assetCookie>;

        $l1 = (long) $i0;

        $l4 = $l1 << 32;

        $i2 = r0.<android.util.TypedValue: int data>;

        $l3 = (long) $i2;

        $l5 = $l4 | $l3;

        return $l5;
    }

    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0, $i2, $i3, $i4, $i5;
        android.util.TypedValue r2, $r3, r11;
        long l1;
        android.content.res.Resources $r4;
        android.graphics.drawable.Drawable[] $r6;
        android.graphics.drawable.Drawable $r7, $r8, r13, r14, r15, r16;
        java.lang.Object r10;
        android.graphics.drawable.LayerDrawable r12;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if $r3 != null goto label1;

        r11 = new android.util.TypedValue;

        specialinvoke r11.<android.util.TypedValue: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = r11;

     label1:
        r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r2, 1);

        l1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>(r2);

        r10 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>(r1, l1);

        if r10 == null goto label2;

        r13 = (android.graphics.drawable.Drawable) r10;

        return r13;

     label2:
        $i2 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_material>;

        if i0 != $i2 goto label3;

        r12 = new android.graphics.drawable.LayerDrawable;

        $r6 = newarray (android.graphics.drawable.Drawable)[2];

        $i4 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r7 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, $i4);

        $r6[0] = $r7;

        $i5 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r8 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, $i5);

        $r6[1] = $r8;

        specialinvoke r12.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r6);

        r10 = r12;

     label3:
        if r10 == null goto label4;

        $i3 = r2.<android.util.TypedValue: int changingConfigurations>;

        r14 = (android.graphics.drawable.Drawable) r10;

        virtualinvoke r14.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i3);

        r15 = (android.graphics.drawable.Drawable) r10;

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>(r1, l1, r15);

     label4:
        r16 = (android.graphics.drawable.Drawable) r10;

        return r16;
    }

    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, $z1, z2;
        android.content.res.ColorStateList r2;
        android.graphics.drawable.Drawable $r3, $r5, $r7, r9, $r13, $r15, $r17;
        android.graphics.PorterDuff$Mode $r4, $r6, $r8, r10, $r14, $r16, $r18;
        android.graphics.drawable.LayerDrawable r11, r12;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r9 := @parameter3: android.graphics.drawable.Drawable;

        r2 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)>(r1, i0);

        if r2 == null goto label3;

        $z1 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r9);

        if $z1 == 0 goto label1;

        r9 = virtualinvoke r9.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        r9 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>(r9);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>(r9, r2);

        r10 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode getTintMode(int)>(i0);

        if r10 == null goto label2;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>(r9, r10);

     label2:
        goto label7;

     label3:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_track_material>;

        if i0 != $i1 goto label4;

        r11 = (android.graphics.drawable.LayerDrawable) r9;

        $r3 = virtualinvoke r11.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i5 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i6 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i5);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r3, $i6, $r4);

        $r5 = virtualinvoke r11.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i7 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i8 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i7);

        $r6 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r5, $i8, $r6);

        $r7 = virtualinvoke r11.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i9 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i10 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i9);

        $r8 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r7, $i10, $r8);

        goto label7;

     label4:
        $i2 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_material>;

        if i0 == $i2 goto label5;

        $i3 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_indicator_material>;

        if i0 == $i3 goto label5;

        $i4 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_small_material>;

        if i0 != $i4 goto label6;

     label5:
        r12 = (android.graphics.drawable.LayerDrawable) r9;

        $r13 = virtualinvoke r12.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i11 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i12 = staticinvoke <android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>(r1, $i11);

        $r14 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r13, $i12, $r14);

        $r15 = virtualinvoke r12.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i13 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i14 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i13);

        $r16 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r15, $i14, $r16);

        $r17 = virtualinvoke r12.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i15 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i16 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i15);

        $r18 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r17, $i16, $r18);

        goto label7;

     label6:
        z2 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>(r1, i0, r9);

        if z2 != 0 goto label7;

        if z0 == 0 goto label7;

        r9 = null;

     label7:
        return r9;
    }

    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0, i2, $i3, $i4;
        android.content.res.Resources r2;
        long l1;
        android.util.AttributeSet r3;
        java.lang.String r4, $r14, $r23, r27;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate r5;
        android.support.v4.util.ArrayMap $r6, $r7, $r16, $r24;
        boolean $z0, $z1, $z2, $z3;
        android.support.v4.util.SparseArrayCompat $r8, $r9, $r12, $r15, $r21;
        android.util.TypedValue $r10, $r20, r28;
        java.lang.CharSequence $r11, $r13;
        java.lang.Object $r17, $r22, $r25;
        android.content.res.Resources$Theme $r18;
        org.xmlpull.v1.XmlPullParserException $r19;
        java.lang.Throwable $r26, r31;
        android.graphics.drawable.Drawable r29;
        android.content.res.XmlResourceParser r30;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r6 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r6 == null goto label16;

        $r7 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $z0 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label16;

        $r8 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags>;

        if $r8 == null goto label03;

        $r21 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags>;

        $r22 = virtualinvoke $r21.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r27 = (java.lang.String) $r22;

        $r23 = "appcompat_skip_skip";

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r27);

        if $z3 != 0 goto label01;

        if r27 == null goto label02;

        $r24 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r25 = virtualinvoke $r24.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r27);

        if $r25 != null goto label02;

     label01:
        return null;

     label02:
        goto label04;

     label03:
        $r9 = new android.support.v4.util.SparseArrayCompat;

        specialinvoke $r9.<android.support.v4.util.SparseArrayCompat: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags> = $r9;

     label04:
        $r10 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if $r10 != null goto label05;

        $r20 = new android.util.TypedValue;

        specialinvoke $r20.<android.util.TypedValue: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = $r20;

     label05:
        r28 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke r2.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r28, 1);

        l1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>(r28);

        r29 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>(r1, l1);

        if r29 == null goto label06;

        return r29;

     label06:
        $r11 = r28.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r11 == null goto label14;

        $r13 = r28.<android.util.TypedValue: java.lang.CharSequence string>;

        $r14 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 == 0 goto label14;

     label07:
        r30 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r30);

     label08:
        $i3 = interfaceinvoke r30.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 2 goto label09;

        if i2 == 1 goto label09;

        goto label08;

     label09:
        if i2 == 2 goto label10;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r19;

     label10:
        r4 = interfaceinvoke r30.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r15 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r15.<android.support.v4.util.SparseArrayCompat: void append(int,java.lang.Object)>(i0, r4);

        $r16 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r17 = virtualinvoke $r16.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) $r17;

        if r5 == null goto label11;

        $r18 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r29 = interfaceinvoke r5.<android.support.v7.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r30, r3, $r18);

     label11:
        if r29 == null goto label12;

        $i4 = r28.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r29.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i4);

        $z2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>(r1, l1, r29);

        if $z2 == 0 goto label12;

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

        r31 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDrawableManag", "Exception while inflating drawable", r31);

     label14:
        if r29 != null goto label15;

        $r12 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r12.<android.support.v4.util.SparseArrayCompat: void append(int,java.lang.Object)>(i0, "appcompat_skip_skip");

     label15:
        return r29;

     label16:
        return null;

        catch java.lang.Exception from label07 to label12 with label13;
    }

    private synchronized android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        long l0;
        android.support.v4.util.LongSparseArray r2;
        java.lang.ref.WeakReference r3;
        android.graphics.drawable.Drawable$ConstantState r4;
        java.util.WeakHashMap $r5;
        java.lang.Object $r6, $r7, $r8;
        android.content.res.Resources $r9;
        android.graphics.drawable.Drawable $r10;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.support.v4.util.LongSparseArray) $r6;

        if r2 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r2.<android.support.v4.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r3 = (java.lang.ref.WeakReference) $r7;

        if r3 == null goto label3;

        $r8 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.graphics.drawable.Drawable$ConstantState) $r8;

        if r4 == null goto label2;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r9);

        return $r10;

     label2:
        virtualinvoke r2.<android.support.v4.util.LongSparseArray: void delete(long)>(l0);

     label3:
        return null;
    }

    private synchronized boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        long l0;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.Drawable$ConstantState r3;
        java.util.WeakHashMap $r4, $r8;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        android.support.v4.util.LongSparseArray $r7, r10;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r3 == null goto label2;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (android.support.v4.util.LongSparseArray) $r5;

        if r10 != null goto label1;

        $r7 = new android.support.v4.util.LongSparseArray;

        specialinvoke $r7.<android.support.v4.util.LongSparseArray: void <init>()>();

        r10 = $r7;

        $r8 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label1:
        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        virtualinvoke r10.<android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)>(l0, $r6);

        return 1;

     label2:
        return 0;
    }

    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, android.support.v7.widget.VectorEnabledTintResources, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        android.support.v7.widget.VectorEnabledTintResources r2;
        int i0;
        android.graphics.drawable.Drawable $r3, r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v7.widget.VectorEnabledTintResources;

        i0 := @parameter2: int;

        r4 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>(r1, i0);

        if r4 != null goto label1;

        r4 = virtualinvoke r2.<android.support.v7.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)>(i0);

     label1:
        if r4 == null goto label2;

        $r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>(r1, i0, 0, r4);

        return $r3;

     label2:
        return null;
    }

    static boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context r0;
        int i0, i1, $i2, $i3, i4, i5;
        int[] $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, z4;
        android.graphics.PorterDuffColorFilter $r4;
        android.graphics.drawable.Drawable r5;
        android.graphics.PorterDuff$Mode r6;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r5 := @parameter2: android.graphics.drawable.Drawable;

        r6 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        z4 = 0;

        i4 = 0;

        i5 = -1;

        $r1 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r1, i0);

        if $z0 == 0 goto label1;

        i4 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        z4 = 1;

        goto label5;

     label1:
        $r2 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r2, i0);

        if $z1 == 0 goto label2;

        i4 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        z4 = 1;

        goto label5;

     label2:
        $r3 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z2 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, i0);

        if $z2 == 0 goto label3;

        i4 = 16842801;

        z4 = 1;

        r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label5;

     label3:
        $i2 = <android.support.v7.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if i0 != $i2 goto label4;

        i4 = 16842800;

        z4 = 1;

        i5 = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label5;

     label4:
        $i3 = <android.support.v7.appcompat.R$drawable: int abc_dialog_material_background>;

        if i0 != $i3 goto label5;

        i4 = 16842801;

        z4 = 1;

     label5:
        if z4 == 0 goto label8;

        $z3 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r5);

        if $z3 == 0 goto label6;

        r5 = virtualinvoke r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label6:
        i1 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r0, i4);

        $r4 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>(i1, r6);

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r4);

        if i5 == -1 goto label7;

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setAlpha(int)>(i5);

     label7:
        return 1;

     label8:
        return 0;
    }

    private void addDelegate(java.lang.String, android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.lang.String r1;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate r2;
        android.support.v4.util.ArrayMap $r3, $r4, $r6;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.v7.widget.AppCompatDrawableManager$InflateDelegate;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r3 != null goto label1;

        $r6 = new android.support.v4.util.ArrayMap;

        specialinvoke $r6.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates> = $r6;

     label1:
        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private void removeDelegate(java.lang.String, android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.lang.String r1;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate r2;
        android.support.v4.util.ArrayMap $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.support.v7.widget.AppCompatDrawableManager$InflateDelegate;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r5 = virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r5 != r2 goto label1;

        $r6 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        virtualinvoke $r6.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    private static boolean arrayContains(int[], int)
    {
        int[] r0, r1;
        int i0, i1, i2, i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        r1 = r0;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        i2 = r1[i3];

        if i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    static android.graphics.PorterDuff$Mode getTintMode(int)
    {
        int i0, $i1;
        android.graphics.PorterDuff$Mode r0;

        i0 := @parameter0: int;

        r0 = null;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if i0 != $i1 goto label1;

        r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

     label1:
        return r0;
    }

    synchronized android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        int[] $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.content.res.ColorStateList r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r5 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>(r1, i0);

        if r5 != null goto label13;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_edit_text_material>;

        if i0 != $i1 goto label01;

        $i16 = <android.support.v7.appcompat.R$color: int abc_tint_edittext>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i16);

        goto label12;

     label01:
        $i2 = <android.support.v7.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if i0 != $i2 goto label02;

        $i15 = <android.support.v7.appcompat.R$color: int abc_tint_switch_track>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i15);

        goto label12;

     label02:
        $i3 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if i0 != $i3 goto label03;

        r5 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>(r1);

        goto label12;

     label03:
        $i4 = <android.support.v7.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if i0 != $i4 goto label04;

        r5 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>(r1);

        goto label12;

     label04:
        $i5 = <android.support.v7.appcompat.R$drawable: int abc_btn_borderless_material>;

        if i0 != $i5 goto label05;

        r5 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>(r1);

        goto label12;

     label05:
        $i6 = <android.support.v7.appcompat.R$drawable: int abc_btn_colored_material>;

        if i0 != $i6 goto label06;

        r5 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>(r1);

        goto label12;

     label06:
        $i7 = <android.support.v7.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if i0 == $i7 goto label07;

        $i9 = <android.support.v7.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if i0 != $i9 goto label08;

     label07:
        $i8 = <android.support.v7.appcompat.R$color: int abc_tint_spinner>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i8);

        goto label12;

     label08:
        $r2 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r2, i0);

        if $z0 == 0 goto label09;

        $i14 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        r5 = staticinvoke <android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>(r1, $i14);

        goto label12;

     label09:
        $r3 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, i0);

        if $z1 == 0 goto label10;

        $i13 = <android.support.v7.appcompat.R$color: int abc_tint_default>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i13);

        goto label12;

     label10:
        $r4 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z2 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, i0);

        if $z2 == 0 goto label11;

        $i12 = <android.support.v7.appcompat.R$color: int abc_tint_btn_checkable>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i12);

        goto label12;

     label11:
        $i10 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_thumb_material>;

        if i0 != $i10 goto label12;

        $i11 = <android.support.v7.appcompat.R$color: int abc_tint_seek_thumb>;

        r5 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>(r1, $i11);

     label12:
        if r5 == null goto label13;

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>(r1, i0, r5);

     label13:
        return r5;
    }

    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0;
        android.support.v4.util.SparseArrayCompat r2;
        java.util.WeakHashMap $r3, $r4;
        java.lang.Object $r5, $r6;
        android.content.res.ColorStateList $r7;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r3 == null goto label3;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.support.v4.util.SparseArrayCompat) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i0);

        $r7 = (android.content.res.ColorStateList) $r6;

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;

     label3:
        return null;
    }

    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0;
        android.content.res.ColorStateList r2;
        java.util.WeakHashMap $r3, $r4, $r7, $r9;
        java.lang.Object $r5;
        android.support.v4.util.SparseArrayCompat $r6, r10;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.ColorStateList;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r3 != null goto label1;

        $r9 = new java.util.WeakHashMap;

        specialinvoke $r9.<java.util.WeakHashMap: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists> = $r9;

     label1:
        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (android.support.v4.util.SparseArrayCompat) $r5;

        if r10 != null goto label2;

        $r6 = new android.support.v4.util.SparseArrayCompat;

        specialinvoke $r6.<android.support.v4.util.SparseArrayCompat: void <init>()>();

        r10 = $r6;

        $r7 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        virtualinvoke $r7.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label2:
        virtualinvoke r10.<android.support.v4.util.SparseArrayCompat: void append(int,java.lang.Object)>(i0, r2);

        return;
    }

    private android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int $i0, $i1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        $i1 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i0);

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>(r1, $i1);

        return $r2;
    }

    private android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>(r1, 0);

        return $r2;
    }

    private android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int $i0, $i1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.support.v7.appcompat.R$attr: int colorAccent>;

        $i1 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i0);

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>(r1, $i1);

        return $r2;
    }

    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i8, i9, i10, i11;
        int[][] r2;
        int[] r3, $r4, $r5, $r6, $r7;
        android.content.res.ColorStateList $r8;
        byte b7;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 = newarray (int[])[4];

        r3 = newarray (int)[4];

        b7 = 0;

        $i3 = <android.support.v7.appcompat.R$attr: int colorControlHighlight>;

        i1 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i3);

        $i4 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        i2 = staticinvoke <android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>(r1, $i4);

        $r4 = <android.support.v7.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[b7] = $r4;

        r3[b7] = i2;

        i8 = b7 + 1;

        $r5 = <android.support.v7.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        r2[i8] = $r5;

        $i5 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>(i1, i0);

        r3[i8] = $i5;

        i9 = i8 + 1;

        $r6 = <android.support.v7.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        r2[i9] = $r6;

        $i6 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>(i1, i0);

        r3[i9] = $i6;

        i10 = i9 + 1;

        $r7 = <android.support.v7.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i10] = $r7;

        r3[i10] = i0;

        i11 = i10 + 1;

        $r8 = new android.content.res.ColorStateList;

        specialinvoke $r8.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r2, r3);

        return $r8;
    }

    private android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        int[][] r2;
        int[] r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.content.res.ColorStateList r4, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i13, i14, i15, i16, i17;
        boolean $z0;
        byte b11;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        r2 = newarray (int[])[3];

        r3 = newarray (int)[3];

        b11 = 0;

        $i0 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        r4 = staticinvoke <android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>(r1, $i0);

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r8 = <android.support.v7.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[b11] = $r8;

        $r9 = r2[b11];

        $i7 = virtualinvoke r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r9, 0);

        r3[b11] = $i7;

        i12 = b11 + 1;

        $r10 = <android.support.v7.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r2[i12] = $r10;

        $i8 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i9 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i8);

        r3[i12] = $i9;

        i13 = i12 + 1;

        $r11 = <android.support.v7.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i13] = $r11;

        $i10 = virtualinvoke r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        r3[i13] = $i10;

        i14 = i13 + 1;

        goto label2;

     label1:
        $r5 = <android.support.v7.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[b11] = $r5;

        $i1 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i2 = staticinvoke <android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>(r1, $i1);

        r3[b11] = $i2;

        i15 = b11 + 1;

        $r6 = <android.support.v7.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r2[i15] = $r6;

        $i3 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i4 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i3);

        r3[i15] = $i4;

        i16 = i15 + 1;

        $r7 = <android.support.v7.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i16] = $r7;

        $i5 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i6 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r1, $i5);

        r3[i16] = $i6;

        i17 = i16 + 1;

     label2:
        $r12 = new android.content.res.ColorStateList;

        specialinvoke $r12.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r2, r3);

        return $r12;
    }

    static void tintDrawable(android.graphics.drawable.Drawable, android.support.v7.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable r0, $r3;
        android.support.v7.widget.TintInfo r1;
        int[] r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        android.content.res.ColorStateList $r5;
        android.graphics.PorterDuff$Mode $r6;
        android.graphics.PorterDuffColorFilter $r7;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.support.v7.widget.TintInfo;

        r2 := @parameter2: int[];

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r3 == r0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppCompatDrawableManag", "Mutated drawable is not the same instance as the input.");

        return;

     label1:
        $z1 = r1.<android.support.v7.widget.TintInfo: boolean mHasTintList>;

        if $z1 != 0 goto label2;

        $z4 = r1.<android.support.v7.widget.TintInfo: boolean mHasTintMode>;

        if $z4 == 0 goto label7;

     label2:
        $z2 = r1.<android.support.v7.widget.TintInfo: boolean mHasTintList>;

        if $z2 == 0 goto label3;

        $r5 = r1.<android.support.v7.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        goto label4;

     label3:
        $r5 = null;

     label4:
        $z3 = r1.<android.support.v7.widget.TintInfo: boolean mHasTintMode>;

        if $z3 == 0 goto label5;

        $r6 = r1.<android.support.v7.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

        goto label6;

     label5:
        $r6 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label6:
        $r7 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])>($r5, $r6, r2);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r7);

        goto label8;

     label7:
        virtualinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label8:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 23 goto label9;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label9:
        return;
    }

    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList r0;
        android.graphics.PorterDuff$Mode r1;
        int[] r2;
        int i0;
        android.graphics.PorterDuffColorFilter $r3;

        r0 := @parameter0: android.content.res.ColorStateList;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        r2 := @parameter2: int[];

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        i0 = virtualinvoke r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r2, 0);

        $r3 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        return $r3;
    }

    public static synchronized android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        int i0;
        android.graphics.PorterDuff$Mode r0;
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache $r1, $r3;
        android.graphics.PorterDuffColorFilter $r2, r5;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.PorterDuff$Mode;

        $r1 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        r5 = virtualinvoke $r1.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>(i0, r0);

        if r5 != null goto label1;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i0, r0);

        r5 = $r2;

        $r3 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke $r3.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>(i0, r0, r5);

     label1:
        return r5;
    }

    private static void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        int i0;
        android.graphics.PorterDuff$Mode r0, $r4;
        boolean $z0;
        android.graphics.PorterDuffColorFilter $r1;
        android.graphics.drawable.Drawable $r2, r3;

        r3 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        r0 := @parameter2: android.graphics.PorterDuff$Mode;

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r3);

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        $r2 = r3;

        if r0 != null goto label2;

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        goto label3;

     label2:
        $r4 = r0;

     label3:
        $r1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, $r4);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    private void checkVectorDrawableSetup(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context r1;
        android.graphics.drawable.Drawable r2;
        boolean $z0, $z1;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        r1 := @parameter0: android.content.Context;

        $z0 = r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 1;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_vector_test>;

        r2 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, $i0);

        if r2 == null goto label2;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean isVectorDrawable(android.graphics.drawable.Drawable)>(r2);

        if $z1 != 0 goto label3;

     label2:
        r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 0;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $r3;

     label3:
        return;
    }

    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0 instanceof android.support.graphics.drawable.VectorDrawableCompat;

        if $z0 != 0 goto label1;

        $r1 = "android.graphics.drawable.VectorDrawable";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        $r1 = new android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache;

        specialinvoke $r1.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: void <init>(int)>(6);

        <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE> = $r1;

        $r2 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $r2[0] = $i0;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $r2[1] = $i1;

        $i2 = <android.support.v7.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $r2[2] = $i2;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $r2;

        $r3 = newarray (int)[7];

        $i3 = <android.support.v7.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $r3[0] = $i3;

        $i4 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_tick_mark_material>;

        $r3[1] = $i4;

        $i5 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $r3[2] = $i5;

        $i6 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $r3[3] = $i6;

        $i7 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $r3[4] = $i7;

        $i8 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $r3[5] = $i8;

        $i9 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $r3[6] = $i9;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL> = $r3;

        $r4 = newarray (int)[10];

        $i10 = <android.support.v7.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $r4[0] = $i10;

        $i11 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $r4[1] = $i11;

        $i12 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r4[2] = $i12;

        $i13 = <android.support.v7.appcompat.R$drawable: int abc_text_cursor_material>;

        $r4[3] = $i13;

        $i14 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark>;

        $r4[4] = $i14;

        $i15 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark>;

        $r4[5] = $i15;

        $i16 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark>;

        $r4[6] = $i16;

        $i17 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light>;

        $r4[7] = $i17;

        $i18 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light>;

        $r4[8] = $i18;

        $i19 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light>;

        $r4[9] = $i19;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $r4;

        $r5 = newarray (int)[3];

        $i20 = <android.support.v7.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $r5[0] = $i20;

        $i21 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r5[1] = $i21;

        $i22 = <android.support.v7.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $r5[2] = $i22;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $r5;

        $r6 = newarray (int)[2];

        $i23 = <android.support.v7.appcompat.R$drawable: int abc_tab_indicator_material>;

        $r6[0] = $i23;

        $i24 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_material>;

        $r6[1] = $i24;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST> = $r6;

        $r7 = newarray (int)[2];

        $i25 = <android.support.v7.appcompat.R$drawable: int abc_btn_check_material>;

        $r7[0] = $i25;

        $i26 = <android.support.v7.appcompat.R$drawable: int abc_btn_radio_material>;

        $r7[1] = $i26;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST> = $r7;

        return;
    }

android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate
    void <init>()
    {
        android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate r0;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat $r7;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat: android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, $r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AsldcInflateDelegate", "Exception while inflating <animated-selector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate
    void <init>()
    {
        android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate r0;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        android.support.graphics.drawable.AnimatedVectorDrawableCompat $r7;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <android.support.graphics.drawable.AnimatedVectorDrawableCompat: android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, $r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AvdcInflateDelegate", "Exception while inflating <animated-vector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache
    public void <init>(int)
    {
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache r0;
        int i0;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<android.support.v4.util.LruCache: void <init>(int)>(i0);

        return;
    }

    android.graphics.PorterDuffColorFilter get(int, android.graphics.PorterDuff$Mode)
    {
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache r0;
        int i0, $i1;
        android.graphics.PorterDuff$Mode r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        android.graphics.PorterDuffColorFilter $r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.graphics.PorterDuffColorFilter) $r3;

        return $r4;
    }

    android.graphics.PorterDuffColorFilter put(int, android.graphics.PorterDuff$Mode, android.graphics.PorterDuffColorFilter)
    {
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache r0;
        int i0, $i1;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.PorterDuffColorFilter r2, $r5;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        r2 := @parameter2: android.graphics.PorterDuffColorFilter;

        $i1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        $r5 = (android.graphics.PorterDuffColorFilter) $r4;

        return $r5;
    }

    private static int generateCacheKey(int, android.graphics.PorterDuff$Mode)
    {
        int i0, $i1, $i2, $i3, i5, i6;
        android.graphics.PorterDuff$Mode r0;
        byte b4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.PorterDuff$Mode;

        b4 = 1;

        $i1 = 31 * b4;

        i5 = $i1 + i0;

        $i2 = 31 * i5;

        $i3 = virtualinvoke r0.<android.graphics.PorterDuff$Mode: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

android.support.v7.widget.AppCompatDrawableManager$InflateDelegate
<android.support.v7.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate
    void <init>()
    {
        android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate r0;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        android.support.graphics.drawable.VectorDrawableCompat $r7;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat: android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VdcInflateDelegate", "Exception while inflating <vector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

