android.support.v4.hardware.fingerprint.FingerprintManagerCompat
<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>
    public static android.support.v4.hardware.fingerprint.FingerprintManagerCompat 'from'(android.content.Context)
    {
        android.content.Context r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.support.v4.hardware.fingerprint.FingerprintManagerCompat;

        specialinvoke $r1.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    private void <init>(android.content.Context)
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.hardware.fingerprint.FingerprintManagerCompat;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext> = r1;

        return;
    }

    public boolean hasEnrolledFingerprints()
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat r0;
        android.hardware.fingerprint.FingerprintManager r1;
        int $i0;
        android.content.Context $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.hardware.fingerprint.FingerprintManagerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label3;

        $r2 = r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        r1 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r2);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public boolean isHardwareDetected()
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat r0;
        android.hardware.fingerprint.FingerprintManager r1;
        int $i0;
        android.content.Context $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.hardware.fingerprint.FingerprintManagerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label3;

        $r2 = r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        r1 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r2);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public void authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject, int, android.support.v4.os.CancellationSignal, android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback, android.os.Handler)
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject r1;
        int i0, $i1;
        android.support.v4.os.CancellationSignal r2;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback r3;
        android.os.Handler r4;
        android.hardware.fingerprint.FingerprintManager r5;
        android.os.CancellationSignal r6, $r11;
        android.content.Context $r7;
        android.hardware.fingerprint.FingerprintManager$CryptoObject $r8;
        android.hardware.fingerprint.FingerprintManager$AuthenticationCallback $r9;
        java.lang.Object $r10;

        r0 := @this: android.support.v4.hardware.fingerprint.FingerprintManagerCompat;

        r1 := @parameter0: android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.v4.os.CancellationSignal;

        r3 := @parameter3: android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback;

        r4 := @parameter4: android.os.Handler;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label3;

        $r7 = r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        r5 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r7);

        if r5 == null goto label3;

        if r2 == null goto label1;

        $r10 = virtualinvoke r2.<android.support.v4.os.CancellationSignal: java.lang.Object getCancellationSignalObject()>();

        $r11 = (android.os.CancellationSignal) $r10;

        goto label2;

     label1:
        $r11 = null;

     label2:
        r6 = $r11;

        $r8 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>(r1);

        $r9 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>(r3);

        virtualinvoke r5.<android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager$CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager$AuthenticationCallback,android.os.Handler)>($r8, r6, i0, $r9, r4);

     label3:
        return;
    }

    private static android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
    {
        android.content.Context r0;
        android.content.pm.PackageManager $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.hardware.fingerprint.FingerprintManager $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.fingerprint");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/fingerprint/FingerprintManager;");

        $r3 = (android.hardware.fingerprint.FingerprintManager) $r2;

        return $r3;

     label1:
        return null;
    }

    private static android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject r0;
        javax.crypto.Cipher $r1, $r9;
        java.security.Signature $r2, $r7;
        javax.crypto.Mac $r3, $r5;
        android.hardware.fingerprint.FingerprintManager$CryptoObject $r4, $r6, $r8;

        r0 := @parameter0: android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()>();

        if $r1 == null goto label2;

        $r8 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r9 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()>();

        specialinvoke $r8.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(javax.crypto.Cipher)>($r9);

        return $r8;

     label2:
        $r2 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()>();

        if $r2 == null goto label3;

        $r6 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r7 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()>();

        specialinvoke $r6.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(java.security.Signature)>($r7);

        return $r6;

     label3:
        $r3 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()>();

        if $r3 == null goto label4;

        $r4 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r5 = virtualinvoke r0.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()>();

        specialinvoke $r4.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(javax.crypto.Mac)>($r5);

        return $r4;

     label4:
        return null;
    }

    static android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)
    {
        android.hardware.fingerprint.FingerprintManager$CryptoObject r0;
        javax.crypto.Cipher $r1, $r9;
        java.security.Signature $r2, $r7;
        javax.crypto.Mac $r3, $r5;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject $r4, $r6, $r8;

        r0 := @parameter0: android.hardware.fingerprint.FingerprintManager$CryptoObject;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()>();

        if $r1 == null goto label2;

        $r8 = new android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r9 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()>();

        specialinvoke $r8.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Cipher)>($r9);

        return $r8;

     label2:
        $r2 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()>();

        if $r2 == null goto label3;

        $r6 = new android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r7 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()>();

        specialinvoke $r6.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(java.security.Signature)>($r7);

        return $r6;

     label3:
        $r3 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()>();

        if $r3 == null goto label4;

        $r4 = new android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r5 = virtualinvoke r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()>();

        specialinvoke $r4.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Mac)>($r5);

        return $r4;

     label4:
        return null;
    }

    private static android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
    {
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat$1 $r1;

        r0 := @parameter0: android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback;

        $r1 = new android.support.v4.hardware.fingerprint.FingerprintManagerCompat$1;

        specialinvoke $r1.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat$1: void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>(r0);

        return $r1;
    }

