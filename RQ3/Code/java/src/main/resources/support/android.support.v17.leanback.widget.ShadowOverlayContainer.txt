android.support.v17.leanback.widget.ShadowOverlayContainer
<android.support.v17.leanback.widget.ShadowOverlayContainer: int SHADOW_NONE>
<android.support.v17.leanback.widget.ShadowOverlayContainer: int SHADOW_STATIC>
<android.support.v17.leanback.widget.ShadowOverlayContainer: int SHADOW_DYNAMIC>
<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized>
<android.support.v17.leanback.widget.ShadowOverlayContainer: java.lang.Object mShadowImpl>
<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>
<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mRoundedCorners>
<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>
<android.support.v17.leanback.widget.ShadowOverlayContainer: float mUnfocusedZ>
<android.support.v17.leanback.widget.ShadowOverlayContainer: float mFocusedZ>
<android.support.v17.leanback.widget.ShadowOverlayContainer: int mRoundedCornerRadius>
<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>
<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>
<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor>
    public void <init>(android.content.Context)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.content.Context r1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType> = 1;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void useStaticShadow()>();

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void useDynamicShadow()>();

        return;
    }

    void <init>(android.content.Context, int, boolean, float, float, int)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.content.Context r1;
        int i0, i1;
        boolean z0;
        float f0, f1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i1 := @parameter5: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType> = 1;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mUnfocusedZ> = f0;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mFocusedZ> = f1;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void initialize(int,boolean,int)>(i0, z0, i1);

        return;
    }

    public static boolean supportsShadow()
    {
        boolean $z0;

        $z0 = staticinvoke <android.support.v17.leanback.widget.StaticShadowHelper: boolean supportsShadow()>();

        return $z0;
    }

    public static boolean supportsDynamicShadow()
    {
        boolean $z0;

        $z0 = staticinvoke <android.support.v17.leanback.widget.ShadowHelper: boolean supportsDynamicShadow()>();

        return $z0;
    }

    public static void prepareParentForShadow(android.view.ViewGroup)
    {
        android.view.ViewGroup r0;

        r0 := @parameter0: android.view.ViewGroup;

        staticinvoke <android.support.v17.leanback.widget.StaticShadowHelper: void prepareParent(android.view.ViewGroup)>(r0);

        return;
    }

    public void useDynamicShadow()
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.content.res.Resources $r1, $r2;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        $r1 = virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.content.res.Resources getResources()>();

        $i0 = <android.support.v17.leanback.R$dimen: int lb_material_shadow_normal_z>;

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        $r2 = virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.content.res.Resources getResources()>();

        $i1 = <android.support.v17.leanback.R$dimen: int lb_material_shadow_focused_z>;

        $f1 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i1);

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void useDynamicShadow(float,float)>($f0, $f1);

        return;
    }

    public void useDynamicShadow(float, float)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        float f0, f1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already initialized");

        throw $r1;

     label1:
        $z1 = staticinvoke <android.support.v17.leanback.widget.ShadowOverlayContainer: boolean supportsDynamicShadow()>();

        if $z1 == 0 goto label2;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType> = 3;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mUnfocusedZ> = f0;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mFocusedZ> = f1;

     label2:
        return;
    }

    public void useStaticShadow()
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        $z0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already initialized");

        throw $r1;

     label1:
        $z1 = staticinvoke <android.support.v17.leanback.widget.ShadowOverlayContainer: boolean supportsShadow()>();

        if $z1 == 0 goto label2;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType> = 2;

     label2:
        return;
    }

    public int getShadowType()
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        $i0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>;

        return $i0;
    }

    public void initialize(boolean, boolean)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        boolean z0, z1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void initialize(boolean,boolean,boolean)>(z0, z1, 1);

        return;
    }

    public void initialize(boolean, boolean, boolean)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        boolean z0, z1, z2;
        int i0, $i1, i2, $i3;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z0 != 0 goto label1;

        i2 = 1;

        goto label2;

     label1:
        i2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>;

     label2:
        if z2 == 0 goto label3;

        $r1 = virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <android.support.v17.leanback.R$dimen: int lb_rounded_rect_corner_radius>;

        $i3 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        goto label4;

     label3:
        $i3 = 0;

     label4:
        i0 = $i3;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void initialize(int,boolean,int)>(i2, z1, i0);

        return;
    }

    void initialize(int, boolean, int)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2;
        float $f0, $f1;
        java.lang.Object $r1, $r6;
        android.graphics.Paint $r3, $r5, r10;
        android.graphics.Paint$Style $r4;
        java.lang.IllegalStateException r9;
        android.view.View r11;
        android.view.ViewGroup r12;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        $z1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized>;

        if $z1 == 0 goto label1;

        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>()>();

        throw r9;

     label1:
        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized> = 1;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mRoundedCornerRadius> = i1;

        if i1 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mRoundedCorners> = $z2;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType> = i0;

        $i2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>;

        lookupswitch($i2)
        {
            case 2: goto label5;
            case 3: goto label4;
            default: goto label6;
        };

     label4:
        $f1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mUnfocusedZ>;

        $f0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: float mFocusedZ>;

        $i3 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mRoundedCornerRadius>;

        r11 = (android.view.View) r0;

        $r1 = staticinvoke <android.support.v17.leanback.widget.ShadowHelper: java.lang.Object addDynamicShadow(android.view.View,float,float,int)>(r11, $f1, $f0, $i3);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: java.lang.Object mShadowImpl> = $r1;

        goto label6;

     label5:
        r12 = (android.view.ViewGroup) r0;

        $r6 = staticinvoke <android.support.v17.leanback.widget.StaticShadowHelper: java.lang.Object addStaticShadow(android.view.ViewGroup)>(r12);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: java.lang.Object mShadowImpl> = $r6;

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void setWillNotDraw(boolean)>(0);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor> = 0;

        r10 = new android.graphics.Paint;

        specialinvoke r10.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint> = r10;

        $r3 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        $i4 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i4);

        $r5 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        goto label8;

     label7:
        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void setWillNotDraw(boolean)>(1);

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint> = null;

     label8:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.graphics.Canvas r1;
        android.graphics.Paint $r2, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r3, $r4, $r5, $r6;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        if $r2 == null goto label1;

        $i0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor>;

        if $i0 == 0 goto label1;

        $r3 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $i1 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $f0 = (float) $i1;

        $r4 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $i2 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $f1 = (float) $i2;

        $r5 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $i3 = virtualinvoke $r5.<android.view.View: int getRight()>();

        $f2 = (float) $i3;

        $r6 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $i4 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        $f3 = (float) $i4;

        $r7 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r7);

     label1:
        return;
    }

    public void setShadowFocusLevel(float)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        float f0;
        java.lang.Object $r1, $r2;
        int $i0;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        f0 := @parameter0: float;

        $r1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: java.lang.Object mShadowImpl>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: java.lang.Object mShadowImpl>;

        $i0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>;

        staticinvoke <android.support.v17.leanback.widget.ShadowOverlayHelper: void setShadowFocusLevel(java.lang.Object,int,float)>($r2, $i0, f0);

     label1:
        return;
    }

    public void setOverlayColor(int)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        int i0, $i1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        if $r1 == null goto label1;

        $i1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor>;

        if i0 == $i1 goto label1;

        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mOverlayColor> = i0;

        $r2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Paint mOverlayPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void invalidate()>();

     label1:
        return;
    }

    public void wrap(android.view.View)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.view.View r1, $r5, r12;
        android.view.ViewGroup$LayoutParams r2, r11;
        android.widget.FrameLayout$LayoutParams r3, r10;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        byte $b5, $b6;
        java.lang.IllegalStateException r9;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mInitialized>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        if $r5 == null goto label2;

     label1:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>()>();

        throw r9;

     label2:
        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 == null goto label7;

        r10 = new android.widget.FrameLayout$LayoutParams;

        $i2 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        specialinvoke r10.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i2, $i1);

        r3 = r10;

        $i3 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i3 != -1 goto label3;

        $b5 = -1;

        goto label4;

     label3:
        $b5 = -2;

     label4:
        r2.<android.view.ViewGroup$LayoutParams: int width> = $b5;

        $i4 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i4 != -1 goto label5;

        $b6 = -1;

        goto label6;

     label5:
        $b6 = -2;

     label6:
        r2.<android.view.ViewGroup$LayoutParams: int height> = $b6;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        r11 = (android.view.ViewGroup$LayoutParams) r3;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r11);

        goto label8;

     label7:
        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void addView(android.view.View)>(r1);

     label8:
        $z1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: boolean mRoundedCorners>;

        if $z1 == 0 goto label9;

        $i0 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: int mShadowType>;

        if $i0 == 3 goto label9;

        r12 = (android.view.View) r0;

        staticinvoke <android.support.v17.leanback.widget.RoundedRectHelper: void setClipToRoundedOutline(android.view.View,boolean)>(r12, 1);

     label9:
        r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView> = r1;

        return;
    }

    public android.view.View getWrappedView()
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        android.view.View $r1;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        $r1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        return $r1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.view.View $r1, $r2, $r4, $r7;
        android.graphics.Rect $r3, $r5, $r6, $r8, $r9;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        if z0 == 0 goto label1;

        $r1 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        if $r1 == null goto label1;

        $r3 = <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>;

        $r2 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $f0 = virtualinvoke $r2.<android.view.View: float getPivotX()>();

        $i4 = (int) $f0;

        $r3.<android.graphics.Rect: int left> = $i4;

        $r5 = <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>;

        $r4 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $f1 = virtualinvoke $r4.<android.view.View: float getPivotY()>();

        $i5 = (int) $f1;

        $r5.<android.graphics.Rect: int top> = $i5;

        $r7 = r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: android.view.View mWrappedView>;

        $r6 = <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r7, $r6);

        $r8 = <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>;

        $i6 = $r8.<android.graphics.Rect: int left>;

        $f2 = (float) $i6;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void setPivotX(float)>($f2);

        $r9 = <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect>;

        $i7 = $r9.<android.graphics.Rect: int top>;

        $f3 = (float) $i7;

        virtualinvoke r0.<android.support.v17.leanback.widget.ShadowOverlayContainer: void setPivotY(float)>($f3);

     label1:
        return;
    }

    public boolean hasOverlappingRendering()
    {
        android.support.v17.leanback.widget.ShadowOverlayContainer r0;

        r0 := @this: android.support.v17.leanback.widget.ShadowOverlayContainer;

        return 0;
    }

    static void <clinit>()
    {
        android.graphics.Rect $r0;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

        <android.support.v17.leanback.widget.ShadowOverlayContainer: android.graphics.Rect sTempRect> = $r0;

        return;
    }

