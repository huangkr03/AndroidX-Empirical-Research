android.support.multidex.ZipUtil
    static long computeCrcOfCentralDir(java.io.RandomAccessFile, android.support.multidex.ZipUtil$CentralDirectory) throws java.io.IOException
    {
        java.util.zip.CRC32 $r0;
        byte $b0;
        java.io.RandomAccessFile $r1;
        android.support.multidex.ZipUtil$CentralDirectory $r2;
        long $l1, $l2;
        byte[] $r3;
        int $i3;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r2 := @parameter1: android.support.multidex.ZipUtil$CentralDirectory;

        $r0 = new java.util.zip.CRC32;

        specialinvoke $r0.<java.util.zip.CRC32: void <init>()>();

        $l1 = $r2.<android.support.multidex.ZipUtil$CentralDirectory: long size>;

        $l2 = $r2.<android.support.multidex.ZipUtil$CentralDirectory: long offset>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l2);

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(16384L, $l1);

        $r3 = newarray (byte)[16384];

        $i3 = (int) $l2;

        $i3 = virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[],int,int)>($r3, 0, $i3);

     label1:
        if $i3 == -1 goto label3;

        virtualinvoke $r0.<java.util.zip.CRC32: void update(byte[],int,int)>($r3, 0, $i3);

        $l2 = (long) $i3;

        $l1 = $l1 - $l2;

        $b0 = $l1 cmp 0L;

        if $b0 != 0 goto label2;

        goto label3;

     label2:
        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(16384L, $l1);

        $i3 = (int) $l2;

        $i3 = virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[],int,int)>($r3, 0, $i3);

        goto label1;

     label3:
        $l1 = virtualinvoke $r0.<java.util.zip.CRC32: long getValue()>();

        return $l1;
    }

    static android.support.multidex.ZipUtil$CentralDirectory findCentralDirectory(java.io.RandomAccessFile) throws java.io.IOException, java.util.zip.ZipException
    {
        byte $b0;
        java.io.RandomAccessFile $r0;
        long $l1, $l2, $l3;
        int $i4, $i5;
        android.support.multidex.ZipUtil$CentralDirectory $r1;
        java.util.zip.ZipException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.io.RandomAccessFile;

        $l1 = virtualinvoke $r0.<java.io.RandomAccessFile: long length()>();

        $l1 = $l1 + -22L;

        $l2 = 0L;

        $b0 = $l1 cmp 0L;

        if $b0 < 0 goto label6;

        $l3 = -65536L + $l1;

        $b0 = $l3 cmp 0L;

        if $b0 >= 0 goto label1;

        goto label2;

     label1:
        $l2 = $l3;

     label2:
        $i4 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(101010256);

     label3:
        virtualinvoke $r0.<java.io.RandomAccessFile: void seek(long)>($l1);

        $i5 = virtualinvoke $r0.<java.io.RandomAccessFile: int readInt()>();

        if $i5 != $i4 goto label4;

        virtualinvoke $r0.<java.io.RandomAccessFile: int skipBytes(int)>(2);

        virtualinvoke $r0.<java.io.RandomAccessFile: int skipBytes(int)>(2);

        virtualinvoke $r0.<java.io.RandomAccessFile: int skipBytes(int)>(2);

        virtualinvoke $r0.<java.io.RandomAccessFile: int skipBytes(int)>(2);

        $r1 = new android.support.multidex.ZipUtil$CentralDirectory;

        specialinvoke $r1.<android.support.multidex.ZipUtil$CentralDirectory: void <init>()>();

        $i4 = virtualinvoke $r0.<java.io.RandomAccessFile: int readInt()>();

        $i4 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i4);

        $l1 = (long) $i4;

        $l1 = $l1 & 4294967295L;

        $r1.<android.support.multidex.ZipUtil$CentralDirectory: long size> = $l1;

        $i4 = virtualinvoke $r0.<java.io.RandomAccessFile: int readInt()>();

        $i4 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i4);

        $l1 = (long) $i4;

        $l1 = $l1 & 4294967295L;

        $r1.<android.support.multidex.ZipUtil$CentralDirectory: long offset> = $l1;

        return $r1;

     label4:
        $l1 = $l1 + -1L;

        $b0 = $l1 cmp $l2;

        if $b0 < 0 goto label5;

        goto label3;

     label5:
        $r2 = new java.util.zip.ZipException;

        specialinvoke $r2.<java.util.zip.ZipException: void <init>(java.lang.String)>("End Of Central Directory signature not found");

        throw $r2;

     label6:
        $r2 = new java.util.zip.ZipException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File too short to be a zip file: ");

        $l1 = virtualinvoke $r0.<java.io.RandomAccessFile: long length()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.util.zip.ZipException: void <init>(java.lang.String)>($r4);

        goto label7;

     label7:
        throw $r2;
    }

    static long getZipCrc(java.io.File) throws java.io.IOException
    {
        java.io.RandomAccessFile $r0;
        java.io.File $r1;
        android.support.multidex.ZipUtil$CentralDirectory $r2;
        long $l0;

        $r1 := @parameter0: java.io.File;

        $r0 = new java.io.RandomAccessFile;

        specialinvoke $r0.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r1, "r");

        $r2 = staticinvoke <android.support.multidex.ZipUtil: android.support.multidex.ZipUtil$CentralDirectory findCentralDirectory(java.io.RandomAccessFile)>($r0);

        $l0 = staticinvoke <android.support.multidex.ZipUtil: long computeCrcOfCentralDir(java.io.RandomAccessFile,android.support.multidex.ZipUtil$CentralDirectory)>($r0, $r2);

        virtualinvoke $r0.<java.io.RandomAccessFile: void close()>();

        return $l0;
    }

android.support.multidex.ZipUtil$CentralDirectory
<android.support.multidex.ZipUtil$CentralDirectory: long offset>
<android.support.multidex.ZipUtil$CentralDirectory: long size>
    void <init>()
    {
        android.support.multidex.ZipUtil$CentralDirectory $r0;

        $r0 := @this: android.support.multidex.ZipUtil$CentralDirectory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

