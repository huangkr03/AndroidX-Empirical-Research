android.support.wearable.view.drawer.WearableDrawerView
<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>
<android.support.wearable.view.drawer.WearableDrawerView: android.widget.ImageView mPeekIcon>
<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>
<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout mParent>
<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mCanAutoPeek>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldLockWhenNotOpenOrPeeking>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mOnlyOpenWhenAtTop>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldPeekOnScrollDown>
<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsPeeking>
<android.support.wearable.view.drawer.WearableDrawerView: int mDrawerState>
<android.support.wearable.view.drawer.WearableDrawerView: int mPeekResId>
<android.support.wearable.view.drawer.WearableDrawerView: int mContentResId>
<android.support.wearable.view.drawer.WearableDrawerView: int[] COLOR_ATTRS>
<android.support.wearable.view.drawer.WearableDrawerView: int BACKGROUND_COLOR_INDEX>
    public void <init>(android.content.Context)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.view.LayoutInflater $r3;
        android.content.res.Resources $r5;
        float $f0;
        android.view.View $r6, $r8;
        android.view.ViewGroup $r7, $r11, r13;
        android.widget.ImageView $r9;
        android.support.wearable.view.drawer.WearableDrawerView$1 r12;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked> = 0;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mCanAutoPeek> = 1;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldLockWhenNotOpenOrPeeking> = 0;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mOnlyOpenWhenAtTop> = 0;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldPeekOnScrollDown> = 0;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: int mPeekResId> = 0;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: int mContentResId> = 0;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        $i2 = <android.support.wearable.R$layout: int wearable_drawer_view>;

        r13 = (android.view.ViewGroup) r0;

        virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i2, r13, 1);

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setClickable(boolean)>(1);

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = <android.support.wearable.R$dimen: int wearable_drawer_view_elevation>;

        $f0 = virtualinvoke $r5.<android.content.res.Resources: float getDimension(int)>($i3);

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setElevation(float)>($f0);

        $i4 = <android.support.wearable.R$id: int wearable_support_drawer_view_peek_container>;

        $r6 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View findViewById(int)>($i4);

        $r7 = (android.view.ViewGroup) $r6;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer> = $r7;

        $i5 = <android.support.wearable.R$id: int wearable_support_drawer_view_peek_icon>;

        $r8 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View findViewById(int)>($i5);

        $r9 = (android.widget.ImageView) $r8;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: android.widget.ImageView mPeekIcon> = $r9;

        $r11 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        r12 = new android.support.wearable.view.drawer.WearableDrawerView$1;

        specialinvoke r12.<android.support.wearable.view.drawer.WearableDrawerView$1: void <init>(android.support.wearable.view.drawer.WearableDrawerView)>(r0);

        virtualinvoke $r11.<android.view.ViewGroup: void setOnClickListener(android.view.View$OnClickListener)>(r12);

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void parseAttributes(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        return;
    }

    protected void onFinishInflate()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.ViewGroup $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        specialinvoke r0.<android.widget.FrameLayout: void onFinishInflate()>();

        $r1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void bringToFront()>();

        return;
    }

    public void onPeekContainerClicked(android.view.View)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void openDrawer()>();

        return;
    }

    protected void onAttachedToWindow()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.widget.FrameLayout$LayoutParams r1, $r5;
        boolean z0, $z1, $z2;
        android.view.ViewGroup $r2, $r7;
        android.view.ViewGroup$LayoutParams $r3, $r4, r9;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.ImageView $r6, $r8;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        $r2 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i0 = r1.<android.widget.FrameLayout$LayoutParams: int gravity>;

        $z1 = staticinvoke <android.view.Gravity: boolean isVertical(int)>($i0);

        if $z1 != 0 goto label5;

        $r4 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.FrameLayout$LayoutParams) $r4;

        $i1 = $r5.<android.widget.FrameLayout$LayoutParams: int gravity>;

        $i2 = $i1 & 112;

        if $i2 != 48 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        r1.<android.widget.FrameLayout$LayoutParams: int gravity> = 80;

        $r8 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.widget.ImageView mPeekIcon>;

        $i4 = <android.support.wearable.R$drawable: int ic_more_horiz_24dp_wht>;

        virtualinvoke $r8.<android.widget.ImageView: void setImageResource(int)>($i4);

        goto label4;

     label3:
        r1.<android.widget.FrameLayout$LayoutParams: int gravity> = 48;

        $r6 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.widget.ImageView mPeekIcon>;

        $i3 = <android.support.wearable.R$drawable: int ic_more_vert_24dp_wht>;

        virtualinvoke $r6.<android.widget.ImageView: void setImageResource(int)>($i3);

     label4:
        $r7 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        r9 = (android.view.ViewGroup$LayoutParams) r1;

        virtualinvoke $r7.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r9);

     label5:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        i1 = virtualinvoke r1.<android.view.View: int getId()>();

        if i1 == 0 goto label2;

        $i2 = r0.<android.support.wearable.view.drawer.WearableDrawerView: int mPeekResId>;

        if i1 != $i2 goto label1;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setPeekContent(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;

     label1:
        $i3 = r0.<android.support.wearable.view.drawer.WearableDrawerView: int mContentResId>;

        if i1 != $i3 goto label2;

        $z0 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean setDrawerContentWithoutAdding(android.view.View)>(r1);

        if $z0 != 0 goto label2;

        return;

     label2:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    int preferGravity()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        return 0;
    }

    android.view.ViewGroup getPeekContainer()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.ViewGroup $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        return $r1;
    }

    public void setDrawerContent(android.view.View)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        $z0 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean setDrawerContentWithoutAdding(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void addView(android.view.View)>(r1);

     label1:
        return;
    }

    public boolean hasDrawerContent()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.view.View getDrawerContent()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        return $r1;
    }

    public void setPeekContent(android.view.View)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2, r6;
        java.lang.Object $r5;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 == null goto label1;

        $r5 = r2;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>();

     label2:
        r6 = (android.view.ViewGroup$LayoutParams) $r5;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setPeekContent(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, -1, r6);

        return;
    }

    public void openDrawer()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.support.wearable.view.drawer.WearableDrawerLayout $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout getWearableDrawerLayout()>();

        virtualinvoke $r1.<android.support.wearable.view.drawer.WearableDrawerLayout: void openDrawer(android.view.View)>(r0);

        return;
    }

    public void closeDrawer()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.support.wearable.view.drawer.WearableDrawerLayout $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout getWearableDrawerLayout()>();

        virtualinvoke $r1.<android.support.wearable.view.drawer.WearableDrawerLayout: void closeDrawer(android.view.View)>(r0);

        return;
    }

    public void peekDrawer()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.support.wearable.view.drawer.WearableDrawerLayout $r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout getWearableDrawerLayout()>();

        virtualinvoke $r1.<android.support.wearable.view.drawer.WearableDrawerLayout: void peekDrawer(android.support.wearable.view.drawer.WearableDrawerView)>(r0);

        return;
    }

    public void onDrawerOpened()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        return;
    }

    public void onDrawerClosed()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        return;
    }

    public void onDrawerStateChanged(int)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        int i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        i0 := @parameter0: int;

        return;
    }

    public void setShouldOnlyOpenWhenAtTop(boolean)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mOnlyOpenWhenAtTop> = z0;

        return;
    }

    public boolean shouldOnlyOpenWhenAtTop()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mOnlyOpenWhenAtTop>;

        return $z0;
    }

    public void setShouldPeekOnScrollDown(boolean)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldPeekOnScrollDown> = z0;

        return;
    }

    public boolean shouldPeekOnScrollDown()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldPeekOnScrollDown>;

        return $z0;
    }

    public void setShouldLockWhenNotOpenOrPeeking(boolean)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldLockWhenNotOpenOrPeeking> = z0;

        return;
    }

    public boolean shouldLockWhenNotOpenOrPeeking()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mShouldLockWhenNotOpenOrPeeking>;

        return $z0;
    }

    public int getDrawerState()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        int $i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $i0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: int mDrawerState>;

        return $i0;
    }

    public boolean isPeeking()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsPeeking>;

        return $z0;
    }

    public boolean canAutoPeek()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mCanAutoPeek>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setCanAutoPeek(boolean)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mCanAutoPeek> = z0;

        return;
    }

    public boolean isLocked()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean $z0, $z1, $z2;
        float $f0;
        byte $b0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $z0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean shouldLockWhenNotOpenOrPeeking()>();

        if $z1 == 0 goto label2;

        $f0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void lockDrawerClosed()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void closeDrawer()>();

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked> = 1;

        return;
    }

    public void lockDrawerOpened()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void openDrawer()>();

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked> = 1;

        return;
    }

    public void unlockDrawer()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsLocked> = 0;

        return;
    }

    public boolean isOpened()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        float $f0;
        byte $b0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $f0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isClosed()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        float $f0;
        byte $b0;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $f0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setDrawerState(int)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        int i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        i0 := @parameter0: int;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: int mDrawerState> = i0;

        return;
    }

    void setIsPeeking(boolean)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        boolean z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        z0 := @parameter0: boolean;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: boolean mIsPeeking> = z0;

        return;
    }

    float getOpenedPercent()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        float $f0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $f0 = r0.<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent>;

        return $f0;
    }

    void setOpenedPercent(float)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        float f0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        f0 := @parameter0: float;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: float mOpenedPercent> = f0;

        return;
    }

    private void parseAttributes(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.content.res.TypedArray r3;
        int[] $r4;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setDefaultBackgroundIfNonePresent(android.content.Context)>(r1);

        if r2 != null goto label1;

        return;

     label1:
        $r4 = <android.support.wearable.R$styleable: int[] WearableDrawerView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, i0, i1);

        $i2 = <android.support.wearable.R$styleable: int WearableDrawerView_drawer_content>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, 0);

        r0.<android.support.wearable.view.drawer.WearableDrawerView: int mContentResId> = $i3;

        $i4 = <android.support.wearable.R$styleable: int WearableDrawerView_peek_view>;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i4, 0);

        r0.<android.support.wearable.view.drawer.WearableDrawerView: int mPeekResId> = $i5;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void setDefaultBackgroundIfNonePresent(android.content.Context)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        boolean z0, $z1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $i0 = specialinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: int getDefaultBackgroundColor(android.content.Context)>(r1);

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void setBackgroundColor(int)>($i0);

     label3:
        return;
    }

    private int getDefaultBackgroundColor(android.content.Context)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.content.Context r1;
        int[] $r2;
        android.content.res.TypedArray $r3;
        int $i0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.content.Context;

        $r2 = <android.support.wearable.view.drawer.WearableDrawerView: int[] COLOR_ATTRS>;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        return $i0;
    }

    private void setPeekContent(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.ViewGroup $r3, $r4, $r5;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        $i1 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label2;

        $r5 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        virtualinvoke $r5.<android.view.ViewGroup: void removeAllViews()>();

     label2:
        $r4 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewGroup mPeekContainer>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    private boolean setDrawerContentWithoutAdding(android.view.View)
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.view.View r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        if r1 != $r2 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        if $r3 == null goto label2;

        $r5 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: void removeView(android.view.View)>($r5);

     label2:
        r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent> = r1;

        $r4 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.View mContent>;

        if $r4 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private android.support.wearable.view.drawer.WearableDrawerLayout getWearableDrawerLayout()
    {
        android.support.wearable.view.drawer.WearableDrawerView r0;
        android.support.wearable.view.drawer.WearableDrawerLayout $r1, $r2, $r4;
        android.view.ViewParent $r3;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView;

        $r1 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout mParent>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.support.wearable.view.drawer.WearableDrawerView: android.view.ViewParent getParent()>();

        $r4 = (android.support.wearable.view.drawer.WearableDrawerLayout) $r3;

        r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout mParent> = $r4;

     label1:
        $r2 = r0.<android.support.wearable.view.drawer.WearableDrawerView: android.support.wearable.view.drawer.WearableDrawerLayout mParent>;

        return $r2;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16844002;

        <android.support.wearable.view.drawer.WearableDrawerView: int[] COLOR_ATTRS> = $r0;

        return;
    }

android.support.wearable.view.drawer.WearableDrawerView$1
<android.support.wearable.view.drawer.WearableDrawerView$1: android.support.wearable.view.drawer.WearableDrawerView this$0>
    void <init>(android.support.wearable.view.drawer.WearableDrawerView)
    {
        android.support.wearable.view.drawer.WearableDrawerView$1 r0;
        android.support.wearable.view.drawer.WearableDrawerView r1;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView$1;

        r1 := @parameter0: android.support.wearable.view.drawer.WearableDrawerView;

        r0.<android.support.wearable.view.drawer.WearableDrawerView$1: android.support.wearable.view.drawer.WearableDrawerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        android.support.wearable.view.drawer.WearableDrawerView$1 r0;
        android.view.View r1;
        android.support.wearable.view.drawer.WearableDrawerView $r2;

        r0 := @this: android.support.wearable.view.drawer.WearableDrawerView$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.wearable.view.drawer.WearableDrawerView$1: android.support.wearable.view.drawer.WearableDrawerView this$0>;

        virtualinvoke $r2.<android.support.wearable.view.drawer.WearableDrawerView: void onPeekContainerClicked(android.view.View)>(r1);

        return;
    }

android.support.wearable.view.drawer.WearableDrawerView$DrawerState
<android.support.wearable.view.drawer.WearableDrawerView$DrawerState: int STATE_IDLE>
<android.support.wearable.view.drawer.WearableDrawerView$DrawerState: int STATE_DRAGGING>
<android.support.wearable.view.drawer.WearableDrawerView$DrawerState: int STATE_SETTLING>
