android.support.media2.ConnectedControllersManager
<android.support.media2.ConnectedControllersManager: java.lang.String TAG>
<android.support.media2.ConnectedControllersManager: boolean DEBUG>
<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>
<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>
<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>
<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys>
<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>
    void <init>(android.support.media2.MediaSession2$MediaSession2Impl)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$MediaSession2Impl r1;
        java.lang.Object $r2;
        android.support.v4.util.ArrayMap $r3, $r4, $r5;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$MediaSession2Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock> = $r2;

        $r3 = new android.support.v4.util.ArrayMap;

        specialinvoke $r3.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap> = $r3;

        $r4 = new android.support.v4.util.ArrayMap;

        specialinvoke $r4.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers> = $r4;

        $r5 = new android.support.v4.util.ArrayMap;

        specialinvoke $r5.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys> = $r5;

        r0.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl> = r1;

        return;
    }

    public void addController(java.lang.Object, android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.ConnectedControllersManager r0;
        java.lang.Object r1, r4, $r7;
        android.support.media2.MediaSession2$ControllerInfo r2;
        android.support.media2.SessionCommandGroup2 r3;
        java.lang.Throwable r5, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        android.support.v4.util.ArrayMap $r8, $r10, $r12;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r3 := @parameter2: android.support.media2.SessionCommandGroup2;

        if r1 == null goto label1;

        if r2 != null goto label3;

     label1:
        $z0 = <android.support.media2.ConnectedControllersManager: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key nor controller shouldn\'t be null");

        throw $r6;

     label2:
        return;

     label3:
        $r7 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r4 = $r7;

        entermonitor $r7;

     label4:
        $r8 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        virtualinvoke $r8.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r10 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        virtualinvoke $r10.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r12 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys>;

        virtualinvoke $r12.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r4;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void updateAllowedCommands(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommandGroup2)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommandGroup2 r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r13;
        android.support.v4.util.ArrayMap $r6, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommandGroup2;

        $r5 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        $z0 = virtualinvoke $r6.<android.support.v4.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        $z1 = <android.support.media2.ConnectedControllersManager: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot update allowed command for disconnected controller ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ControllerMgr", $r12);

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r7 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removeController(java.lang.Object)
    {
        android.support.media2.ConnectedControllersManager r0;
        java.lang.Object r1, r3, $r5, $r7;
        android.support.media2.MediaSession2$ControllerInfo r2;
        java.lang.Throwable r4, $r12;
        android.support.v4.util.ArrayMap $r6, $r8, $r10;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $r7 = virtualinvoke $r6.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (android.support.media2.MediaSession2$ControllerInfo) $r7;

        $r8 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys>;

        virtualinvoke $r8.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r10 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        virtualinvoke $r10.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        specialinvoke r0.<android.support.media2.ConnectedControllersManager: void notifyDisconnected(android.support.media2.MediaSession2$ControllerInfo)>(r2);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removeController(android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.Object r2, r3, $r5;
        java.lang.Throwable r4, $r11;
        android.support.v4.util.ArrayMap $r6, $r7, $r9;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys>;

        r3 = virtualinvoke $r6.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r3);

        $r9 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        virtualinvoke $r9.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        specialinvoke r0.<android.support.media2.ConnectedControllersManager: void notifyDisconnected(android.support.media2.MediaSession2$ControllerInfo)>(r1);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void notifyDisconnected(android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        boolean $z0, $z1;
        android.support.media2.MediaSession2$MediaSession2Impl $r2, $r3;
        java.util.concurrent.Executor $r4;
        android.support.media2.ConnectedControllersManager$1 $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        $z0 = <android.support.media2.ConnectedControllersManager: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disconnected");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MS2ControllerMgr", $r10);

     label1:
        $r2 = r0.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>;

        $z1 = interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: boolean isClosed()>();

        if $z1 != 0 goto label2;

        if r1 != null goto label3;

     label2:
        return;

     label3:
        $r3 = r0.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>;

        $r4 = interfaceinvoke $r3.<android.support.media2.MediaSession2$MediaSession2Impl: java.util.concurrent.Executor getCallbackExecutor()>();

        $r5 = new android.support.media2.ConnectedControllersManager$1;

        specialinvoke $r5.<android.support.media2.ConnectedControllersManager$1: void <init>(android.support.media2.ConnectedControllersManager,android.support.media2.MediaSession2$ControllerInfo)>(r0, r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public java.util.List getConnectedControllers()
    {
        android.support.media2.ConnectedControllersManager r0;
        java.util.ArrayList r1, $r4;
        java.lang.Object r2, $r5, $r8;
        java.lang.Throwable r3, $r9;
        android.support.v4.util.ArrayMap $r6, $r7;
        int $i0, i1;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        i1 = 0;

     label2:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $i0 = virtualinvoke $r6.<android.support.v4.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $r8 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return r1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isConnected(android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        java.lang.Object r2, $r4, $r6;
        java.lang.Throwable r3, $r7;
        android.support.v4.util.ArrayMap $r5;
        boolean $z0;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        $r4 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mKeys>;

        $r6 = virtualinvoke $r5.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r6 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isAllowedCommand(android.support.media2.MediaSession2$ControllerInfo, android.support.media2.SessionCommand2)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        android.support.media2.SessionCommand2 r2;
        android.support.media2.SessionCommandGroup2 r3;
        java.lang.Object r4, $r6, $r8;
        java.lang.Throwable r5, $r9;
        android.support.v4.util.ArrayMap $r7;
        boolean $z0, $z1;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        r2 := @parameter1: android.support.media2.SessionCommand2;

        $r6 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        $r8 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.support.media2.SessionCommandGroup2) $r8;

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        if r3 == null goto label6;

        $z0 = virtualinvoke r3.<android.support.media2.SessionCommandGroup2: boolean hasCommand(android.support.media2.SessionCommand2)>(r2);

        if $z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isAllowedCommand(android.support.media2.MediaSession2$ControllerInfo, int)
    {
        android.support.media2.ConnectedControllersManager r0;
        android.support.media2.MediaSession2$ControllerInfo r1;
        int i0;
        android.support.media2.SessionCommandGroup2 r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r8;
        android.support.v4.util.ArrayMap $r6;
        boolean $z0, $z1;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: android.support.media2.MediaSession2$ControllerInfo;

        i0 := @parameter1: int;

        $r5 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mAllowedCommandGroupMap>;

        $r7 = virtualinvoke $r6.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.support.media2.SessionCommandGroup2) $r7;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        $z0 = virtualinvoke r2.<android.support.media2.SessionCommandGroup2: boolean hasCommand(int)>(i0);

        if $z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.support.media2.MediaSession2$ControllerInfo getController(java.lang.Object)
    {
        android.support.media2.ConnectedControllersManager r0;
        java.lang.Object r1, r2, $r6, $r8, $r12, $r16;
        android.support.v4.media.MediaSessionManager$RemoteUserInfo r3, r4;
        java.lang.Throwable r5, $r18;
        boolean $z0, $z1;
        android.support.v4.util.ArrayMap $r7, $r10, $r11, $r15;
        android.support.media2.MediaSession2$ControllerInfo $r9, $r17;
        int $i0, $i1, $i2, i3;
        java.lang.String $r13, $r14;

        r0 := @this: android.support.media2.ConnectedControllersManager;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return null;

     label01:
        $r6 = r0.<android.support.media2.ConnectedControllersManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $z0 = r1 instanceof android.support.v4.media.MediaSessionManager$RemoteUserInfo;

        if $z0 == 0 goto label08;

        r3 = (android.support.v4.media.MediaSessionManager$RemoteUserInfo) r1;

        i3 = 0;

     label03:
        $r10 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $i0 = virtualinvoke $r10.<android.support.v4.util.ArrayMap: int size()>();

        if i3 >= $i0 goto label06;

        $r11 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $r12 = virtualinvoke $r11.<android.support.v4.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r4 = (android.support.v4.media.MediaSessionManager$RemoteUserInfo) $r12;

        $r13 = virtualinvoke r3.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $r14 = virtualinvoke r4.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label05;

        $i1 = virtualinvoke r3.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        $i2 = virtualinvoke r4.<android.support.v4.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        if $i1 != $i2 goto label05;

        $r15 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $r16 = virtualinvoke $r15.<android.support.v4.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r17 = (android.support.media2.MediaSession2$ControllerInfo) $r16;

        exitmonitor r2;

     label04:
        return $r17;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r7 = r0.<android.support.media2.ConnectedControllersManager: android.support.v4.util.ArrayMap mControllers>;

        $r8 = virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r9 = (android.support.media2.MediaSession2$ControllerInfo) $r8;

        exitmonitor r2;

     label09:
        return $r9;

     label10:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r2;

     label11:
        throw r5;

        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MS2ControllerMgr", 3);

        <android.support.media2.ConnectedControllersManager: boolean DEBUG> = $z0;

        return;
    }

android.support.media2.ConnectedControllersManager$1
<android.support.media2.ConnectedControllersManager$1: android.support.media2.MediaSession2$ControllerInfo val$controller>
<android.support.media2.ConnectedControllersManager$1: android.support.media2.ConnectedControllersManager this$0>
    void <init>(android.support.media2.ConnectedControllersManager, android.support.media2.MediaSession2$ControllerInfo)
    {
        android.support.media2.ConnectedControllersManager$1 r0;
        android.support.media2.ConnectedControllersManager r1;
        android.support.media2.MediaSession2$ControllerInfo r2;

        r0 := @this: android.support.media2.ConnectedControllersManager$1;

        r1 := @parameter0: android.support.media2.ConnectedControllersManager;

        r2 := @parameter1: android.support.media2.MediaSession2$ControllerInfo;

        r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.ConnectedControllersManager this$0> = r1;

        r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.MediaSession2$ControllerInfo val$controller> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.support.media2.ConnectedControllersManager$1 r0;
        android.support.media2.ConnectedControllersManager $r1, $r3, $r6;
        android.support.media2.MediaSession2$MediaSession2Impl $r2, $r4, $r7;
        boolean $z0;
        android.support.media2.MediaSession2$SessionCallback $r5;
        android.support.media2.MediaSession2 $r8;
        android.support.media2.MediaSession2$ControllerInfo $r9;

        r0 := @this: android.support.media2.ConnectedControllersManager$1;

        $r1 = r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.ConnectedControllersManager this$0>;

        $r2 = $r1.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>;

        $z0 = interfaceinvoke $r2.<android.support.media2.MediaSession2$MediaSession2Impl: boolean isClosed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.ConnectedControllersManager this$0>;

        $r4 = $r3.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>;

        $r5 = interfaceinvoke $r4.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaSession2$SessionCallback getCallback()>();

        $r6 = r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.ConnectedControllersManager this$0>;

        $r7 = $r6.<android.support.media2.ConnectedControllersManager: android.support.media2.MediaSession2$MediaSession2Impl mSessionImpl>;

        $r8 = interfaceinvoke $r7.<android.support.media2.MediaSession2$MediaSession2Impl: android.support.media2.MediaSession2 getInstance()>();

        $r9 = r0.<android.support.media2.ConnectedControllersManager$1: android.support.media2.MediaSession2$ControllerInfo val$controller>;

        virtualinvoke $r5.<android.support.media2.MediaSession2$SessionCallback: void onDisconnected(android.support.media2.MediaSession2,android.support.media2.MediaSession2$ControllerInfo)>($r8, $r9);

        return;
    }

