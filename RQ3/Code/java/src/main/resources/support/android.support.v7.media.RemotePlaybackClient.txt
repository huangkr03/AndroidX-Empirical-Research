android.support.v7.media.RemotePlaybackClient
<android.support.v7.media.RemotePlaybackClient: java.lang.String TAG>
<android.support.v7.media.RemotePlaybackClient: boolean DEBUG>
<android.support.v7.media.RemotePlaybackClient: android.content.Context mContext>
<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute>
<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$ActionReceiver mActionReceiver>
<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mItemStatusPendingIntent>
<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mSessionStatusPendingIntent>
<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mMessagePendingIntent>
<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback>
<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsQueuing>
<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsSessionManagement>
<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsMessaging>
<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>
<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$StatusCallback mStatusCallback>
<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$OnMessageReceivedListener mOnMessageReceivedListener>
    public void <init>(android.content.Context, android.support.v7.media.MediaRouter$RouteInfo)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.content.Context r1;
        android.support.v7.media.MediaRouter$RouteInfo r2;
        android.content.IntentFilter r3, $r7;
        android.content.Intent r4, r5, r6, $r11, $r15, $r19;
        android.support.v7.media.RemotePlaybackClient$ActionReceiver $r8, $r9;
        java.lang.String $r12, $r16, $r20;
        android.app.PendingIntent $r14, $r18, $r22;
        java.lang.IllegalArgumentException $r23, $r24;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v7.media.MediaRouter$RouteInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r24;

     label1:
        if r2 != null goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("route must not be null");

        throw $r23;

     label2:
        r0.<android.support.v7.media.RemotePlaybackClient: android.content.Context mContext> = r1;

        r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute> = r2;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.support.v7.media.actions.ACTION_ITEM_STATUS_CHANGED");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.support.v7.media.actions.ACTION_SESSION_STATUS_CHANGED");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.support.v7.media.actions.ACTION_MESSAGE_RECEIVED");

        $r8 = new android.support.v7.media.RemotePlaybackClient$ActionReceiver;

        specialinvoke $r8.<android.support.v7.media.RemotePlaybackClient$ActionReceiver: void <init>(android.support.v7.media.RemotePlaybackClient)>(r0);

        r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$ActionReceiver mActionReceiver> = $r8;

        $r9 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$ActionReceiver mActionReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r3);

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.support.v7.media.actions.ACTION_ITEM_STATUS_CHANGED");

        r4 = $r11;

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r12);

        $r14 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r4, 0);

        r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mItemStatusPendingIntent> = $r14;

        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(java.lang.String)>("android.support.v7.media.actions.ACTION_SESSION_STATUS_CHANGED");

        r5 = $r15;

        $r16 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r16);

        $r18 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r5, 0);

        r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mSessionStatusPendingIntent> = $r18;

        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(java.lang.String)>("android.support.v7.media.actions.ACTION_MESSAGE_RECEIVED");

        r6 = $r19;

        $r20 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r20);

        $r22 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r6, 0);

        r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mMessagePendingIntent> = $r22;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void detectFeatures()>();

        return;
    }

    public void release()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.support.v7.media.RemotePlaybackClient$ActionReceiver $r1;
        android.content.Context $r2;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $r2 = r0.<android.support.v7.media.RemotePlaybackClient: android.content.Context mContext>;

        $r1 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$ActionReceiver mActionReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    public boolean isRemotePlaybackSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback>;

        return $z0;
    }

    public boolean isQueuingSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsQueuing>;

        return $z0;
    }

    public boolean isSessionManagementSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsSessionManagement>;

        return $z0;
    }

    public boolean isMessagingSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsMessaging>;

        return $z0;
    }

    public java.lang.String getSessionId()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String $r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $r1 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        return $r1;
    }

    public void setSessionId(java.lang.String)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1, $r2, $r8;
        boolean $z0, $z1;
        android.support.v7.media.RemotePlaybackClient$StatusCallback $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label2;

        $z1 = <android.support.v7.media.RemotePlaybackClient: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session id is now: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RemotePlaybackClient", $r8);

     label1:
        r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId> = r1;

        $r3 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$StatusCallback mStatusCallback>;

        if $r3 == null goto label2;

        $r4 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$StatusCallback mStatusCallback>;

        virtualinvoke $r4.<android.support.v7.media.RemotePlaybackClient$StatusCallback: void onSessionChanged(java.lang.String)>(r1);

     label2:
        return;
    }

    public boolean hasSession()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $r1 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setStatusCallback(android.support.v7.media.RemotePlaybackClient$StatusCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.support.v7.media.RemotePlaybackClient$StatusCallback r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.support.v7.media.RemotePlaybackClient$StatusCallback;

        r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$StatusCallback mStatusCallback> = r1;

        return;
    }

    public void setOnMessageReceivedListener(android.support.v7.media.RemotePlaybackClient$OnMessageReceivedListener)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.support.v7.media.RemotePlaybackClient$OnMessageReceivedListener r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.support.v7.media.RemotePlaybackClient$OnMessageReceivedListener;

        r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.RemotePlaybackClient$OnMessageReceivedListener mOnMessageReceivedListener> = r1;

        return;
    }

    public void play(android.net.Uri, java.lang.String, android.os.Bundle, long, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3, r4;
        long l0;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        l0 := @parameter3: long;

        r4 := @parameter4: android.os.Bundle;

        r5 := @parameter5: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void playOrEnqueue(android.net.Uri,java.lang.String,android.os.Bundle,long,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback,java.lang.String)>(r1, r2, r3, l0, r4, r5, "android.media.intent.action.PLAY");

        return;
    }

    public void enqueue(android.net.Uri, java.lang.String, android.os.Bundle, long, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3, r4;
        long l0;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        l0 := @parameter3: long;

        r4 := @parameter4: android.os.Bundle;

        r5 := @parameter5: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void playOrEnqueue(android.net.Uri,java.lang.String,android.os.Bundle,long,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback,java.lang.String)>(r1, r2, r3, l0, r4, r5, "android.media.intent.action.ENQUEUE");

        return;
    }

    private void playOrEnqueue(android.net.Uri, java.lang.String, android.os.Bundle, long, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback, java.lang.String)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.net.Uri r1;
        java.lang.String r2, r6, $r12;
        android.os.Bundle r3, r4;
        long l0;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r5;
        android.content.Intent r7, $r8;
        boolean $z0;
        android.app.PendingIntent $r10;
        byte $b1;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        l0 := @parameter3: long;

        r4 := @parameter4: android.os.Bundle;

        r5 := @parameter5: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        r6 := @parameter6: java.lang.String;

        if r1 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("contentUri must not be null");

        throw $r15;

     label1:
        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfRemotePlaybackNotSupported()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("android.media.intent.action.ENQUEUE");

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfQueuingNotSupported()>();

     label2:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>(r6);

        r7 = $r8;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r1, r2);

        $r10 = r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mItemStatusPendingIntent>;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.media.intent.extra.ITEM_STATUS_UPDATE_RECEIVER", $r10);

        if r3 == null goto label3;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("android.media.intent.extra.ITEM_METADATA", r3);

     label3:
        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label4;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.intent.extra.ITEM_POSITION", l0);

     label4:
        $r12 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performItemAction(android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback)>(r7, $r12, null, r4, r5);

        return;
    }

    public void seek(java.lang.String, long, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1, $r7;
        long l0;
        android.os.Bundle r2;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r3;
        android.content.Intent r4, $r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemId must not be null");

        throw $r8;

     label1:
        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.SEEK");

        r4 = $r5;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.intent.extra.ITEM_POSITION", l0);

        $r7 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performItemAction(android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback)>(r4, $r7, r1, r2, r3);

        return;
    }

    public void getStatus(java.lang.String, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1, $r6;
        android.os.Bundle r2;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r3;
        android.content.Intent r4, $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemId must not be null");

        throw $r7;

     label1:
        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.GET_STATUS");

        r4 = $r5;

        $r6 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performItemAction(android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback)>(r4, $r6, r1, r2, r3);

        return;
    }

    public void remove(java.lang.String, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1, $r6;
        android.os.Bundle r2;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r3;
        android.content.Intent r4, $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemId must not be null");

        throw $r7;

     label1:
        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfQueuingNotSupported()>();

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.REMOVE");

        r4 = $r5;

        $r6 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performItemAction(android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$ItemActionCallback)>(r4, $r6, r1, r2, r3);

        return;
    }

    public void pause(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.PAUSE");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    public void resume(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.RESUME");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    public void stop(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.STOP");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    public void startSession(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        android.app.PendingIntent $r5, $r7;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfSessionManagementNotSupported()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.START_SESSION");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mSessionStatusPendingIntent>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.media.intent.extra.SESSION_STATUS_UPDATE_RECEIVER", $r5);

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsMessaging>;

        if $z0 == 0 goto label1;

        $r7 = r0.<android.support.v7.media.RemotePlaybackClient: android.app.PendingIntent mMessagePendingIntent>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.media.intent.extra.MESSAGE_RECEIVER", $r7);

     label1:
        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, null, r1, r2);

        return;
    }

    public void sendMessage(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfMessageNotSupported()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.SEND_MESSAGE");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    public void getSessionStatus(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfSessionManagementNotSupported()>();

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.GET_SESSION_STATUS");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    public void endSession(android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.os.Bundle r1;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r2;
        android.content.Intent r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfSessionManagementNotSupported()>();

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void throwIfNoCurrentSession()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.intent.action.END_SESSION");

        r3 = $r4;

        $r5 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: void performSessionAction(android.content.Intent,java.lang.String,android.os.Bundle,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r3, $r5, r1, r2);

        return;
    }

    private void performItemAction(android.content.Intent, java.lang.String, java.lang.String, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$ItemActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.content.Intent r1;
        java.lang.String r2, r3;
        android.os.Bundle r4;
        android.support.v7.media.RemotePlaybackClient$ItemActionCallback r5;
        android.support.v7.media.RemotePlaybackClient$1 $r7;
        android.support.v7.media.MediaRouter$RouteInfo $r8;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.support.v7.media.RemotePlaybackClient$ItemActionCallback;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.media.intent.category.REMOTE_PLAYBACK");

        if r2 == null goto label1;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.intent.extra.SESSION_ID", r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.intent.extra.ITEM_ID", r3);

     label2:
        if r4 == null goto label3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r4);

     label3:
        staticinvoke <android.support.v7.media.RemotePlaybackClient: void logRequest(android.content.Intent)>(r1);

        $r8 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute>;

        $r7 = new android.support.v7.media.RemotePlaybackClient$1;

        specialinvoke $r7.<android.support.v7.media.RemotePlaybackClient$1: void <init>(android.support.v7.media.RemotePlaybackClient,java.lang.String,java.lang.String,android.content.Intent,android.support.v7.media.RemotePlaybackClient$ItemActionCallback)>(r0, r2, r3, r1, r5);

        virtualinvoke $r8.<android.support.v7.media.MediaRouter$RouteInfo: void sendControlRequest(android.content.Intent,android.support.v7.media.MediaRouter$ControlRequestCallback)>(r1, $r7);

        return;
    }

    private void performSessionAction(android.content.Intent, java.lang.String, android.os.Bundle, android.support.v7.media.RemotePlaybackClient$SessionActionCallback)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.content.Intent r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.support.v7.media.RemotePlaybackClient$SessionActionCallback r4;
        android.support.v7.media.RemotePlaybackClient$2 $r6;
        android.support.v7.media.MediaRouter$RouteInfo $r7;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.support.v7.media.RemotePlaybackClient$SessionActionCallback;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.media.intent.category.REMOTE_PLAYBACK");

        if r2 == null goto label1;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.intent.extra.SESSION_ID", r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r3);

     label2:
        staticinvoke <android.support.v7.media.RemotePlaybackClient: void logRequest(android.content.Intent)>(r1);

        $r7 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute>;

        $r6 = new android.support.v7.media.RemotePlaybackClient$2;

        specialinvoke $r6.<android.support.v7.media.RemotePlaybackClient$2: void <init>(android.support.v7.media.RemotePlaybackClient,java.lang.String,android.content.Intent,android.support.v7.media.RemotePlaybackClient$SessionActionCallback)>(r0, r2, r1, r4);

        virtualinvoke $r7.<android.support.v7.media.MediaRouter$RouteInfo: void sendControlRequest(android.content.Intent,android.support.v7.media.MediaRouter$ControlRequestCallback)>(r1, $r6);

        return;
    }

    void adoptSession(java.lang.String)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        virtualinvoke r0.<android.support.v7.media.RemotePlaybackClient: void setSessionId(java.lang.String)>(r1);

     label1:
        return;
    }

    void handleInvalidResult(android.content.Intent, android.support.v7.media.RemotePlaybackClient$ActionCallback, android.os.Bundle)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.content.Intent r1;
        android.support.v7.media.RemotePlaybackClient$ActionCallback r2;
        android.os.Bundle r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$ActionCallback;

        r3 := @parameter2: android.os.Bundle;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received invalid result data from ");

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": data=");

        $r9 = staticinvoke <android.support.v7.media.RemotePlaybackClient: java.lang.String bundleToString(android.os.Bundle)>(r3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemotePlaybackClient", $r11);

        virtualinvoke r2.<android.support.v7.media.RemotePlaybackClient$ActionCallback: void onError(java.lang.String,int,android.os.Bundle)>(null, 0, r3);

        return;
    }

    void handleError(android.content.Intent, android.support.v7.media.RemotePlaybackClient$ActionCallback, java.lang.String, android.os.Bundle)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        android.content.Intent r1;
        android.support.v7.media.RemotePlaybackClient$ActionCallback r2;
        java.lang.String r3, $r7, $r14, $r16;
        android.os.Bundle r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        int i1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.support.v7.media.RemotePlaybackClient$ActionCallback;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        if r4 == null goto label1;

        i1 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String,int)>("android.media.intent.extra.ERROR_CODE", 0);

        goto label2;

     label1:
        i1 = 0;

     label2:
        $z0 = <android.support.v7.media.RemotePlaybackClient: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received error from ");

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": error=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r14 = staticinvoke <android.support.v7.media.RemotePlaybackClient: java.lang.String bundleToString(android.os.Bundle)>(r4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemotePlaybackClient", $r16);

     label3:
        virtualinvoke r2.<android.support.v7.media.RemotePlaybackClient$ActionCallback: void onError(java.lang.String,int,android.os.Bundle)>(r3, i1, r4);

        return;
    }

    private void detectFeatures()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.PLAY");

        if $z0 == 0 goto label1;

        $z6 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.SEEK");

        if $z6 == 0 goto label1;

        $z7 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.GET_STATUS");

        if $z7 == 0 goto label1;

        $z8 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.PAUSE");

        if $z8 == 0 goto label1;

        $z9 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.RESUME");

        if $z9 == 0 goto label1;

        $z10 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.STOP");

        if $z10 == 0 goto label1;

        $z11 = 1;

        goto label2;

     label1:
        $z11 = 0;

     label2:
        r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback> = $z11;

        $z12 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback>;

        if $z12 == 0 goto label3;

        $z4 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.ENQUEUE");

        if $z4 == 0 goto label3;

        $z5 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.REMOVE");

        if $z5 == 0 goto label3;

        $z13 = 1;

        goto label4;

     label3:
        $z13 = 0;

     label4:
        r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsQueuing> = $z13;

        $z14 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback>;

        if $z14 == 0 goto label5;

        $z1 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.START_SESSION");

        if $z1 == 0 goto label5;

        $z2 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.GET_SESSION_STATUS");

        if $z2 == 0 goto label5;

        $z3 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean routeSupportsAction(java.lang.String)>("android.media.intent.action.END_SESSION");

        if $z3 == 0 goto label5;

        $z15 = 1;

        goto label6;

     label5:
        $z15 = 0;

     label6:
        r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsSessionManagement> = $z15;

        $z16 = specialinvoke r0.<android.support.v7.media.RemotePlaybackClient: boolean doesRouteSupportMessaging()>();

        r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsMessaging> = $z16;

        return;
    }

    private boolean routeSupportsAction(java.lang.String)
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String r1;
        android.support.v7.media.MediaRouter$RouteInfo $r2;
        boolean $z0;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute>;

        $z0 = virtualinvoke $r2.<android.support.v7.media.MediaRouter$RouteInfo: boolean supportsControlAction(java.lang.String,java.lang.String)>("android.media.intent.category.REMOTE_PLAYBACK", r1);

        return $z0;
    }

    private boolean doesRouteSupportMessaging()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.util.Iterator r1;
        android.content.IntentFilter r2;
        android.support.v7.media.MediaRouter$RouteInfo $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $r3 = r0.<android.support.v7.media.RemotePlaybackClient: android.support.v7.media.MediaRouter$RouteInfo mRoute>;

        $r4 = virtualinvoke $r3.<android.support.v7.media.MediaRouter$RouteInfo: java.util.List getControlFilters()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.IntentFilter) $r5;

        $z1 = virtualinvoke r2.<android.content.IntentFilter: boolean hasAction(java.lang.String)>("android.media.intent.action.SEND_MESSAGE");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private void throwIfRemotePlaybackNotSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsRemotePlayback>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The route does not support remote playback.");

        throw $r1;

     label1:
        return;
    }

    private void throwIfQueuingNotSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsQueuing>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The route does not support queuing.");

        throw $r1;

     label1:
        return;
    }

    private void throwIfSessionManagementNotSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsSessionManagement>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The route does not support session management.");

        throw $r1;

     label1:
        return;
    }

    private void throwIfMessageNotSupported()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $z0 = r0.<android.support.v7.media.RemotePlaybackClient: boolean mRouteSupportsMessaging>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The route does not support message.");

        throw $r1;

     label1:
        return;
    }

    private void throwIfNoCurrentSession()
    {
        android.support.v7.media.RemotePlaybackClient r0;
        java.lang.String $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v7.media.RemotePlaybackClient;

        $r1 = r0.<android.support.v7.media.RemotePlaybackClient: java.lang.String mSessionId>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There is no current session.");

        throw $r2;

     label1:
        return;
    }

    static java.lang.String inferMissingResult(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return r0;

     label1:
        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return r1;

     label3:
        return null;
    }

    private static void logRequest(android.content.Intent)
    {
        android.content.Intent r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.content.Intent;

        $z0 = <android.support.v7.media.RemotePlaybackClient: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending request: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RemotePlaybackClient", $r4);

     label1:
        return;
    }

    static java.lang.String bundleToString(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.lang.String $r1;

        r0 := @parameter0: android.os.Bundle;

        if r0 == null goto label1;

        virtualinvoke r0.<android.os.Bundle: int size()>();

        $r1 = virtualinvoke r0.<android.os.Bundle: java.lang.String toString()>();

        return $r1;

     label1:
        return "null";
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RemotePlaybackClient", 3);

        <android.support.v7.media.RemotePlaybackClient: boolean DEBUG> = $z0;

        return;
    }

