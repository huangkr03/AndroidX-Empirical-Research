android.support.test.uiautomator.UiAutomatorTestCase
<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.UiDevice mDevice>
<android.support.test.uiautomator.UiAutomatorTestCase: android.os.Bundle mParams>
<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.IAutomationSupport mAutomationSupport>
    public void <init>()
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        specialinvoke r0.<android.test.InstrumentationTestCase: void <init>()>();

        return;
    }

    public android.support.test.uiautomator.UiDevice getUiDevice()
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;
        android.support.test.uiautomator.UiDevice $r1;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        $r1 = r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.UiDevice mDevice>;

        return $r1;
    }

    public android.os.Bundle getParams()
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        $r1 = r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.os.Bundle mParams>;

        return $r1;
    }

    public android.support.test.uiautomator.IAutomationSupport getAutomationSupport()
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;
        android.support.test.uiautomator.IAutomationSupport $r1, $r2;
        android.support.test.uiautomator.InstrumentationAutomationSupport $r3;
        android.app.Instrumentation $r4;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        $r1 = r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.IAutomationSupport mAutomationSupport>;

        if $r1 != null goto label1;

        $r3 = new android.support.test.uiautomator.InstrumentationAutomationSupport;

        $r4 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.app.Instrumentation getInstrumentation()>();

        specialinvoke $r3.<android.support.test.uiautomator.InstrumentationAutomationSupport: void <init>(android.app.Instrumentation)>($r4);

        r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.IAutomationSupport mAutomationSupport> = $r3;

     label1:
        $r2 = r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.IAutomationSupport mAutomationSupport>;

        return $r2;
    }

    void initialize(android.os.Bundle)
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;
        android.os.Bundle r1, $r5;
        java.lang.String r2;
        android.app.Instrumentation $r3;
        android.support.test.uiautomator.UiDevice $r4, $r6;
        android.app.UiAutomation $r7;
        java.lang.Boolean $r8;
        boolean $z0;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.os.Bundle mParams> = r1;

        $r3 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.app.Instrumentation getInstrumentation()>();

        $r4 = staticinvoke <android.support.test.uiautomator.UiDevice: android.support.test.uiautomator.UiDevice getInstance(android.app.Instrumentation)>($r3);

        r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.UiDevice mDevice> = $r4;

        $r5 = r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.os.Bundle mParams>;

        r2 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("monkey");

        if r2 == null goto label1;

        $r6 = virtualinvoke r0.<android.support.test.uiautomator.UiAutomatorTestCase: android.support.test.uiautomator.UiDevice getUiDevice()>();

        $r7 = virtualinvoke $r6.<android.support.test.uiautomator.UiDevice: android.app.UiAutomation getUiAutomation()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r2);

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r7.<android.app.UiAutomation: void setRunAsMonkey(boolean)>($z0);

     label1:
        return;
    }

    public void sleep(long)
    {
        android.support.test.uiautomator.UiAutomatorTestCase r0;
        long l0;

        r0 := @this: android.support.test.uiautomator.UiAutomatorTestCase;

        l0 := @parameter0: long;

        staticinvoke <android.os.SystemClock: void sleep(long)>(l0);

        return;
    }

