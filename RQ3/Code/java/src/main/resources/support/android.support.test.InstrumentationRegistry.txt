android.support.test.InstrumentationRegistry
<android.support.test.InstrumentationRegistry: java.util.concurrent.atomic.AtomicReference sArguments>
<android.support.test.InstrumentationRegistry: java.util.concurrent.atomic.AtomicReference sInstrumentationRef>
    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        <android.support.test.InstrumentationRegistry: java.util.concurrent.atomic.AtomicReference sInstrumentationRef> = $r0;

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        <android.support.test.InstrumentationRegistry: java.util.concurrent.atomic.AtomicReference sArguments> = $r0;

        return;
    }

    public static android.app.Instrumentation getInstrumentation()
    {
        java.lang.Object $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        android.app.Instrumentation $r2;
        java.lang.IllegalStateException $r3;

        $r1 = <android.support.test.InstrumentationRegistry: java.util.concurrent.atomic.AtomicReference sInstrumentationRef>;

        $r0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r2 = (android.app.Instrumentation) $r0;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No instrumentation registered! Must run under a registering instrumentation.");

        throw $r3;

     label1:
        return $r2;
    }

