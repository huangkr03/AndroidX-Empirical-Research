androidx.media3.extractor.ts.Id3Reader
<androidx.media3.extractor.ts.Id3Reader: java.lang.String TAG>
<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>
<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>
<androidx.media3.extractor.ts.Id3Reader: boolean writingSample>
<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs>
<androidx.media3.extractor.ts.Id3Reader: int sampleSize>
<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>
    public void <init>()
    {
        androidx.media3.extractor.ts.Id3Reader r0;
        androidx.media3.common.util.ParsableByteArray $r1;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(10);

        r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header> = $r1;

        r0.<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs> = -9223372036854775807L;

        return;
    }

    public void seek()
    {
        androidx.media3.extractor.ts.Id3Reader r0;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample> = 0;

        r0.<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs> = -9223372036854775807L;

        return;
    }

    public void createTracks(androidx.media3.extractor.ExtractorOutput, androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)
    {
        androidx.media3.extractor.ts.Id3Reader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator r2;
        int $i0;
        androidx.media3.extractor.TrackOutput $r3, $r5;
        androidx.media3.common.Format$Builder $r4, $r7, $r8;
        java.lang.String $r6;
        androidx.media3.common.Format $r9;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 := @parameter1: androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator;

        virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: void generateNewId()>();

        $i0 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: int getTrackId()>();

        $r3 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>($i0, 5);

        r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output> = $r3;

        $r5 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>;

        $r4 = new androidx.media3.common.Format$Builder;

        specialinvoke $r4.<androidx.media3.common.Format$Builder: void <init>()>();

        $r6 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String getFormatId()>();

        $r7 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("application/id3");

        $r9 = virtualinvoke $r8.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke $r5.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r9);

        return;
    }

    public void packetStarted(long, int)
    {
        androidx.media3.extractor.ts.Id3Reader r0;
        long l0;
        int i1, $i2;
        byte $b3;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = i1 & 4;

        if $i2 != 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample> = 1;

        $b3 = l0 cmp -9223372036854775807L;

        if $b3 == 0 goto label2;

        r0.<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs> = l0;

     label2:
        r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize> = 0;

        r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead> = 0;

        return;
    }

    public void consume(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.ts.Id3Reader r0;
        androidx.media3.common.util.ParsableByteArray r1, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, i17, $i18, $i19;
        androidx.media3.extractor.TrackOutput $r2, $r13;
        boolean $z0;
        byte[] $r4, $r6;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        $r2 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r2);

        $z0 = r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $i1 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        if $i1 >= 10 goto label4;

        $i2 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        $i3 = 10 - $i2;

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        $r4 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i4 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        $r5 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i5 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r6, $i5, i13);

        $i6 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        $i7 = $i6 + i13;

        if $i7 != 10 goto label4;

        $r7 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r8 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        $i8 = virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        if 73 != $i8 goto label2;

        $r9 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        $i9 = virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        if 68 != $i9 goto label2;

        $r10 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        $i10 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        if 51 == $i10 goto label3;

     label2:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("Id3Reader", "Discarding invalid ID3 tag");

        r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample> = 0;

        return;

     label3:
        $r11 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        virtualinvoke $r11.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(3);

        $r12 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.common.util.ParsableByteArray id3Header>;

        $i11 = virtualinvoke $r12.<androidx.media3.common.util.ParsableByteArray: int readSynchSafeInt()>();

        $i12 = 10 + $i11;

        r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize> = $i12;

     label4:
        $i14 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize>;

        $i15 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        $i16 = $i14 - $i15;

        i17 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i16);

        $r13 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>;

        interfaceinvoke $r13.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, i17);

        $i18 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        $i19 = $i18 + i17;

        r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead> = $i19;

        return;
    }

    public void packetFinished()
    {
        androidx.media3.extractor.ts.Id3Reader r0;
        androidx.media3.extractor.TrackOutput $r1, $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i5;
        long $l3, $l6;
        byte $b4;

        r0 := @this: androidx.media3.extractor.ts.Id3Reader;

        $r1 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $z0 = r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample>;

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize>;

        if $i0 == 0 goto label1;

        $i2 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleBytesRead>;

        $i1 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize>;

        if $i2 == $i1 goto label2;

     label1:
        return;

     label2:
        $l3 = r0.<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label3;

        $r3 = r0.<androidx.media3.extractor.ts.Id3Reader: androidx.media3.extractor.TrackOutput output>;

        $l6 = r0.<androidx.media3.extractor.ts.Id3Reader: long sampleTimeUs>;

        $i5 = r0.<androidx.media3.extractor.ts.Id3Reader: int sampleSize>;

        interfaceinvoke $r3.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l6, 1, $i5, 0, null);

     label3:
        r0.<androidx.media3.extractor.ts.Id3Reader: boolean writingSample> = 0;

        return;
    }

