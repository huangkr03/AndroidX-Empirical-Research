androidx.databinding.library.baseAdapters.DataBinderMapperImpl
<androidx.databinding.library.baseAdapters.DataBinderMapperImpl: android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP>
    public void <init>()
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        specialinvoke r0.<androidx.databinding.DataBinderMapper: void <init>()>();

        return;
    }

    public androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent, android.view.View, int)
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;
        androidx.databinding.DataBindingComponent r1;
        android.view.View r2;
        int i0, i1;
        java.lang.Object r3;
        android.util.SparseIntArray $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        r1 := @parameter0: androidx.databinding.DataBindingComponent;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $r4 = <androidx.databinding.library.baseAdapters.DataBinderMapperImpl: android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP>;

        i1 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int)>(i0);

        if i1 <= 0 goto label1;

        r3 = virtualinvoke r2.<android.view.View: java.lang.Object getTag()>();

        if r3 != null goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("view must have a tag");

        throw $r5;

     label1:
        return null;
    }

    public androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent, android.view.View[], int)
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;
        androidx.databinding.DataBindingComponent r1;
        android.view.View[] r2;
        int i0, i1, $i2;
        java.lang.Object r3;
        android.util.SparseIntArray $r4;
        android.view.View $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        r1 := @parameter0: androidx.databinding.DataBindingComponent;

        r2 := @parameter1: android.view.View[];

        i0 := @parameter2: int;

        if r2 == null goto label1;

        $i2 = lengthof r2;

        if $i2 != 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = <androidx.databinding.library.baseAdapters.DataBinderMapperImpl: android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP>;

        i1 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int)>(i0);

        if i1 <= 0 goto label3;

        $r5 = r2[0];

        r3 = virtualinvoke $r5.<android.view.View: java.lang.Object getTag()>();

        if r3 != null goto label3;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("view must have a tag");

        throw $r6;

     label3:
        return null;
    }

    public int getLayoutId(java.lang.String)
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = <androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup: java.util.HashMap sKeys>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 != null goto label2;

        $i0 = 0;

        goto label3;

     label2:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label3:
        return $i0;
    }

    public java.lang.String convertBrIdToString(int)
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;
        int i0;
        java.lang.String r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        i0 := @parameter0: int;

        $r2 = <androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup: android.util.SparseArray sKeys>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.lang.String) $r3;

        return r1;
    }

    public java.util.List collectDependencies()
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl r0;
        java.util.ArrayList r1, $r2;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r1 = $r2;

        return r1;
    }

    static void <clinit>()
    {
        android.util.SparseIntArray $r0;

        $r0 = new android.util.SparseIntArray;

        specialinvoke $r0.<android.util.SparseIntArray: void <init>(int)>(0);

        <androidx.databinding.library.baseAdapters.DataBinderMapperImpl: android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP> = $r0;

        return;
    }

androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup
<androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup: android.util.SparseArray sKeys>
    private void <init>()
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup r0;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.util.SparseArray $r0, $r1;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>(int)>(1);

        <androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup: android.util.SparseArray sKeys> = $r0;

        $r1 = <androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup: android.util.SparseArray sKeys>;

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>(0, "_all");

        return;
    }

androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup
<androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup: java.util.HashMap sKeys>
    private void <init>()
    {
        androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup r0;

        r0 := @this: androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(0);

        <androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup: java.util.HashMap sKeys> = $r0;

        return;
    }

