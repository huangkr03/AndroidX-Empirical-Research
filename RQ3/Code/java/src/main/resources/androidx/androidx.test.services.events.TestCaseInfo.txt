androidx.test.services.events.TestCaseInfo
<androidx.test.services.events.TestCaseInfo: android.os.Parcelable$Creator CREATOR>
<androidx.test.services.events.TestCaseInfo: java.lang.String className>
<androidx.test.services.events.TestCaseInfo: java.lang.String methodName>
<androidx.test.services.events.TestCaseInfo: java.util.List methodAnnotations>
<androidx.test.services.events.TestCaseInfo: java.util.List classAnnotations>
    public int describeContents()
    {
        androidx.test.services.events.TestCaseInfo r0;

        r0 := @this: androidx.test.services.events.TestCaseInfo;

        return 0;
    }

    public java.lang.String getClassAndMethodName()
    {
        androidx.test.services.events.TestCaseInfo r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: androidx.test.services.events.TestCaseInfo;

        r2 = r0.<androidx.test.services.events.TestCaseInfo: java.lang.String methodName>;

        r1 = r0.<androidx.test.services.events.TestCaseInfo: java.lang.String className>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        androidx.test.services.events.TestCaseInfo$1 $r0;

        $r0 = new androidx.test.services.events.TestCaseInfo$1;

        specialinvoke $r0.<androidx.test.services.events.TestCaseInfo$1: void <init>()>();

        <androidx.test.services.events.TestCaseInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.test.services.events.TestCaseInfo r0;
        android.os.Parcel r1;
        java.lang.String $r3, $r5, $r6, $r8;
        java.lang.Object $r4, $r7;
        java.util.ArrayList $r9, $r12;
        android.os.Parcelable$Creator $r10, $r13;
        java.util.List $r11, $r14;

        r0 := @this: androidx.test.services.events.TestCaseInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source cannot be null");

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "className cannot be null");

        $r5 = (java.lang.String) $r4;

        r0.<androidx.test.services.events.TestCaseInfo: java.lang.String className> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r7 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r6, "methodName cannot be null");

        $r8 = (java.lang.String) $r7;

        r0.<androidx.test.services.events.TestCaseInfo: java.lang.String methodName> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.services.events.TestCaseInfo: java.util.List methodAnnotations> = $r9;

        $r11 = r0.<androidx.test.services.events.TestCaseInfo: java.util.List methodAnnotations>;

        $r10 = <androidx.test.services.events.AnnotationInfo: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r11, $r10);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.services.events.TestCaseInfo: java.util.List classAnnotations> = $r12;

        $r14 = r0.<androidx.test.services.events.TestCaseInfo: java.util.List classAnnotations>;

        $r13 = <androidx.test.services.events.AnnotationInfo: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r14, $r13);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.List, java.util.List)
    {
        androidx.test.services.events.TestCaseInfo r0;
        java.lang.String r1, r2, $r6, $r8;
        java.util.List r3, r4, $r10, $r12;
        java.lang.Object $r5, $r7, $r9, $r11;

        r0 := @this: androidx.test.services.events.TestCaseInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "className cannot be null");

        $r6 = (java.lang.String) $r5;

        r0.<androidx.test.services.events.TestCaseInfo: java.lang.String className> = $r6;

        $r7 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "methodName cannot be null");

        $r8 = (java.lang.String) $r7;

        r0.<androidx.test.services.events.TestCaseInfo: java.lang.String methodName> = $r8;

        $r9 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "classAnnotations cannot be null");

        $r10 = (java.util.List) $r9;

        r0.<androidx.test.services.events.TestCaseInfo: java.util.List classAnnotations> = $r10;

        $r11 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "methodAnnotations cannot be null");

        $r12 = (java.util.List) $r11;

        r0.<androidx.test.services.events.TestCaseInfo: java.util.List methodAnnotations> = $r12;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.test.services.events.TestCaseInfo r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2, $r3;
        java.util.List $r4, $r5;

        r0 := @this: androidx.test.services.events.TestCaseInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.test.services.events.TestCaseInfo: java.lang.String className>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<androidx.test.services.events.TestCaseInfo: java.lang.String methodName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<androidx.test.services.events.TestCaseInfo: java.util.List methodAnnotations>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r4);

        $r5 = r0.<androidx.test.services.events.TestCaseInfo: java.util.List classAnnotations>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r5);

        return;
    }

androidx.test.services.events.TestCaseInfo$1
    public androidx.test.services.events.TestCaseInfo createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestCaseInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestCaseInfo $r2;

        r0 := @this: androidx.test.services.events.TestCaseInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.test.services.events.TestCaseInfo;

        specialinvoke $r2.<androidx.test.services.events.TestCaseInfo: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestCaseInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestCaseInfo $r2;

        r0 := @this: androidx.test.services.events.TestCaseInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.test.services.events.TestCaseInfo$1: androidx.test.services.events.TestCaseInfo createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.services.events.TestCaseInfo$1 r0;

        r0 := @this: androidx.test.services.events.TestCaseInfo$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.test.services.events.TestCaseInfo[] newArray(int)
    {
        androidx.test.services.events.TestCaseInfo$1 r0;
        int i0;
        androidx.test.services.events.TestCaseInfo[] $r1;

        r0 := @this: androidx.test.services.events.TestCaseInfo$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.test.services.events.TestCaseInfo)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.test.services.events.TestCaseInfo$1 r0;
        int i0;
        androidx.test.services.events.TestCaseInfo[] $r1;

        r0 := @this: androidx.test.services.events.TestCaseInfo$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.services.events.TestCaseInfo$1: androidx.test.services.events.TestCaseInfo[] newArray(int)>(i0);

        return $r1;
    }

