androidx.compose.frames.ModelMap
<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst>
    public void <init>()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        androidx.compose.frames.Record $r2;

        r0 := @this: androidx.compose.frames.ModelMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.compose.frames.ModelMap$MapContainer;

        specialinvoke $r1.<androidx.compose.frames.ModelMap$MapContainer: void <init>()>();

        $r2 = (androidx.compose.frames.Record) $r1;

        r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst> = $r2;

        return;
    }

    public androidx.compose.frames.Record getFirstFrameRecord()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.Record $r1;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst>;

        return $r1;
    }

    public void prependFrameRecord(androidx.compose.frames.Record)
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.Record r1, $r2;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: androidx.compose.frames.Record;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst>;

        interfaceinvoke r1.<androidx.compose.frames.Record: void setNext(androidx.compose.frames.Record)>($r2);

        r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst> = r1;

        return;
    }

    private final androidx.compose.frames.ModelMap$MapContainer getReadable()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.Framed $r1;
        androidx.compose.frames.Record $r2, $r3;
        androidx.compose.frames.ModelMap$MapContainer $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r2 = r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst>;

        $r1 = (androidx.compose.frames.Framed) r0;

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _readable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r2, $r1);

        $r4 = (androidx.compose.frames.ModelMap$MapContainer) $r3;

        return $r4;
    }

    private static void getReadable$annotations()
    {
        return;
    }

    private final androidx.compose.frames.ModelMap$MapContainer getWritable()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.Framed $r1;
        androidx.compose.frames.Record $r2, $r3;
        androidx.compose.frames.ModelMap$MapContainer $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r2 = r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.Record myFirst>;

        $r1 = (androidx.compose.frames.Framed) r0;

        $r3 = staticinvoke <androidx.compose.frames.FramesKt: androidx.compose.frames.Record _writable(androidx.compose.frames.Record,androidx.compose.frames.Framed)>($r2, $r1);

        $r4 = (androidx.compose.frames.ModelMap$MapContainer) $r3;

        return $r4;
    }

    private static void getWritable$annotations()
    {
        return;
    }

    public int getSize()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;
        int $i0;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1;
        androidx.compose.frames.ModelMap$MapContainer $r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r3 = $r2.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1;
        androidx.compose.frames.ModelMap$MapContainer $r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r3 = $r2.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1, $r4;
        androidx.compose.frames.ModelMap$MapContainer $r2;
        java.util.Map $r3;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r3 = $r2.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r4;
    }

    public boolean isEmpty()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set getEntries()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;
        java.util.Set $r3, $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Set access$immutableSet(java.util.Set)>($r3);

        return $r4;
    }

    public java.util.Set getKeys()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;
        java.util.Set $r3, $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Set access$immutableSet(java.util.Set)>($r3);

        return $r4;
    }

    public java.util.Collection getValues()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;
        java.util.Collection $r3, $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getReadable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Collection access$immutableCollection(java.util.Collection)>($r3);

        return $r4;
    }

    public void clear()
    {
        androidx.compose.frames.ModelMap r0;
        androidx.compose.frames.ModelMap$MapContainer $r1;
        java.util.Map $r2;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getWritable()>();

        $r2 = $r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1, r2, $r5;
        androidx.compose.frames.ModelMap$MapContainer $r3;
        java.util.Map $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getWritable()>();

        $r4 = $r3.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r5;
    }

    public void putAll(java.util.Map)
    {
        androidx.compose.frames.ModelMap r0;
        java.util.Map r1, $r3;
        androidx.compose.frames.ModelMap$MapContainer $r2;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "from");

        $r2 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getWritable()>();

        $r3 = $r2.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1, $r4;
        androidx.compose.frames.ModelMap$MapContainer $r2;
        java.util.Map $r3;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<androidx.compose.frames.ModelMap: androidx.compose.frames.ModelMap$MapContainer getWritable()>();

        $r3 = $r2.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r4;
    }

    public final volatile int size()
    {
        androidx.compose.frames.ModelMap r0;
        int $i0;

        r0 := @this: androidx.compose.frames.ModelMap;

        $i0 = virtualinvoke r0.<androidx.compose.frames.ModelMap: int getSize()>();

        return $i0;
    }

    public final volatile java.util.Set entrySet()
    {
        androidx.compose.frames.ModelMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = virtualinvoke r0.<androidx.compose.frames.ModelMap: java.util.Set getEntries()>();

        return $r1;
    }

    public final volatile java.util.Set keySet()
    {
        androidx.compose.frames.ModelMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = virtualinvoke r0.<androidx.compose.frames.ModelMap: java.util.Set getKeys()>();

        return $r1;
    }

    public final volatile java.util.Collection values()
    {
        androidx.compose.frames.ModelMap r0;
        java.util.Collection $r1;

        r0 := @this: androidx.compose.frames.ModelMap;

        $r1 = virtualinvoke r0.<androidx.compose.frames.ModelMap: java.util.Collection getValues()>();

        return $r1;
    }

    public final volatile java.lang.Object getOrDefault(java.lang.Object, java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1, r2, r3, $r4;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r1;

        if r3 != null goto label1;

     label1:
        $r4 = virtualinvoke r0.<androidx.compose.frames.ModelMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public final volatile boolean remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.frames.ModelMap r0;
        java.lang.Object r1, r2, r3, r4;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ModelMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r1;

        if r3 != null goto label1;

     label1:
        r4 = r2;

        if r4 != null goto label2;

     label2:
        $z0 = virtualinvoke r0.<androidx.compose.frames.ModelMap: boolean remove(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

androidx.compose.frames.ModelMap$MapContainer
<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>
    public void <init>()
    {
        androidx.compose.frames.ModelMap$MapContainer r0, r1;
        boolean z0;
        java.util.Map r2;
        java.util.LinkedHashMap $r3;

        r0 := @this: androidx.compose.frames.ModelMap$MapContainer;

        specialinvoke r0.<androidx.compose.frames.AbstractRecord: void <init>()>();

        r1 = r0;

        z0 = 0;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r2 = (java.util.Map) $r3;

        r1.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map> = r2;

        return;
    }

    public void assign(androidx.compose.frames.Record)
    {
        androidx.compose.frames.ModelMap$MapContainer r0, r2, r3, $r8, r9;
        androidx.compose.frames.Record r1, r7;
        boolean z0, z1, $z3;
        java.util.LinkedHashMap $r4;
        java.util.Map $r5, $r6;

        r0 := @this: androidx.compose.frames.ModelMap$MapContainer;

        r1 := @parameter0: androidx.compose.frames.Record;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r7 = r1;

        $z3 = r7 instanceof androidx.compose.frames.ModelMap$MapContainer;

        if $z3 == 0 goto label1;

        $r8 = (androidx.compose.frames.ModelMap$MapContainer) r7;

        goto label2;

     label1:
        $r8 = null;

     label2:
        r2 = $r8;

        if r2 != null goto label3;

        goto label4;

     label3:
        r9 = r2;

        z0 = 0;

        z1 = 0;

        r3 = r9;

        $r4 = new java.util.LinkedHashMap;

        $r5 = r3.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map>;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r5);

        $r6 = (java.util.Map) $r4;

        r0.<androidx.compose.frames.ModelMap$MapContainer: java.util.Map map> = $r6;

     label4:
        return;
    }

    public androidx.compose.frames.ModelMap$MapContainer create()
    {
        androidx.compose.frames.ModelMap$MapContainer r0, $r1;

        r0 := @this: androidx.compose.frames.ModelMap$MapContainer;

        $r1 = new androidx.compose.frames.ModelMap$MapContainer;

        specialinvoke $r1.<androidx.compose.frames.ModelMap$MapContainer: void <init>()>();

        return $r1;
    }

    public volatile androidx.compose.frames.Record create()
    {
        androidx.compose.frames.ModelMap$MapContainer r0, $r1;
        androidx.compose.frames.Record $r2;

        r0 := @this: androidx.compose.frames.ModelMap$MapContainer;

        $r1 = virtualinvoke r0.<androidx.compose.frames.ModelMap$MapContainer: androidx.compose.frames.ModelMap$MapContainer create()>();

        $r2 = (androidx.compose.frames.Record) $r1;

        return $r2;
    }

