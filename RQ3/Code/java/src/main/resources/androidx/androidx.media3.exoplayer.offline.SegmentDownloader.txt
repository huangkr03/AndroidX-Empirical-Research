androidx.media3.exoplayer.offline.SegmentDownloader
<androidx.media3.exoplayer.offline.SegmentDownloader: long DEFAULT_MAX_MERGED_SEGMENT_START_TIME_DIFF_MS>
<androidx.media3.exoplayer.offline.SegmentDownloader: int BUFFER_SIZE_BYTES>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>
<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList streamKeys>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheDataSource$Factory cacheDataSourceFactory>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>
<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>
<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.concurrent.Executor executor>
<androidx.media3.exoplayer.offline.SegmentDownloader: long maxMergedSegmentStartTimeDiffUs>
<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>
<androidx.media3.exoplayer.offline.SegmentDownloader: boolean isCanceled>
    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, r2, r3, r4, 20000L);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor, long)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;
        long l0, $l1;
        androidx.media3.common.MediaItem$LocalConfiguration $r5, $r7, $r11;
        android.net.Uri $r8;
        androidx.media3.datasource.DataSpec $r9;
        java.util.ArrayList $r10, $r18;
        java.util.List $r12;
        androidx.media3.datasource.cache.Cache $r13, $r15;
        java.lang.Object $r14;
        androidx.media3.datasource.cache.CacheKeyFactory $r16;
        androidx.media3.common.PriorityTaskManager $r17;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        l0 := @parameter4: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r8 = $r7.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r9 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec getCompressibleDataSpec(android.net.Uri)>($r8);

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec> = $r9;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser> = r2;

        $r10 = new java.util.ArrayList;

        $r11 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r12 = $r11.<androidx.media3.common.MediaItem$LocalConfiguration: java.util.List streamKeys>;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList streamKeys> = $r10;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheDataSource$Factory cacheDataSourceFactory> = r3;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.concurrent.Executor executor> = r4;

        $r13 = virtualinvoke r3.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.Cache getCache()>();

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        $r15 = (androidx.media3.datasource.cache.Cache) $r14;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache> = $r15;

        $r16 = virtualinvoke r3.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory getCacheKeyFactory()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory> = $r16;

        $r17 = virtualinvoke r3.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager getUpstreamPriorityTaskManager()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager> = $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables> = $r18;

        $l1 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>(l0);

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: long maxMergedSegmentStartTimeDiffUs> = $l1;

        return;
    }

    public final void download(androidx.media3.exoplayer.offline.Downloader$ProgressListener) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener r1;
        java.util.ArrayDeque r2, r3, r74, r75;
        java.util.List r4;
        int i0, $i2, $i3, $i4, $i10, $i11, i12, i15, i21, i22, $i23, i24, i25, i26;
        androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable r5, r6, r69, r77;
        java.lang.Throwable r7, r8, r9, $r46, $r57, $r58, r81;
        androidx.media3.common.PriorityTaskManager $r12, $r18, $r19, $r26, $r36, $r45, $r49, $r50;
        androidx.media3.datasource.cache.CacheDataSource$Factory $r13, $r27;
        androidx.media3.datasource.DataSpec $r14, r64;
        java.util.ArrayList $r15, $r17, $r20, $r23, $r31, $r32, $r43, $r47, $r48, $r51, $r54, $r73;
        boolean $z0, $z3, $z4, $z5, $z6, $z8, $z9, $z10;
        long $l1, $l9, l13, l14, l16, l17, $l18, l19;
        androidx.media3.datasource.cache.CacheKeyFactory $r16, $r39;
        java.lang.Object $r21, $r24, $r28, $r33, $r35, $r37, $r44, $r52, $r55, $r59;
        androidx.media3.common.util.RunnableFutureTask $r22, $r25, $r53, $r56;
        java.util.concurrent.Executor $r30;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r38, $r61, r72;
        byte $b5, $b6, $b7, $b8, $b20;
        androidx.media3.datasource.cache.Cache $r41, $r66;
        androidx.media3.datasource.cache.ContentMetadata $r42;
        java.io.IOException $r60;
        androidx.media3.datasource.cache.CacheDataSource r62, r70;
        androidx.media3.exoplayer.offline.FilterableManifest r63;
        java.lang.String r65;
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier $r67, r68, r76;
        byte[] r71;
        androidx.media3.datasource.DataSource r78, r79;
        java.lang.Runnable r80;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Downloader$ProgressListener;

        r74 = new java.util.ArrayDeque;

        specialinvoke r74.<java.util.ArrayDeque: void <init>()>();

        r2 = r74;

        r75 = new java.util.ArrayDeque;

        specialinvoke r75.<java.util.ArrayDeque: void <init>()>();

        r3 = r75;

        $r12 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r12 == null goto label01;

        $r45 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r45.<androidx.media3.common.PriorityTaskManager: void add(int)>(-1000);

     label01:
        $r13 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheDataSource$Factory cacheDataSourceFactory>;

        r62 = virtualinvoke $r13.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceForDownloading()>();

        $r14 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        r78 = (androidx.media3.datasource.DataSource) r62;

        r63 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.offline.FilterableManifest getManifest(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean)>(r78, $r14, 0);

        $r15 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList streamKeys>;

        $z0 = virtualinvoke $r15.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $r43 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList streamKeys>;

        $r44 = interfaceinvoke r63.<androidx.media3.exoplayer.offline.FilterableManifest: java.lang.Object copy(java.util.List)>($r43);

        r63 = (androidx.media3.exoplayer.offline.FilterableManifest) $r44;

     label02:
        r79 = (androidx.media3.datasource.DataSource) r62;

        r4 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.List getSegments(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.offline.FilterableManifest,boolean)>(r79, r63, 0);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r4);

        $r16 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $l1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: long maxMergedSegmentStartTimeDiffUs>;

        staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: void mergeSegments(java.util.List,androidx.media3.datasource.cache.CacheKeyFactory,long)>(r4, $r16, $l1);

        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        i12 = 0;

        l13 = 0L;

        l14 = 0L;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        i15 = $i2 - 1;

     label03:
        if i15 < 0 goto label08;

        $r37 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i15);

        $r38 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) $r37;

        r64 = $r38.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $r39 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        r65 = interfaceinvoke $r39.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>(r64);

        l16 = r64.<androidx.media3.datasource.DataSpec: long length>;

        $b5 = l16 cmp -1L;

        if $b5 != 0 goto label04;

        $r41 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r42 = interfaceinvoke $r41.<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.ContentMetadata getContentMetadata(java.lang.String)>(r65);

        l17 = staticinvoke <androidx.media3.datasource.cache.ContentMetadata: long getContentLength(androidx.media3.datasource.cache.ContentMetadata)>($r42);

        $b8 = l17 cmp -1L;

        if $b8 == 0 goto label04;

        $l9 = r64.<androidx.media3.datasource.DataSpec: long position>;

        l16 = l17 - $l9;

     label04:
        $r66 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $l18 = r64.<androidx.media3.datasource.DataSpec: long position>;

        l19 = interfaceinvoke $r66.<androidx.media3.datasource.cache.Cache: long getCachedBytes(java.lang.String,long,long)>(r65, $l18, l16);

        l14 = l14 + l19;

        $b20 = l16 cmp -1L;

        if $b20 == 0 goto label06;

        $b6 = l16 cmp l19;

        if $b6 != 0 goto label05;

        i12 = i12 + 1;

        interfaceinvoke r4.<java.util.List: java.lang.Object remove(int)>(i15);

     label05:
        $b7 = l13 cmp -1L;

        if $b7 == 0 goto label07;

        l13 = l13 + l16;

        goto label07;

     label06:
        l13 = -1L;

     label07:
        i15 = i15 + -1;

        goto label03;

     label08:
        if r1 == null goto label09;

        r76 = new androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        $r67 = r76;

        specialinvoke r76.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: void <init>(androidx.media3.exoplayer.offline.Downloader$ProgressListener,long,int,long,int)>(r1, l13, i0, l14, i12);

        goto label10;

     label09:
        $r67 = null;

     label10:
        r68 = $r67;

        virtualinvoke r2.<java.util.ArrayDeque: boolean addAll(java.util.Collection)>(r4);

     label11:
        $z10 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: boolean isCanceled>;

        if $z10 != 0 goto label23;

        $z3 = virtualinvoke r2.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z3 != 0 goto label23;

        $r26 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r26 == null goto label12;

        $r36 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r36.<androidx.media3.common.PriorityTaskManager: void proceed(int)>(-1000);

     label12:
        $z4 = virtualinvoke r3.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z4 != 0 goto label13;

        $r35 = virtualinvoke r3.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        r69 = (androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable) $r35;

        r70 = r69.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheDataSource dataSource>;

        r71 = r69.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: byte[] temporaryBuffer>;

        goto label14;

     label13:
        $r27 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheDataSource$Factory cacheDataSourceFactory>;

        r70 = virtualinvoke $r27.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceForDownloading()>();

        r71 = newarray (byte)[131072];

     label14:
        $r28 = virtualinvoke r2.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        r72 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) $r28;

        r77 = new androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable;

        specialinvoke r77.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: void <init>(androidx.media3.exoplayer.offline.SegmentDownloader$Segment,androidx.media3.datasource.cache.CacheDataSource,androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier,byte[])>(r72, r70, r68, r71);

        r5 = r77;

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void addActiveRunnable(androidx.media3.common.util.RunnableFutureTask)>(r5);

        $r30 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.concurrent.Executor executor>;

        r80 = (java.lang.Runnable) r5;

        interfaceinvoke $r30.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r80);

        $r31 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i4 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        i21 = $i4 - 1;

     label15:
        if i21 < 0 goto label22;

        $r32 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r6 = (androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable) $r33;

        $z5 = virtualinvoke r2.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z5 != 0 goto label16;

        $z6 = virtualinvoke r6.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: boolean isDone()>();

        if $z6 == 0 goto label21;

     label16:
        virtualinvoke r6.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: java.lang.Object get()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(int)>(i21);

        virtualinvoke r3.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r6);

     label17:
        goto label21;

     label18:
        $r57 := @caughtexception;

        r7 = $r57;

        $r58 = virtualinvoke r7.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r59 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r58);

        r8 = (java.lang.Throwable) $r59;

        $z8 = r8 instanceof androidx.media3.common.PriorityTaskManager$PriorityTooLowException;

        if $z8 == 0 goto label19;

        $r61 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$Segment segment>;

        virtualinvoke r2.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r61);

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(int)>(i21);

        virtualinvoke r3.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r6);

        goto label21;

     label19:
        $z9 = r8 instanceof java.io.IOException;

        if $z9 == 0 goto label20;

        $r60 = (java.io.IOException) r8;

        r81 = (java.lang.Throwable) $r60;

        throw r81;

     label20:
        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r8);

     label21:
        i21 = i21 + -1;

        goto label15;

     label22:
        virtualinvoke r5.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: void blockUntilStarted()>();

        goto label11;

     label23:
        i22 = 0;

     label24:
        $r73 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i23 = virtualinvoke $r73.<java.util.ArrayList: int size()>();

        if i22 >= $i23 goto label25;

        $r23 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        $r25 = (androidx.media3.common.util.RunnableFutureTask) $r24;

        virtualinvoke $r25.<androidx.media3.common.util.RunnableFutureTask: boolean cancel(boolean)>(1);

        i22 = i22 + 1;

        goto label24;

     label25:
        $r17 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i24 = $i3 - 1;

     label26:
        if i24 < 0 goto label27;

        $r20 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        $r22 = (androidx.media3.common.util.RunnableFutureTask) $r21;

        virtualinvoke $r22.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(int)>(i24);

        i24 = i24 + -1;

        goto label26;

     label27:
        $r18 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r18 == null goto label35;

        $r19 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r19.<androidx.media3.common.PriorityTaskManager: void remove(int)>(-1000);

        goto label35;

     label28:
        $r46 := @caughtexception;

        r9 = $r46;

     label29:
        i25 = 0;

     label30:
        $r47 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i10 = virtualinvoke $r47.<java.util.ArrayList: int size()>();

        if i25 >= $i10 goto label31;

        $r54 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r55 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r56 = (androidx.media3.common.util.RunnableFutureTask) $r55;

        virtualinvoke $r56.<androidx.media3.common.util.RunnableFutureTask: boolean cancel(boolean)>(1);

        i25 = i25 + 1;

        goto label30;

     label31:
        $r48 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i11 = virtualinvoke $r48.<java.util.ArrayList: int size()>();

        i26 = $i11 - 1;

     label32:
        if i26 < 0 goto label33;

        $r51 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r52 = virtualinvoke $r51.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        $r53 = (androidx.media3.common.util.RunnableFutureTask) $r52;

        virtualinvoke $r53.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(int)>(i26);

        i26 = i26 + -1;

        goto label32;

     label33:
        $r49 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r49 == null goto label34;

        $r50 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r50.<androidx.media3.common.PriorityTaskManager: void remove(int)>(-1000);

     label34:
        throw r9;

     label35:
        return;

        catch java.util.concurrent.ExecutionException from label16 to label17 with label18;
        catch java.lang.Throwable from label01 to label23 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public void cancel()
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        java.util.ArrayList r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r8;
        int $i0, i1;
        java.lang.Object $r6;
        androidx.media3.common.util.RunnableFutureTask $r7;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        $r3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.media3.exoplayer.offline.SegmentDownloader: boolean isCanceled> = 1;

        i1 = 0;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (androidx.media3.common.util.RunnableFutureTask) $r6;

        virtualinvoke $r7.<androidx.media3.common.util.RunnableFutureTask: boolean cancel(boolean)>(1);

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void remove()
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.datasource.cache.CacheDataSource r1;
        java.util.List r2;
        java.lang.Throwable r3, $r16, $r21, $r27, r33, r34;
        androidx.media3.datasource.cache.CacheDataSource$Factory $r4;
        androidx.media3.datasource.DataSpec $r5, $r6, $r14, $r17, $r23, $r28;
        int $i0, i1;
        androidx.media3.datasource.cache.CacheKeyFactory $r7, $r11, $r18, $r24, $r29;
        androidx.media3.datasource.cache.Cache $r8, $r10, $r19, $r25, $r30;
        java.lang.String $r9, $r15, $r20, $r26, $r31;
        java.lang.Object $r12;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r13;
        java.lang.Thread $r22;
        androidx.media3.exoplayer.offline.FilterableManifest r32;
        androidx.media3.datasource.DataSource r35, r36;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheDataSource$Factory cacheDataSourceFactory>;

        r1 = virtualinvoke $r4.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceForRemovingDownload()>();

     label1:
        $r5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        r35 = (androidx.media3.datasource.DataSource) r1;

        r32 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.offline.FilterableManifest getManifest(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean)>(r35, $r5, 1);

        r36 = (androidx.media3.datasource.DataSource) r1;

        r2 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.List getSegments(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.offline.FilterableManifest,boolean)>(r36, r32, 1);

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r10 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r11 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) $r12;

        $r14 = $r13.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $r15 = interfaceinvoke $r11.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r14);

        interfaceinvoke $r10.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r15);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r7 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r6 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        $r9 = interfaceinvoke $r7.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r6);

        interfaceinvoke $r8.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r9);

        goto label9;

     label4:
        $r21 := @caughtexception;

        r33 = $r21;

        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r22.<java.lang.Thread: void interrupt()>();

     label5:
        $r25 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r24 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r23 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        $r26 = interfaceinvoke $r24.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r23);

        interfaceinvoke $r25.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r26);

        goto label9;

     label6:
        $r27 := @caughtexception;

        r34 = $r27;

        $r30 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r29 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r28 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        $r31 = interfaceinvoke $r29.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r28);

        interfaceinvoke $r30.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r31);

        goto label9;

     label7:
        $r16 := @caughtexception;

        r3 = $r16;

     label8:
        $r19 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.Cache cache>;

        $r18 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r17 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec manifestDataSpec>;

        $r20 = interfaceinvoke $r18.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r17);

        interfaceinvoke $r19.<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>($r20);

        throw r3;

     label9:
        return;

        catch java.lang.InterruptedException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected final androidx.media3.exoplayer.offline.FilterableManifest getManifest(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, boolean) throws java.lang.InterruptedException, java.io.IOException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        boolean z0;
        androidx.media3.exoplayer.offline.SegmentDownloader$1 $r3;
        java.lang.Object $r4;
        androidx.media3.exoplayer.offline.FilterableManifest $r5;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        z0 := @parameter2: boolean;

        $r3 = new androidx.media3.exoplayer.offline.SegmentDownloader$1;

        specialinvoke $r3.<androidx.media3.exoplayer.offline.SegmentDownloader$1: void <init>(androidx.media3.exoplayer.offline.SegmentDownloader,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec)>(r0, r1, r2);

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.lang.Object execute(androidx.media3.common.util.RunnableFutureTask,boolean)>($r3, z0);

        $r5 = (androidx.media3.exoplayer.offline.FilterableManifest) $r4;

        return $r5;
    }

    protected final java.lang.Object execute(androidx.media3.common.util.RunnableFutureTask, boolean) throws java.lang.InterruptedException, java.io.IOException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.common.util.RunnableFutureTask r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable r2, $r8, $r9, $r12, $r13, $r14, r17, r18, r20, r21, r23, r25;
        androidx.media3.common.PriorityTaskManager $r3, $r5;
        java.util.concurrent.Executor $r4;
        java.lang.Object $r7, $r10, $r15, r19;
        java.io.IOException $r11, $r16;
        java.lang.InterruptedException r22;
        java.lang.Runnable r24;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.common.util.RunnableFutureTask;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label05;

        virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: void run()>();

     label01:
        $r7 = virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: java.lang.Object get()>();

     label02:
        return $r7;

     label03:
        $r13 := @caughtexception;

        r17 = $r13;

        $r14 = virtualinvoke r17.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        r18 = (java.lang.Throwable) $r15;

        $z3 = r18 instanceof java.io.IOException;

        if $z3 == 0 goto label04;

        $r16 = (java.io.IOException) r18;

        r23 = (java.lang.Throwable) $r16;

        throw r23;

     label04:
        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r17);

     label05:
        $z4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: boolean isCanceled>;

        if $z4 == 0 goto label06;

        r22 = new java.lang.InterruptedException;

        specialinvoke r22.<java.lang.InterruptedException: void <init>()>();

        throw r22;

     label06:
        $r3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        if $r3 == null goto label07;

        $r5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.common.PriorityTaskManager priorityTaskManager>;

        virtualinvoke $r5.<androidx.media3.common.PriorityTaskManager: void proceed(int)>(-1000);

     label07:
        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void addActiveRunnable(androidx.media3.common.util.RunnableFutureTask)>(r1);

        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.concurrent.Executor executor>;

        r24 = (java.lang.Runnable) r1;

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r24);

     label08:
        r19 = virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: java.lang.Object get()>();

     label09:
        virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(androidx.media3.common.util.RunnableFutureTask)>(r1);

        return r19;

     label10:
        $r8 := @caughtexception;

        r20 = $r8;

        $r9 = virtualinvoke r20.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        r21 = (java.lang.Throwable) $r10;

        $z1 = r21 instanceof androidx.media3.common.PriorityTaskManager$PriorityTooLowException;

        if $z1 == 0 goto label11;

        goto label13;

     label11:
        $z2 = r21 instanceof java.io.IOException;

        if $z2 == 0 goto label12;

        $r11 = (java.io.IOException) r21;

        r25 = (java.lang.Throwable) $r11;

        throw r25;

     label12:
        staticinvoke <androidx.media3.common.util.Util: void sneakyThrow(java.lang.Throwable)>(r20);

     label13:
        virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(androidx.media3.common.util.RunnableFutureTask)>(r1);

        goto label16;

     label14:
        $r12 := @caughtexception;

        r2 = $r12;

     label15:
        virtualinvoke r1.<androidx.media3.common.util.RunnableFutureTask: void blockUntilFinished()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void removeActiveRunnable(androidx.media3.common.util.RunnableFutureTask)>(r1);

        throw r2;

     label16:
        goto label05;

        catch java.util.concurrent.ExecutionException from label01 to label02 with label03;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.List getSegments(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.offline.FilterableManifest,boolean)>
    protected static androidx.media3.datasource.DataSpec getCompressibleDataSpec(android.net.Uri)
    {
        android.net.Uri r0;
        androidx.media3.datasource.DataSpec$Builder $r1, $r2, $r3;
        androidx.media3.datasource.DataSpec $r4;

        r0 := @parameter0: android.net.Uri;

        $r1 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke $r1.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>(r0);

        $r3 = virtualinvoke $r2.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setFlags(int)>(1);

        $r4 = virtualinvoke $r3.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        return $r4;
    }

    private void addActiveRunnable(androidx.media3.common.util.RunnableFutureTask) throws java.lang.InterruptedException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.common.util.RunnableFutureTask r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        java.lang.InterruptedException $r6;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.common.util.RunnableFutureTask;

        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: boolean isCanceled>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.InterruptedException;

        specialinvoke $r6.<java.lang.InterruptedException: void <init>()>();

        throw $r6;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void removeActiveRunnable(androidx.media3.common.util.RunnableFutureTask)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.common.util.RunnableFutureTask r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        r1 := @parameter0: androidx.media3.common.util.RunnableFutureTask;

        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void removeActiveRunnable(int)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        int i0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r6;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: java.util.ArrayList activeRunnables>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void mergeSegments(java.util.List, androidx.media3.datasource.cache.CacheKeyFactory, long)
    {
        java.util.List r0;
        androidx.media3.datasource.cache.CacheKeyFactory r1;
        long l0, l1, $l5, $l6, $l7, $l9, $l11, $l12, $l14, $l17;
        java.util.HashMap r2, $r8;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment r3, r6, $r23, $r25;
        java.lang.String r4;
        java.lang.Integer r5, $r22, $r26;
        androidx.media3.datasource.DataSpec r7, $r10, $r15, $r16, $r17, $r18, $r19, $r20;
        int $i2, $i3, $i4, $i13, i15, i16;
        java.lang.Object $r9, $r11, $r12, $r21;
        byte $b8, $b10;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.media3.datasource.cache.CacheKeyFactory;

        l0 := @parameter2: long;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

        i15 = 0;

        i16 = 0;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i16 >= $i2 goto label9;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i16);

        r3 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) $r9;

        $r10 = r3.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        r4 = interfaceinvoke r1.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>($r10);

        $r11 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.Integer) $r11;

        if r5 != null goto label2;

        $r25 = null;

        goto label3;

     label2:
        $i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i4);

        $r25 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) $r12;

     label3:
        r6 = $r25;

        if r6 == null goto label4;

        $l7 = r3.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>;

        $l5 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>;

        $l6 = $l5 + l0;

        $b8 = $l7 cmp $l6;

        if $b8 > 0 goto label4;

        $r16 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $r15 = r3.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: boolean canMergeSegments(androidx.media3.datasource.DataSpec,androidx.media3.datasource.DataSpec)>($r16, $r15);

        if $z0 != 0 goto label5;

     label4:
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r26);

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i15, r3);

        i15 = i15 + 1;

        goto label8;

     label5:
        $r17 = r3.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $l9 = $r17.<androidx.media3.datasource.DataSpec: long length>;

        $b10 = $l9 cmp -1L;

        if $b10 != 0 goto label6;

        $l17 = -1L;

        goto label7;

     label6:
        $r18 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $l12 = $r18.<androidx.media3.datasource.DataSpec: long length>;

        $r19 = r3.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        $l11 = $r19.<androidx.media3.datasource.DataSpec: long length>;

        $l17 = $l12 + $l11;

     label7:
        l1 = $l17;

        $r20 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        r7 = virtualinvoke $r20.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec subrange(long,long)>(0L, l1);

        $r21 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r22 = (java.lang.Integer) $r21;

        $i13 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        $r23 = new androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        $l14 = r6.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>;

        specialinvoke $r23.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: void <init>(long,androidx.media3.datasource.DataSpec)>($l14, r7);

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i13, $r23);

     label8:
        i16 = i16 + 1;

        goto label1;

     label9:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        staticinvoke <androidx.media3.common.util.Util: void removeRange(java.util.List,int,int)>(r0, i15, $i3);

        return;
    }

    private static boolean canMergeSegments(androidx.media3.datasource.DataSpec, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.DataSpec r0, r1;
        android.net.Uri $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l2, $l3, $l4, $l5;
        byte $b1, $b6;
        java.lang.String $r4, $r5;
        int $i7, $i8, $i9, $i10;
        java.util.Map $r6, $r7;

        r0 := @parameter0: androidx.media3.datasource.DataSpec;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        $r3 = r0.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r2 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $z0 = virtualinvoke $r3.<android.net.Uri: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $l0 = r0.<androidx.media3.datasource.DataSpec: long length>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l3 = r0.<androidx.media3.datasource.DataSpec: long position>;

        $l2 = r0.<androidx.media3.datasource.DataSpec: long length>;

        $l5 = $l3 + $l2;

        $l4 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label1;

        $r5 = r0.<androidx.media3.datasource.DataSpec: java.lang.String key>;

        $r4 = r1.<androidx.media3.datasource.DataSpec: java.lang.String key>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label1;

        $i8 = r0.<androidx.media3.datasource.DataSpec: int flags>;

        $i7 = r1.<androidx.media3.datasource.DataSpec: int flags>;

        if $i8 != $i7 goto label1;

        $i10 = r0.<androidx.media3.datasource.DataSpec: int httpMethod>;

        $i9 = r1.<androidx.media3.datasource.DataSpec: int httpMethod>;

        if $i10 != $i9 goto label1;

        $r7 = r0.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        $r6 = r1.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        $z2 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static androidx.media3.exoplayer.upstream.ParsingLoadable$Parser access$000(androidx.media3.exoplayer.offline.SegmentDownloader)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.SegmentDownloader;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>;

        return $r1;
    }

androidx.media3.exoplayer.offline.SegmentDownloader$1
<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSource val$dataSource>
<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSpec val$dataSpec>
<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.exoplayer.offline.SegmentDownloader this$0>
    void <init>(androidx.media3.exoplayer.offline.SegmentDownloader, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$1 r0;
        androidx.media3.exoplayer.offline.SegmentDownloader r1;
        androidx.media3.datasource.DataSource r2;
        androidx.media3.datasource.DataSpec r3;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$1;

        r1 := @parameter0: androidx.media3.exoplayer.offline.SegmentDownloader;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        r3 := @parameter2: androidx.media3.datasource.DataSpec;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.exoplayer.offline.SegmentDownloader this$0> = r1;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSource val$dataSource> = r2;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSpec val$dataSpec> = r3;

        specialinvoke r0.<androidx.media3.common.util.RunnableFutureTask: void <init>()>();

        return;
    }

    protected androidx.media3.exoplayer.offline.FilterableManifest doWork() throws java.io.IOException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$1 r0;
        androidx.media3.exoplayer.offline.SegmentDownloader $r1;
        androidx.media3.datasource.DataSource $r2;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser $r3;
        androidx.media3.datasource.DataSpec $r4;
        java.lang.Object $r5;
        androidx.media3.exoplayer.offline.FilterableManifest $r6;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$1;

        $r2 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSource val$dataSource>;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.exoplayer.offline.SegmentDownloader this$0>;

        $r3 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser access$000(androidx.media3.exoplayer.offline.SegmentDownloader)>($r1);

        $r4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.datasource.DataSpec val$dataSpec>;

        $r5 = staticinvoke <androidx.media3.exoplayer.upstream.ParsingLoadable: java.lang.Object load(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.DataSpec,int)>($r2, $r3, $r4, 4);

        $r6 = (androidx.media3.exoplayer.offline.FilterableManifest) $r5;

        return $r6;
    }

    protected volatile java.lang.Object doWork() throws java.lang.Exception
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$1 r0;
        androidx.media3.exoplayer.offline.FilterableManifest $r1;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$1;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader$1: androidx.media3.exoplayer.offline.FilterableManifest doWork()>();

        return $r1;
    }

androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier
<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>
<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>
<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int totalSegments>
<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded>
<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int segmentsDownloaded>
    public void <init>(androidx.media3.exoplayer.offline.Downloader$ProgressListener, long, int, long, int)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier r0;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener r1;
        long l0, l2;
        int i1, i3;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Downloader$ProgressListener;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener> = r1;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength> = l0;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int totalSegments> = i1;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded> = l2;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int segmentsDownloaded> = i3;

        return;
    }

    public void onProgress(long, long, long)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier r0;
        long l0, l1, l2, $l3, $l4, $l5, $l6;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener $r1;
        float $f0;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $l3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded>;

        $l4 = $l3 + l2;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded> = $l4;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>;

        $l5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>;

        $l6 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded>;

        $f0 = specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: float getPercentDownloaded()>();

        interfaceinvoke $r1.<androidx.media3.exoplayer.offline.Downloader$ProgressListener: void onProgress(long,long,float)>($l5, $l6, $f0);

        return;
    }

    public void onSegmentDownloaded()
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier r0;
        int $i0, $i1;
        androidx.media3.exoplayer.offline.Downloader$ProgressListener $r1;
        long $l2, $l3;
        float $f0;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        $i0 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int segmentsDownloaded>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int segmentsDownloaded> = $i1;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: androidx.media3.exoplayer.offline.Downloader$ProgressListener progressListener>;

        $l2 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>;

        $l3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded>;

        $f0 = specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: float getPercentDownloaded()>();

        interfaceinvoke $r1.<androidx.media3.exoplayer.offline.Downloader$ProgressListener: void onProgress(long,long,float)>($l2, $l3, $f0);

        return;
    }

    private float getPercentDownloaded()
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier r0;
        long $l0, $l5, $l7, $l8;
        byte $b1, $b6;
        int $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        $l0 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l5 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label1;

        $l7 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long bytesDownloaded>;

        $f4 = (float) $l7;

        $f6 = $f4 * 100.0F;

        $l8 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: long contentLength>;

        $f5 = (float) $l8;

        $f7 = $f6 / $f5;

        return $f7;

     label1:
        $i2 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int totalSegments>;

        if $i2 == 0 goto label2;

        $i3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int segmentsDownloaded>;

        $f0 = (float) $i3;

        $f2 = $f0 * 100.0F;

        $i4 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: int totalSegments>;

        $f1 = (float) $i4;

        $f3 = $f2 / $f1;

        return $f3;

     label2:
        return -1.0F;
    }

androidx.media3.exoplayer.offline.SegmentDownloader$Segment
<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>
<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>
    public void <init>(long, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment r0;
        long l0;
        androidx.media3.datasource.DataSpec r1;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs> = l0;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec> = r1;

        return;
    }

    public int compareTo(androidx.media3.exoplayer.offline.SegmentDownloader$Segment)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        r1 := @parameter0: androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        $l1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>;

        $l0 = r1.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: long startTimeUs>;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int compareLong(long,long)>($l1, $l0);

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.offline.SegmentDownloader$Segment) r1;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: int compareTo(androidx.media3.exoplayer.offline.SegmentDownloader$Segment)>($r2);

        return $i0;
    }

androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable
<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$Segment segment>
<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheDataSource dataSource>
<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier progressNotifier>
<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: byte[] temporaryBuffer>
<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheWriter cacheWriter>
    public void <init>(androidx.media3.exoplayer.offline.SegmentDownloader$Segment, androidx.media3.datasource.cache.CacheDataSource, androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier, byte[])
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable r0;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment r1;
        androidx.media3.datasource.cache.CacheDataSource r2;
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier r3;
        byte[] r4;
        androidx.media3.datasource.cache.CacheWriter $r5;
        androidx.media3.datasource.DataSpec $r6;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable;

        r1 := @parameter0: androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource;

        r3 := @parameter2: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier;

        r4 := @parameter3: byte[];

        specialinvoke r0.<androidx.media3.common.util.RunnableFutureTask: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$Segment segment> = r1;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheDataSource dataSource> = r2;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier progressNotifier> = r3;

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: byte[] temporaryBuffer> = r4;

        $r5 = new androidx.media3.datasource.cache.CacheWriter;

        $r6 = r1.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r5.<androidx.media3.datasource.cache.CacheWriter: void <init>(androidx.media3.datasource.cache.CacheDataSource,androidx.media3.datasource.DataSpec,byte[],androidx.media3.datasource.cache.CacheWriter$ProgressListener)>(r2, $r6, r4, r3);

        r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheWriter cacheWriter> = $r5;

        return;
    }

    protected java.lang.Void doWork() throws java.io.IOException
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable r0;
        androidx.media3.datasource.cache.CacheWriter $r1;
        androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheWriter cacheWriter>;

        virtualinvoke $r1.<androidx.media3.datasource.cache.CacheWriter: void cache()>();

        $r2 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier progressNotifier>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier progressNotifier>;

        virtualinvoke $r3.<androidx.media3.exoplayer.offline.SegmentDownloader$ProgressNotifier: void onSegmentDownloaded()>();

     label1:
        return null;
    }

    protected void cancelWork()
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable r0;
        androidx.media3.datasource.cache.CacheWriter $r1;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable;

        $r1 = r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: androidx.media3.datasource.cache.CacheWriter cacheWriter>;

        virtualinvoke $r1.<androidx.media3.datasource.cache.CacheWriter: void cancel()>();

        return;
    }

    protected volatile java.lang.Object doWork() throws java.lang.Exception
    {
        androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable r0;
        java.lang.Void $r1;

        r0 := @this: androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader$SegmentDownloadRunnable: java.lang.Void doWork()>();

        return $r1;
    }

