kotlin.SafePublicationLazyImpl
<kotlin.SafePublicationLazyImpl: kotlin.SafePublicationLazyImpl$Companion Companion>
<kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>
<kotlin.SafePublicationLazyImpl: java.lang.Object _value>
<kotlin.SafePublicationLazyImpl: java.lang.Object 'final'>
<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer>
    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;
        kotlin.SafePublicationLazyImpl$Companion $r1;

        $r1 = new kotlin.SafePublicationLazyImpl$Companion;

        specialinvoke $r1.<kotlin.SafePublicationLazyImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.SafePublicationLazyImpl: kotlin.SafePublicationLazyImpl$Companion Companion> = $r1;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlin/SafePublicationLazyImpl;", class "Ljava/lang/Object;", "_value");

        <kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater> = $r0;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function0)
    {
        kotlin.SafePublicationLazyImpl $r0;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.UNINITIALIZED_VALUE $r2;

        $r0 := @this: kotlin.SafePublicationLazyImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "initializer");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer> = $r1;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value> = $r2;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object 'final'> = $r2;

        return;
    }

    private final java.lang.Object writeReplace()
    {
        kotlin.SafePublicationLazyImpl $r0;
        kotlin.InitializedLazyImpl $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlin.SafePublicationLazyImpl;

        $r1 = new kotlin.InitializedLazyImpl;

        $r2 = virtualinvoke $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object getValue()>();

        specialinvoke $r1.<kotlin.InitializedLazyImpl: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public java.lang.Object getValue()
    {
        kotlin.SafePublicationLazyImpl $r0;
        kotlin.UNINITIALIZED_VALUE $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function0 $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        boolean $z0;

        $r0 := @this: kotlin.SafePublicationLazyImpl;

        $r2 = $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if $r2 == $r1 goto label1;

        return $r2;

     label1:
        $r3 = $r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer>;

        if $r3 == null goto label2;

        $r2 = interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = <kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        $z0 = staticinvoke <kotlin.SafePublicationLazyImpl$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r0, $r1, $r2);

        if $z0 == 0 goto label2;

        $r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer> = null;

        return $r2;

     label2:
        $r2 = $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        return $r2;
    }

    public boolean isInitialized()
    {
        kotlin.SafePublicationLazyImpl $r0;
        kotlin.UNINITIALIZED_VALUE $r1;
        java.lang.Object $r2;

        $r0 := @this: kotlin.SafePublicationLazyImpl;

        $r2 = $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlin.SafePublicationLazyImpl $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: kotlin.SafePublicationLazyImpl;

        $z0 = virtualinvoke $r0.<kotlin.SafePublicationLazyImpl: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<kotlin.SafePublicationLazyImpl: java.lang.Object getValue()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        return "Lazy value not initialized yet.";
    }

kotlin.SafePublicationLazyImpl$$ExternalSyntheticBackportWithForwarding0
    public static boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1, $r2, $r4;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        boolean $z0;

        $r3 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

     label1:
        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>($r0, $r1, $r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object get(java.lang.Object)>($r0);

        if $r4 == $r1 goto label1;

        return 0;
    }

kotlin.SafePublicationLazyImpl$Companion
    private void <init>()
    {
        kotlin.SafePublicationLazyImpl$Companion $r0;

        $r0 := @this: kotlin.SafePublicationLazyImpl$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.SafePublicationLazyImpl$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.SafePublicationLazyImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.SafePublicationLazyImpl$Companion: void <init>()>();

        return;
    }

