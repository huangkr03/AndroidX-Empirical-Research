androidx.room.compiler.processing.JavaPoetExtKt
<androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.ClassName JAVA_NONE_TYPE_NAME>
    public static final com.squareup.javapoet.ClassName getJAVA_NONE_TYPE_NAME()
    {
        com.squareup.javapoet.ClassName $r0;

        $r0 = <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.ClassName JAVA_NONE_TYPE_NAME>;

        return $r0;
    }

    public static final com.squareup.javapoet.AnnotationSpec toAnnotationSpec(androidx.room.compiler.processing.XAnnotation)
    {
        androidx.room.compiler.processing.XAnnotation $r0;
        com.squareup.javapoet.AnnotationSpec$Builder r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.room.compiler.processing.XAnnotationValue r5;
        com.squareup.javapoet.ClassName $r6;
        java.util.List $r7;
        boolean $z2;
        com.squareup.javapoet.AnnotationSpec $r8;

        $r0 := @parameter0: androidx.room.compiler.processing.XAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r6 = interfaceinvoke $r0.<androidx.room.compiler.processing.XAnnotation: com.squareup.javapoet.ClassName getClassName()>();

        r1 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r6);

        $r7 = interfaceinvoke $r0.<androidx.room.compiler.processing.XAnnotation: java.util.List getAnnotationValues()>();

        $r2 = (java.lang.Iterable) $r7;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "builder");

        staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: void addAnnotationValue(com.squareup.javapoet.AnnotationSpec$Builder,androidx.room.compiler.processing.XAnnotationValue)>(r1, r5);

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "builder.build()");

        return $r8;
    }

    private static final void addAnnotationValue(com.squareup.javapoet.AnnotationSpec$Builder, androidx.room.compiler.processing.XAnnotationValue)
    {
        com.squareup.javapoet.AnnotationSpec$Builder $r0;
        androidx.room.compiler.processing.XAnnotationValue r1, r2, r6;
        java.util.Iterator r4;
        java.lang.Object r5, $r7, $r11;
        java.lang.String $r8, $r10, $r13, $r14, $r16, $r19, $r20, $r22, $r27, $r33, $r35, $r42, $r45, $r48, $r51, $r52, $r53;
        java.lang.CharSequence $r9;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        char $c0;
        float $f0;
        java.lang.Float $r17;
        androidx.room.compiler.processing.XType $r23;
        androidx.room.compiler.codegen.XTypeName $r24;
        com.squareup.javapoet.TypeName $r25;
        androidx.room.compiler.processing.XEnumEntry $r28, $r32;
        androidx.room.compiler.processing.XEnumTypeElement $r29;
        androidx.room.compiler.codegen.XClassName $r30;
        com.squareup.javapoet.ClassName $r31;
        androidx.room.compiler.processing.XAnnotation $r36;
        com.squareup.javapoet.AnnotationSpec $r37;
        java.util.List $r39;
        java.lang.StringBuilder $r40, $r41, $r43, $r46, $r47, $r49;
        java.lang.IllegalArgumentException $r44, $r50;
        java.lang.Iterable $r54;
        java.lang.Object[] $r55, $r56, $r57, $r58, $r59, $r60, $r61;

        $r0 := @parameter0: com.squareup.javapoet.AnnotationSpec$Builder;

        r1 := @parameter1: androidx.room.compiler.processing.XAnnotationValue;

        r2 = r1;

        $r7 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        if $r7 != null goto label01;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value == null, constant non-null value expected for ");

        $r48 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = new java.lang.IllegalArgumentException;

        $r51 = virtualinvoke $r52.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r51);

        throw $r50;

     label01:
        $r8 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r9 = (java.lang.CharSequence) $r8;

        $z2 = staticinvoke <javax.lang.model.SourceVersion: boolean isName(java.lang.CharSequence)>($r9);

        if $z2 != 0 goto label02;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a valid name: ");

        $r42 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r53 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = virtualinvoke $r53.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);

        throw $r44;

     label02:
        $z3 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasListValue()>();

        if $z3 == 0 goto label05;

        $r39 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r54 = (java.lang.Iterable) $r39;

        r4 = interfaceinvoke $r54.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z10 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label04;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.XAnnotationValue) r5;

        staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: void addAnnotationValue(com.squareup.javapoet.AnnotationSpec$Builder,androidx.room.compiler.processing.XAnnotationValue)>($r0, r6);

        goto label03;

     label04:
        goto label12;

     label05:
        $z4 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasAnnotationValue()>();

        if $z4 == 0 goto label06;

        $r35 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r55 = newarray (java.lang.Object)[1];

        $r36 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XAnnotation asAnnotation()>();

        $r37 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.AnnotationSpec toAnnotationSpec(androidx.room.compiler.processing.XAnnotation)>($r36);

        $r55[0] = $r37;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r35, "$L", $r55);

        goto label12;

     label06:
        $z5 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasEnumValue()>();

        if $z5 == 0 goto label07;

        $r27 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r56 = newarray (java.lang.Object)[2];

        $r28 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XEnumEntry asEnum()>();

        $r29 = interfaceinvoke $r28.<androidx.room.compiler.processing.XEnumEntry: androidx.room.compiler.processing.XEnumTypeElement getEnclosingElement()>();

        $r30 = interfaceinvoke $r29.<androidx.room.compiler.processing.XEnumTypeElement: androidx.room.compiler.codegen.XClassName asClassName()>();

        $r31 = virtualinvoke $r30.<androidx.room.compiler.codegen.XClassName: com.squareup.javapoet.ClassName getJava$room_compiler_processing()>();

        $r56[0] = $r31;

        $r32 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XEnumEntry asEnum()>();

        $r33 = interfaceinvoke $r32.<androidx.room.compiler.processing.XEnumEntry: java.lang.String getName()>();

        $r56[1] = $r33;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r27, "$T.$L", $r56);

        goto label12;

     label07:
        $z6 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasTypeValue()>();

        if $z6 == 0 goto label08;

        $r22 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r57 = newarray (java.lang.Object)[1];

        $r23 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XType asType()>();

        $r24 = interfaceinvoke $r23.<androidx.room.compiler.processing.XType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r25 = virtualinvoke $r24.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r57[0] = $r25;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r22, "$T.class", $r57);

        goto label12;

     label08:
        $z7 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasStringValue()>();

        if $z7 == 0 goto label09;

        $r19 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r58 = newarray (java.lang.Object)[1];

        $r20 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String asString()>();

        $r58[0] = $r20;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "$S", $r58);

        goto label12;

     label09:
        $z8 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasFloatValue()>();

        if $z8 == 0 goto label10;

        $r16 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r59 = newarray (java.lang.Object)[1];

        $f0 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: float asFloat()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r59[0] = $r17;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r16, "$Lf", $r59);

        goto label12;

     label10:
        $z9 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: boolean hasCharValue()>();

        if $z9 == 0 goto label11;

        $r13 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r60 = newarray (java.lang.Object)[1];

        $c0 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: char asChar()>();

        $r14 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: java.lang.String characterLiteralWithoutSingleQuotes(char)>($c0);

        $r60[0] = $r14;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r13, "\'$L\'", $r60);

        goto label12;

     label11:
        $r10 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        $r61 = newarray (java.lang.Object)[1];

        $r11 = interfaceinvoke r2.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        $r61[0] = $r11;

        virtualinvoke $r0.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "$L", $r61);

     label12:
        return;
    }

    private static final java.lang.String characterLiteralWithoutSingleQuotes(char)
    {
        char c0, c1;
        java.lang.String r0, $r4;
        boolean $z0;
        kotlin.jvm.internal.StringCompanionObject $r1;
        java.lang.Integer $r2;
        int $i2;
        java.lang.Object[] $r3, r5, r6;

        c0 := @parameter0: char;

        c1 = c0;

        if c1 != 8 goto label01;

        $r4 = "\\b";

        goto label10;

     label01:
        if c1 != 9 goto label02;

        $r4 = "\\t";

        goto label10;

     label02:
        if c1 != 10 goto label03;

        $r4 = "\\n";

        goto label10;

     label03:
        if c1 != 12 goto label04;

        $r4 = "\\u000c";

        goto label10;

     label04:
        if c1 != 13 goto label05;

        $r4 = "\\r";

        goto label10;

     label05:
        if c1 != 34 goto label06;

        $r4 = "\"";

        goto label10;

     label06:
        if c1 != 39 goto label07;

        $r4 = "\\\'";

        goto label10;

     label07:
        if c1 != 92 goto label08;

        $r4 = "\\\\";

        goto label10;

     label08:
        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z0 == 0 goto label09;

        $r1 = <kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE>;

        r0 = "\\u%04x";

        r5 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c0);

        r5[0] = $r2;

        r6 = r5;

        $i2 = lengthof r6;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r6, $i2);

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "format(format, *args)");

        goto label10;

     label09:
        $r4 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c0);

     label10:
        return $r4;
    }

    public static final com.squareup.javapoet.TypeName safeTypeName(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeKind $r1, $r2;
        com.squareup.javapoet.ClassName $r3;
        com.squareup.javapoet.TypeName $r4;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r2 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind NONE>;

        if $r1 != $r2 goto label1;

        $r3 = <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.ClassName JAVA_NONE_TYPE_NAME>;

        $r4 = (com.squareup.javapoet.TypeName) $r3;

        goto label2;

     label1:
        $r4 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "{\n    TypeName.get(this)\n}");

     label2:
        return $r4;
    }

    public static final com.squareup.javapoet.TypeSpec$Builder addOriginatingElement(com.squareup.javapoet.TypeSpec$Builder, androidx.room.compiler.processing.XElement)
    {
        com.squareup.javapoet.TypeSpec$Builder $r0;
        androidx.room.compiler.processing.XElement r1;
        javax.lang.model.element.Element r2, $r3;

        $r0 := @parameter0: com.squareup.javapoet.TypeSpec$Builder;

        r1 := @parameter1: androidx.room.compiler.processing.XElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r3 = staticinvoke <androidx.room.compiler.processing.XElementKt: javax.lang.model.element.Element originatingElementForPoet(androidx.room.compiler.processing.XElement)>(r1);

        if $r3 == null goto label1;

        r2 = $r3;

        virtualinvoke $r0.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addOriginatingElement(javax.lang.model.element.Element)>(r2);

        goto label1;

     label1:
        return $r0;
    }

    public static final com.squareup.javapoet.TypeName rawTypeName(com.squareup.javapoet.TypeName)
    {
        com.squareup.javapoet.TypeName $r0, $r3;
        com.squareup.javapoet.ClassName r1;
        boolean $z0;
        com.squareup.javapoet.ParameterizedTypeName $r2;

        $r0 := @parameter0: com.squareup.javapoet.TypeName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof com.squareup.javapoet.ParameterizedTypeName;

        if $z0 == 0 goto label1;

        $r2 = (com.squareup.javapoet.ParameterizedTypeName) $r0;

        r1 = $r2.<com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ClassName rawType>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "{\n        this.rawType\n    }");

        $r3 = (com.squareup.javapoet.TypeName) r1;

        goto label2;

     label1:
        $r3 = $r0;

     label2:
        return $r3;
    }

    public static final com.squareup.javapoet.TypeName tryUnbox(com.squareup.javapoet.TypeName)
    {
        com.squareup.javapoet.TypeName $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: com.squareup.javapoet.TypeName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<com.squareup.javapoet.TypeName: boolean isBoxedPrimitive()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName unbox()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "{\n        unbox()\n    }");

        goto label2;

     label1:
        $r1 = $r0;

     label2:
        return $r1;
    }

    public static final com.squareup.javapoet.TypeName tryBox(com.squareup.javapoet.TypeName)
    {
        com.squareup.javapoet.TypeName $r0, $r2, r4;
        java.lang.Throwable r1, $r3;

        $r0 := @parameter0: com.squareup.javapoet.TypeName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

     label1:
        $r2 = virtualinvoke $r0.<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName box()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "{\n        box()\n    }");

        r4 = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        r4 = $r0;

     label4:
        return r4;

        catch java.lang.AssertionError from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        com.squareup.javapoet.ClassName $r1;

        $r0 = newarray (java.lang.String)[0];

        $r1 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.room.compiler.processing.error", "NotAType", $r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "get(\"androidx.room.compi\u2026ssing.error\", \"NotAType\")");

        <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.ClassName JAVA_NONE_TYPE_NAME> = $r1;

        return;
    }

