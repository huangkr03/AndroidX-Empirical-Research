androidx.compose.SlotTable
<androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>
<androidx.compose.SlotTable: java.lang.Object[] slots>
<androidx.compose.SlotTable: int readers>
<androidx.compose.SlotTable: boolean writer>
<androidx.compose.SlotTable: int gapStart>
<androidx.compose.SlotTable: int gapLen>
<androidx.compose.SlotTable: java.util.ArrayList anchors>
<androidx.compose.SlotTable: java.lang.Object EMPTY>
    public void <init>(java.lang.Object[])
    {
        androidx.compose.SlotTable r0, r2;
        java.lang.Object[] r1;
        boolean z0;
        java.util.ArrayList r3, $r4;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slots");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.SlotTable: java.lang.Object[] slots> = r1;

        r2 = r0;

        z0 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r3 = $r4;

        r2.<androidx.compose.SlotTable: java.util.ArrayList anchors> = r3;

        return;
    }

    public void <init>(java.lang.Object[], int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.SlotTable r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Object[] r2;

        r0 := @this: androidx.compose.SlotTable;

        r2 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = newarray (java.lang.Object)[0];

     label1:
        specialinvoke r0.<androidx.compose.SlotTable: void <init>(java.lang.Object[])>(r2);

        return;
    }

    public final java.lang.Object[] getSlots$compose_runtime_release()
    {
        androidx.compose.SlotTable r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.SlotTable;

        $r1 = r0.<androidx.compose.SlotTable: java.lang.Object[] slots>;

        return $r1;
    }

    public final void setSlots$compose_runtime_release(java.lang.Object[])
    {
        androidx.compose.SlotTable r0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.SlotTable: java.lang.Object[] slots> = r1;

        return;
    }

    public final int getGapStart$compose_runtime_release()
    {
        androidx.compose.SlotTable r0;
        int $i0;

        r0 := @this: androidx.compose.SlotTable;

        $i0 = r0.<androidx.compose.SlotTable: int gapStart>;

        return $i0;
    }

    public final void setGapStart$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        r0.<androidx.compose.SlotTable: int gapStart> = i0;

        return;
    }

    public final int getGapLen$compose_runtime_release()
    {
        androidx.compose.SlotTable r0;
        int $i0;

        r0 := @this: androidx.compose.SlotTable;

        $i0 = r0.<androidx.compose.SlotTable: int gapLen>;

        return $i0;
    }

    public final void setGapLen$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        r0.<androidx.compose.SlotTable: int gapLen> = i0;

        return;
    }

    public final java.util.ArrayList getAnchors$compose_runtime_release()
    {
        androidx.compose.SlotTable r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.compose.SlotTable;

        $r1 = r0.<androidx.compose.SlotTable: java.util.ArrayList anchors>;

        return $r1;
    }

    public final void setAnchors$compose_runtime_release(java.util.ArrayList)
    {
        androidx.compose.SlotTable r0;
        java.util.ArrayList r1;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: java.util.ArrayList;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.SlotTable: java.util.ArrayList anchors> = r1;

        return;
    }

    public final java.lang.Object read(kotlin.jvm.functions.Function1)
    {
        androidx.compose.SlotTable r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.SlotReader r2, r3;
        boolean z0, z1;
        java.lang.Object r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r2 = virtualinvoke r0.<androidx.compose.SlotTable: androidx.compose.SlotReader openReader()>();

        z0 = 0;

        z1 = 0;

        r3 = r2;

     label1:
        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

     label2:
        virtualinvoke r3.<androidx.compose.SlotReader: void close()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

     label4:
        virtualinvoke r3.<androidx.compose.SlotReader: void close()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final java.lang.Object write(kotlin.jvm.functions.Function1)
    {
        androidx.compose.SlotTable r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.SlotWriter r2, r3;
        boolean z0, z1;
        java.lang.Object r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r2 = virtualinvoke r0.<androidx.compose.SlotTable: androidx.compose.SlotWriter openWriter()>();

        z0 = 0;

        z1 = 0;

        r3 = r2;

     label1:
        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

     label2:
        virtualinvoke r3.<androidx.compose.SlotWriter: void close()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

     label4:
        virtualinvoke r3.<androidx.compose.SlotWriter: void close()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final java.util.List groupPathTo(int)
    {
        androidx.compose.SlotTable r0;
        int i0, $i1;
        boolean z0, $z1, z2, z3, z4, z5, z6, z7;
        java.util.ArrayList $r1;
        androidx.compose.SlotTable$groupPathTo$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;
        java.util.List r9;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.compose.SlotTable: int getSize()>();

        if i0 >= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        if z2 != 0 goto label3;

        z0 = 0;

        r8 = "Failed requirement.";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label3:
        z7 = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r9 = (java.util.List) $r1;

        $r2 = new androidx.compose.SlotTable$groupPathTo$1;

        specialinvoke $r2.<androidx.compose.SlotTable$groupPathTo$1: void <init>(java.util.List,int)>(r9, i0);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        virtualinvoke r0.<androidx.compose.SlotTable: java.lang.Object read(kotlin.jvm.functions.Function1)>($r3);

        return r9;
    }

    public final androidx.compose.SlotReader openReader()
    {
        androidx.compose.SlotTable r0, r6;
        boolean $z0, z1;
        int $i0, i1;
        androidx.compose.SlotReader $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: androidx.compose.SlotTable;

        $z0 = r0.<androidx.compose.SlotTable: boolean writer>;

        if $z0 == 0 goto label1;

        r5 = "Cannot read while a writer is pending";

        z1 = 0;

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label1:
        r6 = r0;

        i1 = r6.<androidx.compose.SlotTable: int readers>;

        $i0 = i1 + 1;

        r6.<androidx.compose.SlotTable: int readers> = $i0;

        $r1 = new androidx.compose.SlotReader;

        specialinvoke $r1.<androidx.compose.SlotReader: void <init>(androidx.compose.SlotTable)>(r0);

        return $r1;
    }

    public final androidx.compose.SlotWriter openWriter()
    {
        androidx.compose.SlotTable r0;
        boolean $z0, z1, z2;
        int $i0;
        androidx.compose.SlotWriter $r1;
        java.lang.IllegalStateException $r2, $r5;
        java.lang.String $r3, $r6, r8, r9;
        java.lang.Throwable $r4, $r7;

        r0 := @this: androidx.compose.SlotTable;

        $z0 = r0.<androidx.compose.SlotTable: boolean writer>;

        if $z0 == 0 goto label1;

        r8 = "Cannot start a writer when another writer is pending";

        z1 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label1:
        $i0 = r0.<androidx.compose.SlotTable: int readers>;

        if $i0 <= 0 goto label2;

        r9 = "Cannot start a writer when a reader is pending";

        z2 = 0;

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label2:
        r0.<androidx.compose.SlotTable: boolean writer> = 1;

        $r1 = new androidx.compose.SlotWriter;

        specialinvoke $r1.<androidx.compose.SlotWriter: void <init>(androidx.compose.SlotTable)>(r0);

        return $r1;
    }

    public final void verifyWellFormed()
    {
        androidx.compose.SlotTable r0;
        kotlin.jvm.internal.Ref$IntRef r1, $r2;
        int $i0, $i1, $i2, $i3, i5, $i6;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        kotlin.ranges.IntRange $r5;
        java.lang.IllegalArgumentException $r6, $r9, $r13;
        java.lang.String $r7, $r10, $r14, r16, r21, r22;
        java.lang.Throwable $r8, $r11, $r15;
        androidx.compose.Group $r12;
        boolean $z0, z1, z2, z3, $z5, z6, z7, z8, $z10, z11, z12, z13;
        java.util.Iterator r17, r18;
        androidx.compose.Anchor $r19, r20;

        r0 := @this: androidx.compose.SlotTable;

        $r2 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r1 = $r2;

        r1.<kotlin.jvm.internal.Ref$IntRef: int element> = 0;

        $i0 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        $i1 = virtualinvoke r0.<androidx.compose.SlotTable: int getSize()>();

        if $i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        z1 = $z0;

        z2 = 0;

        z3 = 0;

        if z1 != 0 goto label03;

        r16 = "Gap is not at the end of the table";

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label03:
        $i2 = virtualinvoke r0.<androidx.compose.SlotTable: int getSize()>();

        if $i2 <= 0 goto label04;

        $r12 = (androidx.compose.Group) null;

        staticinvoke <androidx.compose.SlotTable: int verifyWellFormed$validateGroup(kotlin.jvm.internal.Ref$IntRef,androidx.compose.SlotTable,int,androidx.compose.Group)>(r1, r0, 0, $r12);

     label04:
        i5 = -1;

        $r3 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        r17 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r17, "anchors");

        r18 = r17;

     label05:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r4 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (androidx.compose.Anchor) $r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "anchors");

        r20 = $r19;

        $i6 = virtualinvoke r20.<androidx.compose.Anchor: int location(androidx.compose.SlotTable)>(r0);

        $r5 = new kotlin.ranges.IntRange;

        $i3 = virtualinvoke r0.<androidx.compose.SlotTable: int getSize()>();

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i3);

        z6 = virtualinvoke $r5.<kotlin.ranges.IntRange: boolean contains(int)>($i6);

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label06;

        r21 = "Location out of bound";

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label06:
        if i5 >= $i6 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        z11 = $z10;

        z12 = 0;

        z13 = 0;

        if z11 != 0 goto label09;

        r22 = "Anchor is out of order";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke r22.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;

     label09:
        i5 = $i6;

        goto label05;

     label10:
        return;
    }

    public final int getSize()
    {
        androidx.compose.SlotTable r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.SlotTable;

        $r1 = virtualinvoke r0.<androidx.compose.SlotTable: java.lang.Object[] getSlots$compose_runtime_release()>();

        $i0 = lengthof $r1;

        $i1 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public static void getSize$annotations()
    {
        return;
    }

    public final void close$compose_runtime_release(androidx.compose.SlotReader)
    {
        androidx.compose.SlotTable r0, $r2, r7;
        androidx.compose.SlotReader r1;
        int $i0, $i1, i2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;
        boolean $z1, z2, z3, z4;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: androidx.compose.SlotReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        $r2 = virtualinvoke r1.<androidx.compose.SlotReader: androidx.compose.SlotTable getTable()>();

        if $r2 != r0 goto label1;

        $i1 = r0.<androidx.compose.SlotTable: int readers>;

        if $i1 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label3;

        r6 = "Unexpected reader close()";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label3:
        r7 = r0;

        i2 = r7.<androidx.compose.SlotTable: int readers>;

        $i0 = i2 + -1;

        r7.<androidx.compose.SlotTable: int readers> = $i0;

        return;
    }

    public final void close$compose_runtime_release(androidx.compose.SlotWriter)
    {
        androidx.compose.SlotTable r0, $r2;
        androidx.compose.SlotWriter r1;
        boolean z0, z1, $z3, $z4, z5;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: androidx.compose.SlotWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        $r2 = virtualinvoke r1.<androidx.compose.SlotWriter: androidx.compose.SlotTable getTable()>();

        if $r2 != r0 goto label1;

        $z3 = r0.<androidx.compose.SlotTable: boolean writer>;

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        z1 = 0;

        z5 = 0;

        if z0 != 0 goto label3;

        r6 = "Unexpected writer close()";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label3:
        r0.<androidx.compose.SlotTable: boolean writer> = 0;

        virtualinvoke r0.<androidx.compose.SlotTable: void clearGap$compose_runtime_release()>();

        return;
    }

    public final int effectiveIndex$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        if i0 >= $i1 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i3 = $i2 + i0;

     label2:
        return $i3;
    }

    public final void clearGap$compose_runtime_release()
    {
        androidx.compose.SlotTable r0;
        int i0, i1, i2, $i3, $i4, i5;
        boolean z0, z2;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.SlotTable;

        i0 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        z0 = 0;

        z2 = 0;

        i5 = 0;

        i1 = i0;

     label1:
        if i5 >= i1 goto label2;

        i2 = i5;

        $r1 = virtualinvoke r0.<androidx.compose.SlotTable: java.lang.Object[] getSlots$compose_runtime_release()>();

        $i3 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        $i4 = $i3 + i2;

        $r1[$i4] = null;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public final androidx.compose.Anchor anchor$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList $r1, $r2, $r5;
        java.lang.Object $r3;
        androidx.compose.Anchor $r4, r6, $r7, r8;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.compose.SlotTable: int effectiveIndex$compose_runtime_release(int)>(i0);

        $r1 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i2 = staticinvoke <androidx.compose.SlotTableKt: int access$search(java.util.ArrayList,int)>($r1, i1);

        if i2 >= 0 goto label1;

        $r4 = new androidx.compose.Anchor;

        specialinvoke $r4.<androidx.compose.Anchor: void <init>(int)>(i1);

        r6 = $r4;

        $r5 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i3 = i2 + 1;

        $i4 = neg $i3;

        virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, r6);

        $r7 = r6;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (androidx.compose.Anchor) $r3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r8, "anchors[location]");

        $r7 = r8;

     label2:
        return $r7;
    }

    public final void updateAnchors$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, i22;
        java.util.ArrayList $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.Object $r4, $r8;
        androidx.compose.Anchor r9, r10, r11, r12, r13, r14;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        if $i1 >= i0 goto label3;

        $i7 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        $i8 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        i15 = $i7 + $i8;

        $i9 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        i16 = i0 + $i9;

        $r5 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i17 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r5, i15);

     label1:
        $r6 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i10 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i17 >= $i10 goto label6;

        $r7 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r9 = (androidx.compose.Anchor) $r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r9, "anchors[index]");

        r10 = r9;

        $i11 = virtualinvoke r10.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i11 >= i16 goto label2;

        r11 = r10;

        $i12 = virtualinvoke r11.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        $i13 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i14 = $i12 - $i13;

        virtualinvoke r11.<androidx.compose.Anchor: void setLoc$compose_runtime_release(int)>($i14);

        i18 = i17;

        i17 = i18 + 1;

        goto label1;

     label2:
        goto label6;

     label3:
        i19 = i0;

        i20 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        $r1 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i21 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r1, i19);

     label4:
        $r2 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i21 >= $i2 goto label6;

        $r3 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r12 = (androidx.compose.Anchor) $r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "anchors[index]");

        r13 = r12;

        $i3 = virtualinvoke r13.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i3 >= i20 goto label5;

        r14 = r13;

        $i4 = virtualinvoke r14.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        $i5 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i6 = $i4 + $i5;

        virtualinvoke r14.<androidx.compose.Anchor: void setLoc$compose_runtime_release(int)>($i6);

        i22 = i21;

        i21 = i22 + 1;

        goto label4;

     label5:
        goto label6;

     label6:
        return;
    }

    public final void anchorGapResize$compose_runtime_release(int)
    {
        androidx.compose.SlotTable r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10;
        androidx.compose.Anchor r1, r2;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i5 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        $i6 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i7 = $i5 + $i6;

        i1 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r3, $i7);

        $r4 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i10 = i1;

        i3 = i2 + -1;

        if i2 == -2147483648 goto label2;

        if i10 > i3 goto label2;

     label1:
        i4 = i10;

        i10 = i10 + 1;

        $r5 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (androidx.compose.Anchor) $r6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "anchors[index]");

        r1 = r2;

        $i8 = virtualinvoke r1.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        $i9 = $i8 + i0;

        virtualinvoke r1.<androidx.compose.Anchor: void setLoc$compose_runtime_release(int)>($i9);

        if i10 <= i3 goto label1;

     label2:
        return;
    }

    public final boolean removeAnchors$compose_runtime_release(int, int)
    {
        androidx.compose.SlotTable r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12;
        java.util.ArrayList $r1, $r2, $r3, $r5;
        java.lang.Object $r4, $r6;
        androidx.compose.Anchor $r7, r8, r9;
        boolean z1, z2, z3;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0;

        i3 = i0 + i1;

        $r1 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i5 = i0 + i1;

        i9 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r1, $i5);

        z1 = 0;

        z2 = 0;

        i4 = i9;

        $r2 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i4 < $i6 goto label1;

        $i10 = i4 - 1;

        goto label2;

     label1:
        $i10 = i4;

     label2:
        i11 = $i10;

        z3 = 0;

     label3:
        if i11 < 0 goto label6;

        $r3 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r8 = (androidx.compose.Anchor) $r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r8, "anchors[index]");

        r9 = r8;

        $i7 = virtualinvoke r9.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i7 < i2 goto label5;

        $i8 = virtualinvoke r9.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i8 >= i3 goto label4;

        virtualinvoke r9.<androidx.compose.Anchor: void setLoc$compose_runtime_release(int)>(-1);

        $r5 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

        $r7 = (androidx.compose.Anchor) $r6;

        z3 = 1;

     label4:
        i12 = i11;

        i11 = i12 + -1;

        goto label3;

     label5:
        goto label6;

     label6:
        return z3;
    }

    public final void moveAnchors$compose_runtime_release(int, int, int)
    {
        androidx.compose.SlotTable r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14;
        java.util.List r1;
        java.util.ArrayList $r2, $r3, $r5, $r6, $r7, $r8, $r10;
        java.lang.Object $r4, $r9, $r11;
        androidx.compose.Anchor $r12, r13, r14, r16;
        boolean z1, $z2;
        java.util.Iterator r15;

        r0 := @this: androidx.compose.SlotTable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<androidx.compose.SlotTable: int effectiveIndex$compose_runtime_release(int)>(i0);

        $i10 = i0 + i2;

        i4 = virtualinvoke r0.<androidx.compose.SlotTable: int effectiveIndex$compose_runtime_release(int)>($i10);

        $r2 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i5 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r2, i3);

        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        if i5 < 0 goto label3;

     label1:
        $r7 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $i12 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i5 >= $i12 goto label3;

        $r8 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r13 = (androidx.compose.Anchor) $r9;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r13, "anchors[index]");

        r14 = r13;

        $i13 = virtualinvoke r14.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i13 < i3 goto label2;

        $i14 = virtualinvoke r14.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if $i14 >= i4 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r14);

        $r10 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

        $r12 = (androidx.compose.Anchor) $r11;

        goto label1;

     label2:
        goto label3;

     label3:
        r15 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r4 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.compose.Anchor) $r4;

        i6 = virtualinvoke r0.<androidx.compose.SlotTable: int anchorLocation$compose_runtime_release(androidx.compose.Anchor)>(r16);

        $i11 = i6 - i0;

        i7 = $i11 + i1;

        i8 = virtualinvoke r0.<androidx.compose.SlotTable: int effectiveIndex$compose_runtime_release(int)>(i7);

        virtualinvoke r16.<androidx.compose.Anchor: void setLoc$compose_runtime_release(int)>(i8);

        $r5 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i9 = staticinvoke <androidx.compose.SlotTableKt: int access$locationOf(java.util.ArrayList,int)>($r5, i8);

        $r6 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i9, r16);

        goto label4;

     label5:
        return;
    }

    public final int anchorLocation$compose_runtime_release(androidx.compose.Anchor)
    {
        androidx.compose.SlotTable r0;
        androidx.compose.Anchor r1;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, z1;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: androidx.compose.Anchor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anchor");

        i0 = virtualinvoke r1.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        z0 = 0;

        z1 = 0;

        i1 = i0;

        $i2 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapStart$compose_runtime_release()>();

        if i1 <= $i2 goto label1;

        $i3 = virtualinvoke r0.<androidx.compose.SlotTable: int getGapLen$compose_runtime_release()>();

        $i4 = i1 - $i3;

        goto label2;

     label1:
        $i4 = i1;

     label2:
        return $i4;
    }

    public final boolean ownsAnchor$compose_runtime_release(androidx.compose.Anchor)
    {
        androidx.compose.SlotTable r0;
        androidx.compose.Anchor r1, $r5;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.compose.SlotTable;

        r1 := @parameter0: androidx.compose.Anchor;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<androidx.compose.Anchor: int getLoc$compose_runtime_release()>();

        if i0 >= 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        i1 = staticinvoke <androidx.compose.SlotTableKt: int access$search(java.util.ArrayList,int)>($r2, i0);

        if i1 >= 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.compose.SlotTable: java.util.ArrayList getAnchors$compose_runtime_release()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (androidx.compose.Anchor) $r4;

        if $r5 != r1 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private static final int verifyWellFormed$validateGroup(kotlin.jvm.internal.Ref$IntRef, androidx.compose.SlotTable, int, androidx.compose.Group)
    {
        kotlin.jvm.internal.Ref$IntRef $r0, $r8, $r10, $r12, $r14, $r22, $r29, $r30;
        androidx.compose.SlotTable $r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, $i22, i23, $i24, i25, $i26, $i27;
        androidx.compose.Group r2, $r5, r50, r52;
        java.lang.Object[] $r3, $r31;
        java.lang.Object $r4, $r9, $r11, $r13, $r21, $r27, $r28, $r32, $r37;
        java.lang.Number $r6;
        boolean $z1, $z2, $z3, z4, z5, z6, $z10, z11, z13, $z15, z16, z18, $z20, z21, z23, $z25, z26;
        kotlin.jvm.internal.Ref$ObjectRef $r7, r61;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r23;
        java.lang.IllegalArgumentException $r24, $r34, $r39, $r43, $r47;
        java.lang.String $r25, $r35, $r40, $r44, $r48, r51, r58, r59, r60, $r62;
        java.lang.Throwable $r26, $r36, $r41, $r45, $r49;
        java.lang.Integer $r33, $r38, $r42, $r46, $r53, $r55, r56, r57;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$IntRef;

        $r1 := @parameter1: androidx.compose.SlotTable;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.compose.Group;

        i19 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i5 = i19 + 1;

        $r0.<kotlin.jvm.internal.Ref$IntRef: int element> = $i5;

        i1 = i19;

        $r3 = virtualinvoke $r1.<androidx.compose.SlotTable: java.lang.Object[] getSlots$compose_runtime_release()>();

        $r4 = $r3[i1];

        r50 = staticinvoke <androidx.compose.SlotTableKt: androidx.compose.Group access$getAsGroup(java.lang.Object)>($r4);

        $r5 = virtualinvoke r50.<androidx.compose.Group: androidx.compose.Group getParent()>();

        z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r2);

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label01;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r51 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Incorrect parent for group at ", $r46);

        $r47 = new java.lang.IllegalArgumentException;

        $r48 = virtualinvoke r51.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r48);

        $r49 = (java.lang.Throwable) $r47;

        throw $r49;

     label01:
        $i6 = virtualinvoke r50.<androidx.compose.Group: int getSlots()>();

        $i7 = i1 + $i6;

        i20 = $i7 + 1;

        $i21 = i0;

        r52 = r2;

        if r52 != null goto label02;

        $r53 = (java.lang.Integer) null;

        goto label03;

     label02:
        $i8 = virtualinvoke r52.<androidx.compose.Group: int getSlots()>();

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

     label03:
        if $r53 != null goto label04;

        $r55 = (java.lang.Integer) null;

        goto label05;

     label04:
        r56 = $r53;

        i3 = i0;

        $r6 = (java.lang.Number) r56;

        i2 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        i4 = i2 + 1;

        $i21 = i3;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

     label05:
        r57 = $r55;

        if r57 != null goto label06;

        $i22 = virtualinvoke $r1.<androidx.compose.SlotTable: int getSize()>();

        goto label07;

     label06:
        $i22 = virtualinvoke r57.<java.lang.Integer: int intValue()>();

     label07:
        i23 = $i21 + $i22;

        $i24 = virtualinvoke $r1.<androidx.compose.SlotTable: int getSize()>();

        if i20 > $i24 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        z11 = $z10;

        z13 = 0;

        if z11 != 0 goto label10;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r58 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Group extends past then end of its table at ", $r42);

        $r43 = new java.lang.IllegalArgumentException;

        $r44 = virtualinvoke r58.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r44);

        $r45 = (java.lang.Throwable) $r43;

        throw $r45;

     label10:
        if i20 > i23 goto label11;

        $z15 = 1;

        goto label12;

     label11:
        $z15 = 0;

     label12:
        z16 = $z15;

        z18 = 0;

        if z16 != 0 goto label13;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r59 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Group extends past its parent at ", $r38);

        $r39 = new java.lang.IllegalArgumentException;

        $r40 = virtualinvoke r59.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        $r41 = (java.lang.Throwable) $r39;

        throw $r41;

     label13:
        $z1 = virtualinvoke r50.<androidx.compose.Group: boolean isNode()>();

        if $z1 == 0 goto label14;

        $r37 = virtualinvoke r50.<androidx.compose.Group: java.lang.Object getNode()>();

        if $r37 == null goto label15;

     label14:
        $z20 = 1;

        goto label16;

     label15:
        $z20 = 0;

     label16:
        z21 = $z20;

        z23 = 0;

        if z21 != 0 goto label17;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r60 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Node groups must have a node at ", $r33);

        $r34 = new java.lang.IllegalArgumentException;

        $r35 = virtualinvoke r60.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        $r36 = (java.lang.Throwable) $r34;

        throw $r36;

     label17:
        $i9 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i9 >= i20 goto label18;

        $r31 = virtualinvoke $r1.<androidx.compose.SlotTable: java.lang.Object[] getSlots$compose_runtime_release()>();

        $i17 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r32 = $r31[$i17];

        $z3 = $r32 instanceof androidx.compose.Group;

        if $z3 != 0 goto label18;

        i25 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i18 = i25 + 1;

        $r0.<kotlin.jvm.internal.Ref$IntRef: int element> = $i18;

        goto label17;

     label18:
        $r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r61 = $r7;

        $r8 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r8.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r8;

        $r9 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r10 = (kotlin.jvm.internal.Ref$IntRef) $r9;

        $r10.<kotlin.jvm.internal.Ref$IntRef: int element> = 0;

     label19:
        $i26 = $r0.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i26 >= i20 goto label20;

        $r27 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r30 = (kotlin.jvm.internal.Ref$IntRef) $r27;

        $r28 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r29 = (kotlin.jvm.internal.Ref$IntRef) $r28;

        $i14 = $r29.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i15 = staticinvoke <androidx.compose.SlotTable: int verifyWellFormed$validateGroup(kotlin.jvm.internal.Ref$IntRef,androidx.compose.SlotTable,int,androidx.compose.Group)>($r0, $r1, i1, r50);

        $i16 = $i14 + $i15;

        $r30.<kotlin.jvm.internal.Ref$IntRef: int element> = $i16;

        goto label19;

     label20:
        $i10 = virtualinvoke r50.<androidx.compose.Group: int getNodes()>();

        $r11 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r12 = (kotlin.jvm.internal.Ref$IntRef) $r11;

        $i11 = $r12.<kotlin.jvm.internal.Ref$IntRef: int element>;

        if $i10 != $i11 goto label21;

        $z25 = 1;

        goto label22;

     label21:
        $z25 = 0;

     label22:
        z26 = 0;

        if $z25 != 0 goto label23;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect node count for group at ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $i12 = virtualinvoke r50.<androidx.compose.Group: int getNodes()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", received ");

        $r21 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r22 = (kotlin.jvm.internal.Ref$IntRef) $r21;

        $i13 = $r22.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r62 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = virtualinvoke $r62.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        $r26 = (java.lang.Throwable) $r24;

        throw $r26;

     label23:
        $z2 = virtualinvoke r50.<androidx.compose.Group: boolean isNode()>();

        if $z2 == 0 goto label24;

        $i27 = 1;

        goto label25;

     label24:
        $r13 = r61.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r14 = (kotlin.jvm.internal.Ref$IntRef) $r13;

        $i27 = $r14.<kotlin.jvm.internal.Ref$IntRef: int element>;

     label25:
        return $i27;
    }

    public void <init>()
    {
        androidx.compose.SlotTable r0;

        r0 := @this: androidx.compose.SlotTable;

        specialinvoke r0.<androidx.compose.SlotTable: void <init>(java.lang.Object[],int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

    public static final java.lang.Object access$getEMPTY$cp$s-1614671792()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.SlotTable: java.lang.Object EMPTY>;

        return $r0;
    }

    public static final void <clinit>()
    {
        androidx.compose.SlotTable$Companion $r0;
        androidx.compose.SlotTable$Companion$EMPTY$1 $r1;

        $r0 = new androidx.compose.SlotTable$Companion;

        specialinvoke $r0.<androidx.compose.SlotTable$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion> = $r0;

        $r1 = new androidx.compose.SlotTable$Companion$EMPTY$1;

        specialinvoke $r1.<androidx.compose.SlotTable$Companion$EMPTY$1: void <init>()>();

        <androidx.compose.SlotTable: java.lang.Object EMPTY> = $r1;

        return;
    }

androidx.compose.SlotTable$Companion$EMPTY$1
    void <init>()
    {
        androidx.compose.SlotTable$Companion$EMPTY$1 r0;

        r0 := @this: androidx.compose.SlotTable$Companion$EMPTY$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        androidx.compose.SlotTable$Companion$EMPTY$1 r0;

        r0 := @this: androidx.compose.SlotTable$Companion$EMPTY$1;

        return "EMPTY";
    }

androidx.compose.SlotTable$Companion
    private void <init>()
    {
        androidx.compose.SlotTable$Companion r0;

        r0 := @this: androidx.compose.SlotTable$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object getEMPTY()
    {
        androidx.compose.SlotTable$Companion r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.SlotTable$Companion;

        $r1 = staticinvoke <androidx.compose.SlotTable: java.lang.Object access$getEMPTY$cp$s-1614671792()>();

        return $r1;
    }

    public static void getEMPTY$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.SlotTable$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.compose.SlotTable$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.SlotTable$Companion: void <init>()>();

        return;
    }

androidx.compose.SlotTable$groupPathTo$1
<androidx.compose.SlotTable$groupPathTo$1: java.util.List $path>
<androidx.compose.SlotTable$groupPathTo$1: int $location>
    void <init>(java.util.List, int)
    {
        androidx.compose.SlotTable$groupPathTo$1 r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.compose.SlotTable$groupPathTo$1;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        r0.<androidx.compose.SlotTable$groupPathTo$1: java.util.List $path> = $r1;

        r0.<androidx.compose.SlotTable$groupPathTo$1: int $location> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.SlotReader)
    {
        androidx.compose.SlotTable$groupPathTo$1 r0;
        androidx.compose.SlotReader r1;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, i10;
        boolean $z1, $z2;

        r0 := @this: androidx.compose.SlotTable$groupPathTo$1;

        r1 := @parameter0: androidx.compose.SlotReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        i6 = 0;

     label1:
        $r2 = r0.<androidx.compose.SlotTable$groupPathTo$1: java.util.List $path>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = r0.<androidx.compose.SlotTable$groupPathTo$1: int $location>;

        if i6 != $i0 goto label2;

        goto label7;

     label2:
        i7 = i6;

        i6 = i7 + 1;

     label3:
        $i1 = r0.<androidx.compose.SlotTable$groupPathTo$1: int $location>;

        if i6 >= $i1 goto label4;

        $z2 = virtualinvoke r1.<androidx.compose.SlotReader: boolean isGroup(int)>(i6);

        if $z2 != 0 goto label4;

        i8 = i6;

        i6 = i8 + 1;

        goto label3;

     label4:
        $i2 = r0.<androidx.compose.SlotTable$groupPathTo$1: int $location>;

        if i6 != $i2 goto label5;

        $z1 = virtualinvoke r1.<androidx.compose.SlotReader: boolean isGroup(int)>(i6);

        if $z1 != 0 goto label5;

        goto label7;

     label5:
        $i9 = r0.<androidx.compose.SlotTable$groupPathTo$1: int $location>;

        if i6 > $i9 goto label7;

        $i3 = virtualinvoke r1.<androidx.compose.SlotReader: int groupSize(int)>(i6);

        $i4 = $i3 + i6;

        i10 = $i4 + 1;

        $i5 = r0.<androidx.compose.SlotTable$groupPathTo$1: int $location>;

        if $i5 >= i10 goto label6;

        goto label1;

     label6:
        i6 = i10;

        goto label5;

     label7:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.SlotTable$groupPathTo$1 r0;
        java.lang.Object r1;
        androidx.compose.SlotReader $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.SlotTable$groupPathTo$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.SlotReader) r1;

        virtualinvoke r0.<androidx.compose.SlotTable$groupPathTo$1: void invoke(androidx.compose.SlotReader)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

