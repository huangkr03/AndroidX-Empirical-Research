androidx.compose.ui.test.KeyInputState
<androidx.compose.ui.test.KeyInputState: java.util.HashSet downKeys>
<androidx.compose.ui.test.KeyInputState: long downTime>
<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey>
<androidx.compose.ui.test.KeyInputState: int repeatCount>
<androidx.compose.ui.test.KeyInputState: long lastRepeatTime>
<androidx.compose.ui.test.KeyInputState: boolean capsLockOn>
<androidx.compose.ui.test.KeyInputState: boolean numLockOn>
<androidx.compose.ui.test.KeyInputState: boolean scrollLockOn>
    public void <init>()
    {
        androidx.compose.ui.test.KeyInputState r0;
        java.util.HashSet $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<androidx.compose.ui.test.KeyInputState: java.util.HashSet downKeys> = $r1;

        $l0 = r0.<androidx.compose.ui.test.KeyInputState: long downTime>;

        r0.<androidx.compose.ui.test.KeyInputState: long lastRepeatTime> = $l0;

        return;
    }

    public final long getDownTime()
    {
        androidx.compose.ui.test.KeyInputState r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $l0 = r0.<androidx.compose.ui.test.KeyInputState: long downTime>;

        return $l0;
    }

    public final void setDownTime(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        r0.<androidx.compose.ui.test.KeyInputState: long downTime> = l0;

        return;
    }

    public final androidx.compose.ui.input.key.Key getRepeatKey-DUgKLGk()
    {
        androidx.compose.ui.test.KeyInputState r0;
        androidx.compose.ui.input.key.Key $r1;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $r1 = r0.<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey>;

        return $r1;
    }

    public final void setRepeatKey-ZFB-gUg(androidx.compose.ui.input.key.Key)
    {
        androidx.compose.ui.test.KeyInputState r0;
        androidx.compose.ui.input.key.Key r1;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        r1 := @parameter0: androidx.compose.ui.input.key.Key;

        r0.<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey> = r1;

        return;
    }

    public final int getRepeatCount()
    {
        androidx.compose.ui.test.KeyInputState r0;
        int $i0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $i0 = r0.<androidx.compose.ui.test.KeyInputState: int repeatCount>;

        return $i0;
    }

    public final void setRepeatCount(int)
    {
        androidx.compose.ui.test.KeyInputState r0;
        int i0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        i0 := @parameter0: int;

        r0.<androidx.compose.ui.test.KeyInputState: int repeatCount> = i0;

        return;
    }

    public final long getLastRepeatTime()
    {
        androidx.compose.ui.test.KeyInputState r0;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $l0 = r0.<androidx.compose.ui.test.KeyInputState: long lastRepeatTime>;

        return $l0;
    }

    public final void setLastRepeatTime(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        r0.<androidx.compose.ui.test.KeyInputState: long lastRepeatTime> = l0;

        return;
    }

    public final boolean getCapsLockOn()
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $z0 = r0.<androidx.compose.ui.test.KeyInputState: boolean capsLockOn>;

        return $z0;
    }

    public final void setCapsLockOn(boolean)
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.test.KeyInputState: boolean capsLockOn> = z0;

        return;
    }

    public final boolean getNumLockOn()
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $z0 = r0.<androidx.compose.ui.test.KeyInputState: boolean numLockOn>;

        return $z0;
    }

    public final void setNumLockOn(boolean)
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.test.KeyInputState: boolean numLockOn> = z0;

        return;
    }

    public final boolean getScrollLockOn()
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        $z0 = r0.<androidx.compose.ui.test.KeyInputState: boolean scrollLockOn>;

        return $z0;
    }

    public final void setScrollLockOn(boolean)
    {
        androidx.compose.ui.test.KeyInputState r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.test.KeyInputState: boolean scrollLockOn> = z0;

        return;
    }

    public final boolean isKeyDown-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0;
        java.util.HashSet $r1;
        androidx.compose.ui.input.key.Key $r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInputState: java.util.HashSet downKeys>;

        $r2 = staticinvoke <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key box-impl(long)>(l0);

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public final void setKeyUp-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0;
        java.util.HashSet $r1;
        androidx.compose.ui.input.key.Key $r2, $r3;
        boolean $z1;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInputState: java.util.HashSet downKeys>;

        $r2 = staticinvoke <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key box-impl(long)>(l0);

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r2);

        $r3 = r0.<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey>;

        $z1 = staticinvoke <androidx.compose.ui.input.key.Key: boolean equals-impl(long,java.lang.Object)>(l0, $r3);

        if $z1 == 0 goto label1;

        r0.<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey> = null;

        r0.<androidx.compose.ui.test.KeyInputState: int repeatCount> = 0;

     label1:
        return;
    }

    public final void setKeyDown-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0;
        java.util.HashSet $r1;
        androidx.compose.ui.input.key.Key $r2, $r3;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInputState: java.util.HashSet downKeys>;

        $r2 = staticinvoke <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key box-impl(long)>(l0);

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        $r3 = staticinvoke <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key box-impl(long)>(l0);

        r0.<androidx.compose.ui.test.KeyInputState: androidx.compose.ui.input.key.Key repeatKey> = $r3;

        r0.<androidx.compose.ui.test.KeyInputState: int repeatCount> = 0;

        specialinvoke r0.<androidx.compose.ui.test.KeyInputState: void updateLockKeys-YVgTNJs(long)>(l0);

        return;
    }

    private final void updateLockKeys-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInputState r0;
        long l0, l1, $l2, $l3, $l4;
        androidx.compose.ui.input.key.Key$Companion $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: androidx.compose.ui.test.KeyInputState;

        l0 := @parameter0: long;

        l1 = l0;

        $r1 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l2 = virtualinvoke $r1.<androidx.compose.ui.input.key.Key$Companion: long getCapsLock-EK5gGoQ()>();

        $z0 = staticinvoke <androidx.compose.ui.input.key.Key: boolean equals-impl0(long,long)>(l1, $l2);

        if $z0 == 0 goto label3;

        $z5 = r0.<androidx.compose.ui.test.KeyInputState: boolean capsLockOn>;

        if $z5 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        r0.<androidx.compose.ui.test.KeyInputState: boolean capsLockOn> = $z6;

        goto label9;

     label3:
        $r2 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l3 = virtualinvoke $r2.<androidx.compose.ui.input.key.Key$Companion: long getNumLock-EK5gGoQ()>();

        $z1 = staticinvoke <androidx.compose.ui.input.key.Key: boolean equals-impl0(long,long)>(l1, $l3);

        if $z1 == 0 goto label6;

        $z4 = r0.<androidx.compose.ui.test.KeyInputState: boolean numLockOn>;

        if $z4 != 0 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        r0.<androidx.compose.ui.test.KeyInputState: boolean numLockOn> = $z7;

        goto label9;

     label6:
        $r3 = <androidx.compose.ui.input.key.Key: androidx.compose.ui.input.key.Key$Companion Companion>;

        $l4 = virtualinvoke $r3.<androidx.compose.ui.input.key.Key$Companion: long getScrollLock-EK5gGoQ()>();

        $z2 = staticinvoke <androidx.compose.ui.input.key.Key: boolean equals-impl0(long,long)>(l1, $l4);

        if $z2 == 0 goto label9;

        $z3 = r0.<androidx.compose.ui.test.KeyInputState: boolean scrollLockOn>;

        if $z3 != 0 goto label7;

        $z8 = 1;

        goto label8;

     label7:
        $z8 = 0;

     label8:
        r0.<androidx.compose.ui.test.KeyInputState: boolean scrollLockOn> = $z8;

     label9:
        return;
    }

