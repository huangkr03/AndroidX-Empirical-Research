com.google.common.collect.Lists
    static boolean equalsImpl(java.util.List, java.lang.Object)
    {
        java.util.List $r0, $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;
        int $i0, $i1;
        java.util.Iterator $r4, $r5;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof java.util.List;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (java.util.List) $r1;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $z0 = $r0 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label7;

        $z0 = $r3 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label7;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label6;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        return 1;

     label7:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)>($r4, $r5);

        return $z0;
    }

    static int indexOfImpl(java.util.List, java.lang.Object)
    {
        java.lang.Object $r0, $r3;
        java.util.List $r1;
        boolean $z0;
        int $i0;
        java.util.ListIterator $r2;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <com.google.common.collect.Lists: int indexOfRandomAccess(java.util.List,java.lang.Object)>($r1, $r0);

        return $i0;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r0, $r3);

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int previousIndex()>();

        return $i0;

     label3:
        return -1;
    }

    private static int indexOfRandomAccess(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = 0;

        if $r1 != null goto label3;

     label1:
        if $i1 >= $i0 goto label5;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        if $r1 != null goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $i1 >= $i0 goto label5;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        return $i1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return -1;
    }

    static int lastIndexOfImpl(java.util.List, java.lang.Object)
    {
        java.lang.Object $r0, $r3;
        java.util.List $r1;
        boolean $z0;
        int $i0;
        java.util.ListIterator $r2;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <com.google.common.collect.Lists: int lastIndexOfRandomAccess(java.util.List,java.lang.Object)>($r1, $r0);

        return $i0;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r0, $r3);

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r2.<java.util.ListIterator: int nextIndex()>();

        return $i0;

     label3:
        return -1;
    }

    private static int lastIndexOfRandomAccess(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        if $r1 != null goto label3;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label6;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        if $r1 != null goto label2;

        return $i0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label6;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        return $i0;

     label5:
        $i0 = $i0 + -1;

        goto label4;

     label6:
        return -1;
    }

