androidx.datastore.preferences.core.PreferenceDataStoreFactory
<androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.preferences.core.PreferenceDataStoreFactory INSTANCE>
    private void <init>()
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        java.util.List r2;
        kotlinx.coroutines.CoroutineScope r3;
        kotlin.jvm.functions.Function0 r4, $r10;
        androidx.datastore.core.DataStore r5, $r12;
        androidx.datastore.preferences.core.PreferencesSerializer $r6;
        androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1 $r7;
        androidx.datastore.core.DataStoreFactory $r8;
        androidx.datastore.core.Serializer $r9;
        androidx.datastore.preferences.core.PreferenceDataStore $r11;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: kotlinx.coroutines.CoroutineScope;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "produceFile");

        $r8 = <androidx.datastore.core.DataStoreFactory: androidx.datastore.core.DataStoreFactory INSTANCE>;

        $r6 = <androidx.datastore.preferences.core.PreferencesSerializer: androidx.datastore.preferences.core.PreferencesSerializer INSTANCE>;

        $r9 = (androidx.datastore.core.Serializer) $r6;

        $r7 = new androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1;

        specialinvoke $r7.<androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1: void <init>(kotlin.jvm.functions.Function0)>(r4);

        $r10 = (kotlin.jvm.functions.Function0) $r7;

        r5 = virtualinvoke $r8.<androidx.datastore.core.DataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.Serializer,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>($r9, r1, r2, r3, $r10);

        $r11 = new androidx.datastore.preferences.core.PreferenceDataStore;

        specialinvoke $r11.<androidx.datastore.preferences.core.PreferenceDataStore: void <init>(androidx.datastore.core.DataStore)>(r5);

        $r12 = (androidx.datastore.core.DataStore) $r11;

        return $r12;
    }

    public static androidx.datastore.core.DataStore create$default(androidx.datastore.preferences.core.PreferenceDataStoreFactory, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlinx.coroutines.CoroutineScope, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        boolean z0;
        androidx.datastore.core.DataStore $r3;
        kotlinx.coroutines.Dispatchers $r4;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlinx.coroutines.CompletableJob $r6;
        kotlin.coroutines.CoroutineContext $r7, $r8;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r9;
        java.util.List r10;
        kotlinx.coroutines.CoroutineScope r11;

        r0 := @parameter0: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        r9 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r10 := @parameter2: java.util.List;

        r11 := @parameter3: kotlinx.coroutines.CoroutineScope;

        r1 := @parameter4: kotlin.jvm.functions.Function0;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r9 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

        r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r4 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r6 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        r11 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r8);

     label3:
        $r3 = virtualinvoke r0.<androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r9, r10, r11, r1);

        return $r3;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, java.util.List, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        java.util.List r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.datastore.core.DataStore $r4;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "migrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "produceFile");

        $r4 = staticinvoke <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.preferences.core.PreferenceDataStoreFactory,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, r2, null, r3, 4, null);

        return $r4;
    }

    public final androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.datastore.core.DataStore $r3;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        r1 := @parameter0: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "produceFile");

        $r3 = staticinvoke <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.preferences.core.PreferenceDataStoreFactory,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, r1, null, null, r2, 6, null);

        return $r3;
    }

    public final androidx.datastore.core.DataStore create(kotlin.jvm.functions.Function0)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.datastore.core.DataStore $r2;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "produceFile");

        $r2 = staticinvoke <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create$default(androidx.datastore.preferences.core.PreferenceDataStoreFactory,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0,int,java.lang.Object)>(r0, null, null, null, r1, 7, null);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory $r0;

        $r0 = new androidx.datastore.preferences.core.PreferenceDataStoreFactory;

        specialinvoke $r0.<androidx.datastore.preferences.core.PreferenceDataStoreFactory: void <init>()>();

        <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.preferences.core.PreferenceDataStoreFactory INSTANCE> = $r0;

        return;
    }

androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1
<androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1: kotlin.jvm.functions.Function0 $produceFile>
    void <init>(kotlin.jvm.functions.Function0)
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1 r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        r0.<androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1: kotlin.jvm.functions.Function0 $produceFile> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.io.File invoke()
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1 r0;
        java.io.File r1;
        boolean z0, z1, z3;
        kotlin.jvm.functions.Function0 $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r6, $r12, $r15, r17;
        androidx.datastore.preferences.core.PreferencesSerializer $r5, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13;
        java.lang.IllegalStateException $r14;
        java.lang.Throwable $r16;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1;

        $r2 = r0.<androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1: kotlin.jvm.functions.Function0 $produceFile>;

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r1 = (java.io.File) $r3;

        $r4 = staticinvoke <kotlin.io.FilesKt: java.lang.String getExtension(java.io.File)>(r1);

        $r5 = <androidx.datastore.preferences.core.PreferencesSerializer: androidx.datastore.preferences.core.PreferencesSerializer INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.preferences.core.PreferencesSerializer: java.lang.String getFileExtension()>();

        z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r6);

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File extension for file: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match required extension for Preferences file: ");

        $r11 = <androidx.datastore.preferences.core.PreferencesSerializer: androidx.datastore.preferences.core.PreferencesSerializer INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.datastore.preferences.core.PreferencesSerializer: java.lang.String getFileExtension()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label1:
        return r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1 r0;
        java.io.File $r1;

        r0 := @this: androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1;

        $r1 = virtualinvoke r0.<androidx.datastore.preferences.core.PreferenceDataStoreFactory$create$delegate$1: java.io.File invoke()>();

        return $r1;
    }

