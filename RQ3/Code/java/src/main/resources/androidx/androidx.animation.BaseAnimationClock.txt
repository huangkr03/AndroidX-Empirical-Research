androidx.animation.BaseAnimationClock
<androidx.animation.BaseAnimationClock: java.util.Set observers>
<androidx.animation.BaseAnimationClock: java.util.List pendingActions>
<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>
<androidx.animation.BaseAnimationClock: int AddAction>
<androidx.animation.BaseAnimationClock: int RemoveAction>
<androidx.animation.BaseAnimationClock: androidx.animation.BaseAnimationClock$Companion Companion>
    private final boolean addToPendingActions(int, androidx.animation.AnimationClockObserver)
    {
        androidx.animation.BaseAnimationClock r0;
        int i0;
        androidx.animation.AnimationClockObserver r1;
        java.util.List r2, $r3, $r5;
        boolean z0, $z2, $z3, z4, $z5, z6;
        java.lang.Integer $r4;
        java.lang.Throwable $r6, r7;

        r0 := @this: androidx.animation.BaseAnimationClock;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.animation.AnimationClockObserver;

        r2 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        z0 = 0;

        z4 = 0;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z2 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        if $z2 == 0 goto label2;

        $r5 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        $z3 = interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z6 = $z5;

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r6 := @caughtexception;

        r7 = $r6;

     label6:
        exitmonitor r2;

        throw r7;

     label7:
        return z6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final boolean pendingActionsIsNotEmpty()
    {
        androidx.animation.BaseAnimationClock r0;
        java.util.List r1, $r3;
        boolean z0, z2, $z3, z4, $z5, z6;
        java.util.Collection r2;
        java.lang.Throwable $r4, r5;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        z0 = 0;

        z4 = 0;

        entermonitor r1;

     label1:
        $r3 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        r2 = (java.util.Collection) $r3;

        z2 = 0;

        $z3 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z6 = $z5;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r4 := @caughtexception;

        r5 = $r4;

     label6:
        exitmonitor r1;

        throw r5;

     label7:
        return z6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void forEachObserver(kotlin.jvm.functions.Function1)
    {
        androidx.animation.BaseAnimationClock r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.Set r2, $r6;
        boolean z1, $z4, z5;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.lang.Throwable $r8, r10;
        kotlin.Unit r9;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = staticinvoke <androidx.animation.BaseAnimationClock: java.util.Set access$getObservers$p(androidx.animation.BaseAnimationClock)>(r0);

        z1 = 0;

        z5 = 0;

        entermonitor r2;

     label1:
        $r6 = staticinvoke <androidx.animation.BaseAnimationClock: java.util.Set access$getObservers$p(androidx.animation.BaseAnimationClock)>(r0);

        $r3 = (java.lang.Iterable) $r6;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        goto label2;

     label3:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label7;

     label5:
        $r8 := @caughtexception;

        r10 = $r8;

     label6:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r10;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void subscribe(androidx.animation.AnimationClockObserver)
    {
        androidx.animation.BaseAnimationClock r0;
        androidx.animation.AnimationClockObserver r1;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 := @parameter0: androidx.animation.AnimationClockObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "observer");

        specialinvoke r0.<androidx.animation.BaseAnimationClock: boolean addToPendingActions(int,androidx.animation.AnimationClockObserver)>(1, r1);

        return;
    }

    public void unsubscribe(androidx.animation.AnimationClockObserver)
    {
        androidx.animation.BaseAnimationClock r0;
        androidx.animation.AnimationClockObserver r1;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 := @parameter0: androidx.animation.AnimationClockObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "observer");

        specialinvoke r0.<androidx.animation.BaseAnimationClock: boolean addToPendingActions(int,androidx.animation.AnimationClockObserver)>(2, r1);

        return;
    }

    public void dispatchTime$ui_animation_core_release(long)
    {
        androidx.animation.BaseAnimationClock r0, r9;
        long l0;
        java.lang.Iterable $r1, r13;
        java.util.Iterator r2, r14;
        java.lang.Object r3, r15;
        androidx.animation.AnimationClockObserver r4, r16;
        java.util.Set $r6, $r7, r10;
        boolean $z2, $z3, $z4, z6, z7;
        java.lang.Throwable $r8, r12;
        kotlin.Unit r11;

        r0 := @this: androidx.animation.BaseAnimationClock;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.animation.BaseAnimationClock: java.util.Set processPendingActions()>();

        r9 = r0;

        r10 = staticinvoke <androidx.animation.BaseAnimationClock: java.util.Set access$getObservers$p(androidx.animation.BaseAnimationClock)>(r9);

        z6 = 0;

        z7 = 0;

        entermonitor r10;

     label01:
        $r6 = staticinvoke <androidx.animation.BaseAnimationClock: java.util.Set access$getObservers$p(androidx.animation.BaseAnimationClock)>(r9);

        $r1 = (java.lang.Iterable) $r6;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.animation.AnimationClockObserver) r3;

        interfaceinvoke r4.<androidx.animation.AnimationClockObserver: void onAnimationFrame(long)>(l0);

        goto label02;

     label03:
        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label04:
        exitmonitor r10;

        goto label07;

     label05:
        $r8 := @caughtexception;

        r12 = $r8;

     label06:
        exitmonitor r10;

        throw r12;

     label07:
        $z3 = specialinvoke r0.<androidx.animation.BaseAnimationClock: boolean pendingActionsIsNotEmpty()>();

        if $z3 == 0 goto label10;

        $r7 = specialinvoke r0.<androidx.animation.BaseAnimationClock: java.util.Set processPendingActions()>();

        r13 = (java.lang.Iterable) $r7;

        r14 = interfaceinvoke r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.animation.AnimationClockObserver) r15;

        interfaceinvoke r16.<androidx.animation.AnimationClockObserver: void onAnimationFrame(long)>(l0);

        goto label08;

     label09:
        goto label07;

     label10:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public final boolean hasObservers$ui_animation_core_release()
    {
        androidx.animation.BaseAnimationClock r0;
        java.util.Set r1, $r4;
        boolean z0, z2, z3, $z4, z5, $z6;
        java.util.Collection r2;
        java.lang.Throwable $r5, r6;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 = r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        z0 = 0;

        z5 = 0;

        entermonitor r1;

     label1:
        specialinvoke r0.<androidx.animation.BaseAnimationClock: java.util.Set processPendingActions()>();

        $r4 = r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        r2 = (java.util.Collection) $r4;

        z2 = 0;

        $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label2;

        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        z3 = $z6;

     label4:
        exitmonitor r1;

        return z3;

     label5:
        $r5 := @caughtexception;

        r6 = $r5;

     label6:
        exitmonitor r1;

        throw r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final java.util.Set processPendingActions()
    {
        androidx.animation.BaseAnimationClock r0;
        java.util.Set r1, r3, r8, r9, r10, $r18, $r23;
        boolean z0, z2, z5, $z7, $z8, $z11, z13, z14;
        java.util.List r2, $r11, $r13, $r14, $r15, $r17, $r20, $r22, $r25;
        java.util.LinkedHashSet r4, $r12;
        java.lang.Iterable $r5;
        java.util.Iterator r6;
        java.lang.Object r7, $r19, $r21, $r24, $r26;
        int i0, i1, i2, i3, $i4, i5;
        java.lang.Number $r16;
        java.lang.Throwable $r27, $r28, r29, r30;

        r0 := @this: androidx.animation.BaseAnimationClock;

        r1 = r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        z0 = 0;

        z13 = 0;

        entermonitor r1;

     label01:
        r2 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        z2 = 0;

        z14 = 0;

        entermonitor r2;

     label02:
        $r11 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        $z7 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z7 == 0 goto label05;

        r3 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label03:
        exitmonitor r2;

        r10 = r3;

     label04:
        exitmonitor r1;

        return r10;

     label05:
        $r12 = new java.util.LinkedHashSet;

        specialinvoke $r12.<java.util.LinkedHashSet: void <init>()>();

        r4 = $r12;

        $r13 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        $r5 = (java.lang.Iterable) $r13;

        i5 = 0;

        r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $i4 = i5;

        i5 = i5 + 1;

        i0 = $i4;

        z5 = 0;

        if i0 >= 0 goto label07;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label07:
        i1 = i0;

        $r16 = (java.lang.Number) r7;

        i2 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        i3 = i1;

        tableswitch(i2)
        {
            case 1: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        $r23 = r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        $r22 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        $r24 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i3);

        $z11 = interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r24);

        if $z11 == 0 goto label10;

        $r25 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i3);

        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r26);

        goto label10;

     label09:
        $r18 = r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        $r17 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        $r19 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i3);

        interfaceinvoke $r18.<java.util.Set: boolean remove(java.lang.Object)>($r19);

        $r20 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i3);

        virtualinvoke r4.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r21);

     label10:
        goto label06;

     label11:
        $r14 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingActions>;

        interfaceinvoke $r14.<java.util.List: void clear()>();

        $r15 = r0.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        r8 = (java.util.Set) r4;

     label12:
        exitmonitor r2;

        r9 = r8;

     label13:
        exitmonitor r1;

        return r9;

     label14:
        $r28 := @caughtexception;

        r29 = $r28;

     label15:
        exitmonitor r2;

        throw r29;

     label16:
        $r27 := @caughtexception;

        r30 = $r27;

     label17:
        exitmonitor r1;

        throw r30;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label12 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label01 to label04 with label16;
        catch java.lang.Throwable from label05 to label13 with label16;
        catch java.lang.Throwable from label14 to label16 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public void <init>()
    {
        androidx.animation.BaseAnimationClock r0, r5, r7;
        java.util.LinkedHashSet $r1;
        java.util.Set $r2;
        java.util.ArrayList $r3, $r4;
        boolean z0, z1;
        java.util.List r6, r8;

        r0 := @this: androidx.animation.BaseAnimationClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        $r2 = (java.util.Set) $r1;

        r0.<androidx.animation.BaseAnimationClock: java.util.Set observers> = $r2;

        r5 = r0;

        z0 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r3;

        r5.<androidx.animation.BaseAnimationClock: java.util.List pendingActions> = r6;

        r7 = r0;

        z1 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r8 = (java.util.List) $r4;

        r7.<androidx.animation.BaseAnimationClock: java.util.List pendingObservers> = r8;

        return;
    }

    static void <clinit>()
    {
        androidx.animation.BaseAnimationClock$Companion $r0;

        $r0 = new androidx.animation.BaseAnimationClock$Companion;

        specialinvoke $r0.<androidx.animation.BaseAnimationClock$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.animation.BaseAnimationClock: androidx.animation.BaseAnimationClock$Companion Companion> = $r0;

        return;
    }

    public static final java.util.Set access$getObservers$p(androidx.animation.BaseAnimationClock)
    {
        androidx.animation.BaseAnimationClock $r0;
        java.util.Set $r1;

        $r0 := @parameter0: androidx.animation.BaseAnimationClock;

        $r1 = $r0.<androidx.animation.BaseAnimationClock: java.util.Set observers>;

        return $r1;
    }

androidx.animation.BaseAnimationClock$Companion
    private void <init>()
    {
        androidx.animation.BaseAnimationClock$Companion r0;

        r0 := @this: androidx.animation.BaseAnimationClock$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.BaseAnimationClock$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.animation.BaseAnimationClock$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.animation.BaseAnimationClock$Companion: void <init>()>();

        return;
    }

