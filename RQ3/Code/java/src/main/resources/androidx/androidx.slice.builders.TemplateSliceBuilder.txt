androidx.slice.builders.TemplateSliceBuilder
<androidx.slice.builders.TemplateSliceBuilder: java.lang.String TAG>
<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.Slice$Builder mBuilder>
<androidx.slice.builders.TemplateSliceBuilder: android.content.Context mContext>
<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl>
<androidx.slice.builders.TemplateSliceBuilder: java.util.List mSpecs>
    protected void <init>(androidx.slice.builders.impl.TemplateBuilderImpl)
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        androidx.slice.builders.impl.TemplateBuilderImpl r1;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        r1 := @parameter0: androidx.slice.builders.impl.TemplateBuilderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.slice.builders.TemplateSliceBuilder: android.content.Context mContext> = null;

        r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.Slice$Builder mBuilder> = null;

        r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl> = r1;

        virtualinvoke r0.<androidx.slice.builders.TemplateSliceBuilder: void setImpl(androidx.slice.builders.impl.TemplateBuilderImpl)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.net.Uri)
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        android.content.Context r1;
        android.net.Uri r2;
        androidx.slice.Slice$Builder $r3;
        java.util.List $r4;
        androidx.slice.builders.impl.TemplateBuilderImpl $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.slice.Slice$Builder;

        specialinvoke $r3.<androidx.slice.Slice$Builder: void <init>(android.net.Uri)>(r2);

        r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.Slice$Builder mBuilder> = $r3;

        r0.<androidx.slice.builders.TemplateSliceBuilder: android.content.Context mContext> = r1;

        $r4 = specialinvoke r0.<androidx.slice.builders.TemplateSliceBuilder: java.util.List getSpecs(android.net.Uri)>(r2);

        r0.<androidx.slice.builders.TemplateSliceBuilder: java.util.List mSpecs> = $r4;

        $r5 = virtualinvoke r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl selectImpl(android.net.Uri)>(r2);

        r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl> = $r5;

        $r6 = r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl>;

        if $r6 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No valid specs found");

        throw $r8;

     label1:
        $r7 = r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl>;

        virtualinvoke r0.<androidx.slice.builders.TemplateSliceBuilder: void setImpl(androidx.slice.builders.impl.TemplateBuilderImpl)>($r7);

        return;
    }

    public androidx.slice.Slice build()
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        androidx.slice.builders.impl.TemplateBuilderImpl $r1;
        androidx.slice.Slice $r2;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        $r1 = r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.builders.impl.TemplateBuilderImpl mImpl>;

        $r2 = virtualinvoke $r1.<androidx.slice.builders.impl.TemplateBuilderImpl: androidx.slice.Slice build()>();

        return $r2;
    }

    protected androidx.slice.Slice$Builder getBuilder()
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        androidx.slice.Slice$Builder $r1;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        $r1 = r0.<androidx.slice.builders.TemplateSliceBuilder: androidx.slice.Slice$Builder mBuilder>;

        return $r1;
    }

<androidx.slice.builders.TemplateSliceBuilder: void setImpl(androidx.slice.builders.impl.TemplateBuilderImpl)>
    protected androidx.slice.builders.impl.TemplateBuilderImpl selectImpl(android.net.Uri)
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        android.net.Uri r1;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    protected boolean checkCompatible(androidx.slice.SliceSpec, android.net.Uri)
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        androidx.slice.SliceSpec r1, $r6;
        android.net.Uri r2;
        int i0, i1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        r1 := @parameter0: androidx.slice.SliceSpec;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<androidx.slice.builders.TemplateSliceBuilder: java.util.List mSpecs>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<androidx.slice.builders.TemplateSliceBuilder: java.util.List mSpecs>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (androidx.slice.SliceSpec) $r5;

        $z0 = virtualinvoke $r6.<androidx.slice.SliceSpec: boolean canRender(androidx.slice.SliceSpec)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private java.util.List getSpecs(android.net.Uri)
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        android.net.Uri r1;
        java.util.Set r2, $r3, $r8;
        android.content.Context $r4;
        androidx.slice.SliceManager $r5;
        java.util.ArrayList $r6, $r7;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        r1 := @parameter0: android.net.Uri;

        $r3 = staticinvoke <androidx.slice.SliceProvider: java.util.Set getCurrentSpecs()>();

        if $r3 == null goto label1;

        $r7 = new java.util.ArrayList;

        $r8 = staticinvoke <androidx.slice.SliceProvider: java.util.Set getCurrentSpecs()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        return $r7;

     label1:
        $r4 = r0.<androidx.slice.builders.TemplateSliceBuilder: android.content.Context mContext>;

        $r5 = staticinvoke <androidx.slice.SliceManager: androidx.slice.SliceManager getInstance(android.content.Context)>($r4);

        r2 = virtualinvoke $r5.<androidx.slice.SliceManager: java.util.Set getPinnedSpecs(android.net.Uri)>(r1);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        return $r6;
    }

    protected androidx.slice.Clock getClock()
    {
        androidx.slice.builders.TemplateSliceBuilder r0;
        androidx.slice.Clock $r1, $r3;
        androidx.slice.SystemClock $r2;

        r0 := @this: androidx.slice.builders.TemplateSliceBuilder;

        $r1 = staticinvoke <androidx.slice.SliceProvider: androidx.slice.Clock getClock()>();

        if $r1 == null goto label1;

        $r3 = staticinvoke <androidx.slice.SliceProvider: androidx.slice.Clock getClock()>();

        return $r3;

     label1:
        $r2 = new androidx.slice.SystemClock;

        specialinvoke $r2.<androidx.slice.SystemClock: void <init>()>();

        return $r2;
    }

    static android.util.Pair pair(androidx.slice.SliceSpec, java.lang.Class)
    {
        androidx.slice.SliceSpec r0;
        java.lang.Class r1;
        android.util.Pair $r2;

        r0 := @parameter0: androidx.slice.SliceSpec;

        r1 := @parameter1: java.lang.Class;

        $r2 = new android.util.Pair;

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

