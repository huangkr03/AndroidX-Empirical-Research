androidx.media3.extractor.mp3.Mp3Extractor
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorsFactory FACTORY>
<androidx.media3.extractor.mp3.Mp3Extractor: int FLAG_ENABLE_CONSTANT_BITRATE_SEEKING>
<androidx.media3.extractor.mp3.Mp3Extractor: int FLAG_ENABLE_CONSTANT_BITRATE_SEEKING_ALWAYS>
<androidx.media3.extractor.mp3.Mp3Extractor: int FLAG_ENABLE_INDEX_SEEKING>
<androidx.media3.extractor.mp3.Mp3Extractor: int FLAG_DISABLE_ID3_METADATA>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate REQUIRED_ID3_FRAME_PREDICATE>
<androidx.media3.extractor.mp3.Mp3Extractor: int MAX_SYNC_BYTES>
<androidx.media3.extractor.mp3.Mp3Extractor: int MAX_SNIFF_BYTES>
<androidx.media3.extractor.mp3.Mp3Extractor: int SCRATCH_LENGTH>
<androidx.media3.extractor.mp3.Mp3Extractor: int MPEG_AUDIO_HEADER_MASK>
<androidx.media3.extractor.mp3.Mp3Extractor: int SEEK_HEADER_XING>
<androidx.media3.extractor.mp3.Mp3Extractor: int SEEK_HEADER_INFO>
<androidx.media3.extractor.mp3.Mp3Extractor: int SEEK_HEADER_VBRI>
<androidx.media3.extractor.mp3.Mp3Extractor: int SEEK_HEADER_UNSET>
<androidx.media3.extractor.mp3.Mp3Extractor: int flags>
<androidx.media3.extractor.mp3.Mp3Extractor: long forcedFirstSampleTimestampUs>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.Id3Peeker id3Peeker>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput skippingTrackOutput>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput realTrackOutput>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput>
<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>
<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs>
<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead>
<androidx.media3.extractor.mp3.Mp3Extractor: long firstSamplePosition>
<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining>
<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>
<androidx.media3.extractor.mp3.Mp3Extractor: boolean disableSeeking>
<androidx.media3.extractor.mp3.Mp3Extractor: boolean isSeekInProgress>
<androidx.media3.extractor.mp3.Mp3Extractor: long seekTimeUs>
    public void <init>()
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        int i0;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: void <init>(int,long)>(i0, -9223372036854775807L);

        return;
    }

    public void <init>(int, long)
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        long l0;
        int $i1, i2;
        androidx.media3.common.util.ParsableByteArray $r1;
        androidx.media3.extractor.MpegAudioUtil$Header $r2;
        androidx.media3.extractor.GaplessInfoHolder $r3;
        androidx.media3.extractor.Id3Peeker $r4;
        androidx.media3.extractor.DummyTrackOutput $r5;
        androidx.media3.extractor.TrackOutput $r6;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        i2 := @parameter0: int;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i2 & 2;

        if $i1 == 0 goto label1;

        i2 = i2 | 1;

     label1:
        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags> = i2;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long forcedFirstSampleTimestampUs> = l0;

        $r1 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(10);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch> = $r1;

        $r2 = new androidx.media3.extractor.MpegAudioUtil$Header;

        specialinvoke $r2.<androidx.media3.extractor.MpegAudioUtil$Header: void <init>()>();

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader> = $r2;

        $r3 = new androidx.media3.extractor.GaplessInfoHolder;

        specialinvoke $r3.<androidx.media3.extractor.GaplessInfoHolder: void <init>()>();

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder> = $r3;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs> = -9223372036854775807L;

        $r4 = new androidx.media3.extractor.Id3Peeker;

        specialinvoke $r4.<androidx.media3.extractor.Id3Peeker: void <init>()>();

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.Id3Peeker id3Peeker> = $r4;

        $r5 = new androidx.media3.extractor.DummyTrackOutput;

        specialinvoke $r5.<androidx.media3.extractor.DummyTrackOutput: void <init>()>();

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput skippingTrackOutput> = $r5;

        $r6 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput skippingTrackOutput>;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput> = $r6;

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $z0 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean synchronize(androidx.media3.extractor.ExtractorInput,boolean)>(r1, 1);

        return $z0;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorOutput r1, $r2, $r5;
        androidx.media3.extractor.TrackOutput $r3, $r4;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r3 = interfaceinvoke $r2.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(0, 1);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput realTrackOutput> = $r3;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput realTrackOutput>;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput> = $r4;

        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        interfaceinvoke $r5.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        return;
    }

    public void seek(long, long)
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        long l0, l1;
        androidx.media3.extractor.mp3.Seeker $r1, $r2;
        boolean $z0, $z1;
        androidx.media3.extractor.mp3.IndexSeeker $r3;
        androidx.media3.extractor.TrackOutput $r4;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData> = 0;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs> = -9223372036854775807L;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead> = 0L;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining> = 0;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long seekTimeUs> = l1;

        $r1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $z0 = $r1 instanceof androidx.media3.extractor.mp3.IndexSeeker;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $r3 = (androidx.media3.extractor.mp3.IndexSeeker) $r2;

        $z1 = virtualinvoke $r3.<androidx.media3.extractor.mp3.IndexSeeker: boolean isTimeUsInIndex(long)>(l1);

        if $z1 != 0 goto label1;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean isSeekInProgress> = 1;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput skippingTrackOutput>;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput> = $r4;

     label1:
        return;
    }

    public void release()
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        int i0;
        long l1, $l2, $l3;
        androidx.media3.extractor.mp3.Seeker $r3, $r4, $r5, $r7;
        boolean $z0;
        byte $b4;
        androidx.media3.extractor.mp3.IndexSeeker $r6;
        androidx.media3.extractor.ExtractorOutput $r8;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: void assertInitialized()>();

        i0 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: int readInternal(androidx.media3.extractor.ExtractorInput)>(r1);

        if i0 != -1 goto label1;

        $r3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $z0 = $r3 instanceof androidx.media3.extractor.mp3.IndexSeeker;

        if $z0 == 0 goto label1;

        $l2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead>;

        l1 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: long computeTimeUs(long)>($l2);

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $l3 = interfaceinvoke $r4.<androidx.media3.extractor.mp3.Seeker: long getDurationUs()>();

        $b4 = $l3 cmp l1;

        if $b4 == 0 goto label1;

        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $r6 = (androidx.media3.extractor.mp3.IndexSeeker) $r5;

        virtualinvoke $r6.<androidx.media3.extractor.mp3.IndexSeeker: void setDurationUs(long)>(l1);

        $r8 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        interfaceinvoke $r8.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r7);

     label1:
        return i0;
    }

    public void disableSeeking()
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean disableSeeking> = 1;

        return;
    }

    private int readInternal(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int $i0, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16;
        androidx.media3.extractor.mp3.Seeker $r2, $r3, $r4;
        long $l1, $l3, $l5, $l6, $l14, l15;
        byte $b2, $b4;
        androidx.media3.extractor.ExtractorOutput $r5;
        androidx.media3.common.Format$Builder $r6, $r10, $r11, $r13, $r15, $r17, $r19, $r20;
        androidx.media3.extractor.TrackOutput $r7;
        androidx.media3.extractor.MpegAudioUtil$Header $r8, $r12, $r14;
        java.lang.String $r9;
        androidx.media3.extractor.GaplessInfoHolder $r16, $r18;
        androidx.media3.common.Format $r21;
        java.lang.Throwable $r22, r23;
        androidx.media3.common.Metadata $r24;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $i0 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData>;

        if $i0 != 0 goto label4;

     label1:
        specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean synchronize(androidx.media3.extractor.ExtractorInput,boolean)>(r1, 0);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        r23 = $r22;

        return -1;

     label4:
        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        if $r2 != null goto label7;

        $r3 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker computeSeeker(androidx.media3.extractor.ExtractorInput)>(r1);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker> = $r3;

        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        interfaceinvoke $r5.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r4);

        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput>;

        $r6 = new androidx.media3.common.Format$Builder;

        specialinvoke $r6.<androidx.media3.common.Format$Builder: void <init>()>();

        $r8 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $r9 = $r8.<androidx.media3.extractor.MpegAudioUtil$Header: java.lang.String mimeType>;

        $r10 = virtualinvoke $r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMaxInputSize(int)>(4096);

        $r12 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i8 = $r12.<androidx.media3.extractor.MpegAudioUtil$Header: int channels>;

        $r13 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>($i8);

        $r14 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i9 = $r14.<androidx.media3.extractor.MpegAudioUtil$Header: int sampleRate>;

        $r15 = virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>($i9);

        $r16 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>;

        $i10 = $r16.<androidx.media3.extractor.GaplessInfoHolder: int encoderDelay>;

        $r17 = virtualinvoke $r15.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderDelay(int)>($i10);

        $r18 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>;

        $i11 = $r18.<androidx.media3.extractor.GaplessInfoHolder: int encoderPadding>;

        $r19 = virtualinvoke $r17.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderPadding(int)>($i11);

        $i12 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags>;

        $i13 = $i12 & 8;

        if $i13 == 0 goto label5;

        $r24 = null;

        goto label6;

     label5:
        $r24 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>;

     label6:
        $r20 = virtualinvoke $r19.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>($r24);

        $r21 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        interfaceinvoke $r7.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r21);

        $l14 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long firstSamplePosition> = $l14;

        goto label8;

     label7:
        $l1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long firstSamplePosition>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label8;

        l15 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long firstSamplePosition>;

        $b4 = l15 cmp $l3;

        if $b4 >= 0 goto label8;

        $l5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long firstSamplePosition>;

        $l6 = $l5 - l15;

        $i7 = (int) $l6;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i7);

     label8:
        $i16 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: int readSample(androidx.media3.extractor.ExtractorInput)>(r1);

        return $i16;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    private int readSample(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i11, $i13, $i16, $i22, i34, $i36, $i37, i38;
        long $l4, $l5, $l8, $l9, $l10, $l12, $l14, $l17, $l18, $l19, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l28, $l30, $l31, $l32, $l33, l35;
        androidx.media3.extractor.TrackOutput $r2, $r11, $r17;
        androidx.media3.extractor.MpegAudioUtil$Header $r3, $r4, $r7, $r9, $r10, $r14;
        boolean $z0, $z1, $z3, $z4, $z5;
        androidx.media3.common.util.ParsableByteArray $r5, $r6;
        byte $b15, $b29;
        androidx.media3.extractor.mp3.Seeker $r8, $r12, $r13, $r15;
        androidx.media3.extractor.mp3.IndexSeeker r16;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $i0 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining>;

        if $i0 != 0 goto label5;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $z0 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean peekEndOfStreamOrHeader(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r6 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i34 = virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        $i11 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData>;

        $l12 = (long) $i11;

        $z1 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: boolean headersMatch(int,long)>(i34, $l12);

        if $z1 == 0 goto label2;

        $i13 = staticinvoke <androidx.media3.extractor.MpegAudioUtil: int getFrameSize(int)>(i34);

        if $i13 != -1 goto label3;

     label2:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(1);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData> = 0;

        return 0;

     label3:
        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        virtualinvoke $r7.<androidx.media3.extractor.MpegAudioUtil$Header: boolean setForHeaderData(int)>(i34);

        $l14 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs>;

        $b15 = $l14 cmp -9223372036854775807L;

        if $b15 != 0 goto label4;

        $r12 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $l26 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l27 = interfaceinvoke $r12.<androidx.media3.extractor.mp3.Seeker: long getTimeUs(long)>($l26);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs> = $l27;

        $l28 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long forcedFirstSampleTimestampUs>;

        $b29 = $l28 cmp -9223372036854775807L;

        if $b29 == 0 goto label4;

        $r13 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        l35 = interfaceinvoke $r13.<androidx.media3.extractor.mp3.Seeker: long getTimeUs(long)>(0L);

        $l32 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs>;

        $l30 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long forcedFirstSampleTimestampUs>;

        $l31 = $l30 - l35;

        $l33 = $l32 + $l31;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs> = $l33;

     label4:
        $r14 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i36 = $r14.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining> = $i36;

        $r15 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        $z5 = $r15 instanceof androidx.media3.extractor.mp3.IndexSeeker;

        if $z5 == 0 goto label5;

        $r8 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        r16 = (androidx.media3.extractor.mp3.IndexSeeker) $r8;

        $l18 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead>;

        $r9 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i16 = $r9.<androidx.media3.extractor.MpegAudioUtil$Header: int samplesPerFrame>;

        $l17 = (long) $i16;

        $l19 = $l18 + $l17;

        $l20 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: long computeTimeUs(long)>($l19);

        $l21 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r10 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i22 = $r10.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        $l23 = (long) $i22;

        $l24 = $l21 + $l23;

        virtualinvoke r16.<androidx.media3.extractor.mp3.IndexSeeker: void maybeAddSeekPoint(long,long)>($l20, $l24);

        $z3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean isSeekInProgress>;

        if $z3 == 0 goto label5;

        $l25 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long seekTimeUs>;

        $z4 = virtualinvoke r16.<androidx.media3.extractor.mp3.IndexSeeker: boolean isTimeUsInIndex(long)>($l25);

        if $z4 == 0 goto label5;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean isSeekInProgress> = 0;

        $r11 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput realTrackOutput>;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput> = $r11;

     label5:
        $r17 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput>;

        $i37 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining>;

        i38 = interfaceinvoke $r17.<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean)>(r1, $i37, 1);

        if i38 != -1 goto label6;

        return -1;

     label6:
        $i1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining>;

        $i2 = $i1 - i38;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining> = $i2;

        $i3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining>;

        if $i3 <= 0 goto label7;

        return 0;

     label7:
        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput currentTrackOutput>;

        $l4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead>;

        $l5 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: long computeTimeUs(long)>($l4);

        $r3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i6 = $r3.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        interfaceinvoke $r2.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l5, 1, $i6, 0, null);

        $l9 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead>;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i7 = $r4.<androidx.media3.extractor.MpegAudioUtil$Header: int samplesPerFrame>;

        $l8 = (long) $i7;

        $l10 = $l9 + $l8;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: long samplesRead> = $l10;

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int sampleBytesRemaining> = 0;

        return 0;
    }

    private long computeTimeUs(long)
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        long l0, $l2, $l3, $l4, $l5, $l6;
        androidx.media3.extractor.MpegAudioUtil$Header $r1;
        int $i1;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        l0 := @parameter0: long;

        $l5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: long basisTimeUs>;

        $l3 = l0 * 1000000L;

        $r1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i1 = $r1.<androidx.media3.extractor.MpegAudioUtil$Header: int sampleRate>;

        $l2 = (long) $i1;

        $l4 = $l3 / $l2;

        $l6 = $l5 + $l4;

        return $l6;
    }

    private boolean synchronize(androidx.media3.extractor.ExtractorInput, boolean) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        boolean z0, $z2, $z4, z5, $z6;
        int i0, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i12, i13, i14, i15, $i16, i17, i18;
        long $l1, $l8, $l11;
        byte $b2;
        androidx.media3.common.util.ParsableByteArray $r2, $r3;
        androidx.media3.extractor.MpegAudioUtil$Header $r4;
        androidx.media3.common.ParserException $r5;
        androidx.media3.extractor.Id3Peeker $r7;
        androidx.media3.common.Metadata $r8, $r9, $r10;
        androidx.media3.extractor.GaplessInfoHolder $r11;
        androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate $r12, r13;
        java.io.EOFException r14;
        java.lang.Throwable r15;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        z0 := @parameter1: boolean;

        i12 = 0;

        i13 = 0;

        i14 = 0;

        i15 = 0;

        if z0 == 0 goto label01;

        $i16 = 32768;

        goto label02;

     label01:
        $i16 = 131072;

     label02:
        i0 = $i16;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label08;

        $i9 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags>;

        $i10 = $i9 & 8;

        if $i10 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z5 = $z4;

        if z5 == 0 goto label05;

        $r12 = null;

        goto label06;

     label05:
        $r12 = <androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate REQUIRED_ID3_FRAME_PREDICATE>;

     label06:
        r13 = $r12;

        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.Id3Peeker id3Peeker>;

        $r8 = virtualinvoke $r7.<androidx.media3.extractor.Id3Peeker: androidx.media3.common.Metadata peekId3Data(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate)>(r1, r13);

        r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata> = $r8;

        $r9 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>;

        if $r9 == null goto label07;

        $r11 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>;

        $r10 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>;

        virtualinvoke $r11.<androidx.media3.extractor.GaplessInfoHolder: boolean setFromMetadata(androidx.media3.common.Metadata)>($r10);

     label07:
        $l11 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPeekPosition()>();

        i14 = (int) $l11;

        if z0 != 0 goto label08;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(i14);

     label08:
        $z6 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean peekEndOfStreamOrHeader(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z6 == 0 goto label10;

        if i12 <= 0 goto label09;

        goto label20;

     label09:
        r14 = new java.io.EOFException;

        specialinvoke r14.<java.io.EOFException: void <init>()>();

        throw r14;

     label10:
        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i17 = virtualinvoke $r3.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        if i13 == 0 goto label11;

        $l8 = (long) i13;

        $z2 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: boolean headersMatch(int,long)>(i17, $l8);

        if $z2 == 0 goto label12;

     label11:
        $i3 = staticinvoke <androidx.media3.extractor.MpegAudioUtil: int getFrameSize(int)>(i17);

        i18 = $i3;

        if $i3 != -1 goto label16;

     label12:
        $i6 = i15;

        i15 = i15 + 1;

        if $i6 != i0 goto label14;

        if z0 != 0 goto label13;

        $r5 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Searched too many bytes.", null);

        r15 = (java.lang.Throwable) $r5;

        throw r15;

     label13:
        return 0;

     label14:
        i12 = 0;

        i13 = 0;

        if z0 == 0 goto label15;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $i7 = i14 + i15;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>($i7);

        goto label19;

     label15:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>(1);

        goto label19;

     label16:
        i12 = i12 + 1;

        if i12 != 1 goto label17;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        virtualinvoke $r4.<androidx.media3.extractor.MpegAudioUtil$Header: boolean setForHeaderData(int)>(i17);

        i13 = i17;

        goto label18;

     label17:
        if i12 != 4 goto label18;

        goto label20;

     label18:
        $i4 = i18 - 4;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>($i4);

     label19:
        goto label08;

     label20:
        if z0 == 0 goto label21;

        $i5 = i14 + i15;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i5);

        goto label22;

     label21:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

     label22:
        r0.<androidx.media3.extractor.mp3.Mp3Extractor: int synchronizedHeaderData> = i13;

        return 1;
    }

    private boolean peekEndOfStreamOrHeader(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.mp3.Seeker $r2, $r3;
        byte $b0, $b3;
        long $l1, $l2, l4;
        java.lang.Throwable $r4, r7;
        androidx.media3.common.util.ParsableByteArray $r5;
        byte[] $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker seeker>;

        l4 = interfaceinvoke $r3.<androidx.media3.extractor.mp3.Seeker: long getDataEndPosition()>();

        $b0 = l4 cmp -1L;

        if $b0 == 0 goto label1;

        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPeekPosition()>();

        $l2 = l4 - 4L;

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label1;

        return 1;

     label1:
        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $z0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r6, 0, 4, 1);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

        return 1;

        catch java.io.EOFException from label1 to label3 with label4;
    }

    private androidx.media3.extractor.mp3.Seeker computeSeeker(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.mp3.Seeker r2, r9;
        androidx.media3.extractor.mp3.MlltSeeker r3;
        androidx.media3.common.Metadata $r4, $r7;
        long $l0, l7, l8, $l9;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.media3.extractor.mp3.Seeker$UnseekableSeeker $r8;
        androidx.media3.extractor.mp3.IndexSeeker $r10;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker maybeReadSeekFrame(androidx.media3.extractor.ExtractorInput)>(r1);

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>;

        $l0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        r3 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.MlltSeeker maybeHandleSeekMetadata(androidx.media3.common.Metadata,long)>($r4, $l0);

        $z0 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: boolean disableSeeking>;

        if $z0 == 0 goto label01;

        $r8 = new androidx.media3.extractor.mp3.Seeker$UnseekableSeeker;

        specialinvoke $r8.<androidx.media3.extractor.mp3.Seeker$UnseekableSeeker: void <init>()>();

        return $r8;

     label01:
        r9 = null;

        $i1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label05;

        l7 = -1L;

        if r3 == null goto label02;

        l8 = interfaceinvoke r3.<androidx.media3.extractor.mp3.Seeker: long getDurationUs()>();

        l7 = interfaceinvoke r3.<androidx.media3.extractor.mp3.Seeker: long getDataEndPosition()>();

        goto label04;

     label02:
        if r2 == null goto label03;

        l8 = interfaceinvoke r2.<androidx.media3.extractor.mp3.Seeker: long getDurationUs()>();

        l7 = interfaceinvoke r2.<androidx.media3.extractor.mp3.Seeker: long getDataEndPosition()>();

        goto label04;

     label03:
        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.Metadata metadata>;

        l8 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: long getId3TlenUs(androidx.media3.common.Metadata)>($r7);

     label04:
        $r10 = new androidx.media3.extractor.mp3.IndexSeeker;

        $l9 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        specialinvoke $r10.<androidx.media3.extractor.mp3.IndexSeeker: void <init>(long,long,long)>(l8, $l9, l7);

        r9 = $r10;

        goto label07;

     label05:
        if r3 == null goto label06;

        r9 = r3;

        goto label07;

     label06:
        if r2 == null goto label07;

        r9 = r2;

     label07:
        if r9 == null goto label08;

        $z1 = interfaceinvoke r9.<androidx.media3.extractor.mp3.Seeker: boolean isSeekable()>();

        if $z1 != 0 goto label11;

        $i5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label11;

     label08:
        $i3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: int flags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        r9 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker getConstantBitrateSeeker(androidx.media3.extractor.ExtractorInput,boolean)>(r1, $z2);

     label11:
        return r9;
    }

    private androidx.media3.extractor.mp3.Seeker maybeReadSeekFrame(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.common.util.ParsableByteArray r2, $r3, $r12, $r14, $r15;
        byte b0, $b15;
        int i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i13, $i14, $i16;
        androidx.media3.extractor.MpegAudioUtil$Header $r4, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r21;
        byte[] $r5, $r13;
        long $l7, $l8, $l11, $l12;
        boolean $z0, $z1;
        androidx.media3.extractor.mp3.Seeker $r10, r20;
        androidx.media3.extractor.GaplessInfoHolder $r11, $r16;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r3 = new androidx.media3.common.util.ParsableByteArray;

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i2 = $r4.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        specialinvoke $r3.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>($i2);

        r2 = $r3;

        $r5 = virtualinvoke r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $r6 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i3 = $r6.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r5, 0, $i3);

        $r7 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i4 = $r7.<androidx.media3.extractor.MpegAudioUtil$Header: int version>;

        $i5 = $i4 & 1;

        if $i5 == 0 goto label2;

        $r19 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i14 = $r19.<androidx.media3.extractor.MpegAudioUtil$Header: int channels>;

        if $i14 == 1 goto label1;

        $b15 = 36;

        goto label4;

     label1:
        $b15 = 21;

        goto label4;

     label2:
        $r8 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i6 = $r8.<androidx.media3.extractor.MpegAudioUtil$Header: int channels>;

        if $i6 == 1 goto label3;

        $b15 = 21;

        goto label4;

     label3:
        $b15 = 13;

     label4:
        b0 = $b15;

        i1 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: int getSeekFrameHeader(androidx.media3.common.util.ParsableByteArray,int)>(r2, b0);

        if i1 == 1483304551 goto label5;

        if i1 != 1231971951 goto label7;

     label5:
        $l7 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $l8 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r9 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        r20 = staticinvoke <androidx.media3.extractor.mp3.XingSeeker: androidx.media3.extractor.mp3.XingSeeker create(long,long,androidx.media3.extractor.MpegAudioUtil$Header,androidx.media3.common.util.ParsableByteArray)>($l7, $l8, $r9, r2);

        if r20 == null goto label6;

        $r11 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>;

        $z1 = virtualinvoke $r11.<androidx.media3.extractor.GaplessInfoHolder: boolean hasGaplessInfo()>();

        if $z1 != 0 goto label6;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        $i9 = b0 + 141;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>($i9);

        $r12 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r13 = virtualinvoke $r12.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r13, 0, 3);

        $r14 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r14.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r16 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder>;

        $r15 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i10 = virtualinvoke $r15.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        virtualinvoke $r16.<androidx.media3.extractor.GaplessInfoHolder: boolean setFromXingHeaderValue(int)>($i10);

     label6:
        $r21 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i16 = $r21.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i16);

        if r20 == null goto label9;

        $z0 = interfaceinvoke r20.<androidx.media3.extractor.mp3.Seeker: boolean isSeekable()>();

        if $z0 != 0 goto label9;

        if i1 != 1231971951 goto label9;

        $r10 = specialinvoke r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.mp3.Seeker getConstantBitrateSeeker(androidx.media3.extractor.ExtractorInput,boolean)>(r1, 0);

        return $r10;

     label7:
        if i1 != 1447187017 goto label8;

        $l11 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $l12 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r17 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        r20 = staticinvoke <androidx.media3.extractor.mp3.VbriSeeker: androidx.media3.extractor.mp3.VbriSeeker create(long,long,androidx.media3.extractor.MpegAudioUtil$Header,androidx.media3.common.util.ParsableByteArray)>($l11, $l12, $r17, r2);

        $r18 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $i13 = $r18.<androidx.media3.extractor.MpegAudioUtil$Header: int frameSize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i13);

        goto label9;

     label8:
        r20 = null;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

     label9:
        return r20;
    }

    private androidx.media3.extractor.mp3.Seeker getConstantBitrateSeeker(androidx.media3.extractor.ExtractorInput, boolean) throws java.io.IOException
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        boolean z0;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5;
        byte[] $r3;
        androidx.media3.extractor.MpegAudioUtil$Header $r6, $r8;
        int $i0;
        androidx.media3.extractor.mp3.ConstantBitrateSeeker $r7;
        long $l1, $l2;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, 0, 4);

        $r4 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r6 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        $r5 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i0 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        virtualinvoke $r6.<androidx.media3.extractor.MpegAudioUtil$Header: boolean setForHeaderData(int)>($i0);

        $r7 = new androidx.media3.extractor.mp3.ConstantBitrateSeeker;

        $l1 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getLength()>();

        $l2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $r8 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader>;

        specialinvoke $r7.<androidx.media3.extractor.mp3.ConstantBitrateSeeker: void <init>(long,long,androidx.media3.extractor.MpegAudioUtil$Header,boolean)>($l1, $l2, $r8, z0);

        return $r7;
    }

    private void assertInitialized()
    {
        androidx.media3.extractor.mp3.Mp3Extractor r0;
        androidx.media3.extractor.TrackOutput $r1;
        androidx.media3.extractor.ExtractorOutput $r3;

        r0 := @this: androidx.media3.extractor.mp3.Mp3Extractor;

        $r1 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.TrackOutput realTrackOutput>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        return;
    }

    private static boolean headersMatch(int, long)
    {
        int i0, $i2;
        long l1, $l3, $l4;
        byte $b5;
        boolean $z0;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = i0 & -128000;

        $l4 = (long) $i2;

        $l3 = l1 & -128000L;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int getSeekFrameHeader(androidx.media3.common.util.ParsableByteArray, int)
    {
        androidx.media3.common.util.ParsableByteArray r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 := @parameter1: int;

        $i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        $i3 = i0 + 4;

        if $i2 < $i3 goto label2;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i0);

        i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        if i1 == 1483304551 goto label1;

        if i1 != 1231971951 goto label2;

     label1:
        return i1;

     label2:
        $i4 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        if $i4 < 40 goto label3;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(36);

        $i5 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        if $i5 != 1447187017 goto label3;

        return 1447187017;

     label3:
        return 0;
    }

    private static androidx.media3.extractor.mp3.MlltSeeker maybeHandleSeekMetadata(androidx.media3.common.Metadata, long)
    {
        androidx.media3.common.Metadata r0;
        long l0, $l2;
        int i1, i3;
        androidx.media3.common.Metadata$Entry r1;
        boolean $z0;
        androidx.media3.extractor.metadata.id3.MlltFrame $r2;
        androidx.media3.extractor.mp3.MlltSeeker $r3;

        r0 := @parameter0: androidx.media3.common.Metadata;

        l0 := @parameter1: long;

        if r0 == null goto label3;

        i1 = virtualinvoke r0.<androidx.media3.common.Metadata: int length()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        r1 = virtualinvoke r0.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i3);

        $z0 = r1 instanceof androidx.media3.extractor.metadata.id3.MlltFrame;

        if $z0 == 0 goto label2;

        $r2 = (androidx.media3.extractor.metadata.id3.MlltFrame) r1;

        $l2 = staticinvoke <androidx.media3.extractor.mp3.Mp3Extractor: long getId3TlenUs(androidx.media3.common.Metadata)>(r0);

        $r3 = staticinvoke <androidx.media3.extractor.mp3.MlltSeeker: androidx.media3.extractor.mp3.MlltSeeker create(long,androidx.media3.extractor.metadata.id3.MlltFrame,long)>(l0, $r2, $l2);

        return $r3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    private static long getId3TlenUs(androidx.media3.common.Metadata)
    {
        androidx.media3.common.Metadata r0;
        int i0, i3;
        androidx.media3.common.Metadata$Entry r1;
        boolean $z0, $z1;
        androidx.media3.extractor.metadata.id3.TextInformationFrame $r2, $r4;
        java.lang.String $r3, $r7;
        com.google.common.collect.ImmutableList $r5;
        java.lang.Object $r6;
        long $l1, $l2;

        r0 := @parameter0: androidx.media3.common.Metadata;

        if r0 == null goto label3;

        i0 = virtualinvoke r0.<androidx.media3.common.Metadata: int length()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i3);

        $z0 = r1 instanceof androidx.media3.extractor.metadata.id3.TextInformationFrame;

        if $z0 == 0 goto label2;

        $r2 = (androidx.media3.extractor.metadata.id3.TextInformationFrame) r1;

        $r3 = $r2.<androidx.media3.extractor.metadata.id3.TextInformationFrame: java.lang.String id>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("TLEN");

        if $z1 == 0 goto label2;

        $r4 = (androidx.media3.extractor.metadata.id3.TextInformationFrame) r1;

        $r5 = $r4.<androidx.media3.extractor.metadata.id3.TextInformationFrame: com.google.common.collect.ImmutableList values>;

        $r6 = virtualinvoke $r5.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        $l2 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l1);

        return $l2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -9223372036854775807L;
    }

    private static boolean lambda$static$1(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        if i1 != 67 goto label1;

        if i2 != 79 goto label1;

        if i3 != 77 goto label1;

        if i4 == 77 goto label2;

        if i0 == 2 goto label2;

     label1:
        if i1 != 77 goto label3;

        if i2 != 76 goto label3;

        if i3 != 76 goto label3;

        if i4 == 84 goto label2;

        if i0 != 2 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static androidx.media3.extractor.Extractor[] lambda$static$0()
    {
        androidx.media3.extractor.Extractor[] $r0;
        androidx.media3.extractor.mp3.Mp3Extractor $r1;

        $r0 = newarray (androidx.media3.extractor.Extractor)[1];

        $r1 = new androidx.media3.extractor.mp3.Mp3Extractor;

        specialinvoke $r1.<androidx.media3.extractor.mp3.Mp3Extractor: void <init>()>();

        $r0[0] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.extractor.ExtractorsFactory $r0;
        androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate $r1;

        $r0 = dynamicinvoke "createExtractors" <androidx.media3.extractor.ExtractorsFactory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.Extractor[] lambda$static$0()>, methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__());

        <androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.ExtractorsFactory FACTORY> = $r0;

        $r1 = dynamicinvoke "evaluate" <androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(int,int,int,int,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.mp3.Mp3Extractor: boolean lambda$static$1(int,int,int,int,int)>, methodtype: boolean __METHODTYPE__(int,int,int,int,int));

        <androidx.media3.extractor.mp3.Mp3Extractor: androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate REQUIRED_ID3_FRAME_PREDICATE> = $r1;

        return;
    }

androidx.media3.extractor.mp3.Mp3Extractor$Flags
