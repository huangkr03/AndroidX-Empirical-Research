androidx.constraintlayout.core.parser.CLToken
<androidx.constraintlayout.core.parser.CLToken: int index>
<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>
<androidx.constraintlayout.core.parser.CLToken: char[] tokenTrue>
<androidx.constraintlayout.core.parser.CLToken: char[] tokenFalse>
<androidx.constraintlayout.core.parser.CLToken: char[] tokenNull>
    public boolean getBoolean() throws androidx.constraintlayout.core.parser.CLParsingException
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        androidx.constraintlayout.core.parser.CLToken$Type $r1, $r2, $r3, $r4;
        java.lang.StringBuilder $r7, $r9, $r10, r12;
        java.lang.String $r8, $r11;
        androidx.constraintlayout.core.parser.CLParsingException r13;
        java.lang.Throwable r14;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        $r2 = r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>;

        $r1 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        $r4 = r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>;

        $r3 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE>;

        if $r4 != $r3 goto label2;

        return 0;

     label2:
        r13 = new androidx.constraintlayout.core.parser.CLParsingException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this token is not a boolean: <");

        $r8 = virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: java.lang.String content()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<androidx.constraintlayout.core.parser.CLParsingException: void <init>(java.lang.String,androidx.constraintlayout.core.parser.CLElement)>($r11, r0);

        r14 = (java.lang.Throwable) r13;

        throw r14;
    }

    public boolean isNull() throws androidx.constraintlayout.core.parser.CLParsingException
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        androidx.constraintlayout.core.parser.CLToken$Type $r1, $r2;
        java.lang.StringBuilder $r5, $r7, $r8, r10;
        java.lang.String $r6, $r9;
        androidx.constraintlayout.core.parser.CLParsingException r11;
        java.lang.Throwable r12;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        $r2 = r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>;

        $r1 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        r11 = new androidx.constraintlayout.core.parser.CLParsingException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this token is not a null: <");

        $r6 = virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: java.lang.String content()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<androidx.constraintlayout.core.parser.CLParsingException: void <init>(java.lang.String,androidx.constraintlayout.core.parser.CLElement)>($r9, r0);

        r12 = (java.lang.Throwable) r11;

        throw r12;
    }

    public void <init>(char[])
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        char[] r1, $r4, $r6, $r8;
        androidx.constraintlayout.core.parser.CLToken$Type $r2;
        java.lang.String $r3, $r5, $r7;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        r1 := @parameter0: char[];

        specialinvoke r0.<androidx.constraintlayout.core.parser.CLElement: void <init>(char[])>(r1);

        r0.<androidx.constraintlayout.core.parser.CLToken: int index> = 0;

        $r2 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type UNKNOWN>;

        r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type> = $r2;

        $r3 = "true";

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenTrue> = $r4;

        $r5 = "false";

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenFalse> = $r6;

        $r7 = "null";

        $r8 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

        r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenNull> = $r8;

        return;
    }

    public static androidx.constraintlayout.core.parser.CLElement allocate(char[])
    {
        char[] r0;
        androidx.constraintlayout.core.parser.CLToken $r1;

        r0 := @parameter0: char[];

        $r1 = new androidx.constraintlayout.core.parser.CLToken;

        specialinvoke $r1.<androidx.constraintlayout.core.parser.CLToken: void <init>(char[])>(r0);

        return $r1;
    }

    protected java.lang.String toJSON()
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        boolean $z0;
        java.lang.String $r1, $r4, $r7;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        $z0 = <androidx.constraintlayout.core.parser.CLParser: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r4 = virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: java.lang.String content()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        $r1 = virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: java.lang.String content()>();

        return $r1;
    }

    protected java.lang.String toFormattedJSON(int, int)
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        int i0, i1;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: void addIndent(java.lang.StringBuilder,int)>(r1, i0);

        $r3 = virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: java.lang.String content()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public androidx.constraintlayout.core.parser.CLToken$Type getType()
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        androidx.constraintlayout.core.parser.CLToken$Type $r1;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        $r1 = r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>;

        return $r1;
    }

    public boolean validate(char, long)
    {
        androidx.constraintlayout.core.parser.CLToken r0;
        char c0, $c5, $c7, $c9, $c11, $c16, $c21;
        long l1;
        androidx.constraintlayout.core.parser.CLToken$Type $r1, $r6, $r7, $r8;
        int[] $r2;
        int $i2, $i3, $i4, $i6, $i8, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26;
        char[] $r3, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken;

        c0 := @parameter0: char;

        l1 := @parameter1: long;

        z0 = 0;

        $r2 = <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>;

        $r1 = r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type>;

        $i2 = virtualinvoke $r1.<androidx.constraintlayout.core.parser.CLToken$Type: int ordinal()>();

        $i3 = $r2[$i2];

        tableswitch($i3)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label10;
            default: goto label13;
        };

     label01:
        $r13 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenTrue>;

        $i20 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c21 = $r13[$i20];

        if $c21 != c0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z0 = $z1;

        if z0 == 0 goto label13;

        $i22 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $i24 = $i22 + 1;

        $r14 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenTrue>;

        $i23 = lengthof $r14;

        if $i24 != $i23 goto label13;

        virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: void setEnd(long)>(l1);

        goto label13;

     label04:
        $r11 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenFalse>;

        $i15 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c16 = $r11[$i15];

        if $c16 != c0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z0 = $z2;

        if z0 == 0 goto label13;

        $i17 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $i19 = $i17 + 1;

        $r12 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenFalse>;

        $i18 = lengthof $r12;

        if $i19 != $i18 goto label13;

        virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: void setEnd(long)>(l1);

        goto label13;

     label07:
        $r9 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenNull>;

        $i10 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c11 = $r9[$i10];

        if $c11 != c0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z0 = $z3;

        if z0 == 0 goto label13;

        $i12 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $i14 = $i12 + 1;

        $r10 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenNull>;

        $i13 = lengthof $r10;

        if $i14 != $i13 goto label13;

        virtualinvoke r0.<androidx.constraintlayout.core.parser.CLToken: void setEnd(long)>(l1);

        goto label13;

     label10:
        $r3 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenTrue>;

        $i4 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c5 = $r3[$i4];

        if $c5 != c0 goto label11;

        $r8 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE>;

        r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type> = $r8;

        z0 = 1;

        goto label13;

     label11:
        $r4 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenFalse>;

        $i6 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c7 = $r4[$i6];

        if $c7 != c0 goto label12;

        $r7 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE>;

        r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type> = $r7;

        z0 = 1;

        goto label13;

     label12:
        $r5 = r0.<androidx.constraintlayout.core.parser.CLToken: char[] tokenNull>;

        $i8 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $c9 = $r5[$i8];

        if $c9 != c0 goto label13;

        $r6 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL>;

        r0.<androidx.constraintlayout.core.parser.CLToken: androidx.constraintlayout.core.parser.CLToken$Type type> = $r6;

        z0 = 1;

     label13:
        $i25 = r0.<androidx.constraintlayout.core.parser.CLToken: int index>;

        $i26 = $i25 + 1;

        r0.<androidx.constraintlayout.core.parser.CLToken: int index> = $i26;

        return z0;
    }

androidx.constraintlayout.core.parser.CLToken$1
<androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>
    static void <clinit>()
    {
        androidx.constraintlayout.core.parser.CLToken$Type[] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r3, $r5, $r7, $r9;
        androidx.constraintlayout.core.parser.CLToken$Type $r2, $r4, $r6, $r8;
        java.lang.Throwable $r10, $r11, $r12, $r13, r14, r15, r16, r17;

        $r0 = staticinvoke <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type> = $r1;

     label01:
        $r3 = <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>;

        $r2 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE>;

        $i1 = virtualinvoke $r2.<androidx.constraintlayout.core.parser.CLToken$Type: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        r14 = $r11;

     label04:
        $r5 = <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>;

        $r4 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE>;

        $i2 = virtualinvoke $r4.<androidx.constraintlayout.core.parser.CLToken$Type: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        r15 = $r10;

     label07:
        $r7 = <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>;

        $r6 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL>;

        $i3 = virtualinvoke $r6.<androidx.constraintlayout.core.parser.CLToken$Type: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r16 = $r13;

     label10:
        $r9 = <androidx.constraintlayout.core.parser.CLToken$1: int[] $SwitchMap$androidx$constraintlayout$core$parser$CLToken$Type>;

        $r8 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type UNKNOWN>;

        $i4 = virtualinvoke $r8.<androidx.constraintlayout.core.parser.CLToken$Type: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        r17 = $r12;

     label13:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
    }

androidx.constraintlayout.core.parser.CLToken$Type
<androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type UNKNOWN>
<androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE>
<androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE>
<androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL>
<androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type[] $VALUES>
    public static androidx.constraintlayout.core.parser.CLToken$Type[] values()
    {
        androidx.constraintlayout.core.parser.CLToken$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.constraintlayout.core.parser.CLToken$Type[]) $r1;

        return $r2;
    }

    public static androidx.constraintlayout.core.parser.CLToken$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.constraintlayout.core.parser.CLToken$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/constraintlayout/core/parser/CLToken$Type;", r0);

        $r2 = (androidx.constraintlayout.core.parser.CLToken$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.constraintlayout.core.parser.CLToken$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.constraintlayout.core.parser.CLToken$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.constraintlayout.core.parser.CLToken$Type $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        androidx.constraintlayout.core.parser.CLToken$Type[] $r4;

        $r0 = new androidx.constraintlayout.core.parser.CLToken$Type;

        specialinvoke $r0.<androidx.constraintlayout.core.parser.CLToken$Type: void <init>(java.lang.String,int)>("UNKNOWN", 0);

        <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type UNKNOWN> = $r0;

        $r1 = new androidx.constraintlayout.core.parser.CLToken$Type;

        specialinvoke $r1.<androidx.constraintlayout.core.parser.CLToken$Type: void <init>(java.lang.String,int)>("TRUE", 1);

        <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE> = $r1;

        $r2 = new androidx.constraintlayout.core.parser.CLToken$Type;

        specialinvoke $r2.<androidx.constraintlayout.core.parser.CLToken$Type: void <init>(java.lang.String,int)>("FALSE", 2);

        <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE> = $r2;

        $r3 = new androidx.constraintlayout.core.parser.CLToken$Type;

        specialinvoke $r3.<androidx.constraintlayout.core.parser.CLToken$Type: void <init>(java.lang.String,int)>("NULL", 3);

        <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL> = $r3;

        $r4 = newarray (androidx.constraintlayout.core.parser.CLToken$Type)[4];

        $r5 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type UNKNOWN>;

        $r4[0] = $r5;

        $r6 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type TRUE>;

        $r4[1] = $r6;

        $r7 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type FALSE>;

        $r4[2] = $r7;

        $r8 = <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type NULL>;

        $r4[3] = $r8;

        <androidx.constraintlayout.core.parser.CLToken$Type: androidx.constraintlayout.core.parser.CLToken$Type[] $VALUES> = $r4;

        return;
    }

