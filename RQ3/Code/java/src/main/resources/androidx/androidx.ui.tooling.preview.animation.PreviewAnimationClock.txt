androidx.ui.tooling.preview.animation.PreviewAnimationClock
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: kotlin.jvm.functions.Function0 setClockTimeCallback>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.String TAG>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: boolean DEBUG>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashSet pendingObservers>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.Object pendingObserversLock>
<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>
    public void <init>(long, kotlin.jvm.functions.Function0)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        long l0, $l1;
        kotlin.jvm.functions.Function0 r1;
        java.util.HashMap $r2, $r3;
        java.util.HashSet $r4;
        java.lang.Object $r5;
        androidx.compose.animation.core.ManualAnimationClock $r6;
        boolean z0, z1, z2;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        l0 := @parameter0: long;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "setClockTimeCallback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs> = l0;

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: kotlin.jvm.functions.Function0 setClockTimeCallback> = r1;

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.String TAG> = "PreviewAnimationClock";

        z0 = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations> = $r2;

        z1 = 0;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations> = $r3;

        z2 = 0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashSet pendingObservers> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.Object pendingObserversLock> = $r5;

        $r6 = new androidx.compose.animation.core.ManualAnimationClock;

        $l1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs>;

        specialinvoke $r6.<androidx.compose.animation.core.ManualAnimationClock: void <init>(long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($l1, 0, 2, null);

        r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock> = $r6;

        return;
    }

    public void <init>(long, kotlin.jvm.functions.Function0, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 $r2;
        long l3;
        kotlin.jvm.functions.Function0 r3;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        l3 := @parameter0: long;

        r3 := @parameter1: kotlin.jvm.functions.Function0;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l3 = 0L;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        $r2 = <androidx.ui.tooling.preview.animation.PreviewAnimationClock$1: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 INSTANCE>;

        r3 = (kotlin.jvm.functions.Function0) $r2;

     label2:
        specialinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: void <init>(long,kotlin.jvm.functions.Function0)>(l3, r3);

        return;
    }

    public final java.util.HashMap getObserversToAnimations$ui_tooling_release()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>;

        return $r1;
    }

    public static void getObserversToAnimations$ui_tooling_release$annotations$ui_tooling_release()
    {
        return;
    }

    public final java.util.HashMap getSeekableAnimations$ui_tooling_release()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        return $r1;
    }

    public static void getSeekableAnimations$ui_tooling_release$annotations$ui_tooling_release()
    {
        return;
    }

    public final androidx.compose.animation.core.ManualAnimationClock getClock$ui_tooling_release()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.core.ManualAnimationClock $r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>;

        return $r1;
    }

    public static void getClock$ui_tooling_release$annotations$ui_tooling_release()
    {
        return;
    }

    public void subscribe(androidx.compose.animation.core.AnimationClockObserver)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.core.AnimationClockObserver r1, r16;
        androidx.compose.animation.tooling.ComposeAnimation r2, r3, $r17, r18;
        boolean z0, z1, z3, $z4, $z5, $z6;
        java.util.Map r4;
        java.util.HashMap $r5, $r7;
        androidx.compose.animation.core.ManualAnimationClock $r6;
        androidx.compose.animation.core.TransitionAnimation$TransitionAnimationClockObserver $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;
        java.lang.String $r11, $r15;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.core.AnimationClockObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "observer");

        $r5 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>;

        $z4 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z4 == 0 goto label1;

        return;

     label1:
        $z5 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: boolean DEBUG>;

        if $z5 == 0 goto label2;

        $r11 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimationClockObserver ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subscribed");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r15);

     label2:
        $r6 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>;

        virtualinvoke $r6.<androidx.compose.animation.core.ManualAnimationClock: void subscribe(androidx.compose.animation.core.AnimationClockObserver)>(r1);

        r16 = r1;

        $z6 = r16 instanceof androidx.compose.animation.core.TransitionAnimation$TransitionAnimationClockObserver;

        if $z6 == 0 goto label3;

        $r9 = (androidx.compose.animation.core.TransitionAnimation$TransitionAnimationClockObserver) r1;

        $r17 = staticinvoke <androidx.ui.tooling.preview.animation.ComposeAnimationParserKt: androidx.compose.animation.tooling.ComposeAnimation parse(androidx.compose.animation.core.TransitionAnimation$TransitionAnimationClockObserver)>($r9);

        goto label4;

     label3:
        $r17 = (androidx.compose.animation.tooling.ComposeAnimation) null;

     label4:
        r2 = $r17;

        if r2 != null goto label5;

        goto label6;

     label5:
        r18 = r2;

        z0 = 0;

        z1 = 0;

        r3 = r18;

        $r7 = virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap getObserversToAnimations$ui_tooling_release()>();

        r4 = (java.util.Map) $r7;

        z3 = 0;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: void notifySubscribe(androidx.compose.animation.tooling.ComposeAnimation)>(r3);

     label6:
        return;
    }

    public void unsubscribe(androidx.compose.animation.core.AnimationClockObserver)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.core.AnimationClockObserver r1;
        androidx.compose.animation.tooling.ComposeAnimation r2, r21, r22;
        java.util.HashSet $r3;
        boolean $z1, $z2, z3, z4, z6;
        androidx.compose.animation.core.ManualAnimationClock $r4;
        java.util.HashMap $r5, $r7;
        java.lang.Object $r6, $r8, r18;
        androidx.compose.animation.core.SeekableAnimation $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r15;
        java.lang.String $r12, $r16;
        java.lang.Throwable $r17, r20;
        kotlin.Unit r19;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.core.AnimationClockObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "observer");

        r18 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.Object pendingObserversLock>;

        z3 = 0;

        z4 = 0;

        entermonitor r18;

     label01:
        $r3 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashSet pendingObservers>;

        $z1 = virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

     label02:
        exitmonitor r18;

        return;

     label03:
        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label04:
        exitmonitor r18;

        goto label07;

     label05:
        $r17 := @caughtexception;

        r20 = $r17;

     label06:
        exitmonitor r18;

        throw r20;

     label07:
        $z2 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: boolean DEBUG>;

        if $z2 == 0 goto label08;

        $r12 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimationClockObserver ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unsubscribed");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r12, $r16);

     label08:
        $r4 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>;

        virtualinvoke $r4.<androidx.compose.animation.core.ManualAnimationClock: void unsubscribe(androidx.compose.animation.core.AnimationClockObserver)>(r1);

        $r5 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r21 = (androidx.compose.animation.tooling.ComposeAnimation) $r6;

        if r21 != null goto label09;

        goto label10;

     label09:
        r22 = r21;

        z6 = 0;

        r2 = r22;

        virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: void notifyUnsubscribe(androidx.compose.animation.tooling.ComposeAnimation)>(r2);

        $r7 = virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap getSeekableAnimations$ui_tooling_release()>();

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r9 = (androidx.compose.animation.core.SeekableAnimation) $r8;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    protected void notifySubscribe(androidx.compose.animation.tooling.ComposeAnimation)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.tooling.ComposeAnimation r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.tooling.ComposeAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        return;
    }

    protected void notifyUnsubscribe(androidx.compose.animation.tooling.ComposeAnimation)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.tooling.ComposeAnimation r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.tooling.ComposeAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        return;
    }

    public final void updateSeekableAnimation(androidx.compose.animation.tooling.ComposeAnimation, java.lang.Object, java.lang.Object)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.tooling.ComposeAnimation r1;
        java.lang.Object r2, r3, $r9;
        androidx.compose.animation.core.TransitionAnimation r4;
        java.util.Map r5;
        androidx.compose.animation.core.SeekableAnimation r6;
        boolean z0;
        androidx.compose.animation.tooling.ComposeAnimationType $r7, $r8;
        java.util.HashMap $r10;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.tooling.ComposeAnimation;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeAnimation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "fromState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "toState");

        $r7 = interfaceinvoke r1.<androidx.compose.animation.tooling.ComposeAnimation: androidx.compose.animation.tooling.ComposeAnimationType getType()>();

        $r8 = <androidx.compose.animation.tooling.ComposeAnimationType: androidx.compose.animation.tooling.ComposeAnimationType TRANSITION_ANIMATION>;

        if $r7 == $r8 goto label1;

        return;

     label1:
        $r9 = interfaceinvoke r1.<androidx.compose.animation.tooling.ComposeAnimation: java.lang.Object getAnimationObject()>();

        r4 = (androidx.compose.animation.core.TransitionAnimation) $r9;

        $r10 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        r5 = (java.util.Map) $r10;

        r6 = staticinvoke <androidx.compose.animation.core.ToolingGlueKt: androidx.compose.animation.core.SeekableAnimation createSeekableAnimation(androidx.compose.animation.core.TransitionAnimation,java.lang.Object,java.lang.Object)>(r4, r2, r3);

        z0 = 0;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

        return;
    }

    public final void updateAnimationStates()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2, r20, r21;
        androidx.compose.animation.core.AnimationClockObserver r4;
        boolean z1, z2, $z5, z8, z9, z10, z11, z14;
        androidx.compose.animation.core.SeekableAnimation r5, r23, r24;
        java.util.HashMap $r6, $r13;
        java.util.Set $r7;
        java.util.HashSet $r8, $r15;
        long $l0;
        androidx.compose.animation.core.ManualAnimationClock $r9;
        java.lang.Object $r10, $r11, $r12, $r14, $r16, r25, r28, r29, $r30;
        java.lang.Throwable $r17, $r18, r26, r32;
        java.util.Map r19;
        androidx.compose.animation.tooling.ComposeAnimation r22;
        androidx.compose.animation.core.TransitionAnimation r27;
        kotlin.Unit r31;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r6 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>;

        r19 = (java.util.Map) $r6;

        $r7 = interfaceinvoke r19.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r10;

        r20 = r2;

        z8 = 0;

        $r11 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (androidx.compose.animation.core.AnimationClockObserver) $r11;

        r21 = r2;

        z9 = 0;

        $r12 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (androidx.compose.animation.tooling.ComposeAnimation) $r12;

        $r13 = virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap getSeekableAnimations$ui_tooling_release()>();

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r22);

        r23 = (androidx.compose.animation.core.SeekableAnimation) $r14;

        if r23 != null goto label02;

        goto label08;

     label02:
        r24 = r23;

        z1 = 0;

        z2 = 0;

        r5 = r24;

        r25 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.Object pendingObserversLock>;

        z10 = 0;

        z11 = 0;

        entermonitor r25;

     label03:
        $r15 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashSet pendingObservers>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label04:
        exitmonitor r25;

        goto label07;

     label05:
        $r18 := @caughtexception;

        r26 = $r18;

     label06:
        exitmonitor r25;

        throw r26;

     label07:
        $r16 = interfaceinvoke r22.<androidx.compose.animation.tooling.ComposeAnimation: java.lang.Object getAnimationObject()>();

        r27 = (androidx.compose.animation.core.TransitionAnimation) $r16;

        r28 = virtualinvoke r5.<androidx.compose.animation.core.SeekableAnimation: java.lang.Object getFromState()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r28);

        virtualinvoke r27.<androidx.compose.animation.core.TransitionAnimation: void snapToState(java.lang.Object)>(r28);

        r29 = virtualinvoke r5.<androidx.compose.animation.core.SeekableAnimation: java.lang.Object getToState()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r29);

        virtualinvoke r27.<androidx.compose.animation.core.TransitionAnimation: void toState(java.lang.Object)>(r29);

     label08:
        goto label01;

     label09:
        $r30 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.lang.Object pendingObserversLock>;

        z14 = 0;

        entermonitor $r30;

     label10:
        $r8 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashSet pendingObservers>;

        virtualinvoke $r8.<java.util.HashSet: void clear()>();

        r31 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label11:
        exitmonitor $r30;

        goto label14;

     label12:
        $r17 := @caughtexception;

        r32 = $r17;

     label13:
        exitmonitor $r30;

        throw r32;

     label14:
        $r9 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>;

        $l0 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs>;

        virtualinvoke $r9.<androidx.compose.animation.core.ManualAnimationClock: void setClockTimeMillis(long)>($l0);

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public final long getMaxDuration()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.lang.Long r1, r9;
        java.util.Map $r2, r4;
        java.util.Collection r3, r8;
        boolean z2, $z4;
        java.util.Iterator r5;
        java.util.Map$Entry r6, r7;
        java.util.HashMap $r10;
        java.util.ArrayList $r11;
        int $i0;
        java.util.Set $r12;
        java.util.List $r13;
        java.lang.Iterable $r14;
        java.lang.Comparable $r15;
        java.lang.Object $r16, $r17;
        androidx.compose.animation.core.SeekableAnimation $r18;
        long $l1, $l2;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r10 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        $r2 = (java.util.Map) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = (java.util.Collection) $r11;

        r4 = $r2;

        z2 = 0;

        $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r16;

        r7 = r6;

        r8 = r3;

        $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (androidx.compose.animation.core.SeekableAnimation) $r17;

        $l1 = virtualinvoke $r18.<androidx.compose.animation.core.SeekableAnimation: long getDuration()>();

        r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r13 = (java.util.List) r3;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)>($r14);

        r1 = (java.lang.Long) $r15;

        if r1 != null goto label3;

        $l2 = -1L;

        goto label4;

     label3:
        $l2 = virtualinvoke r1.<java.lang.Long: long longValue()>();

     label4:
        return $l2;
    }

    public final long getMaxDurationPerIteration()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.lang.Long r1, r9;
        java.util.Map $r2, r4;
        java.util.Collection r3, r8;
        boolean z2, $z4;
        java.util.Iterator r5;
        java.util.Map$Entry r6, r7;
        java.util.HashMap $r10;
        java.util.ArrayList $r11;
        int $i0;
        java.util.Set $r12;
        java.util.List $r13;
        java.lang.Iterable $r14;
        java.lang.Comparable $r15;
        java.lang.Object $r16, $r17;
        androidx.compose.animation.core.SeekableAnimation $r18;
        long $l1, $l2;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r10 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        $r2 = (java.util.Map) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = (java.util.Collection) $r11;

        r4 = $r2;

        z2 = 0;

        $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r16;

        r7 = r6;

        r8 = r3;

        $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (androidx.compose.animation.core.SeekableAnimation) $r17;

        $l1 = virtualinvoke $r18.<androidx.compose.animation.core.SeekableAnimation: long getMaxDurationPerIteration()>();

        r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r9);

        goto label1;

     label2:
        $r13 = (java.util.List) r3;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)>($r14);

        r1 = (java.lang.Long) $r15;

        if r1 != null goto label3;

        $l2 = -1L;

        goto label4;

     label3:
        $l2 = virtualinvoke r1.<java.lang.Long: long longValue()>();

     label4:
        return $l2;
    }

    public final java.util.List getAnimatedProperties(androidx.compose.animation.tooling.ComposeAnimation)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        androidx.compose.animation.tooling.ComposeAnimation r1;
        androidx.compose.animation.core.SeekableAnimation r2, r3, r4;
        boolean z0, z1, $z6;
        long l0, $l1, $l2;
        java.lang.Iterable $r5;
        java.util.Collection r6, r10;
        java.util.Iterator r7;
        java.lang.Object r8, $r15, $r22, $r25;
        java.util.Map$Entry r9;
        androidx.compose.animation.tooling.ComposeAnimatedProperty r11, $r21;
        androidx.compose.animation.tooling.ComposeAnimationType $r12, $r13;
        java.util.HashMap $r14;
        androidx.compose.animation.core.ManualAnimationClock $r16;
        java.util.Map $r17;
        java.util.Set $r18;
        java.util.ArrayList $r19;
        int $i3;
        java.util.List $r20, $r26, $r27;
        androidx.compose.animation.core.PropKey $r23;
        java.lang.String $r24;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        r1 := @parameter0: androidx.compose.animation.tooling.ComposeAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        $r12 = interfaceinvoke r1.<androidx.compose.animation.tooling.ComposeAnimation: androidx.compose.animation.tooling.ComposeAnimationType getType()>();

        $r13 = <androidx.compose.animation.tooling.ComposeAnimationType: androidx.compose.animation.tooling.ComposeAnimationType TRANSITION_ANIMATION>;

        if $r12 == $r13 goto label1;

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r27;

     label1:
        $r14 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.compose.animation.core.SeekableAnimation) $r15;

        if r2 != null goto label2;

        goto label5;

     label2:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        $r16 = virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock getClock$ui_tooling_release()>();

        $l1 = virtualinvoke $r16.<androidx.compose.animation.core.ManualAnimationClock: long getClockTimeMillis()>();

        $l2 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs>;

        l0 = $l1 - $l2;

        $r17 = virtualinvoke r4.<androidx.compose.animation.core.SeekableAnimation: java.util.Map getAnimValuesAt(long)>(l0);

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r5 = (java.lang.Iterable) $r18;

        $r19 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r5, 10);

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i3);

        r6 = (java.util.Collection) $r19;

        r7 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label4;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) r8;

        r10 = r6;

        $r21 = new androidx.compose.animation.tooling.ComposeAnimatedProperty;

        $r22 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (androidx.compose.animation.core.PropKey) $r22;

        $r24 = interfaceinvoke $r23.<androidx.compose.animation.core.PropKey: java.lang.String getLabel()>();

        $r25 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r21.<androidx.compose.animation.tooling.ComposeAnimatedProperty: void <init>(java.lang.String,java.lang.Object)>($r24, $r25);

        r11 = $r21;

        interfaceinvoke r10.<java.util.Collection: boolean add(java.lang.Object)>(r11);

        goto label3;

     label4:
        $r20 = (java.util.List) r6;

        return $r20;

     label5:
        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r26;
    }

    public final void setClockTime(long)
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        long l0, $l1, $l2;
        androidx.compose.animation.core.ManualAnimationClock $r1;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: androidx.compose.animation.core.ManualAnimationClock clock>;

        $l1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: long initialTimeMs>;

        $l2 = $l1 + l0;

        virtualinvoke $r1.<androidx.compose.animation.core.ManualAnimationClock: void setClockTimeMillis(long)>($l2);

        $r2 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: kotlin.jvm.functions.Function0 setClockTimeCallback>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    public final void dispose()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        $r1 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap observersToAnimations>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: java.util.HashMap seekableAnimations>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return;
    }

    public void <init>()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock r0;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock;

        specialinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock: void <init>(long,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0L, null, 3, null);

        return;
    }

androidx.ui.tooling.preview.animation.PreviewAnimationClock$1
<androidx.ui.tooling.preview.animation.PreviewAnimationClock$1: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 INSTANCE>
    void <init>()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 r0;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 r0;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1;

        virtualinvoke r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 $r0;

        $r0 = new androidx.ui.tooling.preview.animation.PreviewAnimationClock$1;

        specialinvoke $r0.<androidx.ui.tooling.preview.animation.PreviewAnimationClock$1: void <init>()>();

        <androidx.ui.tooling.preview.animation.PreviewAnimationClock$1: androidx.ui.tooling.preview.animation.PreviewAnimationClock$1 INSTANCE> = $r0;

        return;
    }

