androidx.animation.RepeatableBuilder
<androidx.animation.RepeatableBuilder: java.lang.Integer iterations>
<androidx.animation.RepeatableBuilder: androidx.animation.DurationBasedAnimationBuilder animation>
    public final java.lang.Integer getIterations()
    {
        androidx.animation.RepeatableBuilder r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.animation.RepeatableBuilder;

        $r1 = r0.<androidx.animation.RepeatableBuilder: java.lang.Integer iterations>;

        return $r1;
    }

    public final void setIterations(java.lang.Integer)
    {
        androidx.animation.RepeatableBuilder r0;
        java.lang.Integer r1;
        int $i0;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;

        r0 := @this: androidx.animation.RepeatableBuilder;

        r1 := @parameter0: java.lang.Integer;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterations count can\'t be less than 1");

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;

     label1:
        r0.<androidx.animation.RepeatableBuilder: java.lang.Integer iterations> = r1;

        return;
    }

    public final androidx.animation.DurationBasedAnimationBuilder getAnimation()
    {
        androidx.animation.RepeatableBuilder r0;
        androidx.animation.DurationBasedAnimationBuilder $r1;

        r0 := @this: androidx.animation.RepeatableBuilder;

        $r1 = r0.<androidx.animation.RepeatableBuilder: androidx.animation.DurationBasedAnimationBuilder animation>;

        return $r1;
    }

    public final void setAnimation(androidx.animation.DurationBasedAnimationBuilder)
    {
        androidx.animation.RepeatableBuilder r0;
        androidx.animation.DurationBasedAnimationBuilder r1;

        r0 := @this: androidx.animation.RepeatableBuilder;

        r1 := @parameter0: androidx.animation.DurationBasedAnimationBuilder;

        r0.<androidx.animation.RepeatableBuilder: androidx.animation.DurationBasedAnimationBuilder animation> = r1;

        return;
    }

    public androidx.animation.AnimationSpec build(androidx.animation.TwoWayConverter)
    {
        androidx.animation.RepeatableBuilder r0;
        androidx.animation.TwoWayConverter r1;
        long l0;
        androidx.animation.DurationBasedAnimationBuilder r2, $r6;
        java.lang.Integer $r3;
        java.lang.IllegalStateException $r4, $r7;
        java.lang.Throwable $r5, $r8;
        int $i1;
        androidx.animation.RepeatableSpec $r9;
        androidx.animation.DurationBasedAnimationSpec $r10;
        androidx.animation.AnimationSpec $r11;

        r0 := @this: androidx.animation.RepeatableBuilder;

        r1 := @parameter0: androidx.animation.TwoWayConverter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "converter");

        $r3 = r0.<androidx.animation.RepeatableBuilder: java.lang.Integer iterations>;

        if $r3 == null goto label1;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The iterations count should be provided");

        $r5 = (java.lang.Throwable) $r4;

        throw $r5;

     label2:
        l0 = (long) $i1;

        $r6 = r0.<androidx.animation.RepeatableBuilder: androidx.animation.DurationBasedAnimationBuilder animation>;

        if $r6 == null goto label3;

        goto label4;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The animation should be provided");

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;

     label4:
        r2 = $r6;

        $r9 = new androidx.animation.RepeatableSpec;

        $r10 = virtualinvoke r2.<androidx.animation.DurationBasedAnimationBuilder: androidx.animation.DurationBasedAnimationSpec build(androidx.animation.TwoWayConverter)>(r1);

        specialinvoke $r9.<androidx.animation.RepeatableSpec: void <init>(long,androidx.animation.DurationBasedAnimationSpec)>(l0, $r10);

        $r11 = (androidx.animation.AnimationSpec) $r9;

        return $r11;
    }

    public void <init>()
    {
        androidx.animation.RepeatableBuilder r0;

        r0 := @this: androidx.animation.RepeatableBuilder;

        specialinvoke r0.<androidx.animation.AnimationBuilder: void <init>()>();

        return;
    }

