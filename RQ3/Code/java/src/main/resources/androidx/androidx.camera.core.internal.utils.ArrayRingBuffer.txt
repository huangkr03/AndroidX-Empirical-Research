androidx.camera.core.internal.utils.ArrayRingBuffer
<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.String TAG>
<androidx.camera.core.internal.utils.ArrayRingBuffer: int mRingBufferCapacity>
<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer>
<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object mLock>
<androidx.camera.core.internal.utils.ArrayRingBuffer: androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback mOnRemoveCallback>
    public void <init>(int)
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        int i0;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: void <init>(int,androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback)>(i0, null);

        return;
    }

    public void <init>(int, androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback)
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        int i0, $i1;
        androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback r1;
        java.lang.Object $r2;
        java.util.ArrayDeque $r3;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object mLock> = $r2;

        r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: int mRingBufferCapacity> = i0;

        $r3 = new java.util.ArrayDeque;

        $i1 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: int mRingBufferCapacity>;

        specialinvoke $r3.<java.util.ArrayDeque: void <init>(int)>($i1);

        r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer> = $r3;

        r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback mOnRemoveCallback> = r1;

        return;
    }

    public void enqueue(java.lang.Object)
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        java.lang.Object r1, r2, $r4, r10;
        java.lang.Throwable r3, $r9;
        java.util.ArrayDeque $r5, $r6;
        int $i0, $i1;
        androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback $r7, $r8;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        r1 := @parameter0: java.lang.Object;

        r10 = null;

        $r4 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer>;

        $i0 = virtualinvoke $r5.<java.util.ArrayDeque: int size()>();

        $i1 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: int mRingBufferCapacity>;

        if $i0 < $i1 goto label2;

        r10 = virtualinvoke r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object dequeue()>();

     label2:
        $r6 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer>;

        virtualinvoke $r6.<java.util.ArrayDeque: void addFirst(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r7 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback mOnRemoveCallback>;

        if $r7 == null goto label7;

        if r10 == null goto label7;

        $r8 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback mOnRemoveCallback>;

        interfaceinvoke $r8.<androidx.camera.core.internal.utils.RingBuffer$OnRemoveCallback: void onRemove(java.lang.Object)>(r10);

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object dequeue()
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.util.ArrayDeque $r4;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        $r3 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer>;

        $r5 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object removeLast()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxCapacity()
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        int $i0;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        $i0 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: int mRingBufferCapacity>;

        return $i0;
    }

    public boolean isEmpty()
    {
        androidx.camera.core.internal.utils.ArrayRingBuffer r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.ArrayDeque $r4;
        boolean $z0;

        r0 := @this: androidx.camera.core.internal.utils.ArrayRingBuffer;

        $r3 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.internal.utils.ArrayRingBuffer: java.util.ArrayDeque mBuffer>;

        $z0 = virtualinvoke $r4.<java.util.ArrayDeque: boolean isEmpty()>();

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

