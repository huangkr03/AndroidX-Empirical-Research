androidx.test.runner.suites.PackagePrefixClasspathSuite
    private static java.util.List getRunnersForClasses(java.lang.Class, org.junit.runners.model.RunnerBuilder)
    {
        java.lang.Class r0;
        org.junit.runners.model.RunnerBuilder r1;
        java.util.Set r2;
        java.lang.String[] $r5;
        java.lang.Package $r6;
        java.lang.String $r7, $r13, $r21;
        java.util.List $r8, $r15, $r23;
        android.app.Instrumentation $r11, $r19;
        java.util.Collection $r12;
        androidx.test.internal.runner.TestLoader $r14;
        java.lang.Throwable $r16, r25, r32;
        java.lang.Object[] $r17;
        android.content.Context $r20;
        androidx.test.internal.runner.ClassPathScanner$ChainedClassNameFilter r24, r26;
        androidx.test.internal.runner.ClassPathScanner$InclusivePackageNamesFilter r27;
        androidx.test.internal.runner.ClassPathScanner$ExternalClassNameFilter r28;
        androidx.test.internal.runner.ClassPathScanner r29;
        java.lang.RuntimeException r30;
        androidx.test.internal.runner.ErrorReportingRunner r31;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.junit.runners.model.RunnerBuilder;

     label1:
        r26 = new androidx.test.internal.runner.ClassPathScanner$ChainedClassNameFilter;

        specialinvoke r26.<androidx.test.internal.runner.ClassPathScanner$ChainedClassNameFilter: void <init>()>();

        r24 = r26;

        r27 = new androidx.test.internal.runner.ClassPathScanner$InclusivePackageNamesFilter;

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        $r7 = virtualinvoke $r6.<java.lang.Package: java.lang.String getName()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke r27.<androidx.test.internal.runner.ClassPathScanner$InclusivePackageNamesFilter: void <init>(java.util.Collection)>($r8);

        virtualinvoke r24.<androidx.test.internal.runner.ClassPathScanner$ChainedClassNameFilter: void add(androidx.test.internal.runner.ClassPathScanner$ClassNameFilter)>(r27);

        r28 = new androidx.test.internal.runner.ClassPathScanner$ExternalClassNameFilter;

        specialinvoke r28.<androidx.test.internal.runner.ClassPathScanner$ExternalClassNameFilter: void <init>()>();

        virtualinvoke r24.<androidx.test.internal.runner.ClassPathScanner$ChainedClassNameFilter: void add(androidx.test.internal.runner.ClassPathScanner$ClassNameFilter)>(r28);

        r29 = new androidx.test.internal.runner.ClassPathScanner;

        $r11 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r12 = staticinvoke <androidx.test.internal.runner.ClassPathScanner: java.util.Collection getDefaultClasspaths(android.app.Instrumentation)>($r11);

        specialinvoke r29.<androidx.test.internal.runner.ClassPathScanner: void <init>(java.util.Collection)>($r12);

        r2 = virtualinvoke r29.<androidx.test.internal.runner.ClassPathScanner: java.util.Set getClassPathEntries(androidx.test.internal.runner.ClassPathScanner$ClassNameFilter)>(r24);

        $r13 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r2.<java.util.Collection: boolean remove(java.lang.Object)>($r13);

        $r14 = staticinvoke <androidx.test.internal.runner.TestLoader$Factory: androidx.test.internal.runner.TestLoader create(java.lang.ClassLoader,org.junit.runners.model.RunnerBuilder,boolean)>(null, r1, 1);

        $r15 = virtualinvoke $r14.<androidx.test.internal.runner.TestLoader: java.util.List getRunnersFor(java.util.Collection)>(r2);

     label2:
        return $r15;

     label3:
        $r16 := @caughtexception;

        r25 = $r16;

        $r17 = newarray (org.junit.runner.Runner)[1];

        r31 = new androidx.test.internal.runner.ErrorReportingRunner;

        $r19 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r20 = virtualinvoke $r19.<android.app.Instrumentation: android.content.Context getContext()>();

        $r21 = virtualinvoke $r20.<android.content.Context: java.lang.String getPackageName()>();

        r30 = new java.lang.RuntimeException;

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to perform classpath scanning to determine tests to run", r25);

        r32 = (java.lang.Throwable) r30;

        specialinvoke r31.<androidx.test.internal.runner.ErrorReportingRunner: void <init>(java.lang.String,java.lang.Throwable)>($r21, r32);

        $r17[0] = r31;

        $r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17);

        return $r23;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>(java.lang.Class, org.junit.runners.model.RunnerBuilder) throws org.junit.runners.model.InitializationError
    {
        androidx.test.runner.suites.PackagePrefixClasspathSuite r0;
        java.lang.Class r1;
        org.junit.runners.model.RunnerBuilder r2;
        java.util.List $r3;

        r0 := @this: androidx.test.runner.suites.PackagePrefixClasspathSuite;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.junit.runners.model.RunnerBuilder;

        $r3 = staticinvoke <androidx.test.runner.suites.PackagePrefixClasspathSuite: java.util.List getRunnersForClasses(java.lang.Class,org.junit.runners.model.RunnerBuilder)>(r1, r2);

        specialinvoke r0.<org.junit.runners.Suite: void <init>(java.lang.Class,java.util.List)>(r1, $r3);

        return;
    }

