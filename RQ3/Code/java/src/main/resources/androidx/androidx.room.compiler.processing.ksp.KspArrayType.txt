androidx.room.compiler.processing.ksp.KspArrayType
<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.processing.ksp.KspArrayType$Companion Companion>
<androidx.room.compiler.processing.ksp.KspArrayType: java.lang.String KOTLIN_ARRAY_Q_NAME>
    private void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspJvmTypeResolver)
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSType r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>(r1, r2, r3);

        return;
    }

<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.processing.ksp.KspType getComponentType()>
    protected com.squareup.javapoet.TypeName resolveJTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        com.squareup.javapoet.TypeName $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r2 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        return $r2;
    }

    protected com.squareup.kotlinpoet.TypeName resolveKTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        com.squareup.kotlinpoet.TypeName $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r2 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        return $r2;
    }

    public androidx.room.compiler.processing.ksp.KspArrayType boxed()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        return r0;
    }

    public java.util.List getTypeArguments()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public volatile androidx.room.compiler.processing.ksp.KspType boxed()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0, $r1;
        androidx.room.compiler.processing.ksp.KspType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.processing.ksp.KspArrayType boxed()>();

        $r2 = (androidx.room.compiler.processing.ksp.KspType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType boxed()
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0, $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.processing.ksp.KspArrayType boxed()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspJvmTypeResolver, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspArrayType r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSType r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        $r4 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>(r1, r2, r3);

        return;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspArrayType$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspArrayType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspArrayType: androidx.room.compiler.processing.ksp.KspArrayType$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2
<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: com.google.devtools.ksp.symbol.KSType $ksType>
<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env>
    void <init>(com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspProcessingEnv)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2 r0;
        com.google.devtools.ksp.symbol.KSType $r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        $r2 := @parameter1: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: com.google.devtools.ksp.symbol.KSType $ksType> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspType invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2 r0;
        com.google.devtools.ksp.symbol.KSTypeArgument r1;
        java.lang.String r2, $r10;
        com.google.devtools.ksp.symbol.KSType $r3, $r11;
        java.util.List $r4;
        java.lang.Object $r5;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r6;
        com.google.devtools.ksp.symbol.KSTypeReference $r7;
        androidx.room.compiler.processing.ksp.KspType $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: com.google.devtools.ksp.symbol.KSType $ksType>;

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSType: java.util.List getArguments()>();

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object single(java.util.List)>($r4);

        r1 = (com.google.devtools.ksp.symbol.KSTypeArgument) $r5;

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env>;

        $r7 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r7 == null goto label1;

        $r11 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        goto label2;

     label1:
        $r11 = null;

     label2:
        if $r11 != null goto label3;

        r2 = "Required value was null.";

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        $r8 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSType,boolean)>($r11, 0);

        return $r8;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2 r0;
        androidx.room.compiler.processing.ksp.KspType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: androidx.room.compiler.processing.ksp.KspType invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2
<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2 r0;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName r1, $r17;
        com.squareup.kotlinpoet.TypeName[] r2;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray $r3, $r14;
        androidx.room.compiler.processing.ksp.KspType $r4;
        androidx.room.compiler.codegen.XTypeName$Companion $r5;
        com.squareup.javapoet.TypeName $r6, $r7, $r9;
        com.squareup.javapoet.ArrayTypeName $r8;
        com.squareup.kotlinpoet.ParameterizedTypeName$Companion $r10;
        com.squareup.kotlinpoet.ClassName $r11;
        com.squareup.kotlinpoet.TypeName $r12, $r15;
        com.squareup.kotlinpoet.ParameterizedTypeName $r13;
        androidx.room.compiler.processing.XNullability $r16;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        r1 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r5 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r6 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r7 = virtualinvoke $r6.<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName box()>();

        $r8 = staticinvoke <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName of(com.squareup.javapoet.TypeName)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "of(componentTypeName.java.box())");

        $r9 = (com.squareup.javapoet.TypeName) $r8;

        $r10 = <com.squareup.kotlinpoet.ParameterizedTypeName: com.squareup.kotlinpoet.ParameterizedTypeName$Companion Companion>;

        $r11 = <com.squareup.kotlinpoet.TypeNames: com.squareup.kotlinpoet.ClassName ARRAY>;

        r2 = newarray (com.squareup.kotlinpoet.TypeName)[1];

        $r12 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.kotlinpoet.TypeName getKotlin$room_compiler_processing()>();

        r2[0] = $r12;

        $r13 = virtualinvoke $r10.<com.squareup.kotlinpoet.ParameterizedTypeName$Companion: com.squareup.kotlinpoet.ParameterizedTypeName get(com.squareup.kotlinpoet.ClassName,com.squareup.kotlinpoet.TypeName[])>($r11, r2);

        $r15 = (com.squareup.kotlinpoet.TypeName) $r13;

        $r14 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray this$0>;

        $r16 = virtualinvoke $r14.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.XNullability getNullability()>();

        $r17 = virtualinvoke $r5.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>($r9, $r15, $r16);

        return $r17;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: androidx.room.compiler.codegen.XTypeName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray
<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy xTypeName$delegate>
<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy componentType$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspJvmTypeResolver)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSType r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r3;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2 $r4;
        kotlin.jvm.functions.Function0 $r5, $r8;
        kotlin.Lazy $r6, $r9;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2 $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ksType");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null);

        $r4 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2;

        specialinvoke $r4.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$xTypeName$2: void <init>(androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy xTypeName$delegate> = $r6;

        $r7 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2;

        specialinvoke $r7.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray$componentType$2: void <init>(com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r2, r1);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        $r9 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r8);

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy componentType$delegate> = $r9;

        return;
    }

    private final androidx.room.compiler.codegen.XTypeName getXTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XTypeName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy xTypeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XTypeName asTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    public androidx.room.compiler.processing.ksp.KspType getComponentType()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: kotlin.Lazy componentType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

    protected androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray copyWithNullability(androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0, $r2;
        androidx.room.compiler.processing.XNullability r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;
        com.google.devtools.ksp.symbol.KSType $r4, $r5;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 := @parameter0: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nullability");

        $r2 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r5 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: com.google.devtools.ksp.symbol.KSType withNullability(com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.XNullability)>($r4, r1);

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspJvmTypeResolver getJvmTypeResolver()>();

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r3, $r5, $r6);

        return $r2;
    }

    public androidx.room.compiler.processing.ksp.KspType copyWithJvmTypeResolver(androidx.room.compiler.processing.ksp.KspJvmTypeResolver)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0, $r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;
        com.google.devtools.ksp.symbol.KSType $r4;
        androidx.room.compiler.processing.ksp.KspType $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jvmTypeResolver");

        $r2 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: com.google.devtools.ksp.symbol.KSType getKsType()>();

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r3, $r4, r1);

        $r5 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r5;
    }

    public volatile androidx.room.compiler.processing.XType getComponentType()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.ksp.KspType copyWithNullability(androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray r0, $r2;
        androidx.room.compiler.processing.XNullability r1;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        r1 := @parameter0: androidx.room.compiler.processing.XNullability;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray copyWithNullability(androidx.room.compiler.processing.XNullability)>(r1);

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

androidx.room.compiler.processing.ksp.KspArrayType$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.ksp.KspArrayType$Factory
<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map builtInArrays>
<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map reverseBuiltInArrayLookup>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Factory r0, r6;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1, $r9, $r10, $r16, $r17, $r23, $r24, $r30, $r31, $r37, $r38, $r44, $r45, $r51, $r52, $r58, $r59;
        int i0, $i1, $i2;
        java.util.Map r2, r7, $r64, $r65;
        java.util.Iterator r3;
        java.lang.Object r4, $r68;
        java.util.Map$Entry r5;
        androidx.room.compiler.processing.ksp.KspPrimitiveType $r8, $r15, $r22, $r29, $r36, $r43, $r50, $r57, $r69;
        com.google.devtools.ksp.processing.Resolver $r11, $r18, $r25, $r32, $r39, $r46, $r53, $r60;
        com.google.devtools.ksp.processing.KSBuiltIns $r12, $r19, $r26, $r33, $r40, $r47, $r54, $r61;
        com.google.devtools.ksp.symbol.KSType $r13, $r20, $r27, $r34, $r41, $r48, $r55, $r62, $r70;
        kotlin.Pair $r14, $r21, $r28, $r35, $r42, $r49, $r56, $r63;
        java.util.Set $r66;
        java.util.LinkedHashMap $r67;
        boolean $z3;
        kotlin.Pair[] $r72;
        java.lang.Iterable $r73;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$Factory;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        $r72 = newarray (kotlin.Pair)[8];

        $r8 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r10 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r9 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r11 = virtualinvoke $r9.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r12 = interfaceinvoke $r11.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r13 = interfaceinvoke $r12.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getBooleanType()>();

        specialinvoke $r8.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r10, $r13, null);

        $r14 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.BooleanArray", $r8);

        $r72[0] = $r14;

        $r15 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r17 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r16 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r18 = virtualinvoke $r16.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r19 = interfaceinvoke $r18.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r20 = interfaceinvoke $r19.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getByteType()>();

        specialinvoke $r15.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r17, $r20, null);

        $r21 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.ByteArray", $r15);

        $r72[1] = $r21;

        $r22 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r24 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r23 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r25 = virtualinvoke $r23.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r26 = interfaceinvoke $r25.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r27 = interfaceinvoke $r26.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getCharType()>();

        specialinvoke $r22.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r24, $r27, null);

        $r28 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.CharArray", $r22);

        $r72[2] = $r28;

        $r29 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r31 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r30 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r32 = virtualinvoke $r30.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r33 = interfaceinvoke $r32.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r34 = interfaceinvoke $r33.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getDoubleType()>();

        specialinvoke $r29.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r31, $r34, null);

        $r35 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.DoubleArray", $r29);

        $r72[3] = $r35;

        $r36 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r38 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r37 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r39 = virtualinvoke $r37.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r40 = interfaceinvoke $r39.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r41 = interfaceinvoke $r40.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getFloatType()>();

        specialinvoke $r36.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r38, $r41, null);

        $r42 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.FloatArray", $r36);

        $r72[4] = $r42;

        $r43 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r45 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r44 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r46 = virtualinvoke $r44.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r47 = interfaceinvoke $r46.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r48 = interfaceinvoke $r47.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getIntType()>();

        specialinvoke $r43.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r45, $r48, null);

        $r49 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.IntArray", $r43);

        $r72[5] = $r49;

        $r50 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r52 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r51 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r53 = virtualinvoke $r51.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r54 = interfaceinvoke $r53.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r55 = interfaceinvoke $r54.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getLongType()>();

        specialinvoke $r50.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r52, $r55, null);

        $r56 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.LongArray", $r50);

        $r72[6] = $r56;

        $r57 = new androidx.room.compiler.processing.ksp.KspPrimitiveType;

        $r59 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r58 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r60 = virtualinvoke $r58.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r61 = interfaceinvoke $r60.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r62 = interfaceinvoke $r61.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getShortType()>();

        specialinvoke $r57.<androidx.room.compiler.processing.ksp.KspPrimitiveType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r59, $r62, null);

        $r63 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("kotlin.ShortArray", $r57);

        $r72[7] = $r63;

        $r64 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r72);

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map builtInArrays> = $r64;

        $r65 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map builtInArrays>;

        $r66 = interfaceinvoke $r65.<java.util.Map: java.util.Set entrySet()>();

        $r73 = (java.lang.Iterable) $r66;

        r6 = r0;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r73, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r67 = new java.util.LinkedHashMap;

        specialinvoke $r67.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r2 = (java.util.Map) $r67;

        r3 = interfaceinvoke $r73.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) r4;

        r7 = r2;

        $r68 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r69 = (androidx.room.compiler.processing.ksp.KspPrimitiveType) $r68;

        $r70 = virtualinvoke $r69.<androidx.room.compiler.processing.ksp.KspPrimitiveType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, r4);

        goto label1;

     label2:
        r6.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map reverseBuiltInArrayLookup> = r2;

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspArrayType createWithComponentType(androidx.room.compiler.processing.ksp.KspType)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Factory r0;
        androidx.room.compiler.processing.ksp.KspType r1, $r32;
        java.util.Map$Entry r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r3, $r9, $r10, $r14, $r26;
        com.google.devtools.ksp.symbol.KSType r4, $r13, $r16, $r21, $r24;
        androidx.room.compiler.processing.ksp.KspPrimitiveType r5;
        androidx.room.compiler.processing.XNullability $r6, $r7;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray $r8;
        com.google.devtools.ksp.processing.Resolver $r11, $r15, $r27;
        com.google.devtools.ksp.processing.KSBuiltIns $r12;
        com.google.devtools.ksp.symbol.KSTypeReference $r17;
        com.google.devtools.ksp.symbol.Variance $r18;
        com.google.devtools.ksp.symbol.KSTypeArgument $r19;
        java.util.List $r20;
        androidx.room.compiler.processing.ksp.KspArrayType $r22, $r33;
        java.util.Map $r23;
        java.lang.Object $r25, $r28, $r30;
        java.lang.String $r29;
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray $r31;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$Factory;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "componentType");

        $r6 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.processing.XNullability getNullability()>();

        $r7 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        if $r6 != $r7 goto label1;

        $r23 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map reverseBuiltInArrayLookup>;

        $r24 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        r2 = (java.util.Map$Entry) $r25;

        if r2 == null goto label1;

        r3 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r26 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r27 = virtualinvoke $r26.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r28 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r28;

        r4 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSType requireType(com.google.devtools.ksp.processing.Resolver,java.lang.String)>($r27, $r29);

        $r30 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (androidx.room.compiler.processing.ksp.KspPrimitiveType) $r30;

        $r31 = new androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r32 = (androidx.room.compiler.processing.ksp.KspType) r5;

        specialinvoke $r31.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,androidx.room.compiler.processing.ksp.KspType)>(r3, r4, null, $r32);

        $r33 = (androidx.room.compiler.processing.ksp.KspArrayType) $r31;

        return $r33;

     label1:
        $r8 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r10 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r9 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r11 = virtualinvoke $r9.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r12 = interfaceinvoke $r11.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.processing.KSBuiltIns getBuiltIns()>();

        $r13 = interfaceinvoke $r12.<com.google.devtools.ksp.processing.KSBuiltIns: com.google.devtools.ksp.symbol.KSType getArrayType()>();

        $r14 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r15 = virtualinvoke $r14.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r16 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r17 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeReferenceExtKt: com.google.devtools.ksp.symbol.KSTypeReference createTypeReference(com.google.devtools.ksp.symbol.KSType)>($r16);

        $r18 = <com.google.devtools.ksp.symbol.Variance: com.google.devtools.ksp.symbol.Variance INVARIANT>;

        $r19 = interfaceinvoke $r15.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSTypeArgument getTypeArgument(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.Variance)>($r17, $r18);

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r19);

        $r21 = interfaceinvoke $r13.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType replace(java.util.List)>($r20);

        specialinvoke $r8.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r10, $r21, null);

        $r22 = (androidx.room.compiler.processing.ksp.KspArrayType) $r8;

        return $r22;
    }

    public final androidx.room.compiler.processing.ksp.KspArrayType createIfArray(com.google.devtools.ksp.symbol.KSType)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$Factory r0;
        com.google.devtools.ksp.symbol.KSType r1;
        java.lang.String r2, $r16;
        androidx.room.compiler.processing.ksp.KspPrimitiveType r3, r4;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r5, $r14;
        com.google.devtools.ksp.symbol.KSDeclaration $r6;
        com.google.devtools.ksp.symbol.KSName $r7;
        boolean $z1;
        java.util.Map $r8;
        java.lang.Object $r9;
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray $r10;
        androidx.room.compiler.processing.ksp.KspType $r11;
        androidx.room.compiler.processing.ksp.KspArrayType $r12, $r15;
        androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray $r13;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$Factory;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ksType");

        $r6 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r7 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r7 == null goto label1;

        $r16 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label2;

     label1:
        $r16 = null;

     label2:
        r2 = $r16;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, "kotlin.Array");

        if $z1 == 0 goto label3;

        $r13 = new androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray;

        $r14 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        specialinvoke $r13.<androidx.room.compiler.processing.ksp.KspArrayType$BoxedArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver)>($r14, r1, null);

        $r15 = (androidx.room.compiler.processing.ksp.KspArrayType) $r13;

        return $r15;

     label3:
        $r8 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: java.util.Map builtInArrays>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (androidx.room.compiler.processing.ksp.KspPrimitiveType) $r9;

        if r3 == null goto label4;

        r4 = r3;

        r5 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$Factory: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r10 = new androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r11 = (androidx.room.compiler.processing.ksp.KspType) r4;

        specialinvoke $r10.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,androidx.room.compiler.processing.ksp.KspType)>(r5, r1, null, $r11);

        $r12 = (androidx.room.compiler.processing.ksp.KspArrayType) $r10;

        return $r12;

     label4:
        return null;
    }

androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2
<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray this$0>
<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: com.google.devtools.ksp.symbol.KSType $ksType>
<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env>
    void <init>(androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspProcessingEnv)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2 r0;
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray $r1;
        com.google.devtools.ksp.symbol.KSType $r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        $r3 := @parameter2: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray this$0> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: com.google.devtools.ksp.symbol.KSType $ksType> = $r2;

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName r1, $r15;
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray $r2, $r13;
        androidx.room.compiler.processing.ksp.KspType $r3;
        androidx.room.compiler.codegen.XTypeName$Companion $r4;
        com.squareup.javapoet.TypeName $r5, $r6, $r9;
        com.squareup.javapoet.ArrayTypeName $r7;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r8;
        com.google.devtools.ksp.symbol.KSType $r10;
        com.google.devtools.ksp.processing.Resolver $r11;
        com.squareup.kotlinpoet.TypeName $r12;
        androidx.room.compiler.processing.XNullability $r14;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        r1 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        $r4 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r5 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r6 = virtualinvoke $r5.<com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName unbox()>();

        $r7 = staticinvoke <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName of(com.squareup.javapoet.TypeName)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "of(componentTypeName.java.unbox())");

        $r9 = (com.squareup.javapoet.TypeName) $r7;

        $r10 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: com.google.devtools.ksp.symbol.KSType $ksType>;

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspProcessingEnv $env>;

        $r11 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r12 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeKotlinPoetExtKt: com.squareup.kotlinpoet.TypeName asKTypeName(com.google.devtools.ksp.symbol.KSType,com.google.devtools.ksp.processing.Resolver)>($r10, $r11);

        $r13 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray this$0>;

        $r14 = virtualinvoke $r13.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.XNullability getNullability()>();

        $r15 = virtualinvoke $r4.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>($r9, $r12, $r14);

        return $r15;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: androidx.room.compiler.codegen.XTypeName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray
<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType componentType>
<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: kotlin.Lazy xTypeName$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.ksp.KspJvmTypeResolver, androidx.room.compiler.processing.ksp.KspType)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSType r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r3;
        androidx.room.compiler.processing.ksp.KspType r4;
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2 $r5;
        kotlin.jvm.functions.Function0 $r6;
        kotlin.Lazy $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSType;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        r4 := @parameter3: androidx.room.compiler.processing.ksp.KspType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ksType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "componentType");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null);

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType componentType> = r4;

        $r5 = new androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray$xTypeName$2: void <init>(androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r2, r1);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

        r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: kotlin.Lazy xTypeName$delegate> = $r7;

        return;
    }

    public androidx.room.compiler.processing.ksp.KspType getComponentType()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0;
        androidx.room.compiler.processing.ksp.KspType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType componentType>;

        return $r1;
    }

    private final androidx.room.compiler.codegen.XTypeName getXTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XTypeName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: kotlin.Lazy xTypeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XTypeName asTypeName()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    protected androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray copyWithNullability(androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0, $r7;
        androidx.room.compiler.processing.XNullability r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r2;
        com.google.devtools.ksp.symbol.KSType r3, $r6;
        androidx.room.compiler.processing.ksp.KspType r4;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        r1 := @parameter0: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nullability");

        r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: com.google.devtools.ksp.symbol.KSType getKsType()>();

        r3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: com.google.devtools.ksp.symbol.KSType withNullability(com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.XNullability)>($r6, r1);

        r4 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspJvmTypeResolver getJvmTypeResolver()>();

        $r7 = new androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        specialinvoke $r7.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,androidx.room.compiler.processing.ksp.KspType)>(r2, r3, r5, r4);

        return $r7;
    }

    public androidx.room.compiler.processing.ksp.KspType copyWithJvmTypeResolver(androidx.room.compiler.processing.ksp.KspJvmTypeResolver)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0, $r5;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolver r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r2;
        com.google.devtools.ksp.symbol.KSType r3;
        androidx.room.compiler.processing.ksp.KspType r4, $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jvmTypeResolver");

        r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: com.google.devtools.ksp.symbol.KSType getKsType()>();

        r4 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        $r5 = new androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSType,androidx.room.compiler.processing.ksp.KspJvmTypeResolver,androidx.room.compiler.processing.ksp.KspType)>(r2, r3, r1, r4);

        $r6 = (androidx.room.compiler.processing.ksp.KspType) $r5;

        return $r6;
    }

    public volatile androidx.room.compiler.processing.XType getComponentType()
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspType getComponentType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.ksp.KspType copyWithNullability(androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray r0, $r2;
        androidx.room.compiler.processing.XNullability r1;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray;

        r1 := @parameter0: androidx.room.compiler.processing.XNullability;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray: androidx.room.compiler.processing.ksp.KspArrayType$PrimitiveArray copyWithNullability(androidx.room.compiler.processing.XNullability)>(r1);

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

