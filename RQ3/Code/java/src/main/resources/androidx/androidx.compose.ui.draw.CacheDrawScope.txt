androidx.compose.ui.draw.CacheDrawScope
<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>
<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.DrawResult drawResult>
<androidx.compose.ui.draw.CacheDrawScope: int $stable>
    public void <init>()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.EmptyBuildDrawCacheParams $r1;
        androidx.compose.ui.draw.BuildDrawCacheParams $r2;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.compose.ui.draw.EmptyBuildDrawCacheParams: androidx.compose.ui.draw.EmptyBuildDrawCacheParams INSTANCE>;

        $r2 = (androidx.compose.ui.draw.BuildDrawCacheParams) $r1;

        r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams> = $r2;

        return;
    }

    public final androidx.compose.ui.draw.BuildDrawCacheParams getCacheParams$ui_release()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams $r1;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>;

        return $r1;
    }

    public final void setCacheParams$ui_release(androidx.compose.ui.draw.BuildDrawCacheParams)
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams r1;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        r1 := @parameter0: androidx.compose.ui.draw.BuildDrawCacheParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams> = r1;

        return;
    }

    public final androidx.compose.ui.draw.DrawResult getDrawResult$ui_release()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.DrawResult $r1;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.DrawResult drawResult>;

        return $r1;
    }

    public final void setDrawResult$ui_release(androidx.compose.ui.draw.DrawResult)
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.DrawResult r1;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        r1 := @parameter0: androidx.compose.ui.draw.DrawResult;

        r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.DrawResult drawResult> = r1;

        return;
    }

    public final long getSize-NH-jbRc()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>;

        $l0 = interfaceinvoke $r1.<androidx.compose.ui.draw.BuildDrawCacheParams: long getSize-NH-jbRc()>();

        return $l0;
    }

    public final androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams $r1;
        androidx.compose.ui.unit.LayoutDirection $r2;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.draw.BuildDrawCacheParams: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        return $r2;
    }

    public final androidx.compose.ui.draw.DrawResult onDrawBehind(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        kotlin.jvm.functions.Function1 r1, $r3;
        androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1 $r2;
        androidx.compose.ui.draw.DrawResult $r4;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = new androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1;

        specialinvoke $r2.<androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r4 = virtualinvoke r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.DrawResult onDrawWithContent(kotlin.jvm.functions.Function1)>($r3);

        return $r4;
    }

    public final androidx.compose.ui.draw.DrawResult onDrawWithContent(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.draw.DrawResult r2, r3, $r4;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r4 = new androidx.compose.ui.draw.DrawResult;

        specialinvoke $r4.<androidx.compose.ui.draw.DrawResult: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r2 = $r4;

        r3 = r2;

        r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.DrawResult drawResult> = r3;

        return r2;
    }

    public float getDensity()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams $r1;
        androidx.compose.ui.unit.Density $r2;
        float $f0;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.draw.BuildDrawCacheParams: androidx.compose.ui.unit.Density getDensity()>();

        $f0 = interfaceinvoke $r2.<androidx.compose.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.compose.ui.draw.CacheDrawScope r0;
        androidx.compose.ui.draw.BuildDrawCacheParams $r1;
        androidx.compose.ui.unit.Density $r2;
        float $f0;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope;

        $r1 = r0.<androidx.compose.ui.draw.CacheDrawScope: androidx.compose.ui.draw.BuildDrawCacheParams cacheParams>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.draw.BuildDrawCacheParams: androidx.compose.ui.unit.Density getDensity()>();

        $f0 = interfaceinvoke $r2.<androidx.compose.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    static void <clinit>()
    {
        return;
    }

androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1
<androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1: kotlin.jvm.functions.Function1 $block>
    void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1: kotlin.jvm.functions.Function1 $block> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.graphics.drawscope.ContentDrawScope)
    {
        androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1 r0;
        androidx.compose.ui.graphics.drawscope.ContentDrawScope $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.ContentDrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$onDrawWithContent");

        $r2 = r0.<androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1: kotlin.jvm.functions.Function1 $block>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.ContentDrawScope: void drawContent()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.graphics.drawscope.ContentDrawScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.graphics.drawscope.ContentDrawScope) r1;

        virtualinvoke r0.<androidx.compose.ui.draw.CacheDrawScope$onDrawBehind$1: void invoke(androidx.compose.ui.graphics.drawscope.ContentDrawScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

