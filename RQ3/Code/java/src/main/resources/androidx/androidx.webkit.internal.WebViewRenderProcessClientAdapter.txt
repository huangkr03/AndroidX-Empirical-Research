androidx.webkit.internal.WebViewRenderProcessClientAdapter
<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.lang.String[] sSupportedFeatures>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>
    public void <init>(java.util.concurrent.Executor, androidx.webkit.WebViewRenderProcessClient)
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r0;
        java.util.concurrent.Executor r1;
        androidx.webkit.WebViewRenderProcessClient r2;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.webkit.WebViewRenderProcessClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor> = r1;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient> = r2;

        return;
    }

    public androidx.webkit.WebViewRenderProcessClient getWebViewRenderProcessClient()
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r0;
        androidx.webkit.WebViewRenderProcessClient $r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        $r1 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        return $r1;
    }

    public final java.lang.String[] getSupportedFeatures()
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        $r1 = <androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.lang.String[] sSupportedFeatures>;

        return $r1;
    }

    public final void onRendererUnresponsive(android.webkit.WebView, java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r0;
        android.webkit.WebView r1;
        java.lang.reflect.InvocationHandler r2;
        androidx.webkit.internal.WebViewRenderProcessImpl r3;
        androidx.webkit.WebViewRenderProcessClient r4;
        java.util.concurrent.Executor $r5, $r7;
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$1 $r6;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.reflect.InvocationHandler;

        r3 = staticinvoke <androidx.webkit.internal.WebViewRenderProcessImpl: androidx.webkit.internal.WebViewRenderProcessImpl forInvocationHandler(java.lang.reflect.InvocationHandler)>(r2);

        r4 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        $r5 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor>;

        if $r5 != null goto label1;

        virtualinvoke r4.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessUnresponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r1, r3);

        goto label2;

     label1:
        $r7 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor>;

        $r6 = new androidx.webkit.internal.WebViewRenderProcessClientAdapter$1;

        specialinvoke $r6.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: void <init>(androidx.webkit.internal.WebViewRenderProcessClientAdapter,androidx.webkit.WebViewRenderProcessClient,android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r0, r4, r1, r3);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    public final void onRendererResponsive(android.webkit.WebView, java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r0;
        android.webkit.WebView r1;
        java.lang.reflect.InvocationHandler r2;
        androidx.webkit.internal.WebViewRenderProcessImpl r3;
        androidx.webkit.WebViewRenderProcessClient r4;
        java.util.concurrent.Executor $r5, $r7;
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$2 $r6;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.reflect.InvocationHandler;

        r3 = staticinvoke <androidx.webkit.internal.WebViewRenderProcessImpl: androidx.webkit.internal.WebViewRenderProcessImpl forInvocationHandler(java.lang.reflect.InvocationHandler)>(r2);

        r4 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: androidx.webkit.WebViewRenderProcessClient mWebViewRenderProcessClient>;

        $r5 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor>;

        if $r5 != null goto label1;

        virtualinvoke r4.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessResponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r1, r3);

        goto label2;

     label1:
        $r7 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.util.concurrent.Executor mExecutor>;

        $r6 = new androidx.webkit.internal.WebViewRenderProcessClientAdapter$2;

        specialinvoke $r6.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: void <init>(androidx.webkit.internal.WebViewRenderProcessClientAdapter,androidx.webkit.WebViewRenderProcessClient,android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>(r0, r4, r1, r3);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "WEB_VIEW_RENDERER_CLIENT_BASIC_USAGE";

        <androidx.webkit.internal.WebViewRenderProcessClientAdapter: java.lang.String[] sSupportedFeatures> = $r0;

        return;
    }

androidx.webkit.internal.WebViewRenderProcessClientAdapter$1
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcessClient val$client>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: android.webkit.WebView val$view>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcess val$rendererObject>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.internal.WebViewRenderProcessClientAdapter this$0>
    void <init>(androidx.webkit.internal.WebViewRenderProcessClientAdapter, androidx.webkit.WebViewRenderProcessClient, android.webkit.WebView, androidx.webkit.WebViewRenderProcess)
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$1 r0;
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r1;
        androidx.webkit.WebViewRenderProcessClient r2;
        android.webkit.WebView r3;
        androidx.webkit.WebViewRenderProcess r4;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter$1;

        r1 := @parameter0: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        r2 := @parameter1: androidx.webkit.WebViewRenderProcessClient;

        r3 := @parameter2: android.webkit.WebView;

        r4 := @parameter3: androidx.webkit.WebViewRenderProcess;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.internal.WebViewRenderProcessClientAdapter this$0> = r1;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcessClient val$client> = r2;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: android.webkit.WebView val$view> = r3;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcess val$rendererObject> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$1 r0;
        androidx.webkit.WebViewRenderProcess $r1;
        android.webkit.WebView $r2;
        androidx.webkit.WebViewRenderProcessClient $r3;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter$1;

        $r3 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcessClient val$client>;

        $r2 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: android.webkit.WebView val$view>;

        $r1 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$1: androidx.webkit.WebViewRenderProcess val$rendererObject>;

        virtualinvoke $r3.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessUnresponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>($r2, $r1);

        return;
    }

androidx.webkit.internal.WebViewRenderProcessClientAdapter$2
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcessClient val$client>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: android.webkit.WebView val$view>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcess val$rendererObject>
<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.internal.WebViewRenderProcessClientAdapter this$0>
    void <init>(androidx.webkit.internal.WebViewRenderProcessClientAdapter, androidx.webkit.WebViewRenderProcessClient, android.webkit.WebView, androidx.webkit.WebViewRenderProcess)
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$2 r0;
        androidx.webkit.internal.WebViewRenderProcessClientAdapter r1;
        androidx.webkit.WebViewRenderProcessClient r2;
        android.webkit.WebView r3;
        androidx.webkit.WebViewRenderProcess r4;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter$2;

        r1 := @parameter0: androidx.webkit.internal.WebViewRenderProcessClientAdapter;

        r2 := @parameter1: androidx.webkit.WebViewRenderProcessClient;

        r3 := @parameter2: android.webkit.WebView;

        r4 := @parameter3: androidx.webkit.WebViewRenderProcess;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.internal.WebViewRenderProcessClientAdapter this$0> = r1;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcessClient val$client> = r2;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: android.webkit.WebView val$view> = r3;

        r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcess val$rendererObject> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.webkit.internal.WebViewRenderProcessClientAdapter$2 r0;
        androidx.webkit.WebViewRenderProcess $r1;
        android.webkit.WebView $r2;
        androidx.webkit.WebViewRenderProcessClient $r3;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessClientAdapter$2;

        $r3 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcessClient val$client>;

        $r2 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: android.webkit.WebView val$view>;

        $r1 = r0.<androidx.webkit.internal.WebViewRenderProcessClientAdapter$2: androidx.webkit.WebViewRenderProcess val$rendererObject>;

        virtualinvoke $r3.<androidx.webkit.WebViewRenderProcessClient: void onRenderProcessResponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)>($r2, $r1);

        return;
    }

