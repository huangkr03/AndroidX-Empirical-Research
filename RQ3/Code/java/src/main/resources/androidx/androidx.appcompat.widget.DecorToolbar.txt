androidx.appcompat.widget.DecorToolbar
<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>
<androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()>
<androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()>
<androidx.appcompat.widget.DecorToolbar: void collapseActionView()>
<androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>
<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>
<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()>
<androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>
<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>
<androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>
<androidx.appcompat.widget.DecorToolbar: void initProgress()>
<androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()>
<androidx.appcompat.widget.DecorToolbar: boolean hasIcon()>
<androidx.appcompat.widget.DecorToolbar: boolean hasLogo()>
<androidx.appcompat.widget.DecorToolbar: void setIcon(int)>
<androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.DecorToolbar: void setLogo(int)>
<androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()>
<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()>
<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()>
<androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()>
<androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()>
<androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()>
<androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>
<androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()>
<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>
<androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)>
<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>
<androidx.appcompat.widget.DecorToolbar: boolean hasEmbeddedTabs()>
<androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()>
<androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)>
<androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>
<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>
<androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)>
<androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)>
<androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)>
<androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()>
<androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()>
<androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)>
<androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()>
<androidx.appcompat.widget.DecorToolbar: void animateToVisibility(int)>
<androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>
<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)>
<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)>
<androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationContentDescription(int)>
<androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)>
<androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)>
<androidx.appcompat.widget.DecorToolbar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.DecorToolbar: int getHeight()>
<androidx.appcompat.widget.DecorToolbar: void setVisibility(int)>
<androidx.appcompat.widget.DecorToolbar: int getVisibility()>
<androidx.appcompat.widget.DecorToolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>
<androidx.appcompat.widget.DecorToolbar: android.view.Menu getMenu()>
