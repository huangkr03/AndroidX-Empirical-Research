androidx.compose.runtime.collection.IdentityScopeMap
<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>
<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>
<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>
<androidx.compose.runtime.collection.IdentityScopeMap: int size>
    public void <init>()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0, r2;
        int[] r1;
        int i0, i1;
        java.lang.Object[] $r3;
        androidx.compose.runtime.collection.IdentityArraySet[] $r4;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i1 = 0;

        r1 = newarray (int)[50];

        r2 = r0;

     label1:
        if i1 >= 50 goto label2;

        i0 = i1;

        r1[i0] = i0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder> = r1;

        $r3 = newarray (java.lang.Object)[50];

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values> = $r3;

        $r4 = newarray (androidx.compose.runtime.collection.IdentityArraySet)[50];

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets> = $r4;

        return;
    }

    public final int[] getValueOrder()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        return $r1;
    }

    public final void setValueOrder(int[])
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int[] r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder> = r1;

        return;
    }

    public static void getValueOrder$annotations()
    {
        return;
    }

    public final java.lang.Object[] getValues()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        return $r1;
    }

    public final void setValues(java.lang.Object[])
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values> = r1;

        return;
    }

    public static void getValues$annotations()
    {
        return;
    }

    public final androidx.compose.runtime.collection.IdentityArraySet[] getScopeSets()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        androidx.compose.runtime.collection.IdentityArraySet[] $r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        return $r1;
    }

    public final void setScopeSets(androidx.compose.runtime.collection.IdentityArraySet[])
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        androidx.compose.runtime.collection.IdentityArraySet[] r1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: androidx.compose.runtime.collection.IdentityArraySet[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets> = r1;

        return;
    }

    public static void getScopeSets$annotations()
    {
        return;
    }

    public final int getSize()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        $i0 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        return $i0;
    }

    public final void setSize(int)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int i0;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size> = i0;

        return;
    }

    public static void getSize$annotations()
    {
        return;
    }

    private final java.lang.Object valueAt(int)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int i0, $i1;
        int[] $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i1 = $r1[i0];

        $r3 = $r2[$i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;
    }

    private final androidx.compose.runtime.collection.IdentityArraySet scopeSetAt(int)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int i0, $i1;
        int[] $r1;
        androidx.compose.runtime.collection.IdentityArraySet[] $r2;
        androidx.compose.runtime.collection.IdentityArraySet $r3;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i1 = $r1[i0];

        $r3 = $r2[$i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;
    }

    public final boolean add(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object r1, r2;
        androidx.compose.runtime.collection.IdentityArraySet r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        r3 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet getOrCreateIdentitySet(java.lang.Object)>(r1);

        $z0 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: boolean add(java.lang.Object)>(r2);

        return $z0;
    }

    public final boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $i0 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int find(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void forEachScopeOf(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object r1, $r4;
        kotlin.jvm.functions.Function1 r2;
        int i0, i1, i2;
        androidx.compose.runtime.collection.IdentityArraySet r3;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        i0 = staticinvoke <androidx.compose.runtime.collection.IdentityScopeMap: int access$find(androidx.compose.runtime.collection.IdentityScopeMap,java.lang.Object)>(r0, r1);

        if i0 < 0 goto label2;

        r3 = staticinvoke <androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet access$scopeSetAt(androidx.compose.runtime.collection.IdentityScopeMap,int)>(r0, i0);

        i2 = 0;

        i1 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label1:
        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object get(int)>(i2);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private final androidx.compose.runtime.collection.IdentityArraySet getOrCreateIdentitySet(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22;
        int[] $r2, $r3, $r12, $r14, $r16, $r19, $r20, $r21, r31;
        androidx.compose.runtime.collection.IdentityArraySet[] $r4, $r6, $r8, $r18, $r24;
        java.lang.Object[] $r5, $r9, $r10, $r11, $r17;
        androidx.compose.runtime.collection.IdentityArraySet $r7, $r23, $r25, $r26, r27, r28, r29, r30;
        boolean z1;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        z1 = 0;

        $i1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        if $i1 <= 0 goto label1;

        i16 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int find(java.lang.Object)>(r1);

        if i16 < 0 goto label2;

        $r25 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet scopeSetAt(int)>(i16);

        return $r25;

     label1:
        i16 = -1;

     label2:
        $i2 = i16 + 1;

        i0 = neg $i2;

        $i4 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $r2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i3 = lengthof $r2;

        if $i4 >= $i3 goto label5;

        $r16 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i11 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        i17 = $r16[$i11];

        $r17 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r17[i17] = r1;

        $r18 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r26 = $r18[i17];

        if $r26 != null goto label3;

        $r23 = new androidx.compose.runtime.collection.IdentityArraySet;

        specialinvoke $r23.<androidx.compose.runtime.collection.IdentityArraySet: void <init>()>();

        r27 = $r23;

        r28 = r27;

        $r24 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r24[i17] = r28;

        $r26 = r27;

     label3:
        r29 = $r26;

        $i12 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        if i0 >= $i12 goto label4;

        $r21 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $r20 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i15 = i0 + 1;

        $i14 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r21, $r20, $i15, i0, $i14);

     label4:
        $r19 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $r19[i0] = i17;

        i18 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $i13 = i18 + 1;

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size> = $i13;

        return r29;

     label5:
        $r3 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i5 = lengthof $r3;

        i19 = $i5 * 2;

        i20 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $r4 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r4, i19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "copyOf(this, newSize)");

        $r6 = (androidx.compose.runtime.collection.IdentityArraySet[]) $r5;

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets> = $r6;

        $r7 = new androidx.compose.runtime.collection.IdentityArraySet;

        specialinvoke $r7.<androidx.compose.runtime.collection.IdentityArraySet: void <init>()>();

        r30 = $r7;

        $r8 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r8[i20] = r30;

        $r9 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r10 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r9, i19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "copyOf(this, newSize)");

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values> = $r10;

        $r11 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r11[i20] = r1;

        r31 = newarray (int)[i19];

        $i6 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        i21 = $i6 + 1;

     label6:
        if i21 >= i19 goto label7;

        r31[i21] = i21;

        i21 = i21 + 1;

        goto label6;

     label7:
        $i7 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        if i0 >= $i7 goto label8;

        $r14 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i10 = i0 + 1;

        $i9 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r14, r31, $i10, i0, $i9);

     label8:
        r31[i0] = i20;

        if i0 <= 0 goto label9;

        $r12 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)>($r12, r31, 0, 0, i0, 6, null);

     label9:
        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder> = r31;

        i22 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $i8 = i22 + 1;

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size> = $i8;

        return r30;
    }

    public final void clear()
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        int i0, i1;
        androidx.compose.runtime.collection.IdentityArraySet[] $r1, $r2;
        androidx.compose.runtime.collection.IdentityArraySet $r3;
        int[] $r4;
        java.lang.Object[] $r5;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        i1 = 0;

        $r1 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        i0 = lengthof $r1;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.compose.runtime.collection.IdentityArraySet: void clear()>();

        goto label2;

     label2:
        $r4 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $r4[i1] = i1;

        $r5 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r5[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size> = 0;

        return;
    }

    public final boolean remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        java.lang.Object r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        androidx.compose.runtime.collection.IdentityArraySet r3, $r6;
        boolean z0;
        int[] $r4, $r7, $r9, $r10;
        androidx.compose.runtime.collection.IdentityArraySet[] $r5;
        java.lang.Object[] $r8;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        i0 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int find(java.lang.Object)>(r1);

        if i0 < 0 goto label4;

        $r4 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        i1 = $r4[i0];

        $r5 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] scopeSets>;

        $r6 = $r5[i1];

        if $r6 != null goto label1;

        return 0;

     label1:
        r3 = $r6;

        z0 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: boolean remove(java.lang.Object)>(r2);

        $i5 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i5 != 0 goto label3;

        i2 = i0 + 1;

        i3 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        if i2 >= i3 goto label2;

        $r10 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $r9 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        staticinvoke <kotlin.collections.ArraysKt: int[] copyInto(int[],int[],int,int,int)>($r10, $r9, i0, i2, i3);

     label2:
        $r7 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i6 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $i7 = $i6 - 1;

        $r7[$i7] = i1;

        $r8 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r8[i1] = null;

        i4 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $i8 = i4 + -1;

        r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size> = $i8;

     label3:
        return z0;

     label4:
        return 0;
    }

    public final void removeValueIf(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0, r2;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13;
        androidx.compose.runtime.collection.IdentityArraySet r3, r4, $r10, r20;
        java.lang.Object r5, $r16, $r17;
        java.lang.Object[] $r6, $r14, $r15, $r19;
        int[] $r7, $r8, $r11, $r12, $r13;
        androidx.compose.runtime.collection.IdentityArraySet[] $r9;
        java.lang.Boolean $r18;
        boolean $z4;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        r2 = r0;

        i3 = 0;

        i4 = 0;

        i5 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label01:
        if i4 >= i5 goto label10;

        $r8 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i0 = $r8[i4];

        $r9 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] getScopeSets()>();

        $r10 = $r9[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r10);

        r3 = $r10;

        r20 = r3;

        r4 = r20;

        i6 = 0;

        i7 = 0;

        i8 = virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label02:
        if i7 >= i8 goto label05;

        $r15 = virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r16 = $r15[i7];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r16, "null cannot be cast to non-null type T of androidx.compose.runtime.collection.IdentityArraySet");

        r5 = $r16;

        $r17 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r18 = (java.lang.Boolean) $r17;

        $z4 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 != 0 goto label04;

        if i6 == i7 goto label03;

        $r19 = virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r19[i6] = r5;

     label03:
        i6 = i6 + 1;

     label04:
        i7 = i7 + 1;

        goto label02;

     label05:
        i9 = i6;

        i10 = virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

     label06:
        if i9 >= i10 goto label07;

        $r14 = virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: java.lang.Object[] getValues()>();

        $r14[i9] = null;

        i9 = i9 + 1;

        goto label06;

     label07:
        virtualinvoke r4.<androidx.compose.runtime.collection.IdentityArraySet: void setSize(int)>(i6);

        $i2 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i2 <= 0 goto label09;

        if i3 == i4 goto label08;

        $r11 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i11 = $r11[i3];

        $r12 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r12[i3] = i0;

        $r13 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r13[i4] = i11;

     label08:
        i3 = i3 + 1;

     label09:
        i4 = i4 + 1;

        goto label01;

     label10:
        i12 = i3;

        i13 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label11:
        if i12 >= i13 goto label12;

        $r6 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] getValues()>();

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $i1 = $r7[i12];

        $r6[$i1] = null;

        i12 = i12 + 1;

        goto label11;

     label12:
        virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: void setSize(int)>(i3);

        return;
    }

    public final void removeScope(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0, r2;
        java.lang.Object r1;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        androidx.compose.runtime.collection.IdentityArraySet r3, $r8, r12;
        java.lang.Object[] $r4;
        int[] $r5, $r6, $r9, $r10, $r11;
        androidx.compose.runtime.collection.IdentityArraySet[] $r7;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        r2 = r0;

        i3 = 0;

        i4 = 0;

        i5 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label1:
        if i4 >= i5 goto label4;

        $r6 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i0 = $r6[i4];

        $r7 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] getScopeSets()>();

        $r8 = $r7[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

        r3 = $r8;

        r12 = r3;

        virtualinvoke r12.<androidx.compose.runtime.collection.IdentityArraySet: boolean remove(java.lang.Object)>(r1);

        $i2 = virtualinvoke r3.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i2 <= 0 goto label3;

        if i3 == i4 goto label2;

        $r9 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i6 = $r9[i3];

        $r10 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r10[i3] = i0;

        $r11 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r11[i4] = i6;

     label2:
        i3 = i3 + 1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        i7 = i3;

        i8 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label5:
        if i7 >= i8 goto label6;

        $r4 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] getValues()>();

        $r5 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $i1 = $r5[i7];

        $r4[$i1] = null;

        i7 = i7 + 1;

        goto label5;

     label6:
        virtualinvoke r2.<androidx.compose.runtime.collection.IdentityScopeMap: void setSize(int)>(i3);

        return;
    }

    private final void removingScopes(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8;
        androidx.compose.runtime.collection.IdentityArraySet r2, $r7;
        java.lang.Object[] $r3;
        int[] $r4, $r5, $r9, $r10, $r11;
        androidx.compose.runtime.collection.IdentityArraySet[] $r6;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        i4 = 0;

        i5 = 0;

        i6 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label1:
        if i5 >= i6 goto label4;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i0 = $r5[i5];

        $r6 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet[] getScopeSets()>();

        $r7 = $r6[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        r2 = $r7;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $i3 = virtualinvoke r2.<androidx.compose.runtime.collection.IdentityArraySet: int size()>();

        if $i3 <= 0 goto label3;

        if i4 == i5 goto label2;

        $r9 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        i1 = $r9[i4];

        $r10 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r10[i4] = i0;

        $r11 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $r11[i5] = i1;

     label2:
        i4 = i4 + 1;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        i7 = i4;

        i8 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int getSize()>();

     label5:
        if i7 >= i8 goto label6;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] getValues()>();

        $r4 = virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] getValueOrder()>();

        $i2 = $r4[i7];

        $r3[$i2] = null;

        i7 = i7 + 1;

        goto label5;

     label6:
        virtualinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: void setSize(int)>(i4);

        return;
    }

    private final int find(java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0, r6;
        java.lang.Object r1, r2, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        int[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter0: java.lang.Object;

        i0 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r1);

        i8 = 0;

        $i2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        i9 = $i2 - 1;

     label1:
        if i8 > i9 goto label5;

        $i5 = i8 + i9;

        i1 = $i5 >>> 1;

        r6 = r0;

        $r4 = r6.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r3 = r6.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i6 = $r3[i1];

        $r5 = $r4[$i6];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        r2 = $r5;

        i10 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r2);

        if i10 >= i0 goto label2;

        i8 = i1 + 1;

        goto label1;

     label2:
        if i10 <= i0 goto label3;

        i9 = i1 - 1;

        goto label1;

     label3:
        if r1 != r2 goto label4;

        return i1;

     label4:
        $i7 = specialinvoke r0.<androidx.compose.runtime.collection.IdentityScopeMap: int findExactIndex(int,java.lang.Object,int)>(i1, r1, i0);

        return $i7;

     label5:
        $i3 = i8 + 1;

        $i4 = neg $i3;

        return $i4;
    }

    private final int findExactIndex(int, java.lang.Object, int)
    {
        androidx.compose.runtime.collection.IdentityScopeMap r0, r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.Object r1, $r4, $r7, r9, r11;
        int[] $r2, $r5;
        java.lang.Object[] $r3, $r6;

        r0 := @this: androidx.compose.runtime.collection.IdentityScopeMap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i11 = i0 - 1;

     label1:
        if -1 >= i11 goto label4;

        r8 = r0;

        $r6 = r8.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r5 = r8.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i9 = $r5[i11];

        $r7 = $r6[$i9];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        r9 = $r7;

        if r9 != r1 goto label2;

        return i11;

     label2:
        $i10 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r9);

        if $i10 == i1 goto label3;

        goto label4;

     label3:
        i11 = i11 + -1;

        goto label1;

     label4:
        i12 = i0 + 1;

        i13 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

     label5:
        if i12 >= i13 goto label8;

        $r3 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: java.lang.Object[] values>;

        $r2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int[] valueOrder>;

        $i5 = $r2[i12];

        $r4 = $r3[$i5];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        r11 = $r4;

        if r11 != r1 goto label6;

        return i12;

     label6:
        $i6 = staticinvoke <androidx.compose.runtime.ActualJvm_jvmKt: int identityHashCode(java.lang.Object)>(r11);

        if $i6 == i1 goto label7;

        $i7 = i12 + 1;

        $i8 = neg $i7;

        return $i8;

     label7:
        i12 = i12 + 1;

        goto label5;

     label8:
        $i2 = r0.<androidx.compose.runtime.collection.IdentityScopeMap: int size>;

        $i3 = $i2 + 1;

        $i4 = neg $i3;

        return $i4;
    }

    public static final int access$find(androidx.compose.runtime.collection.IdentityScopeMap, java.lang.Object)
    {
        androidx.compose.runtime.collection.IdentityScopeMap $r0;
        java.lang.Object r1;
        int $i0;

        $r0 := @parameter0: androidx.compose.runtime.collection.IdentityScopeMap;

        r1 := @parameter1: java.lang.Object;

        $i0 = specialinvoke $r0.<androidx.compose.runtime.collection.IdentityScopeMap: int find(java.lang.Object)>(r1);

        return $i0;
    }

    public static final androidx.compose.runtime.collection.IdentityArraySet access$scopeSetAt(androidx.compose.runtime.collection.IdentityScopeMap, int)
    {
        androidx.compose.runtime.collection.IdentityScopeMap $r0;
        int i0;
        androidx.compose.runtime.collection.IdentityArraySet $r1;

        $r0 := @parameter0: androidx.compose.runtime.collection.IdentityScopeMap;

        i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<androidx.compose.runtime.collection.IdentityScopeMap: androidx.compose.runtime.collection.IdentityArraySet scopeSetAt(int)>(i0);

        return $r1;
    }

