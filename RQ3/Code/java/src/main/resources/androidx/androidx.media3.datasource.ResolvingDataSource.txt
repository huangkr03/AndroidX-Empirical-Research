androidx.media3.datasource.ResolvingDataSource
<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>
<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.ResolvingDataSource$Resolver resolver>
<androidx.media3.datasource.ResolvingDataSource: boolean upstreamOpened>
    public void <init>(androidx.media3.datasource.DataSource, androidx.media3.datasource.ResolvingDataSource$Resolver)
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.ResolvingDataSource$Resolver r2;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.ResolvingDataSource$Resolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource> = r1;

        r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.ResolvingDataSource$Resolver resolver> = r2;

        return;
    }

    public void addTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.datasource.DataSource $r3;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        interfaceinvoke $r3.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r1);

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        androidx.media3.datasource.DataSpec r1, r2;
        androidx.media3.datasource.ResolvingDataSource$Resolver $r3;
        androidx.media3.datasource.DataSource $r4;
        long $l0;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        $r3 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.ResolvingDataSource$Resolver resolver>;

        r2 = interfaceinvoke $r3.<androidx.media3.datasource.ResolvingDataSource$Resolver: androidx.media3.datasource.DataSpec resolveDataSpec(androidx.media3.datasource.DataSpec)>(r1);

        r0.<androidx.media3.datasource.ResolvingDataSource: boolean upstreamOpened> = 1;

        $r4 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $l0 = interfaceinvoke $r4.<androidx.media3.datasource.DataSource: long open(androidx.media3.datasource.DataSpec)>(r2);

        return $l0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        byte[] r1;
        int i0, i1, $i2;
        androidx.media3.datasource.DataSource $r2;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $i2 = interfaceinvoke $r2.<androidx.media3.datasource.DataSource: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        android.net.Uri r1, $r4;
        androidx.media3.datasource.DataSource $r2;
        androidx.media3.datasource.ResolvingDataSource$Resolver $r3;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        $r2 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        r1 = interfaceinvoke $r2.<androidx.media3.datasource.DataSource: android.net.Uri getUri()>();

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.ResolvingDataSource$Resolver resolver>;

        $r4 = interfaceinvoke $r3.<androidx.media3.datasource.ResolvingDataSource$Resolver: android.net.Uri resolveReportedUri(android.net.Uri)>(r1);

     label2:
        return $r4;
    }

    public java.util.Map getResponseHeaders()
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        androidx.media3.datasource.DataSource $r1;
        java.util.Map $r2;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        $r1 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $r2 = interfaceinvoke $r1.<androidx.media3.datasource.DataSource: java.util.Map getResponseHeaders()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        androidx.media3.datasource.ResolvingDataSource r0;
        boolean $z0;
        androidx.media3.datasource.DataSource $r1;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource;

        $z0 = r0.<androidx.media3.datasource.ResolvingDataSource: boolean upstreamOpened>;

        if $z0 == 0 goto label1;

        r0.<androidx.media3.datasource.ResolvingDataSource: boolean upstreamOpened> = 0;

        $r1 = r0.<androidx.media3.datasource.ResolvingDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        interfaceinvoke $r1.<androidx.media3.datasource.DataSource: void close()>();

     label1:
        return;
    }

androidx.media3.datasource.ResolvingDataSource$Factory
<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamFactory>
<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.ResolvingDataSource$Resolver resolver>
    public void <init>(androidx.media3.datasource.DataSource$Factory, androidx.media3.datasource.ResolvingDataSource$Resolver)
    {
        androidx.media3.datasource.ResolvingDataSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.datasource.ResolvingDataSource$Resolver r2;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r2 := @parameter1: androidx.media3.datasource.ResolvingDataSource$Resolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamFactory> = r1;

        r0.<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.ResolvingDataSource$Resolver resolver> = r2;

        return;
    }

    public androidx.media3.datasource.ResolvingDataSource createDataSource()
    {
        androidx.media3.datasource.ResolvingDataSource$Factory r0;
        androidx.media3.datasource.ResolvingDataSource $r1;
        androidx.media3.datasource.DataSource$Factory $r2;
        androidx.media3.datasource.DataSource $r3;
        androidx.media3.datasource.ResolvingDataSource$Resolver $r4;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource$Factory;

        $r1 = new androidx.media3.datasource.ResolvingDataSource;

        $r2 = r0.<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamFactory>;

        $r3 = interfaceinvoke $r2.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        $r4 = r0.<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.ResolvingDataSource$Resolver resolver>;

        specialinvoke $r1.<androidx.media3.datasource.ResolvingDataSource: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.ResolvingDataSource$Resolver)>($r3, $r4);

        return $r1;
    }

    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.ResolvingDataSource$Factory r0;
        androidx.media3.datasource.ResolvingDataSource $r1;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.ResolvingDataSource$Factory: androidx.media3.datasource.ResolvingDataSource createDataSource()>();

        return $r1;
    }

androidx.media3.datasource.ResolvingDataSource$Resolver
<androidx.media3.datasource.ResolvingDataSource$Resolver: androidx.media3.datasource.DataSpec resolveDataSpec(androidx.media3.datasource.DataSpec)>
    public android.net.Uri resolveReportedUri(android.net.Uri)
    {
        androidx.media3.datasource.ResolvingDataSource$Resolver r0;
        android.net.Uri r1;

        r0 := @this: androidx.media3.datasource.ResolvingDataSource$Resolver;

        r1 := @parameter0: android.net.Uri;

        return r1;
    }

