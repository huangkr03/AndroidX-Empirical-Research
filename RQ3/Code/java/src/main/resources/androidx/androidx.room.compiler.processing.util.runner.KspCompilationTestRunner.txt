androidx.room.compiler.processing.util.runner.KspCompilationTestRunner
<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.util.List testProcessorProviders>
<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.lang.String name>
    public void <init>(java.util.List)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;
        java.util.List r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testProcessorProviders");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.util.List testProcessorProviders> = r1;

        r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.lang.String name> = "ksp";

        return;
    }

    public void <init>(java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.List r2;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        r2 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        specialinvoke r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: void <init>(java.util.List)>(r2);

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        $r1 = r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.lang.String name>;

        return $r1;
    }

    public boolean canRun(androidx.room.compiler.processing.util.runner.TestCompilationParameters)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        r1 := @parameter0: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        return 1;
    }

    public androidx.room.compiler.processing.util.CompilationResult compile(java.io.File, androidx.room.compiler.processing.util.runner.TestCompilationParameters)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;
        java.io.File r1;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters r2;
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1 r3, $r10;
        androidx.room.compiler.processing.util.compiler.TestCompilationArguments r4, $r13;
        java.util.List r5, r6, r8, r9, $r11, r19;
        java.util.Map r7;
        java.util.Collection $r12;
        androidx.room.compiler.processing.util.KotlinCompilationResult $r14;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner $r15;
        androidx.room.compiler.processing.SyntheticKspProcessor $r16;
        androidx.room.compiler.processing.SyntheticProcessor $r17;
        androidx.room.compiler.processing.util.CompilationResult $r18;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult r20;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workingDir");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "params");

        $r10 = new androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1;

        specialinvoke $r10.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: void <init>(androidx.room.compiler.processing.util.runner.TestCompilationParameters)>(r2);

        r3 = $r10;

        r19 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getSources()>();

        r5 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getClasspath()>();

        $r11 = r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: java.util.List testProcessorProviders>;

        $r12 = (java.util.Collection) $r11;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r12, r3);

        r7 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.Map getOptions()>();

        r8 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getJavacArguments()>();

        r9 = virtualinvoke r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getKotlincArguments()>();

        $r13 = new androidx.room.compiler.processing.util.compiler.TestCompilationArguments;

        specialinvoke $r13.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: void <init>(java.util.List,java.util.List,boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r19, r5, 0, r8, r9, null, r6, r7, 36, null);

        r4 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: androidx.room.compiler.processing.util.compiler.TestCompilationArguments withAtLeastOneKotlinSource(androidx.room.compiler.processing.util.compiler.TestCompilationArguments)>($r13);

        r20 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: androidx.room.compiler.processing.util.compiler.TestCompilationResult compile(java.io.File,androidx.room.compiler.processing.util.compiler.TestCompilationArguments)>(r1, r4);

        $r14 = new androidx.room.compiler.processing.util.KotlinCompilationResult;

        $r15 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) r0;

        $r16 = virtualinvoke r3.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.SyntheticKspProcessor getProcessor()>();

        $r17 = (androidx.room.compiler.processing.SyntheticProcessor) $r16;

        specialinvoke $r14.<androidx.room.compiler.processing.util.KotlinCompilationResult: void <init>(androidx.room.compiler.processing.util.runner.CompilationTestRunner,androidx.room.compiler.processing.SyntheticProcessor,androidx.room.compiler.processing.util.compiler.TestCompilationResult)>($r15, $r17, r20);

        $r18 = (androidx.room.compiler.processing.util.CompilationResult) $r14;

        return $r18;
    }

    public void <init>()
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner r0;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        specialinvoke r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1
<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.SyntheticKspProcessor processor>
<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.util.runner.TestCompilationParameters $params>
    void <init>(androidx.room.compiler.processing.util.runner.TestCompilationParameters)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1 r0;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1;

        $r1 := @parameter0: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.util.runner.TestCompilationParameters $params> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.SyntheticKspProcessor getProcessor()
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1 r0;
        androidx.room.compiler.processing.SyntheticKspProcessor $r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1;

        $r1 = r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.SyntheticKspProcessor processor>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("processor");

        return null;
    }

    public final void setProcessor(androidx.room.compiler.processing.SyntheticKspProcessor)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1 r0;
        androidx.room.compiler.processing.SyntheticKspProcessor r1;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1;

        r1 := @parameter0: androidx.room.compiler.processing.SyntheticKspProcessor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.SyntheticKspProcessor processor> = r1;

        return;
    }

    public com.google.devtools.ksp.processing.SymbolProcessor create(com.google.devtools.ksp.processing.SymbolProcessorEnvironment)
    {
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1 r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r2, $r3;
        androidx.room.compiler.processing.SyntheticKspProcessor $r4, r8, r9;
        com.google.devtools.ksp.processing.SymbolProcessor $r5;
        java.util.List r6;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r0 := @this: androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "environment");

        $r2 = r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.util.runner.TestCompilationParameters $params>;

        r6 = virtualinvoke $r2.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: java.util.List getHandlers()>();

        $r3 = r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: androidx.room.compiler.processing.util.runner.TestCompilationParameters $params>;

        r7 = virtualinvoke $r3.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: androidx.room.compiler.processing.XProcessingEnvConfig getConfig()>();

        $r4 = new androidx.room.compiler.processing.SyntheticKspProcessor;

        specialinvoke $r4.<androidx.room.compiler.processing.SyntheticKspProcessor: void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r1, r7, r6);

        r8 = $r4;

        r9 = r8;

        virtualinvoke r0.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner$compile$processorProvider$1: void setProcessor(androidx.room.compiler.processing.SyntheticKspProcessor)>(r9);

        $r5 = (com.google.devtools.ksp.processing.SymbolProcessor) r8;

        return $r5;
    }

