androidx.room.compiler.processing.XRoundEnv
<androidx.room.compiler.processing.XRoundEnv: androidx.room.compiler.processing.XRoundEnv$Companion Companion>
<androidx.room.compiler.processing.XRoundEnv: java.util.Set getRootElements()>
<androidx.room.compiler.processing.XRoundEnv: boolean isProcessingOver()>
<androidx.room.compiler.processing.XRoundEnv: java.util.Set getElementsAnnotatedWith(kotlin.reflect.KClass)>
<androidx.room.compiler.processing.XRoundEnv: java.util.Set getElementsAnnotatedWith(java.lang.String)>
    public static androidx.room.compiler.processing.XRoundEnv create(androidx.room.compiler.processing.XProcessingEnv, javax.'annotation'.processing.RoundEnvironment, boolean)
    {
        androidx.room.compiler.processing.XProcessingEnv r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        boolean z0;
        androidx.room.compiler.processing.XRoundEnv$Companion $r2;
        androidx.room.compiler.processing.XRoundEnv $r3;

        r0 := @parameter0: androidx.room.compiler.processing.XProcessingEnv;

        r1 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        z0 := @parameter2: boolean;

        $r2 = <androidx.room.compiler.processing.XRoundEnv: androidx.room.compiler.processing.XRoundEnv$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.XRoundEnv$Companion: androidx.room.compiler.processing.XRoundEnv create(androidx.room.compiler.processing.XProcessingEnv,javax.'annotation'.processing.RoundEnvironment,boolean)>(r0, r1, z0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.XRoundEnv$Companion $r0;

        $r0 = <androidx.room.compiler.processing.XRoundEnv$Companion: androidx.room.compiler.processing.XRoundEnv$Companion $$INSTANCE>;

        <androidx.room.compiler.processing.XRoundEnv: androidx.room.compiler.processing.XRoundEnv$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.XRoundEnv$Companion
<androidx.room.compiler.processing.XRoundEnv$Companion: androidx.room.compiler.processing.XRoundEnv$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.processing.XRoundEnv$Companion r0;

        r0 := @this: androidx.room.compiler.processing.XRoundEnv$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.XRoundEnv create(androidx.room.compiler.processing.XProcessingEnv, javax.'annotation'.processing.RoundEnvironment, boolean)
    {
        androidx.room.compiler.processing.XRoundEnv$Companion r0;
        androidx.room.compiler.processing.XProcessingEnv r1, r3;
        javax.'annotation'.processing.RoundEnvironment r2;
        boolean z0, $z1, $z2;
        java.lang.String r4, $r9, $r10, $r16;
        java.lang.IllegalStateException $r5, $r15;
        java.lang.StringBuilder $r6, $r7, $r8;
        androidx.room.compiler.processing.ksp.KspRoundEnv $r11;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r12;
        androidx.room.compiler.processing.javac.JavacRoundEnv $r13;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r14;
        androidx.room.compiler.processing.XRoundEnv $r17;

        r0 := @this: androidx.room.compiler.processing.XRoundEnv$Companion;

        r1 := @parameter0: androidx.room.compiler.processing.XProcessingEnv;

        r2 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "processingEnv");

        r3 = r1;

        $z1 = r3 instanceof androidx.room.compiler.processing.javac.JavacProcessingEnv;

        if $z1 == 0 goto label2;

        if r2 != null goto label1;

        r4 = "Required value was null.";

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label1:
        $r13 = new androidx.room.compiler.processing.javac.JavacRoundEnv;

        $r14 = (androidx.room.compiler.processing.javac.JavacProcessingEnv) r1;

        specialinvoke $r13.<androidx.room.compiler.processing.javac.JavacRoundEnv: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.'annotation'.processing.RoundEnvironment)>($r14, r2);

        $r17 = (androidx.room.compiler.processing.XRoundEnv) $r13;

        goto label4;

     label2:
        $z2 = r3 instanceof androidx.room.compiler.processing.ksp.KspProcessingEnv;

        if $z2 == 0 goto label3;

        $r11 = new androidx.room.compiler.processing.ksp.KspRoundEnv;

        $r12 = (androidx.room.compiler.processing.ksp.KspProcessingEnv) r1;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspRoundEnv: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,boolean)>($r12, z0);

        $r17 = (androidx.room.compiler.processing.XRoundEnv) $r11;

        goto label4;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid processing environment type: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return $r17;
    }

    public static androidx.room.compiler.processing.XRoundEnv create$default(androidx.room.compiler.processing.XRoundEnv$Companion, androidx.room.compiler.processing.XProcessingEnv, javax.'annotation'.processing.RoundEnvironment, boolean, int, java.lang.Object)
    {
        androidx.room.compiler.processing.XRoundEnv$Companion r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        javax.'annotation'.processing.RoundEnvironment r3;
        boolean z0, $z1;
        androidx.room.compiler.processing.XRoundEnv $r4;

        r0 := @parameter0: androidx.room.compiler.processing.XRoundEnv$Companion;

        r1 := @parameter1: androidx.room.compiler.processing.XProcessingEnv;

        r3 := @parameter2: javax.'annotation'.processing.RoundEnvironment;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label4;

        if r3 == null goto label2;

        $z1 = interfaceinvoke r3.<javax.'annotation'.processing.RoundEnvironment: boolean processingOver()>();

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

     label4:
        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.XRoundEnv$Companion: androidx.room.compiler.processing.XRoundEnv create(androidx.room.compiler.processing.XProcessingEnv,javax.'annotation'.processing.RoundEnvironment,boolean)>(r1, r3, z0);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.XRoundEnv$Companion $r0;

        $r0 = new androidx.room.compiler.processing.XRoundEnv$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.XRoundEnv$Companion: void <init>()>();

        <androidx.room.compiler.processing.XRoundEnv$Companion: androidx.room.compiler.processing.XRoundEnv$Companion $$INSTANCE> = $r0;

        return;
    }

