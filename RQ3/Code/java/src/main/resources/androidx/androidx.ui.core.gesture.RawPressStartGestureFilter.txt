androidx.ui.core.gesture.RawPressStartGestureFilter
<androidx.ui.core.gesture.RawPressStartGestureFilter: kotlin.jvm.functions.Function1 onPressStart>
<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean enabled>
<androidx.ui.core.gesture.RawPressStartGestureFilter: androidx.ui.core.PointerEventPass executionPass>
<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean active>
    public void <init>()
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        androidx.ui.core.PointerEventPass $r1;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean enabled> = 1;

        $r1 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: androidx.ui.core.PointerEventPass executionPass> = $r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnPressStart()
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        r1 = r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: kotlin.jvm.functions.Function1 onPressStart>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("onPressStart");

        throw null;
    }

    public final void setOnPressStart(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: kotlin.jvm.functions.Function1 onPressStart> = r1;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        java.util.List r1, r17;
        androidx.ui.core.PointerEventPass r2, $r8;
        androidx.ui.unit.IntPxSize r3;
        java.lang.Object r4, $r12, r20, r25;
        androidx.ui.core.PointerInputChange r5, r7, $r13, r21, r26;
        java.util.Collection r6, $r10, $r16, r28;
        boolean $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z16, $z17, $z19, z21;
        java.util.ArrayList $r9;
        int $i0;
        kotlin.jvm.functions.Function1 $r11;
        androidx.ui.core.PointerInputData $r14;
        java.lang.Iterable $r18, $r23, $r27;
        java.util.Iterator $r19, $r24, $r29;
        androidx.ui.unit.PxPosition $r22;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r17 = r1;

        $r8 = r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: androidx.ui.core.PointerEventPass executionPass>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z1 == 0 goto label13;

        $z2 = r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean enabled>;

        if $z2 == 0 goto label05;

        $r18 = (java.lang.Iterable) r17;

        $z8 = $r18 instanceof java.util.Collection;

        if $z8 == 0 goto label01;

        $r16 = (java.util.Collection) $r18;

        $z10 = interfaceinvoke $r16.<java.util.Collection: boolean isEmpty()>();

        if $z10 == 0 goto label01;

        $z12 = 1;

        goto label04;

     label01:
        $r19 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z13 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label03;

        r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (androidx.ui.core.PointerInputChange) r20;

        $z9 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>(r21);

        if $z9 != 0 goto label02;

        $z12 = 0;

        goto label04;

     label03:
        $z12 = 1;

     label04:
        if $z12 == 0 goto label05;

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean active> = 1;

        $r11 = virtualinvoke r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: kotlin.jvm.functions.Function1 getOnPressStart()>();

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r17);

        $r13 = (androidx.ui.core.PointerInputChange) $r12;

        $r14 = virtualinvoke $r13.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $r22 = virtualinvoke $r14.<androidx.ui.core.PointerInputData: androidx.ui.unit.PxPosition getPosition()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r22);

        interfaceinvoke $r11.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r22);

        goto label10;

     label05:
        $r23 = (java.lang.Iterable) r17;

        $z3 = $r23 instanceof java.util.Collection;

        if $z3 == 0 goto label06;

        $r10 = (java.util.Collection) $r23;

        $z7 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label06;

        $z16 = 1;

        goto label09;

     label06:
        $r24 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z17 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label08;

        r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r26 = (androidx.ui.core.PointerInputChange) r25;

        $z6 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUp(androidx.ui.core.PointerInputChange)>(r26);

        if $z6 != 0 goto label07;

        $z16 = 0;

        goto label09;

     label08:
        $z16 = 1;

     label09:
        if $z16 == 0 goto label10;

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean active> = 0;

     label10:
        $z19 = r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean active>;

        if $z19 == 0 goto label13;

        $r27 = (java.lang.Iterable) r17;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r27, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r28 = (java.util.Collection) $r9;

        z21 = 0;

        $r29 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        r4 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.PointerInputChange) r4;

        r6 = r28;

        r7 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label11;

     label12:
        r17 = (java.util.List) r28;

     label13:
        return r17;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean active> = 0;

        return;
    }

    public final void setEnabled(boolean)
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        boolean z0;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: boolean enabled> = z0;

        if z0 != 0 goto label1;

        virtualinvoke r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: void onCancel()>();

     label1:
        return;
    }

    public final void setExecutionPass(androidx.ui.core.PointerEventPass)
    {
        androidx.ui.core.gesture.RawPressStartGestureFilter r0;
        androidx.ui.core.PointerEventPass r1;

        r0 := @this: androidx.ui.core.gesture.RawPressStartGestureFilter;

        r1 := @parameter0: androidx.ui.core.PointerEventPass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "executionPass");

        r0.<androidx.ui.core.gesture.RawPressStartGestureFilter: androidx.ui.core.PointerEventPass executionPass> = r1;

        return;
    }

