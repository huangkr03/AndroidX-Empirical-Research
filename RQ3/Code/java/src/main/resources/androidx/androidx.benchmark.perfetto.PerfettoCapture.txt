androidx.benchmark.perfetto.PerfettoCapture
<androidx.benchmark.perfetto.PerfettoCapture: androidx.benchmark.perfetto.PerfettoHelper helper>
    public void <init>(boolean)
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;
        boolean z0;
        androidx.benchmark.perfetto.PerfettoHelper $r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.benchmark.perfetto.PerfettoHelper;

        specialinvoke $r1.<androidx.benchmark.perfetto.PerfettoHelper: void <init>(boolean)>(z0);

        r0.<androidx.benchmark.perfetto.PerfettoCapture: androidx.benchmark.perfetto.PerfettoHelper helper> = $r1;

        return;
    }

    public void <init>(boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;
        int i0, i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0, $z1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i0 & 1;

        if $i2 == 0 goto label4;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        if 21 > i1 goto label2;

        if i1 >= 30 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

     label4:
        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoCapture: void <init>(boolean)>(z0);

        return;
    }

    public final boolean isRunning()
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;
        androidx.benchmark.perfetto.PerfettoHelper $r1;
        boolean $z0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        $r1 = r0.<androidx.benchmark.perfetto.PerfettoCapture: androidx.benchmark.perfetto.PerfettoHelper helper>;

        $z0 = virtualinvoke $r1.<androidx.benchmark.perfetto.PerfettoHelper: boolean isRunning()>();

        return $z0;
    }

    public final void start(java.util.List)
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;
        java.util.List r1, $r26, r27;
        java.lang.String r2, r25, r30, r31;
        java.io.File r3, $r7, $r9;
        kotlin.Unit r4, r28, r32;
        java.lang.Throwable r5, $r18, $r19, $r21, $r23, r29, r33, r34;
        androidx.benchmark.UserspaceTracing $r6, $r10, $r13, $r14, $r16, $r17, $r20, $r22, $r24;
        androidx.benchmark.Outputs $r8;
        int $i0;
        perfetto.protos.TraceConfig $r11;
        byte[] $r12;
        androidx.benchmark.perfetto.PerfettoHelper $r15;
        boolean $z3;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packages");

        r2 = "start perfetto";

        $r6 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r6, r2, 0L, 2, null);

     label01:
        $r7 = new java.io.File;

        $r8 = <androidx.benchmark.Outputs: androidx.benchmark.Outputs INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.benchmark.Outputs: java.io.File getDirUsableByAppAndShell()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "trace_config.pb");

        r3 = $r7;

     label02:
        r25 = "write config";

        $r10 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r10, r25, 0L, 2, null);

     label03:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 28 goto label04;

        $z3 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label05;

     label04:
        $r26 = r1;

        goto label06;

     label05:
        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>("*");

     label06:
        r27 = $r26;

        $r11 = staticinvoke <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig perfettoConfig(java.util.List)>(r27);

        $r12 = staticinvoke <androidx.benchmark.perfetto.PerfettoConfigKt: byte[] validateAndEncode(perfetto.protos.TraceConfig)>($r11);

        staticinvoke <kotlin.io.FilesKt: void writeBytes(java.io.File,byte[])>(r3, $r12);

        r28 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        $r13 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r13, 0L, 1, null);

        goto label10;

     label08:
        $r19 := @caughtexception;

        r29 = $r19;

     label09:
        $r20 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r20, 0L, 1, null);

        throw r29;

     label10:
        r30 = "start perfetto process";

        $r14 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r14, r30, 0L, 2, null);

     label11:
        $r15 = r0.<androidx.benchmark.perfetto.PerfettoCapture: androidx.benchmark.perfetto.PerfettoHelper helper>;

        r31 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r31, "configProtoFile.absolutePath");

        virtualinvoke $r15.<androidx.benchmark.perfetto.PerfettoHelper: void startCollecting(java.lang.String,boolean)>(r31, 0);

        r32 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label12:
        $r16 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r16, 0L, 1, null);

        goto label15;

     label13:
        $r23 := @caughtexception;

        r33 = $r23;

     label14:
        $r24 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r24, 0L, 1, null);

        throw r33;

     label15:
        virtualinvoke r3.<java.io.File: boolean delete()>();

        goto label18;

     label16:
        $r18 := @caughtexception;

        r34 = $r18;

     label17:
        virtualinvoke r3.<java.io.File: boolean delete()>();

        throw r34;

     label18:
        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label19:
        $r17 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r17, 0L, 1, null);

        goto label22;

     label20:
        $r21 := @caughtexception;

        r5 = $r21;

     label21:
        $r22 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r22, 0L, 1, null);

        throw r5;

     label22:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label02 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public final void stop(java.lang.String)
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;
        java.lang.String r1, r2;
        kotlin.Unit r3;
        java.lang.Throwable r4, $r8;
        androidx.benchmark.UserspaceTracing $r5, $r7, $r9;
        androidx.benchmark.perfetto.PerfettoHelper $r6;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destinationPath");

        r2 = "stop perfetto";

        $r5 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r5, r2, 0L, 2, null);

     label1:
        $r6 = r0.<androidx.benchmark.perfetto.PerfettoCapture: androidx.benchmark.perfetto.PerfettoHelper helper>;

        virtualinvoke $r6.<androidx.benchmark.perfetto.PerfettoHelper: void stopCollecting(java.lang.String)>(r1);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        $r7 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r7, 0L, 1, null);

        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        $r9 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r9, 0L, 1, null);

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>()
    {
        androidx.benchmark.perfetto.PerfettoCapture r0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoCapture;

        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoCapture: void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

