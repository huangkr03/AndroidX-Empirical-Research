androidx.recyclerview.widget.RecyclerView
<androidx.recyclerview.widget.RecyclerView: java.lang.String TAG>
<androidx.recyclerview.widget.RecyclerView: boolean DEBUG>
<androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING>
<androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>
<androidx.recyclerview.widget.RecyclerView: float SCROLL_FRICTION>
<androidx.recyclerview.widget.RecyclerView: float INFLEXION>
<androidx.recyclerview.widget.RecyclerView: float DECELERATION_RATE>
<androidx.recyclerview.widget.RecyclerView: float mPhysicalCoef>
<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>
<androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>
<androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION>
<androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>
<androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>
<androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD>
<androidx.recyclerview.widget.RecyclerView: float FLING_DESTRETCH_FACTOR>
<androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH>
<androidx.recyclerview.widget.RecyclerView: int HORIZONTAL>
<androidx.recyclerview.widget.RecyclerView: int VERTICAL>
<androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION>
<androidx.recyclerview.widget.RecyclerView: int NO_POSITION>
<androidx.recyclerview.widget.RecyclerView: long NO_ID>
<androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE>
<androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT>
<androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING>
<androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION>
<androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG>
<androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>
<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>
<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>
<androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener>
<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners>
<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>
<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener>
<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>
<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>
<androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller>
<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>
<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>
<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>
<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>
<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>
<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags>
<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure>
<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>
<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>
<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>
<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent>
<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>
<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>
<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>
<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>
<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>
<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>
<androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER>
<androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE>
<androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING>
<androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING>
<androidx.recyclerview.widget.RecyclerView: long FOREVER_NS>
<androidx.recyclerview.widget.RecyclerView: int mScrollState>
<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>
<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>
<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX>
<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY>
<androidx.recyclerview.widget.RecyclerView: int mLastTouchX>
<androidx.recyclerview.widget.RecyclerView: int mLastTouchY>
<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener>
<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>
<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>
<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor>
<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor>
<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener>
<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>
<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved>
<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>
<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>
<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>
<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper>
<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>
<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>
<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>
<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>
<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>
<androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory sDefaultEdgeEffectFactory>
<androidx.recyclerview.widget.RecyclerView: boolean mLastAutoMeasureSkippedDueToExact>
<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredWidth>
<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredHeight>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback>
    public void <init>(android.content.Context)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.content.Context r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.recyclerview.R$attr: int recyclerViewStyle>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.content.Context r1, $r34;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.view.ViewConfiguration r3;
        float f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.String r4;
        android.graphics.drawable.Drawable r5, r7, $r42, $r43;
        android.graphics.drawable.StateListDrawable r6, r48;
        androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory $r18;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        int[] $r23, $r24, $r25, $r26, $r38, $r39, $r40, $r41;
        android.content.res.Resources $r30;
        android.util.DisplayMetrics $r31;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r32;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r33;
        java.lang.Object $r35;
        android.view.accessibility.AccessibilityManager $r36;
        androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl $r46, r62;
        android.content.res.TypedArray r47, r49;
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r50;
        androidx.recyclerview.widget.RecyclerView$Recycler r51;
        androidx.recyclerview.widget.ViewInfoStore r52;
        androidx.recyclerview.widget.RecyclerView$1 r53;
        android.graphics.Rect r54, r55;
        android.graphics.RectF r56;
        java.util.ArrayList r57, r58, r59, r65;
        androidx.recyclerview.widget.DefaultItemAnimator r60;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r61;
        androidx.recyclerview.widget.RecyclerView$State r63;
        androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener r64;
        androidx.recyclerview.widget.RecyclerView$2 r66;
        androidx.recyclerview.widget.RecyclerView$4 r67;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate r68;
        android.view.View r69, r70, r71, r72, r73;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r50 = new androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        specialinvoke r50.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver> = r50;

        r51 = new androidx.recyclerview.widget.RecyclerView$Recycler;

        specialinvoke r51.<androidx.recyclerview.widget.RecyclerView$Recycler: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler> = r51;

        r52 = new androidx.recyclerview.widget.ViewInfoStore;

        specialinvoke r52.<androidx.recyclerview.widget.ViewInfoStore: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore> = r52;

        r53 = new androidx.recyclerview.widget.RecyclerView$1;

        specialinvoke r53.<androidx.recyclerview.widget.RecyclerView$1: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable> = r53;

        r54 = new android.graphics.Rect;

        specialinvoke r54.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect> = r54;

        r55 = new android.graphics.Rect;

        specialinvoke r55.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2> = r55;

        r56 = new android.graphics.RectF;

        specialinvoke r56.<android.graphics.RectF: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF> = r56;

        r57 = new java.util.ArrayList;

        specialinvoke r57.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners> = r57;

        r58 = new java.util.ArrayList;

        specialinvoke r58.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations> = r58;

        r59 = new java.util.ArrayList;

        specialinvoke r59.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners> = r59;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = 0;

        $r18 = <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory sDefaultEdgeEffectFactory>;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory> = $r18;

        r60 = new androidx.recyclerview.widget.DefaultItemAnimator;

        specialinvoke r60.<androidx.recyclerview.widget.DefaultItemAnimator: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator> = r60;

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor> = 1.4E-45F;

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor> = 1.4E-45F;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = 1;

        r61 = new androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        specialinvoke r61.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger> = r61;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label1;

        r62 = new androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl;

        $r46 = r62;

        specialinvoke r62.<androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void <init>()>();

        goto label2;

     label1:
        $r46 = null;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry> = $r46;

        r63 = new androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r63.<androidx.recyclerview.widget.RecyclerView$State: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState> = r63;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged> = 0;

        r64 = new androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener;

        specialinvoke r64.<androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener> = r64;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $r23 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions> = $r23;

        $r24 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset> = $r24;

        $r25 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets> = $r25;

        $r26 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair> = $r26;

        r65 = new java.util.ArrayList;

        specialinvoke r65.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange> = r65;

        r66 = new androidx.recyclerview.widget.RecyclerView$2;

        specialinvoke r66.<androidx.recyclerview.widget.RecyclerView$2: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner> = r66;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredWidth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredHeight> = 0;

        r67 = new androidx.recyclerview.widget.RecyclerView$4;

        specialinvoke r67.<androidx.recyclerview.widget.RecyclerView$4: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback> = r67;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollContainer(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setFocusableInTouchMode(boolean)>(1);

        r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i2 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i2;

        $f1 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r3, r1);

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor> = $f1;

        $f2 = staticinvoke <androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>(r3, r1);

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor> = $f2;

        $i3 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity> = $i3;

        $i4 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity> = $i4;

        $r30 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r31 = virtualinvoke $r30.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f3 = $r31.<android.util.DisplayMetrics: float density>;

        f0 = $f3 * 160.0F;

        $f4 = 386.0878F * f0;

        $f5 = $f4 * 0.84F;

        r0.<androidx.recyclerview.widget.RecyclerView: float mPhysicalCoef> = $f5;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getOverScrollMode()>();

        if $i5 != 2 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setWillNotDraw(boolean)>($z4);

        $r33 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke $r33.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r32);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initAdapterManager()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initAutofill()>();

        r69 = (android.view.View) r0;

        $i6 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r69);

        if $i6 != 0 goto label5;

        r70 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r70, 1);

     label5:
        $r34 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r35 = virtualinvoke $r34.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r36 = (android.view.accessibility.AccessibilityManager) $r35;

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r36;

        r68 = new androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate;

        specialinvoke r68.<androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>(r68);

        $r38 = <androidx.recyclerview.R$styleable: int[] RecyclerView>;

        r47 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r38, i0, 0);

        $r39 = <androidx.recyclerview.R$styleable: int[] RecyclerView>;

        r71 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r71, r1, $r39, r2, r47, i0, 0);

        $i7 = <androidx.recyclerview.R$styleable: int RecyclerView_layoutManager>;

        r4 = virtualinvoke r47.<android.content.res.TypedArray: java.lang.String getString(int)>($i7);

        $i8 = <androidx.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability>;

        i1 = virtualinvoke r47.<android.content.res.TypedArray: int getInt(int,int)>($i8, -1);

        if i1 != -1 goto label6;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setDescendantFocusability(int)>(262144);

     label6:
        $i9 = <androidx.recyclerview.R$styleable: int RecyclerView_android_clipToPadding>;

        $z1 = virtualinvoke r47.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i9, 1);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding> = $z1;

        $i10 = <androidx.recyclerview.R$styleable: int RecyclerView_fastScrollEnabled>;

        $z2 = virtualinvoke r47.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i10, 0);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller> = $z2;

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller>;

        if $z3 == 0 goto label7;

        $i12 = <androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable>;

        $r42 = virtualinvoke r47.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i12);

        r48 = (android.graphics.drawable.StateListDrawable) $r42;

        $i13 = <androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable>;

        r5 = virtualinvoke r47.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i13);

        $i14 = <androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable>;

        $r43 = virtualinvoke r47.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i14);

        r6 = (android.graphics.drawable.StateListDrawable) $r43;

        $i15 = <androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable>;

        r7 = virtualinvoke r47.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i15);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)>(r48, r5, r6, r7);

     label7:
        virtualinvoke r47.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>(r1, r4, r2, i0, 0);

        z5 = 1;

        $i11 = <android.os.Build$VERSION: int SDK_INT>;

        if $i11 < 21 goto label8;

        $r40 = <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        r49 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r40, i0, 0);

        $r41 = <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        r72 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r72, r1, $r41, r2, r49, i0, 0);

        z5 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke r49.<android.content.res.TypedArray: void recycle()>();

     label8:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>(z5);

        r73 = (android.view.View) r0;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void setPoolingContainer(android.view.View,boolean)>(r73, 1);

        return;
    }

    java.lang.String exceptionLabel()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r3, $r14;
        androidx.recyclerview.widget.RecyclerView$Adapter $r6;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r9;
        android.content.Context $r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = specialinvoke r0.<android.view.ViewGroup: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", adapter:");

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layout:");

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", context:");

        $r12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private void initAutofill()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;
        android.view.View r1, r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = (android.view.View) r0;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>(r1);

        if $i0 != 0 goto label1;

        r2 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>(r2, 8);

     label1:
        return;
    }

    public androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        return $r1;
    }

    public void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate> = r1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        r3 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(r3, $r2);

        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        return "androidx.recyclerview.widget.RecyclerView";
    }

    private void createLayoutManager(android.content.Context, java.lang.String, android.util.AttributeSet, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        java.lang.Class r3, $r6, $r13;
        java.lang.Throwable r4, r5, $r14, $r22, $r31, $r39, $r47, $r49, $r57, r71, r72, r73, r74, r75;
        boolean $z0, $z1;
        java.lang.Class[] $r7, $r48;
        java.lang.Object[] $r8, r69;
        java.lang.Integer $r9, $r10;
        java.lang.Object $r11;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r12;
        java.lang.IllegalStateException $r15, $r24, $r32, $r40, $r50, $r58;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r25, $r27, $r28, $r29, $r33, $r35, $r36, $r37, $r41, $r43, $r44, $r45, $r51, $r53, $r54, $r55, $r59, $r61, $r62, $r63;
        java.lang.String $r17, $r21, $r26, $r30, $r34, $r38, $r42, $r46, $r52, $r56, $r60, $r64, r65, r66, r67;
        java.lang.ClassLoader r68;
        java.lang.reflect.Constructor r70;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        r65 := @parameter1: java.lang.String;

        r2 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r65 == null goto label17;

        r66 = virtualinvoke r65.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r66.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label17;

        r67 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)>(r1, r66);

     label01:
        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isInEditMode()>();

        if $z1 == 0 goto label02;

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r68 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label03;

     label02:
        r68 = virtualinvoke r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label03:
        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r67, 0, r68);

        r3 = virtualinvoke $r6.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/recyclerview/widget/RecyclerView$LayoutManager;");

        r69 = null;

     label04:
        $r7 = <androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE>;

        r70 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = r1;

        $r8[1] = r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[2] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8[3] = $r10;

        r69 = $r8;

     label05:
        goto label10;

     label06:
        $r47 := @caughtexception;

        r4 = $r47;

     label07:
        $r48 = newarray (java.lang.Class)[0];

        r70 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r48);

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

        r5 = $r22;

        virtualinvoke r5.<java.lang.NoSuchMethodException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        $r24 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error creating LayoutManager ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r30, r5);

        throw $r24;

     label10:
        virtualinvoke r70.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r11 = virtualinvoke r70.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r69);

        $r12 = (androidx.recyclerview.widget.RecyclerView$LayoutManager) $r11;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>($r12);

     label11:
        goto label17;

     label12:
        $r57 := @caughtexception;

        r71 = $r57;

        $r58 = new java.lang.IllegalStateException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unable to find LayoutManager ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r64, r71);

        throw $r58;

     label13:
        $r39 := @caughtexception;

        r72 = $r39;

        $r40 = new java.lang.IllegalStateException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r46, r72);

        throw $r40;

     label14:
        $r31 := @caughtexception;

        r73 = $r31;

        $r32 = new java.lang.IllegalStateException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r38, r73);

        throw $r32;

     label15:
        $r49 := @caughtexception;

        r74 = $r49;

        $r50 = new java.lang.IllegalStateException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot access non-public constructor ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r56, r74);

        throw $r50;

     label16:
        $r14 := @caughtexception;

        r75 = $r14;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a LayoutManager ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r75);

        throw $r15;

     label17:
        return;

        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
        catch java.lang.ClassNotFoundException from label01 to label11 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label11 with label13;
        catch java.lang.InstantiationException from label01 to label11 with label14;
        catch java.lang.IllegalAccessException from label01 to label11 with label15;
        catch java.lang.ClassCastException from label01 to label11 with label16;
    }

    private java.lang.String getFullClassName(android.content.Context, java.lang.String)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.content.Context r1;
        java.lang.String r2, $r6, $r10, $r12, $r15;
        char $c0;
        boolean $z0;
        java.lang.StringBuilder $r3, $r7, $r8, $r9, $r11, $r13, $r14;
        java.lang.Class $r4;
        java.lang.Package $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c0 != 46 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label2;

        return r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = class "Landroidx/recyclerview/widget/RecyclerView;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private void initChildrenHelper()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.ChildHelper $r1;
        androidx.recyclerview.widget.RecyclerView$5 $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new androidx.recyclerview.widget.ChildHelper;

        $r2 = new androidx.recyclerview.widget.RecyclerView$5;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$5: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke $r1.<androidx.recyclerview.widget.ChildHelper: void <init>(androidx.recyclerview.widget.ChildHelper$Callback)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper> = $r1;

        return;
    }

    void initAdapterManager()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.AdapterHelper $r1;
        androidx.recyclerview.widget.RecyclerView$6 $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new androidx.recyclerview.widget.AdapterHelper;

        $r2 = new androidx.recyclerview.widget.RecyclerView$6;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$6: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke $r1.<androidx.recyclerview.widget.AdapterHelper: void <init>(androidx.recyclerview.widget.AdapterHelper$Callback)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper> = $r1;

        return;
    }

    public void setHasFixedSize(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize> = z0;

        return;
    }

    public boolean hasFixedSize()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>;

        return $z0;
    }

    public void setClipToPadding(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if z0 == $z1 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding> = z0;

        specialinvoke r0.<android.view.ViewGroup: void setClipToPadding(boolean)>(z0);

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }

    public boolean getClipToPadding()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        return $z0;
    }

    public void setScrollingTouchSlop(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, $i2;
        android.view.ViewConfiguration r1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScrollingTouchSlop(): bad argument constant ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; using default value");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r7);

     label2:
        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i2;

        goto label4;

     label3:
        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i1;

     label4:
        return;
    }

    public void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)>(r1, 1, z0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)>(r1, 0, 1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)>(0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void removeAndRecycleViews()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r1, $r8;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r5, $r7;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3, $r4, $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)>($r4);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)>($r6);

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void clear()>();

        return;
    }

    private void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter, boolean, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, r2, $r3, $r5, $r8, $r12, $r13;
        boolean z0, z1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r9;
        androidx.recyclerview.widget.RecyclerView$Recycler $r6;
        androidx.recyclerview.widget.RecyclerView$State $r7;
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver $r10, $r11;
        androidx.recyclerview.widget.AdapterHelper $r14;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)>($r11);

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

     label1:
        if z0 == 0 goto label2;

        if z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()>();

     label3:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r14.<androidx.recyclerview.widget.AdapterHelper: void reset()>();

        r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter> = r1;

        if r1 == null goto label4;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)>($r10);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

     label4:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r4 == null goto label5;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)>(r2, $r8);

     label5:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$Recycler: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>(r2, $r5, z0);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r7.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$Adapter $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        return $r1;
    }

    public void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$RecyclerListener r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$RecyclerListener;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener> = r1;

        return;
    }

    public void addRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$RecyclerListener r1;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$RecyclerListener;

        if r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "\'listener\' arg cannot be null.");

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$RecyclerListener r1;
        java.util.List $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$RecyclerListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public int getBaseline()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i0;
    }

    public void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners> = $r4;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void clearOnChildAttachStateChangeListeners()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    {
        androidx.recyclerview.widget.RecyclerView r0, $r6, $r14;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r1, $r2, $r3, $r7, $r8, $r20, $r22, $r24, $r26;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4, $r19, $r21, $r23, $r25, $r28;
        androidx.recyclerview.widget.ChildHelper $r5;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r16;
        java.lang.String $r15, $r17;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r18, $r27;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != $r2 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 == null goto label4;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r18 == null goto label2;

        $r27 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r27.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label2:
        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r20.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)>($r19);

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r22.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)>($r21);

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r23.<androidx.recyclerview.widget.RecyclerView$Recycler: void clear()>();

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z1 == 0 goto label3;

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r26.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)>(r0, $r25);

     label3:
        $r24 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r24.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)>(null);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout> = null;

        goto label5;

     label4:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Recycler: void clear()>();

     label5:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: void removeAllViewsUnfiltered()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout> = r1;

        if r1 == null goto label7;

        $r6 = r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r6 == null goto label6;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LayoutManager ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a RecyclerView:");

        $r14 = r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r15 = virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label6:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label7;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>(r0);

     label7:
        $r28 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnFlingListener r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnFlingListener;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener> = r1;

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnFlingListener $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        return $r1;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$SavedState r1, $r4, $r8, r9;
        android.os.Parcelable $r3, $r7, r10;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r9 = new androidx.recyclerview.widget.RecyclerView$SavedState;

        $r3 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke r9.<androidx.recyclerview.widget.RecyclerView$SavedState: void <init>(android.os.Parcelable)>($r3);

        r1 = r9;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        if $r4 == null goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$SavedState: void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)>($r8);

        goto label3;

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r7 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()>();

        r1.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r7;

        goto label3;

     label2:
        r1.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = null;

     label3:
        r10 = (android.os.Parcelable) r1;

        return r10;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.os.Parcelable r1, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$SavedState $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof androidx.recyclerview.widget.RecyclerView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        $r2 = (androidx.recyclerview.widget.RecyclerView$SavedState) r1;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState> = $r2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchFreezeSelfOnly(android.util.SparseArray)>(r1);

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchThawSelfOnly(android.util.SparseArray)>(r1);

        return;
    }

    private void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, $r5;
        android.view.View r2;
        boolean z0, $z1, $z2;
        android.view.ViewParent $r3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4;
        androidx.recyclerview.widget.ChildHelper $r6, $r7, $r8;
        android.view.ViewGroup$LayoutParams $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>($r5);

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r9 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r8.<androidx.recyclerview.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r2, -1, $r9, 1);

        goto label5;

     label3:
        if z0 != 0 goto label4;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r7.<androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,boolean)>(r2, 1);

        goto label5;

     label4:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: void hide(android.view.View)>(r2);

     label5:
        return;
    }

    boolean removeAnimatingView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        boolean z0, $z1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.ChildHelper $r3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        z0 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: boolean removeViewIfHidden(android.view.View)>(r1);

        if z0 == 0 goto label1;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label1:
        if z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>($z1);

        return z0;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$Recycler $r1;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        return $r2;
    }

    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r1;
        androidx.recyclerview.widget.RecyclerView$Recycler $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Recycler: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)>(r1);

        return;
    }

    public void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewCacheExtension r1;
        androidx.recyclerview.widget.RecyclerView$Recycler $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)>(r1);

        return;
    }

    public void setItemViewCacheSize(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheSize(int)>(i0);

        return;
    }

    public int getScrollState()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        return $i0;
    }

    void setScrollState(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState> = i0;

        if i0 == 2 goto label2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()>();

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)>(i0);

        return;
    }

    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r6;
        java.util.ArrayList $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot add item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setWillNotDraw(boolean)>(0);

     label2:
        if i0 >= 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label4;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)>(r1, -1);

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        java.lang.Object $r8;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>();

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an invalid index for size ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (androidx.recyclerview.widget.RecyclerView$ItemDecoration) $r8;

        return $r9;
    }

    public int getItemDecorationCount()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public void removeItemDecorationAt(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>();

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an invalid index for size ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)>($r7);

        return;
    }

    public void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r6;
        java.util.ArrayList $r3, $r4;
        boolean $z1, $z2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot remove item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getOverScrollMode()>();

        if $i0 != 2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setWillNotDraw(boolean)>($z2);

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback> = r1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if $r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setChildrenDrawingOrderEnabled(boolean)>($z0);

        return;
    }

    public void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener> = r1;

        return;
    }

    public void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners> = $r4;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r1;
        java.util.List $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void clearOnScrollListeners()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void scrollToPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll to position a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }

    void jumpToPositionForSmoothScroller(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(2);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }

    public void smoothScrollToPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)>(r0, $r2, i0);

        return;
    }

    public void scrollTo(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", "RecyclerView does not support scrolling to an absolute position. Use scrollToPosition instead");

        return;
    }

    public void scrollBy(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i3, $i4;
        boolean z0, z1, $z2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 == 0 goto label2;

        return;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if z0 != 0 goto label3;

        if z1 == 0 goto label8;

     label3:
        if z0 == 0 goto label4;

        $i3 = i0;

        goto label5;

     label4:
        $i3 = 0;

     label5:
        if z1 == 0 goto label6;

        $i4 = i1;

        goto label7;

     label6:
        $i4 = 0;

     label7:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent,int)>($i3, $i4, null, 0);

     label8:
        return;
    }

    public void nestedScrollBy(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void nestedScrollByInternal(int,int,android.view.MotionEvent,int)>(i0, i1, null, 1);

        return;
    }

    private void nestedScrollByInternal(int, int, android.view.MotionEvent, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i11, i12, $i13, $i14, $i15, $i16;
        boolean z0, z1, $z2, $z5;
        float f0, f1, $f2, $f3, $f4, $f5;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r5, $r6;
        int[] $r3, $r4, $r8, $r9, $r11, $r12;
        androidx.recyclerview.widget.GapWorker $r7, $r14;
        byte b10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i8 := @parameter0: int;

        i9 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        i0 := @parameter3: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label01:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 == 0 goto label02;

        return;

     label02:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r3[0] = 0;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r4[1] = 0;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        b10 = 0;

        if z0 == 0 goto label03;

        b10 = b10 | 1;

     label03:
        if z1 == 0 goto label04;

        b10 = b10 | 2;

     label04:
        if r1 != null goto label05;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f3 = (float) $i6;

        $f4 = $f3 / 2.0F;

        goto label06;

     label05:
        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

     label06:
        f0 = $f4;

        if r1 != null goto label07;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f2 = (float) $i5;

        $f5 = $f2 / 2.0F;

        goto label08;

     label07:
        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

     label08:
        f1 = $f5;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int releaseHorizontalGlow(int,float)>(i8, f0);

        i11 = i8 - $i1;

        $i2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int releaseVerticalGlow(int,float)>(i9, f1);

        i12 = i9 - $i2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>(b10, i0);

        if z0 == 0 goto label09;

        $i13 = i11;

        goto label10;

     label09:
        $i13 = 0;

     label10:
        if z1 == 0 goto label11;

        $i14 = i12;

        goto label12;

     label11:
        $i14 = 0;

     label12:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $z5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($i13, $i14, $r11, $r12, i0);

        if $z5 == 0 goto label13;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i3 = $r8[0];

        i11 = i11 - $i3;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i4 = $r9[1];

        i12 = i12 - $i4;

     label13:
        if z0 == 0 goto label14;

        $i15 = i11;

        goto label15;

     label14:
        $i15 = 0;

     label15:
        if z1 == 0 goto label16;

        $i16 = i12;

        goto label17;

     label16:
        $i16 = 0;

     label17:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent,int)>($i15, $i16, r1, i0);

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        if $r14 == null goto label19;

        if i11 != 0 goto label18;

        if i12 == 0 goto label19;

     label18:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        virtualinvoke $r7.<androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, i11, i12);

     label19:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(i0);

        return;
    }

    void scrollStep(int, int, int[])
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3;
        int[] r1;
        androidx.recyclerview.widget.RecyclerView$State $r2, $r3, $r6;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4, $r7;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r5, $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV Scroll");

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)>($r2);

        i2 = 0;

        i3 = 0;

        if i0 == 0 goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        i2 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, $r7, $r6);

     label1:
        if i1 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        i3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i1, $r4, $r3);

     label2:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        if r1 == null goto label3;

        r1[0] = i2;

        r1[1] = i3;

     label3:
        return;
    }

    void consumePendingUpdateOperations()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.recyclerview.widget.AdapterHelper $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 == 0 goto label2;

     label1:
        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z2 = virtualinvoke $r1.<androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z2 != 0 goto label3;

        return;

     label3:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z3 = virtualinvoke $r2.<androidx.recyclerview.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(4);

        if $z3 == 0 goto label6;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z5 = virtualinvoke $r4.<androidx.recyclerview.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(11);

        if $z5 != 0 goto label6;

        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV PartialInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r5.<androidx.recyclerview.widget.AdapterHelper: void preProcess()>();

        $z6 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z6 != 0 goto label5;

        $z7 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()>();

        if $z7 == 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        goto label5;

     label4:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r6.<androidx.recyclerview.widget.AdapterHelper: void consumePostponedUpdates()>();

     label5:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        goto label7;

     label6:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z4 = virtualinvoke $r3.<androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z4 == 0 goto label7;

        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

     label7:
        return;
    }

    private boolean hasUpdatedView()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r3;
        android.view.View $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i1);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    boolean scrollByInternal(int, int, android.view.MotionEvent, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i22, i23, i24, i25, i26, i27;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2;
        java.util.ArrayList $r3;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r24;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        i2 := @parameter3: int;

        i22 = 0;

        i23 = 0;

        i24 = 0;

        i25 = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label01;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r20[0] = 0;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r21[1] = 0;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>(i0, i1, $r22);

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        i24 = $r23[0];

        $r24 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        i25 = $r24[1];

        i22 = i0 - i24;

        i23 = i1 - i25;

     label01:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label02;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label02:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r4[0] = 0;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r5[1] = 0;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(i24, i25, i22, i23, $r7, i2, $r6);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i3 = $r8[0];

        i26 = i22 - $i3;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i4 = $r9[1];

        i27 = i23 - $i4;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i5 = $r10[0];

        if $i5 != 0 goto label03;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i19 = $r17[1];

        if $i19 == 0 goto label04;

     label03:
        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z0 = $z3;

        $i7 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i6 = $r11[0];

        $i8 = $i7 - $i6;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i8;

        $i10 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i9 = $r12[1];

        $i11 = $i10 - $i9;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i11;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i13 = $r13[0];

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i12 = $r14[0];

        $i14 = $i13 + $i12;

        $r13[0] = $i14;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i16 = $r15[1];

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i15 = $r16[1];

        $i17 = $i16 + $i15;

        $r15[1] = $i17;

        $i18 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getOverScrollMode()>();

        if $i18 == 2 goto label07;

        if r1 == null goto label06;

        $z2 = staticinvoke <androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)>(r1, 8194);

        if $z2 != 0 goto label06;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = (float) i26;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f3 = (float) i27;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>($f0, $f1, $f2, $f3);

     label06:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)>(i0, i1);

     label07:
        if i24 != 0 goto label08;

        if i25 == 0 goto label09;

     label08:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)>(i24, i25);

     label09:
        $z4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean awakenScrollBars()>();

        if $z4 != 0 goto label10;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label10:
        if z0 != 0 goto label11;

        if i24 != 0 goto label11;

        if i25 == 0 goto label12;

     label11:
        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        return $z5;
    }

    private int releaseHorizontalGlow(int, float)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, $i2, $i7, $i8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, $f14, $f15;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b3, $b4, $b5, $b6;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f13 = 0.0F;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f3 = (float) $i1;

        f1 = f0 / $f3;

        $f4 = (float) i0;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f5 = (float) $i2;

        f2 = $f4 / $f5;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label3;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f8 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r8);

        $b5 = $f8 cmpl 0.0F;

        if $b5 == 0 goto label3;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z1 == 0 goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

        goto label2;

     label1:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f10 = neg f2;

        $f9 = 1.0F - f1;

        $f11 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r9, $f10, $f9);

        f13 = neg $f11;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f12 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r10);

        $b6 = $f12 cmpl 0.0F;

        if $b6 != 0 goto label2;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r11.<android.widget.EdgeEffect: void onRelease()>();

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

        goto label6;

     label3:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r2 == null goto label6;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $f6 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r3);

        $b3 = $f6 cmpl 0.0F;

        if $b3 == 0 goto label6;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z0 == 0 goto label4;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onRelease()>();

        goto label5;

     label4:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        f13 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r4, f2, f1);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $f7 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r5);

        $b4 = $f7 cmpl 0.0F;

        if $b4 != 0 goto label5;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onRelease()>();

     label5:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label6:
        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f14 = (float) $i7;

        $f15 = f13 * $f14;

        $i8 = staticinvoke <java.lang.Math: int round(float)>($f15);

        return $i8;
    }

    private int releaseVerticalGlow(int, float)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, $i2, $i7, $i8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, $f14, $f15;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b3, $b4, $b5, $b6;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f13 = 0.0F;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f3 = (float) $i1;

        f1 = f0 / $f3;

        $f4 = (float) i0;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f5 = (float) $i2;

        f2 = $f4 / $f5;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r1 == null goto label3;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f9 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r8);

        $b5 = $f9 cmpl 0.0F;

        if $b5 == 0 goto label3;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 == 0 goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

        goto label2;

     label1:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f10 = neg f2;

        $f11 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r9, $f10, f1);

        f13 = neg $f11;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f12 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r10);

        $b6 = $f12 cmpl 0.0F;

        if $b6 != 0 goto label2;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r11.<android.widget.EdgeEffect: void onRelease()>();

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

        goto label6;

     label3:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r2 == null goto label6;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f6 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r3);

        $b3 = $f6 cmpl 0.0F;

        if $b3 == 0 goto label6;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 == 0 goto label4;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onRelease()>();

        goto label5;

     label4:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f7 = 1.0F - f1;

        f13 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r4, f2, $f7);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f8 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r5);

        $b4 = $f8 cmpl 0.0F;

        if $b4 != 0 goto label5;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onRelease()>();

     label5:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label6:
        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f14 = (float) $i7;

        $f15 = f13 * $f14;

        $i8 = staticinvoke <java.lang.Math: int round(float)>($f15);

        return $i8;
    }

    public int computeHorizontalScrollOffset()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    public int computeHorizontalScrollExtent()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    public int computeHorizontalScrollRange()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    public int computeVerticalScrollOffset()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    public int computeVerticalScrollExtent()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    public int computeVerticalScrollRange()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r4;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;
    }

    void startInterceptRequestLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        $i1 = $i0 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = $i1;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i2 != 1 goto label1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label1:
        return;
    }

    void stopInterceptRequestLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 >= 1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = 1;

     label1:
        if z0 != 0 goto label2;

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z3 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label2:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i1 != 1 goto label4;

        if z0 == 0 goto label3;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z1 == 0 goto label3;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 != 0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

     label3:
        $z4 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z4 != 0 goto label4;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label4:
        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        $i3 = $i2 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = $i3;

        return;
    }

    public final void suppressLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z3;
        long l0;
        android.view.MotionEvent r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if z0 == $z1 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>("Do not suppressLayout in layout or scroll");

        if z0 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed> = 0;

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z3 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

        goto label3;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 3, 0.0F, 0.0F, 0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

     label3:
        return;
    }

    public final boolean isLayoutSuppressed()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        return $z0;
    }

    public void setLayoutFrozen(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>(z0);

        return;
    }

    public boolean isLayoutFrozen()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()>();

        return $z0;
    }

    public void setLayoutTransition(android.animation.LayoutTransition)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.animation.LayoutTransition r1;
        byte b0;
        int $i1;
        java.lang.IllegalArgumentException $r2;
        android.animation.Animator $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.animation.LayoutTransition;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 18 goto label2;

        if r1 != null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>(0);

        return;

     label1:
        b0 = 4;

        $r3 = virtualinvoke r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(0);

        if $r3 != null goto label2;

        $r4 = virtualinvoke r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(1);

        if $r4 != null goto label2;

        $r5 = virtualinvoke r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(2);

        if $r5 != null goto label2;

        $r6 = virtualinvoke r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(3);

        if $r6 != null goto label2;

        $r7 = virtualinvoke r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(b0);

        if $r7 != null goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>(1);

        return;

     label2:
        if r1 != null goto label3;

        specialinvoke r0.<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>(null);

        goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Providing a LayoutTransition into RecyclerView is not supported. Please use setItemAnimator() instead for animating changes to the items in this RecyclerView");

        throw $r2;

     label4:
        return;
    }

    public void smoothScrollBy(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>(i0, i1, null);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        android.view.animation.Interpolator r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>(i0, i1, r1, -2147483648);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2;
        android.view.animation.Interpolator r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        i2 := @parameter3: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>(i0, i1, r1, i2, 0);

        return;
    }

    void smoothScrollBy(int, int, android.view.animation.Interpolator, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.animation.Interpolator r1;
        int i0, i2, i3;
        boolean z0, z1, $z2, $z3, $z4, $z6;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3, $r4;
        byte b4;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label01:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 == 0 goto label02;

        return;

     label02:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z3 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z3 != 0 goto label03;

        i2 = 0;

     label03:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z4 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z4 != 0 goto label04;

        i3 = 0;

     label04:
        if i2 != 0 goto label05;

        if i3 == 0 goto label13;

     label05:
        if i0 == -2147483648 goto label06;

        if i0 <= 0 goto label07;

     label06:
        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        z1 = $z6;

        if z1 == 0 goto label12;

        if z0 == 0 goto label11;

        b4 = 0;

        if i2 == 0 goto label09;

        b4 = b4 | 1;

     label09:
        if i3 == 0 goto label10;

        b4 = b4 | 2;

     label10:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>(b4, 1);

     label11:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,int,android.view.animation.Interpolator)>(i2, i3, i0, r1);

        goto label13;

     label12:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>(i2, i3);

     label13:
        return;
    }

    public boolean fling(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, z1, z2, $z3, $z4, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19, $i20, $i21, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i33, i34, i35, i36, i38, i39;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r4, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        androidx.recyclerview.widget.RecyclerView$OnFlingListener $r5, $r7;
        android.widget.EdgeEffect $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        byte $b16, $b18, $b22, $b24, b37;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i33 := @parameter0: int;

        i34 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot fling without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return 0;

     label01:
        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z3 == 0 goto label02;

        return 0;

     label02:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if z0 == 0 goto label03;

        $i30 = staticinvoke <java.lang.Math: int abs(int)>(i33);

        $i31 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        if $i30 >= $i31 goto label04;

     label03:
        i33 = 0;

     label04:
        if z1 == 0 goto label05;

        $i28 = staticinvoke <java.lang.Math: int abs(int)>(i34);

        $i29 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        if $i28 >= $i29 goto label06;

     label05:
        i34 = 0;

     label06:
        if i33 != 0 goto label07;

        if i34 != 0 goto label07;

        return 0;

     label07:
        i35 = 0;

        i36 = 0;

        if i33 == 0 goto label13;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r16 == null goto label10;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f7 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r21);

        $b24 = $f7 cmpl 0.0F;

        if $b24 == 0 goto label10;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i25 = neg i33;

        $i26 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $z11 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldAbsorb(android.widget.EdgeEffect,int,int)>($r22, $i25, $i26);

        if $z11 == 0 goto label08;

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i27 = neg i33;

        virtualinvoke $r23.<android.widget.EdgeEffect: void onAbsorb(int)>($i27);

        goto label09;

     label08:
        i35 = i33;

     label09:
        i33 = 0;

        goto label13;

     label10:
        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r17 == null goto label13;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $f6 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r18);

        $b22 = $f6 cmpl 0.0F;

        if $b22 == 0 goto label13;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i23 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $z10 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldAbsorb(android.widget.EdgeEffect,int,int)>($r19, i33, $i23);

        if $z10 == 0 goto label11;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r20.<android.widget.EdgeEffect: void onAbsorb(int)>(i33);

        goto label12;

     label11:
        i35 = i33;

     label12:
        i33 = 0;

     label13:
        if i34 == 0 goto label19;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r8 == null goto label16;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f5 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r13);

        $b18 = $f5 cmpl 0.0F;

        if $b18 == 0 goto label16;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i19 = neg i34;

        $i20 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $z9 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldAbsorb(android.widget.EdgeEffect,int,int)>($r14, $i19, $i20);

        if $z9 == 0 goto label14;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i21 = neg i34;

        virtualinvoke $r15.<android.widget.EdgeEffect: void onAbsorb(int)>($i21);

        goto label15;

     label14:
        i36 = i34;

     label15:
        i34 = 0;

        goto label19;

     label16:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r9 == null goto label19;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f4 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r10);

        $b16 = $f4 cmpl 0.0F;

        if $b16 == 0 goto label19;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i17 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $z8 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldAbsorb(android.widget.EdgeEffect,int,int)>($r11, i34, $i17);

        if $z8 == 0 goto label17;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onAbsorb(int)>(i34);

        goto label18;

     label17:
        i36 = i34;

     label18:
        i34 = 0;

     label19:
        if i35 != 0 goto label20;

        if i36 == 0 goto label21;

     label20:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i2 = neg $i0;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i35, $i1);

        i35 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i6 = neg $i4;

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i36, $i5);

        i36 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void fling(int,int)>(i35, i36);

     label21:
        if i33 != 0 goto label25;

        if i34 != 0 goto label25;

        if i35 != 0 goto label22;

        if i36 == 0 goto label23;

     label22:
        $z12 = 1;

        goto label24;

     label23:
        $z12 = 0;

     label24:
        return $z12;

     label25:
        $f1 = (float) i33;

        $f0 = (float) i34;

        $z4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>($f1, $f0);

        if $z4 != 0 goto label32;

        if z0 != 0 goto label26;

        if z1 == 0 goto label27;

     label26:
        $z13 = 1;

        goto label28;

     label27:
        $z13 = 0;

     label28:
        z2 = $z13;

        $f3 = (float) i33;

        $f2 = (float) i34;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>($f3, $f2, z2);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        if $r5 == null goto label29;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        $z7 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)>(i33, i34);

        if $z7 == 0 goto label29;

        return 1;

     label29:
        if z2 == 0 goto label32;

        b37 = 0;

        if z0 == 0 goto label30;

        b37 = b37 | 1;

     label30:
        if z1 == 0 goto label31;

        b37 = b37 | 2;

     label31:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>(b37, 1);

        $i8 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i10 = neg $i8;

        $i9 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i33, $i9);

        i38 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        $i12 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i14 = neg $i12;

        $i13 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i34, $i13);

        i39 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void fling(int,int)>(i38, i39);

        return 1;

     label32:
        return 0;
    }

    private boolean shouldAbsorb(android.widget.EdgeEffect, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect r1;
        int i0, i1, $i2;
        float f0, f1, $f2, $f3;
        byte $b3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.widget.EdgeEffect;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 <= 0 goto label1;

        return 1;

     label1:
        $f2 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>(r1);

        $f3 = (float) i1;

        f0 = $f2 * $f3;

        $i2 = neg i0;

        f1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: float getSplineFlingDistance(int)>($i2);

        $b3 = f1 cmpg f0;

        if $b3 >= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    int consumeFlingInHorizontalStretch(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, $i2;
        android.widget.EdgeEffect $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int consumeFlingInStretch(int,android.widget.EdgeEffect,android.widget.EdgeEffect,int)>(i0, $r1, $r2, $i1);

        return $i2;
    }

    int consumeFlingInVerticalStretch(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, $i2;
        android.widget.EdgeEffect $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int consumeFlingInStretch(int,android.widget.EdgeEffect,android.widget.EdgeEffect,int)>(i0, $r1, $r2, $i1);

        return $i2;
    }

    private int consumeFlingInStretch(int, android.widget.EdgeEffect, android.widget.EdgeEffect, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i3, $i5, $i6, $i7, i8, i9;
        android.widget.EdgeEffect r1, r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17;
        byte $b2, $b4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.EdgeEffect;

        r2 := @parameter2: android.widget.EdgeEffect;

        i1 := @parameter3: int;

        if i0 <= 0 goto label2;

        if r1 == null goto label2;

        $f8 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>(r1);

        $b4 = $f8 cmpl 0.0F;

        if $b4 == 0 goto label2;

        $i5 = neg i0;

        $f9 = (float) $i5;

        $f11 = $f9 * 4.0F;

        $f10 = (float) i1;

        f16 = $f11 / $f10;

        $i6 = neg i1;

        $f12 = (float) $i6;

        $f13 = $f12 / 4.0F;

        $f14 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>(r1, f16, 0.5F);

        $f15 = $f13 * $f14;

        i8 = staticinvoke <java.lang.Math: int round(float)>($f15);

        if i8 == i0 goto label1;

        virtualinvoke r1.<android.widget.EdgeEffect: void finish()>();

     label1:
        $i7 = i0 - i8;

        return $i7;

     label2:
        if i0 >= 0 goto label4;

        if r2 == null goto label4;

        $f0 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>(r2);

        $b2 = $f0 cmpl 0.0F;

        if $b2 == 0 goto label4;

        $f1 = (float) i0;

        $f3 = $f1 * 4.0F;

        $f2 = (float) i1;

        f17 = $f3 / $f2;

        $f4 = (float) i1;

        $f5 = $f4 / 4.0F;

        $f6 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>(r2, f17, 0.5F);

        $f7 = $f5 * $f6;

        i9 = staticinvoke <java.lang.Math: int round(float)>($f7);

        if i9 == i0 goto label3;

        virtualinvoke r2.<android.widget.EdgeEffect: void finish()>();

     label3:
        $i3 = i0 - i9;

        return $i3;

     label4:
        return i0;
    }

    public void stopScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()>();

        return;
    }

    private void stopScrollersInternal()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void stop()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopSmoothScroller()>();

     label1:
        return;
    }

    public int getMinFlingVelocity()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        return $i0;
    }

    public int getMaxFlingVelocity()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        return $i0;
    }

    private void pullGlows(float, float, float, float)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f10, $f11, $f12, $f13, $f14, $f16, $f17, $f18, $f19, $f21, $f22, $f23, $f24, $f25, $f26;
        byte $b0, $b1, $b2, $b3, $b4, $b13;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;
        android.view.View r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        z0 = 0;

        $b0 = f1 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f21 = neg f1;

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f22 = (float) $i11;

        $f23 = $f21 / $f22;

        $i12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f24 = (float) $i12;

        $f25 = f2 / $f24;

        $f26 = 1.0F - $f25;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r4, $f23, $f26);

        z0 = 1;

        goto label2;

     label1:
        $b1 = f1 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f16 = (float) $i9;

        $f17 = f1 / $f16;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f18 = (float) $i10;

        $f19 = f2 / $f18;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r3, $f17, $f19);

        z0 = 1;

     label2:
        $b13 = f3 cmpg 0.0F;

        if $b13 >= 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f10 = neg f3;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f11 = (float) $i7;

        $f12 = $f10 / $f11;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f13 = (float) $i8;

        $f14 = f0 / $f13;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r2, $f12, $f14);

        z0 = 1;

        goto label4;

     label3:
        $b2 = f3 cmpl 0.0F;

        if $b2 <= 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f4 = (float) $i5;

        $f5 = f3 / $f4;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f6 = (float) $i6;

        $f7 = f0 / $f6;

        $f8 = 1.0F - $f7;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r1, $f5, $f8);

        z0 = 1;

     label4:
        if z0 != 0 goto label5;

        $b3 = f1 cmpl 0.0F;

        if $b3 != 0 goto label5;

        $b4 = f3 cmpl 0.0F;

        if $b4 == 0 goto label6;

     label5:
        r5 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r5);

     label6:
        return;
    }

    private void releaseGlows()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2, z3;
        android.view.View r13;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z3 = 0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r11.<android.widget.EdgeEffect: void onRelease()>();

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        z3 = virtualinvoke $r12.<android.widget.EdgeEffect: boolean isFinished()>();

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r2 == null goto label2;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r9.<android.widget.EdgeEffect: void onRelease()>();

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z2 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        z3 = z3 | $z2;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r3 == null goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onRelease()>();

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z1 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean isFinished()>();

        z3 = z3 | $z1;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r4 == null goto label4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onRelease()>();

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z0 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        z3 = z3 | $z0;

     label4:
        if z3 == 0 goto label5;

        r13 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r13);

     label5:
        return;
    }

    void considerReleasingGlowsOnScroll(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.view.View r17;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z7 = 0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z6 = virtualinvoke $r11.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z6 != 0 goto label1;

        if i0 <= 0 goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        z7 = virtualinvoke $r13.<android.widget.EdgeEffect: boolean isFinished()>();

     label1:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r14 == null goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z4 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z4 != 0 goto label2;

        if i0 >= 0 goto label2;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r9.<android.widget.EdgeEffect: void onRelease()>();

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z5 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        z7 = z7 | $z5;

     label2:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r15 == null goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z2 = virtualinvoke $r5.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label3;

        if i1 <= 0 goto label3;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onRelease()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z3 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean isFinished()>();

        z7 = z7 | $z3;

     label3:
        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r16 == null goto label4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z0 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label4;

        if i1 >= 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onRelease()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z1 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        z7 = z7 | $z1;

     label4:
        if z7 == 0 goto label5;

        r17 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r17);

     label5:
        return;
    }

    void absorbGlows(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        android.view.View r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z3 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z3 == 0 goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i3 = neg i0;

        virtualinvoke $r8.<android.widget.EdgeEffect: void onAbsorb(int)>($i3);

        goto label2;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z2 = virtualinvoke $r5.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 == 0 goto label2;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onAbsorb(int)>(i0);

     label2:
        if i1 >= 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z1 = virtualinvoke $r3.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 == 0 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i2 = neg i1;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onAbsorb(int)>($i2);

        goto label4;

     label3:
        if i1 <= 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onAbsorb(int)>(i1);

     label4:
        if i0 != 0 goto label5;

        if i1 == 0 goto label6;

     label5:
        r9 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r9);

     label6:
        return;
    }

    void ensureLeftGlow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect $r1, $r3, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)>(r0, 0);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = $r3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r4.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureRightGlow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect $r1, $r3, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)>(r0, 2);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = $r3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r4.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureTopGlow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect $r1, $r3, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)>(r0, 1);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = $r3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r4.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureBottomGlow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.widget.EdgeEffect $r1, $r3, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)>(r0, 3);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = $r3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r4.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void invalidateGlows()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = null;

        return;
    }

    public void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory> = r1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory>;

        return $r1;
    }

    public android.view.View focusSearch(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, r3, $r6, $r7, r19, r20, r21, r22, r23, $r24;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, $z13, z14, $z15, $z16;
        android.view.FocusFinder r2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r10, $r11, $r14, $r16, $r17, $r18;
        androidx.recyclerview.widget.RecyclerView$Adapter $r5;
        androidx.recyclerview.widget.RecyclerView$State $r8, $r12;
        androidx.recyclerview.widget.RecyclerView$Recycler $r9, $r13;
        int $i0, i1;
        short $s2, s3;
        byte $b4, b5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        i1 := @parameter1: int;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        r19 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)>(r1, i1);

        if r19 == null goto label01;

        return r19;

     label01:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r5 == null goto label02;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r18 == null goto label02;

        $z8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z8 != 0 goto label02;

        $z9 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z9 != 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        z0 = $z10;

        r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        if z0 == 0 goto label21;

        if i1 == 2 goto label04;

        if i1 != 1 goto label21;

     label04:
        z11 = 0;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z3 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z3 == 0 goto label09;

        if i1 != 2 goto label05;

        $s2 = 130;

        goto label06;

     label05:
        $s2 = 33;

     label06:
        s3 = $s2;

        r20 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, s3);

        if r20 != null goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        z11 = $z12;

        $z7 = <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z7 == 0 goto label09;

        i1 = s3;

     label09:
        if z11 != 0 goto label18;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z4 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z4 == 0 goto label18;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r17.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i0 != 1 goto label10;

        $z13 = 1;

        goto label11;

     label10:
        $z13 = 0;

     label11:
        z14 = $z13;

        if i1 != 2 goto label12;

        $z15 = 1;

        goto label13;

     label12:
        $z15 = 0;

     label13:
        $z5 = $z15 ^ z14;

        if $z5 == 0 goto label14;

        $b4 = 66;

        goto label15;

     label14:
        $b4 = 17;

     label15:
        b5 = $b4;

        r3 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, b5);

        if r3 != null goto label16;

        $z16 = 1;

        goto label17;

     label16:
        $z16 = 0;

     label17:
        z11 = $z16;

        $z6 = <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z6 == 0 goto label18;

        i1 = b5;

     label18:
        if z11 == 0 goto label20;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        r21 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if r21 != null goto label19;

        return null;

     label19:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, i1, $r13, $r12);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

     label20:
        r22 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, i1);

        goto label23;

     label21:
        r22 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, i1);

        if r22 != null goto label23;

        if z0 == 0 goto label23;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        r23 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if r23 != null goto label22;

        return null;

     label22:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        r22 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, i1, $r9, $r8);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

     label23:
        if r22 == null goto label25;

        $z2 = virtualinvoke r22.<android.view.View: boolean hasFocusable()>();

        if $z2 != 0 goto label25;

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View getFocusedChild()>();

        if $r6 != null goto label24;

        $r7 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>(r1, i1);

        return $r7;

     label24:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)>(r22, null);

        return r1;

     label25:
        $z1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)>(r1, r22, i1);

        if $z1 == 0 goto label26;

        $r24 = r22;

        goto label27;

     label26:
        $r24 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>(r1, i1);

     label27:
        return $r24;
    }

    private boolean isPreferredNextFocus(android.view.View, android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, r2, $r3, $r4;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i34, $i35;
        byte b1, $b31, b32, b33;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r9;
        java.lang.IllegalArgumentException $r24;
        java.lang.StringBuilder $r25, $r26, $r27, $r29;
        java.lang.String $r28, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        if r2 == null goto label01;

        if r2 == r0 goto label01;

        if r2 != r1 goto label02;

     label01:
        return 0;

     label02:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r2);

        if $r3 != null goto label03;

        return 0;

     label03:
        if r1 != null goto label04;

        return 1;

     label04:
        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if $r4 != null goto label05;

        return 1;

     label05:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i2, $i3);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i4 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i5 = virtualinvoke r2.<android.view.View: int getHeight()>();

        virtualinvoke $r6.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i4, $i5);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r7);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, $r8);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i6 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i6 != 1 goto label06;

        $b31 = -1;

        goto label07;

     label06:
        $b31 = 1;

     label07:
        b1 = $b31;

        b32 = 0;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i8 = $r10.<android.graphics.Rect: int left>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i7 = $r11.<android.graphics.Rect: int left>;

        if $i8 < $i7 goto label08;

        $r37 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i30 = $r37.<android.graphics.Rect: int right>;

        $r38 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i29 = $r38.<android.graphics.Rect: int left>;

        if $i30 > $i29 goto label09;

     label08:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i10 = $r12.<android.graphics.Rect: int right>;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i9 = $r13.<android.graphics.Rect: int right>;

        if $i10 >= $i9 goto label09;

        b32 = 1;

        goto label11;

     label09:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i12 = $r14.<android.graphics.Rect: int right>;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i11 = $r15.<android.graphics.Rect: int right>;

        if $i12 > $i11 goto label10;

        $r35 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i28 = $r35.<android.graphics.Rect: int left>;

        $r36 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i27 = $r36.<android.graphics.Rect: int right>;

        if $i28 < $i27 goto label11;

     label10:
        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i14 = $r16.<android.graphics.Rect: int left>;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i13 = $r17.<android.graphics.Rect: int left>;

        if $i14 <= $i13 goto label11;

        b32 = -1;

     label11:
        b33 = 0;

        $r39 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i34 = $r39.<android.graphics.Rect: int top>;

        $r40 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i35 = $r40.<android.graphics.Rect: int top>;

        if $i34 < $i35 goto label12;

        $r33 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i26 = $r33.<android.graphics.Rect: int bottom>;

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i25 = $r34.<android.graphics.Rect: int top>;

        if $i26 > $i25 goto label13;

     label12:
        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i16 = $r18.<android.graphics.Rect: int bottom>;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i15 = $r19.<android.graphics.Rect: int bottom>;

        if $i16 >= $i15 goto label13;

        b33 = 1;

        goto label15;

     label13:
        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i18 = $r20.<android.graphics.Rect: int bottom>;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i17 = $r21.<android.graphics.Rect: int bottom>;

        if $i18 > $i17 goto label14;

        $r31 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i24 = $r31.<android.graphics.Rect: int top>;

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i23 = $r32.<android.graphics.Rect: int bottom>;

        if $i24 < $i23 goto label15;

     label14:
        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i20 = $r22.<android.graphics.Rect: int top>;

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i19 = $r23.<android.graphics.Rect: int top>;

        if $i20 <= $i19 goto label15;

        b33 = -1;

     label15:
        lookupswitch(i0)
        {
            case 1: goto label32;
            case 2: goto label28;
            case 17: goto label16;
            case 33: goto label22;
            case 66: goto label19;
            case 130: goto label25;
            default: goto label36;
        };

     label16:
        if b32 >= 0 goto label17;

        $z0 = 1;

        goto label18;

     label17:
        $z0 = 0;

     label18:
        return $z0;

     label19:
        if b32 <= 0 goto label20;

        $z1 = 1;

        goto label21;

     label20:
        $z1 = 0;

     label21:
        return $z1;

     label22:
        if b33 >= 0 goto label23;

        $z2 = 1;

        goto label24;

     label23:
        $z2 = 0;

     label24:
        return $z2;

     label25:
        if b33 <= 0 goto label26;

        $z3 = 1;

        goto label27;

     label26:
        $z3 = 0;

     label27:
        return $z3;

     label28:
        if b33 > 0 goto label29;

        if b33 != 0 goto label30;

        $i21 = b32 * b1;

        if $i21 <= 0 goto label30;

     label29:
        $z4 = 1;

        goto label31;

     label30:
        $z4 = 0;

     label31:
        return $z4;

     label32:
        if b33 < 0 goto label33;

        if b33 != 0 goto label34;

        $i22 = b32 * b1;

        if $i22 >= 0 goto label34;

     label33:
        $z5 = 1;

        goto label35;

     label34:
        $z5 = 0;

     label35:
        return $z5;

     label36:
        $r24 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid direction: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r24;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, r2;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)>(r0, $r3, r1, r2);

        if $z0 != 0 goto label1;

        if r2 == null goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)>(r1, r2);

     label1:
        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        return;
    }

    private void requestChildOnScreen(android.view.View, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, r2, r3, $r14;
        android.view.ViewGroup$LayoutParams r4;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r5;
        android.graphics.Rect r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0, $z1, $z3, $z4, $z5;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r15;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        if r2 == null goto label1;

        $r14 = r2;

        goto label2;

     label1:
        $r14 = r1;

     label2:
        r3 = $r14;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke r3.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r3.<android.view.View: int getHeight()>();

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        r4 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r4 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label3;

        r5 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r4;

        $z3 = r5.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z3 != 0 goto label3;

        r6 = r5.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r10.<android.graphics.Rect: int left>;

        $i2 = r6.<android.graphics.Rect: int left>;

        $i4 = $i3 - $i2;

        $r10.<android.graphics.Rect: int left> = $i4;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i6 = $r11.<android.graphics.Rect: int right>;

        $i5 = r6.<android.graphics.Rect: int right>;

        $i7 = $i6 + $i5;

        $r11.<android.graphics.Rect: int right> = $i7;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i9 = $r12.<android.graphics.Rect: int top>;

        $i8 = r6.<android.graphics.Rect: int top>;

        $i10 = $i9 - $i8;

        $r12.<android.graphics.Rect: int top> = $i10;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i12 = $r13.<android.graphics.Rect: int bottom>;

        $i11 = r6.<android.graphics.Rect: int bottom>;

        $i13 = $i12 + $i11;

        $r13.<android.graphics.Rect: int bottom> = $i13;

     label3:
        if r2 == null goto label4;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, $r8);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>(r1, $r9);

     label4:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        if r2 != null goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        virtualinvoke $r15.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>(r0, r1, $r18, $z4, $z5);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)>(r0, r1, r2, z0);

        return $z1;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList r1;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)>(r0, r1, i0, i1);

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

     label2:
        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        android.graphics.Rect r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>(i0, r1);

        return $z1;
    }

    protected void onAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.Display r1;
        float f0, f1, $f2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.ThreadLocal $r2, $r12;
        java.lang.Object $r3;
        androidx.recyclerview.widget.GapWorker $r4, $r5, $r11, $r13, $r14, r15;
        byte $b0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r7, $r10;
        androidx.recyclerview.widget.RecyclerView$Recycler $r9;
        long $l1;
        android.view.View r16;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached> = 1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isLayoutRequested()>();

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete> = $z4;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$Recycler: void onAttachedToWindow()>();

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r10 == null goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>(r0);

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $z1 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label6;

        $r2 = <androidx.recyclerview.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (androidx.recyclerview.widget.GapWorker) $r3;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker> = $r4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        if $r5 != null goto label5;

        r15 = new androidx.recyclerview.widget.GapWorker;

        specialinvoke r15.<androidx.recyclerview.widget.GapWorker: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker> = r15;

        r16 = (android.view.View) r0;

        r1 = staticinvoke <androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)>(r16);

        f1 = 60.0F;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isInEditMode()>();

        if $z2 != 0 goto label4;

        if r1 == null goto label4;

        f0 = virtualinvoke r1.<android.view.Display: float getRefreshRate()>();

        $b0 = f0 cmpl 30.0F;

        if $b0 < 0 goto label4;

        f1 = f0;

     label4:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        $f2 = 1.0E9F / f1;

        $l1 = (long) $f2;

        $r11.<androidx.recyclerview.widget.GapWorker: long mFrameIntervalNs> = $l1;

        $r12 = <androidx.recyclerview.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>($r13);

     label5:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        virtualinvoke $r14.<androidx.recyclerview.widget.GapWorker: void add(androidx.recyclerview.widget.RecyclerView)>(r0);

     label6:
        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r1, $r11;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r10;
        java.util.List $r3;
        java.lang.Runnable $r4;
        androidx.recyclerview.widget.ViewInfoStore $r5;
        androidx.recyclerview.widget.RecyclerView$Recycler $r6, $r9;
        boolean $z1;
        androidx.recyclerview.widget.GapWorker $r7, $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached> = 0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)>(r0, $r9);

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ViewInfoStore: void onDetach()>();

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$Recycler: void onDetachedFromWindow()>();

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnReleaseForChildren(android.view.ViewGroup)>(r0);

        $z1 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        if $r7 == null goto label3;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        virtualinvoke $r8.<androidx.recyclerview.widget.GapWorker: void remove(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker> = null;

     label3:
        return;
    }

    public boolean isAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        return $z0;
    }

    void assertInLayoutOrScroll(java.lang.String)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String r1, $r5, $r7, $r11, $r13;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r6, $r9, $r10, $r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 != 0 goto label2;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot call this method unless RecyclerView is computing a layout or scrolling");

        $r11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        return;
    }

    void assertNotInLayoutOrScroll(java.lang.String)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String r1, $r5, $r7, $r12, $r14;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r2, $r8, $r9;
        java.lang.StringBuilder $r3, $r4, $r6, $r10, $r11, $r13;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label2;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot call this method while RecyclerView is computing a layout or scrolling");

        $r12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r8;

     label2:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        if $i0 <= 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RecyclerView", "Cannot call this method in a scroll callback. Scroll callbacks mightbe run during a measure & layout pass where you cannot change theRecyclerView data. Any method call that might change the structureof the RecyclerView or the adapter contents should be postponed tothe next frame.", $r2);

     label3:
        return;
    }

    public void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener>;

        if $r3 != r1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener> = null;

     label1:
        return;
    }

    private boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener>;

        if $r2 != null goto label2;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)>(r1);

        return $z0;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener>;

        interfaceinvoke $r3.<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r0, r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 == 3 goto label3;

        if i0 != 1 goto label4;

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener> = null;

     label4:
        return 1;
    }

    private boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) $r5;

        $z0 = interfaceinvoke r2.<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r0, r1);

        if $z0 == 0 goto label2;

        if i0 == 3 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener> = r2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, z7, $z8;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i26;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3, $r4;
        android.view.VelocityTracker $r5, $r6, $r12, $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        android.view.ViewParent $r13;
        int[] $r15, $r16;
        byte b25;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 == 0 goto label01;

        return 0;

     label01:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener> = null;

        $z3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)>(r1);

        if $z3 == 0 goto label02;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        return 1;

     label02:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label03;

        return 0;

     label03:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r5 != null goto label04;

        $r14 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r14;

     label04:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        tableswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label18;
            case 2: goto label12;
            case 3: goto label19;
            case 4: goto label20;
            case 5: goto label11;
            case 6: goto label17;
            default: goto label20;
        };

     label05:
        $z4 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z4 == 0 goto label06;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 0;

     label06:
        $i20 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i20;

        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f9 = $f8 + 0.5F;

        $i21 = (int) $f9;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i21;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i21;

        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f11 = $f10 + 0.5F;

        $i22 = (int) $f11;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i22;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i22;

        $z5 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean stopGlowAnimations(android.view.MotionEvent)>(r1);

        if $z5 != 0 goto label07;

        $i23 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i23 != 2 goto label08;

     label07:
        $r13 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r13.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(1);

     label08:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r16[1] = 0;

        $r15[0] = 0;

        b25 = 0;

        if z0 == 0 goto label09;

        b25 = b25 | 1;

     label09:
        if z1 == 0 goto label10;

        b25 = b25 | 2;

     label10:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>(b25, 0);

        goto label20;

     label11:
        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i7;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i1);

        $f1 = $f0 + 0.5F;

        $i8 = (int) $f1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i8;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i8;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        $f3 = $f2 + 0.5F;

        $i9 = (int) $f3;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i9;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i9;

        goto label20;

     label12:
        $i10 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        i2 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i10);

        if i2 >= 0 goto label13;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i18 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r11);

        return 0;

     label13:
        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i2);

        $f5 = $f4 + 0.5F;

        i3 = (int) $f5;

        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i2);

        $f7 = $f6 + 0.5F;

        i4 = (int) $f7;

        $i11 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i11 == 1 goto label16;

        $i12 = r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX>;

        i5 = i3 - $i12;

        $i13 = r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY>;

        i6 = i4 - $i13;

        z7 = 0;

        if z0 == 0 goto label14;

        $i16 = staticinvoke <java.lang.Math: int abs(int)>(i5);

        $i17 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        if $i16 <= $i17 goto label14;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = i3;

        z7 = 1;

     label14:
        if z1 == 0 goto label15;

        $i14 = staticinvoke <java.lang.Math: int abs(int)>(i6);

        $i15 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        if $i14 <= $i15 goto label15;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = i4;

        z7 = 1;

     label15:
        if z7 == 0 goto label16;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

     label16:
        goto label20;

     label17:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>(r1);

        goto label20;

     label18:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r12.<android.view.VelocityTracker: void clear()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(0);

        goto label20;

     label19:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

     label20:
        $i26 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i26 != 1 goto label21;

        $z8 = 1;

        goto label22;

     label21:
        $z8 = 0;

     label22:
        return $z8;
    }

    private boolean stopGlowAnimations(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        android.widget.EdgeEffect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f6, $f7, $f8, $f9, $f11, $f12, $f13, $f14, $f16, $f17, $f18, $f19, $f20;
        byte $b0, $b2, $b4, $b6;
        boolean $z0, $z1, $z2, $z3, z4;
        int $i1, $i3, $i5, $i7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        z4 = 0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r2 == null goto label1;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f16 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r9);

        $b6 = $f16 cmpl 0.0F;

        if $b6 == 0 goto label1;

        $z3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z3 != 0 goto label1;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f17 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f18 = (float) $i7;

        $f19 = $f17 / $f18;

        $f20 = 1.0F - $f19;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r10, 0.0F, $f20);

        z4 = 1;

     label1:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r11 == null goto label2;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $f11 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r7);

        $b4 = $f11 cmpl 0.0F;

        if $b4 == 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z2 != 0 goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $f12 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $f13 = (float) $i5;

        $f14 = $f12 / $f13;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r8, 0.0F, $f14);

        z4 = 1;

     label2:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r12 == null goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f6 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r5);

        $b2 = $f6 cmpl 0.0F;

        if $b2 == 0 goto label3;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 != 0 goto label3;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f8 = (float) $i3;

        $f9 = $f7 / $f8;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r6, 0.0F, $f9);

        z4 = 1;

     label3:
        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r13 == null goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f0 = staticinvoke <androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)>($r3);

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label4;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 != 0 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $f2 = (float) $i1;

        $f3 = $f1 / $f2;

        $f4 = 1.0F - $f3;

        staticinvoke <androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)>($r4, 0.0F, $f4);

        z4 = 1;

     label4:
        return z4;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) $r4;

        interfaceinvoke r1.<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1, r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, z7, z8, $z9, $z10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i38, $i39, $i41, $i42, $i43, $i44, $i45, i47, i48, i49, i50, $i51, i52, i53, $i54, $i55, $i56, $i57;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r3, $r4, $r5;
        android.view.VelocityTracker $r6, $r9, $r29, $r30, $r31, $r32, $r35;
        int[] $r7, $r8, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r21, $r22, $r33, $r34, $r37, $r38;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, f20, $f21, f22;
        androidx.recyclerview.widget.GapWorker $r14, $r15;
        android.view.ViewParent $r16, $r23;
        java.lang.StringBuilder $r24, $r25, $r26, $r27;
        java.lang.String $r28;
        byte $b37, $b40, b46;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z2 != 0 goto label01;

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z3 == 0 goto label02;

     label01:
        return 0;

     label02:
        $z4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)>(r1);

        if $z4 == 0 goto label03;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        return 1;

     label03:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 != null goto label04;

        return 0;

     label04:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r6 != null goto label05;

        $r35 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r35;

     label05:
        z7 = 0;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        if i0 != 0 goto label06;

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r33 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r33[1] = 0;

        $r34[0] = 0;

     label06:
        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i3 = $r7[0];

        $f1 = (float) $i3;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i4 = $r8[1];

        $f0 = (float) $i4;

        virtualinvoke r2.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        tableswitch(i0)
        {
            case 0: goto label07;
            case 1: goto label33;
            case 2: goto label11;
            case 3: goto label41;
            case 4: goto label42;
            case 5: goto label10;
            case 6: goto label32;
            default: goto label42;
        };

     label07:
        $i43 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i43;

        $f15 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f16 = $f15 + 0.5F;

        $i44 = (int) $f16;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i44;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i44;

        $f17 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f18 = $f17 + 0.5F;

        $i45 = (int) $f18;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i45;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i45;

        b46 = 0;

        if z0 == 0 goto label08;

        b46 = b46 | 1;

     label08:
        if z1 == 0 goto label09;

        b46 = b46 | 2;

     label09:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>(b46, 0);

        goto label42;

     label10:
        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i5;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i1);

        $f3 = $f2 + 0.5F;

        $i6 = (int) $f3;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i6;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i6;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        $f5 = $f4 + 0.5F;

        $i7 = (int) $f5;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i7;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i7;

        goto label42;

     label11:
        $i8 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        i47 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i8);

        if i47 >= 0 goto label12;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i34 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r28);

        return 0;

     label12:
        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i47);

        $f7 = $f6 + 0.5F;

        i48 = (int) $f7;

        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i47);

        $f9 = $f8 + 0.5F;

        i2 = (int) $f9;

        $i9 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX>;

        i49 = $i9 - i48;

        $i10 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY>;

        i50 = $i10 - i2;

        $i11 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i11 == 1 goto label19;

        z8 = 0;

        if z0 == 0 goto label15;

        if i49 <= 0 goto label13;

        $i32 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i33 = i49 - $i32;

        i49 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i33);

        goto label14;

     label13:
        $i30 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i31 = i49 + $i30;

        i49 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i31);

     label14:
        if i49 == 0 goto label15;

        z8 = 1;

     label15:
        if z1 == 0 goto label18;

        if i50 <= 0 goto label16;

        $i28 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i29 = i50 - $i28;

        i50 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i29);

        goto label17;

     label16:
        $i26 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i27 = i50 + $i26;

        i50 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i27);

     label17:
        if i50 == 0 goto label18;

        z8 = 1;

     label18:
        if z8 == 0 goto label19;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

     label19:
        $i51 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i51 != 1 goto label31;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r10[0] = 0;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r11[1] = 0;

        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i12 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int releaseHorizontalGlow(int,float)>(i49, $f10);

        i52 = i49 - $i12;

        $f11 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i13 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int releaseVerticalGlow(int,float)>(i50, $f11);

        i53 = i50 - $i13;

        if z0 == 0 goto label20;

        $i54 = i52;

        goto label21;

     label20:
        $i54 = 0;

     label21:
        if z1 == 0 goto label22;

        $i55 = i53;

        goto label23;

     label22:
        $i55 = 0;

     label23:
        $r37 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r38 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $z9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($i54, $i55, $r37, $r38, 0);

        if $z9 == 0 goto label24;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i18 = $r17[0];

        i52 = i52 - $i18;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i19 = $r18[1];

        i53 = i53 - $i19;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i21 = $r19[0];

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i20 = $r20[0];

        $i22 = $i21 + $i20;

        $r19[0] = $i22;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i24 = $r21[1];

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i23 = $r22[1];

        $i25 = $i24 + $i23;

        $r21[1] = $i25;

        $r23 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r23.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label24:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i14 = $r12[0];

        $i15 = i48 - $i14;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i15;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i16 = $r13[1];

        $i17 = i2 - $i16;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i17;

        if z0 == 0 goto label25;

        $i56 = i52;

        goto label26;

     label25:
        $i56 = 0;

     label26:
        if z1 == 0 goto label27;

        $i57 = i53;

        goto label28;

     label27:
        $i57 = 0;

     label28:
        $z10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent,int)>($i56, $i57, r1, 0);

        if $z10 == 0 goto label29;

        $r16 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r16.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label29:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        if $r14 == null goto label31;

        if i52 != 0 goto label30;

        if i53 == 0 goto label31;

     label30:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        virtualinvoke $r15.<androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, i52, i53);

     label31:
        goto label42;

     label32:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>(r1);

        goto label42;

     label33:
        $r29 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r29.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r2);

        z7 = 1;

        $r30 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i36 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $f12 = (float) $i36;

        virtualinvoke $r30.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f12);

        if z0 == 0 goto label34;

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i42 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $f14 = virtualinvoke $r32.<android.view.VelocityTracker: float getXVelocity(int)>($i42);

        $f19 = neg $f14;

        goto label35;

     label34:
        $f19 = 0.0F;

     label35:
        f20 = $f19;

        if z1 == 0 goto label36;

        $r31 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i41 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $f13 = virtualinvoke $r31.<android.view.VelocityTracker: float getYVelocity(int)>($i41);

        $f21 = neg $f13;

        goto label37;

     label36:
        $f21 = 0.0F;

     label37:
        f22 = $f21;

        $b37 = f20 cmpl 0.0F;

        if $b37 != 0 goto label38;

        $b40 = f22 cmpl 0.0F;

        if $b40 == 0 goto label39;

     label38:
        $i39 = (int) f20;

        $i38 = (int) f22;

        $z5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>($i39, $i38);

        if $z5 != 0 goto label40;

     label39:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

     label40:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetScroll()>();

        goto label42;

     label41:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

     label42:
        if z7 != 0 goto label43;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r9.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r2);

     label43:
        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    private void resetScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void releaseGlows()>();

        return;
    }

    private void cancelScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

        return;
    }

    private void onPointerUp(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        byte b1, $b7;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        if $i2 != $i3 goto label3;

        if i0 != 0 goto label1;

        $b7 = 1;

        goto label2;

     label1:
        $b7 = 0;

     label2:
        b1 = $b7;

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b1);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i4;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b1);

        $f1 = $f0 + 0.5F;

        $i5 = (int) $f1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i5;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i5;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b1);

        $f3 = $f2 + 0.5F;

        $i6 = (int) $f3;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i6;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i6;

     label3:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        byte $b7, $b8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label01;

        return 0;

     label01:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label02;

        return 0;

     label02:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 8 goto label13;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i2 = $i1 & 2;

        if $i2 == 0 goto label06;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z3 == 0 goto label03;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        f6 = neg $f5;

        goto label04;

     label03:
        f6 = 0.0F;

     label04:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z4 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z4 == 0 goto label05;

        f7 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(10);

        goto label11;

     label05:
        f7 = 0.0F;

        goto label11;

     label06:
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i4 = $i3 & 4194304;

        if $i4 == 0 goto label10;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(26);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z1 == 0 goto label07;

        f6 = neg f0;

        f7 = 0.0F;

        goto label09;

     label07:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z2 == 0 goto label08;

        f6 = 0.0F;

        f7 = f0;

        goto label09;

     label08:
        f6 = 0.0F;

        f7 = 0.0F;

     label09:
        goto label11;

     label10:
        f6 = 0.0F;

        f7 = 0.0F;

     label11:
        $b8 = f6 cmpl 0.0F;

        if $b8 != 0 goto label12;

        $b7 = f7 cmpl 0.0F;

        if $b7 == 0 goto label13;

     label12:
        $f1 = r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor>;

        $f2 = f7 * $f1;

        $i6 = (int) $f2;

        $f3 = r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor>;

        $f4 = f6 * $f3;

        $i5 = (int) $f4;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void nestedScrollByInternal(int,int,android.view.MotionEvent,int)>($i6, $i5, r1, 1);

     label13:
        return 0;
    }

    protected void onMeasure(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2, $r8, $r18, $r21, $r24, $r26, $r27, $r28, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.recyclerview.widget.RecyclerView$State $r3, $r5, $r6, $r9, $r11, $r12, $r14, $r15, $r16, $r19, $r23, $r25, $r29;
        androidx.recyclerview.widget.RecyclerView$Adapter $r4, $r10, $r22;
        androidx.recyclerview.widget.RecyclerView$Recycler $r7, $r17, $r20;
        androidx.recyclerview.widget.AdapterHelper $r13;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label01;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;

     label01:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()>();

        if $z0 == 0 goto label08;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r21.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)>($r20, $r19, i0, i1);

        if i2 != 1073741824 goto label02;

        if i3 != 1073741824 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLastAutoMeasureSkippedDueToExact> = $z6;

        $z7 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLastAutoMeasureSkippedDueToExact>;

        if $z7 != 0 goto label04;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r22 != null goto label05;

     label04:
        return;

     label05:
        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i7 = $r23.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep>;

        if $i7 != 1 goto label06;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>();

     label06:
        $r24 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r24.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>(i0, i1);

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r25.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r26.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>(i0, i1);

        $r27 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z5 = virtualinvoke $r27.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()>();

        if $z5 == 0 goto label07;

        $r28 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i10, 1073741824);

        $i12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i11, $i13);

        $r29 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r29.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r30 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r30.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>(i0, i1);

     label07:
        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredWidth> = $i8;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredHeight> = $i9;

        goto label16;

     label08:
        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>;

        if $z1 == 0 goto label09;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)>($r17, $r16, i0, i1);

        return;

     label09:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure>;

        if $z2 == 0 goto label12;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z4 = $r12.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if $z4 == 0 goto label10;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r15.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 1;

        goto label11;

     label10:
        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r13.<androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r14.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 0;

     label11:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        goto label13;

     label12:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z3 = $r3.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if $z3 == 0 goto label13;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredWidth()>();

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setMeasuredDimension(int,int)>($i5, $i6);

        return;

     label13:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label14;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i4 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        $r11.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = $i4;

        goto label15;

     label14:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r5.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = 0;

     label15:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)>($r7, $r6, i0, i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r9.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 0;

     label16:
        return;
    }

    void defaultOnMeasure(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View r1, r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i6 = $i4 + $i5;

        r1 = (android.view.View) r0;

        $i7 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)>(r1);

        i2 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i0, $i6, $i7);

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i10 = $i8 + $i9;

        r2 = (android.view.View) r0;

        $i11 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>(r2);

        i3 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i1, $i10, $i11);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setMeasuredDimension(int,int)>(i2, i3);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        if i0 != i2 goto label1;

        if i1 == i3 goto label2;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

     label2:
        return;
    }

    public void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r1, $r2, $r3, $r5, $r6, $r7;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>(null);

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator> = r1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r4);

     label2:
        return;
    }

    void onEnterLayoutOrScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i1 = $i0 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = $i1;

        return;
    }

    void onExitLayoutOrScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)>(1);

        return;
    }

    void onExitLayoutOrScroll(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i1 = $i0 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = $i1;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i2 >= 1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        if z0 == 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()>();

     label1:
        return;
    }

    boolean isAccessibilityEnabled()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityManager $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void dispatchContentChangedIfNecessary()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = 0;

        if i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(2048);

        staticinvoke <androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>(r1, i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        return;
    }

    public boolean isComputingLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;
        int $i0, $i1, i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label3;

        i2 = 0;

        if r1 == null goto label1;

        i2 = staticinvoke <androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        if i2 != 0 goto label2;

        i2 = 0;

     label2:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        $i1 = $i0 | i2;

        r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = $i1;

        return 1;

     label3:
        return 0;
    }

    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        return $r1;
    }

    void postAnimationRunner()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;
        java.lang.Runnable $r1;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner>;

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z1 == 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        r2 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r2, $r1);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 1;

     label1:
        return;
    }

    private boolean predictiveItemAnimationsEnabled()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void processAdapterUpdatesAndSetAnimationFlags()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        androidx.recyclerview.widget.AdapterHelper $r1, $r5, $r6;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r2;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r7;
        androidx.recyclerview.widget.RecyclerView$State $r8, $r9, $r10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 == 0 goto label01;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r6.<androidx.recyclerview.widget.AdapterHelper: void reset()>();

        $z10 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent>;

        if $z10 == 0 goto label01;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)>(r0);

     label01:
        $z11 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z11 == 0 goto label02;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r5.<androidx.recyclerview.widget.AdapterHelper: void preProcess()>();

        goto label03;

     label02:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

     label03:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved>;

        if $z2 != 0 goto label04;

        $z9 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged>;

        if $z9 == 0 goto label05;

     label04:
        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        z0 = $z12;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z3 == 0 goto label09;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label09;

        $z6 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z6 != 0 goto label07;

        if z0 != 0 goto label07;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z8 = $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations>;

        if $z8 == 0 goto label09;

     label07:
        $z13 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z13 == 0 goto label08;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z7 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z7 == 0 goto label09;

     label08:
        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        $r8.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations> = $z14;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z15 = $r10.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z15 == 0 goto label11;

        if z0 == 0 goto label11;

        $z4 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z4 != 0 goto label11;

        $z5 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z5 == 0 goto label11;

        $z16 = 1;

        goto label12;

     label11:
        $z16 = 0;

     label12:
        $r9.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = $z16;

        return;
    }

    void dispatchLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.RecyclerView$Adapter $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r5, $r6, $r7, $r8, $r10;
        androidx.recyclerview.widget.RecyclerView$State $r3, $r9;
        androidx.recyclerview.widget.AdapterHelper $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", "No adapter attached; skipping layout");

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No layout manager attached; skipping layout");

        return;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r3.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLastAutoMeasureSkippedDueToExact>;

        if $z1 == 0 goto label4;

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredWidth>;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        if $i4 != $i5 goto label3;

        $i6 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredHeight>;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        if $i6 == $i7 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z0 = $z3;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredWidth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastAutoMeasureNonExactMeasuredHeight> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLastAutoMeasureSkippedDueToExact> = 0;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i10 = $r9.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep>;

        if $i10 != 1 goto label6;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>();

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        goto label9;

     label6:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z2 = virtualinvoke $r4.<androidx.recyclerview.widget.AdapterHelper: boolean hasUpdates()>();

        if $z2 != 0 goto label7;

        if z0 != 0 goto label7;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        if $i0 != $i1 goto label7;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i2 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        if $i2 == $i3 goto label8;

     label7:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        goto label9;

     label8:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

     label9:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()>();

        return;
    }

    private void saveFocusInfo()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$State $r3, $r7, $r8;
        android.view.View r5, $r9;
        long $l0;
        int $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r5 = null;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label01;

        $z4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean hasFocus()>();

        if $z4 == 0 goto label01;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label01;

        r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View getFocusedChild()>();

     label01:
        if r5 != null goto label02;

        $r6 = null;

        goto label03;

     label02:
        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)>(r5);

     label03:
        r1 = $r6;

        if r1 != null goto label04;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()>();

        goto label10;

     label04:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z1 == 0 goto label05;

        $l0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        goto label06;

     label05:
        $l0 = -1L;

     label06:
        $r3.<androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId> = $l0;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 == 0 goto label07;

        $i1 = -1;

        goto label09;

     label07:
        $z3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z3 == 0 goto label08;

        $i1 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>;

        goto label09;

     label08:
        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

     label09:
        $r7.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition> = $i1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r9 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)>($r9);

        $r8.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId> = $i2;

     label10:
        return;
    }

    private void resetFocusInfo()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$State $r1, $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId> = -1L;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition> = -1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r3.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId> = -1;

        return;
    }

    private android.view.View findNextViewToFocus()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, $i3, i4, i5, i6;
        androidx.recyclerview.widget.RecyclerView$State $r1, $r2, $r7;
        android.view.View $r3, $r4, $r5, $r6;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r8, r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = $r1.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition>;

        if $i2 == -1 goto label01;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i3 = $r7.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition>;

        goto label02;

     label01:
        $i3 = 0;

     label02:
        i0 = $i3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        i1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        i4 = i0;

     label03:
        if i4 >= i1 goto label06;

        r8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i4);

        if r8 != null goto label04;

        goto label06;

     label04:
        $r5 = r8.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z1 = virtualinvoke $r5.<android.view.View: boolean hasFocusable()>();

        if $z1 == 0 goto label05;

        $r6 = r8.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r6;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i0);

        i6 = i5 - 1;

     label07:
        if i6 < 0 goto label10;

        r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i6);

        if r9 != null goto label08;

        return null;

     label08:
        $r3 = r9.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label09;

        $r4 = r9.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r4;

     label09:
        i6 = i6 + -1;

        goto label07;

     label10:
        return null;
    }

    private void recoverFocusFromState()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, $r5, $r7, r13, r16;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2, $r8;
        int $i0, $i1, $i2, $i5, $i7, $i10;
        androidx.recyclerview.widget.RecyclerView$State $r3, $r4, $r9, $r15;
        long $l3, $l6, $l8;
        byte $b4, $b9;
        androidx.recyclerview.widget.ChildHelper $r6, $r10, $r12, $r17;
        android.view.ViewParent $r11;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r14;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label01;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label01;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean hasFocus()>();

        if $z1 == 0 goto label01;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getDescendantFocusability()>();

        if $i0 == 393216 goto label01;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getDescendantFocusability()>();

        if $i1 != 131072 goto label02;

        $z12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isFocused()>();

        if $z12 == 0 goto label02;

     label01:
        return;

     label02:
        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isFocused()>();

        if $z2 != 0 goto label05;

        r13 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View getFocusedChild()>();

        $z8 = <androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD>;

        if $z8 == 0 goto label04;

        $r11 = virtualinvoke r13.<android.view.View: android.view.ViewParent getParent()>();

        if $r11 == null goto label03;

        $z11 = virtualinvoke r13.<android.view.View: boolean hasFocus()>();

        if $z11 != 0 goto label04;

     label03:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $i7 = virtualinvoke $r12.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        if $i7 != 0 goto label05;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean requestFocus()>();

        return;

     label04:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $z9 = virtualinvoke $r10.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>(r13);

        if $z9 != 0 goto label05;

        return;

     label05:
        r14 = null;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $l8 = $r15.<androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId>;

        $b9 = $l8 cmp -1L;

        if $b9 == 0 goto label06;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z7 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z7 == 0 goto label06;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $l6 = $r9.<androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId>;

        r14 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)>($l6);

     label06:
        r16 = null;

        if r14 == null goto label07;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = r14.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z5 = virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z5 != 0 goto label07;

        $r7 = r14.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z6 = virtualinvoke $r7.<android.view.View: boolean hasFocusable()>();

        if $z6 != 0 goto label08;

     label07:
        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $i10 = virtualinvoke $r17.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        if $i10 <= 0 goto label09;

        r16 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()>();

        goto label09;

     label08:
        r16 = r14.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

     label09:
        if r16 == null goto label11;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = $r3.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId>;

        $l3 = (long) $i2;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label10;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i5 = $r4.<androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId>;

        r1 = virtualinvoke r16.<android.view.View: android.view.View findViewById(int)>($i5);

        if r1 == null goto label10;

        $z4 = virtualinvoke r1.<android.view.View: boolean isFocusable()>();

        if $z4 == 0 goto label10;

        r16 = r1;

     label10:
        virtualinvoke r16.<android.view.View: boolean requestFocus()>();

     label11:
        return;
    }

    private int getDeepestFocusedViewWithId(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup $r1;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter0: android.view.View;

        i1 = virtualinvoke r2.<android.view.View: int getId()>();

     label1:
        $z0 = virtualinvoke r2.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label3;

        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<android.view.View: boolean hasFocus()>();

        if $z2 == 0 goto label3;

        $r1 = (android.view.ViewGroup) r2;

        r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        i0 = virtualinvoke r2.<android.view.View: int getId()>();

        if i0 == -1 goto label2;

        i1 = virtualinvoke r2.<android.view.View: int getId()>();

     label2:
        goto label1;

     label3:
        return i1;
    }

    final void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        android.widget.OverScroller r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getScrollState()>();

        if $i0 != 2 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        r2 = $r3.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        $i1 = virtualinvoke r2.<android.widget.OverScroller: int getFinalX()>();

        $i2 = virtualinvoke r2.<android.widget.OverScroller: int getCurrX()>();

        $i3 = $i1 - $i2;

        r1.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal> = $i3;

        $i4 = virtualinvoke r2.<android.widget.OverScroller: int getFinalY()>();

        $i5 = virtualinvoke r2.<android.widget.OverScroller: int getCurrY()>();

        $i6 = $i4 - $i5;

        r1.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical> = $i6;

        goto label2;

     label1:
        r1.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal> = 0;

        r1.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical> = 0;

     label2:
        return;
    }

    private void dispatchLayoutStep1()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, z18;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r1, r40;
        androidx.recyclerview.widget.RecyclerView$State $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r19, $r26, $r29, $r32, $r33, $r34, $r35, $r38;
        androidx.recyclerview.widget.ViewInfoStore $r5, $r17, $r21, $r28, $r30;
        androidx.recyclerview.widget.RecyclerView$Recycler $r12;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r13;
        androidx.recyclerview.widget.ChildHelper $r15, $r16, $r22, $r23;
        int $i0, $i1, $i2, i3, i4, i6, i7;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r18, $r25;
        java.util.List $r20, $r27;
        android.view.View $r24, r41;
        androidx.recyclerview.widget.RecyclerView$Adapter $r31, $r36;
        int[] $r37;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r39, r42;
        long l5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$State: void assertLayoutStep(int)>(1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)>($r3);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r4.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ViewInfoStore: void clear()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()>();

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = $r6.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z1 == 0 goto label01;

        $z13 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged>;

        if $z13 == 0 goto label01;

        $z14 = 1;

        goto label02;

     label01:
        $z14 = 0;

     label02:
        $r32.<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders> = $z14;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        $r33 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z16 = $r34.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        $r33.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = $z16;

        $r35 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r36 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i2 = virtualinvoke $r36.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        $r35.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = $i2;

        $r37 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r37);

        $r38 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z17 = $r38.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z17 == 0 goto label06;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i3 = virtualinvoke $r22.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i4 = 0;

     label03:
        if i4 >= i3 goto label06;

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r24 = virtualinvoke $r23.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i4);

        r39 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r24);

        $z5 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z5 != 0 goto label05;

        $z6 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z6 == 0 goto label04;

        $r31 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z12 = virtualinvoke $r31.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z12 != 0 goto label04;

        goto label05;

     label04:
        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r39);

        $r27 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        r40 = virtualinvoke $r25.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)>($r26, r39, $i1, $r27);

        $r28 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r28.<androidx.recyclerview.widget.ViewInfoStore: void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r39, r40);

        $r29 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z7 = $r29.<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if $z7 == 0 goto label05;

        $z8 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z8 == 0 goto label05;

        $z9 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z9 != 0 goto label05;

        $z10 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z10 != 0 goto label05;

        $z11 = virtualinvoke r39.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z11 != 0 goto label05;

        l5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r39);

        $r30 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r30.<androidx.recyclerview.widget.ViewInfoStore: void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)>(l5, r39);

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z2 = $r7.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if $z2 == 0 goto label13;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void saveOldPositions()>();

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        z18 = $r9.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r10.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>($r12, $r11);

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r14.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = z18;

        i6 = 0;

     label07:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r15.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        if i6 >= $i0 goto label12;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r41 = virtualinvoke $r16.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i6);

        r42 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r41);

        $z3 = virtualinvoke r42.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z3 == 0 goto label08;

        goto label11;

     label08:
        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        $z4 = virtualinvoke $r17.<androidx.recyclerview.widget.ViewInfoStore: boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r42);

        if $z4 != 0 goto label11;

        i7 = staticinvoke <androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r42);

        z0 = virtualinvoke r42.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(8192);

        if z0 != 0 goto label09;

        i7 = i7 | 4096;

     label09:
        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r20 = virtualinvoke r42.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        r1 = virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)>($r19, r42, i7, $r20);

        if z0 == 0 goto label10;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r42, r1);

        goto label11;

     label10:
        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r21.<androidx.recyclerview.widget.ViewInfoStore: void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r42, r1);

     label11:
        i6 = i6 + 1;

        goto label07;

     label12:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void clearOldPositions()>();

        goto label14;

     label13:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void clearOldPositions()>();

     label14:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r8.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep> = 2;

        return;
    }

    private void dispatchLayoutStep2()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$State $r1, $r4, $r5, $r14, $r17, $r18, $r19, $r20, $r21;
        androidx.recyclerview.widget.AdapterHelper $r2;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r8;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$SavedState $r6, $r9, $r11;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r7;
        boolean $z0, $z1, $z2;
        android.os.Parcelable $r10, $r12;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r13, $r15;
        androidx.recyclerview.widget.RecyclerView$Recycler $r16;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$State: void assertLayoutStep(int)>(6);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r2.<androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        $r4.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = $i0;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r5.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout> = 0;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        if $r6 == null goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean canRestoreState()>();

        if $z0 == 0 goto label2;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        $r10 = $r9.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        if $r10 == null goto label1;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        $r12 = $r11.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)>($r12);

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState> = null;

     label2:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r14.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r15.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>($r16, $r17);

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r18.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = $r20.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z1 == 0 goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r7 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r19.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations> = $z2;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r21.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep> = 4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        return;
    }

    private void dispatchLayoutStep3()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r3;
        long l0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r4, r5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        androidx.recyclerview.widget.RecyclerView$State $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r19, $r34;
        androidx.recyclerview.widget.RecyclerView$Recycler $r9, $r16, $r26, $r27;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r10, $r15, $r18, $r20, $r24, $r25;
        int $i1, $i2, $i3, $i4, i5;
        java.util.ArrayList $r17, $r28;
        androidx.recyclerview.widget.ViewInfoStore $r21, $r31, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        int[] $r22, $r23;
        androidx.recyclerview.widget.ChildHelper $r29, $r32;
        androidx.recyclerview.widget.ViewInfoStore$ProcessCallback $r30;
        android.view.View $r33;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r35;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$State: void assertLayoutStep(int)>(4);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r7.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep> = 1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z2 = $r8.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z2 == 0 goto label09;

        $r29 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $i4 = virtualinvoke $r29.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i5 = $i4 - 1;

     label01:
        if i5 < 0 goto label08;

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r33 = virtualinvoke $r32.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i5);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r33);

        $z5 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z5 == 0 goto label02;

        goto label07;

     label02:
        l0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r35 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        r2 = virtualinvoke $r35.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)>($r34, r1);

        $r36 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        r3 = virtualinvoke $r36.<androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)>(l0);

        if r3 == null goto label06;

        $z6 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z6 != 0 goto label06;

        $r38 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        z0 = virtualinvoke $r38.<androidx.recyclerview.widget.ViewInfoStore: boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

        $r39 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        z1 = virtualinvoke $r39.<androidx.recyclerview.widget.ViewInfoStore: boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        if z0 == 0 goto label03;

        if r3 != r1 goto label03;

        $r43 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r43.<androidx.recyclerview.widget.ViewInfoStore: void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2);

        goto label05;

     label03:
        $r40 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        r4 = virtualinvoke $r40.<androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

        $r41 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r41.<androidx.recyclerview.widget.ViewInfoStore: void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2);

        $r42 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        r5 = virtualinvoke $r42.<androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        if r4 != null goto label04;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)>(l0, r1, r3);

        goto label05;

     label04:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)>(r3, r1, r4, r5, z0, z1);

     label05:
        goto label07;

     label06:
        $r37 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r37.<androidx.recyclerview.widget.ViewInfoStore: void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2);

     label07:
        i5 = i5 + -1;

        goto label01;

     label08:
        $r31 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        $r30 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback>;

        virtualinvoke $r31.<androidx.recyclerview.widget.ViewInfoStore: void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)>($r30);

     label09:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)>($r9);

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i1 = $r11.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount>;

        $r12.<androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = 0;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r13.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations> = 0;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r14.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = 0;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r15.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r17 = $r16.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r17 == null goto label10;

        $r27 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r28 = $r27.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r28.<java.util.ArrayList: void clear()>();

     label10:
        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $z3 = $r18.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch>;

        if $z3 == 0 goto label11;

        $r24 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r24.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r25.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch> = 0;

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r26.<androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label11:
        $r20 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r20.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)>($r19);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r21.<androidx.recyclerview.widget.ViewInfoStore: void clear()>();

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i3 = $r22[0];

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i2 = $r23[1];

        $z4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)>($i3, $i2);

        if $z4 == 0 goto label12;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)>(0, 0);

     label12:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()>();

        return;
    }

    private void handleMissingPreInfoForChangeError(long, androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        long l0, l2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r2, r4;
        int i1, i5;
        android.view.View r3;
        androidx.recyclerview.widget.ChildHelper $r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r17, $r18, $r19, $r20, $r21, $r23, $r27, $r28, $r29, $r30, $r31, $r33;
        java.lang.String $r11, $r13, $r22, $r24, $r32, $r34;
        byte $b4;
        androidx.recyclerview.widget.RecyclerView$Adapter $r15, $r25;
        java.lang.IllegalStateException $r16, $r26;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= i1 goto label5;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r3 = virtualinvoke $r14.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i5);

        r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r3);

        if r4 != r1 goto label2;

        goto label4;

     label2:
        l2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r4);

        $b4 = l2 cmp l0;

        if $b4 != 0 goto label4;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r15 == null goto label3;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r25.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r26 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same stable ID. Stable IDs in your adapter MUST BE unique and SHOULD NOT change.\n ViewHolder 1:");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r26;

     label3:
        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same change ID. This might happen due to inconsistent Adapter update events or if the LayoutManager lays out the same View multiple times.\n ViewHolder 1:");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem while matching changed view holders with the newones. The pre-layout information for the change holder ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found but it is necessary for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r13);

        return;
    }

    void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2;
        long l0;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.ViewInfoStore $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(0, 8192);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = $r3.<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z3 != 0 goto label1;

        l0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<androidx.recyclerview.widget.ViewInfoStore: void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)>(l0, r1);

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ViewInfoStore: void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2);

        return;
    }

    private void findMinMaxChildLayoutPositions(int[])
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int[] r1;
        int i0, i1, i2, i3, i4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.ChildHelper $r3, $r4;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: int[];

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        if i0 != 0 goto label1;

        r1[0] = -1;

        r1[1] = -1;

        return;

     label1:
        i2 = 2147483647;

        i3 = -2147483648;

        i4 = 0;

     label2:
        if i4 >= i0 goto label6;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i4);

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

        goto label5;

     label3:
        i1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if i1 >= i2 goto label4;

        i2 = i1;

     label4:
        if i1 <= i3 goto label5;

        i3 = i1;

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        r1[0] = i2;

        r1[1] = i3;

        return;
    }

    private boolean didChildRangeChange(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i2 = $r2[0];

        if $i2 != i0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i3 = $r3[1];

        if $i3 == i1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected void removeDetachedView(android.view.View, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        boolean z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label1;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

        goto label2;

     label1:
        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z2 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called removeDetachedView with a view which is not flagged as tmp detached.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        virtualinvoke r1.<android.view.View: void clearAnimation()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)>(r1);

        specialinvoke r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2;
        boolean $z0;
        int $i0;
        long $l1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        goto label2;

     label1:
        $i0 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $l1 = (long) $i0;

     label2:
        return $l1;
    }

    void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    private void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, boolean, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r2;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r3, r4;
        boolean z0, z1, $z2;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r4 := @parameter3: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        if z0 == 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label1:
        if r1 == r2 goto label3;

        if z1 == 0 goto label2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label2:
        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder> = r2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder> = r1;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z2 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3, r4);

        if $z2 == 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label4:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV OnLayout");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete> = 1;

        return;
    }

    public void requestLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 != 0 goto label1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        goto label2;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 1;

     label2:
        return;
    }

    void markItemDecorInsetsDirty()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        android.view.View r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r1 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r5;

        $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void markItemDecorInsetsDirty()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, i24, i25, i26, i27, $i28, i29;
        java.util.ArrayList $r2, $r5, $r19;
        android.widget.EdgeEffect $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r24, $r25;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.Object $r20;
        androidx.recyclerview.widget.RecyclerView$State $r21;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration $r22;
        android.view.View r26;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i21 = 0;

     label01:
        if i21 >= i0 goto label02;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        $r22 = (androidx.recyclerview.widget.RecyclerView$ItemDecoration) $r20;

        $r21 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r22.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)>(r1, r0, $r21);

        i21 = i21 + 1;

        goto label01;

     label02:
        z13 = 0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r3 == null goto label07;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z10 = virtualinvoke $r16.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z10 != 0 goto label07;

        i22 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z11 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z11 == 0 goto label03;

        $i23 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        goto label04;

     label03:
        $i23 = 0;

     label04:
        i24 = $i23;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i18 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i19 = neg $i18;

        $i20 = $i19 + i24;

        $f8 = (float) $i20;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f8, 0.0F);

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r17 == null goto label05;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z12 = virtualinvoke $r18.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z12 == 0 goto label05;

        $z14 = 1;

        goto label06;

     label05:
        $z14 = 0;

     label06:
        z13 = $z14;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i22);

     label07:
        $r23 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r23 == null goto label11;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z7 = virtualinvoke $r13.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 != 0 goto label11;

        i25 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z8 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z8 == 0 goto label08;

        $i16 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $f6 = (float) $i16;

        $i17 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $f7 = (float) $i17;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f6, $f7);

     label08:
        $z15 = z13;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r14 == null goto label09;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z9 = virtualinvoke $r15.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z9 == 0 goto label09;

        $z16 = 1;

        goto label10;

     label09:
        $z16 = 0;

     label10:
        z13 = $z15 | $z16;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i25);

     label11:
        $r24 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r24 == null goto label16;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z4 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z4 != 0 goto label16;

        i26 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i27 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $z5 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z5 == 0 goto label12;

        $i28 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        goto label13;

     label12:
        $i28 = 0;

     label13:
        i1 = $i28;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $f5 = (float) i1;

        $i15 = neg i27;

        $f4 = (float) $i15;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f5, $f4);

        $z17 = z13;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r11 == null goto label14;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z6 = virtualinvoke $r12.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z6 == 0 goto label14;

        $z18 = 1;

        goto label15;

     label14:
        $z18 = 0;

     label15:
        z13 = $z17 | $z18;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i26);

     label16:
        $r25 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r25 == null goto label21;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z1 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label21;

        i29 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z2 == 0 goto label17;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i8 = neg $i7;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i10 = $i8 + $i9;

        $f2 = (float) $i10;

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i12 = neg $i11;

        $i13 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i14 = $i12 + $i13;

        $f3 = (float) $i14;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        goto label18;

     label17:
        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i4 = neg $i3;

        $f0 = (float) $i4;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i6 = neg $i5;

        $f1 = (float) $i6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label18:
        $z19 = z13;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r8 == null goto label19;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z3 = virtualinvoke $r9.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z3 == 0 goto label19;

        $z20 = 1;

        goto label20;

     label19:
        $z20 = 0;

     label20:
        z13 = $z19 | $z20;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i29);

     label21:
        if z13 != 0 goto label22;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r4 == null goto label22;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label22;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z0 == 0 goto label22;

        z13 = 1;

     label22:
        if z13 == 0 goto label23;

        r26 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r26);

     label23:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView$State $r5;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (androidx.recyclerview.widget.RecyclerView$ItemDecoration) $r4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)>(r1, r0, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r1;

        $z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        java.lang.StringBuilder $r6, $r8, r10;
        java.lang.String $r7, $r9;
        java.lang.IllegalStateException r11;
        android.view.ViewGroup$LayoutParams r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        r11 = new java.lang.IllegalStateException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw r11;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()>();

        r12 = (android.view.ViewGroup$LayoutParams) $r3;

        return r12;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.util.AttributeSet r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3;
        android.content.Context $r4;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r5;
        java.lang.StringBuilder $r8, $r10, r12;
        java.lang.String $r9, $r11;
        java.lang.IllegalStateException r13;
        android.view.ViewGroup$LayoutParams r14;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        r13 = new java.lang.IllegalStateException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw r13;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)>($r4, r1);

        r14 = (android.view.ViewGroup$LayoutParams) $r5;

        return r14;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.ViewGroup$LayoutParams r1, r13;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        java.lang.StringBuilder $r7, $r9, r11;
        java.lang.String $r8, $r10;
        java.lang.IllegalStateException r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        r12 = new java.lang.IllegalStateException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw r12;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        r13 = (android.view.ViewGroup$LayoutParams) $r4;

        return r13;
    }

    public boolean isAnimating()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void saveOldPositions()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r3;
        android.view.View $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void saveOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void clearOldPositions()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void clearOldPositions()>();

        return;
    }

    void offsetPositionRecordsForMove(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i10;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        androidx.recyclerview.widget.RecyclerView$State $r6;
        byte b9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        if i0 >= i1 goto label1;

        i7 = i0;

        i8 = i1;

        b9 = -1;

        goto label2;

     label1:
        i7 = i1;

        i8 = i0;

        b9 = 1;

     label2:
        i10 = 0;

     label3:
        if i10 >= i2 goto label8;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i10);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label7;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i7 goto label7;

        $i4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 <= i8 goto label4;

        goto label7;

     label4:
        $i5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 != i0 goto label5;

        $i6 = i1 - i0;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i6, 0);

        goto label6;

     label5:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(b9, 0);

     label6:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r6.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label7:
        i10 = i10 + 1;

        goto label3;

     label8:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForMove(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void offsetPositionRecordsForInsert(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, $i3, i4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$State $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i0 goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(i1, 0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r6.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForInsert(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void offsetPositionRecordsForRemove(int, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, $z1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        androidx.recyclerview.widget.RecyclerView$State $r6, $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 = i0 + i1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i3 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i9 = 0;

     label1:
        if i9 >= i3 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i9);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label3;

        $i4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 < i2 goto label2;

        $i8 = neg i1;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i8, z0);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r7.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        goto label3;

     label2:
        $i5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 < i0 goto label3;

        $i7 = i0 - 1;

        $i6 = neg i1;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void flagRemovedAndOffsetPosition(int,int,boolean)>($i7, $i6, z0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r6.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForRemove(int,int,boolean)>(i0, i1, z0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void viewRangeUpdate(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.lang.Object r1;
        android.view.View r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        androidx.recyclerview.widget.ChildHelper $r4, $r6;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i3 = i0 + i1;

        i6 = 0;

     label1:
        if i6 >= i2 goto label4;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r2 = virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i6);

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i4 = r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 < i0 goto label3;

        $i5 = r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 >= i3 goto label3;

        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(2);

        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)>(r1);

        $r7 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r7;

        $r8.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Recycler: void viewRangeUpdate(int,int)>(i0, i1);

        return;
    }

    boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r2, $r3;
        java.util.List $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r4 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)>(r1, $r4);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    void processDataSetCompletelyChanged(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent>;

        $z2 = $z1 | z0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = $z2;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }

    void markKnownViewsInvalid()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void markKnownViewsInvalid()>();

        return;
    }

    public void invalidateItemDecorations()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot invalidate item decorations during a scroll or layout");

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public boolean getPreserveFocusAfterLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        return $z0;
    }

    public void setPreserveFocusAfterLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = z0;

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        android.view.ViewParent r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if r2 == null goto label1;

        if r2 == r0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a direct child of ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        return $r3;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;
        android.view.View r1, $r3;
        android.view.ViewParent r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if r2 == null goto label2;

        if r2 == r0 goto label2;

        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        r1 = (android.view.View) r2;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        if r2 != r0 goto label3;

        $r3 = r1;

        goto label4;

     label3:
        $r3 = null;

     label4:
        return $r3;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1, r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

     label2:
        return $r3;
    }

    static androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r3;

        r0 := @parameter0: android.view.View;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        return $r3;
    }

    public int getChildPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>(r1);

        return $i0;
    }

    public int getChildAdapterPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getChildLayoutPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public long getChildItemId(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r4;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label2;

     label1:
        return -1L;

     label2:
        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label3;

        $l0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        goto label4;

     label3:
        $l0 = -1L;

     label4:
        return $l0;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>(i0, 0);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>(i0, 0);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, i3;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r7;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.ChildHelper $r2, $r3, $r6;
        android.view.View $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        r7 = null;

        i3 = 0;

     label2:
        if i3 >= i1 goto label5;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i3);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        if r1 == null goto label4;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label4;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        if $i2 != i0 goto label4;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z2 == 0 goto label3;

        r7 = r1;

        goto label4;

     label3:
        return r1;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r7;
    }

    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, $i3, i4;
        boolean z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r7;
        androidx.recyclerview.widget.ChildHelper $r2, $r3, $r6;
        android.view.View $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        r7 = null;

        i4 = 0;

     label1:
        if i4 >= i1 goto label6;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        if r1 == null goto label5;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label5;

        if z0 == 0 goto label2;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 == i0 goto label3;

        goto label5;

     label2:
        $i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i2 == i0 goto label3;

        goto label5;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z2 == 0 goto label4;

        r7 = r1;

        goto label5;

     label4:
        return r1;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return r7;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        long l0, $l2;
        int i1, i4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r9;
        androidx.recyclerview.widget.RecyclerView$Adapter $r2, $r3;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.ChildHelper $r4, $r5, $r8;
        android.view.View $r6, $r7;
        byte $b3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()>();

        r9 = null;

        i4 = 0;

     label3:
        if i4 >= i1 goto label6;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r6 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r6);

        if r1 == null goto label5;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label5;

        $l2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label5;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r8.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r7);

        if $z2 == 0 goto label4;

        r9 = r1;

        goto label5;

     label4:
        return r1;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return r9;
    }

    public android.view.View findChildViewUnder(float, float)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, $i1, $i3, $i5, $i7, i9;
        android.view.View r1;
        androidx.recyclerview.widget.ChildHelper $r2, $r3;
        byte $b2, $b4, $b6, $b8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i9 = i0 - 1;

     label1:
        if i9 < 0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r1 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i9);

        f2 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        f3 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $f4 = (float) $i1;

        $f5 = $f4 + f2;

        $b2 = f0 cmpl $f5;

        if $b2 < 0 goto label2;

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        $f6 = (float) $i3;

        $f7 = $f6 + f2;

        $b4 = f0 cmpg $f7;

        if $b4 > 0 goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $f8 = (float) $i5;

        $f9 = $f8 + f3;

        $b6 = f1 cmpl $f9;

        if $b6 < 0 goto label2;

        $i7 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $f10 = (float) $i7;

        $f11 = $f10 + f3;

        $b8 = f1 cmpg $f11;

        if $b8 > 0 goto label2;

        return r1;

     label2:
        i9 = i9 + -1;

        goto label1;

     label3:
        return null;
    }

    public boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        android.view.View r2;
        long l0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        return $z0;
    }

    public void offsetChildrenVertical(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2;
        androidx.recyclerview.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r1.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r3.<android.view.View: void offsetTopAndBottom(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void onChildAttachedToWindow(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        return;
    }

    public void onChildDetachedFromWindow(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        return;
    }

    public void offsetChildrenHorizontal(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2;
        androidx.recyclerview.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r1.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r3.<android.view.View: void offsetLeftAndRight(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        android.graphics.Rect r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>(r1, r2);

        return;
    }

    static void getDecoratedBoundsWithMarginsInt(android.view.View, android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        $r4 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        r3 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i1 = r3.<android.graphics.Rect: int left>;

        $i3 = $i0 - $i1;

        $i2 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i4 = $i3 - $i2;

        $i5 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i6 = r3.<android.graphics.Rect: int top>;

        $i8 = $i5 - $i6;

        $i7 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int topMargin>;

        $i9 = $i8 - $i7;

        $i10 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i11 = r3.<android.graphics.Rect: int right>;

        $i13 = $i10 + $i11;

        $i12 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i14 = $i13 + $i12;

        $i15 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $i16 = r3.<android.graphics.Rect: int bottom>;

        $i18 = $i15 + $i16;

        $i17 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i19 = $i18 + $i17;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i9, $i14, $i19);

        return;
    }

    android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3, $r7, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.RecyclerView$State $r5, $r10;
        java.util.ArrayList $r6, $r8;
        java.lang.Object $r9;
        androidx.recyclerview.widget.RecyclerView$ItemDecoration $r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        $z0 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z0 != 0 goto label1;

        $r18 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r18;

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()>();

        if $z3 == 0 goto label3;

     label2:
        $r17 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r17;

     label3:
        r3 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i13 = 0;

     label4:
        if i13 >= i0 goto label5;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r12 = (androidx.recyclerview.widget.RecyclerView$ItemDecoration) $r9;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)>($r11, r1, r0, $r10);

        $i2 = r3.<android.graphics.Rect: int left>;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r13.<android.graphics.Rect: int left>;

        $i3 = $i2 + $i1;

        r3.<android.graphics.Rect: int left> = $i3;

        $i5 = r3.<android.graphics.Rect: int top>;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i4 = $r14.<android.graphics.Rect: int top>;

        $i6 = $i5 + $i4;

        r3.<android.graphics.Rect: int top> = $i6;

        $i8 = r3.<android.graphics.Rect: int right>;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i7 = $r15.<android.graphics.Rect: int right>;

        $i9 = $i8 + $i7;

        r3.<android.graphics.Rect: int right> = $i9;

        $i11 = r3.<android.graphics.Rect: int bottom>;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i10 = $r16.<android.graphics.Rect: int bottom>;

        $i12 = $i11 + $i10;

        r3.<android.graphics.Rect: int bottom> = $i12;

        i13 = i13 + 1;

        goto label4;

     label5:
        r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 0;

        return r3;
    }

    public void onScrolled(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    void dispatchOnScrolled(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener $r1, $r7, $r8;
        java.util.List $r2, $r3, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        $i5 = $i4 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = $i5;

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getScrollX()>();

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getScrollY()>();

        $i7 = i2 - i0;

        $i6 = i3 - i1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onScrollChanged(int,int,int,int)>(i2, i3, $i7, $i6);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)>(i0, i1);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener>;

        if $r1 == null goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, i0, i1);

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $i10 = interfaceinvoke $r3.<java.util.List: int size()>();

        i11 = $i10 - 1;

     label2:
        if i11 < 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i11);

        $r7 = (androidx.recyclerview.widget.RecyclerView$OnScrollListener) $r6;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, i0, i1);

        i11 = i11 + -1;

        goto label2;

     label3:
        $i8 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        $i9 = $i8 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = $i9;

        return;
    }

    public void onScrollStateChanged(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        return;
    }

    private float getSplineFlingDistance(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f0 = (float) $i1;

        $f3 = 0.35F * $f0;

        $f1 = r0.<androidx.recyclerview.widget.RecyclerView: float mPhysicalCoef>;

        $f2 = 0.015F * $f1;

        $f4 = $f3 / $f2;

        $d2 = (double) $f4;

        d0 = staticinvoke <java.lang.Math: double log(double)>($d2);

        $f5 = <androidx.recyclerview.widget.RecyclerView: float DECELERATION_RATE>;

        $d3 = (double) $f5;

        d1 = $d3 - 1.0;

        $f6 = r0.<androidx.recyclerview.widget.RecyclerView: float mPhysicalCoef>;

        $f7 = 0.015F * $f6;

        $d7 = (double) $f7;

        $f8 = <androidx.recyclerview.widget.RecyclerView: float DECELERATION_RATE>;

        $d4 = (double) $f8;

        $d5 = $d4 / d1;

        $d6 = $d5 * d0;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d9 = $d7 * $d8;

        $f9 = (float) $d9;

        return $f9;
    }

    void dispatchOnScrollStateChanged(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, $i1, i2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r9;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener $r2, $r7, $r8;
        java.util.List $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label1;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)>(i0);

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)>(i0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener>;

        if $r2 == null goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>(r0, i0);

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r3 == null goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label3:
        if i2 < 0 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (androidx.recyclerview.widget.RecyclerView$OnScrollListener) $r6;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>(r0, i0);

        i2 = i2 + -1;

        goto label3;

     label4:
        return;
    }

    public boolean hasPendingAdapterUpdates()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.AdapterHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z2 = virtualinvoke $r1.<androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    void repositionShadowingViews()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.view.View r1, r3;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2, $r6, $r7;
        androidx.recyclerview.widget.ChildHelper $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r1 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i9);

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r1);

        if r2 == null goto label3;

        $r6 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder>;

        if $r6 == null goto label3;

        $r7 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder>;

        r3 = $r7.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if i1 != $i3 goto label2;

        $i8 = virtualinvoke r3.<android.view.View: int getTop()>();

        if i2 == $i8 goto label3;

     label2:
        $i4 = virtualinvoke r3.<android.view.View: int getWidth()>();

        $i5 = i1 + $i4;

        $i6 = virtualinvoke r3.<android.view.View: int getHeight()>();

        $i7 = i2 + $i6;

        virtualinvoke r3.<android.view.View: void layout(int,int,int,int)>(i1, i2, $i5, $i7);

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    static androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
    {
        android.view.View r0, r2;
        android.view.ViewGroup r1;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.View;

        $z0 = r0 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z1 = r0 instanceof androidx.recyclerview.widget.RecyclerView;

        if $z1 == 0 goto label2;

        $r4 = (androidx.recyclerview.widget.RecyclerView) r0;

        return $r4;

     label2:
        r1 = (android.view.ViewGroup) r0;

        i0 = virtualinvoke r1.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)>(r2);

        if r3 == null goto label4;

        return r3;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    static void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        android.view.ViewParent r1;
        java.lang.ref.WeakReference $r2, $r3;
        java.lang.Object $r4;
        android.view.View $r5, r6;
        boolean $z0;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        if $r2 == null goto label6;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.view.View) $r4;

     label1:
        if r6 == null goto label5;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        if r6 != $r5 goto label2;

        return;

     label2:
        r1 = virtualinvoke r6.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r1 instanceof android.view.View;

        if $z0 == 0 goto label3;

        r6 = (android.view.View) r1;

        goto label4;

     label3:
        r6 = null;

     label4:
        goto label1;

     label5:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView> = null;

     label6:
        return;
    }

    long getNanoTime()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        return $l0;

     label1:
        return 0L;
    }

    void dispatchChildDetached(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r8;
        java.util.List $r4, $r5, $r9;
        java.lang.Object $r6;
        androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)>(r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        if r2 == null goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label1:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r9 == null goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) $r6;

        interfaceinvoke $r7.<androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)>(r1);

        i1 = i1 + -1;

        goto label2;

     label3:
        return;
    }

    void dispatchChildAttached(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r8;
        java.util.List $r4, $r5, $r9;
        java.lang.Object $r6;
        androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)>(r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        if r2 == null goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label1:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r9 == null goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) $r6;

        interfaceinvoke $r7.<androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)>(r1);

        i1 = i1 + -1;

        goto label2;

     label3:
        return;
    }

    boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0;
        boolean $z0;
        android.view.View $r2;
        java.util.List $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = i0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return 0;

     label1:
        $r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r2, i0);

        return 1;
    }

    void dispatchPendingImportantForAccessibilityChanges()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, i2;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5;
        android.view.View $r6, $r8;
        android.view.ViewParent $r7;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r5;

        $r6 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        if $r7 != r0 goto label3;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i0 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>;

        if i0 == -1 goto label3;

        $r8 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r8, i0);

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        boolean $z0, $z1;
        int $i0, $i1;
        androidx.recyclerview.widget.AdapterHelper $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(524);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z1 != 0 goto label2;

     label1:
        return -1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $i0 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.AdapterHelper: int applyPendingUpdatesToPosition(int)>($i0);

        return $i1;
    }

    void initFastScroller(android.graphics.drawable.StateListDrawable, android.graphics.drawable.Drawable, android.graphics.drawable.StateListDrawable, android.graphics.drawable.Drawable)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.graphics.drawable.StateListDrawable r1, r3;
        android.graphics.drawable.Drawable r2, r4;
        android.content.res.Resources r5;
        android.content.Context $r6;
        androidx.recyclerview.widget.FastScroller $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter0: android.graphics.drawable.StateListDrawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.StateListDrawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 == null goto label1;

        if r4 != null goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to set fast scroller without both required drawables.");

        $r11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        r5 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = new androidx.recyclerview.widget.FastScroller;

        $i0 = <androidx.recyclerview.R$dimen: int fastscroll_default_thickness>;

        $i1 = virtualinvoke r5.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $i2 = <androidx.recyclerview.R$dimen: int fastscroll_minimum_range>;

        $i3 = virtualinvoke r5.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        $i4 = <androidx.recyclerview.R$dimen: int fastscroll_margin>;

        $i5 = virtualinvoke r5.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i4);

        specialinvoke $r7.<androidx.recyclerview.widget.FastScroller: void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int)>(r0, r1, r2, r3, r4, $i1, $i3, $i5);

        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;
        androidx.core.view.NestedScrollingChildHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>(z0);

        return;
    }

    public boolean isNestedScrollingEnabled()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $z0;
    }

    public boolean startNestedScroll(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>(i0);

        return $z0;
    }

    public boolean startNestedScroll(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>(i0, i1);

        return $z0;
    }

    public void stopNestedScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.core.view.NestedScrollingChildHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()>();

        return;
    }

    public void stopNestedScroll(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.core.view.NestedScrollingChildHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)>(i0);

        return;
    }

    public boolean hasNestedScrollingParent()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();

        return $z0;
    }

    public boolean hasNestedScrollingParent(int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>(i0);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3;
        int[] r1;
        androidx.core.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r2.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>(i0, i1, i2, i3, r1);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[], int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, i4;
        int[] r1;
        androidx.core.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r2.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)>(i0, i1, i2, i3, r1, i4);

        return $z0;
    }

    public final void dispatchNestedScroll(int, int, int, int, int[], int, int[])
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2, i3, i4;
        int[] r1, r2;
        androidx.core.view.NestedScrollingChildHelper $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        r2 := @parameter6: int[];

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r3.<androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(i0, i1, i2, i3, r1, i4, r2);

        return;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;
        int[] r1, r2;
        androidx.core.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r3.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>(i0, i1, r1, r2);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[], int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, i2;
        int[] r1, r2;
        androidx.core.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        i2 := @parameter4: int;

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r3.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r1, r2, i2);

        return $z0;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        float f0, f1;
        boolean z0, $z1;
        androidx.core.view.NestedScrollingChildHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z1 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z1;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        float f0, f1;
        androidx.core.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>(f0, f1);

        return $z0;
    }

    protected int getChildDrawingOrder(int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if $r1 != null goto label1;

        $i3 = specialinvoke r0.<android.view.ViewGroup: int getChildDrawingOrder(int,int)>(i0, i1);

        return $i3;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        $i2 = interfaceinvoke $r2.<androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)>(i0, i1);

        return $i2;
    }

    private androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.core.view.NestedScrollingChildHelper $r1, $r2, r4;
        android.view.View r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper>;

        if $r1 != null goto label1;

        r4 = new androidx.core.view.NestedScrollingChildHelper;

        r5 = (android.view.View) r0;

        specialinvoke r4.<androidx.core.view.NestedScrollingChildHelper: void <init>(android.view.View)>(r5);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper> = r4;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper>;

        return $r2;
    }

    static void access$000(androidx.recyclerview.widget.RecyclerView, android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.ViewGroup$LayoutParams;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    static void access$100(androidx.recyclerview.widget.RecyclerView, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void detachViewFromParent(int)>(i0);

        return;
    }

    static boolean access$200(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean awakenScrollBars()>();

        return $z0;
    }

    static void access$300(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        int i0, i1;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setMeasuredDimension(int,int)>(i0, i1);

        return;
    }

    static void <clinit>()
    {
        int[] $r0;
        double $d0, $d1, $d2;
        float $f0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Class[] $r1;
        java.lang.Class $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$3 $r4;
        androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        $r0 = newarray (int)[1];

        $r0[0] = 16843830;

        <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS> = $r0;

        $d0 = staticinvoke <java.lang.Math: double log(double)>(0.78);

        $d1 = staticinvoke <java.lang.Math: double log(double)>(0.9);

        $d2 = $d0 / $d1;

        $f0 = (float) $d2;

        <androidx.recyclerview.widget.RecyclerView: float DECELERATION_RATE> = $f0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 18 goto label01;

        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 == 19 goto label01;

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 != 20 goto label02;

     label01:
        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        <androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST> = $z0;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC> = $z1;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 16 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        <androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION> = $z2;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 21 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK> = $z3;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 > 15 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION> = $z4;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 > 15 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        <androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD> = $z5;

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Landroid/content/Context;";

        $r1[1] = class "Landroid/util/AttributeSet;";

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[2] = $r2;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[3] = $r3;

        <androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE> = $r1;

        $r4 = new androidx.recyclerview.widget.RecyclerView$3;

        specialinvoke $r4.<androidx.recyclerview.widget.RecyclerView$3: void <init>()>();

        <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator> = $r4;

        $r5 = new androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory;

        specialinvoke $r5.<androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory: void <init>()>();

        <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory sDefaultEdgeEffectFactory> = $r5;

        return;
    }

androidx.recyclerview.widget.RecyclerView$1
<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$1 r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$1;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.recyclerview.widget.RecyclerView$1 r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: boolean isLayoutRequested()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        $z2 = $r3.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z2 != 0 goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        $z3 = $r4.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z3 == 0 goto label4;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 1;

        return;

     label4:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        return;
    }

androidx.recyclerview.widget.RecyclerView$2
<androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$2 r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$2;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.recyclerview.widget.RecyclerView$2 r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r3, $r4;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r2, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void runPendingAnimations()>();

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        return;
    }

androidx.recyclerview.widget.RecyclerView$3
    void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$3 r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float getInterpolation(float)
    {
        androidx.recyclerview.widget.RecyclerView$3 r0;
        float $f0, $f1, $f2, $f3, $f4, f5, f6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$3;

        f5 := @parameter0: float;

        f6 = f5 - 1.0F;

        $f0 = f6 * f6;

        $f1 = $f0 * f6;

        $f2 = $f1 * f6;

        $f3 = $f2 * f6;

        $f4 = $f3 + 1.0F;

        return $f4;
    }

androidx.recyclerview.widget.RecyclerView$4
<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$4 r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$4;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView$4 r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r6;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$4;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        return;
    }

    public void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView$4 r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        androidx.recyclerview.widget.RecyclerView $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$4;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        return;
    }

    public void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        androidx.recyclerview.widget.RecyclerView$4 r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5, $r7, $r8, $r10;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r6, $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$4;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $z0 = $r4.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z2 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r1, r2, r3);

        if $z2 == 0 goto label2;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

        goto label2;

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z1 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        if $z1 == 0 goto label2;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label2:
        return;
    }

    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$4 r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4;
        android.view.View $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$4;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)>($r5, $r4);

        return;
    }

androidx.recyclerview.widget.RecyclerView$5
<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getChildCount()
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: int getChildCount()>();

        return $i0;
    }

    public void addView(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void addView(android.view.View,int)>(r1, i0);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)>(r1);

        return;
    }

    public int indexOfChild(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        return $i0;
    }

    public void removeViewAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        int i0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: android.view.View getChildAt(int)>(i0);

        if r1 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)>(r1);

        virtualinvoke r1.<android.view.View: void clearAnimation()>();

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void removeViewAt(int)>(i0);

        return;
    }

    public android.view.View getChildAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        android.view.View $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: android.view.View getChildAt(int)>(i0);

        return $r2;
    }

    public void removeAllViews()
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        int i0, i1;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$5: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$5: android.view.View getChildAt(int)>(i1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)>(r1);

        virtualinvoke r1.<android.view.View: void clearAnimation()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void removeAllViews()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        return $r2;
    }

    public void attachViewToParent(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r10;
        androidx.recyclerview.widget.RecyclerView $r8, $r12;
        java.lang.String $r9, $r11;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called attach on a child which is not detached: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label1:
        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

     label2:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>($r12, r1, i0, r2);

        return;
    }

    public void detachViewFromParent(int)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        int i0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r9;
        androidx.recyclerview.widget.RecyclerView $r7, $r11;
        java.lang.String $r8, $r10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$5: android.view.View getChildAt(int)>(i0);

        if r1 == null goto label2;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called detach on an already detached child ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(256);

     label2:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)>($r11, i0);

        return;
    }

    public void onEnteredHiddenState(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.RecyclerView $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)>($r3);

     label1:
        return;
    }

    public void onLeftHiddenState(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$5 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.RecyclerView $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)>($r3);

     label1:
        return;
    }

androidx.recyclerview.widget.RecyclerView$6
<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        android.view.View $r4;
        androidx.recyclerview.widget.ChildHelper $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>(i0, 1);

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r4);

        if $z0 == 0 goto label2;

        return null;

     label2:
        return r1;
    }

    public void offsetPositionsForRemovingInvisible(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0, i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView $r1, $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)>(i0, i1, 1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = $r4.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout>;

        $i3 = $i2 + i1;

        $r4.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout> = $i3;

        return;
    }

    public void offsetPositionsForRemovingLaidOutOrNewView(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)>(i0, i1, 0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 1;

        return;
    }

    public void markViewHoldersUpdated(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0, i1;
        java.lang.Object r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)>(i0, i1, r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged> = 1;

        return;
    }

    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        androidx.recyclerview.widget.AdapterHelper$UpdateOp r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        r1 := @parameter0: androidx.recyclerview.widget.AdapterHelper$UpdateOp;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$6: void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)>(r1);

        return;
    }

    void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        androidx.recyclerview.widget.AdapterHelper$UpdateOp r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.recyclerview.widget.RecyclerView $r2, $r3, $r5, $r7, $r9, $r10, $r12, $r13;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r8, $r11, $r14;
        java.lang.Object $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        r1 := @parameter0: androidx.recyclerview.widget.AdapterHelper$UpdateOp;

        $i0 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int cmd>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label4;
            default: goto label5;
        };

     label1:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r14 = $r12.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $i8 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i7 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount>;

        virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)>($r13, $i8, $i7);

        goto label5;

     label2:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = $r9.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $i6 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i5 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)>($r10, $i6, $i5);

        goto label5;

     label3:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $i4 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount>;

        $r6 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.Object payload>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)>($r7, $i4, $i3, $r6);

        goto label5;

     label4:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $i2 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = r1.<androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)>($r3, $i2, $i1, 1);

     label5:
        return;
    }

    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        androidx.recyclerview.widget.AdapterHelper$UpdateOp r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        r1 := @parameter0: androidx.recyclerview.widget.AdapterHelper$UpdateOp;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$6: void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)>(r1);

        return;
    }

    public void offsetPositionsForAdd(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)>(i0, i1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 1;

        return;
    }

    public void offsetPositionsForMove(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$6 r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)>(i0, i1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 1;

        return;
    }

androidx.recyclerview.widget.RecyclerView$7
<androidx.recyclerview.widget.RecyclerView$7: int[] $SwitchMap$androidx$recyclerview$widget$RecyclerView$Adapter$StateRestorationPolicy>
    static void <clinit>()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.recyclerview.widget.RecyclerView$7: int[] $SwitchMap$androidx$recyclerview$widget$RecyclerView$Adapter$StateRestorationPolicy> = $r1;

     label1:
        $r3 = <androidx.recyclerview.widget.RecyclerView$7: int[] $SwitchMap$androidx$recyclerview$widget$RecyclerView$Adapter$StateRestorationPolicy>;

        $r2 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

     label4:
        $r5 = <androidx.recyclerview.widget.RecyclerView$7: int[] $SwitchMap$androidx$recyclerview$widget$RecyclerView$Adapter$StateRestorationPolicy>;

        $r4 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY>;

        $i2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r9 = $r7;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW>
<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY>
<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT>
<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES>
    public static androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[]) $r1;

        return $r2;
    }

    public static androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/recyclerview/widget/RecyclerView$Adapter$StateRestorationPolicy;", r0);

        $r2 = (androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r0, $r1, $r2, $r4, $r5, $r6;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $r3;

        $r0 = new androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        specialinvoke $r0.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: void <init>(java.lang.String,int)>("ALLOW", 0);

        <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW> = $r0;

        $r1 = new androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: void <init>(java.lang.String,int)>("PREVENT_WHEN_EMPTY", 1);

        <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY> = $r1;

        $r2 = new androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: void <init>(java.lang.String,int)>("PREVENT", 2);

        <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT> = $r2;

        $r3 = newarray (androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)[3];

        $r4 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW>;

        $r3[0] = $r4;

        $r5 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY>;

        $r3[1] = $r5;

        $r6 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT>;

        $r3[2] = $r6;

        <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES> = $r3;

        return;
    }

androidx.recyclerview.widget.RecyclerView$Adapter
<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>
<androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds>
<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy mStateRestorationPolicy>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable> = $r1;

        r0.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds> = 0;

        $r2 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW>;

        r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy mStateRestorationPolicy> = $r2;

        return;
    }

<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>
    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, java.util.List)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0;
        java.util.List r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>(r1, i0);

        return;
    }

    public int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0, r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter2: int;

        if r1 != r0 goto label1;

        return i0;

     label1:
        return -1;
    }

    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        android.view.ViewGroup r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2, r3;
        java.lang.Throwable r4, $r8;
        android.view.View $r5;
        android.view.ViewParent $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

     label1:
        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV CreateView");

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>(r1, i0);

        $r5 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewParent getParent()>();

        if $r6 == null goto label2;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewHolder views must not be attached when created. Ensure that you are not passing \'true\' to the attachToRoot parameter of LayoutInflater.inflate(..., boolean attachToRoot)");

        throw $r7;

     label2:
        r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType> = i0;

        r3 = r2;

     label3:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        return r3;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0, $r3;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0;
        boolean z0, $z1, $z2, $z3;
        android.view.ViewGroup$LayoutParams r2;
        android.view.View $r4;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r5;
        long $l1;
        java.util.List $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter>;

        if $r3 != null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        if z0 == 0 goto label4;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = i0;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z2 == 0 goto label3;

        $l1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)>(i0);

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId> = $l1;

     label3:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(1, 519);

        staticinvoke <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>("RV OnBindView");

     label4:
        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter> = r0;

        $r6 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)>(r1, i0, $r6);

        if z0 == 0 goto label6;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearPayload()>();

        $r4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r2 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = r2 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z1 == 0 goto label5;

        $r5 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r2;

        $r5.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label5:
        staticinvoke <androidx.core.os.TraceCompat: void endSection()>();

     label6:
        return;
    }

    public int getItemViewType(int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        return 0;
    }

    public void setHasStableIds(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        boolean z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasObservers()>();

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot change whether this adapter has stable IDs while the adapter has registered observers.");

        throw $r1;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds> = z0;

        return;
    }

    public long getItemId(int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        return -1L;
    }

<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>
    public final boolean hasStableIds()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds>;

        return $z0;
    }

    public void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return;
    }

    public boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return 0;
    }

    public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return;
    }

    public void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return;
    }

    public final boolean hasObservers()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: boolean hasObservers()>();

        return $z0;
    }

    public void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void registerObserver(java.lang.Object)>(r1);

        return;
    }

    public void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void unregisterObserver(java.lang.Object)>(r1);

        return;
    }

    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public final void notifyDataSetChanged()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyChanged()>();

        return;
    }

    public final void notifyItemChanged(int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int)>(i0, 1);

        return;
    }

    public final void notifyItemChanged(int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;
        java.lang.Object r1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int,java.lang.Object)>(i0, 1, r1);

        return;
    }

    public final void notifyItemRangeChanged(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int)>(i0, i1);

        return;
    }

    public final void notifyItemRangeChanged(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0, i1;
        java.lang.Object r1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int,java.lang.Object)>(i0, i1, r1);

        return;
    }

    public final void notifyItemInserted(int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeInserted(int,int)>(i0, 1);

        return;
    }

    public final void notifyItemMoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemMoved(int,int)>(i0, i1);

        return;
    }

    public final void notifyItemRangeInserted(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeInserted(int,int)>(i0, i1);

        return;
    }

    public final void notifyItemRemoved(int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeRemoved(int,int)>(i0, 1);

        return;
    }

    public final void notifyItemRangeRemoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeRemoved(int,int)>(i0, i1);

        return;
    }

    public void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy r1;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy mStateRestorationPolicy> = r1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyStateRestorationPolicyChanged()>();

        return;
    }

    public final androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy getStateRestorationPolicy()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy mStateRestorationPolicy>;

        return $r1;
    }

    boolean canRestoreState()
    {
        androidx.recyclerview.widget.RecyclerView$Adapter r0;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r1;
        int[] $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r2 = <androidx.recyclerview.widget.RecyclerView$7: int[] $SwitchMap$androidx$recyclerview$widget$RecyclerView$Adapter$StateRestorationPolicy>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy mStateRestorationPolicy>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        if $i2 <= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        return 1;
    }

androidx.recyclerview.widget.RecyclerView$AdapterDataObservable
    void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        specialinvoke r0.<android.database.Observable: void <init>()>();

        return;
    }

    public boolean hasObservers()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void notifyChanged()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onChanged()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void notifyStateRestorationPolicyChanged()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onStateRestorationPolicyChanged()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void notifyItemRangeChanged(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int,java.lang.Object)>(i0, i1, null);

        return;
    }

    public void notifyItemRangeChanged(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        int i0, i1, $i2, i3;
        java.lang.Object r1, $r4;
        java.util.ArrayList $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r5 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r4;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int,java.lang.Object)>(i0, i1, r1);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

    public void notifyItemRangeInserted(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeInserted(int,int)>(i0, i1);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

    public void notifyItemRangeRemoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeRemoved(int,int)>(i0, i1);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

    public void notifyItemMoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObservable r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeMoved(int,int,int)>(i0, i1, 1);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onChanged()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        return;
    }

    public void onItemRangeChanged(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onItemRangeChanged(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int)>(i0, i1);

        return;
    }

    public void onItemRangeInserted(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onItemRangeRemoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onItemRangeMoved(int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;
        int i0, i1, i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public void onStateRestorationPolicyChanged()
    {
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver;

        return;
    }

androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
<androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)>
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_LEFT>
<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_TOP>
<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_RIGHT>
<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_BOTTOM>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView, int)
    {
        androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0;
        android.widget.EdgeEffect $r2;
        android.content.Context $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        $r2 = new android.widget.EdgeEffect;

        $r3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r3);

        return $r2;
    }

androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()>
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int changeFlags>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r0, $r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>(r1, 0);

        return $r2;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, $i2, $i3, $i4;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i1 = virtualinvoke r2.<android.view.View: int getLeft()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left> = $i1;

        $i2 = virtualinvoke r2.<android.view.View: int getTop()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top> = $i2;

        $i3 = virtualinvoke r2.<android.view.View: int getRight()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right> = $i3;

        $i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom> = $i4;

        return r0;
    }

androidx.recyclerview.widget.RecyclerView$ItemAnimator
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_CHANGED>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_REMOVED>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_INVALIDATED>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_MOVED>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_APPEARED_IN_PRE_LAYOUT>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners> = $r1;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration> = 120L;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration> = 120L;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration> = 250L;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration> = 250L;

        return;
    }

    public long getMoveDuration()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $l0 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration>;

        return $l0;
    }

    public void setMoveDuration(long)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        l0 := @parameter0: long;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration> = l0;

        return;
    }

    public long getAddDuration()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $l0 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration>;

        return $l0;
    }

    public void setAddDuration(long)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        l0 := @parameter0: long;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration> = l0;

        return;
    }

    public long getRemoveDuration()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $l0 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration>;

        return $l0;
    }

    public void setRemoveDuration(long)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        l0 := @parameter0: long;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration> = l0;

        return;
    }

    public long getChangeDuration()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $l0 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration>;

        return $l0;
    }

    public void setChangeDuration(long)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        long l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        l0 := @parameter0: long;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration> = l0;

        return;
    }

    void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener> = r1;

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$ViewHolder, int, java.util.List)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0;
        java.util.List r3;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        $r4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()>();

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        return $r5;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()>();

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        return $r4;
    }

<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>
    static int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, i1, $i2, $i3, i4;
        boolean $z0;

        r0 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        i4 = $i2 & 14;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $i3 = i4 & 4;

        if $i3 != 0 goto label2;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()>();

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

        if i0 == -1 goto label2;

        if i1 == -1 goto label2;

        if i0 == i1 goto label2;

        i4 = i4 | 2048;

     label2:
        return i4;
    }

<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void runPendingAnimations()>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()>
<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()>
    public final void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener>;

        interfaceinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label1:
        return;
    }

    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return;
    }

    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        return;
    }

    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return;
    }

    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener r1;
        boolean z0;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener;

        z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if r1 == null goto label2;

        if z0 != 0 goto label1;

        interfaceinvoke r1.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        return z0;
    }

    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        return 1;
    }

    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, java.util.List)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.List r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        return $z0;
    }

    public final void dispatchAnimationsFinished()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2, $r3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) $r4;

        interfaceinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimator r0;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimator;

        $r1 = new androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: void <init>()>();

        return $r1;
    }

androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener
<androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, $r2, $r7;
        android.view.View $r3, $r5;
        androidx.recyclerview.widget.RecyclerView $r4, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(1);

        $r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder>;

        if $r2 == null goto label1;

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder>;

        if $r7 != null goto label1;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

     label1:
        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        $z2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldBeKeptAsChild()>();

        if $z2 != 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)>($r3);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r5, 0);

     label2:
        return;
    }

androidx.recyclerview.widget.RecyclerView$ItemDecoration
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDraw(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;
        androidx.recyclerview.widget.RecyclerView$State r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>(r1, r2);

        return;
    }

    public void onDraw(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDrawOver(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;
        androidx.recyclerview.widget.RecyclerView$State r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>(r1, r2);

        return;
    }

    public void onDrawOver(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void getItemOffsets(android.graphics.Rect, int, androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Rect r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

    public void getItemOffsets(android.graphics.Rect, android.view.View, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$ItemDecoration r0;
        android.graphics.Rect r1;
        android.view.View r2;
        androidx.recyclerview.widget.RecyclerView r3;
        androidx.recyclerview.widget.RecyclerView$State r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ItemDecoration;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView;

        r4 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r5;

        $i0 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)>(r1, $i0, r3);

        return;
    }

androidx.recyclerview.widget.RecyclerView$LayoutManager$1
<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.view.View getChildAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;
        android.view.View $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        return $r2;
    }

    public int getParentStart()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        return $i0;
    }

    public int getParentEnd()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getChildStart(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)>(r1);

        $i1 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getChildEnd(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)>(r1);

        $i1 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i2 = $i0 + $i1;

        return $i2;
    }

androidx.recyclerview.widget.RecyclerView$LayoutManager$2
<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.view.View getChildAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;
        android.view.View $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        return $r2;
    }

    public int getParentStart()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        return $i0;
    }

    public int getParentEnd()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getChildStart(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)>(r1);

        $i1 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int topMargin>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getChildEnd(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)>(r1);

        $i1 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i2 = $i0 + $i1;

        return $i2;
    }

androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
<androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation>
<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount>
<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout>
<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.recyclerview.widget.RecyclerView$LayoutManager
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$1 $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$2 $r2;
        androidx.recyclerview.widget.ViewBoundsCheck $r3, $r5;
        androidx.recyclerview.widget.ViewBoundsCheck$Callback $r4, $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.recyclerview.widget.RecyclerView$LayoutManager$1;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager$1: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback> = $r1;

        $r2 = new androidx.recyclerview.widget.RecyclerView$LayoutManager$2;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager$2: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback> = $r2;

        $r3 = new androidx.recyclerview.widget.ViewBoundsCheck;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback>;

        specialinvoke $r3.<androidx.recyclerview.widget.ViewBoundsCheck: void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback)>($r4);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck> = $r3;

        $r5 = new androidx.recyclerview.widget.ViewBoundsCheck;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback>;

        specialinvoke $r5.<androidx.recyclerview.widget.ViewBoundsCheck: void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback)>($r6);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck> = $r5;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = 1;

        return;
    }

    void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.ChildHelper $r2;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        if r1 != null goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight> = 0;

        goto label2;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView> = r1;

        $r2 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper> = $r2;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth> = $i0;

        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight> = $i1;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode> = 1073741824;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode> = 1073741824;

        return;
    }

    void setMeasureSpecs(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth> = $i2;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode> = $i3;

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode>;

        if $i4 != 0 goto label1;

        $z1 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z1 != 0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth> = 0;

     label1:
        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight> = $i5;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode> = $i6;

        $i7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode>;

        if $i7 != 0 goto label2;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight> = 0;

     label2:
        return;
    }

    void setMeasuredDimensionFromChildren(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        android.view.View r1;
        android.graphics.Rect r2, $r4, $r6;
        androidx.recyclerview.widget.RecyclerView $r3, $r5, $r7, $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        if i2 != 0 goto label1;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;

     label1:
        i7 = 2147483647;

        i8 = 2147483647;

        i9 = -2147483648;

        i10 = -2147483648;

        i11 = 0;

     label2:
        if i11 >= i2 goto label7;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i11);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r2 = $r7.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r1, r2);

        $i3 = r2.<android.graphics.Rect: int left>;

        if $i3 >= i7 goto label3;

        i7 = r2.<android.graphics.Rect: int left>;

     label3:
        $i4 = r2.<android.graphics.Rect: int right>;

        if $i4 <= i9 goto label4;

        i9 = r2.<android.graphics.Rect: int right>;

     label4:
        $i5 = r2.<android.graphics.Rect: int top>;

        if $i5 >= i8 goto label5;

        i8 = r2.<android.graphics.Rect: int top>;

     label5:
        $i6 = r2.<android.graphics.Rect: int bottom>;

        if $i6 <= i10 goto label6;

        i10 = r2.<android.graphics.Rect: int bottom>;

     label6:
        i11 = i11 + 1;

        goto label2;

     label7:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(i7, i8, i9, i10);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)>($r6, i0, i1);

        return;
    }

    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i8 + $i9;

        $i10 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i3 = $i12 + $i13;

        $i14 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()>();

        i4 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i0, i2, $i14);

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()>();

        i5 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i1, i3, $i15);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)>(i4, i5);

        return;
    }

    public void requestLayout()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }

    public void assertInLayoutOrScroll(java.lang.String)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public static int chooseSize(int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        lookupswitch(i3)
        {
            case -2147483648: goto label2;
            case 0: goto label3;
            case 1073741824: goto label1;
            default: goto label3;
        };

     label1:
        return i4;

     label2:
        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i5);

        return $i6;

     label3:
        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        return $i7;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public void setAutoMeasureEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = z0;

        return;
    }

    public boolean isAutoMeasureEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>;

        return $z0;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public final void setItemPrefetchEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean z0, $z1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        androidx.recyclerview.widget.RecyclerView$Recycler $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        if z0 == $z1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = z0;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label1:
        return;
    }

    public final boolean isItemPrefetchEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        return $z0;
    }

    public void collectAdjacentPrefetchPositions(int, int, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }

    public void collectInitialPrefetchPositions(int, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }

    void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>(r1);

        return;
    }

    void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)>(r1, r2);

        return;
    }

    public boolean isAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow>;

        return $z0;
    }

    public void postOnAnimation(java.lang.Runnable)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        android.view.View r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r4 = (android.view.View) $r3;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r4, r1);

     label1:
        return;
    }

    public boolean removeCallbacks(java.lang.Runnable)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)>(r1);

        return;
    }

    public boolean getClipToPadding()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = $r2.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");

        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return;
    }

<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()>
    public boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r5 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r1;

        specialinvoke $r5.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r3 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public int scrollHorizontallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public boolean canScrollHorizontally()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public boolean canScrollVertically()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public void scrollToPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");

        return;
    }

    public void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r1 == $r3 goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller> = r1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)>($r7, r0);

        return;
    }

    public boolean isSmoothScrolling()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int getLayoutDirection()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        int $i0;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r2 = (android.view.View) $r1;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r2);

        return $i0;
    }

    public void endAnimation(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r3, $r5;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r6 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)>($r6);

     label1:
        return;
    }

    public void addDisappearingView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addDisappearingView(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 1);

        return;
    }

    public void addView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addView(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 0);

        return;
    }

    private void addViewInt(android.view.View, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0, $r18;
        android.view.View r1, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r3;
        int i0, $i1, i2;
        androidx.recyclerview.widget.RecyclerView $r4, $r11, $r17, $r22, $r24, $r29;
        androidx.recyclerview.widget.ViewInfoStore $r5, $r30;
        android.view.ViewGroup$LayoutParams $r6, $r8;
        androidx.recyclerview.widget.ChildHelper $r7, $r12, $r16, $r28;
        android.view.ViewParent $r10;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller $r13, $r14, $r15;
        java.lang.IllegalStateException $r19;
        java.lang.StringBuilder $r20, $r21, $r23, $r26;
        java.lang.String $r25, $r27;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i2 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if z0 != 0 goto label01;

        $z5 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z5 == 0 goto label02;

     label01:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ViewInfoStore: void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        goto label03;

     label02:
        $r29 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r30 = $r29.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r30.<androidx.recyclerview.widget.ViewInfoStore: void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label03:
        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r6;

        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z1 != 0 goto label04;

        $z3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z3 == 0 goto label07;

     label04:
        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z2 == 0 goto label05;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()>();

        goto label06;

     label05:
        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

     label06:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r7.<androidx.recyclerview.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i2, $r8, 0);

        goto label12;

     label07:
        $r10 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r10 != $r11 goto label11;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r16.<androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        if i2 != -1 goto label08;

        $r28 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r28.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

     label08:
        if i0 != -1 goto label09;

        $r19 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added View has RecyclerView as parent but view is not a real child. Unfiltered index:");

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i1 = virtualinvoke $r22.<androidx.recyclerview.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r25 = virtualinvoke $r24.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r19;

     label09:
        if i0 == i2 goto label10;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r18 = $r17.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)>(i0, i2);

     label10:
        goto label12;

     label11:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r12.<androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,int,boolean)>(r1, i2, 0);

        r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r13 == null goto label12;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z4 = virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z4 == 0 goto label12;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r15.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)>(r1);

     label12:
        $z6 = r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>;

        if $z6 == 0 goto label13;

        $r9 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r9.<android.view.View: void invalidate()>();

        r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

     label13:
        return;
    }

    public void removeView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.ChildHelper $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: void removeView(android.view.View)>(r1);

        return;
    }

    public void removeViewAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View r1;
        androidx.recyclerview.widget.ChildHelper $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: void removeViewAt(int)>(i0);

     label1:
        return;
    }

    public void removeAllViews()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.ChildHelper $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r1.<androidx.recyclerview.widget.ChildHelper: void removeViewAt(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public int getBaseline()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return -1;
    }

    public int getPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        return $i0;
    }

    public int getItemViewType(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        return $i0;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1, r2;
        androidx.recyclerview.widget.RecyclerView $r3, $r4;
        androidx.recyclerview.widget.ChildHelper $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if r2 != null goto label2;

        return null;

     label2:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>(r2);

        if $z0 == 0 goto label3;

        return null;

     label3:
        return r2;
    }

    public android.view.View findViewByPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1, $i2, i3;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$State $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label5;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i3);

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 != null goto label2;

        goto label4;

     label2:
        $i2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i2 != i0 goto label4;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label4;

     label3:
        return r1;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return null;
    }

    public void detachView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        androidx.recyclerview.widget.ChildHelper $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        if i0 < 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, r1);

     label1:
        return;
    }

    public void detachViewAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, $r1);

        return;
    }

    private void detachViewInternal(int, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View r1;
        androidx.recyclerview.widget.ChildHelper $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: void detachViewFromParent(int)>(i0);

        return;
    }

    public void attachView(android.view.View, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView $r4, $r7;
        androidx.recyclerview.widget.ViewInfoStore $r5, $r8;
        androidx.recyclerview.widget.ChildHelper $r6;
        android.view.ViewGroup$LayoutParams r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r8.<androidx.recyclerview.widget.ViewInfoStore: void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

        goto label2;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<androidx.recyclerview.widget.ViewInfoStore: void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

     label2:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $z1 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        r9 = (android.view.ViewGroup$LayoutParams) r2;

        virtualinvoke $r6.<androidx.recyclerview.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, r9, $z1);

        return;
    }

    public void attachView(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1, i0, $r3);

        return;
    }

    public void attachView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r1, -1);

        return;
    }

    public void removeDetachedView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>(r1, 0);

        return;
    }

    public void moveView(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8;
        androidx.recyclerview.widget.RecyclerView $r6;
        java.lang.String $r7, $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move a child from non-existing index:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r7 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r1, i1);

        return;
    }

    public void detachAndScrapView(android.view.View, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;
        int i0;
        androidx.recyclerview.widget.ChildHelper $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r3.<androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)>(r2, i0, r1);

        return;
    }

    public void detachAndScrapViewAt(int, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i0, r2);

        return;
    }

    public void removeAndRecycleView(android.view.View, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)>(r1);

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r1);

        return;
    }

    public void removeAndRecycleViewAt(int, androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r2);

        return;
    }

    public int getChildCount()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.ChildHelper $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: int getChildCount()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public android.view.View getChildAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)>(i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public int getWidthMode()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode>;

        return $i0;
    }

    public int getHeightMode()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode>;

        return $i0;
    }

    public int getWidth()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight>;

        return $i0;
    }

    public int getPaddingLeft()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingTop()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingRight()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingBottom()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingStart()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;
        android.view.View r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = (android.view.View) $r2;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)>(r3);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingEnd()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;
        android.view.View r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = (android.view.View) $r2;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)>(r3);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean isFocused()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean hasFocus()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.view.View getFocusedChild()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.ChildHelper $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: android.view.View getFocusedChild()>();

        if r1 == null goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        return r1;
    }

    public int getItemCount()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, $r4;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        r1 = $r4;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        goto label4;

     label3:
        $i0 = 0;

     label4:
        return $i0;
    }

    public void offsetChildrenHorizontal(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)>(i0);

     label1:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)>(i0);

     label1:
        return;
    }

    public void ignoreView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        android.view.ViewParent $r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r8, $r12, $r13;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.String $r9, $r11;
        int $i0;
        androidx.recyclerview.widget.ViewInfoStore $r14;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r3 != $r4 goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        if $i0 != -1 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View should be fully attached to be ignored");

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r9 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label2:
        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(128);

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r14 = $r13.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r14.<androidx.recyclerview.widget.ViewInfoStore: void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        return;
    }

    public void stopIgnoringView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void stopIgnoring()>();

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void resetInternal()>();

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(4);

        return;
    }

    public void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0, i1;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i1, r2);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler, int, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0;
        android.view.View r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.RecyclerView $r4, $r6;
        androidx.recyclerview.widget.RecyclerView$Adapter $r5;
        androidx.recyclerview.widget.ViewInfoStore $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.View;

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z3 != 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void scrapView(android.view.View)>(r2);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<androidx.recyclerview.widget.ViewInfoStore: void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

     label3:
        return;
    }

    void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int i0, i1;
        android.view.View r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5, $r7, $r9;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r6, $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: int getScrapCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label6;

        r2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)>(i1);

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label5;

     label2:
        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $z1 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>(r2, 0);

     label3:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r6 == null goto label4;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r3);

     label4:
        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(1);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)>(r2);

     label5:
        i1 = i1 + -1;

        goto label1;

     label6:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void clearScrap()>();

        if i0 <= 0 goto label7;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label7:
        return;
    }

    public void measureChild(android.view.View, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.recyclerview.widget.RecyclerView $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i22 := @parameter1: int;

        i23 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        $i3 = r3.<android.graphics.Rect: int left>;

        $i2 = r3.<android.graphics.Rect: int right>;

        $i4 = $i3 + $i2;

        i24 = i22 + $i4;

        $i6 = r3.<android.graphics.Rect: int top>;

        $i5 = r3.<android.graphics.Rect: int bottom>;

        $i7 = $i6 + $i5;

        i25 = i23 + $i7;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i12 = $i10 + $i11;

        $i13 = $i12 + i24;

        $i14 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i8, $i9, $i13, $i14, $z0);

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i16 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i17 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i18 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i19 = $i17 + $i18;

        $i20 = $i19 + i25;

        $i21 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i15, $i16, $i20, $i21, $z1);

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

        if $z2 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i1);

     label1:
        return;
    }

    boolean shouldReMeasureChild(android.view.View, int, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int width>;

        $z1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, i0, $i3);

        if $z1 == 0 goto label1;

        $i4 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int height>;

        $z2 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i4, i1, $i5);

        if $z2 != 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    boolean shouldMeasureChild(android.view.View, int, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z1 == 0 goto label1;

        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i3 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int width>;

        $z2 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, i0, $i3);

        if $z2 == 0 goto label1;

        $i4 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i5 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int height>;

        $z3 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i4, i1, $i5);

        if $z3 != 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isMeasurementCacheEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        return $z0;
    }

    public void setMeasurementCacheEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = z0;

        return;
    }

    private static boolean isMeasurementUpToDate(int, int, int)
    {
        int i0, i1, i2, i3, i4;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 <= 0 goto label1;

        if i0 == i2 goto label1;

        return 0;

     label1:
        lookupswitch(i3)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            case 1073741824: goto label6;
            default: goto label9;
        };

     label2:
        return 1;

     label3:
        if i4 < i0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;

     label6:
        if i4 != i0 goto label7;

        $z1 = 1;

        goto label8;

     label7:
        $z1 = 0;

     label8:
        return $z1;

     label9:
        return 0;
    }

    public void measureChildWithMargins(android.view.View, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.recyclerview.widget.RecyclerView $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i30 := @parameter1: int;

        i31 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        $i3 = r3.<android.graphics.Rect: int left>;

        $i2 = r3.<android.graphics.Rect: int right>;

        $i4 = $i3 + $i2;

        i32 = i30 + $i4;

        $i6 = r3.<android.graphics.Rect: int top>;

        $i5 = r3.<android.graphics.Rect: int bottom>;

        $i7 = $i6 + $i5;

        i33 = i31 + $i7;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i13 = $i10 + $i11;

        $i12 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i15 = $i13 + $i12;

        $i14 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i16 = $i15 + $i14;

        $i17 = $i16 + i32;

        $i18 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i8, $i9, $i17, $i18, $z0);

        $i19 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i20 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i21 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i22 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i24 = $i21 + $i22;

        $i23 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int topMargin>;

        $i26 = $i24 + $i23;

        $i25 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i27 = $i26 + $i25;

        $i28 = $i27 + i33;

        $i29 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i19, $i20, $i28, $i29, $z1);

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

        if $z2 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i1);

     label1:
        return;
    }

    public static int getChildMeasureSpec(int, int, int, boolean)
    {
        int i0, i1, i2, i3, $i4, i5, i6, $i7;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i4 = i0 - i1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        i5 = 0;

        i6 = 0;

        if z0 == 0 goto label2;

        if i2 < 0 goto label1;

        i5 = i2;

        i6 = 1073741824;

        goto label5;

     label1:
        i5 = 0;

        i6 = 0;

        goto label5;

     label2:
        if i2 < 0 goto label3;

        i5 = i2;

        i6 = 1073741824;

        goto label5;

     label3:
        if i2 != -1 goto label4;

        i5 = i3;

        i6 = 1073741824;

        goto label5;

     label4:
        if i2 != -2 goto label5;

        i5 = i3;

        i6 = -2147483648;

     label5:
        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, i6);

        return $i7;
    }

    public static int getChildMeasureSpec(int, int, int, int, boolean)
    {
        int i0, i1, i2, i3, i4, $i5, i6, i7, $i8;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i5 = i0 - i2;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        i6 = 0;

        i7 = 0;

        if z0 == 0 goto label06;

        if i3 < 0 goto label01;

        i6 = i3;

        i7 = 1073741824;

        goto label11;

     label01:
        if i3 != -1 goto label05;

        lookupswitch(i1)
        {
            case -2147483648: goto label02;
            case 0: goto label03;
            case 1073741824: goto label02;
            default: goto label04;
        };

     label02:
        i6 = i4;

        i7 = i1;

        goto label04;

     label03:
        i6 = 0;

        i7 = 0;

     label04:
        goto label11;

     label05:
        if i3 != -2 goto label11;

        i6 = 0;

        i7 = 0;

        goto label11;

     label06:
        if i3 < 0 goto label07;

        i6 = i3;

        i7 = 1073741824;

        goto label11;

     label07:
        if i3 != -1 goto label08;

        i6 = i4;

        i7 = i1;

        goto label11;

     label08:
        if i3 != -2 goto label11;

        i6 = i4;

        if i1 == -2147483648 goto label09;

        if i1 != 1073741824 goto label10;

     label09:
        i7 = -2147483648;

        goto label11;

     label10:
        i7 = 0;

     label11:
        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, i7);

        return $i8;
    }

    public int getDecoratedMeasuredWidth(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int right>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getDecoratedMeasuredHeight(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = r2.<android.graphics.Rect: int top>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public void layoutDecorated(android.view.View, int, int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i11 = i0 + $i4;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i10 = i1 + $i5;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i9 = i2 - $i6;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        $i8 = i3 - $i7;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, $i10, $i9, $i8);

        return;
    }

    public void layoutDecoratedWithMargins(android.view.View, int, int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        r3 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $i6 = i0 + $i4;

        $i5 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i19 = $i6 + $i5;

        $i7 = r3.<android.graphics.Rect: int top>;

        $i9 = i1 + $i7;

        $i8 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int topMargin>;

        $i18 = $i9 + $i8;

        $i10 = r3.<android.graphics.Rect: int right>;

        $i12 = i2 - $i10;

        $i11 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i17 = $i12 - $i11;

        $i13 = r3.<android.graphics.Rect: int bottom>;

        $i15 = i3 - $i13;

        $i14 = r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i16 = $i15 - $i14;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i19, $i18, $i17, $i16);

        return;
    }

    public void getTransformedBoundingBox(android.view.View, boolean, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        boolean z0, $z1;
        android.graphics.Rect r2, r8;
        android.graphics.RectF r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        androidx.recyclerview.widget.RecyclerView $r4, $r5;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r7;
        android.graphics.Matrix r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r6;

        r8 = $r7.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i6 = r8.<android.graphics.Rect: int left>;

        $i8 = neg $i6;

        $i7 = r8.<android.graphics.Rect: int top>;

        $i9 = neg $i7;

        $i10 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i11 = r8.<android.graphics.Rect: int right>;

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i14 = r8.<android.graphics.Rect: int bottom>;

        $i15 = $i13 + $i14;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i8, $i9, $i12, $i15);

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r1.<android.view.View: int getHeight()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r4 == null goto label3;

        r9 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        if r9 == null goto label3;

        $z1 = virtualinvoke r9.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 != 0 goto label3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = $r5.<androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF>;

        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.Rect)>(r2);

        virtualinvoke r9.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f0 = r3.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i2 = (int) $d1;

        $f1 = r3.<android.graphics.RectF: float top>;

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i3 = (int) $d3;

        $f2 = r3.<android.graphics.RectF: float right>;

        $d4 = (double) $f2;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i4 = (int) $d5;

        $f3 = r3.<android.graphics.RectF: float bottom>;

        $d6 = (double) $f3;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $i5 = (int) $d7;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i3, $i4, $i5);

     label3:
        $i16 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i17 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i16, $i17);

        return;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>(r1, r2);

        return;
    }

    public int getDecoratedLeft(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedTop(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedRight(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getDecoratedBottom(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void calculateItemDecorationsForChild(android.view.View, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2, r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r4 != null goto label1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        return;
    }

    public int getTopDecorationHeight(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int top>;

        return $i0;
    }

    public int getBottomDecorationHeight(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public int getLeftDecorationWidth(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getRightDecorationWidth(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int right>;

        return $i0;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;
        androidx.recyclerview.widget.RecyclerView$State r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$Recycler;

        r3 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        return null;
    }

    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return null;
    }

    private int[] getChildRectangleOnScreenScrollAmount(android.view.View, android.graphics.Rect)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        int[] r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, $i38;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 = newarray (int)[2];

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i13 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i14 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i13 - $i14;

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i16 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i3 = $i15 - $i16;

        $i17 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i18 = r2.<android.graphics.Rect: int left>;

        $i19 = $i17 + $i18;

        $i20 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i4 = $i19 - $i20;

        $i21 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i22 = r2.<android.graphics.Rect: int top>;

        $i23 = $i21 + $i22;

        $i24 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i5 = $i23 - $i24;

        $i25 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        i6 = i4 + $i25;

        $i26 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        i7 = i5 + $i26;

        $i27 = i4 - i0;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i27);

        $i28 = i5 - i1;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i28);

        $i29 = i6 - i2;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i29);

        $i30 = i7 - i3;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i30);

        $i31 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i31 != 1 goto label3;

        if i10 == 0 goto label1;

        $i35 = i10;

        goto label2;

     label1:
        $i34 = i6 - i2;

        $i35 = staticinvoke <java.lang.Math: int max(int,int)>(i8, $i34);

     label2:
        i36 = $i35;

        goto label6;

     label3:
        if i8 == 0 goto label4;

        $i37 = i8;

        goto label5;

     label4:
        $i32 = i4 - i0;

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>($i32, i10);

     label5:
        i36 = $i37;

     label6:
        if i9 == 0 goto label7;

        $i38 = i9;

        goto label8;

     label7:
        $i33 = i5 - i1;

        $i38 = staticinvoke <java.lang.Math: int min(int,int)>($i33, i11);

     label8:
        i12 = $i38;

        r3[0] = i36;

        r3[1] = i12;

        return r3;
    }

    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.View r2;
        android.graphics.Rect r3;
        boolean z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>(r1, r2, r3, z0, 0);

        return $z1;
    }

    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.View r2;
        android.graphics.Rect r3;
        boolean z0, z1, $z2;
        int[] r4;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)>(r2, r3);

        i0 = r4[0];

        i1 = r4[1];

        if z1 == 0 goto label1;

        $z2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)>(r1, i0, i1);

        if $z2 == 0 goto label5;

     label1:
        if i0 != 0 goto label2;

        if i1 == 0 goto label5;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>(i0, i1);

        goto label4;

     label3:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>(i0, i1);

     label4:
        return 1;

     label5:
        return 0;
    }

    public boolean isViewPartiallyVisible(android.view.View, boolean, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        short s0;
        androidx.recyclerview.widget.ViewBoundsCheck $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        s0 = 24579;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $z3 = virtualinvoke $r2.<androidx.recyclerview.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)>(r1, s0);

        if $z3 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $z4 = virtualinvoke $r3.<androidx.recyclerview.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)>(r1, s0);

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z2 = $z5;

        if z0 == 0 goto label3;

        return z2;

     label3:
        if z2 != 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        return $z6;
    }

    private boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1, $r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.View r2;
        android.graphics.Rect r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.view.View getFocusedChild()>();

        if r2 != null goto label1;

        return 0;

     label1:
        i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i4 = $i6 - $i7;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i5 = $i8 - $i9;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r3 = $r4.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r2, r3);

        $i10 = r3.<android.graphics.Rect: int left>;

        $i11 = $i10 - i0;

        if $i11 >= i4 goto label2;

        $i12 = r3.<android.graphics.Rect: int right>;

        $i13 = $i12 - i0;

        if $i13 <= i2 goto label2;

        $i14 = r3.<android.graphics.Rect: int top>;

        $i15 = $i14 - i1;

        if $i15 >= i5 goto label2;

        $i16 = r3.<android.graphics.Rect: int bottom>;

        $i17 = $i16 - i1;

        if $i17 > i3 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView, android.view.View, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.View r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.View;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State, android.view.View, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3, r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.View;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)>(r1, r3, r4);

        return $z0;
    }

    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Adapter;

        return;
    }

    public boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        java.util.ArrayList r2;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return 0;
    }

    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;
        java.lang.Object r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)>(r1, i0, i1);

        return;
    }

    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView, int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;
    }

    public void setMeasuredDimension(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)>($r1, i0, i1);

        return;
    }

    public int getMinimumWidth()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        int $i0;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r2 = (android.view.View) $r1;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)>(r2);

        return $i0;
    }

    public int getMinimumHeight()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        int $i0;
        android.view.View r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r2 = (android.view.View) $r1;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>(r2);

        return $i0;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return null;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.os.Parcelable r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.os.Parcelable;

        return;
    }

    void stopSmoothScroller()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        return;
    }

    void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 != r1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller> = null;

     label1:
        return;
    }

    public void onScrollStateChanged(int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    public void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        android.view.View r2;
        int $i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)>(i1, r1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat r4;
        androidx.recyclerview.widget.RecyclerView $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z2 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z2 == 0 goto label2;

     label1:
        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(8192);

        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label2:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z3 != 0 goto label3;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(4096);

        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label4:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $z4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        r4 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>($i0, $i1, $z4, $i2);

        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>(r4);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.accessibility.AccessibilityEvent r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5, $r6, $r8, $r10, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.RecyclerView$Adapter $r7, $r9;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r4 == null goto label1;

        if r3 != null goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 != 0 goto label3;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 != 0 goto label3;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z2 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z2 != 0 goto label3;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z4);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r7 == null goto label6;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i0);

     label6:
        return;
    }

    void onInitializeAccessibilityNodeInfoForItem(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1, $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        androidx.recyclerview.widget.ChildHelper $r5;
        androidx.recyclerview.widget.RecyclerView $r6, $r7;
        androidx.recyclerview.widget.RecyclerView$State $r8;
        androidx.recyclerview.widget.RecyclerView$Recycler $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        $r4 = r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z1 = virtualinvoke $r5.<androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)>($r4);

        if $z1 != 0 goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r9 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($r9, $r8, r1, r2);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        return;
    }

    public void requestSimpleAnimationsInNextLayout()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 1;

        return;
    }

    public int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        return -1;
    }

    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        return -1;
    }

    public boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        return 0;
    }

    boolean performAccessibilityAction(int, android.os.Bundle)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.os.Bundle r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r4;
        androidx.recyclerview.widget.RecyclerView$Recycler $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>($r5, $r4, i0, r1);

        return $z0;
    }

    public boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, android.os.Bundle)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;
        android.os.Bundle r3;
        android.graphics.Rect r4, $r6;
        androidx.recyclerview.widget.RecyclerView $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        android.graphics.Matrix $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r5 != null goto label1;

        return 0;

     label1:
        i15 = 0;

        i16 = 0;

        i17 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()>();

        i18 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()>();

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r4 = $r6;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke $r8.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label2;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z5 = virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView: boolean getGlobalVisibleRect(android.graphics.Rect)>(r4);

        if $z5 == 0 goto label2;

        i17 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        i18 = virtualinvoke r4.<android.graphics.Rect: int width()>();

     label2:
        lookupswitch(i0)
        {
            case 4096: goto label5;
            case 8192: goto label3;
            default: goto label7;
        };

     label3:
        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 == 0 goto label4;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i6 = i17 - $i5;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i8 = $i6 - $i7;

        i15 = neg $i8;

     label4:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z2 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z2 == 0 goto label7;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i2 = i18 - $i1;

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i4 = $i2 - $i3;

        i16 = neg $i4;

        goto label7;

     label5:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z3 == 0 goto label6;

        $i12 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i13 = i17 - $i12;

        $i14 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i15 = $i13 - $i14;

     label6:
        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z4 = virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z4 == 0 goto label7;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i10 = i18 - $i9;

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i16 = $i10 - $i11;

     label7:
        if i15 != 0 goto label8;

        if i16 != 0 goto label8;

        return 0;

     label8:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>(i16, i15, null, -2147483648, 1);

        return 1;
    }

    boolean performAccessibilityActionForItem(android.view.View, int, android.os.Bundle)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.os.Bundle r2;
        androidx.recyclerview.widget.RecyclerView $r3, $r4;
        androidx.recyclerview.widget.RecyclerView$State $r5;
        androidx.recyclerview.widget.RecyclerView$Recycler $r6;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r6 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)>($r6, $r5, r1, i0, r2);

        return $z0;
    }

    public boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, android.view.View, int, android.os.Bundle)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        return 0;
    }

    public static androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties r2, $r4;
        android.content.res.TypedArray r3;
        int[] $r5;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = new androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties;

        specialinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: void <init>()>();

        r2 = $r4;

        $r5 = <androidx.recyclerview.R$styleable: int[] RecyclerView>;

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r5, i0, i1);

        $i2 = <androidx.recyclerview.R$styleable: int RecyclerView_android_orientation>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i2, 1);

        r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation> = $i3;

        $i4 = <androidx.recyclerview.R$styleable: int RecyclerView_spanCount>;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i4, 1);

        r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount> = $i5;

        $i6 = <androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout>;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i6, 0);

        r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout> = $z0;

        $i7 = <androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i7, 0);

        r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd> = $z1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r2;
    }

    void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i1, $i3);

        return;
    }

    boolean shouldMeasureTwice()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        return 0;
    }

    boolean hasFlexibleChildInBothOrientations()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutManager r0;
        int i0, $i1, $i2, i3;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i3);

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i1 >= 0 goto label2;

        $i2 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 >= 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

androidx.recyclerview.widget.RecyclerView$LayoutParams
<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>
<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>
<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>
<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Rect $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets> = $r3;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;
    }

    public void <init>(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        int i0, i1;
        android.graphics.Rect $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(i0, i1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets> = $r1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;
    }

    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        android.view.ViewGroup$MarginLayoutParams r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets> = $r2;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;
    }

    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        android.view.ViewGroup$LayoutParams r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets> = $r2;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;
    }

    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0, r1;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        r4 = (android.view.ViewGroup$LayoutParams) r1;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r4);

        r3 = new android.graphics.Rect;

        specialinvoke r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets> = r3;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;
    }

    public boolean viewNeedsUpdate()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()>();

        return $z0;
    }

    public boolean isViewInvalid()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        return $z0;
    }

    public boolean isItemRemoved()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        return $z0;
    }

    public boolean isItemChanged()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        return $z0;
    }

    public int getViewPosition()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getPosition()>();

        return $i0;
    }

    public int getViewLayoutPosition()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        return $i0;
    }

    public int getViewAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getBindingAdapterPosition()>();

        return $i0;
    }

    public int getAbsoluteAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

        return $i0;
    }

    public int getBindingAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getBindingAdapterPosition()>();

        return $i0;
    }

androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
<androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)>
androidx.recyclerview.widget.RecyclerView$OnFlingListener
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$OnFlingListener r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$OnFlingListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.recyclerview.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)>
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>
<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>
<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)>
androidx.recyclerview.widget.RecyclerView$OnScrollListener
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView, int)
    {
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        return;
    }

    public void onScrolled(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$OnScrollListener r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$OnScrollListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

androidx.recyclerview.widget.RecyclerView$Orientation
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs>
    void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap> = $r1;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap> = 5;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs> = 0L;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs> = 0L;

        return;
    }

androidx.recyclerview.widget.RecyclerView$RecycledViewPool
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int DEFAULT_MAX_SCRAP>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing>
<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: java.util.Set mAttachedAdaptersForPoolingContainer>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        android.util.SparseArray $r1;
        java.util.IdentityHashMap $r2;
        java.util.Set $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap> = $r1;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing> = 0;

        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: java.util.Set mAttachedAdaptersForPoolingContainer> = $r3;

        return;
    }

    public void clear()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r1;
        java.util.Iterator r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        android.util.SparseArray $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6, $r9;
        java.util.ArrayList $r7, $r8;
        boolean $z0;
        android.view.View $r10;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i1 = 0;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r6;

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r9;

        $r10 = r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnRelease(android.view.View)>($r10);

        goto label2;

     label3:
        $r8 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void setMaxRecycledViews(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r1;
        java.util.ArrayList r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap> = i1;

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

     label1:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i2 <= i1 goto label2;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>($i4);

        goto label1;

     label2:
        return;
    }

    public int getRecycledViewCount(int)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0, $i1;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i1;
    }

    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0, $i1, i2;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r1;
        java.util.ArrayList r2, $r5;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r6, $r8;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r7, $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r4;

        if r1 == null goto label3;

        $r5 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r6;

        $z1 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAttachedToTransitionOverlay()>();

        if $z1 != 0 goto label2;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $r9 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r8;

        return $r9;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return null;
    }

    int size()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        java.util.ArrayList r1;
        android.util.SparseArray $r2, $r3;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i2 = 0;

        i3 = 0;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r4;

        r1 = $r5.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = i2 + $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, $i2;
        java.util.ArrayList r2;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r3, $r6;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        android.view.View $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        r2 = $r3.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r5;

        $i1 = $r6.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap>;

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i1 > $i2 goto label1;

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnRelease(android.view.View)>($r7);

        return;

     label1:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void resetInternal()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    long runningAverage(long, long)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        long l0, l1, $l3, $l4, $l5, $l6;
        byte $b2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        return l1;

     label1:
        $l3 = l0 / 4L;

        $l5 = $l3 * 3L;

        $l4 = l1 / 4L;

        $l6 = $l5 + $l4;

        return $l6;
    }

    void factorInCreateTime(int, long)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0;
        long l1, $l2, $l3;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        $l2 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs>;

        $l3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: long runningAverage(long,long)>($l2, l1);

        r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs> = $l3;

        return;
    }

    void factorInBindTime(int, long)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0;
        long l1, $l2, $l3;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        $l2 = r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs>;

        $l3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: long runningAverage(long,long)>($l2, l1);

        r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs> = $l3;

        return;
    }

    boolean willCreateInTime(int, long, long)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0;
        long l1, l2, l3, $l5;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r1;
        byte $b4, $b6;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        l3 = $r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs>;

        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label1;

        $l5 = l1 + l3;

        $b6 = $l5 cmp l2;

        if $b6 >= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean willBindInTime(int, long, long)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0;
        long l1, l2, l3, $l5;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r1;
        byte $b4, $b6;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)>(i0);

        l3 = $r1.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs>;

        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label1;

        $l5 = l1 + l3;

        $b6 = $l5 cmp l2;

        if $b6 >= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    void attach()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing>;

        $i1 = $i0 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing> = $i1;

        return;
    }

    void detach()
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing>;

        $i1 = $i0 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing> = $i1;

        return;
    }

    void attachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        java.util.Set $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: java.util.Set mAttachedAdaptersForPoolingContainer>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    void detachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        boolean z0;
        java.util.ArrayList r2;
        java.util.Set $r3, $r4;
        int $i0, $i1, $i2, $i3, i4, i5;
        android.util.SparseArray $r5, $r6, $r7;
        java.lang.Object $r8, $r10;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r9;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r11;
        android.view.View $r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: java.util.Set mAttachedAdaptersForPoolingContainer>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: java.util.Set mAttachedAdaptersForPoolingContainer>;

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        if $i0 != 0 goto label4;

        if z0 != 0 goto label4;

        i4 = 0;

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i4 >= $i1 goto label4;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i4);

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r9 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r8;

        r2 = $r9.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap>;

        i5 = 0;

     label2:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i5 >= $i3 goto label3;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r11 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r10;

        $r12 = $r11.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnRelease(android.view.View)>($r12);

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, r2;
        boolean z0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter2: boolean;

        if r1 == null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void detach()>();

     label1:
        if z0 != 0 goto label2;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCountForClearing>;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void clear()>();

     label2:
        if r2 == null goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void attach()>();

     label3:
        return;
    }

    private androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)
    {
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r0;
        int i0;
        android.util.SparseArray $r1, $r4;
        java.lang.Object $r2;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData $r3, r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) $r2;

        if r5 != null goto label1;

        $r3 = new androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: void <init>()>();

        r5 = $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r5);

     label1:
        return r5;
    }

androidx.recyclerview.widget.RecyclerView$Recycler
<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>
<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>
<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>
<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List mUnmodifiableAttachedScrap>
<androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax>
<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax>
<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>
<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension>
<androidx.recyclerview.widget.RecyclerView$Recycler: int DEFAULT_CACHE_SIZE>
<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>
    public void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.util.List $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap> = $r2;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews> = $r3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List mUnmodifiableAttachedScrap> = $r5;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax> = 2;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax> = 2;

        return;
    }

    public void clear()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleAndClearCachedViews()>();

        return;
    }

    public void setViewCacheSize(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax> = i0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

        return;
    }

    void updateViewCacheSize()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        androidx.recyclerview.widget.RecyclerView $r1, $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2, $r6;
        java.util.ArrayList $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i6 = $r6.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved>;

        goto label2;

     label1:
        $i6 = 0;

     label2:
        i0 = $i6;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax>;

        $i2 = $i1 + i0;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax> = $i2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i7 = $i3 - 1;

     label3:
        if i7 < 0 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax>;

        if $i4 <= $i5 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(i7);

        i7 = i7 + -1;

        goto label3;

     label4:
        return;
    }

    public java.util.List getScrapList()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        java.util.List $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List mUnmodifiableAttachedScrap>;

        return $r1;
    }

    boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, $i2, $i3, $i5, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8;
        androidx.recyclerview.widget.RecyclerView $r6, $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.String $r7, $r9;
        androidx.recyclerview.widget.RecyclerView$Adapter $r11, $r15, $r17, $r19;
        androidx.recyclerview.widget.RecyclerView$State $r13, $r21;
        long $l4, $l6;
        byte $b7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label1;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r21 = $r20.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z3 = virtualinvoke $r21.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        return $z3;

     label1:
        $i1 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i1 < 0 goto label2;

        $i2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = $r10.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i3 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        if $i2 < $i3 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistency detected. Invalid view holder adapter position");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label3:
        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r13 = $r12.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label4;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r19 = $r18.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i8 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        i0 = virtualinvoke $r19.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)>($i8);

        $i9 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        if i0 == $i9 goto label4;

        return 0;

     label4:
        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r15 = $r14.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z2 = virtualinvoke $r15.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z2 == 0 goto label7;

        $l4 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r17 = $r16.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $l6 = virtualinvoke $r17.<androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)>($i5);

        $b7 = $l4 cmp $l6;

        if $b7 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;

     label7:
        return 1;
    }

    private boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int, long)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, i1, i3, $i7;
        long l2, l4, l5, $l8;
        androidx.recyclerview.widget.RecyclerView $r2, $r3, $r4, $r6, $r8;
        byte $b6;
        androidx.recyclerview.widget.RecyclerView$Adapter $r5;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r7, $r10;
        androidx.recyclerview.widget.RecyclerView$State $r9;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter> = null;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView> = $r2;

        i3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        l4 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: long getNanoTime()>();

        $b6 = l2 cmp 9223372036854775807L;

        if $b6 == 0 goto label1;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        $z1 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willBindInTime(int,long,long)>(i3, l4, l2);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Adapter: void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>(r1, i0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        l5 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: long getNanoTime()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        $i7 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        $l8 = l5 - l4;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInBindTime(int,long)>($i7, $l8);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label2;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = i1;

     label2:
        return 1;
    }

    public void bindViewToPosition(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        android.view.View r1, $r22, $r27, $r30, $r39;
        int i0, i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        android.view.ViewGroup$LayoutParams r3, $r26, $r29, r45, r46;
        androidx.recyclerview.widget.RecyclerView $r4, $r13, $r16, $r20, $r23, $r25, $r28, $r34;
        androidx.recyclerview.widget.AdapterHelper $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r15, $r18, $r33, $r36, r41, r43;
        androidx.recyclerview.widget.RecyclerView$State $r14;
        java.lang.String $r17, $r19, $r35, $r37;
        androidx.recyclerview.widget.RecyclerView$Adapter $r21;
        boolean $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r24, r38;
        android.view.ViewParent $r40;
        java.lang.IllegalArgumentException r42;
        java.lang.IndexOutOfBoundsException r44;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 != null goto label1;

        r42 = new java.lang.IllegalArgumentException;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The view does not have a ViewHolder. You cannot pass arbitrary views to this method, they should be created by the Adapter");

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r35 = virtualinvoke $r34.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw r42;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        i1 = virtualinvoke $r5.<androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)>(i0);

        if i1 < 0 goto label2;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r21 = $r20.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i3 = virtualinvoke $r21.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        if i1 < $i3 goto label3;

     label2:
        r44 = new java.lang.IndexOutOfBoundsException;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistency detected. Invalid item position ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(offset:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").state:");

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r14 = $r13.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r17 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw r44;

     label3:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)>(r2, i1, i0, 9223372036854775807L);

        $r22 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r3 = virtualinvoke $r22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r3 != null goto label4;

        $r28 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r29 = virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r38 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r29;

        $r30 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r45 = (android.view.ViewGroup$LayoutParams) r38;

        virtualinvoke $r30.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r45);

        goto label6;

     label4:
        $r23 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $z1 = virtualinvoke $r23.<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        if $z1 != 0 goto label5;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r26 = virtualinvoke $r25.<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        r38 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r26;

        $r27 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r46 = (android.view.ViewGroup$LayoutParams) r38;

        virtualinvoke $r27.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r46);

        goto label6;

     label5:
        r38 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r3;

     label6:
        r38.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r38.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder> = r2;

        $r24 = r38;

        $r39 = r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r40 = virtualinvoke $r39.<android.view.View: android.view.ViewParent getParent()>();

        if $r40 != null goto label7;

        $z2 = 1;

        goto label8;

     label7:
        $z2 = 0;

     label8:
        $r24.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = $z2;

        return;
    }

    public int convertPreLayoutPositionToPostLayout(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, $i1, $i2, $i3;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r11;
        androidx.recyclerview.widget.RecyclerView $r6, $r9, $r13, $r15, $r17;
        androidx.recyclerview.widget.RecyclerView$State $r7, $r14, $r16;
        java.lang.String $r10, $r12;
        boolean $z0;
        androidx.recyclerview.widget.AdapterHelper $r18;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r14 = $r13.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = virtualinvoke $r14.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i0 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid position ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". State item count is ");

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i1 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r10 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r1;

     label2:
        $r15 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r16 = $r15.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label3;

        return i0;

     label3:
        $r17 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r18 = $r17.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $i3 = virtualinvoke $r18.<androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)>(i0);

        return $i3;
    }

    public android.view.View getViewForPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0;
        android.view.View $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int,boolean)>(i0, 0);

        return $r1;
    }

    android.view.View getViewForPosition(int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0;
        boolean z0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r1;
        android.view.View $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)>(i0, z0, 9223372036854775807L);

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r2;
    }

    androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int, boolean, long)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, $i2, $i3, $i4, $i5, i8, i9, i13, i14, i15;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, $z19, z20, $z21, $z22;
        long l1, $l7, l10, l11, $l12;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r13, $r40, $r41, $r42, $r43, $r44, $r47, $r50, $r71, $r74, $r78, $r81, r101, r103, r105, r107;
        androidx.recyclerview.widget.RecyclerView $r8, $r11, $r15, $r17, $r19, $r20, $r23, $r26, $r28, $r30, $r31, $r35, $r36, $r45, $r48, $r52, $r54, $r56, $r58, $r59, $r60, $r68, $r72, $r79, $r83, $r86, r89, $r90, $r93, $r95;
        androidx.recyclerview.widget.RecyclerView$State $r9, $r16, $r18, $r27, $r29, $r33, $r46, $r94;
        java.lang.String $r12, $r14, $r49, $r51, $r73, $r75, $r80, $r82;
        android.view.ViewGroup$LayoutParams $r21, $r24, r98, r110, r111;
        android.view.View $r22, $r25, $r62, $r85, r88, $r97;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r32;
        java.util.List $r34;
        androidx.recyclerview.widget.AdapterHelper $r37, $r96;
        androidx.recyclerview.widget.RecyclerView$Adapter $r53, $r55, $r57, $r61, $r84;
        byte $b6;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r64, $r65, $r91;
        androidx.recyclerview.widget.RecyclerView$ViewCacheExtension $r66, $r67;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r87;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo r92;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r99, $r100;
        java.lang.IndexOutOfBoundsException r102, r104;
        java.lang.IllegalArgumentException r106, r108;
        java.lang.ref.WeakReference r109;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        if i0 < 0 goto label01;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r16 = $r15.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i3 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i0 < $i3 goto label02;

     label01:
        r102 = new java.lang.IndexOutOfBoundsException;

        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid item position ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Item count:");

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i2 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r12 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r102.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw r102;

     label02:
        z18 = 0;

        r87 = null;

        $r17 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r18 = $r17.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 == 0 goto label05;

        r87 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)>(i0);

        if r87 == null goto label03;

        $z19 = 1;

        goto label04;

     label03:
        $z19 = 0;

     label04:
        z18 = $z19;

     label05:
        if r87 != null goto label10;

        r87 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)>(i0, z0);

        if r87 == null goto label10;

        $z15 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r87);

        if $z15 != 0 goto label09;

        if z0 != 0 goto label08;

        virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(4);

        $z16 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z16 == 0 goto label06;

        $r86 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r85 = r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r86.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r85, 0);

        virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()>();

        goto label07;

     label06:
        $z17 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z17 == 0 goto label07;

        virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

     label07:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r87);

     label08:
        r87 = null;

        goto label10;

     label09:
        z18 = 1;

     label10:
        if r87 != null goto label19;

        $r36 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r37 = $r36.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        i8 = virtualinvoke $r37.<androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)>(i0);

        if i8 < 0 goto label11;

        $r52 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r53 = $r52.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i5 = virtualinvoke $r53.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        if i8 < $i5 goto label12;

     label11:
        r104 = new java.lang.IndexOutOfBoundsException;

        r103 = new java.lang.StringBuilder;

        specialinvoke r103.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistency detected. Invalid item position ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(offset:");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").state:");

        $r45 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r46 = $r45.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i4 = virtualinvoke $r46.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r48 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r49 = virtualinvoke $r48.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r104.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r51);

        throw r104;

     label12:
        $r54 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r55 = $r54.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        i9 = virtualinvoke $r55.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)>(i8);

        $r56 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r57 = $r56.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z10 = virtualinvoke $r57.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z10 == 0 goto label13;

        $r83 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r84 = $r83.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $l7 = virtualinvoke $r84.<androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)>(i8);

        r87 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)>($l7, i9, z0);

        if r87 == null goto label13;

        r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = i8;

        z18 = 1;

     label13:
        if r87 != null goto label15;

        $r66 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension>;

        if $r66 == null goto label15;

        $r67 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension>;

        r88 = virtualinvoke $r67.<androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>(r0, i0, i9);

        if r88 == null goto label15;

        $r68 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        r87 = virtualinvoke $r68.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r88);

        if r87 != null goto label14;

        r106 = new java.lang.IllegalArgumentException;

        r105 = new java.lang.StringBuilder;

        specialinvoke r105.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getViewForPositionAndType returned a view which does not have a ViewHolder");

        $r79 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r80 = virtualinvoke $r79.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r106.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r82);

        throw r106;

     label14:
        $z14 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z14 == 0 goto label15;

        r108 = new java.lang.IllegalArgumentException;

        r107 = new java.lang.StringBuilder;

        specialinvoke r107.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getViewForPositionAndType returned a view that is ignored. You must call stopIgnoring before returning this view.");

        $r72 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r73 = virtualinvoke $r72.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r108.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r75);

        throw r108;

     label15:
        if r87 != null goto label16;

        $r65 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        r87 = virtualinvoke $r65.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)>(i9);

        if r87 == null goto label16;

        virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void resetInternal()>();

        $z13 = <androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>;

        if $z13 == 0 goto label16;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r87);

     label16:
        if r87 != null goto label19;

        $r58 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        l10 = virtualinvoke $r58.<androidx.recyclerview.widget.RecyclerView: long getNanoTime()>();

        $b6 = l1 cmp 9223372036854775807L;

        if $b6 == 0 goto label17;

        $r64 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        $z12 = virtualinvoke $r64.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willCreateInTime(int,long,long)>(i9, l10, l1);

        if $z12 != 0 goto label17;

        return null;

     label17:
        $r59 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r61 = $r59.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $r60 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        r87 = virtualinvoke $r61.<androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)>($r60, i9);

        $z11 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z11 == 0 goto label18;

        $r62 = r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r89 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)>($r62);

        if r89 == null goto label18;

        r109 = new java.lang.ref.WeakReference;

        specialinvoke r109.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r89);

        r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView> = r109;

     label18:
        $r90 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        l11 = virtualinvoke $r90.<androidx.recyclerview.widget.RecyclerView: long getNanoTime()>();

        $r91 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        $l12 = l11 - l10;

        virtualinvoke $r91.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInCreateTime(int,long)>(i9, $l12);

     label19:
        if z18 == 0 goto label20;

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r27 = $r26.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z7 = virtualinvoke $r27.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z7 != 0 goto label20;

        $z8 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(8192);

        if $z8 == 0 goto label20;

        virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(0, 8192);

        $r28 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r29 = $r28.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z9 = $r29.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z9 == 0 goto label20;

        i13 = staticinvoke <androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r87);

        i14 = i13 | 4096;

        $r30 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r32 = $r30.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r31 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r33 = $r31.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r34 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        r92 = virtualinvoke $r32.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)>($r33, r87, i14, $r34);

        $r35 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r35.<androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r87, r92);

     label20:
        z20 = 0;

        $r93 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r94 = $r93.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z21 = virtualinvoke $r94.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z21 == 0 goto label21;

        $z6 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z6 == 0 goto label21;

        r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = i0;

        goto label23;

     label21:
        $z2 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z2 == 0 goto label22;

        $z4 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()>();

        if $z4 != 0 goto label22;

        $z5 = virtualinvoke r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z5 == 0 goto label23;

     label22:
        $r95 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r96 = $r95.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        i15 = virtualinvoke $r96.<androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)>(i0);

        z20 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)>(r87, i15, i0, l1);

     label23:
        $r97 = r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r98 = virtualinvoke $r97.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r98 != null goto label24;

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r24 = virtualinvoke $r23.<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r99 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r24;

        $r25 = r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r110 = (android.view.ViewGroup$LayoutParams) r99;

        virtualinvoke $r25.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r110);

        goto label26;

     label24:
        $r19 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $z3 = virtualinvoke $r19.<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r98);

        if $z3 != 0 goto label25;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r21 = virtualinvoke $r20.<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r98);

        r99 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r21;

        $r22 = r87.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r111 = (android.view.ViewGroup$LayoutParams) r99;

        virtualinvoke $r22.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r111);

        goto label26;

     label25:
        r99 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r98;

     label26:
        r99.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder> = r87;

        $r100 = r99;

        if z18 == 0 goto label27;

        if z20 == 0 goto label27;

        $z22 = 1;

        goto label28;

     label27:
        $z22 = 0;

     label28:
        $r100.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = $z22;

        return r87;
    }

    private void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        android.view.View r2;
        androidx.core.view.AccessibilityDelegateCompat r3;
        androidx.recyclerview.widget.RecyclerView $r4, $r5, $r7;
        boolean $z0, $z1;
        int $i0;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate $r6, $r8;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label4;

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r2);

        if $i0 != 0 goto label1;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r2, 1);

     label1:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        if $r6 != null goto label2;

        return;

     label2:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        r3 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()>();

        $z1 = r3 instanceof androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate;

        if $z1 == 0 goto label3;

        $r9 = (androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate) r3;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void saveOriginalDelegate(android.view.View)>(r2);

     label3:
        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(r2, r3);

     label4:
        return;
    }

    private void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        android.view.View $r2, $r3;
        boolean $z0;
        android.view.ViewGroup $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label1;

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r4 = (android.view.ViewGroup) $r3;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(android.view.ViewGroup,boolean)>($r4, 0);

     label1:
        return;
    }

    private void invalidateDisplayListInt(android.view.ViewGroup, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        android.view.ViewGroup r1, $r3;
        boolean z0, $z1;
        android.view.View r2;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: android.view.ViewGroup;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getChildCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i2);

        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label2;

        $r3 = (android.view.ViewGroup) r2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(android.view.ViewGroup,boolean)>($r3, 1);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        return;

     label4:
        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getVisibility()>();

        if $i1 != 4 goto label5;

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(0);

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(4);

        goto label6;

     label5:
        i3 = virtualinvoke r1.<android.view.ViewGroup: int getVisibility()>();

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(4);

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(i3);

     label6:
        return;
    }

    public void recycleView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1, $z2, $z3;
        androidx.recyclerview.widget.RecyclerView $r3, $r5, $r6;
        androidx.recyclerview.widget.RecyclerView$ItemAnimator $r4, $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>(r1, 0);

     label1:
        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()>();

        goto label3;

     label2:
        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z2 == 0 goto label3;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r7 == null goto label4;

        $z3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()>();

        if $z3 != 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

     label4:
        return;
    }

    void recycleAndClearCachedViews()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        virtualinvoke $r4.<androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void clearPrefetchPositions()>();

     label3:
        return;
    }

    void recycleCachedViewAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)>(r1, 1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return;
    }

    void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, $r24;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, $z15;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.IllegalArgumentException $r2, $r29, $r36;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r12, $r30, $r31, $r34, $r37, $r38, $r39, $r42;
        android.view.View $r7, $r14, $r18;
        android.view.ViewParent $r8, $r15;
        androidx.recyclerview.widget.RecyclerView $r10, $r16, $r20, $r25, $r27, $r32, $r40, $r45;
        java.lang.String $r11, $r13, $r33, $r35, $r41, $r43;
        androidx.recyclerview.widget.RecyclerView$Adapter $r17, $r28;
        java.util.ArrayList $r19, $r22, $r44;
        androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl $r21, $r26;
        java.lang.Object $r23;
        androidx.recyclerview.widget.ViewInfoStore $r46;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $z2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z2 != 0 goto label01;

        $r14 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r15 = virtualinvoke $r14.<android.view.View: android.view.ViewParent getParent()>();

        if $r15 == null goto label04;

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scrapped or attached views may not be recycled. isScrap:");

        $z3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isAttached:");

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewParent getParent()>();

        if $r8 == null goto label02;

        $z11 = 1;

        goto label03;

     label02:
        $z11 = 0;

     label03:
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r2;

     label04:
        $z4 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z4 == 0 goto label05;

        $r36 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tmp detached view should be removed from RecyclerView before it can be recycled: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r41 = virtualinvoke $r40.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw $r36;

     label05:
        $z5 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z5 == 0 goto label06;

        $r29 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to recycle an ignored view holder. You should first call stopIgnoringView(view) before calling recycle.");

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r33 = virtualinvoke $r32.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r29;

     label06:
        z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean doesTransientStatePreventRecycling()>();

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r17 = $r16.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r17 == null goto label07;

        if z0 == 0 goto label07;

        $r27 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r28 = $r27.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z10 = virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        if $z10 == 0 goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        z1 = $z12;

        z13 = 0;

        z14 = 0;

        if z1 != 0 goto label09;

        $z9 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()>();

        if $z9 == 0 goto label16;

     label09:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax>;

        if $i1 <= 0 goto label15;

        $z6 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(526);

        if $z6 != 0 goto label15;

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i4 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax>;

        if i4 < $i2 goto label10;

        if i4 <= 0 goto label10;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(0);

        i4 = i4 + -1;

     label10:
        i5 = i4;

        $z15 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z15 == 0 goto label14;

        if i4 <= 0 goto label14;

        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r21 = $r20.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $z7 = virtualinvoke $r21.<androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: boolean lastPrefetchIncludedPosition(int)>($i3);

        if $z7 != 0 goto label14;

        i6 = i4 - 1;

     label11:
        if i6 < 0 goto label13;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r24 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r23;

        i0 = $r24.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r26 = $r25.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        $z8 = virtualinvoke $r26.<androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: boolean lastPrefetchIncludedPosition(int)>(i0);

        if $z8 != 0 goto label12;

        goto label13;

     label12:
        i6 = i6 + -1;

        goto label11;

     label13:
        i5 = i6 + 1;

     label14:
        $r44 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        virtualinvoke $r44.<java.util.ArrayList: void add(int,java.lang.Object)>(i5, r1);

        z13 = 1;

     label15:
        if z13 != 0 goto label16;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)>(r1, 1);

        z14 = 1;

     label16:
        $r45 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r46 = $r45.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r46.<androidx.recyclerview.widget.ViewInfoStore: void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        if z13 != 0 goto label17;

        if z14 != 0 goto label17;

        if z0 == 0 goto label17;

        $r18 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnRelease(android.view.View)>($r18);

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter> = null;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView> = null;

     label17:
        return;
    }

    void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        boolean z0, $z1;
        android.view.View r2;
        androidx.core.view.AccessibilityDelegateCompat r3, r10;
        androidx.recyclerview.widget.RecyclerView $r4, $r7;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate $r5, $r8;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r6;
        androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        z0 := @parameter1: boolean;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        if $r5 == null goto label2;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        r3 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()>();

        r10 = null;

        $z1 = r3 instanceof androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate;

        if $z1 == 0 goto label1;

        $r9 = (androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate) r3;

        r10 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)>(r2);

     label1:
        staticinvoke <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>(r2, r10);

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label3:
        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter> = null;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView> = null;

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        return;
    }

    void quickRecycleScrapView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer> = null;

        r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = 0;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        return;
    }

    void scrapView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z2, $z3, $z4, $z5, $z7;
        androidx.recyclerview.widget.RecyclerView $r3, $r8, $r12;
        androidx.recyclerview.widget.RecyclerView$Adapter $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.String $r9, $r11;
        java.util.ArrayList $r13, $r14, $r15, $r16;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(12);

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z4 == 0 goto label1;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $z5 = virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r2);

        if $z5 == 0 goto label3;

     label1:
        $z7 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z7 == 0 goto label2;

        $z2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z3 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z3 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called scrap view with an invalid view. Invalid views cannot be reused from scrap, they should rebound from recycler pool.");

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label2:
        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)>(r0, 0);

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label5;

     label3:
        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r13 != null goto label4;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap> = $r15;

     label4:
        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)>(r0, 1);

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label5:
        return;
    }

    void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $z0 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label2:
        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer> = null;

        r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = 0;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

        return;
    }

    int getScrapCount()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    android.view.View getScrapViewAt(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r3;
        android.view.View $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r4;
    }

    void clearScrap()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label1:
        return;
    }

    androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, $i2, $i3, $i6, i7, i8, i10;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r16;
        java.util.ArrayList $r2, $r3, $r12, $r14;
        androidx.recyclerview.widget.RecyclerView $r4, $r6, $r8, $r10;
        androidx.recyclerview.widget.RecyclerView$Adapter $r5, $r9, $r11;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.AdapterHelper $r7;
        java.lang.Object $r13, $r15;
        long $l4, l9;
        byte $b5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i2;

        if $i2 != 0 goto label2;

     label1:
        return null;

     label2:
        i7 = 0;

     label3:
        if i7 >= i1 goto label5;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r16 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r15;

        $z2 = virtualinvoke r16.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z2 != 0 goto label4;

        $i6 = virtualinvoke r16.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i6 != i0 goto label4;

        virtualinvoke r16.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(32);

        return r16;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label8;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        i8 = virtualinvoke $r7.<androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)>(i0);

        if i8 <= 0 goto label8;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $i3 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        if i8 >= $i3 goto label8;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = $r10.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        l9 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)>(i8);

        i10 = 0;

     label6:
        if i10 >= i1 goto label8;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r13;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z1 != 0 goto label7;

        $l4 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b5 = $l4 cmp l9;

        if $b5 != 0 goto label7;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(32);

        return r1;

     label7:
        i10 = i10 + 1;

        goto label6;

     label8:
        return null;
    }

    androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, $i2, $i3, i4, i5, i6, i7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r1, $r2, $r3, $r5, $r23;
        java.lang.Object $r4, $r24;
        androidx.recyclerview.widget.RecyclerView $r7, $r9, $r11, $r13, $r19, $r25;
        androidx.recyclerview.widget.ChildHelper $r8, $r10, $r12, $r14;
        java.lang.IllegalStateException $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r21;
        java.lang.String $r20, $r22;
        androidx.recyclerview.widget.RecyclerView$State $r26;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r27, r29, r30;
        android.view.View r28;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label01:
        if i4 >= i1 goto label04;

        $r23 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r27 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r24;

        $z3 = virtualinvoke r27.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z3 != 0 goto label03;

        $i3 = virtualinvoke r27.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i3 != i0 goto label03;

        $z4 = virtualinvoke r27.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z4 != 0 goto label03;

        $r25 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r26 = $r25.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z5 = $r26.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout>;

        if $z5 != 0 goto label02;

        $z6 = virtualinvoke r27.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z6 != 0 goto label03;

     label02:
        virtualinvoke r27.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(32);

        return r27;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        if z0 != 0 goto label06;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        r28 = virtualinvoke $r8.<androidx.recyclerview.widget.ChildHelper: android.view.View findHiddenNonRemovedView(int)>(i0);

        if r28 == null goto label06;

        r29 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r28);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r10 = $r9.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r10.<androidx.recyclerview.widget.ChildHelper: void unhide(android.view.View)>(r28);

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r12 = $r11.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        i5 = virtualinvoke $r12.<androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)>(r28);

        if i5 != -1 goto label05;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("layout index should not be -1 after unhiding a view:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r19 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r20 = virtualinvoke $r19.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label05:
        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r14 = $r13.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper>;

        virtualinvoke $r14.<androidx.recyclerview.widget.ChildHelper: void detachViewFromParent(int)>(i5);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void scrapView(android.view.View)>(r28);

        virtualinvoke r29.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(8224);

        return r29;

     label06:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i7 = 0;

     label07:
        if i7 >= i6 goto label10;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r30 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r4;

        $z1 = virtualinvoke r30.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z1 != 0 goto label09;

        $i2 = virtualinvoke r30.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i2 != i0 goto label09;

        $z2 = virtualinvoke r30.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAttachedToTransitionOverlay()>();

        if $z2 != 0 goto label09;

        if z0 != 0 goto label08;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

     label08:
        return r30;

     label09:
        i7 = i7 + 1;

        goto label07;

     label10:
        return null;
    }

    androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        long l0, $l3, $l6;
        int i1, i2, $i5, $i8, i9, i10, i11;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1, r17;
        java.util.ArrayList $r2, $r3, $r4, $r6, $r8, $r10;
        java.lang.Object $r5, $r9;
        byte $b4, $b7;
        android.view.View $r12, $r14;
        androidx.recyclerview.widget.RecyclerView $r13, $r15;
        androidx.recyclerview.widget.RecyclerView$State $r16;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i9 = i2 - 1;

     label01:
        if i9 < 0 goto label05;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r17 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r9;

        $l6 = virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b7 = $l6 cmp l0;

        if $b7 != 0 goto label04;

        $z2 = virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z2 != 0 goto label04;

        $i8 = virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        if i1 != $i8 goto label03;

        virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(32);

        $z3 = virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z3 == 0 goto label02;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r16 = $r15.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z4 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z4 != 0 goto label02;

        virtualinvoke r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(2, 14);

     label02:
        return r17;

     label03:
        if z0 != 0 goto label04;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r12 = r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r12, 0);

        $r14 = r17.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)>($r14);

     label04:
        i9 = i9 + -1;

        goto label01;

     label05:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i10 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i11 = i10 - 1;

     label06:
        if i11 < 0 goto label10;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r5;

        $l3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label09;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAttachedToTransitionOverlay()>();

        if $z1 != 0 goto label09;

        $i5 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        if i1 != $i5 goto label08;

        if z0 != 0 goto label07;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

     label07:
        return r1;

     label08:
        if z0 != 0 goto label09;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(i11);

        return null;

     label09:
        i11 = i11 + -1;

        goto label06;

     label10:
        return null;
    }

    void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r18;
        androidx.recyclerview.widget.RecyclerView$RecyclerListener $r3, $r17, $r19;
        java.util.List $r5, $r15;
        androidx.recyclerview.widget.RecyclerView$Adapter $r7, $r13;
        androidx.recyclerview.widget.RecyclerView$State $r9;
        androidx.recyclerview.widget.ViewInfoStore $r11;
        java.lang.Object $r16;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener>;

        if $r3 == null goto label1;

        $r18 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r19 = $r18.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener>;

        interfaceinvoke $r19.<androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r15 = $r14.<androidx.recyclerview.widget.RecyclerView: java.util.List mRecyclerListeners>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i1);

        $r17 = (androidx.recyclerview.widget.RecyclerView$RecyclerListener) $r16;

        interfaceinvoke $r17.<androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r7 == null goto label4;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r13 = $r12.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label4:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r9 = $r8.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        if $r9 == null goto label5;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = $r10.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r11.<androidx.recyclerview.widget.ViewInfoStore: void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r1);

     label5:
        return;
    }

    void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, r2;
        boolean z0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void clear()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>(r1, 1);

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>(r1, r2, z0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void maybeSendPoolingContainerAttach()>();

        return;
    }

    void offsetPositionRecordsForMove(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i10;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        byte b9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        i7 = i0;

        i8 = i1;

        b9 = -1;

        goto label2;

     label1:
        i7 = i1;

        i8 = i0;

        b9 = 1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i10 = 0;

     label3:
        if i10 >= i2 goto label7;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r4;

        if r1 == null goto label6;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i7 goto label6;

        $i4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 <= i8 goto label4;

        goto label6;

     label4:
        $i5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 != i0 goto label5;

        $i6 = i1 - i0;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i6, 0);

        goto label6;

     label5:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(b9, 0);

     label6:
        i10 = i10 + 1;

        goto label3;

     label7:
        return;
    }

    void offsetPositionRecordsForInsert(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, i2, $i3, i4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r4;

        if r1 == null goto label2;

        $i3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i0 goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(i1, 0);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    void offsetPositionRecordsForRemove(int, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        boolean z0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 = i0 + i1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i7 = i3 - 1;

     label1:
        if i7 < 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r4;

        if r1 == null goto label3;

        $i4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 < i2 goto label2;

        $i6 = neg i1;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i6, z0);

        goto label3;

     label2:
        $i5 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 < i0 goto label3;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(8);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(i7);

     label3:
        i7 = i7 + -1;

        goto label1;

     label4:
        return;
    }

    void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$ViewCacheExtension r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension;

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension> = r1;

        return;
    }

    void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool r1, $r4, $r5, $r8, $r9;
        androidx.recyclerview.widget.RecyclerView $r2, $r6;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter)>($r3);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        if $r4 == null goto label1;

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void detach()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool> = r1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        if $r5 == null goto label2;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()>();

        if $r7 == null goto label2;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void attach()>();

     label2:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void maybeSendPoolingContainerAttach()>();

        return;
    }

    private void maybeSendPoolingContainerAttach()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r1, $r7;
        androidx.recyclerview.widget.RecyclerView $r2, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3, $r6;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void attachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter)>($r6);

     label1:
        return;
    }

    private void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>(r1, 0);

        return;
    }

    private void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        boolean z0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void detachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>(r1, z0);

     label1:
        return;
    }

    void onAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void maybeSendPoolingContainerAttach()>();

        return;
    }

    void onDetachedFromWindow()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        java.util.ArrayList $r1, $r4;
        int $i0, i1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$Adapter $r3;
        java.lang.Object $r5;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r6;
        android.view.View $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i1 = 0;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r5;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: void callPoolingContainerOnRelease(android.view.View)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter)>($r3);

        return;
    }

    androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r1, $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        if $r1 != null goto label1;

        $r3 = new androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool> = $r3;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void maybeSendPoolingContainerAttach()>();

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool>;

        return $r2;
    }

    void viewRangeUpdate(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, i2, i3, i4, i5;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 + i1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i5 = i3 - 1;

     label1:
        if i5 < 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r4;

        if r1 != null goto label2;

        goto label3;

     label2:
        i4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        if i4 < i0 goto label3;

        if i4 >= i2 goto label3;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(2);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)>(i5);

     label3:
        i5 = i5 + -1;

        goto label1;

     label4:
        return;
    }

    void markKnownViewsInvalid()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.util.ArrayList $r2, $r7;
        androidx.recyclerview.widget.RecyclerView $r3, $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r4, $r6;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r8;

        if r1 == null goto label2;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(6);

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)>(null);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label4;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label5;

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleAndClearCachedViews()>();

     label5:
        return;
    }

    void clearOldPositions()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1, i2, i3, i4, i5;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8, $r11;
        java.lang.Object $r6, $r9, $r12;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r7, $r10, r13;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r13 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r12;

        virtualinvoke r13.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r10 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r9;

        virtualinvoke $r10.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r3 == null goto label6;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i5 = 0;

     label5:
        if i5 >= i4 goto label6;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r7 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r6;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

        i5 = i5 + 1;

        goto label5;

     label6:
        return;
    }

    void markItemDecorInsetsDirty()
    {
        androidx.recyclerview.widget.RecyclerView$Recycler r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.view.View $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$Recycler;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r5;

        $r6 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r7;

        if r2 == null goto label2;

        r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

androidx.recyclerview.widget.RecyclerView$RecyclerListener
<androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        androidx.recyclerview.widget.RecyclerView r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void <init>()>();

        return;
    }

    public void onChanged()
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2, $r4, $r5, $r7;
        androidx.recyclerview.widget.RecyclerView$State $r3;
        androidx.recyclerview.widget.AdapterHelper $r6;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r3.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)>(1);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6 = $r5.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r6.<androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }

    public void onItemRangeChanged(int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        int i0, i1;
        java.lang.Object r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r3;
        androidx.recyclerview.widget.AdapterHelper $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeChanged(int,int,java.lang.Object)>(i0, i1, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void triggerUpdateProcessor()>();

     label1:
        return;
    }

    public void onItemRangeInserted(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        androidx.recyclerview.widget.AdapterHelper $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeInserted(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void triggerUpdateProcessor()>();

     label1:
        return;
    }

    public void onItemRangeRemoved(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        androidx.recyclerview.widget.AdapterHelper $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeRemoved(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void triggerUpdateProcessor()>();

     label1:
        return;
    }

    public void onItemRangeMoved(int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        int i0, i1, i2;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        androidx.recyclerview.widget.AdapterHelper $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeMoved(int,int,int)>(i0, i1, i2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void triggerUpdateProcessor()>();

     label1:
        return;
    }

    void triggerUpdateProcessor()
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.Runnable $r4;
        android.view.View r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $z1 = $r1.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>;

        if $z1 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $z2 = $r2.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z2 == 0 goto label1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable>;

        r8 = (android.view.View) $r5;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r8, $r4);

        goto label2;

     label1:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r6.<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure> = 1;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }

    public void onStateRestorationPolicyChanged()
    {
        androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        androidx.recyclerview.widget.RecyclerView $r2, $r4, $r5;
        androidx.recyclerview.widget.RecyclerView$SavedState $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        r1 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: boolean canRestoreState()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }

androidx.recyclerview.widget.RecyclerView$SavedState$1
    void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        androidx.recyclerview.widget.RecyclerView$SavedState $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = new androidx.recyclerview.widget.RecyclerView$SavedState;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        return $r3;
    }

    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.recyclerview.widget.RecyclerView$SavedState $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.recyclerview.widget.RecyclerView$SavedState;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>(r1, null);

        return $r2;
    }

    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$SavedState[] $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.recyclerview.widget.RecyclerView$SavedState)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        androidx.recyclerview.widget.RecyclerView$SavedState $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$SavedState[] $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.recyclerview.widget.RecyclerView$SavedState $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

androidx.recyclerview.widget.RecyclerView$SavedState
<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>
<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR>
    void <init>(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2, $r7;
        java.lang.Class $r3;
        android.os.Parcelable $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<androidx.customview.view.AbsSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        if r2 == null goto label1;

        $r7 = r2;

        goto label2;

     label1:
        $r3 = class "Landroidx/recyclerview/widget/RecyclerView$LayoutManager;";

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label2:
        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r7);

        r0.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r4;

        return;
    }

    void <init>(android.os.Parcelable)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState r0;
        android.os.Parcelable r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState;

        r1 := @parameter0: android.os.Parcelable;

        specialinvoke r0.<androidx.customview.view.AbsSavedState: void <init>(android.os.Parcelable)>(r1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState r0;
        android.os.Parcel r1;
        int i0;
        android.os.Parcelable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        return;
    }

    void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
    {
        androidx.recyclerview.widget.RecyclerView$SavedState r0, r1;
        android.os.Parcelable $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SavedState;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$SavedState;

        $r2 = r1.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        r0.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r2;

        return;
    }

    static void <clinit>()
    {
        androidx.recyclerview.widget.RecyclerView$SavedState$1 r1;
        android.os.Parcelable$Creator r2;

        r1 = new androidx.recyclerview.widget.RecyclerView$SavedState$1;

        specialinvoke r1.<androidx.recyclerview.widget.RecyclerView$SavedState$1: void <init>()>();

        r2 = (android.os.Parcelable$Creator) r1;

        <androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR> = r2;

        return;
    }

androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        return 0;
    }

    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        return;
    }

    public void onRequestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener;

        z0 := @parameter0: boolean;

        return;
    }

androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int UNDEFINED_DURATION>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates>
    public void <init>(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void <init>(int,int,int,android.view.animation.Interpolator)>(i0, i1, -2147483648, null);

        return;
    }

    public void <init>(int, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0, i1, i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void <init>(int,int,int,android.view.animation.Interpolator)>(i0, i1, i2, null);

        return;
    }

    public void <init>(int, int, int, android.view.animation.Interpolator)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0, i1, i2;
        android.view.animation.Interpolator r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.animation.Interpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx> = i0;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy> = i1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration> = i2;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator> = r1;

        return;
    }

    public void jumpTo(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition> = i0;

        return;
    }

    boolean hasJumpTarget()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void runIfNecessary(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.view.animation.Interpolator $r2;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition>;

        if $i1 < 0 goto label1;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition>;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition> = -1;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)>(i0);

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 0;

        return;

     label1:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void validate()>();

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx>;

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy>;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,int,android.view.animation.Interpolator)>($i4, $i3, $i2, $r2);

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates>;

        $i6 = $i5 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates> = $i6;

        $i7 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates>;

        if $i7 <= 10 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Smooth Scroll action is being updated too frequently. Make sure you are not changing it unless necessary");

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 0;

        goto label4;

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates> = 0;

     label4:
        return;
    }

    private void validate()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        android.view.animation.Interpolator $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator>;

        if $r1 == null goto label1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration>;

        if $i1 >= 1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("If you provide an interpolator, you must set a positive duration");

        throw $r3;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration>;

        if $i0 >= 1 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Scroll duration must be a positive number");

        throw $r2;

     label2:
        return;
    }

    public int getDx()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx>;

        return $i0;
    }

    public void setDx(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx> = i0;

        return;
    }

    public int getDy()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy>;

        return $i0;
    }

    public void setDy(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy> = i0;

        return;
    }

    public int getDuration()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration>;

        return $i0;
    }

    public void setDuration(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration> = i0;

        return;
    }

    public android.view.animation.Interpolator getInterpolator()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        android.view.animation.Interpolator $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator>;

        return $r1;
    }

    public void setInterpolator(android.view.animation.Interpolator)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        android.view.animation.Interpolator r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        r1 := @parameter0: android.view.animation.Interpolator;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator> = r1;

        return;
    }

    public void update(int, int, int, android.view.animation.Interpolator)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r0;
        int i0, i1, i2;
        android.view.animation.Interpolator r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.animation.Interpolator;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx> = i0;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy> = i1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration> = i2;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator> = r1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged> = 1;

        return;
    }

androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
<androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider: android.graphics.PointF computeScrollVectorForPosition(int)>
androidx.recyclerview.widget.RecyclerView$SmoothScroller
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mStarted>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition> = -1;

        $r1 = new androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void <init>(int,int)>(0, 0);

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction> = $r1;

        return;
    }

    void start(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$LayoutManager)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        androidx.recyclerview.widget.RecyclerView r1, $r4, $r7;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r2;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r3, $r8;
        boolean $z0;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$State $r5;
        android.view.View $r6;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r18, $r19;
        java.lang.Class $r12, $r16;
        java.lang.String $r13, $r17, $r20;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$LayoutManager;

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void stop()>();

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mStarted>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An instance of ");

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was started more than once. Each instance of");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is intended to only be used once. You should create a new instance for each use.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r20);

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView> = r1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager> = r2;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        if $i0 != -1 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid target position");

        throw $r9;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        $r5.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun> = 1;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()>();

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View findViewByPosition(int)>($i2);

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView> = $r6;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStart()>();

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()>();

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mStarted> = 1;

        return;
    }

    public void setTargetPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        i0 := @parameter0: int;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition> = i0;

        return;
    }

    public android.graphics.PointF computeScrollVectorForPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider $r8;
        android.graphics.PointF $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $z0 = r1 instanceof androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider;

        if $z0 == 0 goto label1;

        $r8 = (androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider) r1;

        $r9 = interfaceinvoke $r8.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider: android.graphics.PointF computeScrollVectorForPosition(int)>(i0);

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You should override computeScrollVectorForPosition when the LayoutManager does not implement ");

        $r4 = class "Landroidx/recyclerview/widget/RecyclerView$SmoothScroller$ScrollVectorProvider;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r7);

        return null;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager>;

        return $r1;
    }

    protected final void stop()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$State $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStop()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun> = 0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView> = null;

        return;
    }

    public boolean isPendingInitialRun()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun>;

        return $z0;
    }

    public boolean isRunning()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning>;

        return $z0;
    }

    public int getTargetPosition()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        return $i0;
    }

    void onAnimation(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i8, $i9;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action $r2, $r4, $r5, $r8, $r11;
        androidx.recyclerview.widget.RecyclerView$State $r3, $r9;
        boolean $z0, $z1, $z2, z3;
        androidx.recyclerview.widget.RecyclerView$ViewFlinger $r6;
        android.view.View $r7, $r10, $r12, $r15;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b7, $b10;
        android.graphics.PointF r14;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        if $i2 == -1 goto label1;

        if r1 != null goto label2;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()>();

     label2:
        $z1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun>;

        if $z1 == 0 goto label4;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView>;

        if $r12 != null goto label4;

        $r13 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager>;

        if $r13 == null goto label4;

        $i6 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        r14 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)>($i6);

        if r14 == null goto label4;

        $f0 = r14.<android.graphics.PointF: float x>;

        $b7 = $f0 cmpl 0.0F;

        if $b7 != 0 goto label3;

        $f5 = r14.<android.graphics.PointF: float y>;

        $b10 = $f5 cmpl 0.0F;

        if $b10 == 0 goto label4;

     label3:
        $f1 = r14.<android.graphics.PointF: float x>;

        $f2 = staticinvoke <java.lang.Math: float signum(float)>($f1);

        $i8 = (int) $f2;

        $f3 = r14.<android.graphics.PointF: float y>;

        $f4 = staticinvoke <java.lang.Math: float signum(float)>($f3);

        $i9 = (int) $f4;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>($i8, $i9, null);

     label4:
        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun> = 0;

        $r15 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView>;

        if $r15 == null goto label6;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView>;

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)>($r7);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition>;

        if $i3 != $i4 goto label5;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView>;

        $r9 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)>($r10, $r9, $r8);

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void runIfNecessary(androidx.recyclerview.widget.RecyclerView)>(r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()>();

        goto label6;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Passed over target position while smooth scrolling.");

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView> = null;

     label6:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning>;

        if $z2 == 0 goto label7;

        $r3 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)>(i0, i1, $r3, $r2);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>;

        z3 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean hasJumpTarget()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void runIfNecessary(androidx.recyclerview.widget.RecyclerView)>(r1);

        if z3 == 0 goto label7;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning>;

        if $z0 == 0 goto label7;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun> = 1;

        $r6 = r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()>();

     label7:
        return;
    }

    public int getChildPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)>(r1);

        return $i0;
    }

    public int getChildCount()
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()>();

        return $i0;
    }

    public android.view.View findViewByPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r2;
        android.view.View $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)>(i0);

        return $r3;
    }

    public void instantScrollToPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)>(i0);

        return;
    }

    protected void onChildAttachedToWindow(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)>(r1);

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()>();

        if $i0 != $i1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView> = r1;

     label1:
        return;
    }

    protected void normalize(android.graphics.PointF)
    {
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r0;
        android.graphics.PointF r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        double $d0, $d1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        r1 := @parameter0: android.graphics.PointF;

        $f2 = r1.<android.graphics.PointF: float x>;

        $f1 = r1.<android.graphics.PointF: float x>;

        $f6 = $f2 * $f1;

        $f4 = r1.<android.graphics.PointF: float y>;

        $f3 = r1.<android.graphics.PointF: float y>;

        $f5 = $f4 * $f3;

        $f7 = $f6 + $f5;

        $d0 = (double) $f7;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f0 = (float) $d1;

        $f8 = r1.<android.graphics.PointF: float x>;

        $f9 = $f8 / f0;

        r1.<android.graphics.PointF: float x> = $f9;

        $f10 = r1.<android.graphics.PointF: float y>;

        $f11 = $f10 / f0;

        r1.<android.graphics.PointF: float y> = $f11;

        return;
    }

<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStart()>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStop()>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)>
androidx.recyclerview.widget.RecyclerView$State
<androidx.recyclerview.widget.RecyclerView$State: int STEP_START>
<androidx.recyclerview.widget.RecyclerView$State: int STEP_LAYOUT>
<androidx.recyclerview.widget.RecyclerView$State: int STEP_ANIMATIONS>
<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition>
<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>
<androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount>
<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout>
<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep>
<androidx.recyclerview.widget.RecyclerView$State: int mItemCount>
<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged>
<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout>
<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders>
<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring>
<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>
<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>
<androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition>
<androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId>
<androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId>
<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal>
<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical>
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = 0;

        return;
    }

    void assertLayoutStep(int)
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep>;

        $i2 = i0 & $i1;

        if $i2 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Layout state should be one of ");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it is ");

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>($i3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label1:
        return;
    }

    void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep> = 1;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>();

        r0.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        return;
    }

    public boolean isMeasuring()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring>;

        return $z0;
    }

    public boolean isPreLayout()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout>;

        return $z0;
    }

    public boolean willRunPredictiveAnimations()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        return $z0;
    }

    public boolean willRunSimpleAnimations()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        return $z0;
    }

    public void remove(int)
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int i0;
        android.util.SparseArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public java.lang.Object get(int)
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int i0;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        return $r3;
    }

    public void put(int, java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r2, $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        if $r2 != null goto label1;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData> = $r4;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getTargetScrollPosition()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition>;

        return $i0;
    }

    public boolean hasTargetScrollPosition()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean didStructureChange()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged>;

        return $z0;
    }

    public int getItemCount()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout>;

        if $z0 == 0 goto label1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount>;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout>;

        $i2 = $i1 - $i0;

        goto label2;

     label1:
        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount>;

     label2:
        return $i2;
    }

    public int getRemainingScrollHorizontal()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal>;

        return $i0;
    }

    public int getRemainingScrollVertical()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical>;

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.recyclerview.widget.RecyclerView$State r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        int $i0, $i1, $i2, $i3;
        android.util.SparseArray $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r24;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$State;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State{mTargetPosition=");

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mData=");

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mItemCount=");

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mItemCount>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsMeasuring=");

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mPreviousLayoutItemCount=");

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDeletedInvisibleItemCountSincePreviousLayout=");

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mStructureChanged=");

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mInPreLayout=");

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRunSimpleAnimations=");

        $z3 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRunPredictiveAnimations=");

        $z4 = r0.<androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory
    void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: void <init>()>();

        return;
    }

    protected android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView, int)
    {
        androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0;
        android.widget.EdgeEffect $r2;
        android.content.Context $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        $r2 = new android.widget.EdgeEffect;

        $r3 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r3);

        return $r2;
    }

androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
    public void <init>()
    {
        androidx.recyclerview.widget.RecyclerView$ViewCacheExtension r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)>
androidx.recyclerview.widget.RecyclerView$ViewFlinger
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback>
<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>
    void <init>(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.animation.Interpolator $r2, $r5;
        android.widget.OverScroller $r3;
        android.content.Context $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator> = $r2;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback> = 0;

        $r3 = new android.widget.OverScroller;

        $r4 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r5 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

        specialinvoke $r3.<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r4, $r5);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller> = $r3;

        return;
    }

    public void run()
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        android.widget.OverScroller r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, $i28, $i29;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, $z15, $z16, $z17, $z18;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r2, r62, r71;
        androidx.recyclerview.widget.RecyclerView $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r16, $r17, $r18, $r20, $r22, $r24, $r26, $r27, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r42, $r44, $r46, $r48, $r49, $r51, $r53, $r55, $r57, $r58, $r60, $r63, $r65, $r66, $r68, $r69;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4, $r54, $r67, $r70;
        int[] $r11, $r13, $r15, $r21, $r23, $r25, $r28, $r30, $r43, $r45, $r47, $r50, $r52, $r59, $r61;
        androidx.recyclerview.widget.RecyclerView$Adapter $r19;
        androidx.recyclerview.widget.GapWorker $r33, $r36;
        androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl $r39;
        float $f0;
        androidx.recyclerview.widget.RecyclerView$State $r56;
        java.util.ArrayList $r64;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        if $r4 != null goto label01;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void stop()>();

        return;

     label01:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest> = 1;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        $z2 = virtualinvoke r1.<android.widget.OverScroller: boolean computeScrollOffset()>();

        if $z2 == 0 goto label29;

        i18 = virtualinvoke r1.<android.widget.OverScroller: int getCurrX()>();

        i0 = virtualinvoke r1.<android.widget.OverScroller: int getCurrY()>();

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX>;

        i19 = i18 - $i4;

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY>;

        i20 = i0 - $i5;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX> = i18;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY> = i0;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        i21 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView: int consumeFlingInHorizontalStretch(int)>(i19);

        $r9 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        i22 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView: int consumeFlingInVerticalStretch(int)>(i20);

        i23 = 0;

        i24 = 0;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r11 = $r10.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r11[0] = 0;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r13 = $r12.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r13[1] = 0;

        $r16 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r15 = $r14.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $z4 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i21, i22, $r15, null, 1);

        if $z4 == 0 goto label02;

        $r58 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r59 = $r58.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i16 = $r59[0];

        i21 = i21 - $i16;

        $r60 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r61 = $r60.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i17 = $r61[1];

        i22 = i22 - $i17;

     label02:
        $r17 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $i6 = virtualinvoke $r17.<androidx.recyclerview.widget.RecyclerView: int getOverScrollMode()>();

        if $i6 == 2 goto label03;

        $r57 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r57.<androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)>(i21, i22);

     label03:
        $r18 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r19 = $r18.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter>;

        if $r19 == null goto label06;

        $r42 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r43 = $r42.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r43[0] = 0;

        $r44 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r45 = $r44.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r45[1] = 0;

        $r48 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r46 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r47 = $r46.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        virtualinvoke $r48.<androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>(i21, i22, $r47);

        $r49 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r50 = $r49.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        i23 = $r50[0];

        $r51 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r52 = $r51.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        i24 = $r52[1];

        i21 = i21 - i23;

        i22 = i22 - i24;

        $r53 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r54 = $r53.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        r62 = $r54.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r62 == null goto label06;

        $z7 = virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()>();

        if $z7 != 0 goto label06;

        $z8 = virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z8 == 0 goto label06;

        $r55 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r56 = $r55.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState>;

        i25 = virtualinvoke $r56.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i25 != 0 goto label04;

        virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()>();

        goto label06;

     label04:
        $i14 = virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()>();

        if $i14 < i25 goto label05;

        $i15 = i25 - 1;

        virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)>($i15);

        virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>(i23, i24);

        goto label06;

     label05:
        virtualinvoke r62.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>(i23, i24);

     label06:
        $r63 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r64 = $r63.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z9 = virtualinvoke $r64.<java.util.ArrayList: boolean isEmpty()>();

        if $z9 != 0 goto label07;

        $r41 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r41.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label07:
        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r21 = $r20.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r21[0] = 0;

        $r22 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r23 = $r22.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r23[1] = 0;

        $r26 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r24 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r25 = $r24.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        virtualinvoke $r26.<androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>(i23, i24, i21, i22, null, 1, $r25);

        $r27 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r28 = $r27.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i7 = $r28[0];

        i26 = i21 - $i7;

        $r29 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r30 = $r29.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i8 = $r30[1];

        i27 = i22 - $i8;

        if i23 != 0 goto label08;

        if i24 == 0 goto label09;

     label08:
        $r31 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r31.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)>(i23, i24);

     label09:
        $r65 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $z10 = staticinvoke <androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)>($r65);

        if $z10 != 0 goto label10;

        $r40 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r40.<androidx.recyclerview.widget.RecyclerView: void invalidate()>();

     label10:
        $i9 = virtualinvoke r1.<android.widget.OverScroller: int getCurrX()>();

        $i10 = virtualinvoke r1.<android.widget.OverScroller: int getFinalX()>();

        if $i9 != $i10 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z12 = $z11;

        $i11 = virtualinvoke r1.<android.widget.OverScroller: int getCurrY()>();

        $i12 = virtualinvoke r1.<android.widget.OverScroller: int getFinalY()>();

        if $i11 != $i12 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z14 = $z13;

        $z5 = virtualinvoke r1.<android.widget.OverScroller: boolean isFinished()>();

        if $z5 != 0 goto label16;

        if z12 != 0 goto label15;

        if i26 == 0 goto label17;

     label15:
        if z14 != 0 goto label16;

        if i27 == 0 goto label17;

     label16:
        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z0 = $z15;

        $r66 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r67 = $r66.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        r2 = $r67.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r2 == null goto label19;

        $z6 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()>();

        if $z6 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z1 = $z16;

        if z1 != 0 goto label28;

        if z0 == 0 goto label28;

        $r37 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $i13 = virtualinvoke $r37.<androidx.recyclerview.widget.RecyclerView: int getOverScrollMode()>();

        if $i13 == 2 goto label27;

        $f0 = virtualinvoke r1.<android.widget.OverScroller: float getCurrVelocity()>();

        i1 = (int) $f0;

        if i26 >= 0 goto label21;

        $i28 = neg i1;

        goto label23;

     label21:
        if i26 <= 0 goto label22;

        $i28 = i1;

        goto label23;

     label22:
        $i28 = 0;

     label23:
        i2 = $i28;

        if i27 >= 0 goto label24;

        $i29 = neg i1;

        goto label26;

     label24:
        if i27 <= 0 goto label25;

        $i29 = i1;

        goto label26;

     label25:
        $i29 = 0;

     label26:
        i3 = $i29;

        $r68 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r68.<androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)>(i2, i3);

     label27:
        $z17 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z17 == 0 goto label29;

        $r38 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r39 = $r38.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        virtualinvoke $r39.<androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void clearPrefetchPositions()>();

        goto label29;

     label28:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()>();

        $r32 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r33 = $r32.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        if $r33 == null goto label29;

        $r34 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r36 = $r34.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker>;

        $r35 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r36.<androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)>($r35, i23, i24);

     label29:
        $r69 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r70 = $r69.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout>;

        r71 = $r70.<androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r71 == null goto label30;

        $z3 = virtualinvoke r71.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()>();

        if $z3 == 0 goto label30;

        virtualinvoke r71.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>(0, 0);

     label30:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest> = 0;

        $z18 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback>;

        if $z18 == 0 goto label31;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void internalPostOnAnimation()>();

        goto label32;

     label31:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(1);

     label32:
        return;
    }

    void postOnAnimation()
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest>;

        if $z0 == 0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback> = 1;

        goto label2;

     label1:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void internalPostOnAnimation()>();

     label2:
        return;
    }

    private void internalPostOnAnimation()
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        r3 = (android.view.View) $r2;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r3, r0);

        return;
    }

    public void fling(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        int i0, i1;
        androidx.recyclerview.widget.RecyclerView $r1, $r7;
        android.view.animation.Interpolator $r2, $r3, $r5, $r9;
        android.widget.OverScroller $r4, $r6;
        android.content.Context $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(2);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX> = 0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator>;

        $r2 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

        if $r3 == $r2 goto label1;

        $r5 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator> = $r5;

        $r6 = new android.widget.OverScroller;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r8 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r9 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

        specialinvoke $r6.<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r8, $r9);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller> = $r6;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        virtualinvoke $r4.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>(0, 0, i0, i1, -2147483648, 2147483647, -2147483648, 2147483647);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()>();

        return;
    }

    public void smoothScrollBy(int, int, int, android.view.animation.Interpolator)
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        int i0, i1, $i3, i4;
        android.view.animation.Interpolator $r1, r8;
        androidx.recyclerview.widget.RecyclerView $r2, $r6;
        android.widget.OverScroller $r3, $r4, $r5;
        android.content.Context $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        r8 := @parameter3: android.view.animation.Interpolator;

        if i4 != -2147483648 goto label1;

        i4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int computeScrollDuration(int,int)>(i0, i1);

     label1:
        if r8 != null goto label2;

        r8 = <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator>;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator>;

        if $r1 == r8 goto label3;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator> = r8;

        $r5 = new android.widget.OverScroller;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $r7 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r7, r8);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller> = $r5;

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX> = 0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(2);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        virtualinvoke $r3.<android.widget.OverScroller: void startScroll(int,int,int,int,int)>(0, 0, i0, i1, i4);

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 >= 23 goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        virtualinvoke $r4.<android.widget.OverScroller: boolean computeScrollOffset()>();

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()>();

        return;
    }

    private int computeScrollDuration(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        boolean z0, $z1;
        float f0, $f1, $f2, $f3, $f4;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        i3 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        if i2 <= i3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $i7 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        goto label4;

     label3:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        $i7 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

     label4:
        i4 = $i7;

        if z0 == 0 goto label5;

        $i8 = i2;

        goto label6;

     label5:
        $i8 = i3;

     label6:
        f0 = (float) $i8;

        $f1 = (float) i4;

        $f2 = f0 / $f1;

        $f3 = $f2 + 1.0F;

        $f4 = $f3 * 300.0F;

        i5 = (int) $f4;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i5, 2000);

        return $i6;
    }

    public void stop()
    {
        androidx.recyclerview.widget.RecyclerView$ViewFlinger r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        android.widget.OverScroller $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewFlinger;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: void abortAnimation()>();

        return;
    }

androidx.recyclerview.widget.RecyclerView$ViewHolder
<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_BOUND>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_UPDATE>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_INVALID>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_REMOVED>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_NOT_RECYCLABLE>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_RETURNED_FROM_SCRAP>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_IGNORE>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_TMP_DETACHED>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_POSITION_UNKNOWN>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_FULLUPDATE>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_MOVED>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_APPEARED_IN_PRE_LAYOUT>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int PENDING_ACCESSIBILITY_STATE_NOT_SET>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_BOUNCED_FROM_HIDDEN_LIST>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter>
    public void <init>(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemView may not be null");

        throw $r2;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView> = r1;

        return;
    }

    void flagRemovedAndOffsetPosition(int, int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(8);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(i1, z0);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = i0;

        return;
    }

    void offsetPosition(int, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        android.view.View $r1, $r3;
        android.view.ViewGroup$LayoutParams $r2, $r4;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i1 != -1 goto label1;

        $i8 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition> = $i8;

     label1:
        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i2 != -1 goto label2;

        $i7 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i7;

     label2:
        if z0 == 0 goto label3;

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        $i6 = $i5 + i0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i6;

     label3:
        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $i4 = $i3 + i0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = $i4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 == null goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r4;

        $r5.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label4:
        return;
    }

    void clearOldPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        return;
    }

    void saveOldPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i0 != -1 goto label1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition> = $i1;

     label1:
        return;
    }

    boolean shouldIgnore()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i0 != -1 goto label1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        goto label2;

     label1:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

     label2:
        return $i1;
    }

    public final int getLayoutPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i0 != -1 goto label1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        goto label2;

     label1:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

     label2:
        return $i1;
    }

    public final int getAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getBindingAdapterPosition()>();

        return $i0;
    }

    public final int getBindingAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, $r2, $r6;
        int i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r3, $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter>;

        if $r2 != null goto label1;

        return -1;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        if $r3 != null goto label2;

        return -1;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        r1 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()>();

        if r1 != null goto label3;

        return -1;

     label3:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        i0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView: int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r0);

        if i0 != -1 goto label4;

        return -1;

     label4:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter>;

        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Adapter: int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>($r6, r0, i0);

        return $i1;
    }

    public final int getAbsoluteAdapterPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r0);

        return $i0;
    }

    public final androidx.recyclerview.widget.RecyclerView$Adapter getBindingAdapter()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView$Adapter $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Adapter mBindingAdapter>;

        return $r1;
    }

    public final int getOldPosition()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>;

        return $i0;
    }

    public final long getItemId()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        long $l0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $l0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId>;

        return $l0;
    }

    public final int getItemViewType()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType>;

        return $i0;
    }

    boolean isScrap()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView$Recycler $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void unScrap()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView$Recycler $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }

    boolean wasReturnedFromScrap()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void clearReturnedFromScrapFlag()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -33;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void clearTmpDetachFlag()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -257;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void stopIgnoring()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -129;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        z0 := @parameter1: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer> = r1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = z0;

        return;
    }

    boolean isInvalid()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean needsUpdate()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isBound()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isRemoved()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean hasAnyOfTheFlags(int)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isTmpDetached()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isAttachedToTransitionOverlay()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        android.view.View $r1, $r3;
        android.view.ViewParent $r2, $r4;
        androidx.recyclerview.widget.RecyclerView $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView>;

        if $r4 == $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isAdapterPositionUnknown()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 512;

        if $i1 != 0 goto label1;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    void setFlags(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = i1 ^ -1;

        $i5 = $i3 & $i2;

        $i4 = i0 & i1;

        $i6 = $i5 | $i4;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i6;

        return;
    }

    void addFlags(int)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = $i1 | i0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i2;

        return;
    }

    void addChangePayload(java.lang.Object)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.util.List $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)>(1024);

        goto label2;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 1024;

        if $i1 != 0 goto label2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void createPayloadsIfNeeded()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    private void createPayloadsIfNeeded()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        java.util.List $r1, $r3, $r4;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = $r2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = $r4;

     label1:
        return;
    }

    void clearPayload()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        java.util.List $r1, $r2;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

     label1:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -1025;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    java.util.List getUnmodifiedPayloads()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1, $i2;
        java.util.List $r1, $r2, $r3, $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 1024;

        if $i1 != 0 goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 != 0 goto label2;

     label1:
        $r3 = <androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r3;

     label2:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads>;

        return $r5;

     label3:
        $r1 = <androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r1;
    }

    void resetInternal()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearPayload()>();

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }

    void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int $i0, $i1, $i2;
        android.view.View $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>;

        if $i0 == -1 goto label1;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = $i2;

        goto label2;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = $i1;

     label2:
        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>(r0, 4);

        return;
    }

    void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden>;

        virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>(r0, $i0);

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        return;
    }

    public java.lang.String toString()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        java.lang.String r1, $r9, $r19, $r23, $r30, $r40, $r41;
        java.lang.StringBuilder r2, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r26, $r27, $r28, $r29, $r38;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int $i0, $i1, $i3, $i4, $i5;
        long $l2;
        android.view.View $r20;
        android.view.ViewParent $r21;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAnonymousClass()>();

        if $z0 == 0 goto label01;

        $r40 = "ViewHolder";

        goto label02;

     label01:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

     label02:
        r1 = $r40;

        $r5 = new java.lang.StringBuilder;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position=");

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $l2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldPos=");

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pLpos:");

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19);

        r2 = $r5;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z1 == 0 goto label05;

        $r38 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scrap ");

        $z9 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        if $z9 == 0 goto label03;

        $r41 = "[changeScrap]";

        goto label04;

     label03:
        $r41 = "[attachedScrap]";

     label04:
        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

     label05:
        $z10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z10 == 0 goto label06;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid");

     label06:
        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z2 != 0 goto label07;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unbound");

     label07:
        $z3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()>();

        if $z3 == 0 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" update");

     label08:
        $z4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z4 == 0 goto label09;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed");

     label09:
        $z5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z5 == 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored");

     label10:
        $z6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z6 == 0 goto label11;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tmpDetached");

     label11:
        $z7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()>();

        if $z7 != 0 goto label12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recyclable(");

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

     label12:
        $z8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()>();

        if $z8 == 0 goto label13;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" undefined adapter position");

     label13:
        $r20 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r21 = virtualinvoke $r20.<android.view.View: android.view.ViewParent getParent()>();

        if $r21 != null goto label14;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no parent");

     label14:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r23 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public final void setIsRecyclable(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i9 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $i10 = $i9 - 1;

        goto label2;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $i10 = $i0 + 1;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = $i10;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i1 >= 0 goto label3;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("View", $r4);

        goto label5;

     label3:
        if z0 != 0 goto label4;

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i5 != 1 goto label4;

        $i6 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i7 = $i6 | 16;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i7;

        goto label5;

     label4:
        if z0 == 0 goto label5;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i2 != 0 goto label5;

        $i3 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i4 = $i3 & -17;

        r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags> = $i4;

     label5:
        return;
    }

    public final boolean isRecyclable()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean shouldBeKeptAsChild()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean doesTransientStatePreventRecycling()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean isUpdated()
    {
        androidx.recyclerview.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        <androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS> = $r0;

        return;
    }

