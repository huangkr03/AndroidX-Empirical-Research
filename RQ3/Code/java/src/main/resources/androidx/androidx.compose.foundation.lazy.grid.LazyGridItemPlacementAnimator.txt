androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemNotVisiblePartSize>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemNotVisiblePartSize>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Set positionedKeys>
    public void <init>(kotlinx.coroutines.CoroutineScope, boolean)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        kotlinx.coroutines.CoroutineScope r1;
        boolean z0;
        java.util.LinkedHashMap $r2;
        java.util.Map $r3, $r4;
        java.util.LinkedHashSet $r5;
        java.util.Set $r6;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope> = r1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical> = z0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap> = $r3;

        $r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r4;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex> = -1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex> = -1;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        $r6 = (java.util.Set) $r5;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Set positionedKeys> = $r6;

        return;
    }

    public final void onMeasured(int, int, int, boolean, java.util.List, androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider, androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0, r62;
        int i0, i1, i2, i3, i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i49, $i50, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, i76, $i77, $i78, $i79, $i80, i82, $i83, $i84, $i85, i86, $i87, i88, i89, i90, $i91, $i92, i93, $i95, $i96, i97, $i98, i99, i102, $i104, i106, i107, i111, i112, i114, i115, $i116, i117;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z8, $z10, $z11, $z13, $z18, z19, z22, z23, $z24, $z26, z28, z29, z31, $z33, $z34, $z35, z36, z37, z38, z39, $z40, $z41;
        java.util.List r1, $r17, $r37, r64, r76, r80, r81;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider r2;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r3;
        java.lang.Object $r5, $r6, $r10, $r12, $r13, $r15, $r16, $r23, $r25, $r26, $r28, $r32, $r33, $r35, $r41, $r44, $r46, $r49, $r50, r53, r54, r59, $r65, r77, r78, r82;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1 $r7;
        java.util.Set $r8, $r11, $r22, $r71;
        long $l6, $l12, $l16, $l25, $l46, $l48, $l51, $l62, $l81, l94, $l100, l101, l103, l105, l108, l109, l110, $l113;
        java.util.Map $r9, $r14, $r24, $r27, $r31, $r34, $r48, $r70;
        androidx.compose.ui.unit.Constraints$Companion $r18, $r19;
        androidx.compose.foundation.lazy.grid.ItemInfo $r30, $r51, r61, r67, r68, $r74;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r38, r79, r83;
        kotlin.Unit $r39;
        java.lang.Integer $r40, $r43, r69, r75;
        java.lang.Number $r42, $r45;
        androidx.compose.foundation.lazy.grid.LazyGridPositionedItem $r47, r55, $r56, r57, $r60, $r66, r85;
        kotlin.jvm.functions.Function1 r63;
        java.util.Iterator r72;
        java.util.Map$Entry r73;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItem r84;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: java.util.List;

        r2 := @parameter5: androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider;

        r3 := @parameter6: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "positionedItems");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measuredItemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "spanLayoutProvider");

        i76 = 0;

        $i77 = interfaceinvoke r1.<java.util.List: int size()>();

     label01:
        if i76 >= $i77 goto label03;

        r53 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i76);

        r54 = r53;

        r55 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) r54;

        $z13 = virtualinvoke r55.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: boolean getHasAnimations()>();

        if $z13 == 0 goto label02;

        $z18 = 1;

        goto label04;

     label02:
        i76 = i76 + 1;

        goto label01;

     label03:
        $z18 = 0;

     label04:
        if $z18 != 0 goto label05;

        virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: void reset()>();

        return;

     label05:
        $z2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z2 == 0 goto label06;

        $i78 = i2;

        goto label07;

     label06:
        $i78 = i1;

     label07:
        $i79 = $i78;

        if z0 == 0 goto label08;

        $i80 = neg i0;

        goto label09;

     label08:
        $i80 = i0;

     label09:
        $l81 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: long toOffset-Bjo55l4(int)>($i80);

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r1);

        $r56 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r5;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>(r1);

        r57 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r6;

        z19 = 0;

        i82 = 0;

        $i83 = interfaceinvoke r1.<java.util.List: int size()>();

     label10:
        if i82 >= $i83 goto label13;

        r59 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i82);

        $r60 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) r59;

        $r48 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r49 = virtualinvoke $r60.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r50 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r49);

        $r51 = (androidx.compose.foundation.lazy.grid.ItemInfo) $r50;

        if $r51 != null goto label11;

        goto label12;

     label11:
        r61 = $r51;

        $i73 = virtualinvoke $r60.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        virtualinvoke r61.<androidx.compose.foundation.lazy.grid.ItemInfo: void setIndex(int)>($i73);

        $i74 = virtualinvoke $r60.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisSize()>();

        virtualinvoke r61.<androidx.compose.foundation.lazy.grid.ItemInfo: void setCrossAxisSize(int)>($i74);

        $i75 = virtualinvoke $r60.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisOffset()>();

        virtualinvoke r61.<androidx.compose.foundation.lazy.grid.ItemInfo: void setCrossAxisOffset(int)>($i75);

     label12:
        i82 = i82 + 1;

        goto label10;

     label13:
        r62 = (androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator) r0;

        $r7 = new androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1;

        specialinvoke $r7.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: void <init>(androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator,java.util.List)>(r62, r1);

        r63 = (kotlin.jvm.functions.Function1) $r7;

        $i84 = 0;

        $i85 = 0;

        i86 = 0;

     label14:
        $i87 = interfaceinvoke r1.<java.util.List: int size()>();

        if i86 >= $i87 goto label18;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i86);

        $r41 = interfaceinvoke r63.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r40);

        $r42 = (java.lang.Number) $r41;

        i88 = virtualinvoke $r42.<java.lang.Number: int intValue()>();

        if i88 != -1 goto label15;

        i86 = i86 + 1;

        goto label14;

     label15:
        i89 = 0;

        i90 = i86;

     label16:
        $i70 = interfaceinvoke r1.<java.util.List: int size()>();

        if i90 >= $i70 goto label17;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i90);

        $r44 = interfaceinvoke r63.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r43);

        $r45 = (java.lang.Number) $r44;

        $i71 = virtualinvoke $r45.<java.lang.Number: int intValue()>();

        if $i71 != i88 goto label17;

        $r46 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i90);

        $r47 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r46;

        $i72 = virtualinvoke $r47.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSizeWithSpacings()>();

        i89 = staticinvoke <java.lang.Math: int max(int,int)>(i89, $i72);

        i90 = i90 + 1;

        goto label16;

     label17:
        $i84 = $i84 + i89;

        $i85 = $i85 + 1;

        i86 = i90;

        goto label14;

     label18:
        $i91 = $i84 / $i85;

        $r8 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Set positionedKeys>;

        interfaceinvoke $r8.<java.util.Set: void clear()>();

        r64 = r1;

        z22 = 0;

        $i92 = 0;

        i93 = interfaceinvoke r64.<java.util.List: int size()>();

     label19:
        if $i92 >= i93 goto label31;

        $r65 = interfaceinvoke r64.<java.util.List: java.lang.Object get(int)>($i92);

        $r66 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r65;

        z23 = 0;

        $r22 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Set positionedKeys>;

        $r23 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r23);

        $r24 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r25 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        r67 = (androidx.compose.foundation.lazy.grid.ItemInfo) $r26;

        if r67 != null goto label28;

        $z11 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: boolean getHasAnimations()>();

        if $z11 == 0 goto label30;

        $r30 = new androidx.compose.foundation.lazy.grid.ItemInfo;

        $i63 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        $i64 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisSize()>();

        $i65 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisOffset()>();

        specialinvoke $r30.<androidx.compose.foundation.lazy.grid.ItemInfo: void <init>(int,int,int)>($i63, $i64, $i65);

        r68 = $r30;

        $r31 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>;

        $r32 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r33 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        r69 = (java.lang.Integer) $r33;

        l94 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getPlaceableOffset-nOcc-ac()>();

        if r69 != null goto label20;

        $i95 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l94);

        goto label23;

     label20:
        if z0 != 0 goto label21;

        $i96 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l94);

        goto label22;

     label21:
        $i66 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l94);

        $i67 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSizeWithSpacings()>();

        $i96 = $i66 - $i67;

     label22:
        i97 = $i96;

        $i98 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSizeWithSpacings()>();

        $i68 = virtualinvoke r69.<java.lang.Integer: int intValue()>();

        $i95 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int calculateExpectedOffset-xfIKQeg(int,int,int,long,boolean,int,int,java.util.List,androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)>($i68, $i98, $i91, $l81, z0, $i79, i97, r1, r3);

     label23:
        i99 = $i95;

        $z24 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z24 == 0 goto label24;

        $l100 = staticinvoke <androidx.compose.ui.unit.IntOffset: long copy-iSbpLlY$default(long,int,int,int,java.lang.Object)>(l94, 0, i99, 1, null);

        goto label25;

     label24:
        $l100 = staticinvoke <androidx.compose.ui.unit.IntOffset: long copy-iSbpLlY$default(long,int,int,int,java.lang.Object)>(l94, i99, 0, 2, null);

     label25:
        l101 = $l100;

        i3 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        i102 = 0;

     label26:
        if i102 >= i3 goto label27;

        i4 = i102;

        $r37 = virtualinvoke r68.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r38 = new androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $i69 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i4);

        specialinvoke $r38.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void <init>(long,int,kotlin.jvm.internal.DefaultConstructorMarker)>(l101, $i69, null);

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r38);

        $r39 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        i102 = i102 + 1;

        goto label26;

     label27:
        $r34 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r35 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r68);

        specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.compose.foundation.lazy.grid.LazyGridPositionedItem,androidx.compose.foundation.lazy.grid.ItemInfo)>($r66, r68);

        goto label30;

     label28:
        $z10 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: boolean getHasAnimations()>();

        if $z10 == 0 goto label29;

        l103 = virtualinvoke r67.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i56 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l103);

        $i57 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l81);

        $i58 = $i56 + $i57;

        $i59 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l103);

        $i60 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l81);

        $i61 = $i59 + $i60;

        $l62 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i58, $i61);

        virtualinvoke r67.<androidx.compose.foundation.lazy.grid.ItemInfo: void setNotAnimatableDelta--gyyYBs(long)>($l62);

        specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.compose.foundation.lazy.grid.LazyGridPositionedItem,androidx.compose.foundation.lazy.grid.ItemInfo)>($r66, r67);

        goto label30;

     label29:
        $r27 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r28 = virtualinvoke $r66.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r27.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r28);

     label30:
        $i92 = $i92 + 1;

        goto label19;

     label31:
        if z0 != 0 goto label32;

        $i47 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex> = $i47;

        $l48 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $i49 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>($l48);

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemNotVisiblePartSize> = $i49;

        $i50 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex> = $i50;

        $l51 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $i52 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>($l51);

        $i53 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getLineMainAxisSizeWithSpacings()>();

        $i54 = $i52 + $i53;

        $i55 = $i54 - $i79;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemNotVisiblePartSize> = $i55;

        goto label35;

     label32:
        $i5 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex> = $i5;

        $l6 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $i7 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>($l6);

        $i8 = $i79 - $i7;

        $i9 = virtualinvoke r57.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getLineMainAxisSize()>();

        $i10 = $i8 - $i9;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemNotVisiblePartSize> = $i10;

        $i11 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex> = $i11;

        $l12 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $i13 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>($l12);

        $i14 = neg $i13;

        $i15 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getLineMainAxisSizeWithSpacings()>();

        $z3 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z3 == 0 goto label33;

        $l46 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getSize-YbymL2g()>();

        $i104 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>($l46);

        goto label34;

     label33:
        $l16 = virtualinvoke $r56.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getSize-YbymL2g()>();

        $i104 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l16);

     label34:
        $i17 = $i15 - $i104;

        $i18 = $i14 + $i17;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemNotVisiblePartSize> = $i18;

     label35:
        $r70 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r71 = interfaceinvoke $r70.<java.util.Map: java.util.Set entrySet()>();

        r72 = interfaceinvoke $r71.<java.util.Set: java.util.Iterator iterator()>();

     label36:
        $z26 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label56;

        $r10 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        r73 = (java.util.Map$Entry) $r10;

        $r11 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Set positionedKeys>;

        $r12 = interfaceinvoke r73.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z4 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z4 != 0 goto label36;

        $r13 = interfaceinvoke r73.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r74 = (androidx.compose.foundation.lazy.grid.ItemInfo) $r13;

        l105 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i19 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l105);

        $i20 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l81);

        $i21 = $i19 + $i20;

        $i22 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l105);

        $i23 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l81);

        $i24 = $i22 + $i23;

        $l25 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i21, $i24);

        virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: void setNotAnimatableDelta--gyyYBs(long)>($l25);

        $r14 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider: java.util.Map getKeyToIndexMap()>();

        $r15 = interfaceinvoke r73.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        r75 = (java.lang.Integer) $r16;

        z28 = 0;

        r76 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        z29 = 0;

        i106 = 0;

        i107 = interfaceinvoke r76.<java.util.List: int size()>();

     label37:
        if i106 >= i107 goto label41;

        r77 = interfaceinvoke r76.<java.util.List: java.lang.Object get(int)>(i106);

        r78 = r77;

        r79 = (androidx.compose.foundation.lazy.grid.PlaceableInfo) r78;

        z31 = 0;

        l108 = virtualinvoke r79.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        l109 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i36 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l108);

        $i37 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l109);

        $i38 = $i36 + $i37;

        $i39 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l108);

        $i40 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l109);

        $i41 = $i39 + $i40;

        l110 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i38, $i41);

        $i42 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l110);

        $i43 = virtualinvoke r79.<androidx.compose.foundation.lazy.grid.PlaceableInfo: int getMainAxisSize()>();

        $i44 = $i42 + $i43;

        if $i44 <= 0 goto label38;

        $i45 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l110);

        if $i45 >= $i79 goto label38;

        $z33 = 1;

        goto label39;

     label38:
        $z33 = 0;

     label39:
        if $z33 == 0 goto label40;

        $z34 = 1;

        goto label42;

     label40:
        i106 = i106 + 1;

        goto label37;

     label41:
        $z34 = 0;

     label42:
        $z35 = $z34;

        r80 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        z36 = 0;

        r81 = r80;

        z37 = 0;

        i111 = 0;

        i112 = interfaceinvoke r81.<java.util.List: int size()>();

     label43:
        if i111 >= i112 goto label45;

        r82 = interfaceinvoke r81.<java.util.List: java.lang.Object get(int)>(i111);

        z38 = 0;

        r83 = (androidx.compose.foundation.lazy.grid.PlaceableInfo) r82;

        z39 = 0;

        $z8 = virtualinvoke r83.<androidx.compose.foundation.lazy.grid.PlaceableInfo: boolean getInProgress()>();

        if $z8 == 0 goto label44;

        $z40 = 1;

        goto label46;

     label44:
        i111 = i111 + 1;

        goto label43;

     label45:
        $z40 = 0;

     label46:
        if $z40 != 0 goto label47;

        $z41 = 1;

        goto label48;

     label47:
        $z41 = 0;

     label48:
        if $z35 != 0 goto label49;

        if $z41 != 0 goto label50;

     label49:
        if r75 == null goto label50;

        $r17 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $z5 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label51;

     label50:
        interfaceinvoke r72.<java.util.Iterator: void remove()>();

        goto label36;

     label51:
        $i26 = virtualinvoke r75.<java.lang.Integer: int intValue()>();

        $i27 = staticinvoke <androidx.compose.foundation.lazy.grid.ItemIndex: int constructor-impl(int)>($i26);

        $z6 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z6 == 0 goto label52;

        $r19 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $i35 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: int getCrossAxisSize()>();

        $l113 = virtualinvoke $r19.<androidx.compose.ui.unit.Constraints$Companion: long fixedWidth-OenEA2s(int)>($i35);

        goto label53;

     label52:
        $r18 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $i29 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: int getCrossAxisSize()>();

        $l113 = virtualinvoke $r18.<androidx.compose.ui.unit.Constraints$Companion: long fixedHeight-OenEA2s(int)>($i29);

     label53:
        r84 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider: androidx.compose.foundation.lazy.grid.LazyMeasuredItem getAndMeasure-ednRnyU$default(androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider,int,int,long,int,java.lang.Object)>(r2, $i27, 0, $l113, 2, null);

        i114 = virtualinvoke r84.<androidx.compose.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSizeWithSpacings()>();

        $i30 = virtualinvoke r75.<java.lang.Integer: int intValue()>();

        i115 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int calculateExpectedOffset-xfIKQeg(int,int,int,long,boolean,int,int,java.util.List,androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)>($i30, i114, $i91, $l81, z0, $i79, $i79, r1, r3);

        if z0 == 0 goto label54;

        $i33 = $i79 - i115;

        $i34 = virtualinvoke r84.<androidx.compose.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        $i116 = $i33 - $i34;

        goto label55;

     label54:
        $i116 = i115;

     label55:
        i117 = $i116;

        $i31 = virtualinvoke $r74.<androidx.compose.foundation.lazy.grid.ItemInfo: int getCrossAxisOffset()>();

        $i32 = virtualinvoke r84.<androidx.compose.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        r85 = virtualinvoke r84.<androidx.compose.foundation.lazy.grid.LazyMeasuredItem: androidx.compose.foundation.lazy.grid.LazyGridPositionedItem position(int,int,int,int,int,int,int)>(i117, $i31, i1, i2, -1, -1, $i32);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r85);

        specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.compose.foundation.lazy.grid.LazyGridPositionedItem,androidx.compose.foundation.lazy.grid.ItemInfo)>(r85, $r74);

        goto label36;

     label56:
        $r9 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider: java.util.Map getKeyToIndexMap()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r9;

        return;
    }

    public final long getAnimatedOffset-YT5a7pE(java.lang.Object, int, int, int, long)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        java.lang.Object r1, $r5, $r8, $r10;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        long l3, l4, l21, l22, l23, $l24, l25;
        androidx.compose.foundation.lazy.grid.ItemInfo r2, $r6;
        androidx.compose.foundation.lazy.grid.PlaceableInfo r3;
        java.util.Map $r4;
        java.util.List $r7;
        androidx.compose.animation.core.Animatable $r9;
        androidx.compose.ui.unit.IntOffset $r11;
        boolean $z1;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 $r12;
        kotlinx.coroutines.CoroutineScope $r13;
        kotlin.jvm.functions.Function2 $r14;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r4 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (androidx.compose.foundation.lazy.grid.ItemInfo) $r5;

        if $r6 != null goto label1;

        return l3;

     label1:
        r2 = $r6;

        $r7 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (androidx.compose.foundation.lazy.grid.PlaceableInfo) $r8;

        $r9 = virtualinvoke r3.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r10 = virtualinvoke $r9.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r11 = (androidx.compose.ui.unit.IntOffset) $r10;

        l21 = virtualinvoke $r11.<androidx.compose.ui.unit.IntOffset: long unbox-impl()>();

        l22 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l21);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l22);

        $i7 = $i5 + $i6;

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l21);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l22);

        $i10 = $i8 + $i9;

        l4 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i7, $i10);

        l23 = virtualinvoke r3.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $l24 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i11 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l23);

        $i12 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l24);

        $i13 = $i11 + $i12;

        $i14 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l23);

        $i15 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l24);

        $i16 = $i14 + $i15;

        l25 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i13, $i16);

        $z1 = virtualinvoke r3.<androidx.compose.foundation.lazy.grid.PlaceableInfo: boolean getInProgress()>();

        if $z1 == 0 goto label4;

        $i17 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l25);

        if $i17 >= i1 goto label2;

        $i20 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        if $i20 < i1 goto label3;

     label2:
        $i18 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l25);

        if $i18 <= i2 goto label4;

        $i19 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        if $i19 <= i2 goto label4;

     label3:
        $r13 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>;

        $r12 = new androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        specialinvoke $r12.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo,kotlin.coroutines.Continuation)>(r3, null);

        $r14 = (kotlin.jvm.functions.Function2) $r12;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r13, null, null, $r14, 3, null);

     label4:
        return l4;
    }

    public final void reset()
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r2;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex> = -1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemNotVisiblePartSize> = 0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex> = -1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemNotVisiblePartSize> = 0;

        return;
    }

    private final int calculateExpectedOffset-xfIKQeg(int, int, int, long, boolean, int, int, java.util.List, androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, i25, $i26, $i27, i28, $i29, i30;
        long l3;
        boolean z0, z1, z2, $z3, $z4;
        java.util.List r1;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        z0 := @parameter4: boolean;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r1 := @parameter7: java.util.List;

        r2 := @parameter8: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        if z0 != 0 goto label02;

        $i21 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex>;

        if $i21 >= i0 goto label01;

        $z3 = 1;

        goto label04;

     label01:
        $z3 = 0;

        goto label04;

     label02:
        $i6 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex>;

        if $i6 <= i0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

        if z0 != 0 goto label06;

        $i20 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex>;

        if $i20 <= i0 goto label05;

        $z4 = 1;

        goto label08;

     label05:
        $z4 = 0;

        goto label08;

     label06:
        $i7 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex>;

        if $i7 >= i0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z2 = $z4;

        if z1 == 0 goto label13;

        if z0 != 0 goto label09;

        $i22 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex>;

        goto label10;

     label09:
        $i22 = i0;

     label10:
        i23 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>(r2, $i22);

        if z0 != 0 goto label11;

        $i24 = i0;

        goto label12;

     label11:
        $i24 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemIndex>;

     label12:
        i25 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$lastIndexInPreviousLineBefore(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>(r2, $i24);

        $i15 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportEndItemNotVisiblePartSize>;

        $i16 = i4 + $i15;

        $i17 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l3);

        $i18 = $i16 + $i17;

        $i19 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$getLinesMainAxisSizesSum(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int,int,int,java.util.List)>(r2, i23, i25, i2, r1);

        $i26 = $i18 + $i19;

        goto label19;

     label13:
        if z2 == 0 goto label18;

        if z0 != 0 goto label14;

        $i27 = i0;

        goto label15;

     label14:
        $i27 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex>;

     label15:
        i28 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$firstIndexInNextLineAfter(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>(r2, $i27);

        if z0 != 0 goto label16;

        $i29 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemIndex>;

        goto label17;

     label16:
        $i29 = i0;

     label17:
        i30 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$lastIndexInPreviousLineBefore(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int)>(r2, $i29);

        $i8 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int viewportStartItemNotVisiblePartSize>;

        $i9 = specialinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l3);

        $i11 = $i8 + $i9;

        $i10 = neg i1;

        $i12 = $i11 + $i10;

        $i13 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: int access$getLinesMainAxisSizesSum(androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider,int,int,int,java.util.List)>(r2, i28, i30, i2, r1);

        $i14 = neg $i13;

        $i26 = $i12 + $i14;

        goto label19;

     label18:
        $i26 = i5;

     label19:
        return $i26;
    }

    private final void startAnimationsIfNeeded(androidx.compose.foundation.lazy.grid.LazyGridPositionedItem, androidx.compose.foundation.lazy.grid.ItemInfo)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.compose.foundation.lazy.grid.LazyGridPositionedItem r1;
        androidx.compose.foundation.lazy.grid.ItemInfo r2;
        java.lang.Object r3;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, i30, i33, i34;
        long l1, l2, l3, $l21, $l28, l31, l32, l35, l36;
        androidx.compose.animation.core.FiniteAnimationSpec r4;
        java.util.List $r5, $r6, $r11, $r12, $r14, r16;
        boolean $z3, z6;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 $r7;
        kotlinx.coroutines.CoroutineScope $r8;
        kotlin.jvm.functions.Function2 $r9;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r13, $r17;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridPositionedItem;

        r2 := @parameter1: androidx.compose.foundation.lazy.grid.ItemInfo;

     label1:
        $r5 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i5 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        if $i4 <= $i5 goto label2;

        $r14 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object removeLast(java.util.List)>($r14);

        goto label1;

     label2:
        $r6 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $i6 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i7 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        if $i6 >= $i7 goto label3;

        $r11 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        i30 = interfaceinvoke $r11.<java.util.List: int size()>();

        l31 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $r12 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r13 = new androidx.compose.foundation.lazy.grid.PlaceableInfo;

        l32 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i22 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l31);

        $i23 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l32);

        $i24 = $i22 - $i23;

        $i25 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l31);

        $i26 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l32);

        $i27 = $i25 - $i26;

        $l28 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i24, $i27);

        $i29 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i30);

        specialinvoke $r13.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void <init>(long,int,kotlin.jvm.internal.DefaultConstructorMarker)>($l28, $i29, null);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        r16 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        z6 = 0;

        i33 = 0;

        i34 = interfaceinvoke r16.<java.util.List: int size()>();

     label4:
        if i33 >= i34 goto label6;

        r3 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i33);

        $r17 = (androidx.compose.foundation.lazy.grid.PlaceableInfo) r3;

        i0 = i33;

        l35 = virtualinvoke $r17.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        l1 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l35);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l1);

        $i10 = $i8 + $i9;

        $i11 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l35);

        $i12 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l1);

        $i13 = $i11 + $i12;

        l2 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i10, $i13);

        l36 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: long getPlaceableOffset-nOcc-ac()>();

        $i14 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i0);

        virtualinvoke $r17.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void setMainAxisSize(int)>($i14);

        r4 = virtualinvoke r1.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec(int)>(i0);

        $z3 = staticinvoke <androidx.compose.ui.unit.IntOffset: boolean equals-impl0(long,long)>(l2, l36);

        if $z3 != 0 goto label5;

        l3 = virtualinvoke r2.<androidx.compose.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i15 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l36);

        $i16 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l3);

        $i17 = $i15 - $i16;

        $i18 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l36);

        $i19 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l3);

        $i20 = $i18 - $i19;

        $l21 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i17, $i20);

        virtualinvoke $r17.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void setTargetOffset--gyyYBs(long)>($l21);

        if r4 == null goto label5;

        virtualinvoke $r17.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(1);

        $r8 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>;

        $r7 = new androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        specialinvoke $r7.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.coroutines.Continuation)>($r17, r4, null);

        $r9 = (kotlin.jvm.functions.Function2) $r7;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r8, null, null, $r9, 3, null);

     label5:
        i33 = i33 + 1;

        goto label4;

     label6:
        return;
    }

    private final long toOffset-Bjo55l4(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        long $l3;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $i0 := @parameter0: int;

        $z0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z0 == 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        $z1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z1 != 0 goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $i2 = $i0;

     label4:
        $l3 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i1, $i2);

        return $l3;
    }

    private final int getMainAxis--gyyYBs(long)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        long $l0;
        boolean $z0;
        int $i1;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $l0 := @parameter0: long;

        $z0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l0);

        goto label2;

     label1:
        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l0);

     label2:
        return $i1;
    }

    public static final boolean access$isVertical$p(androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $z0 = $r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        return $z0;
    }

androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item>
    void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        java.lang.Object $r1, r2, $r10;
        int $i0;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r3, $r5, $r7;
        kotlin.Unit $r4;
        androidx.compose.animation.core.Animatable $r6;
        long $l1;
        androidx.compose.ui.unit.IntOffset $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r7 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item>;

        $l1 = virtualinvoke $r7.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $r8 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l1);

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label> = 1;

        $r10 = virtualinvoke $r6.<androidx.compose.animation.core.Animatable: java.lang.Object snapTo(java.lang.Object,kotlin.coroutines.Continuation)>($r8, $r9);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item>;

        virtualinvoke $r3.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(0);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r4 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $item>;

        specialinvoke $r3.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $this_run>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: java.util.List $positionedItems>
    void <init>(androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator, java.util.List)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1 r0;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r2 := @parameter1: java.util.List;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $this_run> = $r1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: java.util.List $positionedItems> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1 r0;
        int i0, $i1;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $r1;
        boolean $z0;
        java.util.List $r2, $r6;
        java.lang.Object $r3, $r7;
        androidx.compose.foundation.lazy.grid.LazyGridPositionedItem $r4, $r8;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator $this_run>;

        $z0 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean access$isVertical$p(androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator)>($r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: java.util.List $positionedItems>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r7;

        $i1 = virtualinvoke $r8.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getRow()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: java.util.List $positionedItems>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (androidx.compose.foundation.lazy.grid.LazyGridPositionedItem) $r3;

        $i1 = virtualinvoke $r4.<androidx.compose.foundation.lazy.grid.LazyGridPositionedItem: int getColumn()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$averageLineMainAxisSize$1$lineOf$1: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>
<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>
    void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r1;
        androidx.compose.animation.core.FiniteAnimationSpec $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.grid.PlaceableInfo;

        $r2 := @parameter1: androidx.compose.animation.core.FiniteAnimationSpec;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo> = $r1;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        java.lang.Object $r1, r4, $r15;
        androidx.compose.animation.core.FiniteAnimationSpec r2, $r16, $r17, $r21;
        java.lang.Throwable r3, $r19;
        int $i0;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r5, $r7, $r9, $r11;
        kotlin.Unit $r6;
        androidx.compose.animation.core.Animatable $r8, $r10;
        boolean $z0, $z1;
        long $l1;
        androidx.compose.ui.unit.IntOffset $r12;
        androidx.compose.animation.core.AnimationSpec $r13;
        kotlin.coroutines.Continuation $r14;
        java.lang.IllegalStateException $r18;
        androidx.compose.animation.core.SpringSpec $r20;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label08;
            default: goto label13;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r8 = virtualinvoke $r7.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $z0 = virtualinvoke $r8.<androidx.compose.animation.core.Animatable: boolean isRunning()>();

        if $z0 == 0 goto label04;

        $r16 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        $z1 = $r16 instanceof androidx.compose.animation.core.SpringSpec;

        if $z1 == 0 goto label02;

        $r17 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        $r20 = (androidx.compose.animation.core.SpringSpec) $r17;

        goto label03;

     label02:
        $r20 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: androidx.compose.animation.core.SpringSpec access$getInterruptionSpec$p()>();

     label03:
        $r21 = (androidx.compose.animation.core.FiniteAnimationSpec) $r20;

        goto label05;

     label04:
        $r21 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

     label05:
        r2 = $r21;

     label06:
        $r9 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r10 = virtualinvoke $r9.<androidx.compose.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r11 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $l1 = virtualinvoke $r11.<androidx.compose.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $r12 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l1);

        $r13 = (androidx.compose.animation.core.AnimationSpec) r2;

        $r14 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label> = 1;

        $r15 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r10, $r12, $r13, null, null, $r14, 12, null);

     label07:
        if $r15 != r4 goto label09;

        return r4;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        $r5 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(0);

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;

        r3 = $r19;

     label12:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label13:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r18;

        catch java.util.concurrent.CancellationException from label06 to label07 with label11;
        catch java.util.concurrent.CancellationException from label08 to label10 with label11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.animation.core.FiniteAnimationSpec $r4;
        androidx.compose.foundation.lazy.grid.PlaceableInfo $r5;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r5 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r4 = r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        specialinvoke $r3.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: void <init>(androidx.compose.foundation.lazy.grid.PlaceableInfo,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

