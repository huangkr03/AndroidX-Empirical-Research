androidx.media3.session.SessionToken
<androidx.media3.session.SessionToken: long WAIT_TIME_MS_FOR_SESSION3_TOKEN>
<androidx.media3.session.SessionToken: int TYPE_SESSION>
<androidx.media3.session.SessionToken: int TYPE_SESSION_SERVICE>
<androidx.media3.session.SessionToken: int TYPE_LIBRARY_SERVICE>
<androidx.media3.session.SessionToken: int TYPE_SESSION_LEGACY>
<androidx.media3.session.SessionToken: int TYPE_BROWSER_SERVICE_LEGACY>
<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>
<androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE>
<androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL>
<androidx.media3.session.SessionToken: int IMPL_TYPE_BASE>
<androidx.media3.session.SessionToken: int IMPL_TYPE_LEGACY>
<androidx.media3.session.SessionToken: androidx.media3.common.Bundleable$Creator CREATOR>
    public void <init>(android.content.Context, android.content.ComponentName)
    {
        androidx.media3.session.SessionToken r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        android.content.pm.PackageManager r3;
        int i0;
        java.lang.String $r6, $r12;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        androidx.media3.session.SessionTokenImplLegacy $r13;
        androidx.media3.session.SessionTokenImplBase $r14;
        byte b1;

        r0 := @this: androidx.media3.session.SessionToken;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "context must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "serviceComponent must not be null");

        r3 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        i0 = staticinvoke <androidx.media3.session.SessionToken: int getUid(android.content.pm.PackageManager,java.lang.String)>(r3, $r6);

        $z0 = staticinvoke <androidx.media3.session.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "androidx.media3.session.MediaLibraryService", r2);

        if $z0 == 0 goto label1;

        b1 = 2;

        goto label4;

     label1:
        $z1 = staticinvoke <androidx.media3.session.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "androidx.media3.session.MediaSessionService", r2);

        if $z1 == 0 goto label2;

        b1 = 1;

        goto label4;

     label2:
        $z2 = staticinvoke <androidx.media3.session.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "android.media.browse.MediaBrowserService", r2);

        if $z2 == 0 goto label3;

        b1 = 101;

        goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve SessionToken for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Manifest doesn\'t declare one of either MediaSessionService, MediaLibraryService, MediaBrowserService or MediaBrowserServiceCompat. Use service\'s full name.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label4:
        if b1 == 101 goto label5;

        $r14 = new androidx.media3.session.SessionTokenImplBase;

        specialinvoke $r14.<androidx.media3.session.SessionTokenImplBase: void <init>(android.content.ComponentName,int,int)>(r2, i0, b1);

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r14;

        goto label6;

     label5:
        $r13 = new androidx.media3.session.SessionTokenImplLegacy;

        specialinvoke $r13.<androidx.media3.session.SessionTokenImplLegacy: void <init>(android.content.ComponentName,int)>(r2, i0);

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r13;

     label6:
        return;
    }

    void <init>(int, int, int, int, java.lang.String, androidx.media3.session.IMediaSession, android.os.Bundle)
    {
        androidx.media3.session.SessionToken r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        androidx.media3.session.IMediaSession r2;
        android.os.Bundle r3;
        androidx.media3.session.SessionTokenImplBase $r4;

        r0 := @this: androidx.media3.session.SessionToken;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: androidx.media3.session.IMediaSession;

        r3 := @parameter6: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.media3.session.SessionTokenImplBase;

        specialinvoke $r4.<androidx.media3.session.SessionTokenImplBase: void <init>(int,int,int,int,java.lang.String,androidx.media3.session.IMediaSession,android.os.Bundle)>(i0, i1, i2, i3, r1, r2, r3);

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r4;

        return;
    }

    private void <init>(android.support.v4.media.session.MediaSessionCompat$Token, java.lang.String, int, android.os.Bundle)
    {
        androidx.media3.session.SessionToken r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        java.lang.String r2;
        int i0;
        android.os.Bundle r3;
        androidx.media3.session.SessionTokenImplLegacy $r4;

        r0 := @this: androidx.media3.session.SessionToken;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.media3.session.SessionTokenImplLegacy;

        specialinvoke $r4.<androidx.media3.session.SessionTokenImplLegacy: void <init>(android.support.v4.media.session.MediaSessionCompat$Token,java.lang.String,int,android.os.Bundle)>(r1, r2, i0, r3);

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r4;

        return;
    }

    private void <init>(android.os.Bundle)
    {
        androidx.media3.session.SessionToken r0;
        android.os.Bundle r1, r2, $r6;
        int i0;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;
        java.lang.Object $r7;
        androidx.media3.common.Bundleable$Creator $r8, $r11;
        androidx.media3.common.Bundleable $r9, $r12;
        androidx.media3.session.SessionToken$SessionTokenImpl $r10, $r13;

        r0 := @this: androidx.media3.session.SessionToken;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE>;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>($r3);

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "Impl type needs to be set.");

        $r4 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE>;

        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>($r4);

        $r5 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL>;

        $r6 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r5);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r2 = (android.os.Bundle) $r7;

        if i0 != 0 goto label1;

        $r11 = <androidx.media3.session.SessionTokenImplBase: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        $r13 = (androidx.media3.session.SessionToken$SessionTokenImpl) $r12;

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r13;

        goto label2;

     label1:
        $r8 = <androidx.media3.session.SessionTokenImplLegacy: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        $r10 = (androidx.media3.session.SessionToken$SessionTokenImpl) $r9;

        r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl> = $r10;

     label2:
        return;
    }

    public int hashCode()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.session.SessionToken r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        androidx.media3.session.SessionToken$SessionTokenImpl $r3, $r4;

        r0 := @this: androidx.media3.session.SessionToken;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media3.session.SessionToken;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.media3.session.SessionToken) r1;

        $r4 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r3 = r2.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String toString()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int getUid()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: int getUid()>();

        return $i0;
    }

    public java.lang.String getPackageName()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.String getPackageName()>();

        return $r2;
    }

    public java.lang.String getServiceName()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.String getServiceName()>();

        return $r2;
    }

    android.content.ComponentName getComponentName()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        android.content.ComponentName $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: android.content.ComponentName getComponentName()>();

        return $r2;
    }

    public int getType()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: int getType()>();

        return $i0;
    }

    public int getSessionVersion()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: int getLibraryVersion()>();

        return $i0;
    }

    public int getInterfaceVersion()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: int getInterfaceVersion()>();

        return $i0;
    }

    public android.os.Bundle getExtras()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        android.os.Bundle $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: android.os.Bundle getExtras()>();

        return $r2;
    }

    boolean isLegacySession()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $z0 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: boolean isLegacySession()>();

        return $z0;
    }

    java.lang.Object getBinder()
    {
        androidx.media3.session.SessionToken r0;
        androidx.media3.session.SessionToken$SessionTokenImpl $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.SessionToken;

        $r1 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.Object getBinder()>();

        return $r2;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context, android.media.session.MediaSession$Token)
    {
        android.content.Context r0;
        android.media.session.MediaSession$Token r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.media.session.MediaSession$Token;

        $r2 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)>(r1);

        $r3 = staticinvoke <androidx.media3.session.SessionToken: com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r0, $r2);

        return $r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context, android.media.session.MediaSession$Token, android.os.Looper)
    {
        android.content.Context r0;
        android.media.session.MediaSession$Token r1;
        android.os.Looper r2;
        android.support.v4.media.session.MediaSessionCompat$Token $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.media.session.MediaSession$Token;

        r2 := @parameter2: android.os.Looper;

        $r3 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.media3.session.SessionToken: com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Looper)>(r0, $r3, r2);

        return $r4;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        android.content.Context r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        android.os.HandlerThread r2, $r4;
        com.google.common.util.concurrent.ListenableFuture r3;
        android.os.Looper $r5;
        java.lang.Runnable $r7;
        java.util.concurrent.Executor $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("SessionTokenThread");

        r2 = $r4;

        virtualinvoke r2.<android.os.HandlerThread: void start()>();

        $r5 = virtualinvoke r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        r3 = staticinvoke <androidx.media3.session.SessionToken: com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Looper)>(r0, r1, $r5);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = dynamicinvoke "run" <java.lang.Runnable (android.os.HandlerThread)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.HandlerThread: boolean quit()>, methodtype: void __METHODTYPE__());

        $r8 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

        return r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture createSessionToken(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token, android.os.Looper)
    {
        android.content.Context r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        android.os.Looper r2;
        com.google.common.util.concurrent.SettableFuture r3;
        android.support.v4.media.session.MediaControllerCompat r4, $r10;
        java.lang.String r5;
        android.os.Handler r6, $r11;
        java.lang.Runnable r7;
        androidx.media3.session.SessionToken$1 $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        r2 := @parameter2: android.os.Looper;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "context must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "compatToken must not be null");

        r3 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r10 = new android.support.v4.media.session.MediaControllerCompat;

        specialinvoke $r10.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r0, r1);

        r4 = $r10;

        r5 = virtualinvoke r4.<android.support.v4.media.session.MediaControllerCompat: java.lang.String getPackageName()>();

        $r11 = new android.os.Handler;

        specialinvoke $r11.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r6 = $r11;

        r7 = dynamicinvoke "run" <java.lang.Runnable (android.content.Context,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.support.v4.media.session.MediaControllerCompat,com.google.common.util.concurrent.SettableFuture)>(r0, r5, r1, r4, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.SessionToken: void lambda$createSessionToken$0(android.content.Context,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.support.v4.media.session.MediaControllerCompat,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__());

        virtualinvoke r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r7, 500L);

        $r12 = new androidx.media3.session.SessionToken$1;

        specialinvoke $r12.<androidx.media3.session.SessionToken$1: void <init>(android.os.Handler,android.os.Handler,com.google.common.util.concurrent.SettableFuture,java.lang.Runnable)>(r6, r6, r3, r7);

        virtualinvoke r4.<android.support.v4.media.session.MediaControllerCompat: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>("androidx.media3.session.SESSION_COMMAND_REQUEST_SESSION3_TOKEN", null, $r12);

        return r3;
    }

    public static com.google.common.collect.ImmutableSet getAllServiceTokens(android.content.Context)
    {
        android.content.Context r0;
        android.content.pm.PackageManager r1;
        java.util.ArrayList r2, $r11;
        java.util.List r3, r4, r5;
        com.google.common.collect.ImmutableSet$Builder r6;
        java.util.Iterator r7;
        android.content.pm.ResolveInfo r8;
        android.content.pm.ServiceInfo r9, $r17;
        androidx.media3.session.SessionToken r10, $r18;
        android.content.Intent $r12, $r13, $r14;
        com.google.common.collect.ImmutableSet $r15;
        java.lang.Object $r16;
        android.content.ComponentName $r19;
        java.lang.String $r20, $r21;
        boolean $z3;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("androidx.media3.session.MediaLibraryService");

        r3 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r12, 128);

        if r3 == null goto label1;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r3);

     label1:
        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("androidx.media3.session.MediaSessionService");

        r4 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r13, 128);

        if r4 == null goto label2;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r4);

     label2:
        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.media.browse.MediaBrowserService");

        r5 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r14, 128);

        if r5 == null goto label3;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r5);

     label3:
        r6 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        r7 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.content.pm.ResolveInfo) $r16;

        if r8 == null goto label4;

        $r17 = r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r17 != null goto label5;

        goto label4;

     label5:
        r9 = r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r18 = new androidx.media3.session.SessionToken;

        $r19 = new android.content.ComponentName;

        $r21 = r9.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r20 = r9.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r19.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r21, $r20);

        specialinvoke $r18.<androidx.media3.session.SessionToken: void <init>(android.content.Context,android.content.ComponentName)>(r0, $r19);

        r10 = $r18;

        virtualinvoke r6.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>(r10);

        goto label4;

     label6:
        $r15 = virtualinvoke r6.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r15;
    }

    private static boolean isInterfaceDeclared(android.content.pm.PackageManager, java.lang.String, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, $r7, $r12, $r13;
        android.content.ComponentName r2;
        android.content.Intent r3, $r6;
        java.util.List r4;
        android.content.pm.ResolveInfo r5;
        int $i0, i1;
        java.lang.Object $r9;
        android.content.pm.ServiceInfo $r10, $r11;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ComponentName;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>(r1);

        r3 = $r6;

        $r7 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r7);

        r4 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 128);

        if r4 == null goto label4;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (android.content.pm.ResolveInfo) $r9;

        if r5 == null goto label3;

        $r10 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r10 != null goto label2;

        goto label3;

     label2:
        $r11 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r13 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r12, $r13);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    private static int getUid(android.content.pm.PackageManager, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        android.content.pm.ApplicationInfo $r3;
        int $i0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public android.os.Bundle toBundle()
    {
        androidx.media3.session.SessionToken r0;
        android.os.Bundle r1, $r2, $r7;
        androidx.media3.session.SessionToken$SessionTokenImpl $r3, $r5;
        boolean $z0;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: androidx.media3.session.SessionToken;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $z0 = $r3 instanceof androidx.media3.session.SessionTokenImplBase;

        if $z0 == 0 goto label1;

        $r8 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>($r8, 0);

        goto label2;

     label1:
        $r4 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>($r4, 1);

     label2:
        $r6 = <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL>;

        $r5 = r0.<androidx.media3.session.SessionToken: androidx.media3.session.SessionToken$SessionTokenImpl impl>;

        $r7 = interfaceinvoke $r5.<androidx.media3.session.SessionToken$SessionTokenImpl: android.os.Bundle toBundle()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r6, $r7);

        return r1;
    }

    private static androidx.media3.session.SessionToken fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.media3.session.SessionToken $r1;

        r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.media3.session.SessionToken;

        specialinvoke $r1.<androidx.media3.session.SessionToken: void <init>(android.os.Bundle)>(r0);

        return $r1;
    }

    private static void lambda$createSessionToken$0(android.content.Context, java.lang.String, android.support.v4.media.session.MediaSessionCompat$Token, android.support.v4.media.session.MediaControllerCompat, com.google.common.util.concurrent.SettableFuture)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.support.v4.media.session.MediaSessionCompat$Token r2;
        android.support.v4.media.session.MediaControllerCompat r3;
        com.google.common.util.concurrent.SettableFuture r4;
        int i0;
        androidx.media3.session.SessionToken r5, $r7;
        android.content.pm.PackageManager $r6;
        android.os.Bundle $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        r3 := @parameter3: android.support.v4.media.session.MediaControllerCompat;

        r4 := @parameter4: com.google.common.util.concurrent.SettableFuture;

        $r6 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i0 = staticinvoke <androidx.media3.session.SessionToken: int getUid(android.content.pm.PackageManager,java.lang.String)>($r6, r1);

        $r7 = new androidx.media3.session.SessionToken;

        $r8 = virtualinvoke r3.<android.support.v4.media.session.MediaControllerCompat: android.os.Bundle getSessionInfo()>();

        specialinvoke $r7.<androidx.media3.session.SessionToken: void <init>(android.support.v4.media.session.MediaSessionCompat$Token,java.lang.String,int,android.os.Bundle)>(r2, r1, i0, $r8);

        r5 = $r7;

        virtualinvoke r4.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1;
        androidx.media3.common.Bundleable$Creator $r2;

        $r0 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(0);

        <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL_TYPE> = $r0;

        $r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String intToStringMaxRadix(int)>(1);

        <androidx.media3.session.SessionToken: java.lang.String FIELD_IMPL> = $r1;

        $r2 = dynamicinvoke "fromBundle" <androidx.media3.common.Bundleable$Creator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.common.Bundleable __METHODTYPE__(android.os.Bundle), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.SessionToken: androidx.media3.session.SessionToken fromBundle(android.os.Bundle)>, methodtype: androidx.media3.session.SessionToken __METHODTYPE__(android.os.Bundle));

        <androidx.media3.session.SessionToken: androidx.media3.common.Bundleable$Creator CREATOR> = $r2;

        return;
    }

androidx.media3.session.SessionToken$1
<androidx.media3.session.SessionToken$1: android.os.Handler val$handler>
<androidx.media3.session.SessionToken$1: com.google.common.util.concurrent.SettableFuture val$future>
<androidx.media3.session.SessionToken$1: java.lang.Runnable val$createFallbackLegacyToken>
    void <init>(android.os.Handler, android.os.Handler, com.google.common.util.concurrent.SettableFuture, java.lang.Runnable)
    {
        androidx.media3.session.SessionToken$1 r0;
        android.os.Handler r1, r2;
        com.google.common.util.concurrent.SettableFuture r3;
        java.lang.Runnable r4;

        r0 := @this: androidx.media3.session.SessionToken$1;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        r4 := @parameter3: java.lang.Runnable;

        r0.<androidx.media3.session.SessionToken$1: android.os.Handler val$handler> = r2;

        r0.<androidx.media3.session.SessionToken$1: com.google.common.util.concurrent.SettableFuture val$future> = r3;

        r0.<androidx.media3.session.SessionToken$1: java.lang.Runnable val$createFallbackLegacyToken> = r4;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>(r1);

        return;
    }

    protected void onReceiveResult(int, android.os.Bundle)
    {
        androidx.media3.session.SessionToken$1 r0;
        int i0;
        android.os.Bundle r1;
        java.lang.Throwable r2, $r8;
        android.os.Handler $r3;
        androidx.media3.common.Bundleable$Creator $r4;
        com.google.common.util.concurrent.SettableFuture $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.SessionToken $r7;
        java.lang.Runnable $r9;

        r0 := @this: androidx.media3.session.SessionToken$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.media3.session.SessionToken$1: android.os.Handler val$handler>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label1:
        $r5 = r0.<androidx.media3.session.SessionToken$1: com.google.common.util.concurrent.SettableFuture val$future>;

        $r4 = <androidx.media3.session.SessionToken: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        $r7 = (androidx.media3.session.SessionToken) $r6;

        virtualinvoke $r5.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<androidx.media3.session.SessionToken$1: java.lang.Runnable val$createFallbackLegacyToken>;

        interfaceinvoke $r9.<java.lang.Runnable: void run()>();

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

androidx.media3.session.SessionToken$SessionTokenImpl
<androidx.media3.session.SessionToken$SessionTokenImpl: boolean isLegacySession()>
<androidx.media3.session.SessionToken$SessionTokenImpl: int getUid()>
<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.String getPackageName()>
<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.String getServiceName()>
<androidx.media3.session.SessionToken$SessionTokenImpl: android.content.ComponentName getComponentName()>
<androidx.media3.session.SessionToken$SessionTokenImpl: int getType()>
<androidx.media3.session.SessionToken$SessionTokenImpl: int getLibraryVersion()>
<androidx.media3.session.SessionToken$SessionTokenImpl: int getInterfaceVersion()>
<androidx.media3.session.SessionToken$SessionTokenImpl: android.os.Bundle getExtras()>
<androidx.media3.session.SessionToken$SessionTokenImpl: java.lang.Object getBinder()>
androidx.media3.session.SessionToken$TokenType
