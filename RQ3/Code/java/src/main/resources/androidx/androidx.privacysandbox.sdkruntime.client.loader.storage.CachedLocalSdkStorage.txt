androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion Companion>
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: android.content.Context context>
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider rootFolderProvider>
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: long lowSpaceThreshold>
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: java.lang.String LOG_TAG>
    private void <init>(android.content.Context, androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider, long)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage r0;
        android.content.Context r1;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r2;
        long l0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: android.content.Context context> = r1;

        r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider rootFolderProvider> = r2;

        r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: long lowSpaceThreshold> = l0;

        return;
    }

    public androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles dexFilesFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage r0;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig r1;
        boolean z0, $z2, $z4, $z5;
        java.io.File r2, r7, $r16;
        java.util.List r3, $r9, $r11, r38;
        int i0, i7;
        java.lang.String r5, r6, $r21, $r25, $r30, $r36;
        long $l1, $l2;
        byte $b3;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider $r8;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles $r10;
        java.lang.Object $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r23, $r24, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35;
        java.lang.Throwable $r22, $r31, $r37, r39;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        r1 := @parameter0: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sdkConfig");

        $l1 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: long availableBytes()>();

        $l2 = r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: long lowSpaceThreshold>;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $r8 = r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider rootFolderProvider>;

        r2 = virtualinvoke $r8.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.io.File dexFolderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig)>(r1);

     label3:
        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List createListBuilder()>();

        i7 = 0;

        $r9 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.util.List getDexPaths()>();

        i0 = interfaceinvoke $r9.<java.util.List: int size()>();

     label4:
        if i7 >= i0 goto label7;

        $r11 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.util.List getDexPaths()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i7);

        r5 = (java.lang.String) $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dex");

        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, r6);

        r7 = $r16;

        $z2 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label6;

        if z0 == 0 goto label5;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t extract ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because of low space");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CachedLocalSdkStorage", $r21);

        return null;

     label5:
        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: void extractAssetToFile(java.lang.String,java.io.File)>(r5, r7);

     label6:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7);

        i7 = i7 + 1;

        goto label4;

     label7:
        r38 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List build(java.util.List)>(r3);

        $r10 = new androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles;

        specialinvoke $r10.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkDexFiles: void <init>(java.util.List)>(r38);

        return $r10;

     label8:
        $r22 := @caughtexception;

        r39 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to extract ");

        $r25 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.lang.String getPackageName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deleting ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = (java.lang.Throwable) r39;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CachedLocalSdkStorage", $r30, $r31);

        $z4 = staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r2);

        if $z4 != 0 goto label9;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during cleanup.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = (java.lang.Throwable) r39;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CachedLocalSdkStorage", $r36, $r37);

     label9:
        throw r39;

        catch java.lang.Exception from label3 to label8 with label8;
    }

    private final void extractAssetToFile(java.lang.String, java.io.File)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage r0;
        java.lang.String r1;
        java.io.File r2;
        java.io.Closeable r3, r4;
        android.content.Context $r5;
        android.content.res.AssetManager $r6;
        java.io.InputStream $r7, r14;
        java.io.FileOutputStream $r8, r15;
        java.io.OutputStream $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, r16, r17, r18, r19, r20, r21;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        virtualinvoke r2.<java.io.File: boolean createNewFile()>();

        $r5 = r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: android.content.Context context>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r1);

        r3 = (java.io.Closeable) $r7;

     label01:
        r14 = (java.io.InputStream) r3;

        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        r4 = (java.io.Closeable) $r8;

     label02:
        r15 = (java.io.FileOutputStream) r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r14, "fromStream");

        $r9 = (java.io.OutputStream) r15;

        staticinvoke <kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)>(r14, $r9, 0, 2, null);

     label03:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, null);

        goto label07;

     label04:
        $r10 := @caughtexception;

        r16 = $r10;

        r17 = r16;

        throw r16;

     label05:
        $r11 := @caughtexception;

        r18 = $r11;

     label06:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, r17);

        throw r18;

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, null);

        goto label11;

     label08:
        $r13 := @caughtexception;

        r19 = $r13;

        r20 = r19;

        throw r19;

     label09:
        $r12 := @caughtexception;

        r21 = $r12;

     label10:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r20);

        throw r21;

     label11:
        virtualinvoke r2.<java.io.File: boolean setReadOnly()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private final long availableBytes()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage r0;
        java.io.File r1;
        android.os.StatFs r2, $r3;
        long l0, l1, $l5, $l6;
        java.lang.String $r4;
        int $i2, $i3, $i4;
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl $r5;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r3 = new android.os.StatFs;

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r3.<android.os.StatFs: void <init>(java.lang.String)>($r4);

        r2 = $r3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 18 goto label1;

        $r5 = <androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl INSTANCE>;

        $l6 = virtualinvoke $r5.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl: long availableBytes(android.os.StatFs)>(r2);

        return $l6;

     label1:
        $i3 = virtualinvoke r2.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i3;

        $i4 = virtualinvoke r2.<android.os.StatFs: int getAvailableBlocks()>();

        l1 = (long) $i4;

        $l5 = l1 * l0;

        return $l5;
    }

    public void <init>(android.content.Context, androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage r0;
        android.content.Context r1;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r2;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        l0 := @parameter2: long;

        $r3 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: void <init>(android.content.Context,androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider,long)>(r1, r2, l0);

        return;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl
<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl INSTANCE>
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long availableBytes(android.os.StatFs)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl r0;
        android.os.StatFs r1;
        long $l0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl;

        r1 := @parameter0: android.os.StatFs;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "statFs");

        $l0 = virtualinvoke r1.<android.os.StatFs: long getAvailableBytes()>();

        return $l0;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl: void <init>()>();

        <androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Api18Impl INSTANCE> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage create(android.content.Context, long)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion r0;
        android.content.Context r1;
        long l0;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r2;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion $r3;
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage $r4;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = <androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion Companion>;

        r2 = virtualinvoke $r3.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider create(android.content.Context)>(r1);

        $r4 = new androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage;

        specialinvoke $r4.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage: void <init>(android.content.Context,androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider,long,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, l0, null);

        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.CachedLocalSdkStorage$Companion: void <init>()>();

        return;
    }

