androidx.animation.SeekableAnimation
<androidx.animation.SeekableAnimation: java.util.Map currentValues>
<androidx.animation.SeekableAnimation: java.util.Map currentAnimWrappers>
<androidx.animation.SeekableAnimation: androidx.animation.StateImpl toState>
<androidx.animation.SeekableAnimation: androidx.animation.StateImpl fromState>
<androidx.animation.SeekableAnimation: long duration>
<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def>
    public final long getDuration()
    {
        androidx.animation.SeekableAnimation r0;
        long $l0;

        r0 := @this: androidx.animation.SeekableAnimation;

        $l0 = r0.<androidx.animation.SeekableAnimation: long duration>;

        return $l0;
    }

    public final java.util.Map getAnimValuesAt(long)
    {
        androidx.animation.SeekableAnimation r0;
        long l0, $l2;
        java.util.Map$Entry r1, r17, r19;
        java.util.Iterator r2;
        byte $b1, $b3;
        java.util.Set $r3;
        boolean $z0, z1, z2, z3;
        java.lang.Object $r4, $r5, $r6, $r8;
        java.util.Map $r7, $r11, $r12, $r14, $r15, r16, $r21;
        androidx.animation.StateImpl $r10, $r13;
        androidx.animation.PropKey r18;
        androidx.animation.Animation r20;

        r0 := @this: androidx.animation.SeekableAnimation;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r14 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentValues>;

        $r13 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl fromState>;

        $r15 = virtualinvoke $r13.<androidx.animation.StateImpl: java.util.Map getProps$ui_animation_core_release()>();

        interfaceinvoke $r14.<java.util.Map: void putAll(java.util.Map)>($r15);

        goto label4;

     label1:
        $l2 = r0.<androidx.animation.SeekableAnimation: long duration>;

        $b3 = l0 cmp $l2;

        if $b3 < 0 goto label2;

        $r11 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentValues>;

        $r10 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl toState>;

        $r12 = virtualinvoke $r10.<androidx.animation.StateImpl: java.util.Map getProps$ui_animation_core_release()>();

        interfaceinvoke $r11.<java.util.Map: void putAll(java.util.Map)>($r12);

        goto label4;

     label2:
        r16 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentAnimWrappers>;

        z1 = 0;

        $r3 = interfaceinvoke r16.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r4;

        r17 = r1;

        z2 = 0;

        $r5 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        r18 = (androidx.animation.PropKey) $r5;

        r19 = r1;

        z3 = 0;

        $r6 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        r20 = (androidx.animation.Animation) $r6;

        $r7 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentValues>;

        $r8 = interfaceinvoke r20.<androidx.animation.Animation: java.lang.Object getValue(long)>(l0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r8);

        goto label3;

     label4:
        $r21 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentValues>;

        return $r21;
    }

    public final androidx.animation.TransitionDefinition getDef()
    {
        androidx.animation.SeekableAnimation r0;
        androidx.animation.TransitionDefinition $r1;

        r0 := @this: androidx.animation.SeekableAnimation;

        $r1 = r0.<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def>;

        return $r1;
    }

    public void <init>(androidx.animation.TransitionDefinition, java.lang.Object, java.lang.Object)
    {
        androidx.animation.SeekableAnimation r0, r39, r41;
        androidx.animation.TransitionDefinition r1, $r8, $r12, $r19;
        java.lang.Object r2, r3, $r10, $r14, $r29, $r30, $r34, $r36;
        java.util.Map$Entry r4, r45;
        java.util.Iterator r5;
        boolean z0, $z1, z2, z3, z4;
        java.util.LinkedHashMap $r6, $r7;
        java.util.Map $r9, $r13, $r17, $r18, $r22, $r31, r40, r42, r44;
        androidx.animation.StateImpl $r11, $r15, $r16, $r20, $r33, $r35;
        java.util.Set $r21;
        kotlin.sequences.Sequence $r23, $r26;
        androidx.animation.SeekableAnimation$duration$1 $r24;
        kotlin.jvm.functions.Function1 $r25;
        java.lang.Comparable $r27;
        java.lang.Number $r28;
        long $l0;
        androidx.animation.AnimationSpec $r32;
        androidx.animation.Animation $r37;
        androidx.animation.TransitionSpec r43;
        androidx.animation.PropKey r46;

        r0 := @this: androidx.animation.SeekableAnimation;

        r1 := @parameter0: androidx.animation.TransitionDefinition;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "def");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def> = r1;

        r39 = r0;

        z2 = 0;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r40 = (java.util.Map) $r6;

        r39.<androidx.animation.SeekableAnimation: java.util.Map currentValues> = r40;

        r41 = r0;

        z3 = 0;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r42 = (java.util.Map) $r7;

        r41.<androidx.animation.SeekableAnimation: java.util.Map currentAnimWrappers> = r42;

        $r8 = r0.<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def>;

        $r9 = virtualinvoke $r8.<androidx.animation.TransitionDefinition: java.util.Map getStates$ui_animation_core_release()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r10);

        $r11 = (androidx.animation.StateImpl) $r10;

        r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl toState> = $r11;

        $r12 = r0.<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def>;

        $r13 = virtualinvoke $r12.<androidx.animation.TransitionDefinition: java.util.Map getStates$ui_animation_core_release()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r14);

        $r15 = (androidx.animation.StateImpl) $r14;

        r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl fromState> = $r15;

        $r17 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentValues>;

        $r16 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl fromState>;

        $r18 = virtualinvoke $r16.<androidx.animation.StateImpl: java.util.Map getProps$ui_animation_core_release()>();

        interfaceinvoke $r17.<java.util.Map: void putAll(java.util.Map)>($r18);

        $r19 = r0.<androidx.animation.SeekableAnimation: androidx.animation.TransitionDefinition def>;

        r43 = virtualinvoke $r19.<androidx.animation.TransitionDefinition: androidx.animation.TransitionSpec getSpec$ui_animation_core_release(java.lang.Object,java.lang.Object)>(r2, r3);

        $r20 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl toState>;

        r44 = virtualinvoke $r20.<androidx.animation.StateImpl: java.util.Map getProps$ui_animation_core_release()>();

        z4 = 0;

        $r21 = interfaceinvoke r44.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r29 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r29;

        r45 = r4;

        z0 = 0;

        $r30 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        r46 = (androidx.animation.PropKey) $r30;

        $r31 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentAnimWrappers>;

        $r32 = virtualinvoke r43.<androidx.animation.TransitionSpec: androidx.animation.AnimationSpec getAnimationForProp$ui_animation_core_release(androidx.animation.PropKey)>(r46);

        $r33 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl fromState>;

        $r34 = virtualinvoke $r33.<androidx.animation.StateImpl: java.lang.Object get(androidx.animation.PropKey)>(r46);

        $r35 = r0.<androidx.animation.SeekableAnimation: androidx.animation.StateImpl toState>;

        $r36 = virtualinvoke $r35.<androidx.animation.StateImpl: java.lang.Object get(androidx.animation.PropKey)>(r46);

        $r37 = staticinvoke <androidx.animation.TransitionAnimationKt: androidx.animation.Animation createAnimationWrapper(androidx.animation.PropKey,androidx.animation.AnimationSpec,java.lang.Object,androidx.animation.AnimationVector,java.lang.Object)>(r46, $r32, $r34, null, $r36);

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, $r37);

        goto label1;

     label2:
        $r22 = r0.<androidx.animation.SeekableAnimation: java.util.Map currentAnimWrappers>;

        $r23 = staticinvoke <kotlin.collections.MapsKt: kotlin.sequences.Sequence asSequence(java.util.Map)>($r22);

        $r24 = <androidx.animation.SeekableAnimation$duration$1: androidx.animation.SeekableAnimation$duration$1 INSTANCE>;

        $r25 = (kotlin.jvm.functions.Function1) $r24;

        $r26 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r23, $r25);

        $r27 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable max(kotlin.sequences.Sequence)>($r26);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r27);

        $r28 = (java.lang.Number) $r27;

        $l0 = virtualinvoke $r28.<java.lang.Number: long longValue()>();

        r0.<androidx.animation.SeekableAnimation: long duration> = $l0;

        return;
    }

androidx.animation.SeekableAnimation$duration$1
<androidx.animation.SeekableAnimation$duration$1: androidx.animation.SeekableAnimation$duration$1 INSTANCE>
    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.animation.SeekableAnimation$duration$1 r0;
        java.lang.Object r1;
        java.util.Map$Entry $r2;
        long $l0;
        java.lang.Long $r3;

        r0 := @this: androidx.animation.SeekableAnimation$duration$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $l0 = virtualinvoke r0.<androidx.animation.SeekableAnimation$duration$1: long invoke(java.util.Map$Entry)>($r2);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r3;
    }

    public final long invoke(java.util.Map$Entry)
    {
        androidx.animation.SeekableAnimation$duration$1 r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2;
        androidx.animation.Animation $r3;
        long $l0;

        r0 := @this: androidx.animation.SeekableAnimation$duration$1;

        r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (androidx.animation.Animation) $r2;

        $l0 = interfaceinvoke $r3.<androidx.animation.Animation: long getDurationMillis()>();

        return $l0;
    }

    void <init>()
    {
        androidx.animation.SeekableAnimation$duration$1 r0;

        r0 := @this: androidx.animation.SeekableAnimation$duration$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    static void <clinit>()
    {
        androidx.animation.SeekableAnimation$duration$1 $r0;

        $r0 = new androidx.animation.SeekableAnimation$duration$1;

        specialinvoke $r0.<androidx.animation.SeekableAnimation$duration$1: void <init>()>();

        <androidx.animation.SeekableAnimation$duration$1: androidx.animation.SeekableAnimation$duration$1 INSTANCE> = $r0;

        return;
    }

