androidx.room.compiler.processing.ksp.KspTypeElement
<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspTypeElement$Companion Companion>
<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration declaration>
<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>
<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy name$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy packageName$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy enclosingTypeElement$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy typeParameters$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy qualifiedName$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy type$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superTypes$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superClass$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superInterfaces$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy className$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy xClassName$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods>
<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredProperties$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredFields$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy syntheticGetterSetterMethods$delegate>
<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredMethods$delegate>
    private void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSClassDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSClassDeclaration r2;
        com.google.devtools.ksp.symbol.KSAnnotated $r3, $r8;
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion $r4;
        androidx.room.compiler.processing.XHasModifiers $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r9;
        androidx.room.compiler.processing.ksp.KspAnnotated $r10;
        androidx.room.compiler.processing.ksp.KspTypeElement$name$2 $r11;
        kotlin.jvm.functions.Function0 $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r46, $r49, $r51, $r54, $r57, $r60;
        kotlin.Lazy $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r52, $r55, $r58, $r61;
        androidx.room.compiler.processing.ksp.KspTypeElement$packageName$2 $r14;
        androidx.room.compiler.processing.ksp.KspTypeElement$enclosingTypeElement$2 $r17;
        androidx.room.compiler.processing.ksp.KspTypeElement$typeParameters$2 $r20;
        androidx.room.compiler.processing.ksp.KspTypeElement$qualifiedName$2 $r23;
        androidx.room.compiler.processing.ksp.KspTypeElement$type$2 $r26;
        androidx.room.compiler.processing.ksp.KspTypeElement$superTypes$2 $r29;
        androidx.room.compiler.processing.ksp.KspTypeElement$superClass$2 $r32;
        androidx.room.compiler.processing.ksp.KspTypeElement$superInterfaces$2 $r35;
        androidx.room.compiler.processing.ksp.KspTypeElement$className$2 $r38;
        androidx.room.compiler.processing.ksp.KspTypeElement$xClassName$2 $r41;
        androidx.room.compiler.processing.util.MemoizedSequence $r44, $r47;
        androidx.room.compiler.processing.ksp.KspTypeElement$allMethods$1 $r45;
        androidx.room.compiler.processing.ksp.KspTypeElement$allFieldsIncludingPrivateSupers$1 $r48;
        androidx.room.compiler.processing.ksp.KspTypeElement$_declaredProperties$2 $r50;
        androidx.room.compiler.processing.ksp.KspTypeElement$_declaredFields$2 $r53;
        androidx.room.compiler.processing.ksp.KspTypeElement$syntheticGetterSetterMethods$2 $r56;
        androidx.room.compiler.processing.ksp.KspTypeElement$_declaredMethods$2 $r59;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSClassDeclaration;

        $r3 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated)>(r1, $r3);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration declaration> = r2;

        $r4 = <androidx.room.compiler.processing.ksp.KspHasModifiers: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspHasModifiers$Companion: androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSClassDeclaration)>(r2);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0> = $r5;

        $r7 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r8 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        $r6 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r9 = virtualinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE()>();

        $r10 = virtualinvoke $r7.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r8, $r9);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1> = $r10;

        $r11 = new androidx.room.compiler.processing.ksp.KspTypeElement$name$2;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspTypeElement$name$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy name$delegate> = $r13;

        $r14 = new androidx.room.compiler.processing.ksp.KspTypeElement$packageName$2;

        specialinvoke $r14.<androidx.room.compiler.processing.ksp.KspTypeElement$packageName$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy packageName$delegate> = $r16;

        $r17 = new androidx.room.compiler.processing.ksp.KspTypeElement$enclosingTypeElement$2;

        specialinvoke $r17.<androidx.room.compiler.processing.ksp.KspTypeElement$enclosingTypeElement$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r18 = (kotlin.jvm.functions.Function0) $r17;

        $r19 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r18);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy enclosingTypeElement$delegate> = $r19;

        $r20 = new androidx.room.compiler.processing.ksp.KspTypeElement$typeParameters$2;

        specialinvoke $r20.<androidx.room.compiler.processing.ksp.KspTypeElement$typeParameters$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r21 = (kotlin.jvm.functions.Function0) $r20;

        $r22 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r21);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy typeParameters$delegate> = $r22;

        $r23 = new androidx.room.compiler.processing.ksp.KspTypeElement$qualifiedName$2;

        specialinvoke $r23.<androidx.room.compiler.processing.ksp.KspTypeElement$qualifiedName$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r24 = (kotlin.jvm.functions.Function0) $r23;

        $r25 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r24);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy qualifiedName$delegate> = $r25;

        $r26 = new androidx.room.compiler.processing.ksp.KspTypeElement$type$2;

        specialinvoke $r26.<androidx.room.compiler.processing.ksp.KspTypeElement$type$2: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspTypeElement)>(r1, r0);

        $r27 = (kotlin.jvm.functions.Function0) $r26;

        $r28 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r27);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy type$delegate> = $r28;

        $r29 = new androidx.room.compiler.processing.ksp.KspTypeElement$superTypes$2;

        specialinvoke $r29.<androidx.room.compiler.processing.ksp.KspTypeElement$superTypes$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r30 = (kotlin.jvm.functions.Function0) $r29;

        $r31 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r30);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superTypes$delegate> = $r31;

        $r32 = new androidx.room.compiler.processing.ksp.KspTypeElement$superClass$2;

        specialinvoke $r32.<androidx.room.compiler.processing.ksp.KspTypeElement$superClass$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r33 = (kotlin.jvm.functions.Function0) $r32;

        $r34 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r33);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superClass$delegate> = $r34;

        $r35 = new androidx.room.compiler.processing.ksp.KspTypeElement$superInterfaces$2;

        specialinvoke $r35.<androidx.room.compiler.processing.ksp.KspTypeElement$superInterfaces$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r36 = (kotlin.jvm.functions.Function0) $r35;

        $r37 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r36);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superInterfaces$delegate> = $r37;

        $r38 = new androidx.room.compiler.processing.ksp.KspTypeElement$className$2;

        specialinvoke $r38.<androidx.room.compiler.processing.ksp.KspTypeElement$className$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r39 = (kotlin.jvm.functions.Function0) $r38;

        $r40 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r39);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy className$delegate> = $r40;

        $r41 = new androidx.room.compiler.processing.ksp.KspTypeElement$xClassName$2;

        specialinvoke $r41.<androidx.room.compiler.processing.ksp.KspTypeElement$xClassName$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r42 = (kotlin.jvm.functions.Function0) $r41;

        $r43 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r42);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy xClassName$delegate> = $r43;

        $r44 = new androidx.room.compiler.processing.util.MemoizedSequence;

        $r45 = new androidx.room.compiler.processing.ksp.KspTypeElement$allMethods$1;

        specialinvoke $r45.<androidx.room.compiler.processing.ksp.KspTypeElement$allMethods$1: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r46 = (kotlin.jvm.functions.Function0) $r45;

        specialinvoke $r44.<androidx.room.compiler.processing.util.MemoizedSequence: void <init>(kotlin.jvm.functions.Function0)>($r46);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods> = $r44;

        $r47 = new androidx.room.compiler.processing.util.MemoizedSequence;

        $r48 = new androidx.room.compiler.processing.ksp.KspTypeElement$allFieldsIncludingPrivateSupers$1;

        specialinvoke $r48.<androidx.room.compiler.processing.ksp.KspTypeElement$allFieldsIncludingPrivateSupers$1: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r49 = (kotlin.jvm.functions.Function0) $r48;

        specialinvoke $r47.<androidx.room.compiler.processing.util.MemoizedSequence: void <init>(kotlin.jvm.functions.Function0)>($r49);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers> = $r47;

        $r50 = new androidx.room.compiler.processing.ksp.KspTypeElement$_declaredProperties$2;

        specialinvoke $r50.<androidx.room.compiler.processing.ksp.KspTypeElement$_declaredProperties$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r51 = (kotlin.jvm.functions.Function0) $r50;

        $r52 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r51);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredProperties$delegate> = $r52;

        $r53 = new androidx.room.compiler.processing.ksp.KspTypeElement$_declaredFields$2;

        specialinvoke $r53.<androidx.room.compiler.processing.ksp.KspTypeElement$_declaredFields$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r54 = (kotlin.jvm.functions.Function0) $r53;

        $r55 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r54);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredFields$delegate> = $r55;

        $r56 = new androidx.room.compiler.processing.ksp.KspTypeElement$syntheticGetterSetterMethods$2;

        specialinvoke $r56.<androidx.room.compiler.processing.ksp.KspTypeElement$syntheticGetterSetterMethods$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r57 = (kotlin.jvm.functions.Function0) $r56;

        $r58 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r57);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy syntheticGetterSetterMethods$delegate> = $r58;

        $r59 = new androidx.room.compiler.processing.ksp.KspTypeElement$_declaredMethods$2;

        specialinvoke $r59.<androidx.room.compiler.processing.ksp.KspTypeElement$_declaredMethods$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r60 = (kotlin.jvm.functions.Function0) $r59;

        $r61 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r60);

        r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredMethods$delegate> = $r61;

        return;
    }

    public com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration declaration>;

        return $r1;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isAbstract()>();

        return $z0;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPrivate()>();

        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isProtected()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isPublic()>();

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isStatic()>();

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XHasModifiers $$delegate_0>;

        $z0 = interfaceinvoke $r1.<androidx.room.compiler.processing.XHasModifiers: boolean isTransient()>();

        return $z0;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_1>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy name$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.String getPackageName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy packageName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XTypeElement getEnclosingTypeElement()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy enclosingTypeElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XTypeElement) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XTypeElement $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XTypeElement getEnclosingTypeElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public java.util.List getTypeParameters()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy typeParameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.lang.String getQualifiedName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy qualifiedName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspType getType()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy type$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspType) $r2;

        return $r3;
    }

    public java.util.List getSuperTypes()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XType getSuperClass()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superClass$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XType) $r2;

        return $r3;
    }

    public java.util.List getSuperInterfaces()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy superInterfaces$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public com.squareup.javapoet.ClassName getClassName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.ClassName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy className$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.ClassName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XClassName getXClassName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XClassName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy xClassName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XClassName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XClassName asClassName()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.codegen.XClassName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    public kotlin.sequences.Sequence getAllMethods()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;
        kotlin.sequences.Sequence $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods>;

        $r2 = (kotlin.sequences.Sequence) $r1;

        return $r2;
    }

    public androidx.room.compiler.processing.util.MemoizedSequence getAllFieldsIncludingPrivateSupers()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers>;

        return $r1;
    }

    private final java.util.List get_declaredProperties()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredProperties$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    private final java.util.List get_declaredFields()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredFields$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    private final java.util.List getSyntheticGetterSetterMethods()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy syntheticGetterSetterMethods$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public boolean isNested()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r3;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r4;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSDeclaration) $r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r4 = staticinvoke <androidx.room.compiler.processing.ksp.KSDeclarationExtKt: androidx.room.compiler.processing.ksp.KspMemberContainer findEnclosingMemberContainer(com.google.devtools.ksp.symbol.KSDeclaration,androidx.room.compiler.processing.ksp.KspProcessingEnv)>($r2, $r3);

        $z0 = $r4 instanceof androidx.room.compiler.processing.XTypeElement;

        return $z0;
    }

    public boolean isInterface()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.ClassKind $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r3 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind INTERFACE>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isKotlinObject()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.ClassKind $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r3 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind OBJECT>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCompanionObject()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $z0 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: boolean isCompanionObject()>();

        return $z0;
    }

    public boolean isAnnotationClass()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.ClassKind $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r3 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind ANNOTATION_CLASS>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isClass()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.ClassKind $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r3 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind CLASS>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDataClass()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier DATA>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isValueClass()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier INLINE>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isFunctionalInterface()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier FUN>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isExpect()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier EXPECT>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        boolean $z0, $z1, $z2;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $z0 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSDeclaration) $r1;

        $z1 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isOpen(com.google.devtools.ksp.symbol.KSDeclaration)>($r2);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.util.List getDeclaredFields()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: java.util.List get_declaredFields()>();

        return $r1;
    }

    public androidx.room.compiler.processing.XConstructorElement findPrimaryConstructor()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r1, $r3;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r2;
        androidx.room.compiler.processing.XConstructorElement $r4;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r5;
        androidx.room.compiler.processing.ksp.KspConstructorElement $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSFunctionDeclaration getPrimaryConstructor()>();

        if $r3 == null goto label1;

        r1 = $r3;

        $r6 = new androidx.room.compiler.processing.ksp.KspConstructorElement;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspConstructorElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r5, r1);

        return $r6;

     label1:
        $r4 = (androidx.room.compiler.processing.XConstructorElement) null;

        return $r4;
    }

    private final java.util.List get_declaredMethods()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeElement: kotlin.Lazy _declaredMethods$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List getDeclaredMethods()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: java.util.List get_declaredMethods()>();

        return $r1;
    }

    public java.util.List getConstructors()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        kotlin.sequences.Sequence $r2, $r5;
        androidx.room.compiler.processing.ksp.KspTypeElement$getConstructors$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        java.util.List $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = staticinvoke <com.google.devtools.ksp.UtilsKt: kotlin.sequences.Sequence getConstructors(com.google.devtools.ksp.symbol.KSClassDeclaration)>($r1);

        $r3 = new androidx.room.compiler.processing.ksp.KspTypeElement$getConstructors$1;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspTypeElement$getConstructors$1: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r2, $r4);

        $r6 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r5);

        return $r6;
    }

    public java.util.List getSuperInterfaceElements()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0, $r18;
        java.util.Iterator r1;
        java.lang.Object r2;
        com.google.devtools.ksp.symbol.KSClassDeclaration r3, $r5;
        java.util.Collection r4, $r21;
        kotlin.sequences.Sequence $r6, $r11, $r19, $r20;
        androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$1 $r7;
        kotlin.jvm.functions.Function1 $r8, $r10, $r13;
        androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$$inlined$filterIsInstance$1 $r9;
        androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$2 $r12;
        java.util.ArrayList $r14;
        java.util.List $r15, $r16;
        boolean $z2;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r17;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r6 = interfaceinvoke $r5.<com.google.devtools.ksp.symbol.KSClassDeclaration: kotlin.sequences.Sequence getSuperTypes()>();

        $r7 = <androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$1: androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$1 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r19 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r6, $r8);

        $r9 = <androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$$inlined$filterIsInstance$1: androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$$inlined$filterIsInstance$1 INSTANCE>;

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r11 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r19, $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type kotlin.sequences.Sequence<R of kotlin.sequences.SequencesKt___SequencesKt.filterIsInstance>");

        $r12 = <androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$2: androidx.room.compiler.processing.ksp.KspTypeElement$getSuperInterfaceElements$2 INSTANCE>;

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        $r20 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r11, $r13);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = (java.util.List) $r14;

        $r21 = (java.util.Collection) $r15;

        r1 = interfaceinvoke $r20.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r2;

        r4 = $r21;

        $r17 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv$room_compiler_processing()>();

        $r18 = virtualinvoke $r17.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspTypeElement wrapClassDeclaration(com.google.devtools.ksp.symbol.KSClassDeclaration)>(r3);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r18);

        goto label1;

     label2:
        $r16 = (java.util.List) $r21;

        return $r16;
    }

    public java.util.List getEnclosedTypeElements()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        kotlin.sequences.Sequence $r1, $r5, $r8;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r2;
        androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$$inlined$filterIsInstance$1 $r3;
        kotlin.jvm.functions.Function1 $r4, $r7;
        androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$1 $r6;
        java.util.List $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r1 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSClassDeclaration: kotlin.sequences.Sequence getDeclarations()>();

        $r3 = <androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$$inlined$filterIsInstance$1: androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$$inlined$filterIsInstance$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type kotlin.sequences.Sequence<R of kotlin.sequences.SequencesKt___SequencesKt.filterIsInstance>");

        $r6 = new androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$1;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspTypeElement$getEnclosedTypeElements$1: void <init>(androidx.room.compiler.processing.ksp.KspTypeElement)>(r0);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r5, $r7);

        $r9 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r8);

        return $r9;
    }

    private final boolean getHasBackingFieldFixed(com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;
        boolean $z0, $z1, $z2;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        $z0 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyDeclaration: boolean getHasBackingField()>();

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier LATEINIT>;

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public volatile com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotated) $r1;

        return $r2;
    }

    public volatile com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: com.google.devtools.ksp.symbol.KSClassDeclaration getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSDeclaration) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.XMemberContainer $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.XMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspType getType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile kotlin.sequences.Sequence getAllFieldsIncludingPrivateSupers()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;
        kotlin.sequences.Sequence $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.util.MemoizedSequence getAllFieldsIncludingPrivateSupers()>();

        $r2 = (kotlin.sequences.Sequence) $r1;

        return $r2;
    }

    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSClassDeclaration, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSClassDeclaration r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSClassDeclaration;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSClassDeclaration)>(r1, r2);

        return;
    }

    public static final androidx.room.compiler.codegen.XClassName access$getXClassName(androidx.room.compiler.processing.ksp.KspTypeElement)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement $r0;
        androidx.room.compiler.codegen.XClassName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    public static final boolean access$getHasBackingFieldFixed(androidx.room.compiler.processing.ksp.KspTypeElement, com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement $r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 := @parameter1: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        $z0 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspTypeElement: boolean getHasBackingFieldFixed(com.google.devtools.ksp.symbol.KSPropertyDeclaration)>($r1);

        return $z0;
    }

    public static final java.util.List access$get_declaredProperties(androidx.room.compiler.processing.ksp.KspTypeElement)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspTypeElement: java.util.List get_declaredProperties()>();

        return $r1;
    }

    public static final java.util.List access$getSyntheticGetterSetterMethods(androidx.room.compiler.processing.ksp.KspTypeElement)
    {
        androidx.room.compiler.processing.ksp.KspTypeElement $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspTypeElement;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspTypeElement: java.util.List getSyntheticGetterSetterMethods()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspTypeElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspTypeElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspTypeElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspTypeElement$Companion Companion> = $r0;

        return;
    }

