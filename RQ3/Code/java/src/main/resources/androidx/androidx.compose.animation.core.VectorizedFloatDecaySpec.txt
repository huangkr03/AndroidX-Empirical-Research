androidx.compose.animation.core.VectorizedFloatDecaySpec
<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>
<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector>
<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>
<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector>
<androidx.compose.animation.core.VectorizedFloatDecaySpec: float absVelocityThreshold>
    public void <init>(androidx.compose.animation.core.FloatDecayAnimationSpec)
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        androidx.compose.animation.core.FloatDecayAnimationSpec r1, $r2;
        float $f0;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        r1 := @parameter0: androidx.compose.animation.core.FloatDecayAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "floatDecaySpec");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec> = r1;

        $r2 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        $f0 = interfaceinvoke $r2.<androidx.compose.animation.core.FloatDecayAnimationSpec: float getAbsVelocityThreshold()>();

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: float absVelocityThreshold> = $f0;

        return;
    }

    public final androidx.compose.animation.core.FloatDecayAnimationSpec getFloatDecaySpec()
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r1;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        $r1 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        return $r1;
    }

    public float getAbsVelocityThreshold()
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        float $f0;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        $f0 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: float absVelocityThreshold>;

        return $f0;
    }

    public androidx.compose.animation.core.AnimationVector getValueFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, $r3, $r5, $r6, $r7, $r8;
        int i1, i2;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialVelocity");

        $r3 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r3 != null goto label1;

        $r5 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r1);

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector> = $r5;

     label1:
        i2 = 0;

        $r6 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r6 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r6 = null;

     label2:
        i1 = virtualinvoke $r6.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i2 >= i1 goto label5;

        $r7 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r7 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r7 = null;

     label4:
        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f2 = interfaceinvoke $r4.<androidx.compose.animation.core.FloatDecayAnimationSpec: float getValueFromNanos(long,float,float)>(l0, $f0, $f1);

        virtualinvoke $r7.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i2, $f2);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r8 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r8 = null;

     label6:
        return $r8;
    }

    public long getDurationNanos(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, $r3, $r5, $r6;
        int i0, i3;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r4;
        float $f0, $f1;
        long $l1, l2;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialVelocity");

        l2 = 0L;

        $r3 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r3 != null goto label1;

        $r5 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r1);

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector> = $r5;

     label1:
        i3 = 0;

        $r6 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r6 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r6 = null;

     label2:
        i0 = virtualinvoke $r6.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i3 >= i0 goto label4;

        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $l1 = interfaceinvoke $r4.<androidx.compose.animation.core.FloatDecayAnimationSpec: long getDurationNanos(float,float)>($f0, $f1);

        l2 = staticinvoke <java.lang.Math: long max(long,long)>(l2, $l1);

        i3 = i3 + 1;

        goto label3;

     label4:
        return l2;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, $r3, $r5, $r6, $r7, $r8;
        int i1, i2;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialVelocity");

        $r3 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r3 != null goto label1;

        $r5 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r1);

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector> = $r5;

     label1:
        i2 = 0;

        $r6 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r6 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r6 = null;

     label2:
        i1 = virtualinvoke $r6.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i2 >= i1 goto label5;

        $r7 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r7 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r7 = null;

     label4:
        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f2 = interfaceinvoke $r4.<androidx.compose.animation.core.FloatDecayAnimationSpec: float getVelocityFromNanos(long,float,float)>(l0, $f0, $f1);

        virtualinvoke $r7.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i2, $f2);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r8 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r8 = null;

     label6:
        return $r8;
    }

    public androidx.compose.animation.core.AnimationVector getTargetValue(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatDecaySpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, $r3, $r5, $r6, $r7, $r8;
        int i0, i1;
        androidx.compose.animation.core.FloatDecayAnimationSpec $r4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatDecaySpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialVelocity");

        $r3 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector>;

        if $r3 != null goto label1;

        $r5 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r1);

        r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector> = $r5;

     label1:
        i1 = 0;

        $r6 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector>;

        if $r6 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("targetVector");

        $r6 = null;

     label2:
        i0 = virtualinvoke $r6.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i1 >= i0 goto label5;

        $r7 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector>;

        if $r7 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("targetVector");

        $r7 = null;

     label4:
        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.FloatDecayAnimationSpec floatDecaySpec>;

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f2 = interfaceinvoke $r4.<androidx.compose.animation.core.FloatDecayAnimationSpec: float getTargetValue(float,float)>($f0, $f1);

        virtualinvoke $r7.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, $f2);

        i1 = i1 + 1;

        goto label3;

     label5:
        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatDecaySpec: androidx.compose.animation.core.AnimationVector targetVector>;

        if $r8 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("targetVector");

        $r8 = null;

     label6:
        return $r8;
    }

