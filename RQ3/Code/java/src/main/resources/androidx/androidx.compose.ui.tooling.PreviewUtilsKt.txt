androidx.compose.ui.tooling.PreviewUtilsKt
    public static final java.lang.Class asPreviewProviderClass(java.lang.String)
    {
        java.lang.String $r0, $r6;
        boolean $z0;
        java.lang.Throwable $r1, $r7, r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.Class r8, $r9;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

     label1:
        r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $z0 = r8 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $r9 = r8;

        goto label3;

     label2:
        $r9 = null;

     label3:
        return $r9;

     label4:
        $r1 := @caughtexception;

        r10 = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find provider \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = (java.lang.Throwable) r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PreviewProvider", $r6, $r7);

        return null;

        catch java.lang.ClassNotFoundException from label1 to label4 with label4;
    }

    public static final java.lang.Object[] getPreviewProviderParameters(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r1, $r7, $r9, r17, $r18;
        java.lang.reflect.Constructor r2, r19, r21, r22;
        java.lang.Object[] $r3, $r6, $r11, $r13, $r16, $r24;
        java.lang.reflect.Constructor[] $r4;
        java.lang.IllegalArgumentException $r5;
        kotlin.sequences.Sequence $r8, $r10;
        java.lang.Class[] $r12;
        java.lang.Throwable $r14, r25;
        java.lang.IllegalStateException $r15;
        boolean z2, $z3, z4, z5;
        androidx.compose.ui.tooling.preview.PreviewParameterProvider r23;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        if r0 == null goto label14;

     label01:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "parameterProviderClass.constructors");

        $r16 = (java.lang.Object[]) $r4;

        r17 = null;

        z2 = 0;

        i4 = 0;

        i1 = lengthof $r16;

     label02:
        if i4 >= i1 goto label07;

        r1 = $r16[i4];

        r2 = (java.lang.reflect.Constructor) r1;

        $r12 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "it.parameterTypes");

        $r13 = (java.lang.Object[]) $r12;

        $i3 = lengthof $r13;

        if $i3 != 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        if $z3 == 0 goto label06;

        if z2 == 0 goto label05;

        $r18 = null;

        goto label09;

     label05:
        r17 = r1;

        z2 = 1;

     label06:
        i4 = i4 + 1;

        goto label02;

     label07:
        if z2 != 0 goto label08;

        $r18 = null;

        goto label09;

     label08:
        $r18 = r17;

     label09:
        r19 = (java.lang.reflect.Constructor) $r18;

        if r19 == null goto label10;

        r21 = r19;

        z4 = 0;

        virtualinvoke r21.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        goto label11;

     label10:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PreviewParameterProvider constructor can not have parameters");

        throw $r5;

     label11:
        r22 = r19;

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke r22.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type androidx.compose.ui.tooling.preview.PreviewParameterProvider<*>");

        r23 = (androidx.compose.ui.tooling.preview.PreviewParameterProvider) $r7;

        if i0 >= 0 goto label12;

        $r10 = interfaceinvoke r23.<androidx.compose.ui.tooling.preview.PreviewParameterProvider: kotlin.sequences.Sequence getValues()>();

        $i2 = interfaceinvoke r23.<androidx.compose.ui.tooling.preview.PreviewParameterProvider: int getCount()>();

        $r11 = staticinvoke <androidx.compose.ui.tooling.PreviewUtilsKt: java.lang.Object[] toArray(kotlin.sequences.Sequence,int)>($r10, $i2);

        return $r11;

     label12:
        $r24 = newarray (java.lang.Object)[1];

        $r8 = interfaceinvoke r23.<androidx.compose.ui.tooling.preview.PreviewParameterProvider: kotlin.sequences.Sequence getValues()>();

        $r9 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object elementAt(kotlin.sequences.Sequence,int)>($r8, i0);

        $r24[0] = $r9;

        return $r24;

     label13:
        $r14 := @caughtexception;

        r25 = $r14;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Deploying Compose Previews with PreviewParameterProvider arguments requires adding a dependency to the kotlin-reflect library.\nConsider adding \'debugImplementation \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\' to the module\'s build.gradle.");

        throw $r15;

     label14:
        z5 = 0;

        $r3 = newarray (java.lang.Object)[0];

        return $r3;

        catch kotlin.jvm.KotlinReflectionNotSupportedError from label01 to label13 with label13;
    }

    private static final java.lang.Object[] toArray(kotlin.sequences.Sequence, int)
    {
        kotlin.sequences.Sequence $r0;
        int i0, i1, i2;
        java.util.Iterator r1;
        java.lang.Object[] r2;
        java.lang.Object $r3;

        $r0 := @parameter0: kotlin.sequences.Sequence;

        i0 := @parameter1: int;

        r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        i2 = 0;

        r2 = newarray (java.lang.Object)[i0];

     label1:
        if i2 >= i0 goto label2;

        i1 = i2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2[i1] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

