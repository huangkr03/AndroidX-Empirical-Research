androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.concurrent.Callable produceFile>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: android.content.Context context>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.lang.String name>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: io.reactivex.rxjava3.core.Scheduler ioScheduler>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations>
    public void <init>(java.util.concurrent.Callable)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0;
        java.util.concurrent.Callable r1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        io.reactivex.rxjava3.core.Scheduler r4;
        boolean z0;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: java.util.concurrent.Callable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "produceFile");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r4 = staticinvoke <io.reactivex.rxjava3.schedulers.Schedulers: io.reactivex.rxjava3.core.Scheduler io()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "io()");

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: io.reactivex.rxjava3.core.Scheduler ioScheduler> = r4;

        z0 = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations> = $r3;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.concurrent.Callable produceFile> = r1;

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0;
        android.content.Context r1;
        java.lang.String r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        io.reactivex.rxjava3.core.Scheduler r5;
        boolean z0;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "name");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r5 = staticinvoke <io.reactivex.rxjava3.schedulers.Schedulers: io.reactivex.rxjava3.core.Scheduler io()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "io()");

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: io.reactivex.rxjava3.core.Scheduler ioScheduler> = r5;

        z0 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.List) $r3;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations> = $r4;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: android.content.Context context> = r1;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.lang.String name> = r2;

        return;
    }

    public final androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder setIoScheduler(io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0, r2, $r3, $r4;
        io.reactivex.rxjava3.core.Scheduler r1;
        boolean z0, z1;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ioScheduler");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        $r3.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: io.reactivex.rxjava3.core.Scheduler ioScheduler> = r1;

        $r4 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        return $r4;
    }

    public final androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder setCorruptionHandler(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0, r2, $r3, $r4;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        boolean z0, z1;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "corruptionHandler");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        $r3.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler> = r1;

        $r4 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        return $r4;
    }

    public final androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder addRxDataMigration(androidx.datastore.rxjava3.RxDataMigration)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0, r2, $r3, $r6;
        androidx.datastore.rxjava3.RxDataMigration r1;
        boolean z0, z1;
        androidx.datastore.preferences.rxjava3.DataMigrationFromRxDataMigration $r4;
        java.util.List $r5;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: androidx.datastore.rxjava3.RxDataMigration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rxDataMigration");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        $r5 = $r3.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations>;

        $r4 = new androidx.datastore.preferences.rxjava3.DataMigrationFromRxDataMigration;

        specialinvoke $r4.<androidx.datastore.preferences.rxjava3.DataMigrationFromRxDataMigration: void <init>(androidx.datastore.rxjava3.RxDataMigration)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r6 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        return $r6;
    }

    public final androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder addDataMigration(androidx.datastore.core.DataMigration)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0, r2, $r3, $r5;
        androidx.datastore.core.DataMigration r1;
        boolean z0, z1;
        java.util.List $r4;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        r1 := @parameter0: androidx.datastore.core.DataMigration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataMigration");

        r2 = r0;

        z0 = 0;

        z1 = 0;

        $r3 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        $r4 = $r3.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r5 = (androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder) r2;

        return $r5;
    }

    public final androidx.datastore.rxjava3.RxDataStore build()
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder r0;
        kotlinx.coroutines.CoroutineScope r1;
        java.util.concurrent.Callable r2;
        android.content.Context r3;
        java.lang.String r4, $r12, r27;
        androidx.datastore.core.DataStore r5, $r24;
        io.reactivex.rxjava3.core.Scheduler $r6;
        kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher $r7;
        kotlinx.coroutines.CompletableJob $r8;
        kotlin.coroutines.CoroutineContext $r9, $r10;
        java.lang.IllegalStateException $r11;
        java.lang.Throwable $r13;
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2 $r14;
        androidx.datastore.preferences.core.PreferenceDataStoreFactory $r15, $r20;
        kotlin.jvm.functions.Function0 $r16, $r21;
        androidx.datastore.rxjava3.RxDataStore$Companion $r17;
        androidx.datastore.rxjava3.RxDataStore $r18;
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1 $r19;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r22, r25;
        java.util.List r23, r26;
        boolean z0;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder;

        $r6 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: io.reactivex.rxjava3.core.Scheduler ioScheduler>;

        $r7 = staticinvoke <kotlinx.coroutines.rx3.RxSchedulerKt: kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher asCoroutineDispatcher(io.reactivex.rxjava3.core.Scheduler)>($r6);

        $r8 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r9 = (kotlin.coroutines.CoroutineContext) $r8;

        $r10 = virtualinvoke $r7.<kotlinx.coroutines.rx3.SchedulerCoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r9);

        r1 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r10);

        r2 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.concurrent.Callable produceFile>;

        r3 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: android.content.Context context>;

        r4 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.lang.String name>;

        if r2 == null goto label1;

        r22 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler>;

        r23 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations>;

        $r20 = <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.preferences.core.PreferenceDataStoreFactory INSTANCE>;

        $r19 = new androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1;

        specialinvoke $r19.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1: void <init>(java.util.concurrent.Callable)>(r2);

        $r21 = (kotlin.jvm.functions.Function0) $r19;

        $r24 = virtualinvoke $r20.<androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r22, r23, r1, $r21);

        goto label3;

     label1:
        if r3 == null goto label2;

        if r4 == null goto label2;

        r25 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler corruptionHandler>;

        r26 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder: java.util.List dataMigrations>;

        $r15 = <androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.preferences.core.PreferenceDataStoreFactory INSTANCE>;

        $r14 = new androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2;

        specialinvoke $r14.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: void <init>(android.content.Context,java.lang.String)>(r3, r4);

        $r16 = (kotlin.jvm.functions.Function0) $r14;

        $r24 = virtualinvoke $r15.<androidx.datastore.preferences.core.PreferenceDataStoreFactory: androidx.datastore.core.DataStore create(androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,java.util.List,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r25, r26, r1, $r16);

        goto label3;

     label2:
        r27 = "Either produceFile or context and name must be set. This should never happen.";

        z0 = 0;

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label3:
        r5 = $r24;

        $r17 = <androidx.datastore.rxjava3.RxDataStore: androidx.datastore.rxjava3.RxDataStore$Companion Companion>;

        $r18 = virtualinvoke $r17.<androidx.datastore.rxjava3.RxDataStore$Companion: androidx.datastore.rxjava3.RxDataStore create(androidx.datastore.core.DataStore,kotlinx.coroutines.CoroutineScope)>(r5, r1);

        return $r18;
    }

androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1: java.util.concurrent.Callable $produceFile>
    void <init>(java.util.concurrent.Callable)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1 r0;
        java.util.concurrent.Callable $r1;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1;

        $r1 := @parameter0: java.util.concurrent.Callable;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1: java.util.concurrent.Callable $produceFile> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.io.File invoke()
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1 r0;
        java.lang.Object r1;
        java.util.concurrent.Callable $r2;
        java.io.File $r3;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1;

        $r2 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1: java.util.concurrent.Callable $produceFile>;

        r1 = interfaceinvoke $r2.<java.util.concurrent.Callable: java.lang.Object call()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "produceFile.call()");

        $r3 = (java.io.File) r1;

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1 r0;
        java.io.File $r1;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1;

        $r1 = virtualinvoke r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$1: java.io.File invoke()>();

        return $r1;
    }

androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: android.content.Context $context>
<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: java.lang.String $name>
    void <init>(android.content.Context, java.lang.String)
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2 r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: android.content.Context $context> = $r1;

        r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: java.lang.String $name> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.io.File invoke()
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2 r0;
        java.lang.String $r1;
        android.content.Context $r2;
        java.io.File $r3;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2;

        $r2 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: android.content.Context $context>;

        $r1 = r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: java.lang.String $name>;

        $r3 = staticinvoke <androidx.datastore.preferences.PreferenceDataStoreFile: java.io.File preferencesDataStoreFile(android.content.Context,java.lang.String)>($r2, $r1);

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2 r0;
        java.io.File $r1;

        r0 := @this: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2;

        $r1 = virtualinvoke r0.<androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreBuilder$build$delegate$2: java.io.File invoke()>();

        return $r1;
    }

