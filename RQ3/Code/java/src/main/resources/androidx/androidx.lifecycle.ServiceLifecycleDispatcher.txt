androidx.lifecycle.ServiceLifecycleDispatcher
<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.LifecycleRegistry registry>
<androidx.lifecycle.ServiceLifecycleDispatcher: android.os.Handler handler>
<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable lastDispatchRunnable>
    public void <init>(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "provider");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.lifecycle.LifecycleRegistry;

        specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r1);

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.LifecycleRegistry registry> = $r2;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher: android.os.Handler handler> = $r3;

        return;
    }

    private final void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.Lifecycle$Event r1;
        androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable $r2, $r3, $r5;
        androidx.lifecycle.LifecycleRegistry $r4;
        android.os.Handler $r6;
        java.lang.Runnable $r7;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$Event;

        $r2 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable lastDispatchRunnable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void run()>();

        goto label1;

     label1:
        $r3 = new androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable;

        $r4 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.LifecycleRegistry registry>;

        specialinvoke $r3.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: void <init>(androidx.lifecycle.LifecycleRegistry,androidx.lifecycle.Lifecycle$Event)>($r4, r1);

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable lastDispatchRunnable> = $r3;

        $r6 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher: android.os.Handler handler>;

        $r5 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable lastDispatchRunnable>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        $r7 = (java.lang.Runnable) $r5;

        virtualinvoke $r6.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r7);

        return;
    }

    public void onServicePreSuperOnCreate()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        specialinvoke r0.<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>($r1);

        return;
    }

    public void onServicePreSuperOnBind()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        specialinvoke r0.<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>($r1);

        return;
    }

    public void onServicePreSuperOnStart()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        specialinvoke r0.<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>($r1);

        return;
    }

    public void onServicePreSuperOnDestroy()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.Lifecycle$Event $r1, $r2;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        specialinvoke r0.<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>($r1);

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        specialinvoke r0.<androidx.lifecycle.ServiceLifecycleDispatcher: void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event)>($r2);

        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle $r2;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher;

        $r1 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.LifecycleRegistry registry>;

        $r2 = (androidx.lifecycle.Lifecycle) $r1;

        return $r2;
    }

androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable
<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.LifecycleRegistry registry>
<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.Lifecycle$Event event>
<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: boolean wasExecuted>
    public void <init>(androidx.lifecycle.LifecycleRegistry, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable r0;
        androidx.lifecycle.LifecycleRegistry r1;
        androidx.lifecycle.Lifecycle$Event r2;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable;

        r1 := @parameter0: androidx.lifecycle.LifecycleRegistry;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "registry");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.LifecycleRegistry registry> = r1;

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.Lifecycle$Event event> = r2;

        return;
    }

    public final androidx.lifecycle.Lifecycle$Event getEvent()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable r0;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable;

        $r1 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.Lifecycle$Event event>;

        return $r1;
    }

    public void run()
    {
        androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable r0;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;

        r0 := @this: androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable;

        $z0 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: boolean wasExecuted>;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.LifecycleRegistry registry>;

        $r1 = r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: androidx.lifecycle.Lifecycle$Event event>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        r0.<androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable: boolean wasExecuted> = 1;

     label1:
        return;
    }

