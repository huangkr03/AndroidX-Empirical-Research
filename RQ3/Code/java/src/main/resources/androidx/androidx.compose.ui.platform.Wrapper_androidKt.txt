androidx.compose.ui.platform.Wrapper_androidKt
<androidx.compose.ui.platform.Wrapper_androidKt: java.lang.String TAG>
<androidx.compose.ui.platform.Wrapper_androidKt: android.view.ViewGroup$LayoutParams DefaultLayoutParams>
    public static final androidx.compose.runtime.Composition createSubcomposition(androidx.compose.ui.node.LayoutNode, androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.ui.node.LayoutNode r0;
        androidx.compose.runtime.CompositionContext r1;
        androidx.compose.ui.node.UiApplier $r2;
        androidx.compose.runtime.Applier $r3;
        androidx.compose.runtime.Composition $r4;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "container");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        $r2 = new androidx.compose.ui.node.UiApplier;

        specialinvoke $r2.<androidx.compose.ui.node.UiApplier: void <init>(androidx.compose.ui.node.LayoutNode)>(r0);

        $r3 = (androidx.compose.runtime.Applier) $r2;

        $r4 = staticinvoke <androidx.compose.runtime.CompositionKt: androidx.compose.runtime.Composition Composition(androidx.compose.runtime.Applier,androidx.compose.runtime.CompositionContext)>($r3, r1);

        return $r4;
    }

    public static final androidx.compose.runtime.Composition setContent(androidx.compose.ui.platform.AbstractComposeView, androidx.compose.runtime.CompositionContext, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.platform.AbstractComposeView $r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.ui.platform.AndroidComposeView r3, r4, $r6, $r10, $r13, r14;
        androidx.compose.ui.platform.GlobalSnapshotManager $r5;
        int $i0;
        android.content.Context $r7;
        android.view.View $r8, r11;
        android.view.ViewGroup$LayoutParams $r9;
        boolean $z1;
        androidx.compose.runtime.Composition $r15;

        $r0 := @parameter0: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r5 = <androidx.compose.ui.platform.GlobalSnapshotManager: androidx.compose.ui.platform.GlobalSnapshotManager INSTANCE>;

        virtualinvoke $r5.<androidx.compose.ui.platform.GlobalSnapshotManager: void ensureStarted()>();

        $i0 = virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: int getChildCount()>();

        if $i0 <= 0 goto label2;

        r11 = virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: android.view.View getChildAt(int)>(0);

        $z1 = r11 instanceof androidx.compose.ui.platform.AndroidComposeView;

        if $z1 == 0 goto label1;

        $r10 = (androidx.compose.ui.platform.AndroidComposeView) r11;

        $r13 = $r10;

        goto label3;

     label1:
        $r13 = null;

        goto label3;

     label2:
        virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: void removeAllViews()>();

        $r13 = (androidx.compose.ui.platform.AndroidComposeView) null;

     label3:
        if $r13 != null goto label4;

        $r6 = new androidx.compose.ui.platform.AndroidComposeView;

        $r7 = virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "context");

        specialinvoke $r6.<androidx.compose.ui.platform.AndroidComposeView: void <init>(android.content.Context)>($r7);

        r14 = $r6;

        r4 = r14;

        $r8 = virtualinvoke r4.<androidx.compose.ui.platform.AndroidComposeView: android.view.View getView()>();

        $r9 = <androidx.compose.ui.platform.Wrapper_androidKt: android.view.ViewGroup$LayoutParams DefaultLayoutParams>;

        virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r8, $r9);

        $r13 = r14;

     label4:
        r3 = $r13;

        $r15 = staticinvoke <androidx.compose.ui.platform.Wrapper_androidKt: androidx.compose.runtime.Composition doSetContent(androidx.compose.ui.platform.AndroidComposeView,androidx.compose.runtime.CompositionContext,kotlin.jvm.functions.Function2)>(r3, r1, r2);

        return $r15;
    }

    private static final androidx.compose.runtime.Composition doSetContent(androidx.compose.ui.platform.AndroidComposeView, androidx.compose.runtime.CompositionContext, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.platform.AndroidComposeView r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.runtime.Composition r3, $r10;
        androidx.compose.ui.platform.WrappedComposition r4, r5, $r11, $r17, r18;
        boolean $z1, $z2;
        androidx.compose.ui.node.UiApplier $r6;
        androidx.compose.ui.node.LayoutNode $r7;
        androidx.compose.runtime.Applier $r8;
        android.view.View $r9, $r12;
        int $i0, $i1, $i2;
        java.util.WeakHashMap $r13;
        java.util.Map $r14;
        java.util.Set $r15;
        java.lang.Object r16;

        r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeView;

        r1 := @parameter1: androidx.compose.runtime.CompositionContext;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $z1 = staticinvoke <androidx.compose.ui.platform.Wrapper_androidKt: boolean inspectionWanted(androidx.compose.ui.platform.AndroidComposeView)>(r0);

        if $z1 == 0 goto label1;

        $i2 = <androidx.compose.ui.R$id: int inspection_slot_table_set>;

        $r13 = new java.util.WeakHashMap;

        specialinvoke $r13.<java.util.WeakHashMap: void <init>()>();

        $r14 = (java.util.Map) $r13;

        $r15 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r14);

        virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeView: void setTag(int,java.lang.Object)>($i2, $r15);

        staticinvoke <androidx.compose.ui.platform.Wrapper_androidKt: void enableDebugInspectorInfo()>();

     label1:
        $r6 = new androidx.compose.ui.node.UiApplier;

        $r7 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNode getRoot()>();

        specialinvoke $r6.<androidx.compose.ui.node.UiApplier: void <init>(androidx.compose.ui.node.LayoutNode)>($r7);

        $r8 = (androidx.compose.runtime.Applier) $r6;

        r3 = staticinvoke <androidx.compose.runtime.CompositionKt: androidx.compose.runtime.Composition Composition(androidx.compose.runtime.Applier,androidx.compose.runtime.CompositionContext)>($r8, r1);

        $r9 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeView: android.view.View getView()>();

        $i0 = <androidx.compose.ui.R$id: int wrapped_composition_tag>;

        r16 = virtualinvoke $r9.<android.view.View: java.lang.Object getTag(int)>($i0);

        $z2 = r16 instanceof androidx.compose.ui.platform.WrappedComposition;

        if $z2 == 0 goto label2;

        $r17 = (androidx.compose.ui.platform.WrappedComposition) r16;

        goto label3;

     label2:
        $r17 = null;

     label3:
        if $r17 != null goto label4;

        $r11 = new androidx.compose.ui.platform.WrappedComposition;

        specialinvoke $r11.<androidx.compose.ui.platform.WrappedComposition: void <init>(androidx.compose.ui.platform.AndroidComposeView,androidx.compose.runtime.Composition)>(r0, r3);

        r18 = $r11;

        r5 = r18;

        $r12 = virtualinvoke r0.<androidx.compose.ui.platform.AndroidComposeView: android.view.View getView()>();

        $i1 = <androidx.compose.ui.R$id: int wrapped_composition_tag>;

        virtualinvoke $r12.<android.view.View: void setTag(int,java.lang.Object)>($i1, r5);

        $r17 = r18;

     label4:
        r4 = $r17;

        virtualinvoke r4.<androidx.compose.ui.platform.WrappedComposition: void setContent(kotlin.jvm.functions.Function2)>(r2);

        $r10 = (androidx.compose.runtime.Composition) r4;

        return $r10;
    }

    private static final void enableDebugInspectorInfo()
    {
        java.lang.reflect.Field r0;
        boolean $z0;
        java.lang.Throwable $r1, r4;
        java.lang.String $r2;
        java.lang.Class r3;

        $z0 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: boolean isDebugInspectorInfoEnabled()>();

        if $z0 != 0 goto label4;

     label1:
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("androidx.compose.ui.platform.InspectableValueKt");

        r0 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("isDebugInspectorInfoEnabled");

        virtualinvoke r0.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke r0.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>(null, 1);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        r4 = $r1;

        $r2 = <androidx.compose.ui.platform.Wrapper_androidKt: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Could not access isDebugInspectorInfoEnabled. Please set explicitly.");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static final boolean inspectionWanted(androidx.compose.ui.platform.AndroidComposeView)
    {
        androidx.compose.ui.platform.AndroidComposeView r0;
        int $i0;
        android.view.View $r1;
        androidx.compose.ui.platform.WrapperVerificationHelperMethods $r2;
        java.util.Map $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: androidx.compose.ui.platform.AndroidComposeView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label3;

        $r2 = <androidx.compose.ui.platform.WrapperVerificationHelperMethods: androidx.compose.ui.platform.WrapperVerificationHelperMethods INSTANCE>;

        $r1 = (android.view.View) r0;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.platform.WrapperVerificationHelperMethods: java.util.Map attributeSourceResourceMap(android.view.View)>($r1);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    static void <clinit>()
    {
        android.view.ViewGroup$LayoutParams $r0;

        <androidx.compose.ui.platform.Wrapper_androidKt: java.lang.String TAG> = "Wrapper";

        $r0 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        <androidx.compose.ui.platform.Wrapper_androidKt: android.view.ViewGroup$LayoutParams DefaultLayoutParams> = $r0;

        return;
    }

