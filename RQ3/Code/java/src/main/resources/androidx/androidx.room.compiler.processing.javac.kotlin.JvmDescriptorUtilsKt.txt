androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt
    public static final java.lang.String descriptor(javax.lang.model.element.VariableElement)
    {
        javax.lang.model.element.VariableElement $r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        javax.lang.model.element.Name $r2;
        javax.lang.model.type.TypeMirror $r5;
        java.lang.String $r6, $r8;

        $r0 := @parameter0: javax.lang.model.element.VariableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke $r0.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r5 = interfaceinvoke $r0.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "asType()");

        $r6 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.TypeMirror)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static final java.lang.String descriptor(javax.lang.model.element.ExecutableElement)
    {
        javax.lang.model.element.ExecutableElement $r0;
        java.lang.StringBuilder $r1, $r3, $r7;
        javax.lang.model.element.Name $r2;
        javax.lang.model.type.TypeMirror $r4;
        javax.lang.model.type.ExecutableType $r5;
        java.lang.String $r6, $r8;

        $r0 := @parameter0: javax.lang.model.element.ExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke $r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = interfaceinvoke $r0.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror asType()>();

        $r5 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ExecutableType asExecutable(javax.lang.model.type.TypeMirror)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "asExecutable(asType())");

        $r6 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.ExecutableType)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static final java.lang.String getInternalName(javax.lang.model.element.Element)
    {
        javax.lang.model.element.Element $r0, r1, $r7, $r21;
        boolean $z0, $z1, $z2;
        javax.lang.model.element.Name $r2, $r4, $r26, $r29;
        javax.lang.model.element.QualifiedNameable $r3;
        java.lang.String $r5, $r17, $r18, $r22, $r30, $r32, $r33, $r34;
        javax.lang.model.element.ExecutableElement $r6;
        javax.lang.model.element.TypeElement $r8, $r14, $r20, $r25, $r28;
        javax.lang.model.element.NestingKind $r9, $r15;
        int[] $r10;
        int $i0, $i1;
        java.lang.IllegalStateException $r11, $r31;
        java.lang.StringBuilder $r12, $r13, $r16, $r19, $r23, $r24, $r27;

        $r0 := @parameter0: javax.lang.model.element.Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $z0 = r1 instanceof javax.lang.model.element.TypeElement;

        if $z0 == 0 goto label07;

        $r8 = (javax.lang.model.element.TypeElement) $r0;

        $r9 = interfaceinvoke $r8.<javax.lang.model.element.TypeElement: javax.lang.model.element.NestingKind getNestingKind()>();

        if $r9 != null goto label01;

        $i1 = -1;

        goto label02;

     label01:
        $r10 = <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r9.<javax.lang.model.element.NestingKind: int ordinal()>();

        $i1 = $r10[$i0];

     label02:
        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label04;
            case 4: goto label05;
            default: goto label06;
        };

     label03:
        $r28 = (javax.lang.model.element.TypeElement) $r0;

        $r29 = interfaceinvoke $r28.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        $r34 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r30, 46, 47, 0, 4, null);

        goto label10;

     label04:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = (javax.lang.model.element.TypeElement) $r0;

        $r21 = interfaceinvoke $r20.<javax.lang.model.element.TypeElement: javax.lang.model.element.Element getEnclosingElement()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "enclosingElement");

        $r22 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String getInternalName(javax.lang.model.element.Element)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);

        $r25 = (javax.lang.model.element.TypeElement) $r0;

        $r26 = interfaceinvoke $r25.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label05:
        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported nesting ");

        $r14 = (javax.lang.model.element.TypeElement) $r0;

        $r15 = interfaceinvoke $r14.<javax.lang.model.element.TypeElement: javax.lang.model.element.NestingKind getNestingKind()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label06:
        $r31 = new java.lang.IllegalStateException;

        $r32 = "Unsupported, nestingKind == null";

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        throw $r31;

     label07:
        $z1 = r1 instanceof javax.lang.model.element.ExecutableElement;

        if $z1 == 0 goto label08;

        $r6 = (javax.lang.model.element.ExecutableElement) $r0;

        $r7 = interfaceinvoke $r6.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Element getEnclosingElement()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "enclosingElement");

        $r34 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String getInternalName(javax.lang.model.element.Element)>($r7);

        goto label10;

     label08:
        $z2 = r1 instanceof javax.lang.model.element.QualifiedNameable;

        if $z2 == 0 goto label09;

        $r3 = (javax.lang.model.element.QualifiedNameable) $r0;

        $r4 = interfaceinvoke $r3.<javax.lang.model.element.QualifiedNameable: javax.lang.model.element.Name getQualifiedName()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r34 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r5, 46, 47, 0, 4, null);

        goto label10;

     label09:
        $r2 = interfaceinvoke $r0.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r34 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label10:
        return $r34;
    }

    public static final java.lang.String getDescriptor(javax.lang.model.type.NoType)
    {
        javax.lang.model.type.NoType $r0;

        $r0 := @parameter0: javax.lang.model.type.NoType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        return "V";
    }

    public static void getDescriptor$annotations(javax.lang.model.type.NoType)
    {
        javax.lang.model.type.NoType r0;

        r0 := @parameter0: javax.lang.model.type.NoType;

        return;
    }

    public static final java.lang.String getDescriptor(javax.lang.model.type.DeclaredType)
    {
        javax.lang.model.type.DeclaredType $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        javax.lang.model.element.Element $r3;
        java.lang.String $r4, $r7;

        $r0 := @parameter0: javax.lang.model.type.DeclaredType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        $r3 = interfaceinvoke $r0.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "asElement()");

        $r4 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String getInternalName(javax.lang.model.element.Element)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static final java.lang.String getDescriptor(javax.lang.model.type.PrimitiveType)
    {
        javax.lang.model.type.PrimitiveType $r0;
        javax.lang.model.type.TypeKind $r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r8, $r9;

        $r0 := @parameter0: javax.lang.model.type.PrimitiveType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<javax.lang.model.type.PrimitiveType: javax.lang.model.type.TypeKind getKind()>();

        if $r1 != null goto label01;

        $i1 = -1;

        goto label02;

     label01:
        $r2 = <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i0 = virtualinvoke $r1.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r2[$i0];

     label02:
        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            default: goto label11;
        };

     label03:
        $r9 = "B";

        goto label12;

     label04:
        $r9 = "C";

        goto label12;

     label05:
        $r9 = "D";

        goto label12;

     label06:
        $r9 = "F";

        goto label12;

     label07:
        $r9 = "I";

        goto label12;

     label08:
        $r9 = "J";

        goto label12;

     label09:
        $r9 = "S";

        goto label12;

     label10:
        $r9 = "Z";

        goto label12;

     label11:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown primitive type ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label12:
        return $r9;
    }

    public static final com.squareup.javapoet.TypeName typeNameFromJvmSignature(java.lang.String)
    {
        java.lang.String $r0, r1, r2, $r10, $r11, $r12, $r17, $r19, $r20, $r28, $r35, $r44, r45, $r47, $r48;
        char c0;
        int i1, i2, $i3, $i4, $i5, i6, $i7, $i8;
        java.lang.String[] r3, $r23, $r26, $r29;
        java.util.Collection r4;
        java.lang.CharSequence $r5, $r15, $r16, $r18, $r21;
        java.lang.IllegalStateException $r6, $r34, $r43;
        java.lang.StringBuilder $r7, $r8, $r9, $r31, $r32, $r33;
        com.squareup.javapoet.TypeName $r13, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r49;
        com.squareup.javapoet.ArrayTypeName $r14;
        java.util.List $r22;
        java.lang.Object[] $r24, $r25;
        com.squareup.javapoet.ClassName $r27, $r30;
        boolean $z1, $z2;
        char[] $r50;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = (java.lang.CharSequence) $r0;

        $i3 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        if $z1 != 0 goto label03;

        r45 = "Check failed.";

        $r43 = new java.lang.IllegalStateException;

        $r44 = virtualinvoke r45.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        throw $r43;

     label03:
        c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if c0 != 66 goto label04;

        $r42 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BYTE>;

        $r46 = $r42;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r42, "BYTE");

        goto label23;

     label04:
        if c0 != 67 goto label05;

        $r41 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName CHAR>;

        $r46 = $r41;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r41, "CHAR");

        goto label23;

     label05:
        if c0 != 68 goto label06;

        $r40 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName DOUBLE>;

        $r46 = $r40;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r40, "DOUBLE");

        goto label23;

     label06:
        if c0 != 70 goto label07;

        $r39 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName FLOAT>;

        $r46 = $r39;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r39, "FLOAT");

        goto label23;

     label07:
        if c0 != 73 goto label08;

        $r38 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r46 = $r38;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r38, "INT");

        goto label23;

     label08:
        if c0 != 74 goto label09;

        $r37 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName LONG>;

        $r46 = $r37;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r37, "LONG");

        goto label23;

     label09:
        if c0 != 83 goto label10;

        $r36 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName SHORT>;

        $r46 = $r36;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r36, "SHORT");

        goto label23;

     label10:
        if c0 != 90 goto label11;

        $r46 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BOOLEAN>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r46, "BOOLEAN");

        goto label23;

     label11:
        if c0 != 76 goto label21;

        $r15 = (java.lang.CharSequence) $r0;

        i6 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)>($r15, ";", 0, 0, 6, null);

        if i6 <= 0 goto label12;

        $z2 = 1;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        if $z2 != 0 goto label14;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid input ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r47 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = new java.lang.IllegalStateException;

        $r35 = virtualinvoke $r47.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label14:
        $r16 = (java.lang.CharSequence) $r0;

        i1 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r16, 47, 0, 0, 6, null);

        if i1 >= 0 goto label15;

        $i7 = 1;

        goto label16;

     label15:
        $i7 = i1 + 1;

     label16:
        $i8 = $i7;

        if i1 >= 0 goto label17;

        $r48 = "";

        goto label18;

     label17:
        $r17 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r48 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r17, 47, 46, 0, 4, null);

     label18:
        r1 = $r48;

        $r18 = (java.lang.CharSequence) $r0;

        i2 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r18, 36, $i8, 0, 4, null);

        if i2 >= 0 goto label19;

        $r28 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i8, i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r29 = newarray (java.lang.String)[0];

        $r30 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r1, $r28, $r29);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "{\n                // not\u2026tart, end))\n            }");

        $r49 = (com.squareup.javapoet.TypeName) $r30;

        goto label20;

     label19:
        $r19 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i8, i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        r2 = $r19;

        $i4 = i2 + 1;

        $r20 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i4, i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r21 = (java.lang.CharSequence) $r20;

        $r50 = newarray (char)[1];

        $r50[0] = 36;

        $r22 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)>($r21, $r50, 0, 0, 6, null);

        r4 = (java.util.Collection) $r22;

        $r23 = newarray (java.lang.String)[0];

        $r24 = interfaceinvoke r4.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r23);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r24, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r3 = (java.lang.String[]) $r24;

        $i5 = lengthof r3;

        $r25 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r3, $i5);

        $r26 = (java.lang.String[]) $r25;

        $r27 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, $r26);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "{\n                // nes\u2026impleNames)\n            }");

        $r49 = (com.squareup.javapoet.TypeName) $r27;

     label20:
        return $r49;

     label21:
        if c0 != 91 goto label22;

        $r12 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "this as java.lang.String).substring(startIndex)");

        $r13 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: com.squareup.javapoet.TypeName typeNameFromJvmSignature(java.lang.String)>($r12);

        $r14 = staticinvoke <com.squareup.javapoet.ArrayTypeName: com.squareup.javapoet.ArrayTypeName of(com.squareup.javapoet.TypeName)>($r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "of(substring(1).typeNameFromJvmSignature())");

        $r46 = (com.squareup.javapoet.TypeName) $r14;

        goto label23;

     label22:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected jvm signature ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label23:
        return $r46;
    }

    public static final java.lang.String descriptor(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        androidx.room.compiler.processing.javac.kotlin.JvmDescriptorTypeVisitor $r1;
        kotlin.Unit $r2;
        javax.lang.model.type.TypeVisitor $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorTypeVisitor: androidx.room.compiler.processing.javac.kotlin.JvmDescriptorTypeVisitor INSTANCE>;

        $r3 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r3, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "accept(JvmDescriptorTypeVisitor, Unit)");

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public static final java.lang.String descriptor(javax.lang.model.type.WildcardType)
    {
        javax.lang.model.type.WildcardType $r0;

        $r0 := @parameter0: javax.lang.model.type.WildcardType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        return "";
    }

    public static final java.lang.String descriptor(javax.lang.model.type.TypeVariable)
    {
        javax.lang.model.type.TypeVariable $r0;
        javax.lang.model.type.TypeMirror $r1;
        java.lang.String $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeVariable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this.upperBound");

        $r2 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.TypeMirror)>($r1);

        return $r2;
    }

    public static final java.lang.String descriptor(javax.lang.model.type.IntersectionType)
    {
        javax.lang.model.type.IntersectionType $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        javax.lang.model.type.TypeMirror $r3;
        java.lang.String $r4;

        $r0 := @parameter0: javax.lang.model.type.IntersectionType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<javax.lang.model.type.IntersectionType: java.util.List getBounds()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "this.bounds[0]");

        $r3 = (javax.lang.model.type.TypeMirror) $r2;

        $r4 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.TypeMirror)>($r3);

        return $r4;
    }

    public static final java.lang.String descriptor(javax.lang.model.type.ArrayType)
    {
        javax.lang.model.type.ArrayType $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        javax.lang.model.type.TypeMirror $r3;
        java.lang.String $r4, $r6;

        $r0 := @parameter0: javax.lang.model.type.ArrayType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = interfaceinvoke $r0.<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "componentType");

        $r4 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.TypeMirror)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static final java.lang.String descriptor(javax.lang.model.type.ExecutableType)
    {
        javax.lang.model.type.ExecutableType $r0;
        java.lang.String r1, r2, $r14;
        java.util.List $r3;
        androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt$descriptor$parameterDescriptors$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.CharSequence $r6;
        java.lang.Iterable $r7;
        javax.lang.model.type.TypeMirror $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;

        $r0 := @parameter0: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = interfaceinvoke $r0.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "parameterTypes");

        $r7 = (java.lang.Iterable) $r3;

        $r6 = (java.lang.CharSequence) "";

        $r4 = <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt$descriptor$parameterDescriptors$1: androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt$descriptor$parameterDescriptors$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $r6, null, null, 0, null, $r5, 30, null);

        $r8 = interfaceinvoke $r0.<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "returnType");

        r2 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.JvmDescriptorUtilsKt: java.lang.String descriptor(javax.lang.model.type.TypeMirror)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

