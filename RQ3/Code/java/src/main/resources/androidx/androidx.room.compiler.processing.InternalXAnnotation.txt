androidx.room.compiler.processing.InternalXAnnotation
<androidx.room.compiler.processing.InternalXAnnotation: kotlin.Lazy valuesByName$delegate>
    public void <init>()
    {
        androidx.room.compiler.processing.InternalXAnnotation r0;
        androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2 $r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Lazy $r3;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2;

        specialinvoke $r1.<androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2: void <init>(androidx.room.compiler.processing.InternalXAnnotation)>(r0);

        $r2 = (kotlin.jvm.functions.Function0) $r1;

        $r3 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r2);

        r0.<androidx.room.compiler.processing.InternalXAnnotation: kotlin.Lazy valuesByName$delegate> = $r3;

        return;
    }

    private final java.util.Map getValuesByName()
    {
        androidx.room.compiler.processing.InternalXAnnotation r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation;

        r1 = r0.<androidx.room.compiler.processing.InternalXAnnotation: kotlin.Lazy valuesByName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.Map) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationValue getAnnotationValue(java.lang.String)
    {
        androidx.room.compiler.processing.InternalXAnnotation r0;
        java.lang.String r1, $r10, $r12, $r13;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.room.compiler.processing.XAnnotationValue $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        $r2 = specialinvoke r0.<androidx.room.compiler.processing.InternalXAnnotation: java.util.Map getValuesByName()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.room.compiler.processing.XAnnotationValue) $r3;

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No property named ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was found in annotation ");

        $r10 = virtualinvoke r0.<androidx.room.compiler.processing.InternalXAnnotation: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label1:
        return $r4;
    }

<androidx.room.compiler.processing.InternalXAnnotation: androidx.room.compiler.processing.XAnnotationBox asAnnotationBox(java.lang.Class)>
androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2
<androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2: androidx.room.compiler.processing.InternalXAnnotation this$0>
    void <init>(androidx.room.compiler.processing.InternalXAnnotation)
    {
        androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2 r0;
        androidx.room.compiler.processing.InternalXAnnotation $r1;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.InternalXAnnotation;

        r0.<androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2: androidx.room.compiler.processing.InternalXAnnotation this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.Map invoke()
    {
        androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2 r0;
        java.lang.Iterable $r1;
        int i0, $i1, $i2;
        java.util.Map r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.room.compiler.processing.XAnnotationValue r5;
        androidx.room.compiler.processing.InternalXAnnotation $r7;
        java.util.List $r8;
        java.util.LinkedHashMap $r9;
        boolean $z3;
        java.lang.String $r10;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2;

        $r7 = r0.<androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2: androidx.room.compiler.processing.InternalXAnnotation this$0>;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.InternalXAnnotation: java.util.List getAnnotationValues()>();

        $r1 = (java.lang.Iterable) $r8;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r2 = (java.util.Map) $r9;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>();

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

        goto label1;

     label2:
        return r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2 r0;
        java.util.Map $r1;

        r0 := @this: androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.InternalXAnnotation$valuesByName$2: java.util.Map invoke()>();

        return $r1;
    }

