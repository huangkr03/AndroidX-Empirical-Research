androidx.media3.exoplayer.hls.HlsSampleStreamWrapper
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.String TAG>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int SAMPLE_QUEUE_INDEX_PENDING>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int SAMPLE_QUEUE_INDEX_NO_MAPPING_FATAL>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int SAMPLE_QUEUE_INDEX_NO_MAPPING_NON_FATAL>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.String uid>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Allocator allocator>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format muxedAudioFormat>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int metadataType>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable maybeFinishPrepareRunnable>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable onTracksEndedRunnable>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Map overridingDrmInitData>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.util.SparseIntArray sampleQueueIndicesByType>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.TrackOutput emsgUnwrappingTrackOutput>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueType>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueIndex>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format upstreamTrackFormat>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format downstreamTrackFormat>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean released>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean haveAudioVideoSampleQueues>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seenFirstTrackSelection>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean tracksEnded>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long sampleOffsetUs>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.DrmInitData drmInitData>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk sourceChunk>
    public void <init>(java.lang.String, int, androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback, androidx.media3.exoplayer.hls.HlsChunkSource, java.util.Map, androidx.media3.exoplayer.upstream.Allocator, long, androidx.media3.common.Format, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        java.lang.String r1;
        int i0, i2, $i3, $i4;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback r2;
        androidx.media3.exoplayer.hls.HlsChunkSource r3;
        java.util.Map r4;
        androidx.media3.exoplayer.upstream.Allocator r5;
        long l1;
        androidx.media3.common.Format r6;
        androidx.media3.exoplayer.drm.DrmSessionManager r7;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r8;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r9;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r10;
        java.lang.Runnable r11, r12;
        androidx.media3.exoplayer.upstream.Loader $r13;
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder $r14;
        int[] $r15;
        java.util.HashSet $r16;
        java.util.Set $r17, $r19;
        android.util.SparseIntArray $r18;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r20;
        boolean[] $r21, $r22;
        java.util.ArrayList $r23, $r24, $r26;
        java.util.List $r25;
        android.os.Handler $r27;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback;

        r3 := @parameter3: androidx.media3.exoplayer.hls.HlsChunkSource;

        r4 := @parameter4: java.util.Map;

        r5 := @parameter5: androidx.media3.exoplayer.upstream.Allocator;

        l1 := @parameter6: long;

        r6 := @parameter7: androidx.media3.common.Format;

        r7 := @parameter8: androidx.media3.exoplayer.drm.DrmSessionManager;

        r8 := @parameter9: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r9 := @parameter10: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r10 := @parameter11: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        i2 := @parameter12: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.String uid> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType> = i0;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback> = r2;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource> = r3;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Map overridingDrmInitData> = r4;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Allocator allocator> = r5;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format muxedAudioFormat> = r6;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager> = r7;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher> = r8;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r9;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher> = r10;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int metadataType> = i2;

        $r13 = new androidx.media3.exoplayer.upstream.Loader;

        specialinvoke $r13.<androidx.media3.exoplayer.upstream.Loader: void <init>(java.lang.String)>("Loader:HlsSampleStreamWrapper");

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader> = $r13;

        $r14 = new androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder;

        specialinvoke $r14.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder> = $r14;

        $r15 = newarray (int)[0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds> = $r15;

        $r16 = new java.util.HashSet;

        $r17 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES>;

        $i3 = interfaceinvoke $r17.<java.util.Set: int size()>();

        specialinvoke $r16.<java.util.HashSet: void <init>(int)>($i3);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType> = $r16;

        $r18 = new android.util.SparseIntArray;

        $r19 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES>;

        $i4 = interfaceinvoke $r19.<java.util.Set: int size()>();

        specialinvoke $r18.<android.util.SparseIntArray: void <init>(int)>($i4);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.util.SparseIntArray sampleQueueIndicesByType> = $r18;

        $r20 = newarray (androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue)[0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues> = $r20;

        $r21 = newarray (boolean)[0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags> = $r21;

        $r22 = newarray (boolean)[0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates> = $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks> = $r23;

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r25 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r24);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams> = $r26;

        r11 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.hls.HlsSampleStreamWrapper)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void maybeFinishPrepare()>, methodtype: void __METHODTYPE__());

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable maybeFinishPrepareRunnable> = r11;

        r12 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.hls.HlsSampleStreamWrapper)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void onTracksEnded()>, methodtype: void __METHODTYPE__());

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable onTracksEndedRunnable> = r12;

        $r27 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler> = $r27;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs> = l1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = l1;

        return;
    }

    public void continuePreparing()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z0 != 0 goto label1;

        $l0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean continueLoading(long)>($l0);

     label1:
        return;
    }

    public transient void prepareWithMultivariantPlaylistInfo(androidx.media3.common.TrackGroup[], int, int[])
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.common.TrackGroup[] r1;
        int i0, i1, i2, i3;
        int[] r2, r3;
        androidx.media3.exoplayer.source.TrackGroupArray $r4, $r10;
        java.util.HashSet $r5;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r6;
        android.os.Handler $r7;
        java.lang.Runnable $r9;
        java.util.Set $r11;
        androidx.media3.common.TrackGroup $r12;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.common.TrackGroup[];

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        $r4 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray createTrackGroupArrayWithDrmInfo(androidx.media3.common.TrackGroup[])>(r1);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups> = $r5;

        r3 = r2;

        i1 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        i2 = r3[i3];

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups>;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        $r12 = virtualinvoke $r10.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i2);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);

        i3 = i3 + 1;

        goto label1;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex> = i0;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r6);

        $r9 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback)>($r6) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onPrepared()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void setIsPrepared()>();

        return;
    }

    public void maybeThrowPrepareError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        boolean $z0, $z1;
        androidx.media3.common.ParserException $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void maybeThrowError()>();

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z1 != 0 goto label1;

        $r1 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Loading finished before preparation is complete.", null);

        throw $r1;

     label1:
        return;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void assertIsPrepared()>();

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        return $r1;
    }

    public int getPrimaryTrackGroupIndex()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $i0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex>;

        return $i0;
    }

    public int bindSampleQueueToSampleStream(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1;
        int[] $r1, $r3;
        boolean[] $r4, $r5;
        boolean $z0, $z1;
        androidx.media3.exoplayer.source.TrackGroupArray $r6;
        java.util.Set $r7;
        androidx.media3.common.TrackGroup $r8;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void assertIsPrepared()>();

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        i1 = $r3[i0];

        if i1 != -1 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        $r8 = virtualinvoke $r6.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i0);

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

        $b2 = -3;

        goto label2;

     label1:
        $b2 = -2;

     label2:
        return $b2;

     label3:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $z0 = $r4[i1];

        if $z0 == 0 goto label4;

        return -2;

     label4:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $r5[i1] = 1;

        return i1;
    }

    public void unbindSampleQueue(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1;
        int[] $r1, $r3;
        boolean[] $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void assertIsPrepared()>();

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        i1 = $r3[i0];

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $z0 = $r4[i1];

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $r5[i1] = 0;

        return;
    }

    public boolean selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[], boolean[], androidx.media3.exoplayer.source.SampleStream[], boolean[], long, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r1;
        boolean[] r2, r4;
        java.lang.Object[] r3;
        long l0, $l13, $l23, l24;
        int i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, i17, i18, $i19, i20, i21, i22, i25;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r5;
        java.util.ArrayList $r6, $r14;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, z11, $z12, z13;
        java.lang.Object $r7, $r19, $r22, $r27;
        byte $b6, $b14;
        androidx.media3.exoplayer.hls.HlsChunkSource $r8, $r10, $r13, $r26, $r31;
        java.util.List $r9;
        androidx.media3.common.TrackGroup $r11, $r18;
        androidx.media3.common.Format $r12;
        androidx.media3.exoplayer.upstream.Loader $r15, $r16;
        androidx.media3.exoplayer.source.TrackGroupArray $r17;
        int[] $r21, $r24;
        androidx.media3.exoplayer.hls.HlsSampleStream $r23, r30, r39;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r25, r36;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r28, r32, r33, r34;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r35, r37;
        androidx.media3.exoplayer.hls.HlsMediaChunk r38;
        androidx.media3.exoplayer.source.SampleStream[] r40;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection[];

        r2 := @parameter1: boolean[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream[];

        r4 := @parameter3: boolean[];

        l0 := @parameter4: long;

        z9 := @parameter5: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void assertIsPrepared()>();

        i1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        i17 = 0;

     label01:
        $i3 = lengthof r1;

        if i17 >= $i3 goto label04;

        $r27 = r3[i17];

        r30 = (androidx.media3.exoplayer.hls.HlsSampleStream) $r27;

        if r30 == null goto label03;

        $r28 = r1[i17];

        if $r28 == null goto label02;

        $z8 = r2[i17];

        if $z8 != 0 goto label03;

     label02:
        $i15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        $i16 = $i15 - 1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount> = $i16;

        virtualinvoke r30.<androidx.media3.exoplayer.hls.HlsSampleStream: void unbindSampleQueue()>();

        r3[i17] = null;

     label03:
        i17 = i17 + 1;

        goto label01;

     label04:
        if z9 != 0 goto label06;

        $z7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seenFirstTrackSelection>;

        if $z7 == 0 goto label05;

        if i1 != 0 goto label07;

        goto label06;

     label05:
        $l13 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        $b14 = l0 cmp $l13;

        if $b14 == 0 goto label07;

     label06:
        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        z11 = $z10;

        $r31 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        r32 = virtualinvoke $r31.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection getTrackSelection()>();

        r33 = r32;

        i18 = 0;

     label09:
        $i19 = lengthof r1;

        if i18 >= $i19 goto label15;

        r34 = r1[i18];

        if r34 != null goto label10;

        goto label14;

     label10:
        $r17 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        $r18 = interfaceinvoke r34.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        i20 = virtualinvoke $r17.<androidx.media3.exoplayer.source.TrackGroupArray: int indexOf(androidx.media3.common.TrackGroup)>($r18);

        $i8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex>;

        if i20 != $i8 goto label11;

        r33 = r34;

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        virtualinvoke $r26.<androidx.media3.exoplayer.hls.HlsChunkSource: void setTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection)>(r34);

     label11:
        $r19 = r3[i18];

        if $r19 != null goto label14;

        $i9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        $i10 = $i9 + 1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount> = $i10;

        r39 = new androidx.media3.exoplayer.hls.HlsSampleStream;

        specialinvoke r39.<androidx.media3.exoplayer.hls.HlsSampleStream: void <init>(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper,int)>(r0, i20);

        r3[i18] = r39;

        r4[i18] = 1;

        $r21 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        if $r21 == null goto label14;

        $r22 = r3[i18];

        $r23 = (androidx.media3.exoplayer.hls.HlsSampleStream) $r22;

        virtualinvoke $r23.<androidx.media3.exoplayer.hls.HlsSampleStream: void bindSampleQueue()>();

        if z11 != 0 goto label14;

        $r25 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        $i11 = $r24[i20];

        r35 = $r25[$i11];

        $z6 = virtualinvoke r35.<androidx.media3.exoplayer.source.SampleQueue: boolean seekTo(long,boolean)>(l0, 1);

        if $z6 != 0 goto label12;

        $i12 = virtualinvoke r35.<androidx.media3.exoplayer.source.SampleQueue: int getReadIndex()>();

        if $i12 == 0 goto label12;

        $z12 = 1;

        goto label13;

     label12:
        $z12 = 0;

     label13:
        z11 = $z12;

     label14:
        i18 = i18 + 1;

        goto label09;

     label15:
        $i4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        if $i4 != 0 goto label19;

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        virtualinvoke $r13.<androidx.media3.exoplayer.hls.HlsChunkSource: void reset()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format downstreamTrackFormat> = null;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats> = 1;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z4 = virtualinvoke $r15.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z4 == 0 goto label18;

        $z5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z5 == 0 goto label17;

        r36 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i21 = lengthof r36;

        i22 = 0;

     label16:
        if i22 >= i21 goto label17;

        r37 = r36[i22];

        virtualinvoke r37.<androidx.media3.exoplayer.source.SampleQueue: void discardToEnd()>();

        i22 = i22 + 1;

        goto label16;

     label17:
        $r16 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r16.<androidx.media3.exoplayer.upstream.Loader: void cancelLoading()>();

        goto label28;

     label18:
        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void resetSampleQueues()>();

        goto label28;

     label19:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label25;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r33, r32);

        if $z2 != 0 goto label25;

        z13 = 0;

        $z3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seenFirstTrackSelection>;

        if $z3 != 0 goto label23;

        $b6 = l0 cmp 0L;

        if $b6 >= 0 goto label20;

        $l23 = neg l0;

        goto label21;

     label20:
        $l23 = 0L;

     label21:
        l24 = $l23;

        r38 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()>();

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        r5 = virtualinvoke $r8.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] createMediaChunkIterators(androidx.media3.exoplayer.hls.HlsMediaChunk,long)>(r38, l0);

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        interfaceinvoke r33.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])>(l0, l24, -9223372036854775807L, $r9, r5);

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r11 = virtualinvoke $r10.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup getTrackGroup()>();

        $r12 = r38.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        i2 = virtualinvoke $r11.<androidx.media3.common.TrackGroup: int indexOf(androidx.media3.common.Format)>($r12);

        $i7 = interfaceinvoke r33.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndexInTrackGroup()>();

        if $i7 == i2 goto label22;

        z13 = 1;

     label22:
        goto label24;

     label23:
        z13 = 1;

     label24:
        if z13 == 0 goto label25;

        z9 = 1;

        z11 = 1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats> = 1;

     label25:
        if z11 == 0 goto label28;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seekToUs(long,boolean)>(l0, z9);

        i25 = 0;

     label26:
        $i5 = lengthof r3;

        if i25 >= $i5 goto label28;

        $r7 = r3[i25];

        if $r7 == null goto label27;

        r4[i25] = 1;

     label27:
        i25 = i25 + 1;

        goto label26;

     label28:
        r40 = (androidx.media3.exoplayer.source.SampleStream[]) r3;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void updateSampleStreams(androidx.media3.exoplayer.source.SampleStream[])>(r40);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seenFirstTrackSelection> = 1;

        return z11;
    }

    public void discardBuffer(long, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0;
        boolean z0, $z1, $z2, $z3;
        int i1, i2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r1, $r2;
        boolean[] $r3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z2 == 0 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof $r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r4 = $r2[i2];

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $z3 = $r3[i2];

        virtualinvoke $r4.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void discardTo(long,boolean,boolean)>(l0, z0, $z3);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean seekToUs(long, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i1, i2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;
        androidx.media3.exoplayer.upstream.Loader $r3, $r4, $r6;
        java.util.ArrayList $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs> = l0;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z1 == 0 goto label1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = l0;

        return 1;

     label1:
        $z2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z2 == 0 goto label2;

        if z0 != 0 goto label2;

        $z4 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean seekInsideBufferUs(long)>(l0);

        if $z4 == 0 goto label2;

        return 0;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = l0;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished> = 0;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z5 = virtualinvoke $r6.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z5 == 0 goto label5;

        $z3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z3 == 0 goto label4;

        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r2 = r1[i2];

        virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: void discardToEnd()>();

        i2 = i2 + 1;

        goto label3;

     label4:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r4.<androidx.media3.exoplayer.upstream.Loader: void cancelLoading()>();

        goto label6;

     label5:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: void clearFatalError()>();

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void resetSampleQueues()>();

     label6:
        return 1;
    }

    public void onPlaylistUpdated()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        int i0;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        androidx.media3.exoplayer.hls.HlsChunkSource $r5;
        androidx.media3.exoplayer.upstream.Loader $r6, $r7;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r4 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>($r3);

        r1 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r4;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        i0 = virtualinvoke $r5.<androidx.media3.exoplayer.hls.HlsChunkSource: int getChunkPublicationState(androidx.media3.exoplayer.hls.HlsMediaChunk)>(r1);

        if i0 != 1 goto label2;

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: void publish()>();

        goto label3;

     label2:
        if i0 != 2 goto label3;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        if $z1 != 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z2 = virtualinvoke $r6.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z2 == 0 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r7.<androidx.media3.exoplayer.upstream.Loader: void cancelLoading()>();

     label3:
        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i0, i1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;
        boolean $z0;
        androidx.media3.exoplayer.upstream.Loader $r3;
        android.os.Handler $r4;
        java.util.ArrayList $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z0 == 0 goto label2;

        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: void preRelease()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: void release(androidx.media3.exoplayer.upstream.Loader$ReleaseCallback)>(r0);

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean released> = 1;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        return;
    }

    public void onLoaderReleased()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i0, i1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: void release()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setIsTimestampMaster(boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        boolean z0;
        androidx.media3.exoplayer.hls.HlsChunkSource $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        virtualinvoke $r1.<androidx.media3.exoplayer.hls.HlsChunkSource: void setIsTimestampMaster(boolean)>(z0);

        return;
    }

    public boolean onPlaylistError(android.net.Uri, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        boolean z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection r3;
        androidx.media3.exoplayer.hls.HlsChunkSource $r4, $r5, $r9;
        byte $b0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r6;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions $r8;
        int $i1;
        long l2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        z0 := @parameter2: boolean;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $z1 = virtualinvoke $r4.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean obtainsChunksForPlaylist(android.net.Uri)>(r1);

        if $z1 != 0 goto label1;

        return 1;

     label1:
        l2 = -9223372036854775807L;

        if z0 != 0 goto label2;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r7 = virtualinvoke $r5.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection getTrackSelection()>();

        $r8 = staticinvoke <androidx.media3.exoplayer.trackselection.TrackSelectionUtil: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions createFallbackOptions(androidx.media3.exoplayer.trackselection.ExoTrackSelection)>($r7);

        r3 = interfaceinvoke $r6.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>($r8, r2);

        if r3 == null goto label2;

        $i1 = r3.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type>;

        if $i1 != 2 goto label2;

        l2 = r3.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs>;

     label2:
        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $z2 = virtualinvoke $r9.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean onPlaylistError(android.net.Uri,long)>(r1, l2);

        if $z2 == 0 goto label3;

        $b0 = l2 cmp -9223372036854775807L;

        if $b0 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean isVideoSampleStream()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $i0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueType>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0, $l1;
        androidx.media3.exoplayer.SeekParameters r1;
        androidx.media3.exoplayer.hls.HlsChunkSource $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $l1 = virtualinvoke $r2.<androidx.media3.exoplayer.hls.HlsChunkSource: long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters)>(l0, r1);

        return $l1;
    }

    public boolean isReady(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r2 = $r1[i0];

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        $z2 = virtualinvoke $r2.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: boolean isReady(boolean)>($z1);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public void maybeThrowError(int) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void maybeThrowError()>();

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void maybeThrowError()>();

        return;
    }

    public void maybeThrowError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.upstream.Loader $r1;
        androidx.media3.exoplayer.hls.HlsChunkSource $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: void maybeThrowError()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        virtualinvoke $r2.<androidx.media3.exoplayer.hls.HlsChunkSource: void maybeThrowError()>();

        return;
    }

    public int readData(int, androidx.media3.exoplayer.FormatHolder, androidx.media3.decoder.DecoderInputBuffer, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, i12, i13, i14;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.DecoderInputBuffer r2;
        androidx.media3.common.Format r3, $r7, $r13, $r28, r35, r37, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r4, $r11, $r12, $r15, $r18, $r21, $r24, $r25, $r26, $r31, $r36;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r5, $r9;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r6, $r10;
        java.lang.Object $r8, $r14, $r16, $r19, $r22, $r27, $r29, $r32;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r17, $r20, $r23, $r33, r34;
        long $l8;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r30;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.FormatHolder;

        r2 := @parameter2: androidx.media3.decoder.DecoderInputBuffer;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z0 == 0 goto label01;

        return -3;

     label01:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        i11 = 0;

     label02:
        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i6 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        $i7 = $i6 - 1;

        if i11 >= $i7 goto label03;

        $r31 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r33 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r32;

        $z5 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean finishedReadingChunk(androidx.media3.exoplayer.hls.HlsMediaChunk)>($r33);

        if $z5 == 0 goto label03;

        i11 = i11 + 1;

        goto label02;

     label03:
        $r25 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        staticinvoke <androidx.media3.common.util.Util: void removeRange(java.util.List,int,int)>($r25, 0, i11);

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r27 = virtualinvoke $r26.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r34 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r27;

        r35 = r34.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $r28 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format downstreamTrackFormat>;

        $z4 = virtualinvoke r35.<androidx.media3.common.Format: boolean equals(java.lang.Object)>($r28);

        if $z4 != 0 goto label04;

        $r30 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $i9 = r34.<androidx.media3.exoplayer.hls.HlsMediaChunk: int trackSelectionReason>;

        $r29 = r34.<androidx.media3.exoplayer.hls.HlsMediaChunk: java.lang.Object trackSelectionData>;

        $l8 = r34.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

        virtualinvoke $r30.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void downstreamFormatChanged(int,androidx.media3.common.Format,int,java.lang.Object,long)>($i10, r35, $i9, $r29, $l8);

     label04:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format downstreamTrackFormat> = r35;

     label05:
        $r36 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z6 = virtualinvoke $r36.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 != 0 goto label06;

        $r21 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r23 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r22;

        $z3 = virtualinvoke $r23.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished()>();

        if $z3 != 0 goto label06;

        return -3;

     label06:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r6 = $r5[i0];

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        i12 = virtualinvoke $r6.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: int read(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int,boolean)>(r1, r2, i1, $z2);

        if i12 != -5 goto label12;

        $r7 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        r37 = (androidx.media3.common.Format) $r8;

        $i2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueIndex>;

        if i0 != $i2 goto label11;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r10 = $r9[i0];

        i13 = virtualinvoke $r10.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: int peekSourceId()>();

        i14 = 0;

     label07:
        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i14 >= $i3 goto label08;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r20 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r19;

        $i5 = $r20.<androidx.media3.exoplayer.hls.HlsMediaChunk: int uid>;

        if $i5 == i13 goto label08;

        i14 = i14 + 1;

        goto label07;

     label08:
        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i4 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i14 >= $i4 goto label09;

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r17 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r16;

        $r38 = $r17.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        goto label10;

     label09:
        $r13 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format upstreamTrackFormat>;

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        $r38 = (androidx.media3.common.Format) $r14;

     label10:
        r3 = $r38;

        r37 = virtualinvoke r37.<androidx.media3.common.Format: androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format)>(r3);

     label11:
        r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format> = r37;

     label12:
        return i12;
    }

    public int skipData(int, long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i2, i3, $i4, i5;
        long l1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r1;
        androidx.media3.exoplayer.hls.HlsMediaChunk r2;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        r1 = $r3[i0];

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        i5 = virtualinvoke r1.<androidx.media3.exoplayer.source.SampleQueue: int getSkipCount(long,boolean)>(l1, $z1);

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r5 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable,java.lang.Object)>($r4, null);

        r2 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r5;

        if r2 == null goto label2;

        $z2 = virtualinvoke r2.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished()>();

        if $z2 != 0 goto label2;

        i2 = virtualinvoke r1.<androidx.media3.exoplayer.source.SampleQueue: int getReadIndex()>();

        i3 = virtualinvoke r2.<androidx.media3.exoplayer.hls.HlsMediaChunk: int getFirstSampleIndex(int)>(i0);

        $i4 = i3 - i2;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i5, $i4);

     label2:
        virtualinvoke r1.<androidx.media3.exoplayer.source.SampleQueue: void skip(int)>(i5);

        return i5;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1, r2, $r9;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r3;
        int i0, $i1, $i4, $i5, i8;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r5, $r6, $r7;
        long $l2, $l3, $l6, l7;
        java.lang.Object $r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        if $z0 == 0 goto label1;

        return -9223372036854775808L;

     label1:
        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z1 == 0 goto label2;

        $l6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>;

        return $l6;

     label2:
        l7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        r1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()>();

        $z2 = virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isLoadCompleted()>();

        if $z2 == 0 goto label3;

        $r9 = r1;

        goto label5;

     label3:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i1 <= 1 goto label4;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i5 = $i4 - 2;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r9 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r8;

        goto label5;

     label4:
        $r9 = null;

     label5:
        r2 = $r9;

        if r2 == null goto label6;

        $l3 = r2.<androidx.media3.exoplayer.hls.HlsMediaChunk: long endTimeUs>;

        l7 = staticinvoke <java.lang.Math: long max(long,long)>(l7, $l3);

     label6:
        $z3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z3 == 0 goto label8;

        r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof r3;

        i8 = 0;

     label7:
        if i8 >= i0 goto label8;

        r4 = r3[i8];

        $l2 = virtualinvoke r4.<androidx.media3.exoplayer.source.SampleQueue: long getLargestQueuedTimestampUs()>();

        l7 = staticinvoke <java.lang.Math: long max(long,long)>(l7, $l2);

        i8 = i8 + 1;

        goto label7;

     label8:
        return l7;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        boolean $z0, $z1;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r1;
        long $l0, $l1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z0 == 0 goto label1;

        $l0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>;

        return $l0;

     label1:
        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        if $z1 == 0 goto label2;

        $l1 = -9223372036854775808L;

        goto label3;

     label2:
        $r1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()>();

        $l1 = $r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long endTimeUs>;

     label3:
        return $l1;
    }

    public boolean continueLoading(long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0, $l1, $l2, $l5, $l6, $l7, $l12, $l13, l14, $l17, l18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        androidx.media3.exoplayer.upstream.Loader $r1, $r2, $r9;
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder $r3, $r5, $r6, $r7, $r22;
        androidx.media3.exoplayer.hls.HlsChunkSource $r4;
        int $i3, $i4, $i8, $i9, $i10, i15, i16;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r8;
        androidx.media3.exoplayer.source.LoadEventInfo $r10;
        androidx.media3.datasource.DataSpec $r11;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r12;
        java.lang.Object $r13;
        androidx.media3.common.Format $r14;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r15, r21;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r16;
        java.util.List $r17, r18;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r19;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r20;
        androidx.media3.exoplayer.source.chunk.Chunk r23;
        android.net.Uri r24;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished>;

        if $z0 != 0 goto label01;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z1 = virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z1 != 0 goto label01;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z2 = virtualinvoke $r2.<androidx.media3.exoplayer.upstream.Loader: boolean hasFatalError()>();

        if $z2 == 0 goto label02;

     label01:
        return 0;

     label02:
        $z3 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z3 == 0 goto label05;

        r18 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        l14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>;

        r19 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i15 = lengthof r19;

        i16 = 0;

     label03:
        if i16 >= i15 goto label04;

        r20 = r19[i16];

        $l13 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>;

        virtualinvoke r20.<androidx.media3.exoplayer.source.SampleQueue: void setStartTimeUs(long)>($l13);

        i16 = i16 + 1;

        goto label03;

     label04:
        goto label08;

     label05:
        r18 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        r21 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()>();

        $z4 = virtualinvoke r21.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isLoadCompleted()>();

        if $z4 == 0 goto label06;

        $l17 = r21.<androidx.media3.exoplayer.hls.HlsMediaChunk: long endTimeUs>;

        goto label07;

     label06:
        $l2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        $l1 = r21.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

        $l17 = staticinvoke <java.lang.Math: long max(long,long)>($l2, $l1);

     label07:
        l14 = $l17;

     label08:
        $r22 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>;

        virtualinvoke $r22.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: void clear()>();

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $l12 = l14;

        $r17 = r18;

        $z7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z7 != 0 goto label09;

        $z6 = interfaceinvoke r18.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label10;

     label09:
        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>;

        virtualinvoke $r4.<androidx.media3.exoplayer.hls.HlsChunkSource: void getNextChunk(long,long,java.util.List,boolean,androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder)>(l0, $l12, $r17, $z8, $r3);

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>;

        z9 = $r5.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: boolean endOfStream>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>;

        r23 = $r6.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk>;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder>;

        r24 = $r7.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl>;

        if z9 == 0 goto label12;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished> = 1;

        return 1;

     label12:
        if r23 != null goto label14;

        if r24 == null goto label13;

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        interfaceinvoke $r16.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onPlaylistRefreshRequired(android.net.Uri)>(r24);

     label13:
        return 0;

     label14:
        $z5 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isMediaChunk(androidx.media3.exoplayer.source.chunk.Chunk)>(r23);

        if $z5 == 0 goto label15;

        $r15 = (androidx.media3.exoplayer.hls.HlsMediaChunk) r23;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void initMediaChunkLoad(androidx.media3.exoplayer.hls.HlsMediaChunk)>($r15);

     label15:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk> = r23;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $i3 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i4 = interfaceinvoke $r8.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>($i3);

        l18 = virtualinvoke $r9.<androidx.media3.exoplayer.upstream.Loader: long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int)>(r23, r0, $i4);

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r10 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l5 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        $r11 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r10.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,long)>($l5, $r11, l18);

        $i10 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $r14 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i8 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: int trackSelectionReason>;

        $r13 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: java.lang.Object trackSelectionData>;

        $l7 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: long startTimeUs>;

        $l6 = r23.<androidx.media3.exoplayer.source.chunk.Chunk: long endTimeUs>;

        virtualinvoke $r12.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>($r10, $i10, $i9, $r14, $i8, $r13, $l7, $l6);

        return 1;
    }

    public boolean isLoading()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.upstream.Loader $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z0 = virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        return $z0;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, i6;
        androidx.media3.exoplayer.upstream.Loader $r1, $r2, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r4, $r5, $r8, $r14;
        androidx.media3.exoplayer.hls.HlsChunkSource $r6, $r9, $r16;
        java.util.ArrayList $r7;
        java.lang.Object $r10;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r11;
        androidx.media3.exoplayer.source.chunk.Chunk $r12, $r15;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z0 = virtualinvoke $r1.<androidx.media3.exoplayer.upstream.Loader: boolean hasFatalError()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z2 = virtualinvoke $r2.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z2 == 0 goto label4;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk>;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        $z3 = virtualinvoke $r16.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean shouldCancelLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List)>(l0, $r15, $r14);

        if $z3 == 0 goto label3;

        $r17 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        virtualinvoke $r17.<androidx.media3.exoplayer.upstream.Loader: void cancelLoading()>();

     label3:
        return;

     label4:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        i6 = interfaceinvoke $r3.<java.util.List: int size()>();

     label5:
        if i6 <= 0 goto label6;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        $i4 = i6 - 1;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i4);

        $r11 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r10;

        $i5 = virtualinvoke $r9.<androidx.media3.exoplayer.hls.HlsChunkSource: int getChunkPublicationState(androidx.media3.exoplayer.hls.HlsMediaChunk)>($r11);

        if $i5 != 2 goto label6;

        i6 = i6 + -1;

        goto label5;

     label6:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i6 >= $i2 goto label7;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void discardUpstream(int)>(i6);

     label7:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks>;

        i1 = virtualinvoke $r6.<androidx.media3.exoplayer.hls.HlsChunkSource: int getPreferredQueueSize(long,java.util.List)>(l0, $r5);

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label8;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void discardUpstream(int)>(i1);

     label8:
        return;
    }

    public void onLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk, long, long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l10;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r4;
        androidx.media3.exoplayer.hls.HlsChunkSource $r3;
        androidx.media3.datasource.DataSpec $r5;
        android.net.Uri $r6;
        java.util.Map $r7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r8;
        java.lang.Object $r9;
        int $i7, $i8, $i9;
        androidx.media3.common.Format $r10;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r11;
        boolean $z0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r12;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk> = null;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        virtualinvoke $r3.<androidx.media3.exoplayer.hls.HlsChunkSource: void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk)>(r1);

        $r4 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        $r5 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.datasource.DataSpec dataSpec>;

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: android.net.Uri getUri()>();

        $r7 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: long bytesLoaded()>();

        specialinvoke $r4.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r5, $r6, $r7, l0, l1, $l3);

        r2 = $r4;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i9 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $r10 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i7 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int trackSelectionReason>;

        $r9 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.lang.Object trackSelectionData>;

        $l6 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long startTimeUs>;

        $l5 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long endTimeUs>;

        virtualinvoke $r11.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>(r2, $i9, $i8, $r10, $i7, $r9, $l6, $l5);

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z0 != 0 goto label1;

        $l10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean continueLoading(long)>($l10);

        goto label2;

     label1:
        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        interfaceinvoke $r12.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)>(r0);

     label2:
        return;
    }

    public void onLoadCanceled(androidx.media3.exoplayer.source.chunk.Chunk, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;
        boolean z0, $z1;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r3;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7;
        java.lang.Object $r8;
        int $i7, $i8, $i9, $i10, $i11;
        androidx.media3.common.Format $r9;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r10;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r11;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk> = null;

        $r3 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        $r4 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: android.net.Uri getUri()>();

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: long bytesLoaded()>();

        specialinvoke $r3.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r4, $r5, $r6, l0, l1, $l3);

        r2 = $r3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i9 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $r9 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i7 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int trackSelectionReason>;

        $r8 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.lang.Object trackSelectionData>;

        $l6 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long startTimeUs>;

        $l5 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long endTimeUs>;

        virtualinvoke $r10.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>(r2, $i9, $i8, $r9, $i7, $r8, $l6, $l5);

        if z0 != 0 goto label3;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isPendingReset()>();

        if $z1 != 0 goto label1;

        $i10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        if $i10 != 0 goto label2;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void resetSampleQueues()>();

     label2:
        $i11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount>;

        if $i11 <= 0 goto label3;

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        interfaceinvoke $r11.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)>(r0);

     label3:
        return;
    }

    public androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.chunk.Chunk, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        long l0, l1, $l4, $l5, $l9, $l10, $l14, $l16, l18, $l19, $l23, $l24, $l25, $l26, l27;
        java.io.IOException r2;
        int i2, $i6, $i7, $i8, $i12, $i13, $i15, i17, $i20, $i21, $i22;
        boolean z0, $z1, $z3, $z4, $z5, z6, $z7, $z8, $z9, z10;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r24;
        androidx.media3.exoplayer.source.MediaLoadData r4, $r28;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r5, $r31;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection r6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7, $r12, $r32;
        byte $b3, $b11;
        java.lang.Object $r8, $r15, $r18, $r30;
        androidx.media3.common.Format $r9, $r29;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r10;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r11;
        java.util.ArrayList $r13, $r14, $r16, $r17;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r19, $r21, r36;
        androidx.media3.exoplayer.hls.HlsChunkSource $r20, $r33;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException $r22;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r23, r37, $r38;
        androidx.media3.datasource.DataSpec $r25;
        android.net.Uri $r26;
        java.util.Map $r27;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r34;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions $r35;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        z0 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean isMediaChunk(androidx.media3.exoplayer.source.chunk.Chunk)>(r1);

        if z0 == 0 goto label02;

        $r21 = (androidx.media3.exoplayer.hls.HlsMediaChunk) r1;

        $z4 = virtualinvoke $r21.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished()>();

        if $z4 != 0 goto label02;

        $z5 = r2 instanceof androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        if $z5 == 0 goto label02;

        $r22 = (androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException) r2;

        i17 = $r22.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        if i17 == 410 goto label01;

        if i17 != 404 goto label02;

     label01:
        $r23 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction RETRY>;

        return $r23;

     label02:
        l18 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: long bytesLoaded()>();

        z6 = 0;

        $r24 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l19 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        $r25 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.datasource.DataSpec dataSpec>;

        $r26 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: android.net.Uri getUri()>();

        $r27 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.util.Map getResponseHeaders()>();

        specialinvoke $r24.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l19, $r25, $r26, $r27, l0, l1, l18);

        r3 = $r24;

        $r28 = new androidx.media3.exoplayer.source.MediaLoadData;

        $i20 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i21 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $r29 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i22 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int trackSelectionReason>;

        $r30 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.lang.Object trackSelectionData>;

        $l23 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long startTimeUs>;

        $l24 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l23);

        $l25 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long endTimeUs>;

        $l26 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l25);

        specialinvoke $r28.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>($i20, $i21, $r29, $i22, $r30, $l24, $l26);

        r4 = $r28;

        $r31 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        specialinvoke $r31.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r3, r4, r2, i2);

        r5 = $r31;

        $r32 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r33 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $r34 = virtualinvoke $r33.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection getTrackSelection()>();

        $r35 = staticinvoke <androidx.media3.exoplayer.trackselection.TrackSelectionUtil: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions createFallbackOptions(androidx.media3.exoplayer.trackselection.ExoTrackSelection)>($r34);

        r6 = interfaceinvoke $r32.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>($r35, r5);

        if r6 == null goto label03;

        $i15 = r6.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type>;

        if $i15 != 2 goto label03;

        $r20 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        $l16 = r6.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs>;

        z6 = virtualinvoke $r20.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean maybeExcludeTrack(androidx.media3.exoplayer.source.chunk.Chunk,long)>(r1, $l16);

     label03:
        if z6 == 0 goto label08;

        if z0 == 0 goto label07;

        $b11 = l18 cmp 0L;

        if $b11 != 0 goto label07;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i12 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i13 = $i12 - 1;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>($i13);

        r36 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r15;

        if r36 != r1 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z7);

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z3 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label06;

        $l14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = $l14;

        goto label07;

     label06:
        $r17 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r18 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>($r17);

        $r19 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r18;

        virtualinvoke $r19.<androidx.media3.exoplayer.hls.HlsMediaChunk: void invalidateExtractor()>();

     label07:
        r37 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY>;

        goto label11;

     label08:
        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        l27 = interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>(r5);

        $b3 = l27 cmp -9223372036854775807L;

        if $b3 == 0 goto label09;

        $r38 = staticinvoke <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction createRetryAction(boolean,long)>(0, l27);

        goto label10;

     label09:
        $r38 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL>;

     label10:
        r37 = $r38;

     label11:
        $z8 = virtualinvoke r37.<androidx.media3.exoplayer.upstream.Loader$LoadErrorAction: boolean isRetry()>();

        if $z8 != 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        z10 = $z9;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i8 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int type>;

        $i7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int trackType>;

        $r9 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i6 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: int trackSelectionReason>;

        $r8 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: java.lang.Object trackSelectionData>;

        $l5 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long startTimeUs>;

        $l4 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long endTimeUs>;

        virtualinvoke $r10.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long,java.io.IOException,boolean)>(r3, $i8, $i7, $r9, $i6, $r8, $l5, $l4, r2, z10);

        if z10 == 0 goto label14;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.chunk.Chunk loadingChunk> = null;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l10 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: long loadTaskId>;

        interfaceinvoke $r12.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l10);

     label14:
        if z6 == 0 goto label16;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        if $z1 != 0 goto label15;

        $l9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean continueLoading(long)>($l9);

        goto label16;

     label15:
        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        interfaceinvoke $r11.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader)>(r0);

     label16:
        return r37;
    }

    private void initMediaChunkLoad(androidx.media3.exoplayer.hls.HlsMediaChunk)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        com.google.common.collect.ImmutableList$Builder r2;
        androidx.media3.common.Format $r3;
        java.util.ArrayList $r4;
        com.google.common.collect.ImmutableList $r5;
        boolean $z1;
        int $i0, i1, i2, i3, i4;
        java.lang.Integer $r6;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r8, r10;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r9, r11;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk sourceChunk> = r1;

        $r3 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format upstreamTrackFormat> = $r3;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = -9223372036854775807L;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof r8;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r9 = r8[i2];

        $i0 = virtualinvoke r9.<androidx.media3.exoplayer.source.SampleQueue: int getWriteIndex()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: void init(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper,com.google.common.collect.ImmutableList)>(r0, $r5);

        r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i3 = lengthof r10;

        i4 = 0;

     label3:
        if i4 >= i3 goto label5;

        r11 = r10[i4];

        virtualinvoke r11.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setSourceChunk(androidx.media3.exoplayer.hls.HlsMediaChunk)>(r1);

        $z1 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn>;

        if $z1 == 0 goto label4;

        virtualinvoke r11.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void splice()>();

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return;
    }

    private void discardUpstream(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, $i2, i4, i5, $i6;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1, $r3, $r7;
        androidx.media3.exoplayer.upstream.Loader $r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r4, $r5, $r9;
        java.lang.Object $r6;
        long $l1, $l3, l7;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader loader>;

        $z0 = virtualinvoke $r2.<androidx.media3.exoplayer.upstream.Loader: boolean isLoading()>();

        if $z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z3);

        i4 = -1;

        i5 = i0;

     label3:
        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label5;

        $z2 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean canDiscardUpstreamMediaChunksFromIndex(int)>(i5);

        if $z2 == 0 goto label4;

        i4 = i5;

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        if i4 != -1 goto label6;

        return;

     label6:
        $r3 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()>();

        l7 = $r3.<androidx.media3.exoplayer.hls.HlsMediaChunk: long endTimeUs>;

        r1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk discardUpstreamMediaChunksFromIndex(int)>(i4);

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label7;

        $l3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs> = $l3;

        goto label8;

     label7:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r6 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>($r5);

        $r7 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r6;

        virtualinvoke $r7.<androidx.media3.exoplayer.hls.HlsMediaChunk: void invalidateExtractor()>();

     label8:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean loadingFinished> = 0;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueType>;

        $l1 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

        virtualinvoke $r8.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void upstreamDiscarded(int,long,long)>($i2, $l1, l7);

        return;
    }

    public androidx.media3.extractor.TrackOutput track(int, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.util.Set $r1;
        java.lang.Integer $r2;
        boolean $z0, $z1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r3, $r9;
        androidx.media3.extractor.TrackOutput $r4, $r5, r12, r13, r14;
        androidx.media3.extractor.DummyTrackOutput $r7;
        int[] $r8;
        java.lang.Object r10;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r11;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r10 = null;

        $r1 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r10 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.TrackOutput getMappedTrackOutput(int,int)>(i0, i1);

        goto label4;

     label1:
        i5 = 0;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $i2 = lengthof $r3;

        if i5 >= $i2 goto label4;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>;

        $i4 = $r8[i5];

        if $i4 != i0 goto label3;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        r10 = $r9[i5];

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        if r10 != null goto label6;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean tracksEnded>;

        if $z1 == 0 goto label5;

        $r7 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.DummyTrackOutput createFakeTrackOutput(int,int)>(i0, i1);

        r12 = (androidx.media3.extractor.TrackOutput) $r7;

        return r12;

     label5:
        r10 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.SampleQueue createSampleQueue(int,int)>(i0, i1);

     label6:
        if i1 != 5 goto label8;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.TrackOutput emsgUnwrappingTrackOutput>;

        if $r4 != null goto label7;

        r11 = new androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        $i3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int metadataType>;

        r13 = (androidx.media3.extractor.TrackOutput) r10;

        specialinvoke r11.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void <init>(androidx.media3.extractor.TrackOutput,int)>(r13, $i3);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.TrackOutput emsgUnwrappingTrackOutput> = r11;

     label7:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.TrackOutput emsgUnwrappingTrackOutput>;

        return $r5;

     label8:
        r14 = (androidx.media3.extractor.TrackOutput) r10;

        return r14;
    }

    private androidx.media3.extractor.TrackOutput getMappedTrackOutput(int, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, i2, $i3;
        java.util.Set $r1, $r4;
        java.lang.Integer $r2, $r5;
        boolean $z0, $z1;
        android.util.SparseIntArray $r3;
        int[] $r6, $r8;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r7;
        java.lang.Object $r9;
        androidx.media3.extractor.TrackOutput r10;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.util.SparseIntArray sampleQueueIndicesByType>;

        i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i1, -1);

        if i2 != -1 goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>;

        $r8[i2] = i0;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>;

        $i3 = $r6[i2];

        if $i3 != i0 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r9 = $r7[i2];

        goto label4;

     label3:
        $r9 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.extractor.DummyTrackOutput createFakeTrackOutput(int,int)>(i0, i1);

     label4:
        r10 = (androidx.media3.extractor.TrackOutput) $r9;

        return r10;
    }

    private androidx.media3.exoplayer.source.SampleQueue createSampleQueue(int, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1, $z2, $z3, $z5;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r1, $r3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r2, $r12, $r14;
        java.util.Map $r4;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r5;
        androidx.media3.exoplayer.drm.DrmSessionManager $r6;
        androidx.media3.exoplayer.upstream.Allocator $r7;
        long $l3, $l4;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r8, $r24;
        int[] $r9, $r10, $r11;
        java.lang.Object[] $r13;
        boolean[] $r15, $r16, $r17, $r18, $r22, $r23;
        java.util.Set $r19;
        java.lang.Integer $r20;
        android.util.SparseIntArray $r21;
        androidx.media3.common.DrmInitData $r26;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i2 = lengthof $r2;

        if i1 == 1 goto label1;

        if i1 != 2 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;

        $r3 = new androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Allocator allocator>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Map overridingDrmInitData>;

        specialinvoke $r3.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,java.util.Map,androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1)>($r7, $r6, $r5, $r4, null);

        r1 = $r3;

        $l3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long lastSeekPositionUs>;

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setStartTimeUs(long)>($l3);

        if z0 == 0 goto label4;

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.DrmInitData drmInitData>;

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setDrmInitData(androidx.media3.common.DrmInitData)>($r26);

     label4:
        $l4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long sampleOffsetUs>;

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setSampleOffsetUs(long)>($l4);

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk sourceChunk>;

        if $r8 == null goto label5;

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsMediaChunk sourceChunk>;

        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setSourceChunk(androidx.media3.exoplayer.hls.HlsMediaChunk)>($r24);

     label5:
        virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setUpstreamFormatChangeListener(androidx.media3.exoplayer.source.SampleQueue$UpstreamFormatChangedListener)>(r0);

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>;

        $i5 = i2 + 1;

        $r10 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r9, $i5);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds> = $r10;

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds>;

        $r11[i2] = i0;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r13 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object[] nullSafeArrayAppend(java.lang.Object[],java.lang.Object)>($r12, r1);

        $r14 = (androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[]) $r13;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues> = $r14;

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>;

        $i6 = i2 + 1;

        $r16 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>($r15, $i6);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags> = $r16;

        $r17 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>;

        $r17[i2] = z0;

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean haveAudioVideoSampleQueues>;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>;

        $z1 = $r18[i2];

        $z3 = $z2 | $z1;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean haveAudioVideoSampleQueues> = $z3;

        $r19 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r20);

        $r21 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.util.SparseIntArray sampleQueueIndicesByType>;

        virtualinvoke $r21.<android.util.SparseIntArray: void append(int,int)>(i1, i2);

        $i7 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int getTrackTypeScore(int)>(i1);

        $i8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueType>;

        $i9 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int getTrackTypeScore(int)>($i8);

        if $i7 <= $i9 goto label6;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueIndex> = i2;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primarySampleQueueType> = i1;

     label6:
        $r22 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $i10 = i2 + 1;

        $r23 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>($r22, $i10);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates> = $r23;

        return r1;
    }

    public void endTracks()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean tracksEnded> = 1;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler>;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable onTracksEndedRunnable>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void seekMap(androidx.media3.extractor.SeekMap)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.extractor.SeekMap r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.extractor.SeekMap;

        return;
    }

    public void onUpstreamFormatChanged(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.common.Format r1;
        java.lang.Runnable $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.common.Format;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: android.os.Handler handler>;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.Runnable maybeFinishPrepareRunnable>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void onNewExtractor()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        java.util.Set $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        return;
    }

    public void setSampleOffsetUs(long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0, $l2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i1, i4;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        $l2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long sampleOffsetUs>;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long sampleOffsetUs> = l0;

        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        r2 = r1[i4];

        virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: void setSampleOffsetUs(long)>(l0);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void setDrmInitData(androidx.media3.common.DrmInitData)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.common.DrmInitData r1, $r2;
        boolean $z0, $z1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r3, $r5;
        int $i0, i1;
        boolean[] $r4;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r6;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.common.DrmInitData;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.DrmInitData drmInitData>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label3;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.DrmInitData drmInitData> = r1;

        i1 = 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>;

        $z1 = $r4[i1];

        if $z1 == 0 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r6 = $r5[i1];

        virtualinvoke $r6.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void setDrmInitData(androidx.media3.common.DrmInitData)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void updateSampleStreams(androidx.media3.exoplayer.source.SampleStream[])
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.source.SampleStream[] r1, r2;
        int i0, i1;
        androidx.media3.exoplayer.source.SampleStream r3;
        java.util.ArrayList $r4, $r6;
        androidx.media3.exoplayer.hls.HlsSampleStream $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.source.SampleStream[];

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r3 == null goto label2;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams>;

        $r5 = (androidx.media3.exoplayer.hls.HlsSampleStream) r3;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean finishedReadingChunk(androidx.media3.exoplayer.hls.HlsMediaChunk)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        int i0, i1, $i2, i3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r2, $r4;
        boolean[] $r3;
        boolean $z0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        i0 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int uid>;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates>;

        $z0 = $r3[i3];

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r5 = $r4[i3];

        $i2 = virtualinvoke $r5.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: int peekSourceId()>();

        if $i2 != i0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean canDiscardUpstreamMediaChunksFromIndex(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.util.ArrayList $r1, $r2, $r7;
        java.lang.Object $r3, $r8;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r4, $r5;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r6;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r9, r10;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        i5 = i0;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i5 >= $i2 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r9 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r8;

        $z0 = $r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r10 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r3;

        i6 = 0;

     label4:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $i3 = lengthof $r4;

        if i6 >= $i3 goto label6;

        i1 = virtualinvoke r10.<androidx.media3.exoplayer.hls.HlsMediaChunk: int getFirstSampleIndex(int)>(i6);

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r6 = $r5[i6];

        $i4 = virtualinvoke $r6.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: int getReadIndex()>();

        if $i4 <= i1 goto label5;

        return 0;

     label5:
        i6 = i6 + 1;

        goto label4;

     label6:
        return 1;
    }

    private androidx.media3.exoplayer.hls.HlsMediaChunk discardUpstreamMediaChunksFromIndex(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, i1, $i2, $i3, i4;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        java.util.ArrayList $r2, $r4, $r5;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r6, $r7;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r3;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        staticinvoke <androidx.media3.common.util.Util: void removeRange(java.util.List,int,int)>($r5, i0, $i2);

        i4 = 0;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $i3 = lengthof $r6;

        if i4 >= $i3 goto label2;

        i1 = virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int getFirstSampleIndex(int)>(i4);

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r8 = $r7[i4];

        virtualinvoke $r8.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void discardUpstreamSamples(int)>(i1);

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void resetSampleQueues()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i0, i1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats>;

        virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: void reset(boolean)>($z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats> = 0;

        return;
    }

    private void onTracksEnded()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void maybeFinishPrepare()>();

        return;
    }

    private void maybeFinishPrepare()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] r1;
        int i0, i1;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r2;
        boolean $z0, $z1;
        int[] $r3;
        androidx.media3.exoplayer.source.TrackGroupArray $r4;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback $r5;
        androidx.media3.common.Format $r6;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean released>;

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        if $r3 != null goto label1;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt>;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r2 = r1[i1];

        $r6 = virtualinvoke r2.<androidx.media3.exoplayer.source.SampleQueue: androidx.media3.common.Format getUpstreamFormat()>();

        if $r6 != null goto label4;

        return;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        if $r4 == null goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void mapSampleQueuesToMatchTrackGroups()>();

        goto label7;

     label6:
        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void buildTracksFromSampleStreams()>();

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void setIsPrepared()>();

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onPrepared()>();

     label7:
        return;
    }

    private void mapSampleQueuesToMatchTrackGroups()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, $i1, i2, i3;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r1;
        androidx.media3.common.Format r2, $r10, $r14;
        androidx.media3.exoplayer.source.TrackGroupArray $r3, $r12;
        int[] $r4, $r5, $r15;
        java.util.ArrayList $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r11;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r8, $r9;
        androidx.media3.common.TrackGroup $r13;
        java.util.Iterator r16;
        androidx.media3.exoplayer.hls.HlsSampleStream r17;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        i0 = $r3.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        $r4 = newarray (int)[i0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex> = $r4;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r5, -1);

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        i3 = 0;

     label2:
        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $i1 = lengthof $r8;

        if i3 >= $i1 goto label4;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        r1 = $r9[i3];

        $r10 = virtualinvoke r1.<androidx.media3.exoplayer.source.SampleQueue: androidx.media3.common.Format getUpstreamFormat()>();

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r10);

        r2 = (androidx.media3.common.Format) $r11;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        $r13 = virtualinvoke $r12.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i2);

        $r14 = virtualinvoke $r13.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(0);

        $z1 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean formatsMatch(androidx.media3.common.Format,androidx.media3.common.Format)>(r2, $r14);

        if $z1 == 0 goto label3;

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        $r15[i2] = i3;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams>;

        r16 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (androidx.media3.exoplayer.hls.HlsSampleStream) $r7;

        virtualinvoke r17.<androidx.media3.exoplayer.hls.HlsSampleStream: void bindSampleQueue()>();

        goto label6;

     label7:
        return;
    }

    private void buildTracksFromSampleStreams()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        int i0, $i1, i3, i4, $i6, $i7, i8, i9, i10, i11, $i12;
        androidx.media3.common.Format r1, $r10, $r16, $r21, $r22, $r26, $r28, r33, $r34, $r35, r36;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r2, $r8, $r24;
        androidx.media3.exoplayer.hls.HlsChunkSource $r3;
        int[] $r4, $r23;
        androidx.media3.exoplayer.source.TrackGroupArray $r5;
        java.util.Set $r6, $r7;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue $r9, $r25;
        java.lang.Object $r11, $r27;
        java.lang.StringBuilder $r12, $r13, $r37, $r39;
        androidx.media3.common.TrackGroup $r14, $r18, r30;
        androidx.media3.common.Format[] $r15, r32;
        java.lang.String $r17, $r19, r29, $r38, r40;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b2, b5;
        androidx.media3.common.TrackGroup[] r31;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        b2 = -2;

        i3 = -1;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i0 = lengthof $r2;

        i4 = 0;

     label01:
        if i4 >= i0 goto label08;

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r25 = $r24[i4];

        $r26 = virtualinvoke $r25.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.Format getUpstreamFormat()>();

        $r27 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r26);

        $r28 = (androidx.media3.common.Format) $r27;

        r29 = $r28.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean isVideo(java.lang.String)>(r29);

        if $z1 == 0 goto label02;

        b5 = 2;

        goto label05;

     label02:
        $z2 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>(r29);

        if $z2 == 0 goto label03;

        b5 = 1;

        goto label05;

     label03:
        $z3 = staticinvoke <androidx.media3.common.MimeTypes: boolean isText(java.lang.String)>(r29);

        if $z3 == 0 goto label04;

        b5 = 3;

        goto label05;

     label04:
        b5 = -2;

     label05:
        $i6 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int getTrackTypeScore(int)>(b5);

        $i7 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int getTrackTypeScore(int)>(b2);

        if $i6 <= $i7 goto label06;

        b2 = b5;

        i3 = i4;

        goto label07;

     label06:
        if b5 != b2 goto label07;

        if i3 == -1 goto label07;

        i3 = -1;

     label07:
        i4 = i4 + 1;

        goto label01;

     label08:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsChunkSource chunkSource>;

        r30 = virtualinvoke $r3.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup getTrackGroup()>();

        i8 = r30.<androidx.media3.common.TrackGroup: int length>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex> = -1;

        $r4 = newarray (int)[i0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex> = $r4;

        i9 = 0;

     label09:
        if i9 >= i0 goto label10;

        $r23 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex>;

        $r23[i9] = i9;

        i9 = i9 + 1;

        goto label09;

     label10:
        r31 = newarray (androidx.media3.common.TrackGroup)[i0];

        i10 = 0;

     label11:
        if i10 >= i0 goto label23;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        $r9 = $r8[i10];

        $r10 = virtualinvoke $r9.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.Format getUpstreamFormat()>();

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r10);

        r1 = (androidx.media3.common.Format) $r11;

        if i10 != i3 goto label17;

        r32 = newarray (androidx.media3.common.Format)[i8];

        i11 = 0;

     label12:
        if i11 >= i8 goto label16;

        r33 = virtualinvoke r30.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i11);

        if b2 != 1 goto label13;

        $r21 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format muxedAudioFormat>;

        if $r21 == null goto label13;

        $r22 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format muxedAudioFormat>;

        r33 = virtualinvoke r33.<androidx.media3.common.Format: androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format)>($r22);

     label13:
        $i1 = i11;

        if i8 != 1 goto label14;

        $r34 = virtualinvoke r1.<androidx.media3.common.Format: androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format)>(r33);

        goto label15;

     label14:
        $r34 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format deriveFormat(androidx.media3.common.Format,androidx.media3.common.Format,boolean)>(r33, r1, 1);

     label15:
        r32[$i1] = $r34;

        i11 = i11 + 1;

        goto label12;

     label16:
        $r18 = new androidx.media3.common.TrackGroup;

        $r19 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.String uid>;

        specialinvoke $r18.<androidx.media3.common.TrackGroup: void <init>(java.lang.String,androidx.media3.common.Format[])>($r19, r32);

        r31[i10] = $r18;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex> = i10;

        goto label22;

     label17:
        if b2 != 2 goto label18;

        $r17 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>($r17);

        if $z0 == 0 goto label18;

        $r35 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format muxedAudioFormat>;

        goto label19;

     label18:
        $r35 = null;

     label19:
        r36 = $r35;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.lang.String uid>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r12 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":muxed:");

        if i10 >= i3 goto label20;

        $i12 = i10;

        goto label21;

     label20:
        $i12 = i10 - 1;

     label21:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        r40 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new androidx.media3.common.TrackGroup;

        $r15 = newarray (androidx.media3.common.Format)[1];

        $r16 = staticinvoke <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.common.Format deriveFormat(androidx.media3.common.Format,androidx.media3.common.Format,boolean)>(r36, r1, 0);

        $r15[0] = $r16;

        specialinvoke $r14.<androidx.media3.common.TrackGroup: void <init>(java.lang.String,androidx.media3.common.Format[])>(r40, $r15);

        r31[i10] = $r14;

     label22:
        i10 = i10 + 1;

        goto label11;

     label23:
        $r5 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray createTrackGroupArrayWithDrmInfo(androidx.media3.common.TrackGroup[])>(r31);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups> = $r5;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups>;

        if $r6 != null goto label24;

        $z4 = 1;

        goto label25;

     label24:
        $z4 = 0;

     label25:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z4);

        $r7 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups> = $r7;

        return;
    }

    private androidx.media3.exoplayer.source.TrackGroupArray createTrackGroupArrayWithDrmInfo(androidx.media3.common.TrackGroup[])
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.common.TrackGroup[] r1;
        androidx.media3.common.TrackGroup r2, $r6;
        androidx.media3.common.Format[] r3;
        androidx.media3.common.Format r4, $r9;
        int $i0, $i1, $i2, $i3, i4, i5;
        androidx.media3.exoplayer.source.TrackGroupArray $r5;
        java.lang.String $r7;
        androidx.media3.exoplayer.drm.DrmSessionManager $r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.common.TrackGroup[];

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label4;

        r2 = r1[i4];

        $i1 = r2.<androidx.media3.common.TrackGroup: int length>;

        r3 = newarray (androidx.media3.common.Format)[$i1];

        i5 = 0;

     label2:
        $i2 = r2.<androidx.media3.common.TrackGroup: int length>;

        if i5 >= $i2 goto label3;

        r4 = virtualinvoke r2.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i5);

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $i3 = interfaceinvoke $r8.<androidx.media3.exoplayer.drm.DrmSessionManager: int getCryptoType(androidx.media3.common.Format)>(r4);

        $r9 = virtualinvoke r4.<androidx.media3.common.Format: androidx.media3.common.Format copyWithCryptoType(int)>($i3);

        r3[i5] = $r9;

        i5 = i5 + 1;

        goto label2;

     label3:
        $r6 = new androidx.media3.common.TrackGroup;

        $r7 = r2.<androidx.media3.common.TrackGroup: java.lang.String id>;

        specialinvoke $r6.<androidx.media3.common.TrackGroup: void <init>(java.lang.String,androidx.media3.common.Format[])>($r7, r3);

        r1[i4] = $r6;

        i4 = i4 + 1;

        goto label1;

     label4:
        $r5 = new androidx.media3.exoplayer.source.TrackGroupArray;

        specialinvoke $r5.<androidx.media3.exoplayer.source.TrackGroupArray: void <init>(androidx.media3.common.TrackGroup[])>(r1);

        return $r5;
    }

    private androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        androidx.media3.exoplayer.hls.HlsMediaChunk $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r3;

        return $r4;
    }

    private boolean isPendingReset()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $l0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: long pendingResetPositionUs>;

        $b1 = $l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean seekInsideBufferUs(long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        long l0;
        int i1, i2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r1;
        boolean z0, $z1, $z2;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] $r2, $r3;
        boolean[] $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        i1 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues>;

        r1 = $r3[i2];

        z0 = virtualinvoke r1.<androidx.media3.exoplayer.source.SampleQueue: boolean seekTo(long,boolean)>(l0, 0);

        if z0 != 0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags>;

        $z1 = $r4[i2];

        if $z1 != 0 goto label2;

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean haveAudioVideoSampleQueues>;

        if $z2 != 0 goto label3;

     label2:
        return 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 1;
    }

    private void setIsPrepared()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared> = 1;

        return;
    }

    private void assertIsPrepared()
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        boolean $z0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1;
        java.util.Set $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: boolean prepared>;

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        return;
    }

    private static int getTrackTypeScore(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return 3;

     label2:
        return 2;

     label3:
        return 1;

     label4:
        return 0;
    }

    private static androidx.media3.common.Format deriveFormat(androidx.media3.common.Format, androidx.media3.common.Format, boolean)
    {
        androidx.media3.common.Format r0, r1, $r31;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.media3.common.Format$Builder r2, $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r23, $r24;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r10, $r12, $r26, r27, r28;
        androidx.media3.common.Metadata $r18, $r20, $r29, r30;
        float $f0;

        r0 := @parameter0: androidx.media3.common.Format;

        r1 := @parameter1: androidx.media3.common.Format;

        z0 := @parameter2: boolean;

        if r0 != null goto label01;

        return r1;

     label01:
        $r3 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>($r3);

        $r4 = r0.<androidx.media3.common.Format: java.lang.String codecs>;

        $i1 = staticinvoke <androidx.media3.common.util.Util: int getCodecCountOfType(java.lang.String,int)>($r4, i0);

        if $i1 != 1 goto label02;

        $r26 = r0.<androidx.media3.common.Format: java.lang.String codecs>;

        r27 = staticinvoke <androidx.media3.common.util.Util: java.lang.String getCodecsOfType(java.lang.String,int)>($r26, i0);

        r28 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)>(r27);

        goto label03;

     label02:
        $r6 = r0.<androidx.media3.common.Format: java.lang.String codecs>;

        $r5 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        r27 = staticinvoke <androidx.media3.common.MimeTypes: java.lang.String getCodecsCorrespondingToMimeType(java.lang.String,java.lang.String)>($r6, $r5);

        r28 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

     label03:
        $r7 = virtualinvoke r1.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $r8 = r0.<androidx.media3.common.Format: java.lang.String id>;

        $r9 = virtualinvoke $r7.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r8);

        $r10 = r0.<androidx.media3.common.Format: java.lang.String label>;

        $r11 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>($r10);

        $r12 = r0.<androidx.media3.common.Format: java.lang.String language>;

        $r13 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r12);

        $i2 = r0.<androidx.media3.common.Format: int selectionFlags>;

        $r14 = virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>($i2);

        $i3 = r0.<androidx.media3.common.Format: int roleFlags>;

        $r15 = virtualinvoke $r14.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>($i3);

        if z0 == 0 goto label04;

        $i8 = r0.<androidx.media3.common.Format: int averageBitrate>;

        goto label05;

     label04:
        $i8 = -1;

     label05:
        $r16 = virtualinvoke $r15.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAverageBitrate(int)>($i8);

        if z0 == 0 goto label06;

        $i9 = r0.<androidx.media3.common.Format: int peakBitrate>;

        goto label07;

     label06:
        $i9 = -1;

     label07:
        $r17 = virtualinvoke $r16.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPeakBitrate(int)>($i9);

        r2 = virtualinvoke $r17.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r27);

        if i0 != 2 goto label08;

        $i6 = r0.<androidx.media3.common.Format: int width>;

        $r23 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i6);

        $i7 = r0.<androidx.media3.common.Format: int height>;

        $r24 = virtualinvoke $r23.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i7);

        $f0 = r0.<androidx.media3.common.Format: float frameRate>;

        virtualinvoke $r24.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setFrameRate(float)>($f0);

     label08:
        if r28 == null goto label09;

        virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r28);

     label09:
        $i4 = r0.<androidx.media3.common.Format: int channelCount>;

        if $i4 == -1 goto label10;

        if i0 != 1 goto label10;

        $i5 = r0.<androidx.media3.common.Format: int channelCount>;

        virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>($i5);

     label10:
        $r29 = r0.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        if $r29 == null goto label12;

        r30 = r0.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        $r18 = r1.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        if $r18 == null goto label11;

        $r20 = r1.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        r30 = virtualinvoke $r20.<androidx.media3.common.Metadata: androidx.media3.common.Metadata copyWithAppendedEntriesFrom(androidx.media3.common.Metadata)>(r30);

     label11:
        virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r30);

     label12:
        $r31 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r31;
    }

    private static boolean isMediaChunk(androidx.media3.exoplayer.source.chunk.Chunk)
    {
        androidx.media3.exoplayer.source.chunk.Chunk r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        $z0 = r0 instanceof androidx.media3.exoplayer.hls.HlsMediaChunk;

        return $z0;
    }

    private static boolean formatsMatch(androidx.media3.common.Format, androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0, r1;
        java.lang.String r2, r3, $r4, $r5;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: androidx.media3.common.Format;

        r1 := @parameter1: androidx.media3.common.Format;

        r2 = r0.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        r3 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        i0 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r2);

        if i0 == 3 goto label3;

        $i3 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r3);

        if i0 != $i3 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r4 = "application/cea-608";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label5;

        $r5 = "application/cea-708";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label8;

     label5:
        $i2 = r0.<androidx.media3.common.Format: int accessibilityChannel>;

        $i1 = r1.<androidx.media3.common.Format: int accessibilityChannel>;

        if $i2 != $i1 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;

     label8:
        return 1;
    }

    private static androidx.media3.extractor.DummyTrackOutput createFakeTrackOutput(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        androidx.media3.extractor.DummyTrackOutput $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmapped track with id ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("HlsSampleStreamWrapper", $r5);

        $r6 = new androidx.media3.extractor.DummyTrackOutput;

        specialinvoke $r6.<androidx.media3.extractor.DummyTrackOutput: void <init>()>();

        return $r6;
    }

    public volatile androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        java.io.IOException r2;
        int i2;
        androidx.media3.exoplayer.source.chunk.Chunk $r3;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r3 = (androidx.media3.exoplayer.source.chunk.Chunk) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.chunk.Chunk,long,long,java.io.IOException,int)>($r3, l0, l1, r2, i2);

        return $r4;
    }

    public volatile void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, boolean)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        boolean z0;
        androidx.media3.exoplayer.source.chunk.Chunk $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r2 = (androidx.media3.exoplayer.source.chunk.Chunk) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void onLoadCanceled(androidx.media3.exoplayer.source.chunk.Chunk,long,long,boolean)>($r2, l0, l1, z0);

        return;
    }

    public volatile void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        androidx.media3.exoplayer.source.chunk.Chunk $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = (androidx.media3.exoplayer.source.chunk.Chunk) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void onLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk,long,long)>($r2, l0, l1);

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.Integer[] $r1;
        java.lang.Integer $r2, $r3, $r4;
        java.util.List $r5;
        java.util.Set $r6;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.Integer)[3];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES> = $r6;

        return;
    }

androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onPrepared()>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback: void onPlaylistRefreshRequired(android.net.Uri)>
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format ID3_FORMAT>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format EMSG_FORMAT>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.metadata.emsg.EventMessageDecoder emsgDecoder>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.TrackOutput delegate>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>
    public void <init>(androidx.media3.extractor.TrackOutput, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        androidx.media3.extractor.TrackOutput r1;
        int i0;
        androidx.media3.extractor.metadata.emsg.EventMessageDecoder $r2;
        androidx.media3.common.Format $r3, $r5;
        byte[] $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        r1 := @parameter0: androidx.media3.extractor.TrackOutput;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.media3.extractor.metadata.emsg.EventMessageDecoder;

        specialinvoke $r2.<androidx.media3.extractor.metadata.emsg.EventMessageDecoder: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.metadata.emsg.EventMessageDecoder emsgDecoder> = $r2;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.TrackOutput delegate> = r1;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format ID3_FORMAT>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat> = $r5;

        goto label4;

     label2:
        $r3 = <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format EMSG_FORMAT>;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat> = $r3;

        goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown metadataType: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        $r4 = newarray (byte)[0];

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer> = $r4;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition> = 0;

        return;
    }

    public void format(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        androidx.media3.common.Format r1, $r2;
        androidx.media3.extractor.TrackOutput $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        r1 := @parameter0: androidx.media3.common.Format;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format> = r1;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.TrackOutput delegate>;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat>;

        interfaceinvoke $r3.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r2);

        return;
    }

    public int sampleData(androidx.media3.common.DataReader, int, boolean, int) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        androidx.media3.common.DataReader r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0;
        byte[] $r2;
        java.io.EOFException $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        r1 := @parameter0: androidx.media3.common.DataReader;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        $i3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        $i4 = $i3 + i0;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void ensureBufferCapacity(int)>($i4);

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        $i5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        i2 = interfaceinvoke r1.<androidx.media3.common.DataReader: int read(byte[],int,int)>($r2, $i5, i0);

        if i2 != -1 goto label2;

        if z0 == 0 goto label1;

        return -1;

     label1:
        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label2:
        $i6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        $i7 = $i6 + i2;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition> = $i7;

        return i2;
    }

    public void sampleData(androidx.media3.common.util.ParsableByteArray, int, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        byte[] $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        $i3 = $i2 + i0;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void ensureBufferCapacity(int)>($i3);

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        $i4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void readBytes(byte[],int,int)>($r2, $i4, i0);

        $i5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        $i6 = $i5 + i0;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition> = $i6;

        return;
    }

    public void sampleMetadata(long, int, int, int, androidx.media3.extractor.TrackOutput$CryptoData)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        long l0;
        int i1, i2, i3, i4;
        androidx.media3.extractor.TrackOutput$CryptoData r1;
        androidx.media3.common.util.ParsableByteArray r2, $r19, r30;
        androidx.media3.common.Format $r3, $r5, $r6, $r9, $r14, $r26, $r28;
        java.lang.String $r7, $r8, $r10, $r11, $r15, $r17, $r27, $r29;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r16;
        androidx.media3.extractor.metadata.emsg.EventMessageDecoder $r18;
        byte[] $r20, $r22;
        java.lang.Object $r21;
        androidx.media3.extractor.TrackOutput $r23, $r24;
        java.lang.Object[] $r25;
        androidx.media3.extractor.metadata.emsg.EventMessage r31;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: androidx.media3.extractor.TrackOutput$CryptoData;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r2 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.util.ParsableByteArray getSampleAndTrimBuffer(int,int)>(i2, i3);

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format>;

        $r8 = $r5.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat>;

        $r7 = $r6.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z0 == 0 goto label1;

        r30 = r2;

        goto label4;

     label1:
        $r11 = "application/x-emsg";

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format>;

        $r10 = $r9.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.metadata.emsg.EventMessageDecoder emsgDecoder>;

        r31 = virtualinvoke $r18.<androidx.media3.extractor.metadata.emsg.EventMessageDecoder: androidx.media3.extractor.metadata.emsg.EventMessage decode(androidx.media3.common.util.ParsableByteArray)>(r2);

        $z2 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: boolean emsgContainsExpectedWrappedFormat(androidx.media3.extractor.metadata.emsg.EventMessage)>(r31);

        if $z2 != 0 goto label2;

        $r25 = newarray (java.lang.Object)[2];

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat>;

        $r27 = $r26.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r25[0] = $r27;

        $r28 = virtualinvoke r31.<androidx.media3.extractor.metadata.emsg.EventMessage: androidx.media3.common.Format getWrappedMetadataFormat()>();

        $r25[1] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ignoring EMSG. Expected it to contain wrapped %s but actual wrapped format: %s", $r25);

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("HlsSampleStreamWrapper", $r29);

        return;

     label2:
        $r19 = new androidx.media3.common.util.ParsableByteArray;

        $r20 = virtualinvoke r31.<androidx.media3.extractor.metadata.emsg.EventMessage: byte[] getWrappedMetadataBytes()>();

        $r21 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r20);

        $r22 = (byte[]) $r21;

        specialinvoke $r19.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>($r22);

        r30 = $r19;

        goto label4;

     label3:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring sample for unsupported format: ");

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format format>;

        $r15 = $r14.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("HlsSampleStreamWrapper", $r17);

        return;

     label4:
        i4 = virtualinvoke r30.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $r23 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.TrackOutput delegate>;

        interfaceinvoke $r23.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r30, i4);

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.extractor.TrackOutput delegate>;

        interfaceinvoke $r24.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>(l0, i1, i4, i3, r1);

        return;
    }

    private boolean emsgContainsExpectedWrappedFormat(androidx.media3.extractor.metadata.emsg.EventMessage)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        androidx.media3.extractor.metadata.emsg.EventMessage r1;
        androidx.media3.common.Format r2, $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        r1 := @parameter0: androidx.media3.extractor.metadata.emsg.EventMessage;

        r2 = virtualinvoke r1.<androidx.media3.extractor.metadata.emsg.EventMessage: androidx.media3.common.Format getWrappedMetadataFormat()>();

        if r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format delegateFormat>;

        $r5 = $r3.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $r4 = r2.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void ensureBufferCapacity(int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1, $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i1 >= i0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        $i2 = i0 / 2;

        $i3 = i0 + $i2;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i3);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer> = $r3;

     label1:
        return;
    }

    private androidx.media3.common.util.ParsableByteArray getSampleAndTrimBuffer(int, int)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput r0;
        int i0, i1, i2, i3, $i4;
        byte[] r1, $r3, $r5, $r6;
        androidx.media3.common.util.ParsableByteArray r2, $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition>;

        i2 = $i4 - i1;

        i3 = i2 - i0;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r3, i3, i2);

        $r4 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>(r1);

        r2 = $r4;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i2, $r5, 0, i1);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition> = i1;

        return r2;
    }

    static void <clinit>()
    {
        androidx.media3.common.Format$Builder $r0, $r1, $r3, $r4;
        androidx.media3.common.Format $r2, $r5;

        $r0 = new androidx.media3.common.Format$Builder;

        specialinvoke $r0.<androidx.media3.common.Format$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("application/id3");

        $r2 = virtualinvoke $r1.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format ID3_FORMAT> = $r2;

        $r3 = new androidx.media3.common.Format$Builder;

        specialinvoke $r3.<androidx.media3.common.Format$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("application/x-emsg");

        $r5 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        <androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: androidx.media3.common.Format EMSG_FORMAT> = $r5;

        return;
    }

androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: java.util.Map overridingDrmInitData>
<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.DrmInitData drmInitData>
    private void <init>(androidx.media3.exoplayer.upstream.Allocator, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, java.util.Map)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.exoplayer.upstream.Allocator r1;
        androidx.media3.exoplayer.drm.DrmSessionManager r2;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r3;
        java.util.Map r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Allocator;

        r2 := @parameter1: androidx.media3.exoplayer.drm.DrmSessionManager;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<androidx.media3.exoplayer.source.SampleQueue: void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher)>(r1, r2, r3);

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: java.util.Map overridingDrmInitData> = r4;

        return;
    }

    public void setSourceChunk(androidx.media3.exoplayer.hls.HlsMediaChunk)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $i0 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int uid>;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void sourceId(int)>($i0);

        return;
    }

    public void setDrmInitData(androidx.media3.common.DrmInitData)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.common.DrmInitData r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r1 := @parameter0: androidx.media3.common.DrmInitData;

        r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.DrmInitData drmInitData> = r1;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void invalidateUpstreamFormatAdjustment()>();

        return;
    }

    public androidx.media3.common.Format getAdjustedUpstreamFormat(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.common.DrmInitData $r1, $r10, r11, r12, $r15;
        androidx.media3.common.Format$Builder $r2, $r3, $r4;
        androidx.media3.common.Metadata $r5, $r13, r14;
        java.lang.String $r6;
        java.util.Map $r7;
        java.lang.Object $r8;
        androidx.media3.common.Format r9, $r16;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r9 := @parameter0: androidx.media3.common.Format;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.DrmInitData drmInitData>;

        if $r1 == null goto label1;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.DrmInitData drmInitData>;

        goto label2;

     label1:
        $r10 = r9.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

     label2:
        r11 = $r10;

        if r11 == null goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: java.util.Map overridingDrmInitData>;

        $r6 = r11.<androidx.media3.common.DrmInitData: java.lang.String schemeType>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r12 = (androidx.media3.common.DrmInitData) $r8;

        if r12 == null goto label3;

        r11 = r12;

     label3:
        $r13 = r9.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        r14 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: androidx.media3.common.Metadata getAdjustedMetadata(androidx.media3.common.Metadata)>($r13);

        $r15 = r9.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

        if r11 != $r15 goto label4;

        $r5 = r9.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        if r14 == $r5 goto label5;

     label4:
        $r2 = virtualinvoke r9.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $r3 = virtualinvoke $r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData)>(r11);

        $r4 = virtualinvoke $r3.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>(r14);

        r9 = virtualinvoke $r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

     label5:
        $r16 = specialinvoke r0.<androidx.media3.exoplayer.source.SampleQueue: androidx.media3.common.Format getAdjustedUpstreamFormat(androidx.media3.common.Format)>(r9);

        return $r16;
    }

    private androidx.media3.common.Metadata getAdjustedMetadata(androidx.media3.common.Metadata)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.common.Metadata r1, $r2;
        int i0, $i1, i2, i3, i4, $i5, i6;
        androidx.media3.common.Metadata$Entry $r3, r6;
        boolean $z0, $z1;
        java.lang.String $r4, $r5;
        androidx.media3.extractor.metadata.id3.PrivFrame r7;
        androidx.media3.common.Metadata$Entry[] r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r1 := @parameter0: androidx.media3.common.Metadata;

        if r1 != null goto label01;

        return null;

     label01:
        i0 = virtualinvoke r1.<androidx.media3.common.Metadata: int length()>();

        i2 = -1;

        i3 = 0;

     label02:
        if i3 >= i0 goto label04;

        r6 = virtualinvoke r1.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i3);

        $z0 = r6 instanceof androidx.media3.extractor.metadata.id3.PrivFrame;

        if $z0 == 0 goto label03;

        r7 = (androidx.media3.extractor.metadata.id3.PrivFrame) r6;

        $r5 = "com.apple.streaming.transportStreamTimestamp";

        $r4 = r7.<androidx.media3.extractor.metadata.id3.PrivFrame: java.lang.String owner>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        i2 = i3;

        goto label04;

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        if i2 != -1 goto label05;

        return r1;

     label05:
        if i0 != 1 goto label06;

        return null;

     label06:
        $i1 = i0 - 1;

        r8 = newarray (androidx.media3.common.Metadata$Entry)[$i1];

        i4 = 0;

     label07:
        if i4 >= i0 goto label11;

        if i4 == i2 goto label10;

        if i4 >= i2 goto label08;

        $i5 = i4;

        goto label09;

     label08:
        $i5 = i4 - 1;

     label09:
        i6 = $i5;

        $r3 = virtualinvoke r1.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i4);

        r8[i6] = $r3;

     label10:
        i4 = i4 + 1;

        goto label07;

     label11:
        $r2 = new androidx.media3.common.Metadata;

        specialinvoke $r2.<androidx.media3.common.Metadata: void <init>(androidx.media3.common.Metadata$Entry[])>(r8);

        return $r2;
    }

    public void sampleMetadata(long, int, int, int, androidx.media3.extractor.TrackOutput$CryptoData)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        long l0;
        int i1, i2, i3;
        androidx.media3.extractor.TrackOutput$CryptoData r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: androidx.media3.extractor.TrackOutput$CryptoData;

        specialinvoke r0.<androidx.media3.exoplayer.source.SampleQueue: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>(l0, i1, i2, i3, r1);

        return;
    }

    void <init>(androidx.media3.exoplayer.upstream.Allocator, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, java.util.Map, androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1)
    {
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue r0;
        androidx.media3.exoplayer.upstream.Allocator r1;
        androidx.media3.exoplayer.drm.DrmSessionManager r2;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r3;
        java.util.Map r4;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1 r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Allocator;

        r2 := @parameter1: androidx.media3.exoplayer.drm.DrmSessionManager;

        r3 := @parameter2: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue: void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,java.util.Map)>(r1, r2, r3, r4);

        return;
    }

