androidx.compose.foundation.text.selection.SelectionManagerKt
    public static final androidx.compose.foundation.text.selection.Selection merge(androidx.compose.foundation.text.selection.Selection, androidx.compose.foundation.text.selection.Selection)
    {
        androidx.compose.foundation.text.selection.Selection r0, r1, $r2;

        r0 := @parameter0: androidx.compose.foundation.text.selection.Selection;

        r1 := @parameter1: androidx.compose.foundation.text.selection.Selection;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection merge(androidx.compose.foundation.text.selection.Selection)>(r1);

        if $r2 != null goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static final long calculateSelectionMagnifierCenterAndroid-O0kMr_c(androidx.compose.foundation.text.selection.SelectionManager, long)
    {
        androidx.compose.foundation.text.selection.SelectionManager r0;
        long l0, $l2, $l3, $l5;
        androidx.compose.foundation.text.selection.Selection r1, $r2;
        androidx.compose.foundation.text.Handle $r3;
        int[] $r4;
        int $i1, $i4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r7;
        androidx.compose.foundation.text.selection.Selection$AnchorInfo $r8, $r9;
        androidx.compose.ui.geometry.Offset$Companion $r10, $r12;
        kotlin.NoWhenBranchMatchedException $r11;

        r0 := @parameter0: androidx.compose.foundation.text.selection.SelectionManager;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "manager");

        $r2 = virtualinvoke r0.<androidx.compose.foundation.text.selection.SelectionManager: androidx.compose.foundation.text.selection.Selection getSelection()>();

        if $r2 != null goto label1;

        $r12 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l3 = virtualinvoke $r12.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l3;

     label1:
        r1 = $r2;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.text.selection.SelectionManager: androidx.compose.foundation.text.Handle getDraggingHandle()>();

        if $r3 != null goto label2;

        $i4 = -1;

        goto label3;

     label2:
        $r4 = <androidx.compose.foundation.text.selection.SelectionManagerKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke $r3.<androidx.compose.foundation.text.Handle: int ordinal()>();

        $i4 = $r4[$i1];

     label3:
        tableswitch($i4)
        {
            case -1: goto label4;
            case 0: goto label8;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label8;
        };

     label4:
        $r10 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l2 = virtualinvoke $r10.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l2;

     label5:
        $r9 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $l5 = staticinvoke <androidx.compose.foundation.text.selection.SelectionManagerKt: long calculateSelectionMagnifierCenterAndroid_O0kMr_c$getMagnifierCenter(androidx.compose.foundation.text.selection.SelectionManager,long,androidx.compose.foundation.text.selection.Selection$AnchorInfo,boolean)>(r0, l0, $r9, 1);

        goto label9;

     label6:
        $r8 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $l5 = staticinvoke <androidx.compose.foundation.text.selection.SelectionManagerKt: long calculateSelectionMagnifierCenterAndroid_O0kMr_c$getMagnifierCenter(androidx.compose.foundation.text.selection.SelectionManager,long,androidx.compose.foundation.text.selection.Selection$AnchorInfo,boolean)>(r0, l0, $r8, 0);

        goto label9;

     label7:
        $r5 = new java.lang.IllegalStateException;

        $r6 = "SelectionContainer does not support cursor";

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label8:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label9:
        return $l5;
    }

    public static final androidx.compose.ui.text.AnnotatedString getCurrentSelectedText(androidx.compose.foundation.text.selection.Selectable, androidx.compose.foundation.text.selection.Selection)
    {
        androidx.compose.foundation.text.selection.Selectable r0;
        androidx.compose.foundation.text.selection.Selection r1;
        androidx.compose.ui.text.AnnotatedString r2, $r16;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l15, $l16, $l22, $l23;
        androidx.compose.foundation.text.selection.Selection$AnchorInfo $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        byte $b2, $b5, $b8, $b17, $b24;
        boolean $z0, $z1, $z2;
        int $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i20, $i21;

        r0 := @parameter0: androidx.compose.foundation.text.selection.Selectable;

        r1 := @parameter1: androidx.compose.foundation.text.selection.Selection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "selectable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selection");

        r2 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.text.AnnotatedString getText()>();

        $l0 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r3 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $l1 = virtualinvoke $r3.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: long getSelectableId()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $l22 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r15 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $l23 = virtualinvoke $r15.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: long getSelectableId()>();

        $b24 = $l22 cmp $l23;

        if $b24 == 0 goto label1;

        $r16 = r2;

        goto label7;

     label1:
        $l3 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r4 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $l4 = virtualinvoke $r4.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: long getSelectableId()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label3;

        $l15 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r10 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $l16 = virtualinvoke $r10.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: long getSelectableId()>();

        $b17 = $l15 cmp $l16;

        if $b17 != 0 goto label3;

        $z2 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: boolean getHandlesCrossed()>();

        if $z2 == 0 goto label2;

        $r13 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $i20 = virtualinvoke $r13.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r14 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $i21 = virtualinvoke $r14.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>($i20, $i21);

        goto label7;

     label2:
        $r11 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $i18 = virtualinvoke $r11.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r12 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $i19 = virtualinvoke $r12.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>($i18, $i19);

        goto label7;

     label3:
        $l6 = interfaceinvoke r0.<androidx.compose.foundation.text.selection.Selectable: long getSelectableId()>();

        $r5 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $l7 = virtualinvoke $r5.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: long getSelectableId()>();

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label5;

        $z1 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: boolean getHandlesCrossed()>();

        if $z1 == 0 goto label4;

        $r9 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $i14 = virtualinvoke $r9.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>(0, $i14);

        goto label7;

     label4:
        $r8 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getStart()>();

        $i12 = virtualinvoke $r8.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $i13 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: int length()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>($i12, $i13);

        goto label7;

     label5:
        $z0 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: boolean getHandlesCrossed()>();

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $i10 = virtualinvoke $r7.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $i11 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: int length()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>($i10, $i11);

        goto label7;

     label6:
        $r6 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection: androidx.compose.foundation.text.selection.Selection$AnchorInfo getEnd()>();

        $i9 = virtualinvoke $r6.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $r16 = virtualinvoke r2.<androidx.compose.ui.text.AnnotatedString: androidx.compose.ui.text.AnnotatedString subSequence(int,int)>(0, $i9);

     label7:
        return $r16;
    }

    public static final androidx.compose.ui.geometry.Rect visibleBounds(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.layout.LayoutCoordinates $r0;
        androidx.compose.ui.geometry.Rect r1, $r2;
        long $l0, $l1, $l2, $l3;

        $r0 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.geometry.Rect boundsInWindow(androidx.compose.ui.layout.LayoutCoordinates)>($r0);

        $l0 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: long getTopLeft-F1C5BW0()>();

        $l1 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutCoordinates: long windowToLocal-MK-Hz9U(long)>($l0);

        $l2 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: long getBottomRight-F1C5BW0()>();

        $l3 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutCoordinates: long windowToLocal-MK-Hz9U(long)>($l2);

        $r2 = staticinvoke <androidx.compose.ui.geometry.RectKt: androidx.compose.ui.geometry.Rect Rect-0a9Yr6o(long,long)>($l1, $l3);

        return $r2;
    }

    public static final boolean containsInclusive-Uv8p0NA(androidx.compose.ui.geometry.Rect, long)
    {
        androidx.compose.ui.geometry.Rect $r0;
        long l0;
        byte $b1, $b2, $b3, $b4;
        float f0, f1, f2, f3, f4, f5;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: androidx.compose.ui.geometry.Rect;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$containsInclusive");

        f0 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        f1 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getRight()>();

        f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $b1 = f0 cmpg f2;

        if $b1 > 0 goto label2;

        $b4 = f2 cmpg f1;

        if $b4 > 0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label7;

        f3 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getTop()>();

        f4 = virtualinvoke $r0.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        f5 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $b2 = f3 cmpg f5;

        if $b2 > 0 goto label5;

        $b3 = f5 cmpg f4;

        if $b3 > 0 goto label4;

        $z1 = 1;

        goto label6;

     label4:
        $z1 = 0;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        if $z1 == 0 goto label7;

        $z2 = 1;

        goto label8;

     label7:
        $z2 = 0;

     label8:
        return $z2;
    }

    private static final long calculateSelectionMagnifierCenterAndroid_O0kMr_c$getMagnifierCenter(androidx.compose.foundation.text.selection.SelectionManager, long, androidx.compose.foundation.text.selection.Selection$AnchorInfo, boolean)
    {
        androidx.compose.foundation.text.selection.SelectionManager $r0;
        long $l0, l2, $l4, $l13, $l14, $l15, $l16, $l17, $l18, $l19, l21;
        androidx.compose.foundation.text.selection.Selection$AnchorInfo r1;
        boolean z0;
        androidx.compose.foundation.text.selection.Selectable r2, $r8;
        androidx.compose.ui.layout.LayoutCoordinates r3, r4, $r9, $r10;
        int i1, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i20;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11;
        androidx.compose.ui.geometry.Rect r5, r6, r7;
        androidx.compose.ui.geometry.Offset $r11;
        byte $b12;
        androidx.compose.ui.geometry.Offset$Companion $r12, $r13, $r14, $r15;

        $r0 := @parameter0: androidx.compose.foundation.text.selection.SelectionManager;

        $l0 := @parameter1: long;

        r1 := @parameter2: androidx.compose.foundation.text.selection.Selection$AnchorInfo;

        z0 := @parameter3: boolean;

        $r8 = virtualinvoke $r0.<androidx.compose.foundation.text.selection.SelectionManager: androidx.compose.foundation.text.selection.Selectable getAnchorSelectable$foundation_release(androidx.compose.foundation.text.selection.Selection$AnchorInfo)>(r1);

        if $r8 != null goto label1;

        $r15 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l19 = virtualinvoke $r15.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l19;

     label1:
        r2 = $r8;

        $r9 = virtualinvoke $r0.<androidx.compose.foundation.text.selection.SelectionManager: androidx.compose.ui.layout.LayoutCoordinates getContainerLayoutCoordinates()>();

        if $r9 != null goto label2;

        $r14 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l18 = virtualinvoke $r14.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l18;

     label2:
        r3 = $r9;

        $r10 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.layout.LayoutCoordinates getLayoutCoordinates()>();

        if $r10 != null goto label3;

        $r13 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l17 = virtualinvoke $r13.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l17;

     label3:
        r4 = $r10;

        if z0 == 0 goto label4;

        $i20 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        goto label5;

     label4:
        $i3 = virtualinvoke r1.<androidx.compose.foundation.text.selection.Selection$AnchorInfo: int getOffset()>();

        $i20 = $i3 - 1;

     label5:
        i1 = $i20;

        $r11 = virtualinvoke $r0.<androidx.compose.foundation.text.selection.SelectionManager: androidx.compose.ui.geometry.Offset getCurrentDragPosition-_m7T9-E()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r11);

        $l4 = virtualinvoke $r11.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        l2 = interfaceinvoke r4.<androidx.compose.ui.layout.LayoutCoordinates: long localPositionOf-R5De75A(androidx.compose.ui.layout.LayoutCoordinates,long)>(r3, $l4);

        f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l2);

        l21 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: long getRangeOfLineContaining--jx7JFs(int)>(i1);

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>(l21);

        r6 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.geometry.Rect getBoundingBox(int)>($i5);

        $i6 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>(l21);

        $i7 = $i6 - 1;

        $i8 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>(l21);

        $i9 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i7, $i8);

        r7 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.geometry.Rect getBoundingBox(int)>($i9);

        $f4 = virtualinvoke r6.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f5 = virtualinvoke r7.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        f2 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        $f6 = virtualinvoke r6.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $f7 = virtualinvoke r7.<androidx.compose.ui.geometry.Rect: float getRight()>();

        f3 = staticinvoke <java.lang.Math: float max(float,float)>($f6, $f7);

        f1 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>(f0, f2, f3);

        $f8 = f0 - f1;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $i10 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l0);

        $i11 = $i10 / 2;

        $f10 = (float) $i11;

        $b12 = $f9 cmpl $f10;

        if $b12 <= 0 goto label6;

        $r12 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l16 = virtualinvoke $r12.<androidx.compose.ui.geometry.Offset$Companion: long getUnspecified-F1C5BW0()>();

        return $l16;

     label6:
        r5 = interfaceinvoke r2.<androidx.compose.foundation.text.selection.Selectable: androidx.compose.ui.geometry.Rect getBoundingBox(int)>(i1);

        $l13 = virtualinvoke r5.<androidx.compose.ui.geometry.Rect: long getCenter-F1C5BW0()>();

        f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l13);

        $l14 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>(f1, f11);

        $l15 = interfaceinvoke r3.<androidx.compose.ui.layout.LayoutCoordinates: long localPositionOf-R5De75A(androidx.compose.ui.layout.LayoutCoordinates,long)>(r4, $l14);

        return $l15;
    }

