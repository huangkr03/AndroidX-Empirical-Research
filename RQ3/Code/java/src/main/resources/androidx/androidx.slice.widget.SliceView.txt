androidx.slice.widget.SliceView
<androidx.slice.widget.SliceView: java.lang.String TAG>
<androidx.slice.widget.SliceView: int MODE_SMALL>
<androidx.slice.widget.SliceView: int MODE_LARGE>
<androidx.slice.widget.SliceView: int MODE_SHORTCUT>
<androidx.slice.widget.SliceView: int REFRESH_LAST_UPDATED_IN_MILLIS>
<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>
<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>
<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener>
<androidx.slice.widget.SliceView: android.os.Handler mHandler>
<androidx.slice.widget.SliceView: int mMode>
<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>
<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>
<androidx.slice.widget.SliceView: java.util.List mActions>
<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>
<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>
<androidx.slice.widget.SliceView: boolean mShowActions>
<androidx.slice.widget.SliceView: boolean mIsScrollable>
<androidx.slice.widget.SliceView: boolean mShowLastUpdated>
<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible>
<androidx.slice.widget.SliceView: int mShortcutSize>
<androidx.slice.widget.SliceView: int mMinTemplateHeight>
<androidx.slice.widget.SliceView: int mLargeHeight>
<androidx.slice.widget.SliceView: int mActionRowHeight>
<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle>
<androidx.slice.widget.SliceView: int mThemeTintColor>
<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver>
<androidx.slice.widget.SliceView: int mTouchSlopSquared>
<androidx.slice.widget.SliceView: android.view.View$OnClickListener mOnClickListener>
<androidx.slice.widget.SliceView: int mDownX>
<androidx.slice.widget.SliceView: int mDownY>
<androidx.slice.widget.SliceView: boolean mPressing>
<androidx.slice.widget.SliceView: boolean mInLongpress>
<androidx.slice.widget.SliceView: int[] mClickInfo>
<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck>
<androidx.slice.widget.SliceView: java.lang.Runnable mRefreshLastUpdated>
<androidx.slice.widget.SliceView: java.util.Comparator SLICE_ACTION_PRIORITY_COMPARATOR>
    public void <init>(android.content.Context)
    {
        androidx.slice.widget.SliceView r0;
        android.content.Context r1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.slice.widget.SliceView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.slice.widget.SliceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.slice.view.R$attr: int sliceViewStyle>;

        specialinvoke r0.<androidx.slice.widget.SliceView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.slice.widget.SliceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        androidx.slice.widget.SliceView$1 $r3;
        androidx.slice.widget.SliceView$2 $r4;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<androidx.slice.widget.SliceView: int mMode> = 2;

        r0.<androidx.slice.widget.SliceView: boolean mShowActions> = 0;

        r0.<androidx.slice.widget.SliceView: boolean mIsScrollable> = 1;

        r0.<androidx.slice.widget.SliceView: boolean mShowLastUpdated> = 1;

        r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible> = 0;

        r0.<androidx.slice.widget.SliceView: int mThemeTintColor> = -1;

        $r3 = new androidx.slice.widget.SliceView$1;

        specialinvoke $r3.<androidx.slice.widget.SliceView$1: void <init>(androidx.slice.widget.SliceView)>(r0);

        r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck> = $r3;

        $r4 = new androidx.slice.widget.SliceView$2;

        specialinvoke $r4.<androidx.slice.widget.SliceView$2: void <init>(androidx.slice.widget.SliceView)>(r0);

        r0.<androidx.slice.widget.SliceView: java.lang.Runnable mRefreshLastUpdated> = $r4;

        $i1 = <androidx.slice.view.R$style: int Widget_SliceView>;

        specialinvoke r0.<androidx.slice.widget.SliceView: void init(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, $i1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.slice.widget.SliceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        androidx.slice.widget.SliceView$1 $r3;
        androidx.slice.widget.SliceView$2 $r4;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<androidx.slice.widget.SliceView: int mMode> = 2;

        r0.<androidx.slice.widget.SliceView: boolean mShowActions> = 0;

        r0.<androidx.slice.widget.SliceView: boolean mIsScrollable> = 1;

        r0.<androidx.slice.widget.SliceView: boolean mShowLastUpdated> = 1;

        r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible> = 0;

        r0.<androidx.slice.widget.SliceView: int mThemeTintColor> = -1;

        $r3 = new androidx.slice.widget.SliceView$1;

        specialinvoke $r3.<androidx.slice.widget.SliceView$1: void <init>(androidx.slice.widget.SliceView)>(r0);

        r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck> = $r3;

        $r4 = new androidx.slice.widget.SliceView$2;

        specialinvoke $r4.<androidx.slice.widget.SliceView$2: void <init>(androidx.slice.widget.SliceView)>(r0);

        r0.<androidx.slice.widget.SliceView: java.lang.Runnable mRefreshLastUpdated> = $r4;

        specialinvoke r0.<androidx.slice.widget.SliceView: void init(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        return;
    }

    private void init(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.slice.widget.SliceView r0;
        android.content.Context r1, $r5, $r7, $r12, $r18, $r24;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        androidx.slice.widget.SliceStyle $r4, r28;
        android.content.res.Resources $r6, $r8, $r9, $r10;
        androidx.slice.widget.SliceChildView $r13, $r14, $r15, $r27;
        android.view.ViewGroup$LayoutParams $r16, $r23;
        androidx.slice.widget.ActionRow $r20, $r21, $r22, r30;
        android.view.ViewConfiguration $r25;
        androidx.slice.widget.LargeTemplateView r29;
        android.graphics.drawable.ColorDrawable r31;
        android.os.Handler r32;
        android.view.View r33, r34, r35, r36;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r28 = new androidx.slice.widget.SliceStyle;

        specialinvoke r28.<androidx.slice.widget.SliceStyle: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle> = r28;

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle>;

        $i3 = virtualinvoke $r4.<androidx.slice.widget.SliceStyle: int getTintColor()>();

        r0.<androidx.slice.widget.SliceView: int mThemeTintColor> = $i3;

        $r5 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = <androidx.slice.view.R$dimen: int abc_slice_shortcut_size>;

        $i5 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>($i4);

        r0.<androidx.slice.widget.SliceView: int mShortcutSize> = $i5;

        $r7 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $i6 = <androidx.slice.view.R$dimen: int abc_slice_row_min_height>;

        $i7 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelSize(int)>($i6);

        r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight> = $i7;

        $r9 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.res.Resources getResources()>();

        $i8 = <androidx.slice.view.R$dimen: int abc_slice_large_height>;

        $i9 = virtualinvoke $r9.<android.content.res.Resources: int getDimensionPixelSize(int)>($i8);

        r0.<androidx.slice.widget.SliceView: int mLargeHeight> = $i9;

        $r10 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.res.Resources getResources()>();

        $i10 = <androidx.slice.view.R$dimen: int abc_slice_action_row_height>;

        $i11 = virtualinvoke $r10.<android.content.res.Resources: int getDimensionPixelSize(int)>($i10);

        r0.<androidx.slice.widget.SliceView: int mActionRowHeight> = $i11;

        r29 = new androidx.slice.widget.LargeTemplateView;

        $r12 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        specialinvoke r29.<androidx.slice.widget.LargeTemplateView: void <init>(android.content.Context)>($r12);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView> = r29;

        $r13 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i12 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        virtualinvoke $r13.<androidx.slice.widget.SliceChildView: void setMode(int)>($i12);

        $r15 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r14 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r33 = (android.view.View) $r14;

        $r16 = specialinvoke r0.<androidx.slice.widget.SliceView: android.view.ViewGroup$LayoutParams getChildLp(android.view.View)>(r33);

        r34 = (android.view.View) $r15;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r34, $r16);

        specialinvoke r0.<androidx.slice.widget.SliceView: void applyConfigurations()>();

        r30 = new androidx.slice.widget.ActionRow;

        $r18 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        specialinvoke r30.<androidx.slice.widget.ActionRow: void <init>(android.content.Context,boolean)>($r18, 1);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow> = r30;

        $r20 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        r31 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r31.<android.graphics.drawable.ColorDrawable: void <init>(int)>(-1118482);

        virtualinvoke $r20.<androidx.slice.widget.ActionRow: void setBackground(android.graphics.drawable.Drawable)>(r31);

        $r22 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $r21 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        r35 = (android.view.View) $r21;

        $r23 = specialinvoke r0.<androidx.slice.widget.SliceView: android.view.ViewGroup$LayoutParams getChildLp(android.view.View)>(r35);

        r36 = (android.view.View) $r22;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r36, $r23);

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        $r24 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r25 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r24);

        i2 = virtualinvoke $r25.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $i13 = i2 * i2;

        r0.<androidx.slice.widget.SliceView: int mTouchSlopSquared> = $i13;

        r32 = new android.os.Handler;

        specialinvoke r32.<android.os.Handler: void <init>()>();

        r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler> = r32;

        $r27 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i14 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingStart()>();

        $i15 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i16 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingEnd()>();

        $i17 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        virtualinvoke $r27.<androidx.slice.widget.SliceChildView: void setInsets(int,int,int,int)>($i14, $i15, $i16, $i17);

        virtualinvoke r0.<androidx.slice.widget.SliceView: void setClipToPadding(boolean)>(0);

        specialinvoke r0.<android.view.ViewGroup: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        return;
    }

    public boolean isSliceViewClickable()
    {
        androidx.slice.widget.SliceView r0;
        android.view.View$OnClickListener $r1;
        androidx.slice.widget.ListContent $r2, $r3;
        androidx.slice.SliceItem $r4;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: android.view.View$OnClickListener mOnClickListener>;

        if $r1 != null goto label1;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r4 = virtualinvoke $r3.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getPrimaryAction()>();

        if $r4 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void setClickInfo(int[])
    {
        androidx.slice.widget.SliceView r0;
        int[] r1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: int[];

        r0.<androidx.slice.widget.SliceView: int[] mClickInfo> = r1;

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.slice.widget.SliceView r0;
        android.view.View r1, r29;
        boolean z0;
        androidx.slice.widget.EventInfo r2, r28;
        androidx.slice.SliceItem r3, $r8, $r11, $r12, $r23;
        androidx.slice.widget.ListContent $r4, $r7, $r10, $r20;
        android.view.View$OnClickListener $r5, $r6;
        android.content.Context $r13;
        androidx.slice.widget.SliceView$OnSliceActionListener $r14, $r21;
        int[] $r15, $r16, $r18, $r19;
        int $i0, $i1, $i2, $i3;
        androidx.slice.widget.SliceChildView $r22;
        java.lang.Throwable $r24, r26;
        androidx.slice.core.SliceActionImpl r25, r27;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        if $r4 == null goto label5;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r8 = virtualinvoke $r7.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getPrimaryAction()>();

        if $r8 == null goto label5;

     label1:
        r27 = new androidx.slice.core.SliceActionImpl;

        $r10 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r11 = virtualinvoke $r10.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getPrimaryAction()>();

        specialinvoke r27.<androidx.slice.core.SliceActionImpl: void <init>(androidx.slice.SliceItem)>($r11);

        r25 = r27;

        $r12 = virtualinvoke r25.<androidx.slice.core.SliceActionImpl: androidx.slice.SliceItem getActionItem()>();

        $r13 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        z0 = virtualinvoke $r12.<androidx.slice.SliceItem: boolean fireActionInternal(android.content.Context,android.content.Intent)>($r13, null);

        if z0 == 0 goto label2;

        $r22 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r23 = virtualinvoke r25.<androidx.slice.core.SliceActionImpl: androidx.slice.SliceItem getSliceItem()>();

        virtualinvoke $r22.<androidx.slice.widget.SliceChildView: void setActionLoading(androidx.slice.SliceItem)>($r23);

     label2:
        $r14 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver>;

        if $r14 == null goto label3;

        $r15 = r0.<androidx.slice.widget.SliceView: int[] mClickInfo>;

        if $r15 == null goto label3;

        $r16 = r0.<androidx.slice.widget.SliceView: int[] mClickInfo>;

        $i0 = lengthof $r16;

        if $i0 <= 1 goto label3;

        r28 = new androidx.slice.widget.EventInfo;

        $i1 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        $r18 = r0.<androidx.slice.widget.SliceView: int[] mClickInfo>;

        $i3 = $r18[0];

        $r19 = r0.<androidx.slice.widget.SliceView: int[] mClickInfo>;

        $i2 = $r19[1];

        specialinvoke r28.<androidx.slice.widget.EventInfo: void <init>(int,int,int,int)>($i1, 3, $i3, $i2);

        r2 = r28;

        $r20 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        r3 = virtualinvoke $r20.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getPrimaryAction()>();

        $r21 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver>;

        interfaceinvoke $r21.<androidx.slice.widget.SliceView$OnSliceActionListener: void onSliceAction(androidx.slice.widget.EventInfo,androidx.slice.SliceItem)>(r2, r3);

        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsOnTouch(androidx.slice.SliceItem,androidx.slice.widget.EventInfo)>(r3, r2);

     label3:
        goto label6;

     label4:
        $r24 := @caughtexception;

        r26 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SliceView", "PendingIntent for slice cannot be sent", r26);

        goto label6;

     label5:
        $r5 = r0.<androidx.slice.widget.SliceView: android.view.View$OnClickListener mOnClickListener>;

        if $r5 == null goto label6;

        $r6 = r0.<androidx.slice.widget.SliceView: android.view.View$OnClickListener mOnClickListener>;

        r29 = (android.view.View) r0;

        interfaceinvoke $r6.<android.view.View$OnClickListener: void onClick(android.view.View)>(r29);

     label6:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label3 with label4;
    }

    public void setOnClickListener(android.view.View$OnClickListener)
    {
        androidx.slice.widget.SliceView r0;
        android.view.View$OnClickListener r1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.View$OnClickListener;

        r0.<androidx.slice.widget.SliceView: android.view.View$OnClickListener mOnClickListener> = r1;

        return;
    }

    public void setOnLongClickListener(android.view.View$OnLongClickListener)
    {
        androidx.slice.widget.SliceView r0;
        android.view.View$OnLongClickListener r1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.View$OnLongClickListener;

        specialinvoke r0.<android.view.ViewGroup: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r1);

        r0.<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener> = r1;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.slice.widget.SliceView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1;
        android.view.View$OnLongClickListener $r2;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        $r2 = r0.<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener>;

        if $r2 == null goto label1;

        $z1 = specialinvoke r0.<androidx.slice.widget.SliceView: boolean handleTouchForLongpress(android.view.MotionEvent)>(r1);

        return $z1;

     label1:
        return z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.slice.widget.SliceView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1;
        android.view.View$OnLongClickListener $r2;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r2 = r0.<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener>;

        if $r2 == null goto label1;

        $z1 = specialinvoke r0.<androidx.slice.widget.SliceView: boolean handleTouchForLongpress(android.view.MotionEvent)>(r1);

        return $z1;

     label1:
        return z0;
    }

    private boolean handleTouchForLongpress(android.view.MotionEvent)
    {
        androidx.slice.widget.SliceView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float $f0, $f1, $f2, $f3;
        java.lang.Runnable $r2, $r4, $r6, $r9;
        android.os.Handler $r3, $r5, $r7, $r8;
        long $l14;
        boolean $z1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r7 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r6 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $i11 = (int) $f2;

        r0.<androidx.slice.widget.SliceView: int mDownX> = $i11;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $i12 = (int) $f3;

        r0.<androidx.slice.widget.SliceView: int mDownY> = $i12;

        r0.<androidx.slice.widget.SliceView: boolean mPressing> = 1;

        r0.<androidx.slice.widget.SliceView: boolean mInLongpress> = 0;

        $r8 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r9 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck>;

        $i13 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l14 = (long) $i13;

        virtualinvoke $r8.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r9, $l14);

        goto label4;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $i5 = (int) $f0;

        $i4 = r0.<androidx.slice.widget.SliceView: int mDownX>;

        i1 = $i5 - $i4;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $i7 = (int) $f1;

        $i6 = r0.<androidx.slice.widget.SliceView: int mDownY>;

        i2 = $i7 - $i6;

        $i9 = i1 * i1;

        $i8 = i2 * i2;

        i3 = $i9 + $i8;

        $i10 = r0.<androidx.slice.widget.SliceView: int mTouchSlopSquared>;

        if i3 <= $i10 goto label4;

        r0.<androidx.slice.widget.SliceView: boolean mPressing> = 0;

        $r3 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r2 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        goto label4;

     label3:
        r0.<androidx.slice.widget.SliceView: boolean mPressing> = 0;

        r0.<androidx.slice.widget.SliceView: boolean mInLongpress> = 0;

        $r5 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r4 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mLongpressCheck>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

     label4:
        $z1 = r0.<androidx.slice.widget.SliceView: boolean mInLongpress>;

        return $z1;
    }

    private int getHeightForMode(int)
    {
        androidx.slice.widget.SliceView r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6;
        androidx.slice.widget.ListContent $r1, $r2, $r3, $r5, $r6, $r7;
        boolean $z0, $z1;
        androidx.slice.widget.SliceChildView $r4, $r8;

        r0 := @this: androidx.slice.widget.SliceView;

        i5 := @parameter0: int;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $z0 = virtualinvoke $r2.<androidx.slice.widget.ListContent: boolean isValid()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        if i0 != 3 goto label3;

        $i4 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        return $i4;

     label3:
        if i5 <= 0 goto label4;

        $i1 = r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight>;

        if i5 > $i1 goto label4;

        i5 = r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight>;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $i2 = r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight>;

        virtualinvoke $r7.<androidx.slice.widget.ListContent: void setMaxSmallHeight(int)>($i2);

        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i3 = r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight>;

        virtualinvoke $r8.<androidx.slice.widget.SliceChildView: void setMaxSmallHeight(int)>($i3);

        goto label5;

     label4:
        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        virtualinvoke $r3.<androidx.slice.widget.ListContent: void setMaxSmallHeight(int)>(0);

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r4.<androidx.slice.widget.SliceChildView: void setMaxSmallHeight(int)>(0);

     label5:
        if i0 != 2 goto label6;

        $r6 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $z1 = r0.<androidx.slice.widget.SliceView: boolean mIsScrollable>;

        $i6 = virtualinvoke $r6.<androidx.slice.widget.ListContent: int getLargeHeight(int,boolean)>(i5, $z1);

        goto label7;

     label6:
        $r5 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $i6 = virtualinvoke $r5.<androidx.slice.widget.ListContent: int getSmallHeight()>();

     label7:
        return $i6;
    }

    protected void onMeasure(int, int)
    {
        androidx.slice.widget.SliceView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, $i30, $i31, i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, i47;
        android.view.ViewGroup$LayoutParams r1;
        androidx.slice.widget.ActionRow $r2, $r4;
        androidx.slice.widget.SliceChildView $r3;
        android.view.View r5, r6;

        r0 := @this: androidx.slice.widget.SliceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i28 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i29 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i12 = r0.<androidx.slice.widget.SliceView: int mMode>;

        if 3 != $i12 goto label01;

        i29 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        $i24 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        $i25 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingLeft()>();

        $i26 = $i24 + $i25;

        $i27 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingRight()>();

        i28 = $i26 + $i27;

     label01:
        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $i13 = virtualinvoke $r2.<androidx.slice.widget.ActionRow: int getVisibility()>();

        if $i13 == 8 goto label02;

        $i30 = r0.<androidx.slice.widget.SliceView: int mActionRowHeight>;

        goto label03;

     label02:
        $i30 = 0;

     label03:
        i2 = $i30;

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        r1 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r1 == null goto label04;

        $i23 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        if $i23 == -2 goto label05;

     label04:
        if i4 != 0 goto label06;

     label05:
        $i31 = -1;

        goto label07;

     label06:
        $i31 = i3;

     label07:
        i5 = $i31;

        i6 = specialinvoke r0.<androidx.slice.widget.SliceView: int getHeightForMode(int)>(i5);

        $i14 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i15 = i3 - $i14;

        $i16 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        i32 = $i15 - $i16;

        $i17 = i6 + i2;

        if i3 >= $i17 goto label08;

        if i4 != 0 goto label10;

     label08:
        if i4 != 1073741824 goto label09;

        i32 = staticinvoke <java.lang.Math: int min(int,int)>(i6, i32);

        goto label13;

     label09:
        i32 = i6;

        goto label13;

     label10:
        $i18 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        if $i18 != 2 goto label11;

        $i21 = r0.<androidx.slice.widget.SliceView: int mLargeHeight>;

        $i22 = $i21 + i2;

        if i3 < $i22 goto label11;

        i32 = i6;

        goto label13;

     label11:
        $i19 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        if $i19 != 3 goto label12;

        i32 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        goto label13;

     label12:
        $i20 = r0.<androidx.slice.widget.SliceView: int mMinTemplateHeight>;

        if i32 > $i20 goto label13;

        i32 = i6;

     label13:
        $i33 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i34 = i32 + $i33;

        $i35 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        i7 = $i34 + $i35;

        $i36 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingLeft()>();

        $i37 = i29 + $i36;

        $i38 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingRight()>();

        i39 = $i37 + $i38;

        i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i39, 1073741824);

        i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r5 = (android.view.View) $r3;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void measureChild(android.view.View,int,int)>(r5, i8, i9);

        $i40 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i41 = i2 + $i40;

        $i42 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        i10 = $i41 + $i42;

        i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i10, 1073741824);

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        r6 = (android.view.View) $r4;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void measureChild(android.view.View,int,int)>(r6, i8, i11);

        $i43 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i44 = i2 + $i43;

        $i45 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        $i46 = $i44 + $i45;

        i47 = i32 + $i46;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void setMeasuredDimension(int,int)>(i28, i47);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0, z1, z2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        androidx.slice.widget.SliceChildView r1;
        androidx.slice.widget.ActionRow $r2, $r3, $r4, $r5;
        android.view.View r6, r7, r8, r9, r10;

        r0 := @this: androidx.slice.widget.SliceView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        z1 = 0;

        z2 = 0;

        r6 = (android.view.View) r1;

        $i4 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        $i5 = 0 + $i4;

        $i6 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingRight()>();

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingLeft()>();

        $i9 = $i7 + $i8;

        r7 = (android.view.View) r1;

        $i10 = virtualinvoke r7.<android.view.View: int getMeasuredHeight()>();

        $i11 = 0 + $i10;

        r8 = (android.view.View) r1;

        virtualinvoke r8.<android.view.View: void layout(int,int,int,int)>(0, 0, $i9, $i11);

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $i12 = virtualinvoke $r2.<androidx.slice.widget.ActionRow: int getVisibility()>();

        if $i12 == 8 goto label1;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        r9 = (android.view.View) r1;

        $i13 = virtualinvoke r9.<android.view.View: int getMeasuredHeight()>();

        $i14 = 0 + $i13;

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $i15 = virtualinvoke $r4.<androidx.slice.widget.ActionRow: int getMeasuredWidth()>();

        $i16 = 0 + $i15;

        r10 = (android.view.View) r1;

        $i17 = virtualinvoke r10.<android.view.View: int getMeasuredHeight()>();

        $i18 = 0 + $i17;

        $r5 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $i19 = virtualinvoke $r5.<androidx.slice.widget.ActionRow: int getMeasuredHeight()>();

        $i20 = $i18 + $i19;

        virtualinvoke $r3.<androidx.slice.widget.ActionRow: void layout(int,int,int,int)>(0, $i14, $i16, $i20);

     label1:
        return;
    }

    public void onChanged(androidx.slice.Slice)
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.Slice r1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: androidx.slice.Slice;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void setSlice(androidx.slice.Slice)>(r1);

        return;
    }

    public void setSlice(androidx.slice.Slice)
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.Slice r1, $r7, $r11, $r25, $r27, $r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        androidx.slice.SliceMetadata r2, $r12, $r13, $r15, r31, $r34;
        androidx.slice.widget.SliceChildView $r3, $r9, $r16, $r17, $r19, $r21, $r23, $r32, $r33, $r35;
        androidx.slice.widget.ListContent $r4, $r8, $r18, $r20, $r36;
        android.content.Context $r5, $r10, $r24, $r26;
        androidx.slice.widget.SliceStyle $r6;
        java.util.List $r14;
        androidx.slice.SliceItem $r22, $r37;
        int $i0, $i1, $i2, $i4;
        android.net.Uri $r28, $r30;
        long l3;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: androidx.slice.Slice;

        specialinvoke r0.<androidx.slice.widget.SliceView: void initSliceMetrics(androidx.slice.Slice)>(r1);

        if r1 == null goto label01;

        $r27 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        if $r27 == null goto label01;

        $r28 = virtualinvoke r1.<androidx.slice.Slice: android.net.Uri getUri()>();

        $r29 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        $r30 = virtualinvoke $r29.<androidx.slice.Slice: android.net.Uri getUri()>();

        $z4 = virtualinvoke $r28.<android.net.Uri: boolean equals(java.lang.Object)>($r30);

        if $z4 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        if z0 == 0 goto label04;

        $r24 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r25 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        r31 = staticinvoke <androidx.slice.SliceMetadata: androidx.slice.SliceMetadata 'from'(android.content.Context,androidx.slice.Slice)>($r24, $r25);

        $r26 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        r2 = staticinvoke <androidx.slice.SliceMetadata: androidx.slice.SliceMetadata 'from'(android.content.Context,androidx.slice.Slice)>($r26, r1);

        $i1 = virtualinvoke r31.<androidx.slice.SliceMetadata: int getLoadingState()>();

        if $i1 != 2 goto label03;

        $i2 = virtualinvoke r2.<androidx.slice.SliceMetadata: int getLoadingState()>();

        if $i2 != 0 goto label03;

        return;

     label03:
        goto label05;

     label04:
        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r3.<androidx.slice.widget.SliceChildView: void resetView()>();

     label05:
        r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice> = r1;

        $r4 = new androidx.slice.widget.ListContent;

        $r5 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        $r6 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle>;

        specialinvoke $r4.<androidx.slice.widget.ListContent: void <init>(android.content.Context,androidx.slice.Slice,androidx.slice.widget.SliceStyle)>($r5, $r7, $r6);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent> = $r4;

        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $z1 = virtualinvoke $r8.<androidx.slice.widget.ListContent: boolean isValid()>();

        if $z1 != 0 goto label06;

        r0.<androidx.slice.widget.SliceView: java.util.List mActions> = null;

        $r23 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r23.<androidx.slice.widget.SliceChildView: void resetView()>();

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        return;

     label06:
        $r9 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r9.<androidx.slice.widget.SliceChildView: void setLoadingActions(java.util.Set)>(null);

        $r10 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r11 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        $r12 = staticinvoke <androidx.slice.SliceMetadata: androidx.slice.SliceMetadata 'from'(android.content.Context,androidx.slice.Slice)>($r10, $r11);

        r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata> = $r12;

        $r13 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        $r14 = virtualinvoke $r13.<androidx.slice.SliceMetadata: java.util.List getSliceActions()>();

        r0.<androidx.slice.widget.SliceView: java.util.List mActions> = $r14;

        $r15 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        l3 = virtualinvoke $r15.<androidx.slice.SliceMetadata: long getLastUpdatedTime()>();

        $r16 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r16.<androidx.slice.widget.SliceChildView: void setLastUpdated(long)>(l3);

        $r32 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $z2 = r0.<androidx.slice.widget.SliceView: boolean mShowLastUpdated>;

        if $z2 == 0 goto label07;

        $z3 = virtualinvoke r0.<androidx.slice.widget.SliceView: boolean isExpired()>();

        if $z3 == 0 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        virtualinvoke $r32.<androidx.slice.widget.SliceChildView: void setShowLastUpdated(boolean)>($z6);

        $r33 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r34 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        $z7 = virtualinvoke $r34.<androidx.slice.SliceMetadata: boolean isPermissionSlice()>();

        virtualinvoke $r33.<androidx.slice.widget.SliceChildView: void setAllowTwoLines(boolean)>($z7);

        $r35 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i4 = specialinvoke r0.<androidx.slice.widget.SliceView: int getTintColor()>();

        virtualinvoke $r35.<androidx.slice.widget.SliceChildView: void setTint(int)>($i4);

        $r36 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r37 = virtualinvoke $r36.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getLayoutDirItem()>();

        if $r37 == null goto label09;

        $r21 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r20 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r22 = virtualinvoke $r20.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getLayoutDirItem()>();

        $i0 = virtualinvoke $r22.<androidx.slice.SliceItem: int getInt()>();

        virtualinvoke $r21.<androidx.slice.widget.SliceChildView: void setLayoutDirection(int)>($i0);

        goto label10;

     label09:
        $r17 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r17.<androidx.slice.widget.SliceChildView: void setLayoutDirection(int)>(2);

     label10:
        $r19 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r18 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        virtualinvoke $r19.<androidx.slice.widget.SliceChildView: void setSliceContent(androidx.slice.widget.ListContent)>($r18);

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>(1);

        specialinvoke r0.<androidx.slice.widget.SliceView: void refreshLastUpdatedLabel(boolean)>(1);

        return;
    }

    private boolean isNeverExpired()
    {
        androidx.slice.widget.SliceView r0;
        long l0;
        androidx.slice.SliceMetadata $r1, $r2;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        l0 = virtualinvoke $r2.<androidx.slice.SliceMetadata: long getExpiry()>();

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean isExpired()
    {
        androidx.slice.widget.SliceView r0;
        long l0, l1;
        androidx.slice.SliceMetadata $r1, $r2;
        byte $b2, $b3, $b4;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        l0 = virtualinvoke $r2.<androidx.slice.SliceMetadata: long getExpiry()>();

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label2;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label2;

        $b4 = l1 cmp l0;

        if $b4 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private long getTimeToExpiry()
    {
        androidx.slice.widget.SliceView r0;
        long l0, l1, $l5;
        androidx.slice.SliceMetadata $r1, $r2;
        byte $b2, $b3, $b4;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        if $r1 != null goto label1;

        return 0L;

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        l0 = virtualinvoke $r2.<androidx.slice.SliceMetadata: long getExpiry()>();

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label2;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label2;

        $b4 = l1 cmp l0;

        if $b4 <= 0 goto label3;

     label2:
        $l5 = 0L;

        goto label4;

     label3:
        $l5 = l0 - l1;

     label4:
        return $l5;
    }

    public androidx.slice.Slice getSlice()
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.Slice $r1;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        return $r1;
    }

    public java.util.List getSliceActions()
    {
        androidx.slice.widget.SliceView r0;
        java.util.List $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $r1 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        return $r2;
    }

    public void setSliceActions(java.util.List)
    {
        androidx.slice.widget.SliceView r0;
        java.util.List r1, r2, r20;
        androidx.slice.Slice $r3;
        androidx.slice.SliceMetadata $r5, $r6;
        int $i0, i1;
        java.lang.Object $r8, $r12, $r15;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13, r17;
        java.lang.String $r14;
        java.lang.IllegalStateException r16;
        java.lang.IllegalArgumentException r18;
        java.util.ArrayList r19;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        if $r3 == null goto label1;

        $r5 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        if $r5 != null goto label2;

     label1:
        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to set actions on a view without a slice");

        throw r16;

     label2:
        $r6 = r0.<androidx.slice.widget.SliceView: androidx.slice.SliceMetadata mSliceMetadata>;

        r2 = virtualinvoke $r6.<androidx.slice.SliceMetadata: java.util.List getSliceActions()>();

        if r2 == null goto label5;

        if r1 == null goto label5;

        i1 = 0;

     label3:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z0 != 0 goto label4;

        r18 = new java.lang.IllegalArgumentException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to set an action that isn\'t available: ");

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw r18;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        if r1 != null goto label6;

        r19 = new java.util.ArrayList;

        $r15 = r19;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        goto label7;

     label6:
        $r15 = r1;

     label7:
        r20 = (java.util.List) $r15;

        r0.<androidx.slice.widget.SliceView: java.util.List mActions> = r20;

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        return;
    }

    public void setMode(int)
    {
        androidx.slice.widget.SliceView r0;
        int i0;

        r0 := @this: androidx.slice.widget.SliceView;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void setMode(int,boolean)>(i0, 0);

        return;
    }

    public void setScrollable(boolean)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0, $z1, $z2, $z3;
        androidx.slice.widget.SliceChildView $r1, $r2;
        androidx.slice.widget.LargeTemplateView $r3;

        r0 := @this: androidx.slice.widget.SliceView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.slice.widget.SliceView: boolean mIsScrollable>;

        if z0 == $z1 goto label1;

        r0.<androidx.slice.widget.SliceView: boolean mIsScrollable> = z0;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $z2 = $r1 instanceof androidx.slice.widget.LargeTemplateView;

        if $z2 == 0 goto label1;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r3 = (androidx.slice.widget.LargeTemplateView) $r2;

        $z3 = r0.<androidx.slice.widget.SliceView: boolean mIsScrollable>;

        virtualinvoke $r3.<androidx.slice.widget.LargeTemplateView: void setScrollable(boolean)>($z3);

     label1:
        return;
    }

    public boolean isScrollable()
    {
        androidx.slice.widget.SliceView r0;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $z0 = r0.<androidx.slice.widget.SliceView: boolean mIsScrollable>;

        return $z0;
    }

    public void setOnSliceActionListener(androidx.slice.widget.SliceView$OnSliceActionListener)
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.widget.SliceView$OnSliceActionListener r1, $r2;
        androidx.slice.widget.SliceChildView $r3;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: androidx.slice.widget.SliceView$OnSliceActionListener;

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver> = r1;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver>;

        virtualinvoke $r3.<androidx.slice.widget.SliceChildView: void setSliceActionListener(androidx.slice.widget.SliceView$OnSliceActionListener)>($r2);

        return;
    }

    public void setTint(int)
    {
        androidx.slice.widget.SliceView r0;
        int i0;

        r0 := @this: androidx.slice.widget.SliceView;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void setAccentColor(int)>(i0);

        return;
    }

    public void setAccentColor(int)
    {
        androidx.slice.widget.SliceView r0;
        int i0, $i1, $i2;
        androidx.slice.widget.SliceStyle $r1;
        androidx.slice.widget.SliceChildView $r2;

        r0 := @this: androidx.slice.widget.SliceView;

        i0 := @parameter0: int;

        r0.<androidx.slice.widget.SliceView: int mThemeTintColor> = i0;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle>;

        $i1 = r0.<androidx.slice.widget.SliceView: int mThemeTintColor>;

        virtualinvoke $r1.<androidx.slice.widget.SliceStyle: void setTintColor(int)>($i1);

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i2 = specialinvoke r0.<androidx.slice.widget.SliceView: int getTintColor()>();

        virtualinvoke $r2.<androidx.slice.widget.SliceChildView: void setTint(int)>($i2);

        return;
    }

    public void setMode(int, boolean)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0;
        int $i0, i3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.slice.widget.SliceView;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SliceView", "Animation not supported yet");

     label1:
        $i0 = r0.<androidx.slice.widget.SliceView: int mMode>;

        if $i0 != i3 goto label2;

        return;

     label2:
        if i3 == 1 goto label3;

        if i3 == 2 goto label3;

        if i3 == 3 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mode: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" please use one of MODE_SHORTCUT, MODE_SMALL, MODE_LARGE");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SliceView", $r5);

        i3 = 2;

     label3:
        r0.<androidx.slice.widget.SliceView: int mMode> = i3;

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateViewConfig()>();

        return;
    }

    public int getMode()
    {
        androidx.slice.widget.SliceView r0;
        int $i0;

        r0 := @this: androidx.slice.widget.SliceView;

        $i0 = r0.<androidx.slice.widget.SliceView: int mMode>;

        return $i0;
    }

    public void setShowActionRow(boolean)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0;

        r0 := @this: androidx.slice.widget.SliceView;

        z0 := @parameter0: boolean;

        r0.<androidx.slice.widget.SliceView: boolean mShowActions> = z0;

        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        return;
    }

    public boolean isShowingActionRow()
    {
        androidx.slice.widget.SliceView r0;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        $z0 = r0.<androidx.slice.widget.SliceView: boolean mShowActions>;

        return $z0;
    }

    private void updateViewConfig()
    {
        androidx.slice.widget.SliceView r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1, z2;
        java.util.Set r1;
        androidx.slice.widget.SliceChildView $r2, $r3, $r4, $r8, $r9, $r12, $r13, $r15, $r18, $r19, $r21, $r22;
        androidx.slice.widget.ListContent $r5, $r6, $r7;
        android.content.Context $r11, $r17;
        android.view.ViewGroup$LayoutParams $r14, $r20;
        androidx.slice.widget.ShortcutView r23;
        androidx.slice.widget.LargeTemplateView r24;
        android.view.View r25, r26, r27, r28, r29, r30;

        r0 := @this: androidx.slice.widget.SliceView;

        z2 = 0;

        i0 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getMode()>();

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        z0 = $r2 instanceof androidx.slice.widget.ShortcutView;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r1 = virtualinvoke $r3.<androidx.slice.widget.SliceChildView: java.util.Set getLoadingActions()>();

        if i0 != 3 goto label1;

        if z0 != 0 goto label1;

        $r15 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r25 = (android.view.View) $r15;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void removeView(android.view.View)>(r25);

        r23 = new androidx.slice.widget.ShortcutView;

        $r17 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        specialinvoke r23.<androidx.slice.widget.ShortcutView: void <init>(android.content.Context)>($r17);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView> = r23;

        $r19 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r18 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r26 = (android.view.View) $r18;

        $r20 = specialinvoke r0.<androidx.slice.widget.SliceView: android.view.ViewGroup$LayoutParams getChildLp(android.view.View)>(r26);

        r27 = (android.view.View) $r19;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r27, $r20);

        z2 = 1;

        goto label2;

     label1:
        if i0 == 3 goto label2;

        if z0 == 0 goto label2;

        $r9 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r28 = (android.view.View) $r9;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void removeView(android.view.View)>(r28);

        r24 = new androidx.slice.widget.LargeTemplateView;

        $r11 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        specialinvoke r24.<androidx.slice.widget.LargeTemplateView: void <init>(android.content.Context)>($r11);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView> = r24;

        $r13 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r12 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        r29 = (android.view.View) $r12;

        $r14 = specialinvoke r0.<androidx.slice.widget.SliceView: android.view.ViewGroup$LayoutParams getChildLp(android.view.View)>(r29);

        r30 = (android.view.View) $r13;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r30, $r14);

        z2 = 1;

     label2:
        $r21 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r21.<androidx.slice.widget.SliceChildView: void setMode(int)>(i0);

        if z2 == 0 goto label4;

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i1 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingStart()>();

        $i2 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingEnd()>();

        $i4 = virtualinvoke r0.<androidx.slice.widget.SliceView: int getPaddingBottom()>();

        virtualinvoke $r4.<androidx.slice.widget.SliceChildView: void setInsets(int,int,int,int)>($i1, $i2, $i3, $i4);

        specialinvoke r0.<androidx.slice.widget.SliceView: void applyConfigurations()>();

        $r5 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        if $r5 == null goto label3;

        $r6 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $z1 = virtualinvoke $r6.<androidx.slice.widget.ListContent: boolean isValid()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        virtualinvoke $r8.<androidx.slice.widget.SliceChildView: void setSliceContent(androidx.slice.widget.ListContent)>($r7);

     label3:
        $r22 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r22.<androidx.slice.widget.SliceChildView: void setLoadingActions(java.util.Set)>(r1);

     label4:
        specialinvoke r0.<androidx.slice.widget.SliceView: void updateActions()>();

        return;
    }

    private void applyConfigurations()
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.widget.SliceView$OnSliceActionListener $r1;
        androidx.slice.widget.SliceChildView $r2, $r3, $r5, $r6, $r8, $r12, $r14;
        boolean $z0, $z1;
        androidx.slice.widget.SliceStyle $r4;
        int $i0, $i1;
        androidx.slice.widget.ListContent $r7, $r9, $r11;
        androidx.slice.SliceItem $r10, $r13;
        androidx.slice.widget.LargeTemplateView $r15;

        r0 := @this: androidx.slice.widget.SliceView;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceView$OnSliceActionListener mSliceObserver>;

        virtualinvoke $r2.<androidx.slice.widget.SliceChildView: void setSliceActionListener(androidx.slice.widget.SliceView$OnSliceActionListener)>($r1);

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $z0 = $r3 instanceof androidx.slice.widget.LargeTemplateView;

        if $z0 == 0 goto label1;

        $r14 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r15 = (androidx.slice.widget.LargeTemplateView) $r14;

        $z1 = r0.<androidx.slice.widget.SliceView: boolean mIsScrollable>;

        virtualinvoke $r15.<androidx.slice.widget.LargeTemplateView: void setScrollable(boolean)>($z1);

     label1:
        $r5 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r4 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceStyle mSliceStyle>;

        virtualinvoke $r5.<androidx.slice.widget.SliceChildView: void setStyle(androidx.slice.widget.SliceStyle)>($r4);

        $r6 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $i0 = specialinvoke r0.<androidx.slice.widget.SliceView: int getTintColor()>();

        virtualinvoke $r6.<androidx.slice.widget.SliceChildView: void setTint(int)>($i0);

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        if $r7 == null goto label2;

        $r9 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r10 = virtualinvoke $r9.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getLayoutDirItem()>();

        if $r10 == null goto label2;

        $r12 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r11 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r13 = virtualinvoke $r11.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getLayoutDirItem()>();

        $i1 = virtualinvoke $r13.<androidx.slice.SliceItem: int getInt()>();

        virtualinvoke $r12.<androidx.slice.widget.SliceChildView: void setLayoutDirection(int)>($i1);

        goto label3;

     label2:
        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r8.<androidx.slice.widget.SliceChildView: void setLayoutDirection(int)>(2);

     label3:
        return;
    }

    private void updateActions()
    {
        androidx.slice.widget.SliceView r0;
        java.util.ArrayList r1, $r3;
        java.util.List $r2, $r4, $r6;
        java.util.Comparator $r5;
        boolean $z0;
        int $i0, $i1, $i2;
        androidx.slice.widget.ActionRow $r7, $r8, $r10, $r13;
        androidx.slice.widget.SliceChildView $r9, $r11, $r12;

        r0 := @this: androidx.slice.widget.SliceView;

        $r2 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        if $r2 != null goto label1;

        $r10 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        virtualinvoke $r10.<androidx.slice.widget.ActionRow: void setVisibility(int)>(8);

        $r11 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r11.<androidx.slice.widget.SliceChildView: void setSliceActions(java.util.List)>(null);

        return;

     label1:
        $r3 = new java.util.ArrayList;

        $r4 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r1 = $r3;

        $r5 = <androidx.slice.widget.SliceView: java.util.Comparator SLICE_ACTION_PRIORITY_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r5);

        $z0 = r0.<androidx.slice.widget.SliceView: boolean mShowActions>;

        if $z0 == 0 goto label2;

        $i0 = r0.<androidx.slice.widget.SliceView: int mMode>;

        if $i0 == 3 goto label2;

        $r6 = r0.<androidx.slice.widget.SliceView: java.util.List mActions>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 < 2 goto label2;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        $i2 = specialinvoke r0.<androidx.slice.widget.SliceView: int getTintColor()>();

        virtualinvoke $r7.<androidx.slice.widget.ActionRow: void setActions(java.util.List,int)>(r1, $i2);

        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        virtualinvoke $r8.<androidx.slice.widget.ActionRow: void setVisibility(int)>(0);

        $r9 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r9.<androidx.slice.widget.SliceChildView: void setSliceActions(java.util.List)>(null);

        goto label3;

     label2:
        $r12 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r12.<androidx.slice.widget.SliceChildView: void setSliceActions(java.util.List)>(r1);

        $r13 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ActionRow mActionRow>;

        virtualinvoke $r13.<androidx.slice.widget.ActionRow: void setVisibility(int)>(8);

     label3:
        return;
    }

    private int getTintColor()
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.SliceItem r1;
        int $i0, $i1, $i2;
        androidx.slice.Slice $r2;
        android.content.Context $r3;

        r0 := @this: androidx.slice.widget.SliceView;

        $i0 = r0.<androidx.slice.widget.SliceView: int mThemeTintColor>;

        if $i0 == -1 goto label1;

        $i1 = r0.<androidx.slice.widget.SliceView: int mThemeTintColor>;

        return $i1;

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        r1 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem findSubtype(androidx.slice.Slice,java.lang.String,java.lang.String)>($r2, "int", "color");

        if r1 == null goto label2;

        $i2 = virtualinvoke r1.<androidx.slice.SliceItem: int getInt()>();

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $i2 = staticinvoke <androidx.slice.widget.SliceViewUtil: int getColorAccent(android.content.Context)>($r3);

     label3:
        return $i2;
    }

    private android.view.ViewGroup$LayoutParams getChildLp(android.view.View)
    {
        androidx.slice.widget.SliceView r0;
        android.view.View r1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2, $r3;
        int $i0, $i1;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof androidx.slice.widget.ShortcutView;

        if $z0 == 0 goto label1;

        $r3 = new android.view.ViewGroup$LayoutParams;

        $i1 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        $i0 = r0.<androidx.slice.widget.SliceView: int mShortcutSize>;

        specialinvoke $r3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>($i1, $i0);

        return $r3;

     label1:
        $r2 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r2.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        return $r2;
    }

    public static java.lang.String modeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            default: goto label4;
        };

     label1:
        return "MODE SHORTCUT";

     label2:
        return "MODE SMALL";

     label3:
        return "MODE LARGE";

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown mode: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    protected void onAttachedToWindow()
    {
        androidx.slice.widget.SliceView r0;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $z0 = virtualinvoke r0.<androidx.slice.widget.SliceView: boolean isShown()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>(1);

        specialinvoke r0.<androidx.slice.widget.SliceView: void refreshLastUpdatedLabel(boolean)>(1);

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.slice.widget.SliceView r0;

        r0 := @this: androidx.slice.widget.SliceView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>(0);

        specialinvoke r0.<androidx.slice.widget.SliceView: void refreshLastUpdatedLabel(boolean)>(0);

        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        androidx.slice.widget.SliceView r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $z0 = virtualinvoke r0.<androidx.slice.widget.SliceView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label5;

        if i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>($z1);

        if i0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        specialinvoke r0.<androidx.slice.widget.SliceView: void refreshLastUpdatedLabel(boolean)>($z2);

     label5:
        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        androidx.slice.widget.SliceView r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: androidx.slice.widget.SliceView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onWindowVisibilityChanged(int)>(i0);

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>($z0);

        if i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        specialinvoke r0.<androidx.slice.widget.SliceView: void refreshLastUpdatedLabel(boolean)>($z1);

        return;
    }

    private void initSliceMetrics(androidx.slice.Slice)
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.Slice r1, $r3, $r7;
        android.net.Uri $r2, $r5, $r8, $r9;
        android.content.Context $r4;
        androidx.slice.widget.SliceMetrics $r6;
        boolean $z0;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: androidx.slice.Slice;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<androidx.slice.Slice: android.net.Uri getUri()>();

        if $r2 != null goto label2;

     label1:
        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>(0);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics> = null;

        goto label4;

     label2:
        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        if $r3 == null goto label3;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.Slice mCurrentSlice>;

        $r8 = virtualinvoke $r7.<androidx.slice.Slice: android.net.Uri getUri()>();

        $r9 = virtualinvoke r1.<androidx.slice.Slice: android.net.Uri getUri()>();

        $z0 = virtualinvoke $r8.<android.net.Uri: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label4;

     label3:
        specialinvoke r0.<androidx.slice.widget.SliceView: void logSliceMetricsVisibilityChange(boolean)>(0);

        $r4 = virtualinvoke r0.<androidx.slice.widget.SliceView: android.content.Context getContext()>();

        $r5 = virtualinvoke r1.<androidx.slice.Slice: android.net.Uri getUri()>();

        $r6 = staticinvoke <androidx.slice.widget.SliceMetrics: androidx.slice.widget.SliceMetrics getInstance(android.content.Context,android.net.Uri)>($r4, $r5);

        r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics> = $r6;

     label4:
        return;
    }

    private void logSliceMetricsVisibilityChange(boolean)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0, $z1, $z2;
        androidx.slice.widget.SliceMetrics $r1, $r2, $r3;

        r0 := @this: androidx.slice.widget.SliceView;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>;

        if $r1 == null goto label2;

        if z0 == 0 goto label1;

        $z2 = r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible>;

        if $z2 != 0 goto label1;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>;

        virtualinvoke $r3.<androidx.slice.widget.SliceMetrics: void logVisible()>();

        r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible> = 1;

     label1:
        if z0 != 0 goto label2;

        $z1 = r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible>;

        if $z1 == 0 goto label2;

        $r2 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>;

        virtualinvoke $r2.<androidx.slice.widget.SliceMetrics: void logHidden()>();

        r0.<androidx.slice.widget.SliceView: boolean mCurrentSliceLoggedVisible> = 0;

     label2:
        return;
    }

    private void logSliceMetricsOnTouch(androidx.slice.SliceItem, androidx.slice.widget.EventInfo)
    {
        androidx.slice.widget.SliceView r0;
        androidx.slice.SliceItem r1, $r9;
        androidx.slice.widget.EventInfo r2;
        androidx.slice.widget.SliceMetrics $r3, $r8;
        androidx.slice.Slice $r4, $r5, $r10;
        android.net.Uri $r6, $r11;
        androidx.slice.widget.ListContent $r7;
        int $i0;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: androidx.slice.SliceItem;

        r2 := @parameter1: androidx.slice.widget.EventInfo;

        $r3 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke r1.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r1.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r6 = virtualinvoke $r5.<androidx.slice.Slice: android.net.Uri getUri()>();

        if $r6 == null goto label1;

        $r8 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceMetrics mCurrentSliceMetrics>;

        $i0 = r2.<androidx.slice.widget.EventInfo: int actionType>;

        $r7 = r0.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        $r9 = virtualinvoke $r7.<androidx.slice.widget.ListContent: androidx.slice.SliceItem getPrimaryAction()>();

        $r10 = virtualinvoke $r9.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r11 = virtualinvoke $r10.<androidx.slice.Slice: android.net.Uri getUri()>();

        virtualinvoke $r8.<androidx.slice.widget.SliceMetrics: void logTouch(int,android.net.Uri)>($i0, $r11);

     label1:
        return;
    }

    private void refreshLastUpdatedLabel(boolean)
    {
        androidx.slice.widget.SliceView r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.Runnable $r1, $r4;
        android.os.Handler $r2, $r3;
        long $l0, $l1;

        r0 := @this: androidx.slice.widget.SliceView;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.slice.widget.SliceView: boolean mShowLastUpdated>;

        if $z1 == 0 goto label4;

        $z2 = specialinvoke r0.<androidx.slice.widget.SliceView: boolean isNeverExpired()>();

        if $z2 != 0 goto label4;

        if z0 == 0 goto label3;

        $r3 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r4 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mRefreshLastUpdated>;

        $z3 = virtualinvoke r0.<androidx.slice.widget.SliceView: boolean isExpired()>();

        if $z3 == 0 goto label1;

        $l1 = 60000L;

        goto label2;

     label1:
        $l0 = specialinvoke r0.<androidx.slice.widget.SliceView: long getTimeToExpiry()>();

        $l1 = $l0 + 60000L;

     label2:
        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, $l1);

        goto label4;

     label3:
        $r2 = r0.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        $r1 = r0.<androidx.slice.widget.SliceView: java.lang.Runnable mRefreshLastUpdated>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

     label4:
        return;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.slice.widget.SliceView r0;
        java.lang.Object r1;
        androidx.slice.Slice $r2;

        r0 := @this: androidx.slice.widget.SliceView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.Slice) r1;

        virtualinvoke r0.<androidx.slice.widget.SliceView: void onChanged(androidx.slice.Slice)>($r2);

        return;
    }

    static void <clinit>()
    {
        androidx.slice.widget.SliceView$3 $r0;

        $r0 = new androidx.slice.widget.SliceView$3;

        specialinvoke $r0.<androidx.slice.widget.SliceView$3: void <init>()>();

        <androidx.slice.widget.SliceView: java.util.Comparator SLICE_ACTION_PRIORITY_COMPARATOR> = $r0;

        return;
    }

androidx.slice.widget.SliceView$1
<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>
    void <init>(androidx.slice.widget.SliceView)
    {
        androidx.slice.widget.SliceView$1 r0;
        androidx.slice.widget.SliceView r1;

        r0 := @this: androidx.slice.widget.SliceView$1;

        r1 := @parameter0: androidx.slice.widget.SliceView;

        r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.slice.widget.SliceView$1 r0;
        androidx.slice.widget.SliceView $r1, $r2, $r4, $r5, $r6, $r8;
        boolean $z0;
        android.view.View$OnLongClickListener $r3, $r7;
        android.view.View r9;

        r0 := @this: androidx.slice.widget.SliceView$1;

        $r1 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        $z0 = $r1.<androidx.slice.widget.SliceView: boolean mPressing>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        $r3 = $r2.<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        $r4.<androidx.slice.widget.SliceView: boolean mInLongpress> = 1;

        $r5 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        $r7 = $r5.<androidx.slice.widget.SliceView: android.view.View$OnLongClickListener mLongClickListener>;

        $r6 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        r9 = (android.view.View) $r6;

        interfaceinvoke $r7.<android.view.View$OnLongClickListener: boolean onLongClick(android.view.View)>(r9);

        $r8 = r0.<androidx.slice.widget.SliceView$1: androidx.slice.widget.SliceView this$0>;

        virtualinvoke $r8.<androidx.slice.widget.SliceView: boolean performHapticFeedback(int)>(0);

     label1:
        return;
    }

androidx.slice.widget.SliceView$2
<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>
    void <init>(androidx.slice.widget.SliceView)
    {
        androidx.slice.widget.SliceView$2 r0;
        androidx.slice.widget.SliceView r1;

        r0 := @this: androidx.slice.widget.SliceView$2;

        r1 := @parameter0: androidx.slice.widget.SliceView;

        r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.slice.widget.SliceView$2 r0;
        androidx.slice.widget.SliceView $r1, $r2, $r4, $r6, $r7;
        boolean $z0;
        android.os.Handler $r3;
        androidx.slice.widget.SliceChildView $r5, $r9;
        androidx.slice.widget.ListContent $r8;

        r0 := @this: androidx.slice.widget.SliceView$2;

        $r1 = r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>;

        $z0 = virtualinvoke $r1.<androidx.slice.widget.SliceView: boolean isExpired()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>;

        $r5 = $r4.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        virtualinvoke $r5.<androidx.slice.widget.SliceChildView: void setShowLastUpdated(boolean)>(1);

        $r6 = r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>;

        $r9 = $r6.<androidx.slice.widget.SliceView: androidx.slice.widget.SliceChildView mCurrentView>;

        $r7 = r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>;

        $r8 = $r7.<androidx.slice.widget.SliceView: androidx.slice.widget.ListContent mListContent>;

        virtualinvoke $r9.<androidx.slice.widget.SliceChildView: void setSliceContent(androidx.slice.widget.ListContent)>($r8);

     label1:
        $r2 = r0.<androidx.slice.widget.SliceView$2: androidx.slice.widget.SliceView this$0>;

        $r3 = $r2.<androidx.slice.widget.SliceView: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, 60000L);

        return;
    }

androidx.slice.widget.SliceView$3
    void <init>()
    {
        androidx.slice.widget.SliceView$3 r0;

        r0 := @this: androidx.slice.widget.SliceView$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.slice.core.SliceAction, androidx.slice.core.SliceAction)
    {
        androidx.slice.widget.SliceView$3 r0;
        androidx.slice.core.SliceAction r1, r2;
        int i0, i1;

        r0 := @this: androidx.slice.widget.SliceView$3;

        r1 := @parameter0: androidx.slice.core.SliceAction;

        r2 := @parameter1: androidx.slice.core.SliceAction;

        i0 = interfaceinvoke r1.<androidx.slice.core.SliceAction: int getPriority()>();

        i1 = interfaceinvoke r2.<androidx.slice.core.SliceAction: int getPriority()>();

        if i0 >= 0 goto label1;

        if i1 >= 0 goto label1;

        return 0;

     label1:
        if i0 >= 0 goto label2;

        return 1;

     label2:
        if i1 >= 0 goto label3;

        return -1;

     label3:
        if i1 >= i0 goto label4;

        return 1;

     label4:
        if i1 <= i0 goto label5;

        return -1;

     label5:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.slice.widget.SliceView$3 r0;
        java.lang.Object r1, r2;
        androidx.slice.core.SliceAction $r3, $r4;
        int $i0;

        r0 := @this: androidx.slice.widget.SliceView$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.slice.core.SliceAction) r1;

        $r3 = (androidx.slice.core.SliceAction) r2;

        $i0 = virtualinvoke r0.<androidx.slice.widget.SliceView$3: int compare(androidx.slice.core.SliceAction,androidx.slice.core.SliceAction)>($r4, $r3);

        return $i0;
    }

androidx.slice.widget.SliceView$OnSliceActionListener
<androidx.slice.widget.SliceView$OnSliceActionListener: void onSliceAction(androidx.slice.widget.EventInfo,androidx.slice.SliceItem)>
androidx.slice.widget.SliceView$SliceMode
