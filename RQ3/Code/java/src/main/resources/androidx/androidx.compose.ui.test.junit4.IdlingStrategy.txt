androidx.compose.ui.test.junit4.IdlingStrategy
<androidx.compose.ui.test.junit4.IdlingStrategy: boolean getCanSynchronizeOnUiThread()>
<androidx.compose.ui.test.junit4.IdlingStrategy: void runUntilIdle()>
    public java.lang.Object awaitIdle(kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.IdlingStrategy r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.ui.test.junit4.IdlingStrategy;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.compose.ui.test.junit4.IdlingStrategy: java.lang.Object awaitIdle$suspendImpl(androidx.compose.ui.test.junit4.IdlingStrategy,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r2;
    }

    public static java.lang.Object awaitIdle$suspendImpl(androidx.compose.ui.test.junit4.IdlingStrategy, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.IdlingStrategy $r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.Unit $r2;

        $r0 := @parameter0: androidx.compose.ui.test.junit4.IdlingStrategy;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        interfaceinvoke $r0.<androidx.compose.ui.test.junit4.IdlingStrategy: void runUntilIdle()>();

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r2;
    }

    public java.lang.Object withStrategy(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.junit4.IdlingStrategy r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.ui.test.junit4.IdlingStrategy;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return $r2;
    }

