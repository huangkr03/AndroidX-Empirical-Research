androidx.camera.core.processing.SurfaceProcessorNode
<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.SurfaceOutput$GlTransformOptions mGlTransformOptions>
<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceProcessorInternal mSurfaceProcessor>
<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.impl.CameraInternal mCameraInternal>
<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mOutputEdge>
<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mInputEdge>
    public void <init>(androidx.camera.core.impl.CameraInternal, androidx.camera.core.SurfaceOutput$GlTransformOptions, androidx.camera.core.processing.SurfaceProcessorInternal)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.impl.CameraInternal r1;
        androidx.camera.core.SurfaceOutput$GlTransformOptions r2;
        androidx.camera.core.processing.SurfaceProcessorInternal r3;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: androidx.camera.core.impl.CameraInternal;

        r2 := @parameter1: androidx.camera.core.SurfaceOutput$GlTransformOptions;

        r3 := @parameter2: androidx.camera.core.processing.SurfaceProcessorInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.impl.CameraInternal mCameraInternal> = r1;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.SurfaceOutput$GlTransformOptions mGlTransformOptions> = r2;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceProcessorInternal mSurfaceProcessor> = r3;

        return;
    }

    public androidx.camera.core.processing.SurfaceEdge transform(androidx.camera.core.processing.SurfaceEdge)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.processing.SurfaceEdge r1, $r8, $r9;
        androidx.camera.core.processing.SettableSurface r2, r3;
        java.util.List $r4, $r5, $r7;
        int $i0;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: androidx.camera.core.processing.SurfaceEdge;

        staticinvoke <androidx.camera.core.impl.utils.Threads: void checkMainThread()>();

        $r4 = virtualinvoke r1.<androidx.camera.core.processing.SurfaceEdge: java.util.List getSurfaces()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Multiple input stream not supported yet.");

        r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mInputEdge> = r1;

        $r5 = virtualinvoke r1.<androidx.camera.core.processing.SurfaceEdge: java.util.List getSurfaces()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (androidx.camera.core.processing.SettableSurface) $r6;

        r3 = specialinvoke r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SettableSurface createOutputSurface(androidx.camera.core.processing.SettableSurface)>(r2);

        specialinvoke r0.<androidx.camera.core.processing.SurfaceProcessorNode: void sendSurfacesToProcessorWhenReady(androidx.camera.core.processing.SettableSurface,androidx.camera.core.processing.SettableSurface)>(r2, r3);

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r3);

        $r8 = staticinvoke <androidx.camera.core.processing.SurfaceEdge: androidx.camera.core.processing.SurfaceEdge create(java.util.List)>($r7);

        r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mOutputEdge> = $r8;

        $r9 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mOutputEdge>;

        return $r9;
    }

    private androidx.camera.core.processing.SettableSurface createOutputSurface(androidx.camera.core.processing.SettableSurface)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.processing.SettableSurface r1, $r9, $r17, r26;
        android.util.Size r2, r4, $r10, $r25;
        android.graphics.Rect r3, $r12, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2;
        android.graphics.Matrix r5, r6, $r11, $r13, $r14;
        androidx.camera.core.SurfaceOutput$GlTransformOptions $r7, $r22;
        int[] $r8;
        android.graphics.RectF $r15, $r16;
        java.lang.AssertionError $r19;
        java.lang.StringBuilder $r20, $r21, $r23;
        java.lang.String $r24;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: androidx.camera.core.processing.SettableSurface;

        $r8 = <androidx.camera.core.processing.SurfaceProcessorNode$2: int[] $SwitchMap$androidx$camera$core$SurfaceOutput$GlTransformOptions>;

        $r7 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.SurfaceOutput$GlTransformOptions mGlTransformOptions>;

        $i1 = virtualinvoke $r7.<androidx.camera.core.SurfaceOutput$GlTransformOptions: int ordinal()>();

        $i2 = $r8[$i1];

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label5;
        };

     label1:
        r2 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.util.Size getSize()>();

        r3 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.graphics.Rect getCropRect()>();

        i0 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getRotationDegrees()>();

        z0 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: boolean getMirroring()>();

        $z2 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: boolean is90or270(int)>(i0);

        if $z2 == 0 goto label2;

        $r25 = new android.util.Size;

        $i8 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $i9 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        specialinvoke $r25.<android.util.Size: void <init>(int,int)>($i8, $i9);

        goto label3;

     label2:
        $r25 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: android.util.Size rectToSize(android.graphics.Rect)>(r3);

     label3:
        r4 = $r25;

        $r13 = new android.graphics.Matrix;

        $r14 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.graphics.Matrix getSensorToBufferTransform()>();

        specialinvoke $r13.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r14);

        r5 = $r13;

        $r15 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: android.graphics.RectF sizeToRectF(android.util.Size)>(r2);

        $r16 = new android.graphics.RectF;

        specialinvoke $r16.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r3);

        r6 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: android.graphics.Matrix getRectToRect(android.graphics.RectF,android.graphics.RectF,int,boolean)>($r15, $r16, i0, z0);

        virtualinvoke r5.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r6);

        $r17 = new androidx.camera.core.processing.SettableSurface;

        $i6 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getTargets()>();

        $i7 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getFormat()>();

        $r18 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: android.graphics.Rect sizeToRect(android.util.Size)>(r4);

        specialinvoke $r17.<androidx.camera.core.processing.SettableSurface: void <init>(int,android.util.Size,int,android.graphics.Matrix,boolean,android.graphics.Rect,int,boolean)>($i6, r4, $i7, r5, 0, $r18, 0, 0);

        r26 = $r17;

        goto label6;

     label4:
        $r9 = new androidx.camera.core.processing.SettableSurface;

        $i3 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getTargets()>();

        $r10 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.util.Size getSize()>();

        $i4 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getFormat()>();

        $r11 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.graphics.Matrix getSensorToBufferTransform()>();

        $r12 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.graphics.Rect getCropRect()>();

        $i5 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getRotationDegrees()>();

        $z1 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: boolean getMirroring()>();

        specialinvoke $r9.<androidx.camera.core.processing.SettableSurface: void <init>(int,android.util.Size,int,android.graphics.Matrix,boolean,android.graphics.Rect,int,boolean)>($i3, $r10, $i4, $r11, 0, $r12, $i5, $z1);

        r26 = $r9;

        goto label6;

     label5:
        $r19 = new java.lang.AssertionError;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown GlTransformOptions: ");

        $r22 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.SurfaceOutput$GlTransformOptions mGlTransformOptions>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>($r24);

        throw $r19;

     label6:
        return r26;
    }

    private void sendSurfacesToProcessorWhenReady(androidx.camera.core.processing.SettableSurface, androidx.camera.core.processing.SettableSurface)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.processing.SettableSurface r1, r2;
        androidx.camera.core.SurfaceRequest r3;
        androidx.camera.core.impl.CameraInternal $r4;
        androidx.camera.core.SurfaceOutput$GlTransformOptions $r5;
        android.util.Size $r6;
        android.graphics.Rect $r7;
        int $i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r8;
        java.util.concurrent.ScheduledExecutorService $r10;
        androidx.camera.core.processing.SurfaceProcessorNode$1 r11;
        java.util.concurrent.Executor r12;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: androidx.camera.core.processing.SettableSurface;

        r2 := @parameter1: androidx.camera.core.processing.SettableSurface;

        $r4 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.impl.CameraInternal mCameraInternal>;

        r3 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: androidx.camera.core.SurfaceRequest createSurfaceRequest(androidx.camera.core.impl.CameraInternal)>($r4);

        $r5 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.SurfaceOutput$GlTransformOptions mGlTransformOptions>;

        $r6 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.util.Size getSize()>();

        $r7 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: android.graphics.Rect getCropRect()>();

        $i0 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: int getRotationDegrees()>();

        $z0 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: boolean getMirroring()>();

        $r8 = virtualinvoke r2.<androidx.camera.core.processing.SettableSurface: com.google.common.util.concurrent.ListenableFuture createSurfaceOutputFuture(androidx.camera.core.SurfaceOutput$GlTransformOptions,android.util.Size,android.graphics.Rect,int,boolean)>($r5, $r6, $r7, $i0, $z0);

        r11 = new androidx.camera.core.processing.SurfaceProcessorNode$1;

        specialinvoke r11.<androidx.camera.core.processing.SurfaceProcessorNode$1: void <init>(androidx.camera.core.processing.SurfaceProcessorNode,androidx.camera.core.SurfaceRequest,androidx.camera.core.processing.SettableSurface,androidx.camera.core.processing.SettableSurface)>(r0, r3, r1, r2);

        $r10 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        r12 = (java.util.concurrent.Executor) $r10;

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r8, r11, r12);

        return;
    }

    void setupSurfaceUpdatePipeline(androidx.camera.core.processing.SettableSurface, androidx.camera.core.SurfaceRequest, androidx.camera.core.processing.SettableSurface, androidx.camera.core.SurfaceOutput)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.processing.SettableSurface r1, r3;
        androidx.camera.core.SurfaceRequest r2;
        androidx.camera.core.SurfaceOutput r4;
        java.util.concurrent.ScheduledExecutorService $r5;
        androidx.camera.core.SurfaceRequest$TransformationInfoListener $r6;
        java.util.concurrent.Executor r7;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: androidx.camera.core.processing.SettableSurface;

        r2 := @parameter1: androidx.camera.core.SurfaceRequest;

        r3 := @parameter2: androidx.camera.core.processing.SettableSurface;

        r4 := @parameter3: androidx.camera.core.SurfaceOutput;

        $r5 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r6 = dynamicinvoke "onTransformationInfoUpdate" <androidx.camera.core.SurfaceRequest$TransformationInfoListener (androidx.camera.core.SurfaceOutput,androidx.camera.core.processing.SettableSurface,androidx.camera.core.processing.SettableSurface)>(r4, r1, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest$TransformationInfo), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.processing.SurfaceProcessorNode: void lambda$setupSurfaceUpdatePipeline$0(androidx.camera.core.SurfaceOutput,androidx.camera.core.processing.SettableSurface,androidx.camera.core.processing.SettableSurface,androidx.camera.core.SurfaceRequest$TransformationInfo)>, methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest$TransformationInfo));

        r7 = (java.util.concurrent.Executor) $r5;

        virtualinvoke r2.<androidx.camera.core.SurfaceRequest: void setTransformationInfoListener(java.util.concurrent.Executor,androidx.camera.core.SurfaceRequest$TransformationInfoListener)>(r7, $r6);

        return;
    }

    public void release()
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        androidx.camera.core.processing.SurfaceProcessorInternal $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        $r1 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceProcessorInternal mSurfaceProcessor>;

        interfaceinvoke $r1.<androidx.camera.core.processing.SurfaceProcessorInternal: void release()>();

        $r2 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.processing.SurfaceProcessorNode)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.processing.SurfaceProcessorNode: void lambda$release$1()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public volatile java.lang.Object transform(java.lang.Object)
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        java.lang.Object r1;
        androidx.camera.core.processing.SurfaceEdge $r2, $r3;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.processing.SurfaceEdge) r1;

        $r3 = virtualinvoke r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge transform(androidx.camera.core.processing.SurfaceEdge)>($r2);

        return $r3;
    }

    private void lambda$release$1()
    {
        androidx.camera.core.processing.SurfaceProcessorNode r0;
        java.util.Iterator r1;
        androidx.camera.core.processing.SettableSurface r2;
        androidx.camera.core.processing.SurfaceEdge $r3, $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode;

        $r3 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mOutputEdge>;

        if $r3 == null goto label2;

        $r4 = r0.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceEdge mOutputEdge>;

        $r5 = virtualinvoke $r4.<androidx.camera.core.processing.SurfaceEdge: java.util.List getSurfaces()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.camera.core.processing.SettableSurface) $r6;

        virtualinvoke r2.<androidx.camera.core.processing.SettableSurface: void close()>();

        goto label1;

     label2:
        return;
    }

    private static void lambda$setupSurfaceUpdatePipeline$0(androidx.camera.core.SurfaceOutput, androidx.camera.core.processing.SettableSurface, androidx.camera.core.processing.SettableSurface, androidx.camera.core.SurfaceRequest$TransformationInfo)
    {
        androidx.camera.core.SurfaceOutput r0;
        androidx.camera.core.processing.SettableSurface r1, r2;
        androidx.camera.core.SurfaceRequest$TransformationInfo r3;
        int $i0, $i1, $i2, i3;
        boolean $z0;

        r0 := @parameter0: androidx.camera.core.SurfaceOutput;

        r1 := @parameter1: androidx.camera.core.processing.SettableSurface;

        r2 := @parameter2: androidx.camera.core.processing.SettableSurface;

        r3 := @parameter3: androidx.camera.core.SurfaceRequest$TransformationInfo;

        $i0 = virtualinvoke r3.<androidx.camera.core.SurfaceRequest$TransformationInfo: int getRotationDegrees()>();

        $i1 = interfaceinvoke r0.<androidx.camera.core.SurfaceOutput: int getRotationDegrees()>();

        i3 = $i0 - $i1;

        $z0 = virtualinvoke r1.<androidx.camera.core.processing.SettableSurface: boolean getMirroring()>();

        if $z0 == 0 goto label1;

        i3 = neg i3;

     label1:
        $i2 = staticinvoke <androidx.camera.core.impl.utils.TransformUtils: int within360(int)>(i3);

        virtualinvoke r2.<androidx.camera.core.processing.SettableSurface: void setRotationDegrees(int)>($i2);

        return;
    }

androidx.camera.core.processing.SurfaceProcessorNode$1
<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.SurfaceRequest val$surfaceRequest>
<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$input>
<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$output>
<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SurfaceProcessorNode this$0>
    void <init>(androidx.camera.core.processing.SurfaceProcessorNode, androidx.camera.core.SurfaceRequest, androidx.camera.core.processing.SettableSurface, androidx.camera.core.processing.SettableSurface)
    {
        androidx.camera.core.processing.SurfaceProcessorNode$1 r0;
        androidx.camera.core.processing.SurfaceProcessorNode r1;
        androidx.camera.core.SurfaceRequest r2;
        androidx.camera.core.processing.SettableSurface r3, r4;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode$1;

        r1 := @parameter0: androidx.camera.core.processing.SurfaceProcessorNode;

        r2 := @parameter1: androidx.camera.core.SurfaceRequest;

        r3 := @parameter2: androidx.camera.core.processing.SettableSurface;

        r4 := @parameter3: androidx.camera.core.processing.SettableSurface;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SurfaceProcessorNode this$0> = r1;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.SurfaceRequest val$surfaceRequest> = r2;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$input> = r3;

        r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$output> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(androidx.camera.core.SurfaceOutput)
    {
        androidx.camera.core.processing.SurfaceProcessorNode$1 r0;
        androidx.camera.core.SurfaceOutput r1;
        androidx.camera.core.processing.SurfaceProcessorNode $r3, $r5, $r11;
        androidx.camera.core.processing.SurfaceProcessorInternal $r4, $r7;
        androidx.camera.core.SurfaceRequest $r6, $r9;
        androidx.camera.core.processing.SettableSurface $r8, $r10;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode$1;

        r1 := @parameter0: androidx.camera.core.SurfaceOutput;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SurfaceProcessorNode this$0>;

        $r4 = $r3.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceProcessorInternal mSurfaceProcessor>;

        interfaceinvoke $r4.<androidx.camera.core.processing.SurfaceProcessorInternal: void onOutputSurface(androidx.camera.core.SurfaceOutput)>(r1);

        $r5 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SurfaceProcessorNode this$0>;

        $r7 = $r5.<androidx.camera.core.processing.SurfaceProcessorNode: androidx.camera.core.processing.SurfaceProcessorInternal mSurfaceProcessor>;

        $r6 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.SurfaceRequest val$surfaceRequest>;

        interfaceinvoke $r7.<androidx.camera.core.processing.SurfaceProcessorInternal: void onInputSurface(androidx.camera.core.SurfaceRequest)>($r6);

        $r11 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SurfaceProcessorNode this$0>;

        $r10 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$input>;

        $r9 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.SurfaceRequest val$surfaceRequest>;

        $r8 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.processing.SettableSurface val$output>;

        virtualinvoke $r11.<androidx.camera.core.processing.SurfaceProcessorNode: void setupSurfaceUpdatePipeline(androidx.camera.core.processing.SettableSurface,androidx.camera.core.SurfaceRequest,androidx.camera.core.processing.SettableSurface,androidx.camera.core.SurfaceOutput)>($r10, $r9, $r8, r1);

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.core.processing.SurfaceProcessorNode$1 r0;
        java.lang.Throwable r1;
        androidx.camera.core.SurfaceRequest $r2;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: androidx.camera.core.SurfaceRequest val$surfaceRequest>;

        virtualinvoke $r2.<androidx.camera.core.SurfaceRequest: boolean willNotProvideSurface()>();

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.core.processing.SurfaceProcessorNode$1 r0;
        java.lang.Object r1;
        androidx.camera.core.SurfaceOutput $r2;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorNode$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.SurfaceOutput) r1;

        virtualinvoke r0.<androidx.camera.core.processing.SurfaceProcessorNode$1: void onSuccess(androidx.camera.core.SurfaceOutput)>($r2);

        return;
    }

androidx.camera.core.processing.SurfaceProcessorNode$2
<androidx.camera.core.processing.SurfaceProcessorNode$2: int[] $SwitchMap$androidx$camera$core$SurfaceOutput$GlTransformOptions>
    static void <clinit>()
    {
        androidx.camera.core.SurfaceOutput$GlTransformOptions[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        androidx.camera.core.SurfaceOutput$GlTransformOptions $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <androidx.camera.core.SurfaceOutput$GlTransformOptions: androidx.camera.core.SurfaceOutput$GlTransformOptions[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.core.processing.SurfaceProcessorNode$2: int[] $SwitchMap$androidx$camera$core$SurfaceOutput$GlTransformOptions> = $r1;

     label1:
        $r3 = <androidx.camera.core.processing.SurfaceProcessorNode$2: int[] $SwitchMap$androidx$camera$core$SurfaceOutput$GlTransformOptions>;

        $r2 = <androidx.camera.core.SurfaceOutput$GlTransformOptions: androidx.camera.core.SurfaceOutput$GlTransformOptions APPLY_CROP_ROTATE_AND_MIRRORING>;

        $i1 = virtualinvoke $r2.<androidx.camera.core.SurfaceOutput$GlTransformOptions: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        $r5 = <androidx.camera.core.processing.SurfaceProcessorNode$2: int[] $SwitchMap$androidx$camera$core$SurfaceOutput$GlTransformOptions>;

        $r4 = <androidx.camera.core.SurfaceOutput$GlTransformOptions: androidx.camera.core.SurfaceOutput$GlTransformOptions USE_SURFACE_TEXTURE_TRANSFORM>;

        $i2 = virtualinvoke $r4.<androidx.camera.core.SurfaceOutput$GlTransformOptions: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r9 = $r6;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

