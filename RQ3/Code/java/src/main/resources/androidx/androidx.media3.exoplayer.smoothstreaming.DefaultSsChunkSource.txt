androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.datasource.DataSource dataSource>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>
    public void <init>(androidx.media3.exoplayer.upstream.LoaderErrorThrower, androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest, int, androidx.media3.exoplayer.trackselection.ExoTrackSelection, androidx.media3.datasource.DataSource)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r2;
        int i0, i1, $i3, $i4, $i5, $i8, $i9, i10;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r3;
        androidx.media3.datasource.DataSource r4;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r5;
        androidx.media3.common.Format r6;
        androidx.media3.extractor.mp4.TrackEncryptionBox[] r7, $r22;
        byte b2, $b11;
        androidx.media3.extractor.mp4.Track r8, $r15;
        androidx.media3.extractor.mp4.FragmentedMp4Extractor r9, $r16;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] $r10;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor[] $r11, $r12;
        androidx.media3.common.Format[] $r13;
        androidx.media3.common.DrmInitData $r14;
        long $l6, $l7;
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor $r17;
        java.lang.Object[] $r18;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement $r19, $r21;
        java.lang.Object $r20;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoaderErrorThrower;

        r2 := @parameter1: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        r4 := @parameter4: androidx.media3.datasource.DataSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower> = r1;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest> = r2;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex> = i0;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection> = r3;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.datasource.DataSource dataSource> = r4;

        $r10 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        r5 = $r10[i0];

        $i3 = interfaceinvoke r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        $r11 = newarray (androidx.media3.exoplayer.source.chunk.ChunkExtractor)[$i3];

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors> = $r11;

        i10 = 0;

     label1:
        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors>;

        $i4 = lengthof $r12;

        if i10 >= $i4 goto label6;

        i1 = interfaceinvoke r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i10);

        $r13 = r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: androidx.media3.common.Format[] formats>;

        r6 = $r13[i1];

        $r14 = r6.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

        if $r14 == null goto label2;

        $r19 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        $r20 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r19);

        $r21 = (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement) $r20;

        $r22 = $r21.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement: androidx.media3.extractor.mp4.TrackEncryptionBox[] trackEncryptionBoxes>;

        goto label3;

     label2:
        $r22 = null;

     label3:
        r7 = $r22;

        $i5 = r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int type>;

        if $i5 != 2 goto label4;

        $b11 = 4;

        goto label5;

     label4:
        $b11 = 0;

     label5:
        b2 = $b11;

        $r15 = new androidx.media3.extractor.mp4.Track;

        $i8 = r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int type>;

        $l7 = r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long timescale>;

        $l6 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long durationUs>;

        specialinvoke $r15.<androidx.media3.extractor.mp4.Track: void <init>(int,int,long,long,long,androidx.media3.common.Format,int,androidx.media3.extractor.mp4.TrackEncryptionBox[],int,long[],long[])>(i1, $i8, $l7, -9223372036854775807L, $l6, r6, 0, r7, b2, null, null);

        r8 = $r15;

        $r16 = new androidx.media3.extractor.mp4.FragmentedMp4Extractor;

        specialinvoke $r16.<androidx.media3.extractor.mp4.FragmentedMp4Extractor: void <init>(int,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.mp4.Track)>(3, null, r8);

        r9 = $r16;

        $r18 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors>;

        $r17 = new androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        $i9 = r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int type>;

        specialinvoke $r17.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: void <init>(androidx.media3.extractor.Extractor,int,androidx.media3.common.Format)>(r9, $i9, r6);

        $r18[i10] = $r17;

        i10 = i10 + 1;

        goto label1;

     label6:
        return;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        long l0, l2, l3, $l9, $l10;
        androidx.media3.exoplayer.SeekParameters r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r2;
        int i1, $i4, $i6, $i7, $i8;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r3;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] $r4;
        byte $b5;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r4 = $r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        $i4 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>;

        r2 = $r4[$i4];

        i1 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int getChunkIndex(long)>(l0);

        l2 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>(i1);

        $b5 = l2 cmp l0;

        if $b5 >= 0 goto label1;

        $i6 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        $i7 = $i6 - 1;

        if i1 >= $i7 goto label1;

        $i8 = i1 + 1;

        $l9 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>($i8);

        goto label2;

     label1:
        $l9 = l2;

     label2:
        l3 = $l9;

        $l10 = virtualinvoke r1.<androidx.media3.exoplayer.SeekParameters: long resolveSeekPositionUs(long,long,long)>(l0, l2, l3);

        return $l10;
    }

    public void updateManifest(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r1, $r4;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r2, r3;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i13, $i14, $i15, $i16, $i17;
        long l1, l2, $l9, $l11;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] $r5, $r6;
        byte $b12;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r5 = $r4.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        $i3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>;

        r2 = $r5[$i3];

        i0 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        $r6 = r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        $i4 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>;

        r3 = $r6[$i4];

        if i0 == 0 goto label1;

        $i7 = r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        if $i7 != 0 goto label2;

     label1:
        $i5 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>;

        $i6 = $i5 + i0;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset> = $i6;

        goto label4;

     label2:
        $i8 = i0 - 1;

        $l9 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>($i8);

        $i10 = i0 - 1;

        $l11 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getChunkDurationUs(int)>($i10);

        l1 = $l9 + $l11;

        l2 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>(0);

        $b12 = l1 cmp l2;

        if $b12 > 0 goto label3;

        $i16 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>;

        $i17 = $i16 + i0;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset> = $i17;

        goto label4;

     label3:
        $i13 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>;

        $i14 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int getChunkIndex(long)>(l2);

        $i15 = $i13 + $i14;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset> = $i15;

     label4:
        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest> = r1;

        return;
    }

    public void updateTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection> = r1;

        return;
    }

    public void maybeThrowError() throws java.io.IOException
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        java.io.IOException $r1, $r3;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>;

        throw $r3;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.upstream.LoaderErrorThrower: void maybeThrowError()>();

        return;
    }

    public int getPreferredQueueSize(long, java.util.List)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        long l0;
        java.util.List r1;
        java.io.IOException $r2;
        int $i1, $i2, $i3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>;

        if $r2 != null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i2 = interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        if $i2 >= 2 goto label2;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        return $i1;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i3 = interfaceinvoke $r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int evaluateQueueSize(long,java.util.List)>(l0, r1);

        return $i3;
    }

    public boolean shouldCancelLoad(long, androidx.media3.exoplayer.source.chunk.Chunk, java.util.List)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        long l0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        java.util.List r2;
        java.io.IOException $r3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.source.chunk.Chunk;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>;

        if $r3 == null goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z0 = interfaceinvoke $r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List)>(l0, r1, r2);

        return $z0;
    }

    public final void getNextChunk(long, long, java.util.List, androidx.media3.exoplayer.source.chunk.ChunkHolder)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        long l0, l1, l2, l3, l5, l6, $l14, $l16, $l17, $l21, l26, $l27;
        java.util.List r1;
        androidx.media3.exoplayer.source.chunk.ChunkHolder r2;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r3;
        java.lang.Object[] r4;
        int i4, i7, i8, i9, $i10, $i11, $i12, $i13, $i15, $i18, $i19, $i20, $i22, $i23, i24, i25;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor r5;
        android.net.Uri r6;
        java.io.IOException $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r8, $r26, $r29;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r10, $r22;
        androidx.media3.exoplayer.source.chunk.MediaChunk $r11, $r23;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r12, $r13, $r14, $r16, $r17, $r19, $r21, $r24;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor[] $r15;
        androidx.media3.common.Format $r18;
        androidx.media3.datasource.DataSource $r20;
        androidx.media3.exoplayer.source.BehindLiveWindowException r31;
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator r32;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r33;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: androidx.media3.exoplayer.source.chunk.ChunkHolder;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError>;

        if $r7 == null goto label01;

        return;

     label01:
        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r9 = $r8.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        $i10 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>;

        r3 = $r9[$i10];

        $i11 = r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        if $i11 != 0 goto label04;

        $r29 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z3 = $r29.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z3 != 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        r2.<androidx.media3.exoplayer.source.chunk.ChunkHolder: boolean endOfStream> = $z4;

        return;

     label04:
        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label05;

        i24 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int getChunkIndex(long)>(l1);

        goto label06;

     label05:
        $i12 = interfaceinvoke r1.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i13);

        $r11 = (androidx.media3.exoplayer.source.chunk.MediaChunk) $r10;

        $l14 = virtualinvoke $r11.<androidx.media3.exoplayer.source.chunk.MediaChunk: long getNextChunkIndex()>();

        $i15 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>;

        $l16 = (long) $i15;

        $l17 = $l14 - $l16;

        i24 = (int) $l17;

        if i24 >= 0 goto label06;

        r31 = new androidx.media3.exoplayer.source.BehindLiveWindowException;

        specialinvoke r31.<androidx.media3.exoplayer.source.BehindLiveWindowException: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: java.io.IOException fatalError> = r31;

        return;

     label06:
        $i18 = r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        if i24 < $i18 goto label09;

        $r26 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z2 = $r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z2 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        r2.<androidx.media3.exoplayer.source.chunk.ChunkHolder: boolean endOfStream> = $z5;

        return;

     label09:
        l2 = l1 - l0;

        l3 = specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: long resolveTimeToLiveEdgeUs(long)>(l0);

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i19 = interfaceinvoke $r12.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        r4 = newarray (androidx.media3.exoplayer.source.chunk.MediaChunkIterator)[$i19];

        i25 = 0;

     label10:
        $i20 = lengthof r4;

        if i25 >= $i20 goto label11;

        $r24 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i4 = interfaceinvoke $r24.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i25);

        r32 = new androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator;

        specialinvoke r32.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement,int,int)>(r3, i4, i24);

        r4[i25] = r32;

        i25 = i25 + 1;

        goto label10;

     label11:
        $r13 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        r33 = (androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]) r4;

        interfaceinvoke $r13.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])>(l0, l2, l3, r1, r33);

        l26 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>(i24);

        $l21 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getChunkDurationUs(int)>(i24);

        l5 = l26 + $l21;

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label12;

        $l27 = l1;

        goto label13;

     label12:
        $l27 = -9223372036854775807L;

     label13:
        l6 = $l27;

        $i22 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int currentManifestChunkOffset>;

        i7 = i24 + $i22;

        $r14 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i8 = interfaceinvoke $r14.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndex()>();

        $r15 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors>;

        r5 = $r15[i8];

        $r16 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i9 = interfaceinvoke $r16.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i8);

        r6 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: android.net.Uri buildRequestUri(int,int)>(i9, i24);

        $r17 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r18 = interfaceinvoke $r17.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: androidx.media3.common.Format getSelectedFormat()>();

        $r20 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.datasource.DataSource dataSource>;

        $r19 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i23 = interfaceinvoke $r19.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectionReason()>();

        $r21 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r22 = interfaceinvoke $r21.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: java.lang.Object getSelectionData()>();

        $r23 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.MediaChunk newMediaChunk(androidx.media3.common.Format,androidx.media3.datasource.DataSource,android.net.Uri,int,long,long,long,int,java.lang.Object,androidx.media3.exoplayer.source.chunk.ChunkExtractor)>($r18, $r20, r6, i7, l26, l5, l6, $i23, $r22, r5);

        r2.<androidx.media3.exoplayer.source.chunk.ChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk> = $r23;

        return;
    }

    public void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        return;
    }

    public boolean onChunkLoadError(androidx.media3.exoplayer.source.chunk.Chunk, boolean, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        boolean z0, $z1, $z2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r3;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection r4;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r5, $r8, $r9;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions $r6;
        int $i0, $i1;
        androidx.media3.common.Format $r7;
        long $l2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        r3 := @parameter3: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r6 = staticinvoke <androidx.media3.exoplayer.trackselection.TrackSelectionUtil: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions createFallbackOptions(androidx.media3.exoplayer.trackselection.ExoTrackSelection)>($r5);

        r4 = interfaceinvoke r3.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>($r6, r2);

        if z0 == 0 goto label1;

        if r4 == null goto label1;

        $i0 = r4.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: int type>;

        if $i0 != 2 goto label1;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r7 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i1 = interfaceinvoke $r8.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int indexOf(androidx.media3.common.Format)>($r7);

        $l2 = r4.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection: long exclusionDurationMs>;

        $z1 = interfaceinvoke $r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean blacklist(int,long)>($i1, $l2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void release()
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor[] r1;
        int i0, i1;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        r1 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        interfaceinvoke r2.<androidx.media3.exoplayer.source.chunk.ChunkExtractor: void release()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static androidx.media3.exoplayer.source.chunk.MediaChunk newMediaChunk(androidx.media3.common.Format, androidx.media3.datasource.DataSource, android.net.Uri, int, long, long, long, int, java.lang.Object, androidx.media3.exoplayer.source.chunk.ChunkExtractor)
    {
        androidx.media3.common.Format r0;
        androidx.media3.datasource.DataSource r1;
        android.net.Uri r2;
        int i0, i4;
        long l1, l2, l3, l5, $l6;
        java.lang.Object r3;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor r4;
        androidx.media3.datasource.DataSpec r5, $r6;
        androidx.media3.exoplayer.source.chunk.ContainerMediaChunk $r7;

        r0 := @parameter0: androidx.media3.common.Format;

        r1 := @parameter1: androidx.media3.datasource.DataSource;

        r2 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        r4 := @parameter9: androidx.media3.exoplayer.source.chunk.ChunkExtractor;

        $r6 = new androidx.media3.datasource.DataSpec;

        specialinvoke $r6.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>(r2);

        r5 = $r6;

        l5 = l1;

        $r7 = new androidx.media3.exoplayer.source.chunk.ContainerMediaChunk;

        $l6 = (long) i0;

        specialinvoke $r7.<androidx.media3.exoplayer.source.chunk.ContainerMediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,long,long,int,long,androidx.media3.exoplayer.source.chunk.ChunkExtractor)>(r1, r5, r0, i4, r3, l1, l2, l3, -9223372036854775807L, $l6, 1, l5, r4);

        return $r7;
    }

    private long resolveTimeToLiveEdgeUs(long)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource r0;
        long l0, l2, $l5, $l6, $l7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r1;
        int i1, $i3, $i4;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r2, $r3;
        boolean $z0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z0 = $r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z0 != 0 goto label1;

        return -9223372036854775807L;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r4 = $r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        $i3 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: int streamElementIndex>;

        r1 = $r4[$i3];

        $i4 = r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        i1 = $i4 - 1;

        $l5 = virtualinvoke r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>(i1);

        $l6 = virtualinvoke r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getChunkDurationUs(int)>(i1);

        l2 = $l5 + $l6;

        $l7 = l2 - l0;

        return $l7;
    }

androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>
    public void <init>(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory> = r1;

        return;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsChunkSource createChunkSource(androidx.media3.exoplayer.upstream.LoaderErrorThrower, androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest, int, androidx.media3.exoplayer.trackselection.ExoTrackSelection, androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory r0;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r2;
        int i0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r3;
        androidx.media3.datasource.TransferListener r4;
        androidx.media3.datasource.DataSource r5;
        androidx.media3.datasource.DataSource$Factory $r6;
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource $r7;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoaderErrorThrower;

        r2 := @parameter1: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        r4 := @parameter4: androidx.media3.datasource.TransferListener;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory: androidx.media3.datasource.DataSource$Factory dataSourceFactory>;

        r5 = interfaceinvoke $r6.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        if r4 == null goto label1;

        interfaceinvoke r5.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r4);

     label1:
        $r7 = new androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource;

        specialinvoke $r7.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource: void <init>(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,int,androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.datasource.DataSource)>(r1, r2, i0, r3, r5);

        return $r7;
    }

androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement>
<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: int trackIndex>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement, int, int)
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r1;
        int i0, i1, $i2, $i3;
        long $l4, $l5;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l5 = (long) i1;

        $i2 = r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        $i3 = $i2 - 1;

        $l4 = (long) $i3;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkIterator: void <init>(long,long)>($l5, $l4);

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement> = r1;

        r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: int trackIndex> = i0;

        return;
    }

    public androidx.media3.datasource.DataSpec getDataSpec()
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator r0;
        android.net.Uri r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement $r2;
        int $i0, $i2;
        long $l1;
        androidx.media3.datasource.DataSpec $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: void checkInBounds()>();

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement>;

        $i0 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: int trackIndex>;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: long getCurrentIndex()>();

        $i2 = (int) $l1;

        r1 = virtualinvoke $r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: android.net.Uri buildRequestUri(int,int)>($i0, $i2);

        $r3 = new androidx.media3.datasource.DataSpec;

        specialinvoke $r3.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>(r1);

        return $r3;
    }

    public long getChunkStartTimeUs()
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement $r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: void checkInBounds()>();

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement>;

        $l0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: long getCurrentIndex()>();

        $i1 = (int) $l0;

        $l2 = virtualinvoke $r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>($i1);

        return $l2;
    }

    public long getChunkEndTimeUs()
    {
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator r0;
        long l0, $l1, $l3, $l4;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement $r1;
        int $i2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator;

        l0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: long getChunkStartTimeUs()>();

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement>;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator: long getCurrentIndex()>();

        $i2 = (int) $l1;

        $l3 = virtualinvoke $r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getChunkDurationUs(int)>($i2);

        $l4 = l0 + $l3;

        return $l4;
    }

