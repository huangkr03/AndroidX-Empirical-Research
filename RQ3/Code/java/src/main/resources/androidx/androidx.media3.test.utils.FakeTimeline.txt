androidx.media3.test.utils.FakeTimeline
<androidx.media3.test.utils.FakeTimeline: androidx.media3.common.MediaItem FAKE_MEDIA_ITEM>
<androidx.media3.test.utils.FakeTimeline: long AD_DURATION_US>
<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>
<androidx.media3.test.utils.FakeTimeline: java.lang.Object[] manifests>
<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>
<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>
    public static transient androidx.media3.common.AdPlaybackState createAdPlaybackState(int, long[])
    {
        int i0, i1, i2, i3;
        long[] r0, $r4, $r5;
        long[][] r1;
        androidx.media3.common.AdPlaybackState $r2, r13, r14;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        android.net.Uri $r12;

        i0 := @parameter0: int;

        r0 := @parameter1: long[];

        i1 = lengthof r0;

        $r2 = new androidx.media3.common.AdPlaybackState;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        specialinvoke $r2.<androidx.media3.common.AdPlaybackState: void <init>(java.lang.Object,long[])>($r3, r0);

        r13 = $r2;

        r1 = newarray (long[])[i1];

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r13 = virtualinvoke r13.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAdCount(int,int)>(i2, i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https://example.com/ad/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);

        r13 = virtualinvoke r13.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAvailableAdUri(int,int,android.net.Uri)>(i2, i3, $r12);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r4 = newarray (long)[i0];

        r1[i2] = $r4;

        $r5 = r1[i2];

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r5, 5000000L);

        i2 = i2 + 1;

        goto label1;

     label4:
        r14 = virtualinvoke r13.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAdDurationsUs(long[][])>(r1);

        return r14;
    }

    public static transient androidx.media3.test.utils.FakeTimeline createMultiPeriodAdTimeline(java.lang.Object, int, boolean[])
    {
        java.lang.Object r0;
        int i0, i2, $i3, $i6, i7, i8;
        boolean[] r1, r6;
        long l1, $l4, $l5;
        androidx.media3.common.AdPlaybackState r2, r3, r4, $r7, $r9, $r10, $r12, $r19, r20;
        java.util.ArrayList r5, $r14;
        boolean z0, $z2;
        long[] $r8, $r11, $r13;
        androidx.media3.test.utils.FakeTimeline $r15;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r16;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition $r17;
        androidx.media3.common.MediaItem $r18;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 := @parameter2: boolean[];

        $i3 = lengthof r1;

        $l4 = (long) $i3;

        l1 = 10000000L / $l4;

        $r7 = new androidx.media3.common.AdPlaybackState;

        $r8 = newarray (long)[0];

        specialinvoke $r7.<androidx.media3.common.AdPlaybackState: void <init>(java.lang.Object,long[])>("adsId", $r8);

        r2 = $r7;

        $r9 = virtualinvoke r2.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withNewAdGroup(int,long)>(0, 0L);

        $r10 = virtualinvoke $r9.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAdCount(int,int)>(0, 1);

        $r11 = newarray (long)[1];

        $l5 = 123000000L + l1;

        $r11[0] = $l5;

        $r12 = virtualinvoke $r10.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAdDurationsUs(int,long[])>(0, $r11);

        r3 = virtualinvoke $r12.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withIsServerSideInserted(int,boolean)>(0, 1);

        $r13 = newarray (long)[1];

        $r13[0] = l1;

        r4 = virtualinvoke r3.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withAdDurationsUs(int,long[])>(0, $r13);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r5 = $r14;

        i7 = 0;

        r6 = r1;

        i2 = lengthof r6;

        i8 = 0;

     label1:
        if i8 >= i2 goto label6;

        z0 = r6[i8];

        if z0 == 0 goto label3;

        $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        $r19 = r3;

        goto label4;

     label2:
        $r19 = r4;

        goto label4;

     label3:
        $r19 = r2;

     label4:
        r20 = $r19;

        if z0 == 0 goto label5;

        if i7 >= i0 goto label5;

        r20 = virtualinvoke r20.<androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState withPlayedAd(int,int)>(0, 0);

        i7 = i7 + 1;

     label5:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r20);

        i8 = i8 + 1;

        goto label1;

     label6:
        $r15 = new androidx.media3.test.utils.FakeTimeline;

        $r16 = newarray (androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition)[1];

        $r17 = new androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        $i6 = lengthof r1;

        $r18 = <androidx.media3.common.MediaItem: androidx.media3.common.MediaItem EMPTY>;

        specialinvoke $r17.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,boolean,boolean,long,long,long,java.util.List,androidx.media3.common.MediaItem)>($i6, r0, 1, 0, 0, 0, 10000000L, 0L, 123000000L, r5, $r18);

        $r16[0] = $r17;

        specialinvoke $r15.<androidx.media3.test.utils.FakeTimeline: void <init>(androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])>($r16);

        return $r15;
    }

    public void <init>()
    {
        androidx.media3.test.utils.FakeTimeline r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        $r1 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline: void <init>(int,java.lang.Object[])>(1, $r1);

        return;
    }

    public transient void <init>(int, java.lang.Object[])
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0;
        java.lang.Object[] r1;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r2;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] createDefaultWindowDefinitions(int)>(i0);

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline: void <init>(java.lang.Object[],androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])>(r1, $r2);

        return;
    }

    public transient void <init>(androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])
    {
        androidx.media3.test.utils.FakeTimeline r0;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        r1 := @parameter0: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[];

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline: void <init>(java.lang.Object[],androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])>($r2, r1);

        return;
    }

    public transient void <init>(java.lang.Object[], androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])
    {
        androidx.media3.test.utils.FakeTimeline r0;
        java.lang.Object[] r1;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] r2;
        androidx.media3.test.utils.FakeShuffleOrder $r3;
        int $i0;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[];

        $r3 = new androidx.media3.test.utils.FakeShuffleOrder;

        $i0 = lengthof r2;

        specialinvoke $r3.<androidx.media3.test.utils.FakeShuffleOrder: void <init>(int)>($i0);

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline: void <init>(java.lang.Object[],androidx.media3.exoplayer.source.ShuffleOrder,androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])>(r1, $r3, r2);

        return;
    }

    public transient void <init>(java.lang.Object[], androidx.media3.exoplayer.source.ShuffleOrder, androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[])
    {
        androidx.media3.test.utils.FakeTimeline r0;
        java.lang.Object[] r1, $r4, $r5, $r6;
        androidx.media3.exoplayer.source.ShuffleOrder r2;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        int[] $r7, $r8, $r9, $r11;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition $r10;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: androidx.media3.exoplayer.source.ShuffleOrder;

        r3 := @parameter2: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[];

        specialinvoke r0.<androidx.media3.common.Timeline: void <init>()>();

        $i0 = lengthof r3;

        $r4 = newarray (java.lang.Object)[$i0];

        r0.<androidx.media3.test.utils.FakeTimeline: java.lang.Object[] manifests> = $r4;

        $r6 = r0.<androidx.media3.test.utils.FakeTimeline: java.lang.Object[] manifests>;

        $r5 = r0.<androidx.media3.test.utils.FakeTimeline: java.lang.Object[] manifests>;

        $i2 = lengthof $r5;

        $i1 = lengthof r1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r6, 0, $i3);

        r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions> = r3;

        $i4 = lengthof r3;

        $i5 = $i4 + 1;

        $r7 = newarray (int)[$i5];

        r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets> = $r7;

        $r8 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $r8[0] = 0;

        i11 = 0;

     label1:
        $i6 = lengthof r3;

        if i11 >= $i6 goto label2;

        $r11 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i10 = i11 + 1;

        $r9 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i8 = $r9[i11];

        $r10 = r3[i11];

        $i7 = $r10.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: int periodCount>;

        $i9 = $i8 + $i7;

        $r11[$i10] = $i9;

        i11 = i11 + 1;

        goto label1;

     label2:
        r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder> = r2;

        return;
    }

    public int getWindowCount()
    {
        androidx.media3.test.utils.FakeTimeline r0;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r1;
        int $i0;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getNextWindowIndex(int, int, boolean)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r1;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i1 != 1 goto label1;

        return i0;

     label1:
        $i2 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getLastWindowIndex(boolean)>(z0);

        if i0 != $i2 goto label4;

        if i1 != 2 goto label2;

        $i3 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getFirstWindowIndex(boolean)>(z0);

        goto label3;

     label2:
        $i3 = -1;

     label3:
        return $i3;

     label4:
        if z0 == 0 goto label5;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i4 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.ShuffleOrder: int getNextIndex(int)>(i0);

        goto label6;

     label5:
        $i4 = i0 + 1;

     label6:
        return $i4;
    }

    public int getPreviousWindowIndex(int, int, boolean)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r1;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i1 != 1 goto label1;

        return i0;

     label1:
        $i2 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getFirstWindowIndex(boolean)>(z0);

        if i0 != $i2 goto label4;

        if i1 != 2 goto label2;

        $i3 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getLastWindowIndex(boolean)>(z0);

        goto label3;

     label2:
        $i3 = -1;

     label3:
        return $i3;

     label4:
        if z0 == 0 goto label5;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i4 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.ShuffleOrder: int getPreviousIndex(int)>(i0);

        goto label6;

     label5:
        $i4 = i0 - 1;

     label6:
        return $i4;
    }

    public int getLastWindowIndex(boolean)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        boolean z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r1;
        int $i0;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.ShuffleOrder: int getLastIndex()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<androidx.media3.common.Timeline: int getLastWindowIndex(boolean)>(0);

     label2:
        return $i0;
    }

    public int getFirstWindowIndex(boolean)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        boolean z0;
        androidx.media3.exoplayer.source.ShuffleOrder $r1;
        int $i0;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder>;

        $i0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.ShuffleOrder: int getFirstIndex()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<androidx.media3.common.Timeline: int getFirstWindowIndex(boolean)>(0);

     label2:
        return $i0;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, $i3, $i4, $i7, i11, $i18, $i19, $i20, $i21;
        androidx.media3.common.Timeline$Window r1;
        long l1, l2, $l5, $l6, $l9, l10, $l15, $l16, $l17, $l22;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r2;
        androidx.media3.common.Timeline$Period r3, $r5, $r10;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r4;
        int[] $r6, $r7, $r11, $r18, $r19;
        java.lang.Object[] $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b8, $b12;
        java.lang.Object $r13, $r15;
        androidx.media3.common.MediaItem $r14, $r16;
        androidx.media3.common.MediaItem$LiveConfiguration $r17;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        $r4 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>;

        r2 = $r4[i0];

        l10 = 0L;

        $r5 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r5.<androidx.media3.common.Timeline$Period: void <init>()>();

        r3 = $r5;

        $r6 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        i11 = $r6[i0];

     label01:
        $r7 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i3 = i0 + 1;

        $i4 = $r7[$i3];

        if i11 >= $i4 goto label04;

        $r10 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i11, r3);

        l2 = $r10.<androidx.media3.common.Timeline$Period: long durationUs>;

        $r11 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i7 = $r11[i0];

        if i11 != $i7 goto label02;

        $b8 = l2 cmp 0L;

        if $b8 == 0 goto label02;

        $l9 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>;

        l10 = l10 - $l9;

     label02:
        $b12 = l2 cmp -9223372036854775807L;

        if $b12 != 0 goto label03;

        l10 = -9223372036854775807L;

        goto label04;

     label03:
        l10 = l10 + l2;

        i11 = i11 + 1;

        goto label01;

     label04:
        $r13 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id>;

        $r14 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: androidx.media3.common.MediaItem mediaItem>;

        $r8 = r0.<androidx.media3.test.utils.FakeTimeline: java.lang.Object[] manifests>;

        $r15 = $r8[i0];

        $z0 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isLive>;

        if $z0 == 0 goto label05;

        $l5 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>;

        $l6 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l5);

        $l15 = $l6;

        goto label06;

     label05:
        $l15 = -9223372036854775807L;

     label06:
        $z1 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isLive>;

        if $z1 == 0 goto label07;

        $l16 = 0L;

        goto label08;

     label07:
        $l16 = -9223372036854775807L;

     label08:
        $z2 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isSeekable>;

        $z3 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isDynamic>;

        $z4 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isLive>;

        if $z4 == 0 goto label09;

        $r16 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: androidx.media3.common.MediaItem mediaItem>;

        $r17 = $r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        goto label10;

     label09:
        $r17 = null;

     label10:
        $l17 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long defaultPositionUs>;

        $r18 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i18 = $r18[i0];

        $r19 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i19 = i0 + 1;

        $i20 = $r19[$i19];

        $i21 = $i20 - 1;

        $l22 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>;

        virtualinvoke r1.<androidx.media3.common.Timeline$Window: androidx.media3.common.Timeline$Window set(java.lang.Object,androidx.media3.common.MediaItem,java.lang.Object,long,long,long,boolean,boolean,androidx.media3.common.MediaItem$LiveConfiguration,long,long,int,int,long)>($r13, $r14, $r15, -9223372036854775807L, $l15, $l16, $z2, $z3, $r17, $l17, l10, $i18, $i21, $l22);

        $z5 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isPlaceholder>;

        r1.<androidx.media3.common.Timeline$Window: boolean isPlaceholder> = $z5;

        return r1;
    }

    public int getPeriodCount()
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        $r2 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $r1 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        $i2 = $r2[$i1];

        return $i2;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.media3.common.Timeline$Period r1;
        boolean z0, $z1;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r2;
        java.lang.Integer r3, $r14, $r15;
        android.util.Pair r4, $r16;
        androidx.media3.common.AdPlaybackState r5;
        int[] $r6, $r7;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r8;
        java.util.List $r9, $r10;
        java.lang.Object $r11, $r13;
        long $l9, $l10, $l11, $l12, $l14, $l15, $l16, $l18, l19, l20;
        byte $b13, $b17;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        $r6 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(int[],int,boolean,boolean)>($r6, i0, 1, 0);

        $r7 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i3 = $r7[i1];

        i2 = i0 - $i3;

        $r8 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>;

        r2 = $r8[i1];

        if z0 == 0 goto label1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        goto label2;

     label1:
        $r15 = null;

     label2:
        r3 = $r15;

        if z0 == 0 goto label3;

        $r13 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r16 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r13, $r14);

        goto label4;

     label3:
        $r16 = null;

     label4:
        r4 = $r16;

        $r10 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates>;

        $r9 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates>;

        $i4 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i5 = i0 % $i4;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i5);

        r5 = (androidx.media3.common.AdPlaybackState) $r11;

        $i6 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: int periodCount>;

        $i7 = $i6 - 1;

        if i0 != $i7 goto label5;

        $l16 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long durationUs>;

        $b17 = $l16 cmp -9223372036854775807L;

        if $b17 != 0 goto label5;

        $l18 = -9223372036854775807L;

        goto label6;

     label5:
        $l10 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long durationUs>;

        $i8 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: int periodCount>;

        $l9 = (long) $i8;

        $l18 = $l10 / $l9;

     label6:
        l19 = $l18;

        if i2 != 0 goto label8;

        $l12 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long durationUs>;

        $b13 = $l12 cmp -9223372036854775807L;

        if $b13 == 0 goto label7;

        $l15 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>;

        l19 = l19 + $l15;

     label7:
        $l14 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>;

        l20 = neg $l14;

        goto label9;

     label8:
        $l11 = (long) i2;

        l20 = l19 * $l11;

     label9:
        $z1 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isPlaceholder>;

        virtualinvoke r1.<androidx.media3.common.Timeline$Period: androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long,androidx.media3.common.AdPlaybackState,boolean)>(r3, r4, i1, l19, l20, r5, $z1);

        return r1;
    }

    public int getIndexOfPeriod(java.lang.Object)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        java.lang.Object r1, $r2;
        int $i0, i1;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getPeriodCount()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: java.lang.Object getUidOfPeriod(int)>(i1);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public java.lang.Object getUidOfPeriod(int)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, i1, i2, $i3, $i5;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r1;
        int[] $r2, $r3;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        android.util.Pair $r7;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<androidx.media3.test.utils.FakeTimeline: int getPeriodCount()>();

        staticinvoke <androidx.media3.common.util.Assertions: int checkIndex(int,int,int)>(i0, 0, $i3);

        $r2 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(int[],int,boolean,boolean)>($r2, i0, 1, 0);

        $r3 = r0.<androidx.media3.test.utils.FakeTimeline: int[] periodOffsets>;

        $i5 = $r3[i1];

        i2 = i0 - $i5;

        $r4 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>;

        r1 = $r4[i1];

        $r5 = r1.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r7 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r7;
    }

    public com.google.common.collect.ImmutableMap getAdPlaybackStates(int)
    {
        androidx.media3.test.utils.FakeTimeline r0;
        int i0, $i1, i2;
        java.util.HashMap r1, $r3;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r2;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] $r4;
        java.util.List $r5, $r10;
        com.google.common.collect.ImmutableMap $r6;
        android.util.Pair $r7;
        java.lang.Object $r8, $r11;
        java.lang.Integer $r9;
        androidx.media3.common.AdPlaybackState $r12;

        r0 := @this: androidx.media3.test.utils.FakeTimeline;

        i0 := @parameter0: int;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r1 = $r3;

        $r4 = r0.<androidx.media3.test.utils.FakeTimeline: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] windowDefinitions>;

        r2 = $r4[i0];

        i2 = 0;

     label1:
        $r5 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r7 = new android.util.Pair;

        $r8 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = r2.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i2);

        $r12 = (androidx.media3.common.AdPlaybackState) $r11;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>(r1);

        return $r6;
    }

    private static androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] createDefaultWindowDefinitions(int)
    {
        int i0, i1;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition[] r0;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition $r1;
        java.lang.Integer $r2;

        i0 := @parameter0: int;

        r0 = newarray (androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = new androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r1.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object)>(1, $r2);

        r0[i1] = $r1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    static void <clinit>()
    {
        androidx.media3.common.MediaItem$Builder $r0, $r1, $r3;
        android.net.Uri $r2;
        androidx.media3.common.MediaItem $r4;

        $r0 = new androidx.media3.common.MediaItem$Builder;

        specialinvoke $r0.<androidx.media3.common.MediaItem$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMediaId(java.lang.String)>("FakeTimeline");

        $r2 = <android.net.Uri: android.net.Uri EMPTY>;

        $r3 = virtualinvoke $r1.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setUri(android.net.Uri)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        <androidx.media3.test.utils.FakeTimeline: androidx.media3.common.MediaItem FAKE_MEDIA_ITEM> = $r4;

        return;
    }

androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long DEFAULT_WINDOW_DURATION_US>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long DEFAULT_WINDOW_OFFSET_IN_FIRST_PERIOD_US>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: int periodCount>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isSeekable>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isDynamic>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isLive>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isPlaceholder>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long durationUs>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long defaultPositionUs>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs>
<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates>
    public static androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition createPlaceholder(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition $r1;
        androidx.media3.common.AdPlaybackState $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        $r2 = <androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState NONE>;

        specialinvoke $r1.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,boolean,boolean,long,long,long,androidx.media3.common.AdPlaybackState)>(1, r0, 0, 1, 0, 1, -9223372036854775807L, 0L, 0L, $r2);

        return $r1;
    }

    public void <init>(int, java.lang.Object)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,long)>(i0, r1, 1, 0, 10000000L);

        return;
    }

    public void <init>(boolean, boolean, long)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        boolean z0, z1;
        long l0;
        java.lang.Integer $r1;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        l0 := @parameter2: long;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,long)>(1, $r1, z0, z1, l0);

        return;
    }

    public void <init>(int, java.lang.Object, boolean, boolean, long)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1;
        long l1;
        androidx.media3.common.AdPlaybackState $r2;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        l1 := @parameter4: long;

        $r2 = <androidx.media3.common.AdPlaybackState: androidx.media3.common.AdPlaybackState NONE>;

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,long,androidx.media3.common.AdPlaybackState)>(i0, r1, z0, z1, l1, $r2);

        return;
    }

    public void <init>(int, java.lang.Object, boolean, boolean, long, androidx.media3.common.AdPlaybackState)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1;
        long l1;
        androidx.media3.common.AdPlaybackState r2;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        l1 := @parameter4: long;

        r2 := @parameter5: androidx.media3.common.AdPlaybackState;

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,boolean,boolean,long,long,long,androidx.media3.common.AdPlaybackState)>(i0, r1, z0, z1, z1, 0, l1, 0L, 123000000L, r2);

        return;
    }

    public void <init>(int, java.lang.Object, boolean, boolean, boolean, boolean, long, long, long, androidx.media3.common.AdPlaybackState)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1, z2, z3;
        long l1, l2, l3;
        androidx.media3.common.AdPlaybackState r2;
        com.google.common.collect.ImmutableList $r3;
        androidx.media3.common.MediaItem $r4, $r7;
        androidx.media3.common.MediaItem$Builder $r5, $r6;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        l3 := @parameter8: long;

        r2 := @parameter9: androidx.media3.common.AdPlaybackState;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r2);

        $r4 = <androidx.media3.test.utils.FakeTimeline: androidx.media3.common.MediaItem FAKE_MEDIA_ITEM>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r6 = virtualinvoke $r5.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setTag(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,boolean,boolean,long,long,long,java.util.List,androidx.media3.common.MediaItem)>(i0, r1, z0, z1, z2, z3, l1, l2, l3, $r3, $r7);

        return;
    }

    public void <init>(int, java.lang.Object, boolean, boolean, boolean, boolean, long, long, long, androidx.media3.common.AdPlaybackState, androidx.media3.common.MediaItem)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1, z2, z3;
        long l1, l2, l3;
        androidx.media3.common.AdPlaybackState r2;
        androidx.media3.common.MediaItem r3;
        com.google.common.collect.ImmutableList $r4;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        l3 := @parameter8: long;

        r2 := @parameter9: androidx.media3.common.AdPlaybackState;

        r3 := @parameter10: androidx.media3.common.MediaItem;

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r2);

        specialinvoke r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: void <init>(int,java.lang.Object,boolean,boolean,boolean,boolean,long,long,long,java.util.List,androidx.media3.common.MediaItem)>(i0, r1, z0, z1, z2, z3, l1, l2, l3, $r4, r3);

        return;
    }

    public void <init>(int, java.lang.Object, boolean, boolean, boolean, boolean, long, long, long, java.util.List, androidx.media3.common.MediaItem)
    {
        androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1, z2, z3, $z4;
        long l1, l2, l3;
        java.util.List r2;
        androidx.media3.common.MediaItem r3;
        byte $b4;

        r0 := @this: androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        l3 := @parameter8: long;

        r2 := @parameter9: java.util.List;

        r3 := @parameter10: androidx.media3.common.MediaItem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b4 = l1 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z4);

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: int periodCount> = i0;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.lang.Object id> = r1;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: androidx.media3.common.MediaItem mediaItem> = r3;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isSeekable> = z0;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isDynamic> = z1;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isLive> = z2;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: boolean isPlaceholder> = z3;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long durationUs> = l1;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long defaultPositionUs> = l2;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: long windowOffsetInFirstPeriodUs> = l3;

        r0.<androidx.media3.test.utils.FakeTimeline$TimelineWindowDefinition: java.util.List adPlaybackStates> = r2;

        return;
    }

