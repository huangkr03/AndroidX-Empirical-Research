androidx.media3.exoplayer.analytics.MediaMetricsListener
<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.content.Context context>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Period period>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int discontinuityReason>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentNetworkType>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.PlaybackException pendingPlayerError>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentVideoFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentAudioFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentTextFormat>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean isSeeking>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int ioErrorType>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean hasFatalError>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int droppedFrames>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int playedFrames>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: int audioUnderruns>
<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession>
    public static androidx.media3.exoplayer.analytics.MediaMetricsListener create(android.content.Context)
    {
        android.content.Context r0;
        android.media.metrics.MediaMetricsManager r1;
        java.lang.Object $r2;
        android.media.metrics.PlaybackSession $r3;
        androidx.media3.exoplayer.analytics.MediaMetricsListener $r4;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("media_metrics");

        r1 = (android.media.metrics.MediaMetricsManager) $r2;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = new androidx.media3.exoplayer.analytics.MediaMetricsListener;

        $r3 = virtualinvoke r1.<android.media.metrics.MediaMetricsManager: android.media.metrics.PlaybackSession createPlaybackSession()>();

        specialinvoke $r4.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void <init>(android.content.Context,android.media.metrics.PlaybackSession)>(r0, $r3);

     label2:
        return $r4;
    }

    private void <init>(android.content.Context, android.media.metrics.PlaybackSession)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        android.media.metrics.PlaybackSession r1;
        androidx.media3.common.Timeline$Window $r2;
        androidx.media3.common.Timeline$Period $r3;
        java.util.HashMap $r4, $r5;
        long $l0;
        androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager $r6;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r7;
        android.content.Context r8, r9;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.media.metrics.PlaybackSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r9 = virtualinvoke r8.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.content.Context context> = r9;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession> = r1;

        $r2 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r2.<androidx.media3.common.Timeline$Window: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window> = $r2;

        $r3 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r3.<androidx.media3.common.Timeline$Period: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Period period> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs> = $r5;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs> = $l0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState> = 0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentNetworkType> = 0;

        $r6 = new androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager;

        specialinvoke $r6.<androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager> = $r6;

        $r7 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void setListener(androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener)>(r0);

        return;
    }

    public android.media.metrics.LogSessionId getLogSessionId()
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        android.media.metrics.PlaybackSession $r1;
        android.media.metrics.LogSessionId $r2;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        $r1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r2 = virtualinvoke $r1.<android.media.metrics.PlaybackSession: android.media.metrics.LogSessionId getSessionId()>();

        return $r2;
    }

    public void onSessionCreated(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void onSessionActive(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r3, $r7, $r9;
        android.media.metrics.PlaybackMetrics$Builder $r4, $r5, $r6;
        androidx.media3.common.Timeline $r8;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        $r3 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r3 == null goto label1;

        $r9 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z0 = virtualinvoke $r9.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: boolean isAd()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void finishCurrentSession()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId> = r2;

        $r4 = new android.media.metrics.PlaybackMetrics$Builder;

        specialinvoke $r4.<android.media.metrics.PlaybackMetrics$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setPlayerName(java.lang.String)>("AndroidXMedia3");

        $r6 = virtualinvoke $r5.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setPlayerVersion(java.lang.String)>("1.0.0-rc02");

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder> = $r6;

        $r8 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $r7 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateTimelineMetadata(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r8, $r7);

        return;
    }

    public void onAdPlaybackStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2, r3;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void onSessionFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String, boolean)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2, $r4;
        boolean z0, $z1, $z2;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r3, $r7;
        java.util.HashMap $r8, $r9;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r3 == null goto label1;

        $r7 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z2 = virtualinvoke $r7.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: boolean isAd()>();

        if $z2 != 0 goto label3;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void finishCurrentSession()>();

     label3:
        $r8 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r9 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        return;
    }

    public void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.Player$PositionInfo r2, r3;
        int i0;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.Player$PositionInfo;

        r3 := @parameter2: androidx.media3.common.Player$PositionInfo;

        i0 := @parameter3: int;

        if i0 != 1 goto label1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean isSeeking> = 1;

     label1:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int discontinuityReason> = i0;

        return;
    }

    public void onVideoDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.exoplayer.DecoderCounters)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.exoplayer.DecoderCounters r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.exoplayer.DecoderCounters;

        $i1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int droppedFrames>;

        $i0 = r2.<androidx.media3.exoplayer.DecoderCounters: int droppedBufferCount>;

        $i2 = $i1 + $i0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int droppedFrames> = $i2;

        $i4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int playedFrames>;

        $i3 = r2.<androidx.media3.exoplayer.DecoderCounters: int renderedOutputBufferCount>;

        $i5 = $i4 + $i3;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int playedFrames> = $i5;

        return;
    }

    public void onBandwidthEstimate(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, int, long, long)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        int i0;
        long l1, l2, $l3, $l4, $l5, $l6, $l7;
        java.lang.String r2;
        java.lang.Long r3, r4, $r16, $r19;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r5, $r6, $r10;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r7;
        androidx.media3.common.Timeline $r8;
        java.lang.Object $r9, $r12, $r14;
        java.util.HashMap $r11, $r13, $r15, $r18;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r5 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r5 == null goto label5;

        $r7 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r8 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $r6 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r10 = (androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) $r9;

        r2 = interfaceinvoke $r7.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: java.lang.String getSessionForMediaPeriodId(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r8, $r10);

        $r11 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.lang.Long) $r12;

        $r13 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Long) $r14;

        $r15 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes>;

        if r3 != null goto label1;

        $l6 = 0L;

        goto label2;

     label1:
        $l6 = virtualinvoke r3.<java.lang.Long: long longValue()>();

     label2:
        $l3 = $l6 + l1;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r16);

        $r18 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs>;

        if r4 != null goto label3;

        $l7 = 0L;

        goto label4;

     label3:
        $l7 = virtualinvoke r4.<java.lang.Long: long longValue()>();

     label4:
        $l4 = (long) i0;

        $l5 = $l7 + $l4;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r19);

     label5:
        return;
    }

    public void onDownstreamFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.exoplayer.source.MediaLoadData r2;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate r3, $r5;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r4, $r8, $r13;
        androidx.media3.common.Format $r6, $r9;
        java.lang.Object $r7, $r12;
        int $i0, $i1;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r10;
        androidx.media3.common.Timeline $r11;
        java.lang.String $r14;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaLoadData;

        $r4 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate;

        $r6 = r2.<androidx.media3.exoplayer.source.MediaLoadData: androidx.media3.common.Format trackFormat>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r9 = (androidx.media3.common.Format) $r7;

        $i0 = r2.<androidx.media3.exoplayer.source.MediaLoadData: int trackSelectionReason>;

        $r10 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r11 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $r8 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r13 = (androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) $r12;

        $r14 = interfaceinvoke $r10.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: java.lang.String getSessionForMediaPeriodId(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r11, $r13);

        specialinvoke $r5.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: void <init>(androidx.media3.common.Format,int,java.lang.String)>($r9, $i0, $r14);

        r3 = $r5;

        $i1 = r2.<androidx.media3.exoplayer.source.MediaLoadData: int trackType>;

        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat> = r3;

        goto label5;

     label3:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat> = r3;

        goto label5;

     label4:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat> = r3;

        goto label5;

     label5:
        return;
    }

    public void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.VideoSize)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.VideoSize r2;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate r3, $r10;
        androidx.media3.common.Format r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        androidx.media3.common.Format$Builder $r7, $r8, $r9;
        java.lang.String $r11;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.VideoSize;

        r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>;

        if r3 == null goto label1;

        $r5 = r3.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $i0 = $r5.<androidx.media3.common.Format: int height>;

        if $i0 != -1 goto label1;

        $r6 = r3.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $r7 = virtualinvoke $r6.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $i1 = r2.<androidx.media3.common.VideoSize: int width>;

        $r8 = virtualinvoke $r7.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i1);

        $i2 = r2.<androidx.media3.common.VideoSize: int height>;

        $r9 = virtualinvoke $r8.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i2);

        r4 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        $r10 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate;

        $i3 = r3.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason>;

        $r11 = r3.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: java.lang.String sessionId>;

        specialinvoke $r10.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: void <init>(androidx.media3.common.Format,int,java.lang.String)>(r4, $i3, $r11);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat> = $r10;

     label1:
        return;
    }

    public void onLoadError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData, java.io.IOException, boolean)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3;
        java.io.IOException r4;
        boolean z0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter2: androidx.media3.exoplayer.source.MediaLoadData;

        r4 := @parameter3: java.io.IOException;

        z0 := @parameter4: boolean;

        $i0 = r3.<androidx.media3.exoplayer.source.MediaLoadData: int dataType>;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int ioErrorType> = $i0;

        return;
    }

    public void onPlayerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.PlaybackException)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.PlaybackException r2;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.PlaybackException;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.PlaybackException pendingPlayerError> = r2;

        return;
    }

    public void onEvents(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$Events)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r2;
        long l0;
        int $i1;
        boolean $z0;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r3;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime $r4;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        $i1 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int size()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeAddSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$Events)>(r2);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateMetricsBuilderValues(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events)>(r1, r2);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeReportPlaybackError(long)>(l0);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeReportTrackChanges(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events,long)>(r1, r2, l0);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeReportNetworkChange(long)>(l0);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeReportPlaybackStateChange(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events,long)>(r1, r2, l0);

        $z0 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(1028);

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r4 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(1028);

        interfaceinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void finishAllSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>($r4);

     label2:
        return;
    }

    private void maybeAddSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$Events)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r1;
        int i0, $i1, $i2, i3;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r2;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r3, $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int size()>();

        if i3 >= $i1 goto label5;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int get(int)>(i3);

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(i0);

        if i0 != 0 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessionsWithTimelineChange(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(r2);

        goto label4;

     label2:
        if i0 != 11 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $i2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int discontinuityReason>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessionsWithDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int)>(r2, $i2);

        goto label4;

     label3:
        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(r2);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private void maybeUpdateMetricsBuilderValues(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$Events)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        android.media.metrics.PlaybackMetrics$Builder $r3, $r6, $r8, $r10;
        androidx.media3.common.Tracks $r4;
        com.google.common.collect.ImmutableList $r5;
        java.lang.Object $r7;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r11;
        androidx.media3.common.Timeline $r12;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r13;
        androidx.media3.common.DrmInitData r14;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        $z0 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(0);

        if $z0 == 0 goto label1;

        r13 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(0);

        $r10 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if $r10 == null goto label1;

        $r12 = r13.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $r11 = r13.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateTimelineMetadata(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r12, $r11);

     label1:
        $z1 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(2);

        if $z1 == 0 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if $r3 == null goto label2;

        $r4 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.Tracks getCurrentTracks()>();

        $r5 = virtualinvoke $r4.<androidx.media3.common.Tracks: com.google.common.collect.ImmutableList getGroups()>();

        r14 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.DrmInitData getDrmInitData(com.google.common.collect.ImmutableList)>($r5);

        if r14 == null goto label2;

        $r6 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        $r7 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r6);

        $r8 = (android.media.metrics.PlaybackMetrics$Builder) $r7;

        $i2 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getDrmType(androidx.media3.common.DrmInitData)>(r14);

        virtualinvoke $r8.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setDrmType(int)>($i2);

     label2:
        $z2 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(1011);

        if $z2 == 0 goto label3;

        $i0 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int audioUnderruns>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int audioUnderruns> = $i1;

     label3:
        return;
    }

    private void maybeReportPlaybackError(long)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        long l0, $l2, $l3;
        androidx.media3.common.PlaybackException r1;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo r2;
        int $i1, $i4, $i5;
        android.content.Context $r3;
        android.media.metrics.PlaybackErrorEvent$Builder $r4, $r6, $r7, $r8, $r9;
        android.media.metrics.PlaybackSession $r5;
        android.media.metrics.PlaybackErrorEvent $r10;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        l0 := @parameter0: long;

        r1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.PlaybackException pendingPlayerError>;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.content.Context context>;

        $i1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int ioErrorType>;

        if $i1 != 4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r2 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo getErrorInfo(androidx.media3.common.PlaybackException,android.content.Context,boolean)>(r1, $r3, $z0);

        $r5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r4 = new android.media.metrics.PlaybackErrorEvent$Builder;

        specialinvoke $r4.<android.media.metrics.PlaybackErrorEvent$Builder: void <init>()>();

        $l2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs>;

        $l3 = l0 - $l2;

        $r6 = virtualinvoke $r4.<android.media.metrics.PlaybackErrorEvent$Builder: android.media.metrics.PlaybackErrorEvent$Builder setTimeSinceCreatedMillis(long)>($l3);

        $i4 = r2.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int errorCode>;

        $r7 = virtualinvoke $r6.<android.media.metrics.PlaybackErrorEvent$Builder: android.media.metrics.PlaybackErrorEvent$Builder setErrorCode(int)>($i4);

        $i5 = r2.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int subErrorCode>;

        $r8 = virtualinvoke $r7.<android.media.metrics.PlaybackErrorEvent$Builder: android.media.metrics.PlaybackErrorEvent$Builder setSubErrorCode(int)>($i5);

        $r9 = virtualinvoke $r8.<android.media.metrics.PlaybackErrorEvent$Builder: android.media.metrics.PlaybackErrorEvent$Builder setException(java.lang.Exception)>(r1);

        $r10 = virtualinvoke $r9.<android.media.metrics.PlaybackErrorEvent$Builder: android.media.metrics.PlaybackErrorEvent build()>();

        virtualinvoke $r5.<android.media.metrics.PlaybackSession: void reportPlaybackErrorEvent(android.media.metrics.PlaybackErrorEvent)>($r10);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession> = 1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.PlaybackException pendingPlayerError> = null;

        return;
    }

    private void maybeReportTrackChanges(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$Events, long)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r2;
        long l0;
        androidx.media3.common.Tracks r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate $r4, $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r17;
        int $i1, $i2, $i3, $i4;
        androidx.media3.common.Format $r7, $r10, $r12, $r15;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        l0 := @parameter2: long;

        $z3 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(2);

        if $z3 == 0 goto label4;

        r3 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.Tracks getCurrentTracks()>();

        z0 = virtualinvoke r3.<androidx.media3.common.Tracks: boolean isTypeSelected(int)>(2);

        z1 = virtualinvoke r3.<androidx.media3.common.Tracks: boolean isTypeSelected(int)>(1);

        z2 = virtualinvoke r3.<androidx.media3.common.Tracks: boolean isTypeSelected(int)>(3);

        if z0 != 0 goto label1;

        if z1 != 0 goto label1;

        if z2 == 0 goto label4;

     label1:
        if z0 != 0 goto label2;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateVideoFormat(long,androidx.media3.common.Format,int)>(l0, null, 0);

     label2:
        if z1 != 0 goto label3;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateAudioFormat(long,androidx.media3.common.Format,int)>(l0, null, 0);

     label3:
        if z2 != 0 goto label4;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateTextFormat(long,androidx.media3.common.Format,int)>(l0, null, 0);

     label4:
        $r16 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>;

        $z5 = specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean canReportPendingFormatUpdate(androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate)>($r16);

        if $z5 == 0 goto label5;

        $r11 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>;

        $r12 = $r11.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $i3 = $r12.<androidx.media3.common.Format: int height>;

        if $i3 == -1 goto label5;

        $r13 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>;

        $r15 = $r13.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $r14 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat>;

        $i4 = $r14.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateVideoFormat(long,androidx.media3.common.Format,int)>(l0, $r15, $i4);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat> = null;

     label5:
        $r17 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat>;

        $z6 = specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean canReportPendingFormatUpdate(androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate)>($r17);

        if $z6 == 0 goto label6;

        $r8 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat>;

        $r10 = $r8.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $r9 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat>;

        $i2 = $r9.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateAudioFormat(long,androidx.media3.common.Format,int)>(l0, $r10, $i2);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat> = null;

     label6:
        $r4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat>;

        $z4 = specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean canReportPendingFormatUpdate(androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate)>($r4);

        if $z4 == 0 goto label7;

        $r5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat>;

        $r7 = $r5.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>;

        $r6 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat>;

        $i1 = $r6.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void maybeUpdateTextFormat(long,androidx.media3.common.Format,int)>(l0, $r7, $i1);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat> = null;

     label7:
        return;
    }

    private boolean canReportPendingFormatUpdate(androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate r1;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate;

        if r1 == null goto label1;

        $r3 = r1.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: java.lang.String sessionId>;

        $r2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r4 = interfaceinvoke $r2.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: java.lang.String getActiveSessionId()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void maybeReportNetworkChange(long)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        long l0, $l3, $l4;
        int i1, $i2;
        android.content.Context $r1;
        android.media.metrics.NetworkEvent$Builder $r2, $r4, $r5;
        android.media.metrics.PlaybackSession $r3;
        android.media.metrics.NetworkEvent $r6;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.content.Context context>;

        i1 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getNetworkType(android.content.Context)>($r1);

        $i2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentNetworkType>;

        if i1 == $i2 goto label1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentNetworkType> = i1;

        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r2 = new android.media.metrics.NetworkEvent$Builder;

        specialinvoke $r2.<android.media.metrics.NetworkEvent$Builder: void <init>()>();

        $r4 = virtualinvoke $r2.<android.media.metrics.NetworkEvent$Builder: android.media.metrics.NetworkEvent$Builder setNetworkType(int)>(i1);

        $l3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs>;

        $l4 = l0 - $l3;

        $r5 = virtualinvoke $r4.<android.media.metrics.NetworkEvent$Builder: android.media.metrics.NetworkEvent$Builder setTimeSinceCreatedMillis(long)>($l4);

        $r6 = virtualinvoke $r5.<android.media.metrics.NetworkEvent$Builder: android.media.metrics.NetworkEvent build()>();

        virtualinvoke $r3.<android.media.metrics.PlaybackSession: void reportNetworkEvent(android.media.metrics.NetworkEvent)>($r6);

     label1:
        return;
    }

    private void maybeReportPlaybackStateChange(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$Events, long)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r2;
        long l0, $l4, $l5;
        int i1, $i2, $i3, $i6;
        androidx.media3.common.PlaybackException $r3;
        boolean $z0;
        android.media.metrics.PlaybackStateEvent$Builder $r4, $r6, $r7;
        android.media.metrics.PlaybackSession $r5;
        android.media.metrics.PlaybackStateEvent $r8;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        l0 := @parameter2: long;

        $i2 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i2 == 2 goto label1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean isSeeking> = 0;

     label1:
        $r3 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.PlaybackException getPlayerError()>();

        if $r3 != null goto label2;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean hasFatalError> = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(10);

        if $z0 == 0 goto label3;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean hasFatalError> = 1;

     label3:
        i1 = specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int resolveNewPlaybackState(androidx.media3.common.Player)>(r1);

        $i6 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        if $i6 == i1 goto label4;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState> = i1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession> = 1;

        $r5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r4 = new android.media.metrics.PlaybackStateEvent$Builder;

        specialinvoke $r4.<android.media.metrics.PlaybackStateEvent$Builder: void <init>()>();

        $i3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        $r6 = virtualinvoke $r4.<android.media.metrics.PlaybackStateEvent$Builder: android.media.metrics.PlaybackStateEvent$Builder setState(int)>($i3);

        $l4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs>;

        $l5 = l0 - $l4;

        $r7 = virtualinvoke $r6.<android.media.metrics.PlaybackStateEvent$Builder: android.media.metrics.PlaybackStateEvent$Builder setTimeSinceCreatedMillis(long)>($l5);

        $r8 = virtualinvoke $r7.<android.media.metrics.PlaybackStateEvent$Builder: android.media.metrics.PlaybackStateEvent build()>();

        virtualinvoke $r5.<android.media.metrics.PlaybackSession: void reportPlaybackStateEvent(android.media.metrics.PlaybackStateEvent)>($r8);

     label4:
        return;
    }

    private int resolveNewPlaybackState(androidx.media3.common.Player)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Player r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3;
        byte $b7, $b8;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        i0 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        $z0 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean isSeeking>;

        if $z0 == 0 goto label01;

        return 5;

     label01:
        $z1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean hasFatalError>;

        if $z1 == 0 goto label02;

        return 13;

     label02:
        if i0 != 4 goto label03;

        return 11;

     label03:
        if i0 != 2 goto label09;

        $i4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        if $i4 == 0 goto label04;

        $i5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        if $i5 != 2 goto label05;

     label04:
        return 2;

     label05:
        $z3 = interfaceinvoke r1.<androidx.media3.common.Player: boolean getPlayWhenReady()>();

        if $z3 != 0 goto label06;

        return 7;

     label06:
        $i6 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackSuppressionReason()>();

        if $i6 == 0 goto label07;

        $b7 = 10;

        goto label08;

     label07:
        $b7 = 6;

     label08:
        return $b7;

     label09:
        if i0 != 3 goto label13;

        $z2 = interfaceinvoke r1.<androidx.media3.common.Player: boolean getPlayWhenReady()>();

        if $z2 != 0 goto label10;

        return 4;

     label10:
        $i3 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackSuppressionReason()>();

        if $i3 == 0 goto label11;

        $b8 = 9;

        goto label12;

     label11:
        $b8 = 3;

     label12:
        return $b8;

     label13:
        if i0 != 1 goto label14;

        $i2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        if $i2 == 0 goto label14;

        return 12;

     label14:
        $i1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int currentPlaybackState>;

        return $i1;
    }

    private void maybeUpdateVideoFormat(long, androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        long l0;
        androidx.media3.common.Format r1, $r2, $r3;
        boolean $z0;
        int i1;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.common.Format;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentVideoFormat>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentVideoFormat>;

        if $r3 != null goto label2;

        if i1 != 0 goto label2;

        i1 = 1;

     label2:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentVideoFormat> = r1;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void reportTrackChangeEvent(int,long,androidx.media3.common.Format,int)>(1, l0, r1, i1);

        return;
    }

    private void maybeUpdateAudioFormat(long, androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        long l0;
        androidx.media3.common.Format r1, $r2, $r3;
        boolean $z0;
        int i1;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.common.Format;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentAudioFormat>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentAudioFormat>;

        if $r3 != null goto label2;

        if i1 != 0 goto label2;

        i1 = 1;

     label2:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentAudioFormat> = r1;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void reportTrackChangeEvent(int,long,androidx.media3.common.Format,int)>(0, l0, r1, i1);

        return;
    }

    private void maybeUpdateTextFormat(long, androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        long l0;
        androidx.media3.common.Format r1, $r2, $r3;
        boolean $z0;
        int i1;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.common.Format;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentTextFormat>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentTextFormat>;

        if $r3 != null goto label2;

        if i1 != 0 goto label2;

        i1 = 1;

     label2:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentTextFormat> = r1;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: void reportTrackChangeEvent(int,long,androidx.media3.common.Format,int)>(2, l0, r1, i1);

        return;
    }

    private void reportTrackChangeEvent(int, long, androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        int i0, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        long l1, $l3, $l4;
        androidx.media3.common.Format r1;
        android.media.metrics.TrackChangeEvent$Builder r2, $r4;
        android.util.Pair r3;
        java.lang.String $r8, $r9, $r10, $r11, $r13, $r15, $r19, $r26, $r28, $r30;
        float $f0, $f1;
        java.lang.Object $r14, $r17, $r18;
        byte $b16;
        android.media.metrics.PlaybackSession $r32;
        android.media.metrics.TrackChangeEvent $r33;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.media3.common.Format;

        i2 := @parameter3: int;

        $r4 = new android.media.metrics.TrackChangeEvent$Builder;

        specialinvoke $r4.<android.media.metrics.TrackChangeEvent$Builder: void <init>(int)>(i0);

        $l3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: long startTimeMs>;

        $l4 = l1 - $l3;

        r2 = virtualinvoke $r4.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setTimeSinceCreatedMillis(long)>($l4);

        if r1 == null goto label10;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setTrackState(int)>(1);

        $i5 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getTrackChangeReason(int)>(i2);

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setTrackChangeReason(int)>($i5);

        $r8 = r1.<androidx.media3.common.Format: java.lang.String containerMimeType>;

        if $r8 == null goto label01;

        $r30 = r1.<androidx.media3.common.Format: java.lang.String containerMimeType>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setContainerMimeType(java.lang.String)>($r30);

     label01:
        $r9 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        if $r9 == null goto label02;

        $r28 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setSampleMimeType(java.lang.String)>($r28);

     label02:
        $r10 = r1.<androidx.media3.common.Format: java.lang.String codecs>;

        if $r10 == null goto label03;

        $r26 = r1.<androidx.media3.common.Format: java.lang.String codecs>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setCodecName(java.lang.String)>($r26);

     label03:
        $i6 = r1.<androidx.media3.common.Format: int bitrate>;

        if $i6 == -1 goto label04;

        $i15 = r1.<androidx.media3.common.Format: int bitrate>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setBitrate(int)>($i15);

     label04:
        $i7 = r1.<androidx.media3.common.Format: int width>;

        if $i7 == -1 goto label05;

        $i14 = r1.<androidx.media3.common.Format: int width>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setWidth(int)>($i14);

     label05:
        $i8 = r1.<androidx.media3.common.Format: int height>;

        if $i8 == -1 goto label06;

        $i13 = r1.<androidx.media3.common.Format: int height>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setHeight(int)>($i13);

     label06:
        $i9 = r1.<androidx.media3.common.Format: int channelCount>;

        if $i9 == -1 goto label07;

        $i12 = r1.<androidx.media3.common.Format: int channelCount>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setChannelCount(int)>($i12);

     label07:
        $i10 = r1.<androidx.media3.common.Format: int sampleRate>;

        if $i10 == -1 goto label08;

        $i11 = r1.<androidx.media3.common.Format: int sampleRate>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setAudioSampleRate(int)>($i11);

     label08:
        $r11 = r1.<androidx.media3.common.Format: java.lang.String language>;

        if $r11 == null goto label09;

        $r13 = r1.<androidx.media3.common.Format: java.lang.String language>;

        r3 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: android.util.Pair getLanguageAndRegion(java.lang.String)>($r13);

        $r14 = r3.<android.util.Pair: java.lang.Object first>;

        $r15 = (java.lang.String) $r14;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setLanguage(java.lang.String)>($r15);

        $r17 = r3.<android.util.Pair: java.lang.Object second>;

        if $r17 == null goto label09;

        $r18 = r3.<android.util.Pair: java.lang.Object second>;

        $r19 = (java.lang.String) $r18;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setLanguageRegion(java.lang.String)>($r19);

     label09:
        $f1 = r1.<androidx.media3.common.Format: float frameRate>;

        $b16 = $f1 cmpl -1.0F;

        if $b16 == 0 goto label11;

        $f0 = r1.<androidx.media3.common.Format: float frameRate>;

        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setVideoFrameRate(float)>($f0);

        goto label11;

     label10:
        virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent$Builder setTrackState(int)>(0);

     label11:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession> = 1;

        $r32 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r33 = virtualinvoke r2.<android.media.metrics.TrackChangeEvent$Builder: android.media.metrics.TrackChangeEvent build()>();

        virtualinvoke $r32.<android.media.metrics.PlaybackSession: void reportTrackChangeEvent(android.media.metrics.TrackChangeEvent)>($r33);

        return;
    }

    private void maybeUpdateTimelineMetadata(androidx.media3.common.Timeline, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        androidx.media3.common.Timeline r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2;
        android.media.metrics.PlaybackMetrics$Builder r3;
        int i0, $i1, $i2;
        java.lang.Object $r4;
        androidx.media3.common.Timeline$Period $r5, $r7;
        androidx.media3.common.Timeline$Window $r8, $r10, $r13, $r16, $r17, $r18, $r19, $r21;
        androidx.media3.common.MediaItem $r11;
        long $l3, $l5;
        byte $b4, $b6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r2.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        i0 = virtualinvoke r1.<androidx.media3.common.Timeline: int getIndexOfPeriod(java.lang.Object)>($r4);

        if i0 != -1 goto label2;

        return;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Period period>;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period)>(i0, $r5);

        $r7 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Period period>;

        $i1 = $r7.<androidx.media3.common.Timeline$Period: int windowIndex>;

        $r8 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i1, $r8);

        $r10 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $r11 = $r10.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        $i2 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getStreamType(androidx.media3.common.MediaItem)>($r11);

        virtualinvoke r3.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setStreamType(int)>($i2);

        $r13 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $l3 = $r13.<androidx.media3.common.Timeline$Window: long durationUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label3;

        $r16 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $z0 = $r16.<androidx.media3.common.Timeline$Window: boolean isPlaceholder>;

        if $z0 != 0 goto label3;

        $r17 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $z1 = $r17.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        if $z1 != 0 goto label3;

        $r18 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $z2 = virtualinvoke $r18.<androidx.media3.common.Timeline$Window: boolean isLive()>();

        if $z2 != 0 goto label3;

        $r19 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $l5 = virtualinvoke $r19.<androidx.media3.common.Timeline$Window: long getDurationMs()>();

        virtualinvoke r3.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setMediaDurationMillis(long)>($l5);

     label3:
        $r21 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Timeline$Window window>;

        $z3 = virtualinvoke $r21.<androidx.media3.common.Timeline$Window: boolean isLive()>();

        if $z3 == 0 goto label4;

        $b6 = 2;

        goto label5;

     label4:
        $b6 = 1;

     label5:
        virtualinvoke r3.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setPlaybackType(int)>($b6);

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession> = 1;

        return;
    }

    private void finishCurrentSession()
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener r0;
        java.lang.Long r1, r2;
        android.media.metrics.PlaybackMetrics$Builder $r3, $r4, $r6, $r8, $r13, $r18, $r21, $r23;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r15;
        java.util.HashMap $r11, $r16;
        java.lang.Object $r12, $r17;
        long $l3, $l5, $l6;
        byte $b4, $b7;
        android.media.metrics.PlaybackSession $r22;
        android.media.metrics.PlaybackMetrics $r24;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener;

        $r3 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if $r3 == null goto label7;

        $z0 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession>;

        if $z0 == 0 goto label7;

        $r4 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        $i0 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int audioUnderruns>;

        virtualinvoke $r4.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setAudioUnderrunCount(int)>($i0);

        $r6 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        $i1 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int droppedFrames>;

        virtualinvoke $r6.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setVideoFramesDropped(int)>($i1);

        $r8 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        $i2 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int playedFrames>;

        virtualinvoke $r8.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setVideoFramesPlayed(int)>($i2);

        $r11 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthTimeMs>;

        $r10 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        r1 = (java.lang.Long) $r12;

        $r13 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if r1 != null goto label1;

        $l5 = 0L;

        goto label2;

     label1:
        $l5 = virtualinvoke r1.<java.lang.Long: long longValue()>();

     label2:
        virtualinvoke $r13.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setNetworkTransferDurationMillis(long)>($l5);

        $r16 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.util.HashMap bandwidthBytes>;

        $r15 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r2 = (java.lang.Long) $r17;

        $r18 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if r2 != null goto label3;

        $l6 = 0L;

        goto label4;

     label3:
        $l6 = virtualinvoke r2.<java.lang.Long: long longValue()>();

     label4:
        virtualinvoke $r18.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setNetworkBytesRead(long)>($l6);

        $r21 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        if r2 == null goto label5;

        $l3 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label5;

        $b7 = 1;

        goto label6;

     label5:
        $b7 = 0;

     label6:
        virtualinvoke $r21.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics$Builder setStreamSource(int)>($b7);

        $r22 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackSession playbackSession>;

        $r23 = r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder>;

        $r24 = virtualinvoke $r23.<android.media.metrics.PlaybackMetrics$Builder: android.media.metrics.PlaybackMetrics build()>();

        virtualinvoke $r22.<android.media.metrics.PlaybackSession: void reportPlaybackMetrics(android.media.metrics.PlaybackMetrics)>($r24);

     label7:
        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: android.media.metrics.PlaybackMetrics$Builder metricsBuilder> = null;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: java.lang.String activeSessionId> = null;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int audioUnderruns> = 0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int droppedFrames> = 0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: int playedFrames> = 0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentVideoFormat> = null;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentAudioFormat> = null;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: androidx.media3.common.Format currentTextFormat> = null;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener: boolean reportedEventsForCurrentSession> = 0;

        return;
    }

    private static int getTrackChangeReason(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            default: goto label4;
        };

     label1:
        return 2;

     label2:
        return 4;

     label3:
        return 3;

     label4:
        return 1;
    }

    private static android.util.Pair getLanguageAndRegion(java.lang.String)
    {
        java.lang.String r0, $r2, $r4;
        java.lang.String[] r1;
        int $i0;
        android.util.Pair $r3;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "-");

        $r2 = r1[0];

        $i0 = lengthof r1;

        if $i0 < 2 goto label1;

        $r4 = r1[1];

        goto label2;

     label1:
        $r4 = null;

     label2:
        $r3 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r3;
    }

    private static int getNetworkType(android.content.Context)
    {
        android.content.Context r0;
        androidx.media3.common.util.NetworkTypeObserver $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.media3.common.util.NetworkTypeObserver: androidx.media3.common.util.NetworkTypeObserver getInstance(android.content.Context)>(r0);

        $i0 = virtualinvoke $r1.<androidx.media3.common.util.NetworkTypeObserver: int getNetworkType()>();

        tableswitch($i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label10;
            case 7: goto label07;
            case 8: goto label10;
            case 9: goto label05;
            case 10: goto label06;
            default: goto label10;
        };

     label01:
        return 2;

     label02:
        return 4;

     label03:
        return 5;

     label04:
        return 6;

     label05:
        return 8;

     label06:
        return 7;

     label07:
        return 3;

     label08:
        return 9;

     label09:
        return 0;

     label10:
        return 1;
    }

    private static int getStreamType(androidx.media3.common.MediaItem)
    {
        androidx.media3.common.MediaItem r0;
        int i0;
        androidx.media3.common.MediaItem$LocalConfiguration $r1, $r2, $r3;
        java.lang.String $r4;
        android.net.Uri $r5;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        $r1 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r5 = $r2.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r3 = r0.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r4 = $r3.<androidx.media3.common.MediaItem$LocalConfiguration: java.lang.String mimeType>;

        i0 = staticinvoke <androidx.media3.common.util.Util: int inferContentTypeForUriAndMimeType(android.net.Uri,java.lang.String)>($r5, $r4);

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label5;
        };

     label2:
        return 4;

     label3:
        return 3;

     label4:
        return 5;

     label5:
        return 1;
    }

    private static androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo getErrorInfo(androidx.media3.common.PlaybackException, android.content.Context, boolean)
    {
        androidx.media3.common.PlaybackException r0;
        android.content.Context r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, z26, $z27, $z28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i17, i18, i19, i20, i21, i22, i23;
        androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo $r2, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r44, $r45, $r54;
        android.media.MediaCodec$CryptoException $r3;
        androidx.media3.exoplayer.audio.AudioSink$WriteException $r5;
        androidx.media3.exoplayer.audio.AudioSink$InitializationException $r7;
        androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException $r10;
        androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException $r12;
        androidx.media3.common.util.NetworkTypeObserver $r18;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r20;
        java.lang.Throwable $r26, $r27, $r29, $r32, $r47, r49, r50, r51, r53;
        java.lang.Object $r28, $r33, $r48;
        android.system.ErrnoException $r30;
        android.media.MediaDrm$MediaDrmStateException $r40;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException $r43;
        androidx.media3.exoplayer.ExoPlaybackException r46;
        byte $b16;
        java.lang.String r52, r55, r56;

        r0 := @parameter0: androidx.media3.common.PlaybackException;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        $i1 = r0.<androidx.media3.common.PlaybackException: int errorCode>;

        if $i1 != 1001 goto label01;

        $r45 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r45.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(20, 0);

        return $r45;

     label01:
        z26 = 0;

        i14 = 0;

        $z1 = r0 instanceof androidx.media3.exoplayer.ExoPlaybackException;

        if $z1 == 0 goto label04;

        r46 = (androidx.media3.exoplayer.ExoPlaybackException) r0;

        $i13 = r46.<androidx.media3.exoplayer.ExoPlaybackException: int type>;

        if $i13 != 1 goto label02;

        $z27 = 1;

        goto label03;

     label02:
        $z27 = 0;

     label03:
        z26 = $z27;

        i14 = r46.<androidx.media3.exoplayer.ExoPlaybackException: int rendererFormatSupport>;

     label04:
        $r47 = virtualinvoke r0.<androidx.media3.common.PlaybackException: java.lang.Throwable getCause()>();

        $r48 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r47);

        r49 = (java.lang.Throwable) $r48;

        $z28 = r49 instanceof java.io.IOException;

        if $z28 == 0 goto label26;

        $z8 = r49 instanceof androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        if $z8 == 0 goto label05;

        $r43 = (androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException) r49;

        i15 = $r43.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>;

        $r44 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r44.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(5, i15);

        return $r44;

     label05:
        $z9 = r49 instanceof androidx.media3.datasource.HttpDataSource$InvalidContentTypeException;

        if $z9 != 0 goto label06;

        $z10 = r49 instanceof androidx.media3.common.ParserException;

        if $z10 == 0 goto label09;

     label06:
        $r17 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        if z0 == 0 goto label07;

        $b16 = 10;

        goto label08;

     label07:
        $b16 = 11;

     label08:
        specialinvoke $r17.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>($b16, 0);

        return $r17;

     label09:
        $z11 = r49 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z11 != 0 goto label10;

        $z15 = r49 instanceof androidx.media3.datasource.UdpDataSource$UdpDataSourceException;

        if $z15 == 0 goto label15;

     label10:
        $r18 = staticinvoke <androidx.media3.common.util.NetworkTypeObserver: androidx.media3.common.util.NetworkTypeObserver getInstance(android.content.Context)>(r1);

        $i3 = virtualinvoke $r18.<androidx.media3.common.util.NetworkTypeObserver: int getNetworkType()>();

        if $i3 != 1 goto label11;

        $r24 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r24.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(3, 0);

        return $r24;

     label11:
        r50 = virtualinvoke r49.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $z12 = r50 instanceof java.net.UnknownHostException;

        if $z12 == 0 goto label12;

        $r23 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r23.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(6, 0);

        return $r23;

     label12:
        $z13 = r50 instanceof java.net.SocketTimeoutException;

        if $z13 == 0 goto label13;

        $r22 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r22.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(7, 0);

        return $r22;

     label13:
        $z14 = r49 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z14 == 0 goto label14;

        $r20 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) r49;

        $i4 = $r20.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type>;

        if $i4 != 1 goto label14;

        $r21 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r21.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(4, 0);

        return $r21;

     label14:
        $r19 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r19.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(8, 0);

        return $r19;

     label15:
        $i5 = r0.<androidx.media3.common.PlaybackException: int errorCode>;

        if $i5 != 1002 goto label16;

        $r42 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r42.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(21, 0);

        return $r42;

     label16:
        $z16 = r49 instanceof androidx.media3.exoplayer.drm.DrmSession$DrmSessionException;

        if $z16 == 0 goto label23;

        $r32 = virtualinvoke r49.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r33 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r32);

        r51 = (java.lang.Throwable) $r33;

        $i9 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i9 < 21 goto label17;

        $z25 = r51 instanceof android.media.MediaDrm$MediaDrmStateException;

        if $z25 == 0 goto label17;

        $r40 = (android.media.MediaDrm$MediaDrmStateException) r51;

        r52 = virtualinvoke $r40.<android.media.MediaDrm$MediaDrmStateException: java.lang.String getDiagnosticInfo()>();

        i17 = staticinvoke <androidx.media3.common.util.Util: int getErrorCodeFromPlatformDiagnosticsInfo(java.lang.String)>(r52);

        i0 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getDrmErrorCode(int)>(i17);

        $r41 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r41.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(i0, i17);

        return $r41;

     label17:
        $i10 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i10 < 23 goto label18;

        $z24 = r51 instanceof android.media.MediaDrmResetException;

        if $z24 == 0 goto label18;

        $r39 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r39.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(27, 0);

        return $r39;

     label18:
        $i11 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i11 < 18 goto label19;

        $z23 = r51 instanceof android.media.NotProvisionedException;

        if $z23 == 0 goto label19;

        $r38 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r38.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(24, 0);

        return $r38;

     label19:
        $i12 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i12 < 18 goto label20;

        $z22 = r51 instanceof android.media.DeniedByServerException;

        if $z22 == 0 goto label20;

        $r37 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r37.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(29, 0);

        return $r37;

     label20:
        $z20 = r51 instanceof androidx.media3.exoplayer.drm.UnsupportedDrmException;

        if $z20 == 0 goto label21;

        $r36 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r36.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(23, 0);

        return $r36;

     label21:
        $z21 = r51 instanceof androidx.media3.exoplayer.drm.DefaultDrmSessionManager$MissingSchemeDataException;

        if $z21 == 0 goto label22;

        $r35 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r35.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(28, 0);

        return $r35;

     label22:
        $r34 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r34.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(30, 0);

        return $r34;

     label23:
        $z17 = r49 instanceof androidx.media3.datasource.FileDataSource$FileDataSourceException;

        if $z17 == 0 goto label25;

        $r26 = virtualinvoke r49.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $z18 = $r26 instanceof java.io.FileNotFoundException;

        if $z18 == 0 goto label25;

        $r27 = virtualinvoke r49.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r28 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r27);

        $r29 = (java.lang.Throwable) $r28;

        r53 = virtualinvoke $r29.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $i6 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i6 < 21 goto label24;

        $z19 = r53 instanceof android.system.ErrnoException;

        if $z19 == 0 goto label24;

        $r30 = (android.system.ErrnoException) r53;

        $i8 = $r30.<android.system.ErrnoException: int errno>;

        $i7 = <android.system.OsConstants: int EACCES>;

        if $i8 != $i7 goto label24;

        $r31 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r31.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(32, 0);

        return $r31;

     label24:
        $r54 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r54.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(31, 0);

        return $r54;

     label25:
        $r25 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r25.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(9, 0);

        return $r25;

     label26:
        if z26 == 0 goto label28;

        if i14 == 0 goto label27;

        if i14 != 1 goto label28;

     label27:
        $r16 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r16.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(35, 0);

        return $r16;

     label28:
        if z26 == 0 goto label29;

        if i14 != 3 goto label29;

        $r15 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r15.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(15, 0);

        return $r15;

     label29:
        if z26 == 0 goto label30;

        if i14 != 2 goto label30;

        $r14 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r14.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(23, 0);

        return $r14;

     label30:
        $z2 = r49 instanceof androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException;

        if $z2 == 0 goto label31;

        $r12 = (androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException) r49;

        r55 = $r12.<androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException: java.lang.String diagnosticInfo>;

        i18 = staticinvoke <androidx.media3.common.util.Util: int getErrorCodeFromPlatformDiagnosticsInfo(java.lang.String)>(r55);

        $r13 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r13.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(13, i18);

        return $r13;

     label31:
        $z3 = r49 instanceof androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException;

        if $z3 == 0 goto label32;

        $r10 = (androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException) r49;

        r56 = $r10.<androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException: java.lang.String diagnosticInfo>;

        i19 = staticinvoke <androidx.media3.common.util.Util: int getErrorCodeFromPlatformDiagnosticsInfo(java.lang.String)>(r56);

        $r11 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r11.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(14, i19);

        return $r11;

     label32:
        $z4 = r49 instanceof java.lang.OutOfMemoryError;

        if $z4 == 0 goto label33;

        $r9 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r9.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(14, 0);

        return $r9;

     label33:
        $z5 = r49 instanceof androidx.media3.exoplayer.audio.AudioSink$InitializationException;

        if $z5 == 0 goto label34;

        $r7 = (androidx.media3.exoplayer.audio.AudioSink$InitializationException) r49;

        i20 = $r7.<androidx.media3.exoplayer.audio.AudioSink$InitializationException: int audioTrackState>;

        $r8 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r8.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(17, i20);

        return $r8;

     label34:
        $z6 = r49 instanceof androidx.media3.exoplayer.audio.AudioSink$WriteException;

        if $z6 == 0 goto label35;

        $r5 = (androidx.media3.exoplayer.audio.AudioSink$WriteException) r49;

        i21 = $r5.<androidx.media3.exoplayer.audio.AudioSink$WriteException: int errorCode>;

        $r6 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r6.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(18, i21);

        return $r6;

     label35:
        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 16 goto label36;

        $z7 = r49 instanceof android.media.MediaCodec$CryptoException;

        if $z7 == 0 goto label36;

        $r3 = (android.media.MediaCodec$CryptoException) r49;

        i22 = virtualinvoke $r3.<android.media.MediaCodec$CryptoException: int getErrorCode()>();

        i23 = staticinvoke <androidx.media3.exoplayer.analytics.MediaMetricsListener: int getDrmErrorCode(int)>(i22);

        $r4 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r4.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(i23, i22);

        return $r4;

     label36:
        $r2 = new androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        specialinvoke $r2.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: void <init>(int,int)>(22, 0);

        return $r2;
    }

    private static androidx.media3.common.DrmInitData getDrmInitData(com.google.common.collect.ImmutableList)
    {
        com.google.common.collect.ImmutableList r0;
        com.google.common.collect.UnmodifiableIterator r1;
        androidx.media3.common.Tracks$Group r2;
        androidx.media3.common.DrmInitData r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        int $i0, i1;
        androidx.media3.common.Format $r5;

        r0 := @parameter0: com.google.common.collect.ImmutableList;

        r1 = virtualinvoke r0.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.common.Tracks$Group) $r4;

        i1 = 0;

     label2:
        $i0 = r2.<androidx.media3.common.Tracks$Group: int length>;

        if i1 >= $i0 goto label4;

        $z1 = virtualinvoke r2.<androidx.media3.common.Tracks$Group: boolean isTrackSelected(int)>(i1);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r2.<androidx.media3.common.Tracks$Group: androidx.media3.common.Format getTrackFormat(int)>(i1);

        r3 = $r5.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

        if r3 == null goto label3;

        return r3;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return null;
    }

    private static int getDrmType(androidx.media3.common.DrmInitData)
    {
        androidx.media3.common.DrmInitData r0;
        java.util.UUID r1, $r3, $r4, $r5;
        int $i0, i1;
        androidx.media3.common.DrmInitData$SchemeData $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: androidx.media3.common.DrmInitData;

        i1 = 0;

     label1:
        $i0 = r0.<androidx.media3.common.DrmInitData: int schemeDataCount>;

        if i1 >= $i0 goto label5;

        $r2 = virtualinvoke r0.<androidx.media3.common.DrmInitData: androidx.media3.common.DrmInitData$SchemeData get(int)>(i1);

        r1 = $r2.<androidx.media3.common.DrmInitData$SchemeData: java.util.UUID uuid>;

        $r3 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $z0 = virtualinvoke r1.<java.util.UUID: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return 3;

     label2:
        $r4 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z1 = virtualinvoke r1.<java.util.UUID: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        return 2;

     label3:
        $r5 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $z2 = virtualinvoke r1.<java.util.UUID: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label4;

        return 6;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return 1;
    }

    private static int getDrmErrorCode(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.media3.common.util.Util: int getErrorCodeForMediaDrmErrorCode(int)>(i0);

        tableswitch($i1)
        {
            case 6002: goto label1;
            case 6003: goto label4;
            case 6004: goto label2;
            case 6005: goto label3;
            case 6006: goto label5;
            default: goto label5;
        };

     label1:
        return 24;

     label2:
        return 25;

     label3:
        return 26;

     label4:
        return 28;

     label5:
        return 27;
    }

androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo
<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int errorCode>
<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int subErrorCode>
    public void <init>(int, int)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo r0;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int errorCode> = i0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo: int subErrorCode> = i1;

        return;
    }

androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate
<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format>
<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason>
<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: java.lang.String sessionId>
    public void <init>(androidx.media3.common.Format, int, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate r0;
        androidx.media3.common.Format r1;
        int i0;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate;

        r1 := @parameter0: androidx.media3.common.Format;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: androidx.media3.common.Format format> = r1;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: int selectionReason> = i0;

        r0.<androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate: java.lang.String sessionId> = r2;

        return;
    }

