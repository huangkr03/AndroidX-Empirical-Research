androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner
<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>
    public void <init>(java.lang.Class) throws org.junit.runners.model.InitializationError
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        java.lang.Class $r1;
        androidx.test.internal.util.AndroidRunnerParams $r2;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: androidx.test.internal.util.AndroidRunnerParams createRunnerParams()>();

        specialinvoke $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: void <init>(java.lang.Class,androidx.test.internal.util.AndroidRunnerParams)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.Class, androidx.test.internal.util.AndroidRunnerParams) throws org.junit.runners.model.InitializationError
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        java.lang.Class $r1;
        androidx.test.internal.util.AndroidRunnerParams $r2;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: androidx.test.internal.util.AndroidRunnerParams;

        specialinvoke $r0.<org.junit.runners.BlockJUnit4ClassRunner: void <init>(java.lang.Class)>($r1);

        $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams> = $r2;

        return;
    }

    private static androidx.test.internal.util.AndroidRunnerParams createRunnerParams()
    {
        long $l0;
        androidx.test.internal.util.AndroidRunnerParams $r0;
        androidx.test.internal.runner.RunnerArgs$Builder $r1;
        android.app.Instrumentation $r2;
        android.os.Bundle $r3;
        androidx.test.internal.runner.RunnerArgs $r4;

        $r1 = new androidx.test.internal.runner.RunnerArgs$Builder;

        specialinvoke $r1.<androidx.test.internal.runner.RunnerArgs$Builder: void <init>()>();

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r3 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.os.Bundle getArguments()>();

        $r1 = virtualinvoke $r1.<androidx.test.internal.runner.RunnerArgs$Builder: androidx.test.internal.runner.RunnerArgs$Builder fromBundle(android.app.Instrumentation,android.os.Bundle)>($r2, $r3);

        $r4 = virtualinvoke $r1.<androidx.test.internal.runner.RunnerArgs$Builder: androidx.test.internal.runner.RunnerArgs build()>();

        $r0 = new androidx.test.internal.util.AndroidRunnerParams;

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r3 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.os.Bundle getArguments()>();

        $l0 = $r4.<androidx.test.internal.runner.RunnerArgs: long testTimeout>;

        specialinvoke $r0.<androidx.test.internal.util.AndroidRunnerParams: void <init>(android.app.Instrumentation,android.os.Bundle,long,boolean)>($r2, $r3, $l0, 0);

        return $r0;
    }

    private long getTimeout(org.junit.Test)
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        org.junit.Test $r1;
        long $l0;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: org.junit.Test;

        if $r1 != null goto label1;

        return 0L;

     label1:
        $l0 = interfaceinvoke $r1.<org.junit.Test: long timeout()>();

        return $l0;
    }

    protected org.junit.runners.model.Statement methodInvoker(org.junit.runners.model.FrameworkMethod, java.lang.Object)
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;
        boolean $z0;
        androidx.test.internal.runner.junit4.statement.UiThreadStatement $r3;
        org.junit.runners.model.Statement $r4;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <androidx.test.internal.runner.junit4.statement.UiThreadStatement: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r1);

        if $z0 == 0 goto label1;

        $r3 = new androidx.test.internal.runner.junit4.statement.UiThreadStatement;

        $r4 = specialinvoke $r0.<org.junit.runners.BlockJUnit4ClassRunner: org.junit.runners.model.Statement methodInvoker(org.junit.runners.model.FrameworkMethod,java.lang.Object)>($r1, $r2);

        specialinvoke $r3.<androidx.test.internal.runner.junit4.statement.UiThreadStatement: void <init>(org.junit.runners.model.Statement,boolean)>($r4, 1);

        return $r3;

     label1:
        $r4 = specialinvoke $r0.<org.junit.runners.BlockJUnit4ClassRunner: org.junit.runners.model.Statement methodInvoker(org.junit.runners.model.FrameworkMethod,java.lang.Object)>($r1, $r2);

        return $r4;
    }

    protected org.junit.runners.model.Statement withAfters(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;
        org.junit.runners.model.Statement $r3;
        org.junit.runners.model.TestClass $r4;
        java.util.List $r5;
        boolean $z0;
        androidx.test.internal.runner.junit4.statement.RunAfters $r6;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.junit.runners.model.Statement;

        $r4 = virtualinvoke $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: org.junit.runners.model.TestClass getTestClass()>();

        $r5 = virtualinvoke $r4.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods(java.lang.Class)>(class "Lorg/junit/After;");

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $r6 = new androidx.test.internal.runner.junit4.statement.RunAfters;

        specialinvoke $r6.<androidx.test.internal.runner.junit4.statement.RunAfters: void <init>(org.junit.runners.model.FrameworkMethod,org.junit.runners.model.Statement,java.util.List,java.lang.Object)>($r1, $r3, $r5, $r2);

        return $r6;
    }

    protected org.junit.runners.model.Statement withBefores(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;
        org.junit.runners.model.Statement $r3;
        org.junit.runners.model.TestClass $r4;
        java.util.List $r5;
        boolean $z0;
        androidx.test.internal.runner.junit4.statement.RunBefores $r6;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.junit.runners.model.Statement;

        $r4 = virtualinvoke $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: org.junit.runners.model.TestClass getTestClass()>();

        $r5 = virtualinvoke $r4.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods(java.lang.Class)>(class "Lorg/junit/Before;");

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $r6 = new androidx.test.internal.runner.junit4.statement.RunBefores;

        specialinvoke $r6.<androidx.test.internal.runner.junit4.statement.RunBefores: void <init>(org.junit.runners.model.FrameworkMethod,org.junit.runners.model.Statement,java.util.List,java.lang.Object)>($r1, $r3, $r5, $r2);

        return $r6;
    }

    protected org.junit.runners.model.Statement withPotentialTimeout(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)
    {
        androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner $r0;
        org.junit.runners.model.Statement $r1;
        byte $b0;
        org.junit.runners.model.FrameworkMethod $r2;
        java.lang.Object $r3;
        java.lang.'annotation'.Annotation $r4;
        org.junit.Test $r5;
        long $l1, $l2;
        androidx.test.internal.util.AndroidRunnerParams $r6;
        org.junit.internal.runners.statements.FailOnTimeout $r7;

        $r0 := @this: androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner;

        $r2 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: org.junit.runners.model.Statement;

        $r4 = virtualinvoke $r2.<org.junit.runners.model.FrameworkMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/Test;");

        $r5 = (org.junit.Test) $r4;

        $l1 = specialinvoke $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: long getTimeout(org.junit.Test)>($r5);

        $l2 = $l1;

        $b0 = $l1 cmp 0L;

        if $b0 > 0 goto label1;

        $r6 = $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>;

        $l1 = virtualinvoke $r6.<androidx.test.internal.util.AndroidRunnerParams: long getPerTestTimeout()>();

        $b0 = $l1 cmp 0L;

        if $b0 <= 0 goto label1;

        $r6 = $r0.<androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner: androidx.test.internal.util.AndroidRunnerParams androidRunnerParams>;

        $l2 = virtualinvoke $r6.<androidx.test.internal.util.AndroidRunnerParams: long getPerTestTimeout()>();

        goto label1;

     label1:
        $b0 = $l2 cmp 0L;

        if $b0 > 0 goto label2;

        return $r1;

     label2:
        $r7 = new org.junit.internal.runners.statements.FailOnTimeout;

        specialinvoke $r7.<org.junit.internal.runners.statements.FailOnTimeout: void <init>(org.junit.runners.model.Statement,long)>($r1, $l2);

        return $r7;
    }

