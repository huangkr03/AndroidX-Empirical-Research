androidx.lifecycle.SavedStateHandleController
<androidx.lifecycle.SavedStateHandleController: java.lang.String key>
<androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle handle>
<androidx.lifecycle.SavedStateHandleController: boolean isAttached>
    public void <init>(java.lang.String, androidx.lifecycle.SavedStateHandle)
    {
        androidx.lifecycle.SavedStateHandleController r0;
        java.lang.String r1;
        androidx.lifecycle.SavedStateHandle r2;

        r0 := @this: androidx.lifecycle.SavedStateHandleController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.lifecycle.SavedStateHandle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "handle");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.SavedStateHandleController: java.lang.String key> = r1;

        r0.<androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle handle> = r2;

        return;
    }

    public final androidx.lifecycle.SavedStateHandle getHandle()
    {
        androidx.lifecycle.SavedStateHandleController r0;
        androidx.lifecycle.SavedStateHandle $r1;

        r0 := @this: androidx.lifecycle.SavedStateHandleController;

        $r1 = r0.<androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle handle>;

        return $r1;
    }

    public final boolean isAttached()
    {
        androidx.lifecycle.SavedStateHandleController r0;
        boolean $z0;

        r0 := @this: androidx.lifecycle.SavedStateHandleController;

        $z0 = r0.<androidx.lifecycle.SavedStateHandleController: boolean isAttached>;

        return $z0;
    }

    public final void attachToLifecycle(androidx.savedstate.SavedStateRegistry, androidx.lifecycle.Lifecycle)
    {
        androidx.lifecycle.SavedStateHandleController r0;
        androidx.savedstate.SavedStateRegistry r1;
        androidx.lifecycle.Lifecycle r2;
        boolean $z0, $z1;
        androidx.lifecycle.LifecycleObserver $r3;
        androidx.lifecycle.SavedStateHandle $r4;
        java.lang.String $r5, $r8, $r9;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.lifecycle.SavedStateHandleController;

        r1 := @parameter0: androidx.savedstate.SavedStateRegistry;

        r2 := @parameter1: androidx.lifecycle.Lifecycle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "registry");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lifecycle");

        $z0 = r0.<androidx.lifecycle.SavedStateHandleController: boolean isAttached>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r9 = "Already attached to lifecycleOwner";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        r0.<androidx.lifecycle.SavedStateHandleController: boolean isAttached> = 1;

        $r3 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r3);

        $r5 = r0.<androidx.lifecycle.SavedStateHandleController: java.lang.String key>;

        $r4 = r0.<androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle handle>;

        $r6 = virtualinvoke $r4.<androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider()>();

        virtualinvoke r1.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>($r5, $r6);

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.SavedStateHandleController r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;
        androidx.lifecycle.Lifecycle $r4;
        androidx.lifecycle.LifecycleObserver $r5;

        r0 := @this: androidx.lifecycle.SavedStateHandleController;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r2 != $r3 goto label1;

        r0.<androidx.lifecycle.SavedStateHandleController: boolean isAttached> = 0;

        $r4 = interfaceinvoke r1.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r5 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r4.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r5);

     label1:
        return;
    }

