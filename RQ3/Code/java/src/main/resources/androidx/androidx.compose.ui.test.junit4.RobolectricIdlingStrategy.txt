androidx.compose.ui.test.junit4.RobolectricIdlingStrategy
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: boolean canSynchronizeOnUiThread>
    public void <init>(androidx.compose.ui.test.junit4.ComposeRootRegistry, androidx.compose.ui.test.junit4.ComposeIdlingResource)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry r1;
        androidx.compose.ui.test.junit4.ComposeIdlingResource r2;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        r1 := @parameter0: androidx.compose.ui.test.junit4.ComposeRootRegistry;

        r2 := @parameter1: androidx.compose.ui.test.junit4.ComposeIdlingResource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composeRootRegistry");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composeIdlingResource");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry> = r1;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource> = r2;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: boolean canSynchronizeOnUiThread> = 1;

        return;
    }

    public boolean getCanSynchronizeOnUiThread()
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $z0 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: boolean canSynchronizeOnUiThread>;

        return $z0;
    }

    public void runUntilIdle()
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy r0;
        androidx.test.espresso.IdlingPolicy r1;
        long l0, $l1;
        java.util.concurrent.TimeUnit $r2;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1 $r3;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        r1 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getMasterIdlingPolicy()>();

        $r2 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l1 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1);

        $r3 = new androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1;

        specialinvoke $r3.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: void <init>(long,androidx.test.espresso.IdlingPolicy,androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)>(l0, r1, r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        staticinvoke <androidx.compose.ui.test.junit4.AndroidSynchronization_androidKt: java.lang.Object runOnUiThread(kotlin.jvm.functions.Function0)>($r4);

        return;
    }

    public java.lang.Object awaitIdle(kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy r0;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2, $r3;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 $r4;
        kotlin.coroutines.CoroutineContext $r5;
        kotlin.jvm.functions.Function2 $r6;
        java.lang.Object $r7, $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r5 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        specialinvoke $r4.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: void <init>(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy,kotlin.coroutines.Continuation)>(r0, null);

        $r6 = (kotlin.jvm.functions.Function2) $r4;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r5, $r6, $r1);

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r7 != $r8 goto label1;

        return $r7;

     label1:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;
    }

    private final boolean requestLayoutIfNeeded()
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy r0;
        java.util.Set r1;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2, $z6, $z11;
        java.util.Collection $r5, r8;
        android.view.View $r6;
        java.lang.Iterable $r7, $r12, r13;
        java.util.Iterator r9, r14;
        java.lang.Object r10, r15;
        androidx.compose.ui.platform.ViewRootForTest r11, r16;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $r2 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        r1 = virtualinvoke $r2.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.util.Set getRegisteredComposeRoots()>();

        $r7 = (java.lang.Iterable) r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r8 = (java.util.Collection) $r3;

        r9 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label2;

        r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (androidx.compose.ui.platform.ViewRootForTest) r10;

        $z2 = staticinvoke <androidx.compose.ui.test.junit4.ComposeIdlingResource_androidKt: boolean getShouldWaitForMeasureAndLayout(androidx.compose.ui.platform.ViewRootForTest)>(r11);

        if $z2 == 0 goto label1;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label1;

     label2:
        $r4 = (java.util.List) r8;

        $r12 = (java.lang.Iterable) $r4;

        r13 = $r12;

        r14 = interfaceinvoke r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.compose.ui.platform.ViewRootForTest) r15;

        $r6 = interfaceinvoke r16.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        virtualinvoke $r6.<android.view.View: void requestLayout()>();

        goto label3;

     label4:
        $r5 = (java.util.Collection) $r12;

        $z1 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $z11 = 1;

        goto label6;

     label5:
        $z11 = 0;

     label6:
        return $z11;
    }

    public static final boolean access$requestLayoutIfNeeded(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $z0 = specialinvoke $r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: boolean requestLayoutIfNeeded()>();

        return $z0;
    }

    public static final androidx.compose.ui.test.junit4.ComposeIdlingResource access$getComposeIdlingResource$p(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r0;
        androidx.compose.ui.test.junit4.ComposeIdlingResource $r1;

        $r0 := @parameter0: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $r1 = $r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>;

        return $r1;
    }

androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: int label>
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>
    void <init>(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 r0;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        $r1 := @parameter0: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r3;
        kotlin.Unit $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>;

        virtualinvoke $r3.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: void runUntilIdle()>();

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r4;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        $r4 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>;

        specialinvoke $r3.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: void <init>(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$awaitIdle$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: long $timeoutMillis>
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.test.espresso.IdlingPolicy $policy>
<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>
    void <init>(long, androidx.test.espresso.IdlingPolicy, androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1 r0;
        long $l0;
        androidx.test.espresso.IdlingPolicy $r1;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r2;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1;

        $l0 := @parameter0: long;

        $r1 := @parameter1: androidx.test.espresso.IdlingPolicy;

        $r2 := @parameter2: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: long $timeoutMillis> = $l0;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.test.espresso.IdlingPolicy $policy> = $r1;

        r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1 r0;
        long l0, $l1, $l2, $l3, $l5;
        boolean z0;
        byte $b4;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r1, $r2;
        androidx.compose.ui.test.junit4.ComposeIdlingResource $r3;
        java.util.List $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r14, $r15;
        androidx.test.espresso.IdlingPolicy $r9, $r12;
        java.util.concurrent.TimeUnit $r13;
        java.lang.String $r16;
        androidx.test.espresso.AppNotIdleException $r17;
        java.lang.Throwable $r18;
        int i6;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i6 = 0;

     label1:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l1 - l0;

        $l2 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: long $timeoutMillis>;

        $b4 = $l3 cmp $l2;

        if $b4 < 0 goto label2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compose did not get idle after ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempts in ");

        $r9 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.test.espresso.IdlingPolicy $policy>;

        $l5 = virtualinvoke $r9.<androidx.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r12 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.test.espresso.IdlingPolicy $policy>;

        $r13 = virtualinvoke $r12.<androidx.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please check your measure/layout lambdas, they may be causing an infinite composition loop. Or set Espresso\'s master idling policy if you require a longer timeout.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <androidx.test.espresso.AppNotIdleException: androidx.test.espresso.AppNotIdleException create(java.util.List,java.lang.String)>($r4, $r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "create(\n                \u2026t.\"\n                    )");

        $r18 = (java.lang.Throwable) $r17;

        throw $r18;

     label2:
        i6 = i6 + 1;

        staticinvoke <androidx.compose.ui.test.junit4.EspressoLink_androidKt: void runEspressoOnIdle()>();

        $r1 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>;

        staticinvoke <androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: boolean access$requestLayoutIfNeeded(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)>($r1);

        $r2 = r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy this$0>;

        $r3 = staticinvoke <androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: androidx.compose.ui.test.junit4.ComposeIdlingResource access$getComposeIdlingResource$p(androidx.compose.ui.test.junit4.RobolectricIdlingStrategy)>($r2);

        z0 = virtualinvoke $r3.<androidx.compose.ui.test.junit4.ComposeIdlingResource: boolean isIdleNow()>();

        if z0 == 0 goto label1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1;

        virtualinvoke r0.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy$runUntilIdle$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

