androidx.compose.runtime.OffsetApplier
<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>
<androidx.compose.runtime.OffsetApplier: int offset>
<androidx.compose.runtime.OffsetApplier: int nesting>
    public void <init>(androidx.compose.runtime.Applier, int)
    {
        androidx.compose.runtime.OffsetApplier r0;
        androidx.compose.runtime.Applier r1;
        int i0;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        r1 := @parameter0: androidx.compose.runtime.Applier;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "applier");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier> = r1;

        r0.<androidx.compose.runtime.OffsetApplier: int offset> = i0;

        return;
    }

    public java.lang.Object getCurrent()
    {
        androidx.compose.runtime.OffsetApplier r0;
        androidx.compose.runtime.Applier $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        $r1 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.Applier: java.lang.Object getCurrent()>();

        return $r2;
    }

    public void down(java.lang.Object)
    {
        androidx.compose.runtime.OffsetApplier r0;
        java.lang.Object r1;
        int i0, $i1;
        androidx.compose.runtime.Applier $r2;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        $i1 = i0 + 1;

        r0.<androidx.compose.runtime.OffsetApplier: int nesting> = $i1;

        $r2 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        interfaceinvoke $r2.<androidx.compose.runtime.Applier: void down(java.lang.Object)>(r1);

        return;
    }

    public void up()
    {
        androidx.compose.runtime.OffsetApplier r0;
        int $i0, $i1, i2;
        androidx.compose.runtime.Applier $r1;
        java.lang.String $r2, $r5;
        kotlin.KotlinNothingValueException $r4;
        boolean $z1, z2;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        $i0 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        if z2 != 0 goto label3;

        $r5 = "OffsetApplier up called with no corresponding down";

        $r2 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r2);

        $r4 = new kotlin.KotlinNothingValueException;

        specialinvoke $r4.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r4;

     label3:
        i2 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        $i1 = i2 + -1;

        r0.<androidx.compose.runtime.OffsetApplier: int nesting> = $i1;

        $r1 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        interfaceinvoke $r1.<androidx.compose.runtime.Applier: void up()>();

        return;
    }

    public void insertTopDown(int, java.lang.Object)
    {
        androidx.compose.runtime.OffsetApplier r0;
        int i0, $i1, $i2, $i4;
        java.lang.Object r1;
        androidx.compose.runtime.Applier $r2;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        $i1 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        if $i1 != 0 goto label1;

        $i4 = r0.<androidx.compose.runtime.OffsetApplier: int offset>;

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i2 = i0 + $i4;

        interfaceinvoke $r2.<androidx.compose.runtime.Applier: void insertTopDown(int,java.lang.Object)>($i2, r1);

        return;
    }

    public void insertBottomUp(int, java.lang.Object)
    {
        androidx.compose.runtime.OffsetApplier r0;
        int i0, $i1, $i2, $i4;
        java.lang.Object r1;
        androidx.compose.runtime.Applier $r2;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        $i1 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        if $i1 != 0 goto label1;

        $i4 = r0.<androidx.compose.runtime.OffsetApplier: int offset>;

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i2 = i0 + $i4;

        interfaceinvoke $r2.<androidx.compose.runtime.Applier: void insertBottomUp(int,java.lang.Object)>($i2, r1);

        return;
    }

    public void remove(int, int)
    {
        androidx.compose.runtime.OffsetApplier r0;
        int i0, i1, $i2, $i3, $i5;
        androidx.compose.runtime.Applier $r1;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        $i2 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        if $i2 != 0 goto label1;

        $i5 = r0.<androidx.compose.runtime.OffsetApplier: int offset>;

        goto label2;

     label1:
        $i5 = 0;

     label2:
        $i3 = i0 + $i5;

        interfaceinvoke $r1.<androidx.compose.runtime.Applier: void remove(int,int)>($i3, i1);

        return;
    }

    public void move(int, int, int)
    {
        androidx.compose.runtime.OffsetApplier r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        androidx.compose.runtime.Applier $r1;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = r0.<androidx.compose.runtime.OffsetApplier: int nesting>;

        if $i4 != 0 goto label1;

        $i7 = r0.<androidx.compose.runtime.OffsetApplier: int offset>;

        goto label2;

     label1:
        $i7 = 0;

     label2:
        i3 = $i7;

        $r1 = r0.<androidx.compose.runtime.OffsetApplier: androidx.compose.runtime.Applier applier>;

        $i6 = i0 + i3;

        $i5 = i1 + i3;

        interfaceinvoke $r1.<androidx.compose.runtime.Applier: void move(int,int,int)>($i6, $i5, i2);

        return;
    }

    public void clear()
    {
        androidx.compose.runtime.OffsetApplier r0;
        boolean z0;
        java.lang.String $r1, $r4;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.OffsetApplier;

        z0 = 0;

        $r4 = "Clear is not valid on OffsetApplier";

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r1);

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

