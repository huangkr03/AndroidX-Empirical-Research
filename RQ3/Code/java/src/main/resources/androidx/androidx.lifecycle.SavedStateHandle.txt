androidx.lifecycle.SavedStateHandle
<androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion>
<androidx.lifecycle.SavedStateHandle: java.util.Map regular>
<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders>
<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>
<androidx.lifecycle.SavedStateHandle: java.util.Map flows>
<androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider>
<androidx.lifecycle.SavedStateHandle: java.lang.String VALUES>
<androidx.lifecycle.SavedStateHandle: java.lang.String KEYS>
<androidx.lifecycle.SavedStateHandle: java.lang.Class[] ACCEPTABLE_CLASSES>
    public void <init>(java.util.Map)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.util.Map r1, $r3, $r5, $r7, $r9, $r11;
        java.util.LinkedHashMap $r2, $r4, $r6, $r8;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r10;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialState");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        $r5 = (java.util.Map) $r4;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        $r7 = (java.util.Map) $r6;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas> = $r7;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = (java.util.Map) $r8;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows> = $r9;

        $r10 = dynamicinvoke "saveState" <androidx.savedstate.SavedStateRegistry$SavedStateProvider (androidx.lifecycle.SavedStateHandle)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: android.os.Bundle __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.lifecycle.SavedStateHandle: android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle)>, methodtype: android.os.Bundle __METHODTYPE__());

        r0.<androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider> = $r10;

        $r11 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        interfaceinvoke $r11.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public void <init>()
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.util.LinkedHashMap $r1, $r3, $r5, $r7;
        java.util.Map $r2, $r4, $r6, $r8;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r9;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = (java.util.Map) $r5;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = (java.util.Map) $r7;

        r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows> = $r8;

        $r9 = dynamicinvoke "saveState" <androidx.savedstate.SavedStateRegistry$SavedStateProvider (androidx.lifecycle.SavedStateHandle)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: android.os.Bundle __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.lifecycle.SavedStateHandle: android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle)>, methodtype: android.os.Bundle __METHODTYPE__());

        r0.<androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider> = $r9;

        return;
    }

    public final androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider()
    {
        androidx.lifecycle.SavedStateHandle r0;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r1;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        $r1 = r0.<androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider>;

        return $r1;
    }

    public final boolean contains(java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public final androidx.lifecycle.MutableLiveData getLiveData(java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        androidx.lifecycle.MutableLiveData $r2;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = specialinvoke r0.<androidx.lifecycle.SavedStateHandle: androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object)>(r1, 0, null);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.lifecycle.MutableLiveData<T of androidx.lifecycle.SavedStateHandle.getLiveData>");

        return $r2;
    }

    public final androidx.lifecycle.MutableLiveData getLiveData(java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.lang.Object r2;
        androidx.lifecycle.MutableLiveData $r3;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = specialinvoke r0.<androidx.lifecycle.SavedStateHandle: androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object)>(r1, 1, r2);

        return $r3;
    }

    private final androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String, boolean, java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        java.lang.Object r2, $r11, r12;
        androidx.lifecycle.MutableLiveData r3, $r13, $r17;
        java.util.Map $r4, $r5, $r7, $r10, $r16;
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData $r9, $r14, r15;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.Object;

        $r4 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>;

        r12 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r12 instanceof androidx.lifecycle.MutableLiveData;

        if $z1 == 0 goto label1;

        $r13 = (androidx.lifecycle.MutableLiveData) r12;

        goto label2;

     label1:
        $r13 = null;

     label2:
        r3 = $r13;

        if r3 == null goto label3;

        return r3;

     label3:
        $r5 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $z2 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        $r9 = new androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        $r14 = $r9;

        $r10 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        specialinvoke $r9.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String,java.lang.Object)>(r0, r1, $r11);

        goto label6;

     label4:
        if z0 == 0 goto label5;

        $r7 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r14 = new androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        specialinvoke $r14.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String,java.lang.Object)>(r0, r1, r2);

        goto label6;

     label5:
        $r14 = new androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        specialinvoke $r14.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String)>(r0, r1);

     label6:
        r15 = $r14;

        $r16 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r15);

        $r17 = (androidx.lifecycle.MutableLiveData) r15;

        return $r17;
    }

    public final kotlinx.coroutines.flow.StateFlow getStateFlow(java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.lang.Object r2, r5, $r11, $r17;
        kotlinx.coroutines.flow.StateFlow r3;
        java.util.Map $r4, $r9, $r10, $r12, $r15;
        kotlinx.coroutines.flow.MutableStateFlow r6, r7, $r8;
        boolean $z3;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r4 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows>;

        r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r5 != null goto label2;

        $r9 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $z3 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z3 != 0 goto label1;

        $r15 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        $r10 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r11);

        $r12 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

        r7 = r6;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

        $r17 = r7;

        goto label3;

     label2:
        $r17 = r5;

     label3:
        $r8 = (kotlinx.coroutines.flow.MutableStateFlow) $r17;

        r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r3, "null cannot be cast to non-null type kotlinx.coroutines.flow.StateFlow<T of androidx.lifecycle.SavedStateHandle.getStateFlow>");

        return r3;
    }

    public final java.util.Set keys()
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.util.Map $r1, $r3, $r7;
        java.util.Set $r2, $r4, $r6, $r8, $r10;
        java.lang.Iterable $r5, $r9;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        $r1 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = (java.lang.Iterable) $r4;

        $r6 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>($r2, $r5);

        $r7 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>($r6, $r9);

        return $r10;
    }

    public final java.lang.Object get(java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        java.util.Map $r3;
        java.lang.Object r6;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

     label1:
        $r3 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r0.<androidx.lifecycle.SavedStateHandle: java.lang.Object remove(java.lang.String)>(r1);

        r6 = null;

     label4:
        return r6;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public final void set(java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1, $r18;
        java.lang.Object r2, r4, $r10;
        androidx.lifecycle.MutableLiveData r3, $r19;
        androidx.lifecycle.SavedStateHandle$Companion $r5;
        boolean $z0, $z1;
        java.util.Map $r6, $r7, $r9;
        kotlinx.coroutines.flow.MutableStateFlow $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r16, $r17;
        java.lang.Class $r15;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r5 = <androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion>;

        $z0 = virtualinvoke $r5.<androidx.lifecycle.SavedStateHandle$Companion: boolean validateValue(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t put value with type ");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        $r15 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into saved state");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label1:
        $r6 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>;

        r4 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r4 instanceof androidx.lifecycle.MutableLiveData;

        if $z1 == 0 goto label2;

        $r19 = (androidx.lifecycle.MutableLiveData) r4;

        goto label3;

     label2:
        $r19 = null;

     label3:
        r3 = $r19;

        if r3 == null goto label4;

        virtualinvoke r3.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r2);

        goto label5;

     label4:
        $r7 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label5:
        $r9 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r11 = (kotlinx.coroutines.flow.MutableStateFlow) $r10;

        if $r11 != null goto label6;

        goto label7;

     label6:
        interfaceinvoke $r11.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>(r2);

     label7:
        return;
    }

    public final java.lang.Object remove(java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.lang.Object r2, $r6;
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData r3;
        java.util.Map $r4, $r5, $r7;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r4 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (androidx.lifecycle.SavedStateHandle$SavingStateLiveData) $r6;

        if r3 == null goto label1;

        virtualinvoke r3.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void detach()>();

        goto label1;

     label1:
        $r7 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return r2;
    }

    public final void setSavedStateProvider(java.lang.String, androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider r2;
        java.util.Map $r3;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.savedstate.SavedStateRegistry$SavedStateProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "provider");

        $r3 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public final void clearSavedStateProvider(java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: androidx.lifecycle.SavedStateHandle;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    private static final android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle)
    {
        androidx.lifecycle.SavedStateHandle r0;
        java.util.Map r1, $r2, $r4, $r11;
        java.util.Set $r3, r21;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6, r22, r23;
        int $i0, $i1;
        kotlin.Pair $r7, $r8;
        android.os.Bundle $r9, r20;
        java.lang.Object $r10, $r12, $r13, $r14, $r15;
        java.util.Iterator r16, r24;
        java.util.Map$Entry r17;
        java.lang.String r18, r25;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider r19;
        kotlin.Pair[] r26;

        r0 := @parameter0: androidx.lifecycle.SavedStateHandle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r2 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders>;

        r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.util.Map)>($r2);

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r16 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        r18 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        r19 = (androidx.savedstate.SavedStateRegistry$SavedStateProvider) $r15;

        r20 = interfaceinvoke r19.<androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()>();

        virtualinvoke r0.<androidx.lifecycle.SavedStateHandle: void set(java.lang.String,java.lang.Object)>(r18, r20);

        goto label1;

     label2:
        $r4 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        r21 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r21.<java.util.Set: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r22 = $r5;

        $r6 = new java.util.ArrayList;

        $i1 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r23 = $r6;

        r24 = interfaceinvoke r21.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r10;

        virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

        $r11 = r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label3;

     label4:
        r26 = newarray (kotlin.Pair)[2];

        $r7 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("keys", r22);

        r26[0] = $r7;

        $r8 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("values", r23);

        r26[1] = $r8;

        $r9 = staticinvoke <androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>(r26);

        return $r9;
    }

    public static final androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle, android.os.Bundle)
    {
        android.os.Bundle r0, r1;
        androidx.lifecycle.SavedStateHandle$Companion $r2;
        androidx.lifecycle.SavedStateHandle $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.os.Bundle;

        $r2 = <androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.lifecycle.SavedStateHandle$Companion: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>(r0, r1);

        return $r3;
    }

    public static final java.util.Map access$getRegular$p(androidx.lifecycle.SavedStateHandle)
    {
        androidx.lifecycle.SavedStateHandle $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.lifecycle.SavedStateHandle;

        $r1 = $r0.<androidx.lifecycle.SavedStateHandle: java.util.Map regular>;

        return $r1;
    }

    public static final java.util.Map access$getFlows$p(androidx.lifecycle.SavedStateHandle)
    {
        androidx.lifecycle.SavedStateHandle $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.lifecycle.SavedStateHandle;

        $r1 = $r0.<androidx.lifecycle.SavedStateHandle: java.util.Map flows>;

        return $r1;
    }

    public static final java.lang.Class[] access$getACCEPTABLE_CLASSES$cp()
    {
        java.lang.Class[] $r0;

        $r0 = <androidx.lifecycle.SavedStateHandle: java.lang.Class[] ACCEPTABLE_CLASSES>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] r0;
        androidx.lifecycle.SavedStateHandle$Companion $r1;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13;
        int $i0, $i1;

        $r1 = new androidx.lifecycle.SavedStateHandle$Companion;

        specialinvoke $r1.<androidx.lifecycle.SavedStateHandle$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion> = $r1;

        r0 = newarray (java.lang.Class)[29];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        r0[0] = $r2;

        r0[1] = class "[Z";

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        r0[2] = $r3;

        r0[3] = class "[D";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        r0[4] = $r4;

        r0[5] = class "[I";

        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        r0[6] = $r5;

        r0[7] = class "[J";

        r0[8] = class "Ljava/lang/String;";

        r0[9] = class "[Ljava/lang/String;";

        r0[10] = class "Landroid/os/Binder;";

        r0[11] = class "Landroid/os/Bundle;";

        $r6 = <java.lang.Byte: java.lang.Class TYPE>;

        r0[12] = $r6;

        r0[13] = class "[B";

        $r7 = <java.lang.Character: java.lang.Class TYPE>;

        r0[14] = $r7;

        r0[15] = class "[C";

        r0[16] = class "Ljava/lang/CharSequence;";

        r0[17] = class "[Ljava/lang/CharSequence;";

        r0[18] = class "Ljava/util/ArrayList;";

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        r0[19] = $r8;

        r0[20] = class "[F";

        r0[21] = class "Landroid/os/Parcelable;";

        r0[22] = class "[Landroid/os/Parcelable;";

        r0[23] = class "Ljava/io/Serializable;";

        $r9 = <java.lang.Short: java.lang.Class TYPE>;

        r0[24] = $r9;

        r0[25] = class "[S";

        r0[26] = class "Landroid/util/SparseArray;";

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r12 = class "Landroid/util/Size;";

        goto label2;

     label1:
        $r12 = <java.lang.Integer: java.lang.Class TYPE>;

     label2:
        r0[27] = $r12;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label3;

        $r13 = class "Landroid/util/SizeF;";

        goto label4;

     label3:
        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

     label4:
        r0[28] = $r13;

        <androidx.lifecycle.SavedStateHandle: java.lang.Class[] ACCEPTABLE_CLASSES> = r0;

        return;
    }

androidx.lifecycle.SavedStateHandle$Companion
    private void <init>()
    {
        androidx.lifecycle.SavedStateHandle$Companion r0;

        r0 := @this: androidx.lifecycle.SavedStateHandle$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle, android.os.Bundle)
    {
        androidx.lifecycle.SavedStateHandle$Companion r0;
        android.os.Bundle r1, r2;
        int i0, $i1, $i2, $i3;
        java.util.Map r3, r18, r24;
        java.lang.String r4, $r11, r20, $r23;
        java.lang.Object r5, $r8, $r14, $r15;
        java.util.LinkedHashMap $r6;
        androidx.lifecycle.SavedStateHandle $r7, $r17;
        java.lang.IllegalStateException $r10;
        java.util.HashMap $r12;
        java.util.Set $r13;
        boolean $z0, $z1;
        java.util.Iterator r19;
        java.util.ArrayList r21, r22;

        r0 := @this: androidx.lifecycle.SavedStateHandle$Companion;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label05;

        if r2 != null goto label01;

        $r17 = new androidx.lifecycle.SavedStateHandle;

        specialinvoke $r17.<androidx.lifecycle.SavedStateHandle: void <init>()>();

        goto label04;

     label01:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r18 = (java.util.Map) $r12;

        $r13 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r19 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r20, "key");

        $r15 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r20);

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r15);

        goto label02;

     label03:
        $r17 = new androidx.lifecycle.SavedStateHandle;

        specialinvoke $r17.<androidx.lifecycle.SavedStateHandle: void <init>(java.util.Map)>(r18);

     label04:
        return $r17;

     label05:
        r21 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("keys");

        r22 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("values");

        if r21 == null goto label06;

        if r22 == null goto label06;

        $i1 = virtualinvoke r21.<java.util.ArrayList: int size()>();

        $i2 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        if $i1 != $i2 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        if $z1 != 0 goto label08;

        $r23 = "Invalid bundle passed as restored state";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label08:
        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r24 = (java.util.Map) $r6;

        $i3 = 0;

        i0 = virtualinvoke r21.<java.util.ArrayList: int size()>();

     label09:
        if $i3 >= i0 goto label10;

        r3 = r24;

        $r8 = virtualinvoke r21.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.String");

        r4 = (java.lang.String) $r8;

        r5 = virtualinvoke r22.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        $i3 = $i3 + 1;

        goto label09;

     label10:
        $r7 = new androidx.lifecycle.SavedStateHandle;

        specialinvoke $r7.<androidx.lifecycle.SavedStateHandle: void <init>(java.util.Map)>(r24);

        return $r7;
    }

    public final boolean validateValue(java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle$Companion r0;
        java.lang.Object r1;
        java.lang.Class[] r2;
        int i0, i1;
        java.lang.Class r3;
        boolean $z0;

        r0 := @this: androidx.lifecycle.SavedStateHandle$Companion;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 1;

     label1:
        r2 = staticinvoke <androidx.lifecycle.SavedStateHandle: java.lang.Class[] access$getACCEPTABLE_CLASSES$cp()>();

        i1 = 0;

        i0 = lengthof r2;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.SavedStateHandle$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.lifecycle.SavedStateHandle$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.lifecycle.SavedStateHandle$Companion: void <init>()>();

        return;
    }

androidx.lifecycle.SavedStateHandle$SavingStateLiveData
<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key>
<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle>
    public void <init>(androidx.lifecycle.SavedStateHandle, java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData r0;
        androidx.lifecycle.SavedStateHandle r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        r1 := @parameter0: androidx.lifecycle.SavedStateHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void <init>(java.lang.Object)>(r3);

        r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key> = r2;

        r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle> = r1;

        return;
    }

    public void <init>(androidx.lifecycle.SavedStateHandle, java.lang.String)
    {
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData r0;
        androidx.lifecycle.SavedStateHandle r1;
        java.lang.String r2;

        r0 := @this: androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        r1 := @parameter0: androidx.lifecycle.SavedStateHandle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key> = r2;

        r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle> = r1;

        return;
    }

    public void setValue(java.lang.Object)
    {
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData r0;
        java.lang.Object r1, $r9;
        androidx.lifecycle.SavedStateHandle r2, $r3;
        java.util.Map $r4, $r7;
        java.lang.String $r5, $r8;
        kotlinx.coroutines.flow.MutableStateFlow $r10;

        r0 := @this: androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle>;

        if $r3 == null goto label3;

        r2 = $r3;

        $r4 = staticinvoke <androidx.lifecycle.SavedStateHandle: java.util.Map access$getRegular$p(androidx.lifecycle.SavedStateHandle)>(r2);

        $r5 = r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $r7 = staticinvoke <androidx.lifecycle.SavedStateHandle: java.util.Map access$getFlows$p(androidx.lifecycle.SavedStateHandle)>(r2);

        $r8 = r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key>;

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (kotlinx.coroutines.flow.MutableStateFlow) $r9;

        if $r10 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke $r10.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>(r1);

     label2:
        goto label3;

     label3:
        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final void detach()
    {
        androidx.lifecycle.SavedStateHandle$SavingStateLiveData r0;

        r0 := @this: androidx.lifecycle.SavedStateHandle$SavingStateLiveData;

        r0.<androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle> = null;

        return;
    }

