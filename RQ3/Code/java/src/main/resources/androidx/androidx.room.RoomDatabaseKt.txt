androidx.room.RoomDatabaseKt
    public static final java.lang.Object withTransaction(androidx.room.RoomDatabase, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r25, r26, r27;
        kotlin.coroutines.CoroutineContext r1, $r7, $r17;
        java.lang.Object $r2, r3, $r5, $r6, $r18, $r21;
        boolean $z0;
        androidx.room.TransactionElement$Key $r8;
        kotlin.coroutines.CoroutineContext$Key $r9;
        kotlin.coroutines.CoroutineContext$Element $r10;
        androidx.room.TransactionElement $r11;
        kotlin.coroutines.ContinuationInterceptor $r12;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.room.RoomDatabase $r14;
        kotlin.jvm.functions.Function1 r15;
        androidx.room.RoomDatabaseKt$withTransaction$1 $r16, r22;
        kotlin.jvm.functions.Function2 $r20;
        androidx.room.RoomDatabaseKt$withTransaction$2 r23;
        java.lang.IllegalStateException r24;

        $r14 := @parameter0: androidx.room.RoomDatabase;

        r15 := @parameter1: kotlin.jvm.functions.Function1;

        r0 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.room.RoomDatabaseKt$withTransaction$1;

        if $z0 == 0 goto label01;

        $r16 = (androidx.room.RoomDatabaseKt$withTransaction$1) r0;

        $i0 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label>;

        $i3 = $i2 - -2147483648;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label> = $i3;

        goto label02;

     label01:
        r22 = new androidx.room.RoomDatabaseKt$withTransaction$1;

        specialinvoke r22.<androidx.room.RoomDatabaseKt$withTransaction$1: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r16 = r22;

     label02:
        $r2 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label05;
            case 2: goto label08;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r25 = (kotlin.coroutines.Continuation) $r16;

        $r7 = interfaceinvoke r25.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r8 = <androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key>;

        $r9 = (kotlin.coroutines.CoroutineContext$Key) $r8;

        $r10 = interfaceinvoke $r7.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r9);

        $r11 = (androidx.room.TransactionElement) $r10;

        if $r11 == null goto label04;

        $r12 = virtualinvoke $r11.<androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()>();

        if $r12 == null goto label04;

        $r17 = (kotlin.coroutines.CoroutineContext) $r12;

        goto label07;

     label04:
        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$0> = $r14;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$1> = r15;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label> = 1;

        r26 = (kotlin.coroutines.Continuation) $r16;

        $r18 = staticinvoke <androidx.room.RoomDatabaseKt: java.lang.Object createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.Continuation)>($r14, r26);

        if $r18 != r3 goto label06;

        return r3;

     label05:
        $r5 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$1>;

        r15 = (kotlin.jvm.functions.Function1) $r5;

        $r6 = $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$0>;

        $r14 = (androidx.room.RoomDatabase) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r18 = $r2;

     label06:
        $r17 = (kotlin.coroutines.CoroutineContext) $r18;

     label07:
        r1 = $r17;

        r23 = new androidx.room.RoomDatabaseKt$withTransaction$2;

        specialinvoke r23.<androidx.room.RoomDatabaseKt$withTransaction$2: void <init>(androidx.room.RoomDatabase,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r14, r15, null);

        $r20 = (kotlin.jvm.functions.Function2) r23;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$0> = null;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: java.lang.Object L$1> = null;

        $r16.<androidx.room.RoomDatabaseKt$withTransaction$1: int label> = 2;

        r27 = (kotlin.coroutines.Continuation) $r16;

        $r21 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(r1, $r20, r27);

        if $r21 != r3 goto label09;

        return r3;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r21 = $r2;

     label09:
        return $r21;

     label10:
        r24 = new java.lang.IllegalStateException;

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r24;
    }

    private static final java.lang.Object createTransactionContext(androidx.room.RoomDatabase, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r36, r37;
        kotlin.coroutines.ContinuationInterceptor r1;
        androidx.room.TransactionElement r2, r34;
        kotlinx.coroutines.ThreadContextElement r3;
        java.lang.Object $r4, r5, $r7, $r8, $r31;
        boolean $z0;
        kotlinx.coroutines.Job $r10, $r21, $r23;
        java.lang.ThreadLocal $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r12;
        kotlin.coroutines.CoroutineContext $r13, $r14, $r15, $r16, $r17;
        kotlinx.coroutines.Job$Key $r18;
        kotlin.coroutines.CoroutineContext$Key $r19;
        kotlin.coroutines.CoroutineContext$Element $r20;
        java.util.concurrent.Executor $r22;
        kotlin.jvm.functions.Function1 $r25;
        androidx.room.RoomDatabase $r28;
        androidx.room.RoomDatabaseKt$createTransactionContext$1 $r29, r32;
        kotlinx.coroutines.CompletableJob r30;
        androidx.room.RoomDatabaseKt$createTransactionContext$2 r33;
        java.lang.IllegalStateException r35;

        $r28 := @parameter0: androidx.room.RoomDatabase;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.room.RoomDatabaseKt$createTransactionContext$1;

        if $z0 == 0 goto label1;

        $r29 = (androidx.room.RoomDatabaseKt$createTransactionContext$1) r0;

        $i1 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        $i3 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: int label>;

        $i4 = $i3 - -2147483648;

        $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: int label> = $i4;

        goto label2;

     label1:
        r32 = new androidx.room.RoomDatabaseKt$createTransactionContext$1;

        specialinvoke r32.<androidx.room.RoomDatabaseKt$createTransactionContext$1: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r29 = r32;

     label2:
        $r4 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label5;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r30 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r36 = (kotlin.coroutines.Continuation) $r29;

        $r17 = interfaceinvoke r36.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r18 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r19 = (kotlin.coroutines.CoroutineContext$Key) $r18;

        $r20 = interfaceinvoke $r17.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r19);

        $r21 = (kotlinx.coroutines.Job) $r20;

        if $r21 == null goto label4;

        r33 = new androidx.room.RoomDatabaseKt$createTransactionContext$2;

        specialinvoke r33.<androidx.room.RoomDatabaseKt$createTransactionContext$2: void <init>(kotlinx.coroutines.CompletableJob)>(r30);

        $r25 = (kotlin.jvm.functions.Function1) r33;

        interfaceinvoke $r21.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r25);

        goto label4;

     label4:
        $r22 = virtualinvoke $r28.<androidx.room.RoomDatabase: java.util.concurrent.Executor getTransactionExecutor()>();

        $r23 = (kotlinx.coroutines.Job) r30;

        $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: java.lang.Object L$0> = $r28;

        $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: java.lang.Object L$1> = r30;

        $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: int label> = 1;

        r37 = (kotlin.coroutines.Continuation) $r29;

        $r31 = staticinvoke <androidx.room.RoomDatabaseKt: java.lang.Object acquireTransactionThread(java.util.concurrent.Executor,kotlinx.coroutines.Job,kotlin.coroutines.Continuation)>($r22, $r23, r37);

        if $r31 != r5 goto label6;

        return r5;

     label5:
        $r7 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: java.lang.Object L$1>;

        r30 = (kotlinx.coroutines.CompletableJob) $r7;

        $r8 = $r29.<androidx.room.RoomDatabaseKt$createTransactionContext$1: java.lang.Object L$0>;

        $r28 = (androidx.room.RoomDatabase) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r31 = $r4;

     label6:
        r1 = (kotlin.coroutines.ContinuationInterceptor) $r31;

        r34 = new androidx.room.TransactionElement;

        $r10 = (kotlinx.coroutines.Job) r30;

        specialinvoke r34.<androidx.room.TransactionElement: void <init>(kotlinx.coroutines.Job,kotlin.coroutines.ContinuationInterceptor)>($r10, r1);

        r2 = r34;

        $r11 = virtualinvoke $r28.<androidx.room.RoomDatabase: java.lang.ThreadLocal getSuspendingTransactionId()>();

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r30);

        $r12 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i0);

        r3 = staticinvoke <kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)>($r11, $r12);

        $r13 = (kotlin.coroutines.CoroutineContext) r2;

        $r14 = interfaceinvoke r1.<kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r13);

        $r15 = (kotlin.coroutines.CoroutineContext) r3;

        $r16 = interfaceinvoke $r14.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r15);

        return $r16;

     label7:
        r35 = new java.lang.IllegalStateException;

        specialinvoke r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r35;
    }

    private static final java.lang.Object acquireTransactionThread(java.util.concurrent.Executor, kotlinx.coroutines.Job, kotlin.coroutines.Continuation)
    {
        java.util.concurrent.Executor $r0;
        kotlinx.coroutines.Job r1;
        kotlin.coroutines.Continuation $r2, r3, $r8;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r7;
        kotlinx.coroutines.CancellableContinuation r5;
        java.lang.Throwable r6, $r15, $r17, $r18;
        androidx.room.RoomDatabaseKt$acquireTransactionThread$2$1 $r9;
        kotlin.jvm.functions.Function1 $r10;
        androidx.room.RoomDatabaseKt$acquireTransactionThread$2$2 $r11;
        java.lang.Runnable $r12;
        java.lang.Object $r13, $r14;
        java.lang.IllegalStateException $r16;

        $r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: kotlinx.coroutines.Job;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r7 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r8, 1);

        r4 = $r7;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r9 = new androidx.room.RoomDatabaseKt$acquireTransactionThread$2$1;

        specialinvoke $r9.<androidx.room.RoomDatabaseKt$acquireTransactionThread$2$1: void <init>(kotlinx.coroutines.Job)>(r1);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        interfaceinvoke r5.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r10);

     label1:
        $r11 = new androidx.room.RoomDatabaseKt$acquireTransactionThread$2$2;

        specialinvoke $r11.<androidx.room.RoomDatabaseKt$acquireTransactionThread$2$2: void <init>(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.Job)>(r5, r1);

        $r12 = (java.lang.Runnable) $r11;

        interfaceinvoke $r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r12);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r6 = $r15;

        $r16 = new java.lang.IllegalStateException;

        $r17 = (java.lang.Throwable) r6;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to acquire a thread to perform the database transaction.", $r17);

        $r18 = (java.lang.Throwable) $r16;

        interfaceinvoke r5.<kotlinx.coroutines.CancellableContinuation: boolean cancel(java.lang.Throwable)>($r18);

     label4:
        $r13 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label5:
        return $r13;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    public static final java.lang.Object access$createTransactionContext(androidx.room.RoomDatabase, kotlin.coroutines.Continuation)
    {
        androidx.room.RoomDatabase $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.room.RoomDatabase;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.room.RoomDatabaseKt: java.lang.Object createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.Continuation)>($r0, $r1);

        return $r2;
    }

    public static final java.lang.Object access$acquireTransactionThread(java.util.concurrent.Executor, kotlinx.coroutines.Job, kotlin.coroutines.Continuation)
    {
        java.util.concurrent.Executor $r0;
        kotlinx.coroutines.Job r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: kotlinx.coroutines.Job;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.room.RoomDatabaseKt: java.lang.Object acquireTransactionThread(java.util.concurrent.Executor,kotlinx.coroutines.Job,kotlin.coroutines.Continuation)>($r0, r1, $r2);

        return $r3;
    }

