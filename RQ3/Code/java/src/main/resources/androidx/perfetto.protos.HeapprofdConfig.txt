perfetto.protos.HeapprofdConfig
<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$Companion Companion>
<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>
<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>
<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>
<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>
<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>
<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>
<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>
<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>
<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>
<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>
<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>
<perfetto.protos.HeapprofdConfig: java.util.List pid>
<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>
<perfetto.protos.HeapprofdConfig: java.util.List heaps>
<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>
<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>
<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>
<perfetto.protos.HeapprofdConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.HeapprofdConfig: long serialVersionUID>
    public void <init>(java.lang.Long, java.lang.Long, java.lang.Long, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List, java.lang.Boolean, java.util.List, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Long, java.util.List, perfetto.protos.HeapprofdConfig$ContinuousDumpConfig, java.lang.Long, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, okio.ByteString)
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long r1, r2, r3, r15, r18;
        java.util.List r4, r5, r6, r7, r8, r10, r16, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.Boolean r9, r11, r12, r19, r21, r22, r23, r24, r25;
        java.lang.Integer r13, r14, r20;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r17;
        okio.ByteString r26;
        com.squareup.wire.ProtoAdapter $r27;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: java.lang.Long;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: java.util.List;

        r9 := @parameter8: java.lang.Boolean;

        r10 := @parameter9: java.util.List;

        r11 := @parameter10: java.lang.Boolean;

        r12 := @parameter11: java.lang.Boolean;

        r13 := @parameter12: java.lang.Integer;

        r14 := @parameter13: java.lang.Integer;

        r15 := @parameter14: java.lang.Long;

        r16 := @parameter15: java.util.List;

        r17 := @parameter16: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r18 := @parameter17: java.lang.Long;

        r19 := @parameter18: java.lang.Boolean;

        r20 := @parameter19: java.lang.Integer;

        r21 := @parameter20: java.lang.Boolean;

        r22 := @parameter21: java.lang.Boolean;

        r23 := @parameter22: java.lang.Boolean;

        r24 := @parameter23: java.lang.Boolean;

        r25 := @parameter24: java.lang.Boolean;

        r26 := @parameter25: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "process_cmdline");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "pid");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "target_installed_by");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "heaps");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "exclude_heaps");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r10, "heap_sampling_intervals");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r16, "skip_symbol_prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r26, "unknownFields");

        $r27 = <perfetto.protos.HeapprofdConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r27, r26);

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes> = r1;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold> = r2;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes> = r3;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations> = r9;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps> = r11;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all> = r12;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb> = r13;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb> = r14;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs> = r15;

        r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config> = r17;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes> = r18;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client> = r19;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us> = r20;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup> = r21;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running> = r22;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max> = r23;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown> = r24;

        r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection> = r25;

        $r28 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("process_cmdline", r4);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline> = $r28;

        $r29 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("pid", r5);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List pid> = $r29;

        $r30 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("target_installed_by", r6);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by> = $r30;

        $r31 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("heaps", r7);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps> = $r31;

        $r32 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("exclude_heaps", r8);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps> = $r32;

        $r33 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("heap_sampling_intervals", r10);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals> = $r33;

        $r34 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("skip_symbol_prefix", r16);

        r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix> = $r34;

        return;
    }

    public void <init>(java.lang.Long, java.lang.Long, java.lang.Long, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List, java.lang.Boolean, java.util.List, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Long, java.util.List, perfetto.protos.HeapprofdConfig$ContinuousDumpConfig, java.lang.Long, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.HeapprofdConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Long r2, r3, r4, r16, r19;
        java.util.List r5, r6, r7, r8, r9, r11, r17;
        java.lang.Boolean r10, r12, r13, r20, r22, r23, r24, r25, r26;
        java.lang.Integer r14, r15, r21;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r18;
        okio.ByteString r27;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        r2 := @parameter0: java.lang.Long;

        r3 := @parameter1: java.lang.Long;

        r4 := @parameter2: java.lang.Long;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: java.util.List;

        r8 := @parameter6: java.util.List;

        r9 := @parameter7: java.util.List;

        r10 := @parameter8: java.lang.Boolean;

        r11 := @parameter9: java.util.List;

        r12 := @parameter10: java.lang.Boolean;

        r13 := @parameter11: java.lang.Boolean;

        r14 := @parameter12: java.lang.Integer;

        r15 := @parameter13: java.lang.Integer;

        r16 := @parameter14: java.lang.Long;

        r17 := @parameter15: java.util.List;

        r18 := @parameter16: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r19 := @parameter17: java.lang.Long;

        r20 := @parameter18: java.lang.Boolean;

        r21 := @parameter19: java.lang.Integer;

        r22 := @parameter20: java.lang.Boolean;

        r23 := @parameter21: java.lang.Boolean;

        r24 := @parameter22: java.lang.Boolean;

        r25 := @parameter23: java.lang.Boolean;

        r26 := @parameter24: java.lang.Boolean;

        r27 := @parameter25: okio.ByteString;

        i0 := @parameter26: int;

        r1 := @parameter27: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r2 = null;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r3 = null;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r4 = null;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r10 = null;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r12 = null;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r13 = null;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r14 = null;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r15 = null;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r16 = null;

     label15:
        $i16 = i0 & 32768;

        if $i16 == 0 goto label16;

        r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label16:
        $i17 = i0 & 65536;

        if $i17 == 0 goto label17;

        r18 = null;

     label17:
        $i18 = i0 & 131072;

        if $i18 == 0 goto label18;

        r19 = null;

     label18:
        $i19 = i0 & 262144;

        if $i19 == 0 goto label19;

        r20 = null;

     label19:
        $i20 = i0 & 524288;

        if $i20 == 0 goto label20;

        r21 = null;

     label20:
        $i21 = i0 & 1048576;

        if $i21 == 0 goto label21;

        r22 = null;

     label21:
        $i22 = i0 & 2097152;

        if $i22 == 0 goto label22;

        r23 = null;

     label22:
        $i23 = i0 & 4194304;

        if $i23 == 0 goto label23;

        r24 = null;

     label23:
        $i24 = i0 & 8388608;

        if $i24 == 0 goto label24;

        r25 = null;

     label24:
        $i25 = i0 & 16777216;

        if $i25 == 0 goto label25;

        r26 = null;

     label25:
        $i26 = i0 & 33554432;

        if $i26 == 0 goto label26;

        r27 = <okio.ByteString: okio.ByteString EMPTY>;

     label26:
        specialinvoke r0.<perfetto.protos.HeapprofdConfig: void <init>(java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27);

        return;
    }

    public final java.lang.Long getSampling_interval_bytes()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        return $r1;
    }

    public final java.lang.Long getAdaptive_sampling_shmem_threshold()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        return $r1;
    }

    public final java.lang.Long getAdaptive_sampling_max_sampling_interval_bytes()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        return $r1;
    }

    public final java.lang.Boolean getStream_allocations()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        return $r1;
    }

    public final java.lang.Boolean getAll_heaps()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        return $r1;
    }

    public final java.lang.Boolean getAll()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        return $r1;
    }

    public final java.lang.Integer getMin_anonymous_memory_kb()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        return $r1;
    }

    public final java.lang.Integer getMax_heapprofd_memory_kb()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        return $r1;
    }

    public final java.lang.Long getMax_heapprofd_cpu_secs()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        return $r1;
    }

    public final perfetto.protos.HeapprofdConfig$ContinuousDumpConfig getContinuous_dump_config()
    {
        perfetto.protos.HeapprofdConfig r0;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        return $r1;
    }

    public final java.lang.Long getShmem_size_bytes()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        return $r1;
    }

    public final java.lang.Boolean getBlock_client()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        return $r1;
    }

    public final java.lang.Integer getBlock_client_timeout_us()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        return $r1;
    }

    public final java.lang.Boolean getNo_startup()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        return $r1;
    }

    public final java.lang.Boolean getNo_running()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        return $r1;
    }

    public final java.lang.Boolean getDump_at_max()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        return $r1;
    }

    public final java.lang.Boolean getDisable_fork_teardown()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        return $r1;
    }

    public final java.lang.Boolean getDisable_vfork_detection()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        return $r1;
    }

    public final java.util.List getProcess_cmdline()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        return $r1;
    }

    public final java.util.List getPid()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        return $r1;
    }

    public final java.util.List getTarget_installed_by()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        return $r1;
    }

    public final java.util.List getHeaps()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        return $r1;
    }

    public final java.util.List getExclude_heaps()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        return $r1;
    }

    public final java.util.List getHeap_sampling_intervals()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        return $r1;
    }

    public final java.util.List getSkip_symbol_prefix()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig r0, $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        okio.ByteString $r2, $r4;
        java.lang.Long $r6, $r7, $r9, $r10, $r12, $r13, $r48, $r49, $r57, $r58;
        java.util.List $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r33, $r34, $r51, $r52;
        java.lang.Boolean $r30, $r31, $r36, $r37, $r39, $r40, $r60, $r61, $r66, $r67, $r69, $r70, $r72, $r73, $r75, $r76, $r78, $r79;
        java.lang.Integer $r42, $r43, $r45, $r46, $r63, $r64;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r54, $r55;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof perfetto.protos.HeapprofdConfig;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.HeapprofdConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        $r5 = (perfetto.protos.HeapprofdConfig) r1;

        $r6 = $r5.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r10 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        $r8 = (perfetto.protos.HeapprofdConfig) r1;

        $r9 = $r8.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label05;

        return 0;

     label05:
        $r13 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        $r11 = (perfetto.protos.HeapprofdConfig) r1;

        $r12 = $r11.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label06;

        return 0;

     label06:
        $r16 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        $r14 = (perfetto.protos.HeapprofdConfig) r1;

        $r15 = $r14.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label07;

        return 0;

     label07:
        $r19 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        $r17 = (perfetto.protos.HeapprofdConfig) r1;

        $r18 = $r17.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z6 != 0 goto label08;

        return 0;

     label08:
        $r22 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        $r20 = (perfetto.protos.HeapprofdConfig) r1;

        $r21 = $r20.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z7 != 0 goto label09;

        return 0;

     label09:
        $r25 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        $r23 = (perfetto.protos.HeapprofdConfig) r1;

        $r24 = $r23.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r24);

        if $z8 != 0 goto label10;

        return 0;

     label10:
        $r28 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        $r26 = (perfetto.protos.HeapprofdConfig) r1;

        $r27 = $r26.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, $r27);

        if $z9 != 0 goto label11;

        return 0;

     label11:
        $r31 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        $r29 = (perfetto.protos.HeapprofdConfig) r1;

        $r30 = $r29.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r31, $r30);

        if $z10 != 0 goto label12;

        return 0;

     label12:
        $r34 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        $r32 = (perfetto.protos.HeapprofdConfig) r1;

        $r33 = $r32.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r34, $r33);

        if $z11 != 0 goto label13;

        return 0;

     label13:
        $r37 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        $r35 = (perfetto.protos.HeapprofdConfig) r1;

        $r36 = $r35.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r37, $r36);

        if $z12 != 0 goto label14;

        return 0;

     label14:
        $r40 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        $r38 = (perfetto.protos.HeapprofdConfig) r1;

        $r39 = $r38.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r40, $r39);

        if $z13 != 0 goto label15;

        return 0;

     label15:
        $r43 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        $r41 = (perfetto.protos.HeapprofdConfig) r1;

        $r42 = $r41.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        $z14 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r43, $r42);

        if $z14 != 0 goto label16;

        return 0;

     label16:
        $r46 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        $r44 = (perfetto.protos.HeapprofdConfig) r1;

        $r45 = $r44.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r46, $r45);

        if $z15 != 0 goto label17;

        return 0;

     label17:
        $r49 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        $r47 = (perfetto.protos.HeapprofdConfig) r1;

        $r48 = $r47.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        $z16 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r49, $r48);

        if $z16 != 0 goto label18;

        return 0;

     label18:
        $r52 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        $r50 = (perfetto.protos.HeapprofdConfig) r1;

        $r51 = $r50.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        $z17 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r52, $r51);

        if $z17 != 0 goto label19;

        return 0;

     label19:
        $r55 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        $r53 = (perfetto.protos.HeapprofdConfig) r1;

        $r54 = $r53.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        $z18 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r55, $r54);

        if $z18 != 0 goto label20;

        return 0;

     label20:
        $r58 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        $r56 = (perfetto.protos.HeapprofdConfig) r1;

        $r57 = $r56.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        $z19 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r58, $r57);

        if $z19 != 0 goto label21;

        return 0;

     label21:
        $r61 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        $r59 = (perfetto.protos.HeapprofdConfig) r1;

        $r60 = $r59.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        $z20 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r61, $r60);

        if $z20 != 0 goto label22;

        return 0;

     label22:
        $r64 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        $r62 = (perfetto.protos.HeapprofdConfig) r1;

        $r63 = $r62.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        $z21 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r64, $r63);

        if $z21 != 0 goto label23;

        return 0;

     label23:
        $r67 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        $r65 = (perfetto.protos.HeapprofdConfig) r1;

        $r66 = $r65.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        $z22 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r67, $r66);

        if $z22 != 0 goto label24;

        return 0;

     label24:
        $r70 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        $r68 = (perfetto.protos.HeapprofdConfig) r1;

        $r69 = $r68.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        $z23 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r70, $r69);

        if $z23 != 0 goto label25;

        return 0;

     label25:
        $r73 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        $r71 = (perfetto.protos.HeapprofdConfig) r1;

        $r72 = $r71.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        $z24 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r73, $r72);

        if $z24 != 0 goto label26;

        return 0;

     label26:
        $r76 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        $r74 = (perfetto.protos.HeapprofdConfig) r1;

        $r75 = $r74.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        $z25 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r76, $r75);

        if $z25 != 0 goto label27;

        return 0;

     label27:
        $r79 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        $r77 = (perfetto.protos.HeapprofdConfig) r1;

        $r78 = $r77.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        $z26 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r79, $r78);

        if $z26 != 0 goto label28;

        return 0;

     label28:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.HeapprofdConfig r0;
        okio.ByteString $r1;
        java.lang.Long $r2, $r3, $r4, $r16, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, $i34, i35, $i36, i37, $i38, i39, i40, i41, i42, i43, i44, $i45, i46, i47, $i48, i49, $i50, i51, $i52, i53, $i54, i55, $i56, i57, i58, $i59, i60, $i61, i62, $i63, i64, $i65, i66, $i67, i68, $i69, i70, $i71, i72, $i73, i74, $i75;
        java.util.List $r5, $r6, $r7, $r8, $r9, $r11, $r17;
        java.lang.Boolean $r10, $r12, $r13, $r20, $r22, $r23, $r24, $r25, $r26;
        java.lang.Integer $r14, $r15, $r21;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r18;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        i32 = r0.<perfetto.protos.HeapprofdConfig: int hashCode>;

        if i32 != 0 goto label37;

        $r1 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

        i33 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i33 * 37;

        $r2 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        if $r2 != null goto label01;

        $i34 = 0;

        goto label02;

     label01:
        $i34 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        i35 = $i0 + $i34;

        $i1 = i35 * 37;

        $r3 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        if $r3 != null goto label03;

        $i36 = 0;

        goto label04;

     label03:
        $i36 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label04:
        i37 = $i1 + $i36;

        $i2 = i37 * 37;

        $r4 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        if $r4 != null goto label05;

        $i38 = 0;

        goto label06;

     label05:
        $i38 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label06:
        i39 = $i2 + $i38;

        $i3 = i39 * 37;

        $r5 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        $i4 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        i40 = $i3 + $i4;

        $i5 = i40 * 37;

        $r6 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        $i6 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        i41 = $i5 + $i6;

        $i7 = i41 * 37;

        $r7 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        $i8 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        i42 = $i7 + $i8;

        $i9 = i42 * 37;

        $r8 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        $i10 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

        i43 = $i9 + $i10;

        $i11 = i43 * 37;

        $r9 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        $i12 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        i44 = $i11 + $i12;

        $i13 = i44 * 37;

        $r10 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        if $r10 != null goto label07;

        $i45 = 0;

        goto label08;

     label07:
        $i45 = virtualinvoke $r10.<java.lang.Object: int hashCode()>();

     label08:
        i46 = $i13 + $i45;

        $i14 = i46 * 37;

        $r11 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        $i15 = virtualinvoke $r11.<java.lang.Object: int hashCode()>();

        i47 = $i14 + $i15;

        $i16 = i47 * 37;

        $r12 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        if $r12 != null goto label09;

        $i48 = 0;

        goto label10;

     label09:
        $i48 = virtualinvoke $r12.<java.lang.Object: int hashCode()>();

     label10:
        i49 = $i16 + $i48;

        $i17 = i49 * 37;

        $r13 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        if $r13 != null goto label11;

        $i50 = 0;

        goto label12;

     label11:
        $i50 = virtualinvoke $r13.<java.lang.Object: int hashCode()>();

     label12:
        i51 = $i17 + $i50;

        $i18 = i51 * 37;

        $r14 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        if $r14 != null goto label13;

        $i52 = 0;

        goto label14;

     label13:
        $i52 = virtualinvoke $r14.<java.lang.Object: int hashCode()>();

     label14:
        i53 = $i18 + $i52;

        $i19 = i53 * 37;

        $r15 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        if $r15 != null goto label15;

        $i54 = 0;

        goto label16;

     label15:
        $i54 = virtualinvoke $r15.<java.lang.Object: int hashCode()>();

     label16:
        i55 = $i19 + $i54;

        $i20 = i55 * 37;

        $r16 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        if $r16 != null goto label17;

        $i56 = 0;

        goto label18;

     label17:
        $i56 = virtualinvoke $r16.<java.lang.Object: int hashCode()>();

     label18:
        i57 = $i20 + $i56;

        $i21 = i57 * 37;

        $r17 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        $i22 = virtualinvoke $r17.<java.lang.Object: int hashCode()>();

        i58 = $i21 + $i22;

        $i23 = i58 * 37;

        $r18 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        if $r18 != null goto label19;

        $i59 = 0;

        goto label20;

     label19:
        $i59 = virtualinvoke $r18.<java.lang.Object: int hashCode()>();

     label20:
        i60 = $i23 + $i59;

        $i24 = i60 * 37;

        $r19 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        if $r19 != null goto label21;

        $i61 = 0;

        goto label22;

     label21:
        $i61 = virtualinvoke $r19.<java.lang.Object: int hashCode()>();

     label22:
        i62 = $i24 + $i61;

        $i25 = i62 * 37;

        $r20 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        if $r20 != null goto label23;

        $i63 = 0;

        goto label24;

     label23:
        $i63 = virtualinvoke $r20.<java.lang.Object: int hashCode()>();

     label24:
        i64 = $i25 + $i63;

        $i26 = i64 * 37;

        $r21 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        if $r21 != null goto label25;

        $i65 = 0;

        goto label26;

     label25:
        $i65 = virtualinvoke $r21.<java.lang.Object: int hashCode()>();

     label26:
        i66 = $i26 + $i65;

        $i27 = i66 * 37;

        $r22 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        if $r22 != null goto label27;

        $i67 = 0;

        goto label28;

     label27:
        $i67 = virtualinvoke $r22.<java.lang.Object: int hashCode()>();

     label28:
        i68 = $i27 + $i67;

        $i28 = i68 * 37;

        $r23 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        if $r23 != null goto label29;

        $i69 = 0;

        goto label30;

     label29:
        $i69 = virtualinvoke $r23.<java.lang.Object: int hashCode()>();

     label30:
        i70 = $i28 + $i69;

        $i29 = i70 * 37;

        $r24 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        if $r24 != null goto label31;

        $i71 = 0;

        goto label32;

     label31:
        $i71 = virtualinvoke $r24.<java.lang.Object: int hashCode()>();

     label32:
        i72 = $i29 + $i71;

        $i30 = i72 * 37;

        $r25 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        if $r25 != null goto label33;

        $i73 = 0;

        goto label34;

     label33:
        $i73 = virtualinvoke $r25.<java.lang.Object: int hashCode()>();

     label34:
        i74 = $i30 + $i73;

        $i31 = i74 * 37;

        $r26 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        if $r26 != null goto label35;

        $i75 = 0;

        goto label36;

     label35:
        $i75 = virtualinvoke $r26.<java.lang.Object: int hashCode()>();

     label36:
        i32 = $i31 + $i75;

        r0.<perfetto.protos.HeapprofdConfig: int hashCode> = i32;

     label37:
        return i32;
    }

    public java.lang.String toString()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.util.List r1, $r6, $r8, $r10, $r12, $r14, $r17, $r24, $r67, $r86, $r92, $r96, $r100, $r104, $r107;
        java.util.ArrayList $r2;
        java.lang.Long $r3, $r4, $r5, $r23, $r27, $r61, $r71, $r111, $r114, $r117;
        java.util.Collection $r7, $r9, $r11, $r13, $r15, $r18, $r25, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r97, $r101, $r105, $r108, $r112, $r115, $r118;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z32, $z33, $z34, $z35, $z36, $z37, $z38;
        java.lang.Boolean $r16, $r19, $r20, $r28, $r30, $r31, $r32, $r33, $r34, $r40, $r43, $r46, $r49, $r52, $r58, $r80, $r83, $r89;
        java.lang.Integer $r21, $r22, $r29, $r55, $r74, $r77;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r26, $r64;
        java.lang.CharSequence $r35, $r36, $r37;
        java.lang.Iterable $r38;
        java.lang.String $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r95, $r98, $r99, $r102, $r103, $r106, $r109, $r110, $r113, $r116, $r119;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        if $r3 == null goto label01;

        $r118 = (java.util.Collection) r1;

        $r117 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

        $r119 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("sampling_interval_bytes=", $r117);

        interfaceinvoke $r118.<java.util.Collection: boolean add(java.lang.Object)>($r119);

     label01:
        $r4 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        if $r4 == null goto label02;

        $r115 = (java.util.Collection) r1;

        $r114 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

        $r116 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("adaptive_sampling_shmem_threshold=", $r114);

        interfaceinvoke $r115.<java.util.Collection: boolean add(java.lang.Object)>($r116);

     label02:
        $r5 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        if $r5 == null goto label03;

        $r112 = (java.util.Collection) r1;

        $r111 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

        $r113 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("adaptive_sampling_max_sampling_interval_bytes=", $r111);

        interfaceinvoke $r112.<java.util.Collection: boolean add(java.lang.Object)>($r113);

     label03:
        $r6 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        $r7 = (java.util.Collection) $r6;

        $z0 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        $z32 = 1;

        goto label05;

     label04:
        $z32 = 0;

     label05:
        if $z32 == 0 goto label06;

        $r108 = (java.util.Collection) r1;

        $r107 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

        $r109 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r107);

        $r110 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("process_cmdline=", $r109);

        interfaceinvoke $r108.<java.util.Collection: boolean add(java.lang.Object)>($r110);

     label06:
        $r8 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        $r9 = (java.util.Collection) $r8;

        $z1 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        $z33 = 1;

        goto label08;

     label07:
        $z33 = 0;

     label08:
        if $z33 == 0 goto label09;

        $r105 = (java.util.Collection) r1;

        $r104 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

        $r106 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("pid=", $r104);

        interfaceinvoke $r105.<java.util.Collection: boolean add(java.lang.Object)>($r106);

     label09:
        $r10 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        $r11 = (java.util.Collection) $r10;

        $z2 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $z34 = 1;

        goto label11;

     label10:
        $z34 = 0;

     label11:
        if $z34 == 0 goto label12;

        $r101 = (java.util.Collection) r1;

        $r100 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

        $r102 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r100);

        $r103 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("target_installed_by=", $r102);

        interfaceinvoke $r101.<java.util.Collection: boolean add(java.lang.Object)>($r103);

     label12:
        $r12 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        $r13 = (java.util.Collection) $r12;

        $z3 = interfaceinvoke $r13.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label13;

        $z35 = 1;

        goto label14;

     label13:
        $z35 = 0;

     label14:
        if $z35 == 0 goto label15;

        $r97 = (java.util.Collection) r1;

        $r96 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

        $r98 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r96);

        $r99 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("heaps=", $r98);

        interfaceinvoke $r97.<java.util.Collection: boolean add(java.lang.Object)>($r99);

     label15:
        $r14 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        $r15 = (java.util.Collection) $r14;

        $z4 = interfaceinvoke $r15.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label16;

        $z36 = 1;

        goto label17;

     label16:
        $z36 = 0;

     label17:
        if $z36 == 0 goto label18;

        $r93 = (java.util.Collection) r1;

        $r92 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

        $r94 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r92);

        $r95 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("exclude_heaps=", $r94);

        interfaceinvoke $r93.<java.util.Collection: boolean add(java.lang.Object)>($r95);

     label18:
        $r16 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        if $r16 == null goto label19;

        $r90 = (java.util.Collection) r1;

        $r89 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

        $r91 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("stream_allocations=", $r89);

        interfaceinvoke $r90.<java.util.Collection: boolean add(java.lang.Object)>($r91);

     label19:
        $r17 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        $r18 = (java.util.Collection) $r17;

        $z5 = interfaceinvoke $r18.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label20;

        $z37 = 1;

        goto label21;

     label20:
        $z37 = 0;

     label21:
        if $z37 == 0 goto label22;

        $r87 = (java.util.Collection) r1;

        $r86 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

        $r88 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("heap_sampling_intervals=", $r86);

        interfaceinvoke $r87.<java.util.Collection: boolean add(java.lang.Object)>($r88);

     label22:
        $r19 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        if $r19 == null goto label23;

        $r84 = (java.util.Collection) r1;

        $r83 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

        $r85 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("all_heaps=", $r83);

        interfaceinvoke $r84.<java.util.Collection: boolean add(java.lang.Object)>($r85);

     label23:
        $r20 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        if $r20 == null goto label24;

        $r81 = (java.util.Collection) r1;

        $r80 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

        $r82 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("all=", $r80);

        interfaceinvoke $r81.<java.util.Collection: boolean add(java.lang.Object)>($r82);

     label24:
        $r21 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        if $r21 == null goto label25;

        $r78 = (java.util.Collection) r1;

        $r77 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

        $r79 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("min_anonymous_memory_kb=", $r77);

        interfaceinvoke $r78.<java.util.Collection: boolean add(java.lang.Object)>($r79);

     label25:
        $r22 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        if $r22 == null goto label26;

        $r75 = (java.util.Collection) r1;

        $r74 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

        $r76 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_heapprofd_memory_kb=", $r74);

        interfaceinvoke $r75.<java.util.Collection: boolean add(java.lang.Object)>($r76);

     label26:
        $r23 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        if $r23 == null goto label27;

        $r72 = (java.util.Collection) r1;

        $r71 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

        $r73 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_heapprofd_cpu_secs=", $r71);

        interfaceinvoke $r72.<java.util.Collection: boolean add(java.lang.Object)>($r73);

     label27:
        $r24 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        $r25 = (java.util.Collection) $r24;

        $z6 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>();

        if $z6 != 0 goto label28;

        $z38 = 1;

        goto label29;

     label28:
        $z38 = 0;

     label29:
        if $z38 == 0 goto label30;

        $r68 = (java.util.Collection) r1;

        $r67 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

        $r69 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r67);

        $r70 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("skip_symbol_prefix=", $r69);

        interfaceinvoke $r68.<java.util.Collection: boolean add(java.lang.Object)>($r70);

     label30:
        $r26 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        if $r26 == null goto label31;

        $r65 = (java.util.Collection) r1;

        $r64 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

        $r66 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("continuous_dump_config=", $r64);

        interfaceinvoke $r65.<java.util.Collection: boolean add(java.lang.Object)>($r66);

     label31:
        $r27 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        if $r27 == null goto label32;

        $r62 = (java.util.Collection) r1;

        $r61 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

        $r63 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("shmem_size_bytes=", $r61);

        interfaceinvoke $r62.<java.util.Collection: boolean add(java.lang.Object)>($r63);

     label32:
        $r28 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        if $r28 == null goto label33;

        $r59 = (java.util.Collection) r1;

        $r58 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

        $r60 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("block_client=", $r58);

        interfaceinvoke $r59.<java.util.Collection: boolean add(java.lang.Object)>($r60);

     label33:
        $r29 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        if $r29 == null goto label34;

        $r56 = (java.util.Collection) r1;

        $r55 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

        $r57 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("block_client_timeout_us=", $r55);

        interfaceinvoke $r56.<java.util.Collection: boolean add(java.lang.Object)>($r57);

     label34:
        $r30 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        if $r30 == null goto label35;

        $r53 = (java.util.Collection) r1;

        $r52 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

        $r54 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("no_startup=", $r52);

        interfaceinvoke $r53.<java.util.Collection: boolean add(java.lang.Object)>($r54);

     label35:
        $r31 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        if $r31 == null goto label36;

        $r50 = (java.util.Collection) r1;

        $r49 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

        $r51 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("no_running=", $r49);

        interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>($r51);

     label36:
        $r32 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        if $r32 == null goto label37;

        $r47 = (java.util.Collection) r1;

        $r46 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

        $r48 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("dump_at_max=", $r46);

        interfaceinvoke $r47.<java.util.Collection: boolean add(java.lang.Object)>($r48);

     label37:
        $r33 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        if $r33 == null goto label38;

        $r44 = (java.util.Collection) r1;

        $r43 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

        $r45 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_fork_teardown=", $r43);

        interfaceinvoke $r44.<java.util.Collection: boolean add(java.lang.Object)>($r45);

     label38:
        $r34 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        if $r34 == null goto label39;

        $r41 = (java.util.Collection) r1;

        $r40 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

        $r42 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_vfork_detection=", $r40);

        interfaceinvoke $r41.<java.util.Collection: boolean add(java.lang.Object)>($r42);

     label39:
        $r38 = (java.lang.Iterable) r1;

        $r37 = (java.lang.CharSequence) ", ";

        $r36 = (java.lang.CharSequence) "HeapprofdConfig{";

        $r35 = (java.lang.CharSequence) "}";

        $r39 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r38, $r37, $r36, $r35, 0, null, null, 56, null);

        return $r39;
    }

    public final perfetto.protos.HeapprofdConfig copy(java.lang.Long, java.lang.Long, java.lang.Long, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List, java.lang.Boolean, java.util.List, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Long, java.util.List, perfetto.protos.HeapprofdConfig$ContinuousDumpConfig, java.lang.Long, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, okio.ByteString)
    {
        perfetto.protos.HeapprofdConfig r0, $r27;
        java.lang.Long r1, r2, r3, r15, r18;
        java.util.List r4, r5, r6, r7, r8, r10, r16;
        java.lang.Boolean r9, r11, r12, r19, r21, r22, r23, r24, r25;
        java.lang.Integer r13, r14, r20;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r17;
        okio.ByteString r26;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: java.lang.Long;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: java.util.List;

        r9 := @parameter8: java.lang.Boolean;

        r10 := @parameter9: java.util.List;

        r11 := @parameter10: java.lang.Boolean;

        r12 := @parameter11: java.lang.Boolean;

        r13 := @parameter12: java.lang.Integer;

        r14 := @parameter13: java.lang.Integer;

        r15 := @parameter14: java.lang.Long;

        r16 := @parameter15: java.util.List;

        r17 := @parameter16: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r18 := @parameter17: java.lang.Long;

        r19 := @parameter18: java.lang.Boolean;

        r20 := @parameter19: java.lang.Integer;

        r21 := @parameter20: java.lang.Boolean;

        r22 := @parameter21: java.lang.Boolean;

        r23 := @parameter22: java.lang.Boolean;

        r24 := @parameter23: java.lang.Boolean;

        r25 := @parameter24: java.lang.Boolean;

        r26 := @parameter25: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "process_cmdline");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "pid");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "target_installed_by");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "heaps");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "exclude_heaps");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r10, "heap_sampling_intervals");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r16, "skip_symbol_prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r26, "unknownFields");

        $r27 = new perfetto.protos.HeapprofdConfig;

        specialinvoke $r27.<perfetto.protos.HeapprofdConfig: void <init>(java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26);

        return $r27;
    }

    public static perfetto.protos.HeapprofdConfig copy$default(perfetto.protos.HeapprofdConfig, java.lang.Long, java.lang.Long, java.lang.Long, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List, java.lang.Boolean, java.util.List, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Long, java.util.List, perfetto.protos.HeapprofdConfig$ContinuousDumpConfig, java.lang.Long, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.Object r1;
        java.lang.Long r3, r4, r5, r17, r20;
        java.util.List r6, r7, r8, r9, r10, r12, r18;
        java.lang.Boolean r11, r13, r14, r21, r23, r24, r25, r26, r27;
        java.lang.Integer r15, r16, r22;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r19;
        okio.ByteString r28;

        r0 := @parameter0: perfetto.protos.HeapprofdConfig;

        r3 := @parameter1: java.lang.Long;

        r4 := @parameter2: java.lang.Long;

        r5 := @parameter3: java.lang.Long;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: java.util.List;

        r8 := @parameter6: java.util.List;

        r9 := @parameter7: java.util.List;

        r10 := @parameter8: java.util.List;

        r11 := @parameter9: java.lang.Boolean;

        r12 := @parameter10: java.util.List;

        r13 := @parameter11: java.lang.Boolean;

        r14 := @parameter12: java.lang.Boolean;

        r15 := @parameter13: java.lang.Integer;

        r16 := @parameter14: java.lang.Integer;

        r17 := @parameter15: java.lang.Long;

        r18 := @parameter16: java.util.List;

        r19 := @parameter17: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r20 := @parameter18: java.lang.Long;

        r21 := @parameter19: java.lang.Boolean;

        r22 := @parameter20: java.lang.Integer;

        r23 := @parameter21: java.lang.Boolean;

        r24 := @parameter22: java.lang.Boolean;

        r25 := @parameter23: java.lang.Boolean;

        r26 := @parameter24: java.lang.Boolean;

        r27 := @parameter25: java.lang.Boolean;

        r28 := @parameter26: okio.ByteString;

        i0 := @parameter27: int;

        r1 := @parameter28: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r3 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long sampling_interval_bytes>;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r4 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_shmem_threshold>;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r5 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long adaptive_sampling_max_sampling_interval_bytes>;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r6 = r0.<perfetto.protos.HeapprofdConfig: java.util.List process_cmdline>;

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r7 = r0.<perfetto.protos.HeapprofdConfig: java.util.List pid>;

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r8 = r0.<perfetto.protos.HeapprofdConfig: java.util.List target_installed_by>;

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r9 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heaps>;

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r10 = r0.<perfetto.protos.HeapprofdConfig: java.util.List exclude_heaps>;

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r11 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean stream_allocations>;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r12 = r0.<perfetto.protos.HeapprofdConfig: java.util.List heap_sampling_intervals>;

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r13 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all_heaps>;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r14 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean all>;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r15 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer min_anonymous_memory_kb>;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r16 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer max_heapprofd_memory_kb>;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r17 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long max_heapprofd_cpu_secs>;

     label15:
        $i16 = i0 & 32768;

        if $i16 == 0 goto label16;

        r18 = r0.<perfetto.protos.HeapprofdConfig: java.util.List skip_symbol_prefix>;

     label16:
        $i17 = i0 & 65536;

        if $i17 == 0 goto label17;

        r19 = r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig continuous_dump_config>;

     label17:
        $i18 = i0 & 131072;

        if $i18 == 0 goto label18;

        r20 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Long shmem_size_bytes>;

     label18:
        $i19 = i0 & 262144;

        if $i19 == 0 goto label19;

        r21 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean block_client>;

     label19:
        $i20 = i0 & 524288;

        if $i20 == 0 goto label20;

        r22 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Integer block_client_timeout_us>;

     label20:
        $i21 = i0 & 1048576;

        if $i21 == 0 goto label21;

        r23 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_startup>;

     label21:
        $i22 = i0 & 2097152;

        if $i22 == 0 goto label22;

        r24 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean no_running>;

     label22:
        $i23 = i0 & 4194304;

        if $i23 == 0 goto label23;

        r25 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean dump_at_max>;

     label23:
        $i24 = i0 & 8388608;

        if $i24 == 0 goto label24;

        r26 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_fork_teardown>;

     label24:
        $i25 = i0 & 16777216;

        if $i25 == 0 goto label25;

        r27 = r0.<perfetto.protos.HeapprofdConfig: java.lang.Boolean disable_vfork_detection>;

     label25:
        $i26 = i0 & 33554432;

        if $i26 == 0 goto label26;

        r28 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

     label26:
        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig copy(java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString)>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.HeapprofdConfig r0;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        specialinvoke r0.<perfetto.protos.HeapprofdConfig: void <init>(java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 67108863, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.HeapprofdConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.HeapprofdConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.HeapprofdConfig$Companion $r3;
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.HeapprofdConfig$Companion;

        specialinvoke $r3.<perfetto.protos.HeapprofdConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/HeapprofdConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.HeapprofdConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.HeapprofdConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.HeapprofdConfig)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.HeapprofdConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58;
        java.lang.Long $r4, $r6, $r8, $r38, $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50;
        java.util.List $r11, $r14, $r17, $r20, $r23, $r28, $r41;
        java.lang.Boolean $r25, $r30, $r32, $r47, $r51, $r53, $r55, $r57, $r59;
        java.lang.Integer $r34, $r36, $r49;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r43;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.HeapprofdConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

        i25 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r4 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Long getSampling_interval_bytes()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i26 = i25 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r6 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Long getAdaptive_sampling_shmem_threshold()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(24, $r6);

        i27 = i26 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r8 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Long getAdaptive_sampling_max_sampling_interval_bytes()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(25, $r8);

        i28 = i27 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r10 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r11 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getProcess_cmdline()>();

        $i3 = virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r11);

        i29 = i28 + $i3;

        $r12 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r13 = virtualinvoke $r12.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r14 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getPid()>();

        $i4 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r14);

        i30 = i29 + $i4;

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r16 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r17 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getTarget_installed_by()>();

        $i5 = virtualinvoke $r16.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(26, $r17);

        i31 = i30 + $i5;

        $r18 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r19 = virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r20 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getHeaps()>();

        $i6 = virtualinvoke $r19.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(20, $r20);

        i32 = i31 + $i6;

        $r21 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r22 = virtualinvoke $r21.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r23 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getExclude_heaps()>();

        $i7 = virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(27, $r23);

        i33 = i32 + $i7;

        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r25 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getStream_allocations()>();

        $i8 = virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(23, $r25);

        i34 = i33 + $i8;

        $r26 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r27 = virtualinvoke $r26.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r28 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getHeap_sampling_intervals()>();

        $i9 = virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(22, $r28);

        i35 = i34 + $i9;

        $r29 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r30 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getAll_heaps()>();

        $i10 = virtualinvoke $r29.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(21, $r30);

        i36 = i35 + $i10;

        $r31 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r32 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getAll()>();

        $i11 = virtualinvoke $r31.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r32);

        i37 = i36 + $i11;

        $r33 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r34 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Integer getMin_anonymous_memory_kb()>();

        $i12 = virtualinvoke $r33.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(15, $r34);

        i38 = i37 + $i12;

        $r35 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r36 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Integer getMax_heapprofd_memory_kb()>();

        $i13 = virtualinvoke $r35.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(16, $r36);

        i39 = i38 + $i13;

        $r37 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r38 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Long getMax_heapprofd_cpu_secs()>();

        $i14 = virtualinvoke $r37.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(17, $r38);

        i40 = i39 + $i14;

        $r39 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r40 = virtualinvoke $r39.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r41 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.util.List getSkip_symbol_prefix()>();

        $i15 = virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(7, $r41);

        i41 = i40 + $i15;

        $r42 = <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r43 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig getContinuous_dump_config()>();

        $i16 = virtualinvoke $r42.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r43);

        i42 = i41 + $i16;

        $r44 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r45 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Long getShmem_size_bytes()>();

        $i17 = virtualinvoke $r44.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(8, $r45);

        i43 = i42 + $i17;

        $r46 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r47 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getBlock_client()>();

        $i18 = virtualinvoke $r46.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(9, $r47);

        i44 = i43 + $i18;

        $r48 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r49 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Integer getBlock_client_timeout_us()>();

        $i19 = virtualinvoke $r48.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(14, $r49);

        i45 = i44 + $i19;

        $r50 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r51 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getNo_startup()>();

        $i20 = virtualinvoke $r50.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(10, $r51);

        i46 = i45 + $i20;

        $r52 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r53 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getNo_running()>();

        $i21 = virtualinvoke $r52.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(11, $r53);

        i47 = i46 + $i21;

        $r54 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r55 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDump_at_max()>();

        $i22 = virtualinvoke $r54.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(13, $r55);

        i48 = i47 + $i22;

        $r56 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r57 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDisable_fork_teardown()>();

        $i23 = virtualinvoke $r56.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(18, $r57);

        i49 = i48 + $i23;

        $r58 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r59 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDisable_vfork_detection()>();

        $i24 = virtualinvoke $r58.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(19, $r59);

        i50 = i49 + $i24;

        return i50;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.HeapprofdConfig)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.HeapprofdConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58;
        java.lang.Long $r4, $r6, $r8, $r38, $r45;
        java.util.List $r11, $r14, $r17, $r20, $r23, $r28, $r41;
        java.lang.Boolean $r25, $r30, $r32, $r47, $r51, $r53, $r55, $r57, $r59;
        java.lang.Integer $r34, $r36, $r49;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r43;
        okio.ByteString $r60;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.HeapprofdConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r4 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Long getSampling_interval_bytes()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r6 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Long getAdaptive_sampling_shmem_threshold()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 24, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r8 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Long getAdaptive_sampling_max_sampling_interval_bytes()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 25, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r10 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r11 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getProcess_cmdline()>();

        virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r11);

        $r12 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r13 = virtualinvoke $r12.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r14 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getPid()>();

        virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r14);

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r16 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r17 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getTarget_installed_by()>();

        virtualinvoke $r16.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 26, $r17);

        $r18 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r19 = virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r20 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getHeaps()>();

        virtualinvoke $r19.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 20, $r20);

        $r21 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r22 = virtualinvoke $r21.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r23 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getExclude_heaps()>();

        virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 27, $r23);

        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r25 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getStream_allocations()>();

        virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 23, $r25);

        $r26 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r27 = virtualinvoke $r26.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r28 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getHeap_sampling_intervals()>();

        virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 22, $r28);

        $r29 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r30 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getAll_heaps()>();

        virtualinvoke $r29.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 21, $r30);

        $r31 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r32 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getAll()>();

        virtualinvoke $r31.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r32);

        $r33 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r34 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Integer getMin_anonymous_memory_kb()>();

        virtualinvoke $r33.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 15, $r34);

        $r35 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r36 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Integer getMax_heapprofd_memory_kb()>();

        virtualinvoke $r35.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 16, $r36);

        $r37 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r38 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Long getMax_heapprofd_cpu_secs()>();

        virtualinvoke $r37.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 17, $r38);

        $r39 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r40 = virtualinvoke $r39.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r41 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.util.List getSkip_symbol_prefix()>();

        virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 7, $r41);

        $r42 = <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r43 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig getContinuous_dump_config()>();

        virtualinvoke $r42.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r43);

        $r44 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r45 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Long getShmem_size_bytes()>();

        virtualinvoke $r44.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 8, $r45);

        $r46 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r47 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getBlock_client()>();

        virtualinvoke $r46.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 9, $r47);

        $r48 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r49 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Integer getBlock_client_timeout_us()>();

        virtualinvoke $r48.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 14, $r49);

        $r50 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r51 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getNo_startup()>();

        virtualinvoke $r50.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 10, $r51);

        $r52 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r53 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getNo_running()>();

        virtualinvoke $r52.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 11, $r53);

        $r54 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r55 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDump_at_max()>();

        virtualinvoke $r54.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 13, $r55);

        $r56 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r57 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDisable_fork_teardown()>();

        virtualinvoke $r56.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 18, $r57);

        $r58 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r59 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: java.lang.Boolean getDisable_vfork_detection()>();

        virtualinvoke $r58.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 19, $r59);

        $r60 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r60);

        return;
    }

    public perfetto.protos.HeapprofdConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r10;
        java.util.List r2, r3, r4, r5, r6, r7, r8;
        okio.ByteString r9;
        long l0;
        int i1, i2;
        java.util.ArrayList $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        com.squareup.wire.ProtoAdapter $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r47, $r49;
        java.lang.Object $r19, $r21, $r26, $r29, $r42, $r46, $r48, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86;
        perfetto.protos.HeapprofdConfig $r50;
        java.lang.Boolean $r51, $r52, $r53, $r54, $r55, $r57, $r63, $r64, $r65;
        java.lang.Integer $r56, $r61, $r62;
        java.lang.Long $r58, $r60, $r66, $r67, $r68;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r59;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r69 = null;

        r70 = null;

        r71 = null;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r5 = (java.util.List) $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r15;

        r72 = null;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r7 = (java.util.List) $r16;

        r73 = null;

        r74 = null;

        r75 = null;

        r76 = null;

        r77 = null;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r8 = (java.util.List) $r17;

        r78 = null;

        r79 = null;

        r80 = null;

        r81 = null;

        r82 = null;

        r83 = null;

        r84 = null;

        r85 = null;

        r86 = null;

        r10 = r1;

        l0 = virtualinvoke r10.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r10.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label30;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label28;
            case 4: goto label07;
            case 5: goto label14;
            case 6: goto label19;
            case 7: goto label18;
            case 8: goto label20;
            case 9: goto label21;
            case 10: goto label23;
            case 11: goto label24;
            case 12: goto label28;
            case 13: goto label25;
            case 14: goto label22;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label26;
            case 19: goto label27;
            case 20: goto label09;
            case 21: goto label13;
            case 22: goto label12;
            case 23: goto label11;
            case 24: goto label04;
            case 25: goto label05;
            case 26: goto label08;
            case 27: goto label10;
            default: goto label28;
        };

     label03:
        $r49 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r69 = virtualinvoke $r49.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label04:
        $r23 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r70 = virtualinvoke $r23.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label05:
        $r22 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r71 = virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label06:
        $r47 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r48 = virtualinvoke $r47.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r48);

        goto label29;

     label07:
        $r45 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r46 = virtualinvoke $r45.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r46);

        goto label29;

     label08:
        $r20 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r21 = virtualinvoke $r20.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label29;

     label09:
        $r28 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r29 = virtualinvoke $r28.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r29);

        goto label29;

     label10:
        $r18 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r19 = virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label29;

     label11:
        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r72 = virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label12:
        $r25 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r26 = virtualinvoke $r25.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label29;

     label13:
        $r27 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r73 = virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label14:
        $r44 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r74 = virtualinvoke $r44.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label15:
        $r34 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r75 = virtualinvoke $r34.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label16:
        $r33 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r76 = virtualinvoke $r33.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label17:
        $r32 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r77 = virtualinvoke $r32.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label18:
        $r41 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r42 = virtualinvoke $r41.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r42);

        goto label29;

     label19:
        $r43 = <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r78 = virtualinvoke $r43.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label20:
        $r40 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r79 = virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label21:
        $r39 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r80 = virtualinvoke $r39.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label22:
        $r35 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r81 = virtualinvoke $r35.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label23:
        $r38 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r82 = virtualinvoke $r38.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label24:
        $r37 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r83 = virtualinvoke $r37.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label25:
        $r36 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r84 = virtualinvoke $r36.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label26:
        $r31 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r85 = virtualinvoke $r31.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label27:
        $r30 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r86 = virtualinvoke $r30.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label29;

     label28:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label29:
        goto label01;

     label30:
        r9 = virtualinvoke r10.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r50 = new perfetto.protos.HeapprofdConfig;

        $r68 = (java.lang.Long) r69;

        $r67 = (java.lang.Long) r70;

        $r66 = (java.lang.Long) r71;

        $r65 = (java.lang.Boolean) r72;

        $r64 = (java.lang.Boolean) r73;

        $r63 = (java.lang.Boolean) r74;

        $r62 = (java.lang.Integer) r75;

        $r61 = (java.lang.Integer) r76;

        $r60 = (java.lang.Long) r77;

        $r59 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r78;

        $r58 = (java.lang.Long) r79;

        $r57 = (java.lang.Boolean) r80;

        $r56 = (java.lang.Integer) r81;

        $r55 = (java.lang.Boolean) r82;

        $r54 = (java.lang.Boolean) r83;

        $r53 = (java.lang.Boolean) r84;

        $r52 = (java.lang.Boolean) r85;

        $r51 = (java.lang.Boolean) r86;

        specialinvoke $r50.<perfetto.protos.HeapprofdConfig: void <init>(java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString)>($r68, $r67, $r66, r2, r3, r4, r5, r6, $r65, r7, $r64, $r63, $r62, $r61, $r60, r8, $r59, $r58, $r57, $r56, $r55, $r54, $r53, $r52, $r51, r9);

        return $r50;
    }

    public perfetto.protos.HeapprofdConfig redact(perfetto.protos.HeapprofdConfig)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.HeapprofdConfig r1, r5, $r10, $r11;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r2, r4, r6, $r7, $r12;
        com.squareup.wire.ProtoAdapter r3;
        java.lang.Object $r8;
        okio.ByteString $r9;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.HeapprofdConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r11 = r1;

        $r7 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig getContinuous_dump_config()>();

        if $r7 != null goto label1;

        $r12 = null;

        goto label2;

     label1:
        r2 = $r7;

        r3 = <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r4 = r2;

        r5 = r1;

        $r8 = virtualinvoke r3.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r4);

        r6 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) $r8;

        $r11 = r5;

        $r12 = r6;

     label2:
        $r9 = <okio.ByteString: okio.ByteString EMPTY>;

        $r10 = staticinvoke <perfetto.protos.HeapprofdConfig: perfetto.protos.HeapprofdConfig copy$default(perfetto.protos.HeapprofdConfig,java.lang.Long,java.lang.Long,java.lang.Long,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Long,java.util.List,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Long,java.lang.Boolean,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,okio.ByteString,int,java.lang.Object)>($r11, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, $r12, null, null, null, null, null, null, null, null, $r9, 33488895, null);

        return $r10;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.HeapprofdConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.HeapprofdConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.HeapprofdConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.HeapprofdConfig $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.HeapprofdConfig) r2;

        virtualinvoke r0.<perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.HeapprofdConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.HeapprofdConfig $r2;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1: perfetto.protos.HeapprofdConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.HeapprofdConfig $r2, $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.HeapprofdConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$Companion$ADAPTER$1: perfetto.protos.HeapprofdConfig redact(perfetto.protos.HeapprofdConfig)>($r2);

        return $r3;
    }

perfetto.protos.HeapprofdConfig$Companion
    private void <init>()
    {
        perfetto.protos.HeapprofdConfig$Companion r0;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.HeapprofdConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.HeapprofdConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.HeapprofdConfig.ContinuousDumpConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5;
        java.lang.Integer $r4, $r6;
        int $i0, $i1, i2, i3, i4;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

        i2 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer getDump_phase_ms()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r4);

        i3 = i2 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r1.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer getDump_interval_ms()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r6);

        i4 = i3 + $i1;

        return i4;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5;
        java.lang.Integer $r4, $r6;
        okio.ByteString $r7;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer getDump_phase_ms()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer getDump_interval_ms()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r6);

        $r7 = virtualinvoke r2.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r7);

        return;
    }

    public perfetto.protos.HeapprofdConfig$ContinuousDumpConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r6;
        java.lang.Integer $r7, $r8;
        java.lang.Object r9, r10;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r9 = null;

        r10 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label7;

     label2:
        i2 = i1;

        tableswitch(i2)
        {
            case 5: goto label3;
            case 6: goto label4;
            default: goto label5;
        };

     label3:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r9 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label6;

     label4:
        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r10 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label6;

     label5:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label6:
        goto label1;

     label7:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r6 = new perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r8 = (java.lang.Integer) r9;

        $r7 = (java.lang.Integer) r10;

        specialinvoke $r6.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: void <init>(java.lang.Integer,java.lang.Integer,okio.ByteString)>($r8, $r7, r2);

        return $r6;
    }

    public perfetto.protos.HeapprofdConfig$ContinuousDumpConfig redact(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig copy$default(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig,java.lang.Integer,java.lang.Integer,okio.ByteString,int,java.lang.Object)>(r1, null, null, $r2, 3, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r2;

        virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r2;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig $r2, $r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig redact(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig)>($r2);

        return $r3;
    }

perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion
    private void <init>()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion r0;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.HeapprofdConfig$ContinuousDumpConfig
<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion Companion>
<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>
<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>
<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: long serialVersionUID>
    public void <init>(java.lang.Integer, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.lang.Integer r1, r2;
        okio.ByteString r3;
        com.squareup.wire.ProtoAdapter $r4;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "unknownFields");

        $r4 = <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r4, r3);

        r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms> = r1;

        r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms> = r2;

        return;
    }

    public void <init>(java.lang.Integer, java.lang.Integer, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Integer r2, r3;
        okio.ByteString r4;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r2 := @parameter0: java.lang.Integer;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = <okio.ByteString: okio.ByteString EMPTY>;

     label3:
        specialinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: void <init>(java.lang.Integer,java.lang.Integer,okio.ByteString)>(r2, r3, r4);

        return;
    }

    public final java.lang.Integer getDump_phase_ms()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        return $r1;
    }

    public final java.lang.Integer getDump_interval_ms()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r1 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0, $r3, $r5, $r8;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        okio.ByteString $r2, $r4;
        java.lang.Integer $r6, $r7, $r9, $r10;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        $r5 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r1;

        $r6 = $r5.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        $r8 = (perfetto.protos.HeapprofdConfig$ContinuousDumpConfig) r1;

        $r9 = $r8.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        okio.ByteString $r1;
        java.lang.Integer $r2, $r3;
        int $i0, $i1, i2, i3, $i4, i5, $i6;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        i2 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: int hashCode>;

        if i2 != 0 goto label5;

        $r1 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i3 * 37;

        $r2 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        if $r2 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i5 = $i0 + $i4;

        $i1 = i5 * 37;

        $r3 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $i6 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label4:
        i2 = $i1 + $i6;

        r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: int hashCode> = i2;

     label5:
        return i2;
    }

    public java.lang.String toString()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r4, $r10, $r13;
        java.lang.CharSequence $r5, $r6, $r7;
        java.lang.Iterable $r8;
        java.lang.String $r9, $r12, $r15;
        java.util.Collection $r11, $r14;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        if $r3 == null goto label1;

        $r14 = (java.util.Collection) r1;

        $r13 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

        $r15 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("dump_phase_ms=", $r13);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r15);

     label1:
        $r4 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        if $r4 == null goto label2;

        $r11 = (java.util.Collection) r1;

        $r10 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("dump_interval_ms=", $r10);

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r12);

     label2:
        $r8 = (java.lang.Iterable) r1;

        $r7 = (java.lang.CharSequence) ", ";

        $r6 = (java.lang.CharSequence) "ContinuousDumpConfig{";

        $r5 = (java.lang.CharSequence) "}";

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r8, $r7, $r6, $r5, 0, null, null, 56, null);

        return $r9;
    }

    public final perfetto.protos.HeapprofdConfig$ContinuousDumpConfig copy(java.lang.Integer, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0, $r4;
        java.lang.Integer r1, r2;
        okio.ByteString r3;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "unknownFields");

        $r4 = new perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        specialinvoke $r4.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: void <init>(java.lang.Integer,java.lang.Integer,okio.ByteString)>(r1, r2, r3);

        return $r4;
    }

    public static perfetto.protos.HeapprofdConfig$ContinuousDumpConfig copy$default(perfetto.protos.HeapprofdConfig$ContinuousDumpConfig, java.lang.Integer, java.lang.Integer, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Integer r3, r4;
        okio.ByteString r5;

        r0 := @parameter0: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: okio.ByteString;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_phase_ms>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Integer dump_interval_ms>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: okio.ByteString unknownFields()>();

     label3:
        $r2 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig copy(java.lang.Integer,java.lang.Integer,okio.ByteString)>(r3, r4, r5);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        specialinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: void <init>(java.lang.Integer,java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, 7, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion $r3;
        perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion;

        specialinvoke $r3.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/HeapprofdConfig$ContinuousDumpConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.HeapprofdConfig$ContinuousDumpConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.HeapprofdConfig$ContinuousDumpConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

