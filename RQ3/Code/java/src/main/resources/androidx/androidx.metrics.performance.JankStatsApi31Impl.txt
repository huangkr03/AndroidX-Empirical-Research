androidx.metrics.performance.JankStatsApi31Impl
<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 frameData>
    public void <init>(androidx.metrics.performance.JankStats, android.view.View, android.view.Window)
    {
        androidx.metrics.performance.JankStatsApi31Impl r0;
        androidx.metrics.performance.JankStats r1;
        android.view.View r2;
        android.view.Window r3;
        androidx.metrics.performance.FrameDataApi31 $r4;
        java.util.List $r5;

        r0 := @this: androidx.metrics.performance.JankStatsApi31Impl;

        r1 := @parameter0: androidx.metrics.performance.JankStats;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.Window;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jankStats");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "window");

        specialinvoke r0.<androidx.metrics.performance.JankStatsApi26Impl: void <init>(androidx.metrics.performance.JankStats,android.view.View,android.view.Window)>(r1, r2, r3);

        $r4 = new androidx.metrics.performance.FrameDataApi31;

        $r5 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: java.util.List getStateInfo()>();

        specialinvoke $r4.<androidx.metrics.performance.FrameDataApi31: void <init>(long,long,long,long,boolean,java.util.List)>(0L, 0L, 0L, 0L, 0, $r5);

        r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 frameData> = $r4;

        return;
    }

    public final androidx.metrics.performance.FrameDataApi31 getFrameData()
    {
        androidx.metrics.performance.JankStatsApi31Impl r0;
        androidx.metrics.performance.FrameDataApi31 $r1;

        r0 := @this: androidx.metrics.performance.JankStatsApi31Impl;

        $r1 = r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 frameData>;

        return $r1;
    }

    public androidx.metrics.performance.FrameDataApi31 getFrameData$metrics_performance_release(long, long, android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi31Impl r0;
        long l0, l1, l2, l3, l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l17, $l18, $l19, $l20, $l21, $l22;
        android.view.FrameMetrics r1;
        boolean z0, $z1;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r2;
        androidx.metrics.performance.PerformanceMetricsState $r3;
        byte $b16;
        androidx.metrics.performance.FrameDataApi31 $r4, $r5;
        java.util.List $r6;

        r0 := @this: androidx.metrics.performance.JankStatsApi31Impl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameMetrics");

        $l5 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(0);

        $l6 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(1);

        $l7 = $l5 + $l6;

        $l8 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(2);

        $l9 = $l7 + $l8;

        $l10 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(3);

        $l11 = $l9 + $l10;

        $l12 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(4);

        $l13 = $l11 + $l12;

        $l14 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(5);

        l2 = $l13 + $l14;

        $l15 = l0 + l2;

        virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: void setPrevEnd(long)>($l15);

        $r2 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.PerformanceMetricsState$Holder getMetricsStateHolder()>();

        $r3 = virtualinvoke $r2.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState getState()>();

        if $r3 == null goto label1;

        $l22 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: long getPrevEnd()>();

        $r6 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: java.util.List getStateInfo()>();

        virtualinvoke $r3.<androidx.metrics.performance.PerformanceMetricsState: void getIntervalStates$metrics_performance_release(long,long,java.util.List)>(l0, $l22, $r6);

        goto label1;

     label1:
        $b16 = l2 cmp l1;

        if $b16 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        $l17 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(6);

        $l18 = l2 + $l17;

        $l19 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(7);

        l3 = $l18 + $l19;

        $l20 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(8);

        $l21 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(13);

        l4 = $l20 - $l21;

        $r4 = r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 frameData>;

        virtualinvoke $r4.<androidx.metrics.performance.FrameDataApi31: void update$metrics_performance_release(long,long,long,long,boolean)>(l0, l2, l3, l4, z0);

        $r5 = r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 frameData>;

        return $r5;
    }

    public long getExpectedFrameDuration(android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi31Impl r0;
        android.view.FrameMetrics r1;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi31Impl;

        r1 := @parameter0: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metrics");

        $l0 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(13);

        return $l0;
    }

    public volatile androidx.metrics.performance.FrameDataApi24 getFrameData$metrics_performance_release(long, long, android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi31Impl r0;
        long l0, l1;
        android.view.FrameMetrics r1;
        androidx.metrics.performance.FrameDataApi31 $r2;
        androidx.metrics.performance.FrameDataApi24 $r3;

        r0 := @this: androidx.metrics.performance.JankStatsApi31Impl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.view.FrameMetrics;

        $r2 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi31Impl: androidx.metrics.performance.FrameDataApi31 getFrameData$metrics_performance_release(long,long,android.view.FrameMetrics)>(l0, l1, r1);

        $r3 = (androidx.metrics.performance.FrameDataApi24) $r2;

        return $r3;
    }

