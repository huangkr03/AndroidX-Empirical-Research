androidx.room.compiler.processing.javac.JavacFiler
<androidx.room.compiler.processing.javac.JavacFiler: androidx.room.compiler.processing.XProcessingEnv processingEnv>
<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer delegate>
    public void <init>(androidx.room.compiler.processing.XProcessingEnv, javax.'annotation'.processing.Filer)
    {
        androidx.room.compiler.processing.javac.JavacFiler r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        javax.'annotation'.processing.Filer r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacFiler;

        r1 := @parameter0: androidx.room.compiler.processing.XProcessingEnv;

        r2 := @parameter1: javax.'annotation'.processing.Filer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "processingEnv");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "delegate");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.javac.JavacFiler: androidx.room.compiler.processing.XProcessingEnv processingEnv> = r1;

        r0.<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer delegate> = r2;

        return;
    }

    public final javax.'annotation'.processing.Filer getDelegate()
    {
        androidx.room.compiler.processing.javac.JavacFiler r0;
        javax.'annotation'.processing.Filer $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacFiler;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer delegate>;

        return $r1;
    }

    public void write(com.squareup.javapoet.JavaFile, androidx.room.compiler.processing.XFiler$Mode)
    {
        androidx.room.compiler.processing.javac.JavacFiler r0;
        com.squareup.javapoet.JavaFile r1;
        androidx.room.compiler.processing.XFiler$Mode r2;
        javax.'annotation'.processing.Filer $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacFiler;

        r1 := @parameter0: com.squareup.javapoet.JavaFile;

        r2 := @parameter1: androidx.room.compiler.processing.XFiler$Mode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "javaFile");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mode");

        $r3 = r0.<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer delegate>;

        virtualinvoke r1.<com.squareup.javapoet.JavaFile: void writeTo(javax.'annotation'.processing.Filer)>($r3);

        return;
    }

    public void write(com.squareup.kotlinpoet.FileSpec, androidx.room.compiler.processing.XFiler$Mode)
    {
        androidx.room.compiler.processing.javac.JavacFiler r0;
        com.squareup.kotlinpoet.FileSpec r1;
        androidx.room.compiler.processing.XFiler$Mode r2;
        java.lang.String r3, $r7, $r12, $r16, $r17;
        androidx.room.compiler.processing.XProcessingEnv $r4;
        java.util.Map $r5;
        boolean $z0;
        javax.'annotation'.processing.Filer $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: androidx.room.compiler.processing.javac.JavacFiler;

        r1 := @parameter0: com.squareup.kotlinpoet.FileSpec;

        r2 := @parameter1: androidx.room.compiler.processing.XFiler$Mode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fileSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mode");

        $r4 = r0.<androidx.room.compiler.processing.javac.JavacFiler: androidx.room.compiler.processing.XProcessingEnv processingEnv>;

        $r5 = interfaceinvoke $r4.<androidx.room.compiler.processing.XProcessingEnv: java.util.Map getOptions()>();

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("kapt.kotlin.generated");

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r1.<com.squareup.kotlinpoet.FileSpec: java.lang.String getPackageName()>();

        r3 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r7, 46, 47, 0, 4, null);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not generate kotlin file ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r12 = virtualinvoke r1.<com.squareup.kotlinpoet.FileSpec: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".kt. The annotation processing environment is not set to generate Kotlin files.");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label1:
        $r6 = r0.<androidx.room.compiler.processing.javac.JavacFiler: javax.'annotation'.processing.Filer delegate>;

        virtualinvoke r1.<com.squareup.kotlinpoet.FileSpec: void writeTo(javax.'annotation'.processing.Filer)>($r6);

        return;
    }

