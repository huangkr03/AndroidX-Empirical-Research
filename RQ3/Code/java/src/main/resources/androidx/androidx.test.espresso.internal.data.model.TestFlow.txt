androidx.test.espresso.internal.data.model.TestFlow
<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>
<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail>
<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData>
    public final int getSize()
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public final androidx.test.espresso.internal.data.model.ActionData getEdge(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.internal.data.model.ScreenData $r0, r6, r7;
        java.util.List $r1, $r2;
        boolean $z0, z1;
        java.lang.Object $r3;
        java.lang.Integer $r4, r9;
        androidx.test.espresso.internal.data.model.TestFlow r5;
        androidx.test.espresso.internal.data.model.ActionData r8;
        java.util.Collection r10;

        r5 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        i0 := @parameter0: int;

        $r0 = r5.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>;

        if $r0 != null goto label1;

        return null;

     label1:
        r6 = r5.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r6);

        virtualinvoke r5.<androidx.test.espresso.internal.data.model.TestFlow: void resetTraversal()>();

        r7 = r6;

     label2:
        $r1 = virtualinvoke r7.<androidx.test.espresso.internal.data.model.ScreenData: java.util.List getActions()>();

        r10 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        z1 = 1;

     label3:
        if z1 == 0 goto label6;

        $r2 = virtualinvoke r7.<androidx.test.espresso.internal.data.model.ScreenData: java.util.List getActions()>();

        $i1 = virtualinvoke r7.<androidx.test.espresso.internal.data.model.ScreenData: int getActionIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        r8 = (androidx.test.espresso.internal.data.model.ActionData) $r3;

        $i2 = virtualinvoke r7.<androidx.test.espresso.internal.data.model.ScreenData: int getActionIndex()>();

        $i3 = $i2 + 1;

        virtualinvoke r7.<androidx.test.espresso.internal.data.model.ScreenData: void setActionIndex(int)>($i3);

        $r4 = virtualinvoke r8.<androidx.test.espresso.internal.data.model.ActionData: java.lang.Integer getIndex()>();

        if $r4 == null goto label4;

        r9 = virtualinvoke r8.<androidx.test.espresso.internal.data.model.ActionData: java.lang.Integer getIndex()>();

        if r9 != null goto label5;

     label4:
        r7 = virtualinvoke r8.<androidx.test.espresso.internal.data.model.ActionData: androidx.test.espresso.internal.data.model.ScreenData getDest()>();

        goto label2;

     label5:
        $i4 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if i0 != $i4 goto label4;

        return r8;

     label6:
        return null;

     label7:
        z1 = 0;

        goto label3;
    }

    public final androidx.test.espresso.internal.data.model.ScreenData getHead()
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>;

        return $r1;
    }

    public final androidx.test.espresso.internal.data.model.ScreenData getTail()
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail>;

        return $r1;
    }

    public void <init>()
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        java.util.ArrayList r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData> = r1;

        return;
    }

    public final void addScreen(androidx.test.espresso.internal.data.model.ScreenData)
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData r1, r2, r4, $r6;
        androidx.test.espresso.internal.data.model.ActionData r3;
        java.util.ArrayList $r5;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        r1 := @parameter0: androidx.test.espresso.internal.data.model.ScreenData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "screen");

        $r5 = r0.<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>;

        if $r6 != null goto label1;

        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head> = r1;

     label1:
        r2 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail>;

        if r2 == null goto label2;

        r3 = new androidx.test.espresso.internal.data.model.ActionData;

        r4 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        specialinvoke r3.<androidx.test.espresso.internal.data.model.ActionData: void <init>(androidx.test.espresso.internal.data.model.ScreenData,androidx.test.espresso.internal.data.model.ScreenData)>(r4, r1);

        virtualinvoke r2.<androidx.test.espresso.internal.data.model.ScreenData: void addAction(androidx.test.espresso.internal.data.model.ActionData)>(r3);

     label2:
        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail> = r1;

        return;
    }

    public final void addScreen(androidx.test.espresso.internal.data.model.ScreenData, androidx.test.espresso.internal.data.model.ActionData)
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData r1, r3, $r5;
        androidx.test.espresso.internal.data.model.ActionData r2;
        java.util.ArrayList $r4;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        r1 := @parameter0: androidx.test.espresso.internal.data.model.ScreenData;

        r2 := @parameter1: androidx.test.espresso.internal.data.model.ActionData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "screen");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "action");

        $r4 = r0.<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head>;

        if $r5 != null goto label1;

        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head> = r1;

     label1:
        r3 = r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        virtualinvoke r3.<androidx.test.espresso.internal.data.model.ScreenData: void addAction(androidx.test.espresso.internal.data.model.ActionData)>(r2);

        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail> = r1;

        return;
    }

    public final void resetTraversal()
    {
        java.util.ArrayList $r0;
        boolean $z0;
        java.lang.Object $r1;
        androidx.test.espresso.internal.data.model.ScreenData $r2;
        androidx.test.espresso.internal.data.model.TestFlow r3;
        java.util.Iterator r4;

        r3 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        $r0 = r3.<androidx.test.espresso.internal.data.model.TestFlow: java.util.ArrayList allScreenData>;

        r4 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (androidx.test.espresso.internal.data.model.ScreenData) $r1;

        virtualinvoke $r2.<androidx.test.espresso.internal.data.model.ScreenData: void setActionIndex(int)>(0);

        goto label1;

     label2:
        return;
    }

    public final void setHead(androidx.test.espresso.internal.data.model.ScreenData)
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        r1 := @parameter0: androidx.test.espresso.internal.data.model.ScreenData;

        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData head> = r1;

        return;
    }

    public final void setTail(androidx.test.espresso.internal.data.model.ScreenData)
    {
        androidx.test.espresso.internal.data.model.TestFlow r0;
        androidx.test.espresso.internal.data.model.ScreenData r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestFlow;

        r1 := @parameter0: androidx.test.espresso.internal.data.model.ScreenData;

        r0.<androidx.test.espresso.internal.data.model.TestFlow: androidx.test.espresso.internal.data.model.ScreenData tail> = r1;

        return;
    }

