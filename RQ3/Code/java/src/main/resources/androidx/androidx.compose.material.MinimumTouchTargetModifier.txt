androidx.compose.material.MinimumTouchTargetModifier
<androidx.compose.material.MinimumTouchTargetModifier: long size>
    private void <init>(long)
    {
        androidx.compose.material.MinimumTouchTargetModifier r0;
        long l0;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.MinimumTouchTargetModifier: long size> = l0;

        return;
    }

    public final long getSize-MYxV2XQ()
    {
        androidx.compose.material.MinimumTouchTargetModifier r0;
        long $l0;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        $l0 = r0.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        return $l0;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable, long)
    {
        androidx.compose.material.MinimumTouchTargetModifier r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        androidx.compose.ui.layout.Measurable r2;
        long l0, $l4, $l7;
        androidx.compose.ui.layout.Placeable r3;
        int i1, i2, $i3, $i5, $i6, $i8;
        float $f0, $f1;
        androidx.compose.material.MinimumTouchTargetModifier$measure$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.compose.ui.layout.MeasureResult $r6;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.Measurable;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        r3 = interfaceinvoke r2.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        $i3 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $l4 = r0.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        $f0 = staticinvoke <androidx.compose.ui.unit.DpSize: float getWidth-D9Ej5fM(long)>($l4);

        $i5 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: int roundToPx-0680j_4(float)>($f0);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i5);

        $i6 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        $l7 = r0.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        $f1 = staticinvoke <androidx.compose.ui.unit.DpSize: float getHeight-D9Ej5fM(long)>($l7);

        $i8 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: int roundToPx-0680j_4(float)>($f1);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i8);

        $r4 = new androidx.compose.material.MinimumTouchTargetModifier$measure$1;

        specialinvoke $r4.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: void <init>(int,androidx.compose.ui.layout.Placeable,int)>(i1, r3, i2);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, i1, i2, null, $r5, 4, null);

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.material.MinimumTouchTargetModifier r0, r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.material.MinimumTouchTargetModifier;

        if $z0 == 0 goto label1;

        $r3 = (androidx.compose.material.MinimumTouchTargetModifier) r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 != null goto label3;

        return 0;

     label3:
        r2 = $r3;

        $l1 = r0.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        $l0 = r2.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        $z1 = staticinvoke <androidx.compose.ui.unit.DpSize: boolean equals-impl0(long,long)>($l1, $l0);

        return $z1;
    }

    public int hashCode()
    {
        androidx.compose.material.MinimumTouchTargetModifier r0;
        long $l0;
        int $i1;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        $l0 = r0.<androidx.compose.material.MinimumTouchTargetModifier: long size>;

        $i1 = staticinvoke <androidx.compose.ui.unit.DpSize: int hashCode-impl(long)>($l0);

        return $i1;
    }

    public void <init>(long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material.MinimumTouchTargetModifier r0;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier;

        l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material.MinimumTouchTargetModifier: void <init>(long)>(l0);

        return;
    }

androidx.compose.material.MinimumTouchTargetModifier$measure$1
<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $width>
<androidx.compose.material.MinimumTouchTargetModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>
<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $height>
    void <init>(int, androidx.compose.ui.layout.Placeable, int)
    {
        androidx.compose.material.MinimumTouchTargetModifier$measure$1 r0;
        int $i0, $i1;
        androidx.compose.ui.layout.Placeable $r1;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier$measure$1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.compose.ui.layout.Placeable;

        $i1 := @parameter2: int;

        r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $width> = $i0;

        r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable> = $r1;

        r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $height> = $i1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.material.MinimumTouchTargetModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.ui.layout.Placeable $r2, $r3, $r4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $i2 = r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $width>;

        $r2 = r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        $i3 = virtualinvoke $r2.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i4 = $i2 - $i3;

        $f0 = (float) $i4;

        $f1 = $f0 / 2.0F;

        i0 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $i5 = r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: int $height>;

        $r3 = r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        $i6 = virtualinvoke $r3.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        $i7 = $i5 - $i6;

        $f2 = (float) $i7;

        $f3 = $f2 / 2.0F;

        i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f3);

        $r4 = r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r1, $r4, i0, i1, 0.0F, 4, null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.material.MinimumTouchTargetModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.material.MinimumTouchTargetModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.material.MinimumTouchTargetModifier$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

