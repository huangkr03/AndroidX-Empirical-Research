androidx.compose.ui.text.font.AsyncFontListLoader
<androidx.compose.ui.text.font.AsyncFontListLoader: java.util.List fontList>
<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.TypefaceRequest typefaceRequest>
<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.AsyncTypefaceCache asyncTypefaceCache>
<androidx.compose.ui.text.font.AsyncFontListLoader: kotlin.jvm.functions.Function1 onCompletion>
<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>
<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.runtime.MutableState value$delegate>
<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable>
    public void <init>(java.util.List, java.lang.Object, androidx.compose.ui.text.font.TypefaceRequest, androidx.compose.ui.text.font.AsyncTypefaceCache, kotlin.jvm.functions.Function1, androidx.compose.ui.text.font.PlatformFontLoader)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        java.util.List r1;
        java.lang.Object r2;
        androidx.compose.ui.text.font.TypefaceRequest r3;
        androidx.compose.ui.text.font.AsyncTypefaceCache r4;
        kotlin.jvm.functions.Function1 r5;
        androidx.compose.ui.text.font.PlatformFontLoader r6;
        androidx.compose.runtime.MutableState $r7;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.compose.ui.text.font.TypefaceRequest;

        r4 := @parameter3: androidx.compose.ui.text.font.AsyncTypefaceCache;

        r5 := @parameter4: kotlin.jvm.functions.Function1;

        r6 := @parameter5: androidx.compose.ui.text.font.PlatformFontLoader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fontList");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "typefaceRequest");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "asyncTypefaceCache");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "onCompletion");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "platformFontLoader");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: java.util.List fontList> = r1;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.TypefaceRequest typefaceRequest> = r3;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.AsyncTypefaceCache asyncTypefaceCache> = r4;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: kotlin.jvm.functions.Function1 onCompletion> = r5;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader> = r6;

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r2, null, 2, null);

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.runtime.MutableState value$delegate> = $r7;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable> = 1;

        return;
    }

    public java.lang.Object getValue()
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r2 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.runtime.MutableState value$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    private void setValue(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.runtime.MutableState value$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final boolean getCacheable$ui_text_release()
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        $z0 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable>;

        return $z0;
    }

    public final void setCacheable$ui_text_release(boolean)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable> = z0;

        return;
    }

    public final java.lang.Object load(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r53, r54, r55, r56, r57;
        java.lang.Object r1, r2, $r4, r5, $r7, $r8, $r12, $r20, $r25, $r29, $r31, $r32, $r33, $r39, $r45;
        kotlin.Unit r3, $r14;
        boolean z0, $z1, $z2, z3, z5, $z7, z9, $z10, $z11, z12, $z13;
        kotlin.coroutines.CoroutineContext $r9, $r26, $r36;
        kotlin.jvm.functions.Function1 $r11, $r19, $r28, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion $r15;
        androidx.compose.ui.text.font.AsyncTypefaceCache $r17;
        androidx.compose.ui.text.font.PlatformFontLoader $r18;
        androidx.compose.ui.text.font.TypefaceRequest $r21, $r22, $r24;
        androidx.compose.ui.text.font.FontWeight $r23;
        java.lang.Throwable $r35;
        androidx.compose.ui.text.font.AsyncFontListLoader r41;
        androidx.compose.ui.text.font.AsyncFontListLoader$load$1 $r42, r47;
        java.util.List $r43;
        androidx.compose.ui.text.font.Font r44;
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r48;
        androidx.compose.ui.text.font.TypefaceResult$Immutable r49, r50, r51;
        java.lang.IllegalStateException r52;

        r41 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z1 = r0 instanceof androidx.compose.ui.text.font.AsyncFontListLoader$load$1;

        if $z1 == 0 goto label01;

        $r42 = (androidx.compose.ui.text.font.AsyncFontListLoader$load$1) r0;

        $i4 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label>;

        $i5 = $i4 & -2147483648;

        if $i5 == 0 goto label01;

        $i6 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label>;

        $i7 = $i6 - -2147483648;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label> = $i7;

        goto label02;

     label01:
        r47 = new androidx.compose.ui.text.font.AsyncFontListLoader$load$1;

        specialinvoke r47.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,kotlin.coroutines.Continuation)>(r41, r0);

        $r42 = r47;

     label02:
        $r4 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i8 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label>;

        tableswitch($i8)
        {
            case 0: goto label03;
            case 1: goto label07;
            case 2: goto label15;
            default: goto label26;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label04:
        $r43 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: java.util.List fontList>;

        z3 = 0;

        i9 = 0;

        i10 = interfaceinvoke $r43.<java.util.List: int size()>();

     label05:
        if i9 >= i10 goto label18;

        r1 = interfaceinvoke $r43.<java.util.List: java.lang.Object get(int)>(i9);

        r44 = (androidx.compose.ui.text.font.Font) r1;

        $i0 = interfaceinvoke r44.<androidx.compose.ui.text.font.Font: int getLoadingStrategy-PKNRLFQ()>();

        $r15 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i1 = virtualinvoke $r15.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getAsync-PKNRLFQ()>();

        $z2 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>($i0, $i1);

        if $z2 == 0 goto label17;

        $r17 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.AsyncTypefaceCache asyncTypefaceCache>;

        $r18 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        r48 = new androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        specialinvoke r48.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>(r41, r44, null);

        $r19 = (kotlin.jvm.functions.Function1) r48;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$0> = r41;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$1> = $r43;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$2> = r44;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$0> = i9;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$1> = i10;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label> = 1;

        r53 = (kotlin.coroutines.Continuation) $r42;

        $r45 = virtualinvoke $r17.<androidx.compose.ui.text.font.AsyncTypefaceCache: java.lang.Object runCached(androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.PlatformFontLoader,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r44, $r18, 0, $r19, r53);

     label06:
        if $r45 != r5 goto label09;

        return r5;

     label07:
        z5 = 0;

        i10 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$1>;

        i9 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$0>;

        $r31 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$2>;

        r44 = (androidx.compose.ui.text.font.Font) $r31;

        $r32 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$1>;

        $r43 = (java.util.List) $r32;

        $r33 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$0>;

        r41 = (androidx.compose.ui.text.font.AsyncFontListLoader) $r33;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r45 = $r4;

     label09:
        r2 = $r45;

        if r2 == null goto label13;

        $r21 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.TypefaceRequest typefaceRequest>;

        $i2 = virtualinvoke $r21.<androidx.compose.ui.text.font.TypefaceRequest: int getFontSynthesis-GVVA2EU()>();

        $r22 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.TypefaceRequest typefaceRequest>;

        $r23 = virtualinvoke $r22.<androidx.compose.ui.text.font.TypefaceRequest: androidx.compose.ui.text.font.FontWeight getFontWeight()>();

        $r24 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.TypefaceRequest typefaceRequest>;

        $i3 = virtualinvoke $r24.<androidx.compose.ui.text.font.TypefaceRequest: int getFontStyle-_-LCdwA()>();

        $r25 = staticinvoke <androidx.compose.ui.text.font.FontSynthesis_androidKt: java.lang.Object synthesizeTypeface-FxwP2eA(int,java.lang.Object,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.FontWeight,int)>($i2, r2, r44, $r23, $i3);

        specialinvoke r41.<androidx.compose.ui.text.font.AsyncFontListLoader: void setValue(java.lang.Object)>($r25);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label10:
        r54 = (kotlin.coroutines.Continuation) $r42;

        $r26 = interfaceinvoke r54.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z0 = staticinvoke <kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)>($r26);

        r41.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable> = 0;

        $r28 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: kotlin.jvm.functions.Function1 onCompletion>;

        r49 = new androidx.compose.ui.text.font.TypefaceResult$Immutable;

        $r29 = virtualinvoke r41.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object getValue()>();

        if z0 == 0 goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        specialinvoke r49.<androidx.compose.ui.text.font.TypefaceResult$Immutable: void <init>(java.lang.Object,boolean)>($r29, $z7);

        interfaceinvoke $r28.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r49);

        return r3;

     label13:
        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$0> = r41;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$1> = $r43;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$2> = null;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$0> = i9;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$1> = i10;

        $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label> = 2;

        r55 = (kotlin.coroutines.Continuation) $r42;

        $r20 = staticinvoke <kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)>(r55);

     label14:
        if $r20 != r5 goto label17;

        return r5;

     label15:
        z9 = 0;

        i10 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$1>;

        i9 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$0>;

        $r7 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$1>;

        $r43 = (java.util.List) $r7;

        $r8 = $r42.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$0>;

        r41 = (androidx.compose.ui.text.font.AsyncFontListLoader) $r8;

     label16:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label17:
        i9 = i9 + 1;

        goto label05;

     label18:
        r56 = (kotlin.coroutines.Continuation) $r42;

        $r9 = interfaceinvoke r56.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $z10 = staticinvoke <kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)>($r9);

        r41.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable> = 0;

        $r11 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: kotlin.jvm.functions.Function1 onCompletion>;

        r50 = new androidx.compose.ui.text.font.TypefaceResult$Immutable;

        $r12 = virtualinvoke r41.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object getValue()>();

        if $z10 == 0 goto label19;

        $z11 = 1;

        goto label20;

     label19:
        $z11 = 0;

     label20:
        specialinvoke r50.<androidx.compose.ui.text.font.TypefaceResult$Immutable: void <init>(java.lang.Object,boolean)>($r12, $z11);

        interfaceinvoke $r11.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r50);

        goto label25;

     label21:
        $r35 := @caughtexception;

     label22:
        r57 = (kotlin.coroutines.Continuation) $r42;

        $r36 = interfaceinvoke r57.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        z12 = staticinvoke <kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)>($r36);

        r41.<androidx.compose.ui.text.font.AsyncFontListLoader: boolean cacheable> = 0;

        $r38 = r41.<androidx.compose.ui.text.font.AsyncFontListLoader: kotlin.jvm.functions.Function1 onCompletion>;

        r51 = new androidx.compose.ui.text.font.TypefaceResult$Immutable;

        $r39 = virtualinvoke r41.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object getValue()>();

        if z12 == 0 goto label23;

        $z13 = 1;

        goto label24;

     label23:
        $z13 = 0;

     label24:
        specialinvoke r51.<androidx.compose.ui.text.font.TypefaceResult$Immutable: void <init>(java.lang.Object,boolean)>($r39, $z13);

        interfaceinvoke $r38.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r51);

        throw $r35;

     label25:
        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r14;

     label26:
        r52 = new java.lang.IllegalStateException;

        specialinvoke r52.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r52;

        catch java.lang.Throwable from label04 to label06 with label21;
        catch java.lang.Throwable from label08 to label10 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label18 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public final java.lang.Object loadWithTimeoutOrNull$ui_text_release(androidx.compose.ui.text.font.Font, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader r0;
        kotlin.coroutines.Continuation r1, r36, r37, r38, r39;
        java.lang.Object $r2, r3, $r5, $r27, r28;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function2 $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r9, $r11, $r23, $r24, r29, r30;
        kotlin.coroutines.CoroutineContext $r10, $r12, $r17;
        kotlinx.coroutines.CoroutineExceptionHandler$Key $r13;
        kotlin.coroutines.CoroutineContext$Key $r14;
        kotlin.coroutines.CoroutineContext$Element $r15;
        kotlinx.coroutines.CoroutineExceptionHandler $r16;
        java.lang.StringBuilder $r20, $r21, r33;
        java.lang.String $r22;
        androidx.compose.ui.text.font.Font $r25;
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1 $r26, r31;
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r32;
        java.lang.IllegalStateException r34, r35;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r25 := @parameter0: androidx.compose.ui.text.font.Font;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1;

        if $z0 == 0 goto label01;

        $r26 = (androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1) r1;

        $i0 = $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label>;

        $i3 = $i2 - -2147483648;

        $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label> = $i3;

        goto label02;

     label01:
        r31 = new androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1;

        specialinvoke r31.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,kotlin.coroutines.Continuation)>(r0, r1);

        $r26 = r31;

     label02:
        $r2 = $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label06;
            default: goto label16;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label04:
        r32 = new androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        specialinvoke r32.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>(r0, $r25, null);

        $r7 = (kotlin.jvm.functions.Function2) r32;

        $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object L$0> = $r25;

        $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label> = 1;

        r36 = (kotlin.coroutines.Continuation) $r26;

        $r27 = staticinvoke <kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeoutOrNull(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(15000L, $r7, r36);

     label05:
        if $r27 != r3 goto label08;

        return r3;

     label06:
        $r5 = $r26.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object L$0>;

        $r25 = (androidx.compose.ui.text.font.Font) $r5;

     label07:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r27 = $r2;

     label08:
        r28 = $r27;

     label09:
        goto label15;

     label10:
        $r9 := @caughtexception;

        r29 = $r9;

        r37 = (kotlin.coroutines.Continuation) $r26;

        $r10 = interfaceinvoke r37.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $z1 = staticinvoke <kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)>($r10);

        if $z1 == 0 goto label11;

        goto label12;

     label11:
        throw r29;

     label12:
        r28 = null;

        goto label15;

     label13:
        $r11 := @caughtexception;

        r30 = $r11;

        r38 = (kotlin.coroutines.Continuation) $r26;

        $r12 = interfaceinvoke r38.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r13 = <kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key>;

        $r14 = (kotlin.coroutines.CoroutineContext$Key) $r13;

        $r15 = interfaceinvoke $r12.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r14);

        $r16 = (kotlinx.coroutines.CoroutineExceptionHandler) $r15;

        if $r16 == null goto label14;

        r39 = (kotlin.coroutines.Continuation) $r26;

        $r17 = interfaceinvoke r39.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        r34 = new java.lang.IllegalStateException;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load font ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = (java.lang.Throwable) r30;

        specialinvoke r34.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r23);

        $r24 = (java.lang.Throwable) r34;

        interfaceinvoke $r16.<kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r17, $r24);

        goto label14;

     label14:
        r28 = null;

     label15:
        return r28;

     label16:
        r35 = new java.lang.IllegalStateException;

        specialinvoke r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r35;

        catch java.util.concurrent.CancellationException from label04 to label05 with label10;
        catch java.util.concurrent.CancellationException from label07 to label09 with label10;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label07 to label09 with label13;
    }

    public static final androidx.compose.ui.text.font.PlatformFontLoader access$getPlatformFontLoader$p(androidx.compose.ui.text.font.AsyncFontListLoader)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader $r0;
        androidx.compose.ui.text.font.PlatformFontLoader $r1;

        $r0 := @parameter0: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r1 = $r0.<androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.PlatformFontLoader platformFontLoader>;

        return $r1;
    }

androidx.compose.ui.text.font.AsyncFontListLoader$load$1
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$1>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object L$2>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int I$1>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object result>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label>
    void <init>(androidx.compose.ui.text.font.AsyncFontListLoader, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$1 r0;
        androidx.compose.ui.text.font.AsyncFontListLoader r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$1;

        r1 := @parameter0: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.ui.text.font.AsyncFontListLoader $r3;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: int label> = $i1;

        $r3 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object load(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1
<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: int label>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.Font $font>
    void <init>(androidx.compose.ui.text.font.AsyncFontListLoader, androidx.compose.ui.text.font.Font, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r0;
        androidx.compose.ui.text.font.AsyncFontListLoader $r1;
        androidx.compose.ui.text.font.Font $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        $r1 := @parameter0: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r2 := @parameter1: androidx.compose.ui.text.font.Font;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0> = $r1;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.Font $font> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        androidx.compose.ui.text.font.AsyncFontListLoader $r3;
        androidx.compose.ui.text.font.Font $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r4 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.Font $font>;

        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: int label> = 1;

        $r7 = virtualinvoke $r3.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object loadWithTimeoutOrNull$ui_text_release(androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>($r4, $r5);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = $r1;

     label3:
        return $r7;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r5;
        androidx.compose.ui.text.font.Font $r3;
        androidx.compose.ui.text.font.AsyncFontListLoader $r4;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        $r4 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r3 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: androidx.compose.ui.text.font.Font $font>;

        specialinvoke $r2.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>($r4, $r3, $r1);

        $r5 = (kotlin.coroutines.Continuation) $r2;

        return $r5;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.AsyncFontListLoader$load$2$typeface$1: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object L$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object result>
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label>
    void <init>(androidx.compose.ui.text.font.AsyncFontListLoader, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1 r0;
        androidx.compose.ui.text.font.AsyncFontListLoader r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1;

        r1 := @parameter0: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.ui.text.font.AsyncFontListLoader $r3;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: int label> = $i1;

        $r3 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$1: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.font.AsyncFontListLoader: java.lang.Object loadWithTimeoutOrNull$ui_text_release(androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: int label>
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.AsyncFontListLoader this$0>
<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.Font $this_loadWithTimeoutOrNull>
    void <init>(androidx.compose.ui.text.font.AsyncFontListLoader, androidx.compose.ui.text.font.Font, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r0;
        androidx.compose.ui.text.font.AsyncFontListLoader $r1;
        androidx.compose.ui.text.font.Font $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        $r1 := @parameter0: androidx.compose.ui.text.font.AsyncFontListLoader;

        $r2 := @parameter1: androidx.compose.ui.text.font.Font;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.AsyncFontListLoader this$0> = $r1;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.Font $this_loadWithTimeoutOrNull> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        androidx.compose.ui.text.font.AsyncFontListLoader $r3;
        androidx.compose.ui.text.font.PlatformFontLoader $r4;
        androidx.compose.ui.text.font.Font $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r4 = staticinvoke <androidx.compose.ui.text.font.AsyncFontListLoader: androidx.compose.ui.text.font.PlatformFontLoader access$getPlatformFontLoader$p(androidx.compose.ui.text.font.AsyncFontListLoader)>($r3);

        $r5 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.Font $this_loadWithTimeoutOrNull>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: int label> = 1;

        $r8 = interfaceinvoke $r4.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object awaitLoad(androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r8 = $r1;

     label3:
        return $r8;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.ui.text.font.Font $r4;
        androidx.compose.ui.text.font.AsyncFontListLoader $r5;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        $r5 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.AsyncFontListLoader this$0>;

        $r4 = r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: androidx.compose.ui.text.font.Font $this_loadWithTimeoutOrNull>;

        specialinvoke $r3.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: void <init>(androidx.compose.ui.text.font.AsyncFontListLoader,androidx.compose.ui.text.font.Font,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.ui.text.font.AsyncFontListLoader$loadWithTimeoutOrNull$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

