androidx.leanback.transition.SlideKitkat
<androidx.leanback.transition.SlideKitkat: java.lang.String TAG>
<androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sDecelerate>
<androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sAccelerate>
<androidx.leanback.transition.SlideKitkat: int mSlideEdge>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateLeft>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateTop>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateRight>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateBottom>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateStart>
<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateEnd>
    public void <init>()
    {
        androidx.leanback.transition.SlideKitkat r0;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        virtualinvoke r0.<androidx.leanback.transition.SlideKitkat: void setSlideEdge(int)>(80);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.leanback.transition.SlideKitkat r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i3, $i4, $i5, $i6, $i8, $i9, $i11;
        long l1, l2;
        int[] $r4;
        byte $b7, $b10;
        android.view.animation.Interpolator $r5;
        android.animation.TimeInterpolator r9;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        $r4 = <androidx.leanback.R$styleable: int[] lbSlide>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        $i4 = <androidx.leanback.R$styleable: int lbSlide_lb_slideEdge>;

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i4, 80);

        virtualinvoke r0.<androidx.leanback.transition.SlideKitkat: void setSlideEdge(int)>(i0);

        $i5 = <androidx.leanback.R$styleable: int lbSlide_android_duration>;

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i5, -1);

        l1 = (long) $i6;

        $b7 = l1 cmp 0L;

        if $b7 < 0 goto label1;

        virtualinvoke r0.<androidx.leanback.transition.SlideKitkat: android.transition.Transition setDuration(long)>(l1);

     label1:
        $i8 = <androidx.leanback.R$styleable: int lbSlide_android_startDelay>;

        $i9 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i8, -1);

        l2 = (long) $i9;

        $b10 = l2 cmp 0L;

        if $b10 <= 0 goto label2;

        virtualinvoke r0.<androidx.leanback.transition.SlideKitkat: android.transition.Transition setStartDelay(long)>(l2);

     label2:
        $i11 = <androidx.leanback.R$styleable: int lbSlide_android_interpolator>;

        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i11, 0);

        if i3 <= 0 goto label3;

        $r5 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>(r1, i3);

        r9 = (android.animation.TimeInterpolator) $r5;

        virtualinvoke r0.<androidx.leanback.transition.SlideKitkat: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>(r9);

     label3:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setSlideEdge(int)
    {
        androidx.leanback.transition.SlideKitkat r0;
        int i0;
        androidx.leanback.transition.SlideKitkat$CalculateSlide $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 3: goto label1;
            case 5: goto label3;
            case 48: goto label2;
            case 80: goto label4;
            case 8388611: goto label5;
            case 8388613: goto label6;
            default: goto label7;
        };

     label1:
        $r6 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateLeft>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r6;

        goto label8;

     label2:
        $r4 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateTop>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r4;

        goto label8;

     label3:
        $r5 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateRight>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r5;

        goto label8;

     label4:
        $r3 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateBottom>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r3;

        goto label8;

     label5:
        $r2 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateStart>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r2;

        goto label8;

     label6:
        $r1 = <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateEnd>;

        r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator> = $r1;

        goto label8;

     label7:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slide direction");

        throw $r7;

     label8:
        r0.<androidx.leanback.transition.SlideKitkat: int mSlideEdge> = i0;

        return;
    }

    public int getSlideEdge()
    {
        androidx.leanback.transition.SlideKitkat r0;
        int $i0;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        $i0 = r0.<androidx.leanback.transition.SlideKitkat: int mSlideEdge>;

        return $i0;
    }

    private android.animation.Animator createAnimation(android.view.View, android.util.Property, float, float, float, android.animation.TimeInterpolator, int)
    {
        androidx.leanback.transition.SlideKitkat r0;
        android.view.View r1;
        android.util.Property r2, $r9;
        float f0, f1, f2, $f3;
        android.animation.TimeInterpolator r3;
        int i0, $i1, $i2;
        float[] r4, $r8, $r10;
        android.animation.ObjectAnimator r5;
        androidx.leanback.transition.SlideKitkat$SlideAnimatorListener r6, r12;
        java.lang.Object $r7;
        android.animation.Animator$AnimatorListener r13;
        android.animation.Animator$AnimatorPauseListener r14;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.util.Property;

        f2 := @parameter2: float;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r3 := @parameter5: android.animation.TimeInterpolator;

        i0 := @parameter6: int;

        $i1 = <androidx.leanback.R$id: int lb_slide_transition_value>;

        $r7 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i1);

        $r8 = (float[]) $r7;

        r4 = (float[]) $r8;

        if r4 == null goto label3;

        $r9 = <android.view.View: android.util.Property TRANSLATION_Y>;

        if $r9 != r2 goto label1;

        $f3 = r4[1];

        goto label2;

     label1:
        $f3 = r4[0];

     label2:
        f2 = $f3;

        $i2 = <androidx.leanback.R$id: int lb_slide_transition_value>;

        virtualinvoke r1.<android.view.View: void setTag(int,java.lang.Object)>($i2, null);

     label3:
        $r10 = newarray (float)[2];

        $r10[0] = f2;

        $r10[1] = f0;

        r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, r2, $r10);

        r12 = new androidx.leanback.transition.SlideKitkat$SlideAnimatorListener;

        specialinvoke r12.<androidx.leanback.transition.SlideKitkat$SlideAnimatorListener: void <init>(android.view.View,android.util.Property,float,float,int)>(r1, r2, f1, f0, i0);

        r6 = r12;

        r13 = (android.animation.Animator$AnimatorListener) r6;

        virtualinvoke r5.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r13);

        r14 = (android.animation.Animator$AnimatorPauseListener) r6;

        virtualinvoke r5.<android.animation.ObjectAnimator: void addPauseListener(android.animation.Animator$AnimatorPauseListener)>(r14);

        virtualinvoke r5.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r3);

        return r5;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.transition.TransitionValues, int, android.transition.TransitionValues, int)
    {
        androidx.leanback.transition.SlideKitkat r0;
        android.view.ViewGroup r1;
        android.transition.TransitionValues r2, r3;
        int i0, i1;
        android.view.View r4, $r11;
        float f0, f1;
        androidx.leanback.transition.SlideKitkat$CalculateSlide $r5, $r6, $r7;
        android.util.Property $r8;
        android.animation.TimeInterpolator $r9;
        android.animation.Animator $r10;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        i0 := @parameter2: int;

        r3 := @parameter3: android.transition.TransitionValues;

        i1 := @parameter4: int;

        if r3 == null goto label1;

        $r11 = r3.<android.transition.TransitionValues: android.view.View view>;

        goto label2;

     label1:
        $r11 = null;

     label2:
        r4 = $r11;

        if r4 != null goto label3;

        return null;

     label3:
        $r5 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        f0 = interfaceinvoke $r5.<androidx.leanback.transition.SlideKitkat$CalculateSlide: float getHere(android.view.View)>(r4);

        $r6 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        f1 = interfaceinvoke $r6.<androidx.leanback.transition.SlideKitkat$CalculateSlide: float getGone(android.view.View)>(r4);

        $r7 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        $r8 = interfaceinvoke $r7.<androidx.leanback.transition.SlideKitkat$CalculateSlide: android.util.Property getProperty()>();

        $r9 = <androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sDecelerate>;

        $r10 = specialinvoke r0.<androidx.leanback.transition.SlideKitkat: android.animation.Animator createAnimation(android.view.View,android.util.Property,float,float,float,android.animation.TimeInterpolator,int)>(r4, $r8, f1, f0, f0, $r9, 0);

        return $r10;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.transition.TransitionValues, int, android.transition.TransitionValues, int)
    {
        androidx.leanback.transition.SlideKitkat r0;
        android.view.ViewGroup r1;
        android.transition.TransitionValues r2, r3;
        int i0, i1;
        android.view.View r4, $r11;
        float f0, f1;
        androidx.leanback.transition.SlideKitkat$CalculateSlide $r5, $r6, $r7;
        android.util.Property $r8;
        android.animation.TimeInterpolator $r9;
        android.animation.Animator $r10;

        r0 := @this: androidx.leanback.transition.SlideKitkat;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        i0 := @parameter2: int;

        r3 := @parameter3: android.transition.TransitionValues;

        i1 := @parameter4: int;

        if r2 == null goto label1;

        $r11 = r2.<android.transition.TransitionValues: android.view.View view>;

        goto label2;

     label1:
        $r11 = null;

     label2:
        r4 = $r11;

        if r4 != null goto label3;

        return null;

     label3:
        $r5 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        f0 = interfaceinvoke $r5.<androidx.leanback.transition.SlideKitkat$CalculateSlide: float getHere(android.view.View)>(r4);

        $r6 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        f1 = interfaceinvoke $r6.<androidx.leanback.transition.SlideKitkat$CalculateSlide: float getGone(android.view.View)>(r4);

        $r7 = r0.<androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide mSlideCalculator>;

        $r8 = interfaceinvoke $r7.<androidx.leanback.transition.SlideKitkat$CalculateSlide: android.util.Property getProperty()>();

        $r9 = <androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sAccelerate>;

        $r10 = specialinvoke r0.<androidx.leanback.transition.SlideKitkat: android.animation.Animator createAnimation(android.view.View,android.util.Property,float,float,float,android.animation.TimeInterpolator,int)>(r4, $r8, f0, f1, f0, $r9, 4);

        return $r10;
    }

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator r8;
        android.view.animation.AccelerateInterpolator r9;
        androidx.leanback.transition.SlideKitkat$1 r10;
        androidx.leanback.transition.SlideKitkat$2 r11;
        androidx.leanback.transition.SlideKitkat$3 r12;
        androidx.leanback.transition.SlideKitkat$4 r13;
        androidx.leanback.transition.SlideKitkat$5 r14;
        androidx.leanback.transition.SlideKitkat$6 r15;
        android.animation.TimeInterpolator r16, r17;

        r8 = new android.view.animation.DecelerateInterpolator;

        specialinvoke r8.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r16 = (android.animation.TimeInterpolator) r8;

        <androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sDecelerate> = r16;

        r9 = new android.view.animation.AccelerateInterpolator;

        specialinvoke r9.<android.view.animation.AccelerateInterpolator: void <init>()>();

        r17 = (android.animation.TimeInterpolator) r9;

        <androidx.leanback.transition.SlideKitkat: android.animation.TimeInterpolator sAccelerate> = r17;

        r10 = new androidx.leanback.transition.SlideKitkat$1;

        specialinvoke r10.<androidx.leanback.transition.SlideKitkat$1: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateLeft> = r10;

        r11 = new androidx.leanback.transition.SlideKitkat$2;

        specialinvoke r11.<androidx.leanback.transition.SlideKitkat$2: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateTop> = r11;

        r12 = new androidx.leanback.transition.SlideKitkat$3;

        specialinvoke r12.<androidx.leanback.transition.SlideKitkat$3: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateRight> = r12;

        r13 = new androidx.leanback.transition.SlideKitkat$4;

        specialinvoke r13.<androidx.leanback.transition.SlideKitkat$4: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateBottom> = r13;

        r14 = new androidx.leanback.transition.SlideKitkat$5;

        specialinvoke r14.<androidx.leanback.transition.SlideKitkat$5: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateStart> = r14;

        r15 = new androidx.leanback.transition.SlideKitkat$6;

        specialinvoke r15.<androidx.leanback.transition.SlideKitkat$6: void <init>()>();

        <androidx.leanback.transition.SlideKitkat: androidx.leanback.transition.SlideKitkat$CalculateSlide sCalculateEnd> = r15;

        return;
    }

