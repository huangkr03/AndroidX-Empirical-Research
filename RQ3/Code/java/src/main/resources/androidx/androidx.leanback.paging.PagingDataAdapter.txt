androidx.leanback.paging.PagingDataAdapter
<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.DiffUtil$ItemCallback diffCallback>
<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher mainDispatcher>
<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher workerDispatcher>
<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>
<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback>
    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        kotlinx.coroutines.CoroutineDispatcher r2, r3;
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 $r4;
        androidx.recyclerview.widget.ListUpdateCallback $r5, $r7;
        androidx.paging.AsyncPagingDataDiffer $r6;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r2 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mainDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "workerDispatcher");

        specialinvoke r0.<androidx.leanback.widget.ObjectAdapter: void <init>()>();

        $r4 = new androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        specialinvoke $r4.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: void <init>(androidx.leanback.paging.PagingDataAdapter)>(r0);

        $r5 = (androidx.recyclerview.widget.ListUpdateCallback) $r4;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback> = $r5;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.DiffUtil$ItemCallback diffCallback> = r1;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher mainDispatcher> = r2;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher workerDispatcher> = r3;

        $r6 = new androidx.paging.AsyncPagingDataDiffer;

        $r7 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback>;

        specialinvoke $r6.<androidx.paging.AsyncPagingDataDiffer: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,androidx.recyclerview.widget.ListUpdateCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, $r7, r2, r3);

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ> = $r6;

        return;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3;
        kotlinx.coroutines.CoroutineDispatcher r4, r5;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r4 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        r5 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

     label2:
        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, r4, r5);

        return;
    }

    public void <init>(androidx.leanback.widget.Presenter, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.Presenter r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        kotlinx.coroutines.CoroutineDispatcher r3, r4;
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 $r5;
        androidx.recyclerview.widget.ListUpdateCallback $r6, $r8;
        androidx.paging.AsyncPagingDataDiffer $r7;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.Presenter;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r4 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mainDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "workerDispatcher");

        specialinvoke r0.<androidx.leanback.widget.ObjectAdapter: void <init>(androidx.leanback.widget.Presenter)>(r1);

        $r5 = new androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        specialinvoke $r5.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: void <init>(androidx.leanback.paging.PagingDataAdapter)>(r0);

        $r6 = (androidx.recyclerview.widget.ListUpdateCallback) $r5;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback> = $r6;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.DiffUtil$ItemCallback diffCallback> = r2;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher mainDispatcher> = r3;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher workerDispatcher> = r4;

        $r7 = new androidx.paging.AsyncPagingDataDiffer;

        $r8 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback>;

        specialinvoke $r7.<androidx.paging.AsyncPagingDataDiffer: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,androidx.recyclerview.widget.ListUpdateCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r2, $r8, r3, r4);

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ> = $r7;

        return;
    }

    public void <init>(androidx.leanback.widget.Presenter, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.Presenter r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        kotlinx.coroutines.MainCoroutineDispatcher $r4;
        kotlinx.coroutines.CoroutineDispatcher r5, r6;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.Presenter;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r5 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r6 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = (kotlinx.coroutines.CoroutineDispatcher) $r4;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

     label2:
        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.Presenter,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, r2, r5, r6);

        return;
    }

    public void <init>(androidx.leanback.widget.PresenterSelector, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.PresenterSelector r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        kotlinx.coroutines.CoroutineDispatcher r3, r4;
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 $r5;
        androidx.recyclerview.widget.ListUpdateCallback $r6, $r8;
        androidx.paging.AsyncPagingDataDiffer $r7;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.PresenterSelector;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r4 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenterSelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mainDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "workerDispatcher");

        specialinvoke r0.<androidx.leanback.widget.ObjectAdapter: void <init>(androidx.leanback.widget.PresenterSelector)>(r1);

        $r5 = new androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        specialinvoke $r5.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: void <init>(androidx.leanback.paging.PagingDataAdapter)>(r0);

        $r6 = (androidx.recyclerview.widget.ListUpdateCallback) $r5;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback> = $r6;

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.DiffUtil$ItemCallback diffCallback> = r2;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher mainDispatcher> = r3;

        r0.<androidx.leanback.paging.PagingDataAdapter: kotlinx.coroutines.CoroutineDispatcher workerDispatcher> = r4;

        $r7 = new androidx.paging.AsyncPagingDataDiffer;

        $r8 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.recyclerview.widget.ListUpdateCallback listUpdateCallback>;

        specialinvoke $r7.<androidx.paging.AsyncPagingDataDiffer: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,androidx.recyclerview.widget.ListUpdateCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r2, $r8, r3, r4);

        r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ> = $r7;

        return;
    }

    public void <init>(androidx.leanback.widget.PresenterSelector, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.PresenterSelector r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        kotlinx.coroutines.MainCoroutineDispatcher $r4;
        kotlinx.coroutines.CoroutineDispatcher r5, r6;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.PresenterSelector;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r5 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r6 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r5 = (kotlinx.coroutines.CoroutineDispatcher) $r4;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

     label2:
        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.PresenterSelector,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, r2, r5, r6);

        return;
    }

    public final java.lang.Object submitData(androidx.paging.PagingData, kotlin.coroutines.Continuation)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.PagingData r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.AsyncPagingDataDiffer $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.paging.PagingData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r4 = virtualinvoke $r3.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object submitData(androidx.paging.PagingData,kotlin.coroutines.Continuation)>(r1, $r2);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    public final void submitData(androidx.lifecycle.Lifecycle, androidx.paging.PagingData)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.lifecycle.Lifecycle r1;
        androidx.paging.PagingData r2;
        androidx.paging.AsyncPagingDataDiffer $r3;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: androidx.paging.PagingData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingData");

        $r3 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r3.<androidx.paging.AsyncPagingDataDiffer: void submitData(androidx.lifecycle.Lifecycle,androidx.paging.PagingData)>(r1, r2);

        return;
    }

    public final void retry()
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: void retry()>();

        return;
    }

    public final void refresh()
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: void refresh()>();

        return;
    }

    public final java.lang.Object peek(int)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        int i0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object peek(int)>(i0);

        return $r2;
    }

    public final androidx.paging.ItemSnapshotList snapshot()
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        androidx.paging.ItemSnapshotList $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: androidx.paging.ItemSnapshotList snapshot()>();

        return $r2;
    }

    public final kotlinx.coroutines.flow.Flow getLoadStateFlow()
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        kotlinx.coroutines.flow.Flow $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: kotlinx.coroutines.flow.Flow getLoadStateFlow()>();

        return $r2;
    }

    public final void addLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void addLoadStateListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public final void removeLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void removeLoadStateListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public int size()
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        int $i0;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $i0 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: int getItemCount()>();

        return $i0;
    }

    public java.lang.Object get(int)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        int i0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object getItem(int)>(i0);

        return $r2;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        kotlinx.coroutines.CoroutineDispatcher r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r2 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mainDispatcher");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, 4, null);

        return;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, null, 6, null);

        return;
    }

    public void <init>(androidx.leanback.widget.Presenter, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.Presenter r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        kotlinx.coroutines.CoroutineDispatcher r3;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.Presenter;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mainDispatcher");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.Presenter,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null, 8, null);

        return;
    }

    public void <init>(androidx.leanback.widget.Presenter, androidx.recyclerview.widget.DiffUtil$ItemCallback)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.Presenter r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.Presenter;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.Presenter,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, null, 12, null);

        return;
    }

    public void <init>(androidx.leanback.widget.PresenterSelector, androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.PresenterSelector r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        kotlinx.coroutines.CoroutineDispatcher r3;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.PresenterSelector;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenterSelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mainDispatcher");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.PresenterSelector,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null, 8, null);

        return;
    }

    public void <init>(androidx.leanback.widget.PresenterSelector, androidx.recyclerview.widget.DiffUtil$ItemCallback)
    {
        androidx.leanback.paging.PagingDataAdapter r0;
        androidx.leanback.widget.PresenterSelector r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.leanback.widget.PresenterSelector;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "presenterSelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        specialinvoke r0.<androidx.leanback.paging.PagingDataAdapter: void <init>(androidx.leanback.widget.PresenterSelector,androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, null, 12, null);

        return;
    }

    public static final void access$notifyItemRangeInserted(androidx.leanback.paging.PagingDataAdapter, int, int)
    {
        androidx.leanback.paging.PagingDataAdapter $r0;
        int i0, i1;

        $r0 := @parameter0: androidx.leanback.paging.PagingDataAdapter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.leanback.paging.PagingDataAdapter: void notifyItemRangeInserted(int,int)>(i0, i1);

        return;
    }

    public static final void access$notifyItemRangeRemoved(androidx.leanback.paging.PagingDataAdapter, int, int)
    {
        androidx.leanback.paging.PagingDataAdapter $r0;
        int i0, i1;

        $r0 := @parameter0: androidx.leanback.paging.PagingDataAdapter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.leanback.paging.PagingDataAdapter: void notifyItemRangeRemoved(int,int)>(i0, i1);

        return;
    }

    public static final void access$notifyItemMoved(androidx.leanback.paging.PagingDataAdapter, int, int)
    {
        androidx.leanback.paging.PagingDataAdapter $r0;
        int i0, i1;

        $r0 := @parameter0: androidx.leanback.paging.PagingDataAdapter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.leanback.paging.PagingDataAdapter: void notifyItemMoved(int,int)>(i0, i1);

        return;
    }

androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1
<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0>
    void <init>(androidx.leanback.paging.PagingDataAdapter)
    {
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 r0;
        androidx.leanback.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        $r1 := @parameter0: androidx.leanback.paging.PagingDataAdapter;

        r0.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onInserted(int, int)
    {
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 r0;
        int i0, i1;
        androidx.leanback.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0>;

        staticinvoke <androidx.leanback.paging.PagingDataAdapter: void access$notifyItemRangeInserted(androidx.leanback.paging.PagingDataAdapter,int,int)>($r1, i0, i1);

        return;
    }

    public void onRemoved(int, int)
    {
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 r0;
        int i0, i1;
        androidx.leanback.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0>;

        staticinvoke <androidx.leanback.paging.PagingDataAdapter: void access$notifyItemRangeRemoved(androidx.leanback.paging.PagingDataAdapter,int,int)>($r1, i0, i1);

        return;
    }

    public void onMoved(int, int)
    {
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 r0;
        int i0, i1;
        androidx.leanback.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0>;

        staticinvoke <androidx.leanback.paging.PagingDataAdapter: void access$notifyItemMoved(androidx.leanback.paging.PagingDataAdapter,int,int)>($r1, i0, i1);

        return;
    }

    public void onChanged(int, int, java.lang.Object)
    {
        androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1 r0;
        int i0, i1;
        java.lang.Object r1;
        androidx.leanback.paging.PagingDataAdapter $r2;

        r0 := @this: androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.leanback.paging.PagingDataAdapter$listUpdateCallback$1: androidx.leanback.paging.PagingDataAdapter this$0>;

        virtualinvoke $r2.<androidx.leanback.paging.PagingDataAdapter: void notifyItemRangeChanged(int,int,java.lang.Object)>(i0, i1, r1);

        return;
    }

