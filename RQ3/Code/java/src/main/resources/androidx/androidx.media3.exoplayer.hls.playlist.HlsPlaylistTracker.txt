androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void start(android.net.Uri,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void stop()>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void addListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void removeListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist getMultivariantPlaylist()>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isSnapshotValid(android.net.Uri)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void maybeThrowPrimaryPlaylistRefreshError()>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void maybeThrowPlaylistRefreshError(android.net.Uri)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean excludeMediaPlaylist(android.net.Uri,long)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void refreshPlaylist(android.net.Uri)>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isLive()>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker createTracker(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory)>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener: void onPlaylistChanged()>
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener: boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException: android.net.Uri url>
    public void <init>(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException r0;
        android.net.Uri r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException: android.net.Uri url> = r1;

        return;
    }

androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException: android.net.Uri url>
    public void <init>(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException r0;
        android.net.Uri r1;

        r0 := @this: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException: android.net.Uri url> = r1;

        return;
    }

androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener
<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener: void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>
