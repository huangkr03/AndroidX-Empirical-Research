androidx.webkit.internal.ServiceWorkerClientAdapter
<androidx.webkit.internal.ServiceWorkerClientAdapter: androidx.webkit.ServiceWorkerClientCompat mClient>
    public void <init>(androidx.webkit.ServiceWorkerClientCompat)
    {
        androidx.webkit.internal.ServiceWorkerClientAdapter r0;
        androidx.webkit.ServiceWorkerClientCompat r1;

        r0 := @this: androidx.webkit.internal.ServiceWorkerClientAdapter;

        r1 := @parameter0: androidx.webkit.ServiceWorkerClientCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.internal.ServiceWorkerClientAdapter: androidx.webkit.ServiceWorkerClientCompat mClient> = r1;

        return;
    }

    public android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
    {
        androidx.webkit.internal.ServiceWorkerClientAdapter r0;
        android.webkit.WebResourceRequest r1;
        androidx.webkit.ServiceWorkerClientCompat $r2;
        android.webkit.WebResourceResponse $r3;

        r0 := @this: androidx.webkit.internal.ServiceWorkerClientAdapter;

        r1 := @parameter0: android.webkit.WebResourceRequest;

        $r2 = r0.<androidx.webkit.internal.ServiceWorkerClientAdapter: androidx.webkit.ServiceWorkerClientCompat mClient>;

        $r3 = virtualinvoke $r2.<androidx.webkit.ServiceWorkerClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)>(r1);

        return $r3;
    }

    public java.lang.String[] getSupportedFeatures()
    {
        androidx.webkit.internal.ServiceWorkerClientAdapter r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.webkit.internal.ServiceWorkerClientAdapter;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "SERVICE_WORKER_SHOULD_INTERCEPT_REQUEST";

        return $r1;
    }

