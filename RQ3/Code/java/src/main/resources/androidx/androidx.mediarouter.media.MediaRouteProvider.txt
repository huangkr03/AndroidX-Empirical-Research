androidx.mediarouter.media.MediaRouteProvider
<androidx.mediarouter.media.MediaRouteProvider: int MSG_DELIVER_DESCRIPTOR_CHANGED>
<androidx.mediarouter.media.MediaRouteProvider: int MSG_DELIVER_DISCOVERY_REQUEST_CHANGED>
<androidx.mediarouter.media.MediaRouteProvider: android.content.Context mContext>
<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata mMetadata>
<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler mHandler>
<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$Callback mCallback>
<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest mDiscoveryRequest>
<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDiscoveryRequestChange>
<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor mDescriptor>
<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDescriptorChange>
    public void <init>(android.content.Context)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        android.content.Context r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: void <init>(android.content.Context,androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata)>(r1, null);

        return;
    }

    void <init>(android.content.Context, androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        android.content.Context r1;
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata r2, $r4;
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler $r3;
        android.content.ComponentName $r5;
        java.lang.Class $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.mediarouter.media.MediaRouteProvider$ProviderHandler;

        specialinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: void <init>(androidx.mediarouter.media.MediaRouteProvider)>(r0);

        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler mHandler> = $r3;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r7;

     label1:
        r0.<androidx.mediarouter.media.MediaRouteProvider: android.content.Context mContext> = r1;

        if r2 != null goto label2;

        $r4 = new androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        $r5 = new android.content.ComponentName;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r5.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r1, $r6);

        specialinvoke $r4.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: void <init>(android.content.ComponentName)>($r5);

        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata mMetadata> = $r4;

        goto label3;

     label2:
        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata mMetadata> = r2;

     label3:
        return;
    }

    public final android.content.Context getContext()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        android.content.Context $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: android.content.Context mContext>;

        return $r1;
    }

    public final android.os.Handler getHandler()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler mHandler>;

        return $r1;
    }

    public final androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata getMetadata()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata mMetadata>;

        return $r1;
    }

    public final void setCallback(androidx.mediarouter.media.MediaRouteProvider$Callback)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProvider$Callback r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$Callback;

        staticinvoke <androidx.mediarouter.media.MediaRouter: void checkCallingThread()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$Callback mCallback> = r1;

        return;
    }

    public final androidx.mediarouter.media.MediaRouteDiscoveryRequest getDiscoveryRequest()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest mDiscoveryRequest>;

        return $r1;
    }

    public final void setDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r1, $r2;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        staticinvoke <androidx.mediarouter.media.MediaRouter: void checkCallingThread()>();

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest mDiscoveryRequest>;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: void setDiscoveryRequestInternal(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>(r1);

        return;
    }

    final void setDiscoveryRequestInternal(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r1;
        boolean $z0;
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest mDiscoveryRequest> = r1;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDiscoveryRequestChange>;

        if $z0 != 0 goto label1;

        r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDiscoveryRequestChange> = 1;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler mHandler>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: boolean sendEmptyMessage(int)>(2);

     label1:
        return;
    }

    void deliverDiscoveryRequestChanged()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDiscoveryRequestChange> = 0;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteDiscoveryRequest mDiscoveryRequest>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: void onDiscoveryRequestChanged(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>($r1);

        return;
    }

    public void onDiscoveryRequestChanged(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        return;
    }

    public final androidx.mediarouter.media.MediaRouteProviderDescriptor getDescriptor()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor mDescriptor>;

        return $r1;
    }

    public final void setDescriptor(androidx.mediarouter.media.MediaRouteProviderDescriptor)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r1, $r2;
        boolean $z0;
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProviderDescriptor;

        staticinvoke <androidx.mediarouter.media.MediaRouter: void checkCallingThread()>();

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor mDescriptor>;

        if $r2 == r1 goto label1;

        r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor mDescriptor> = r1;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDescriptorChange>;

        if $z0 != 0 goto label1;

        r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDescriptorChange> = 1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler mHandler>;

        virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    void deliverDescriptorChanged()
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        androidx.mediarouter.media.MediaRouteProvider$Callback $r1, $r3;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r0.<androidx.mediarouter.media.MediaRouteProvider: boolean mPendingDescriptorChange> = 0;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$Callback mCallback>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$Callback mCallback>;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProviderDescriptor mDescriptor>;

        virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$Callback: void onDescriptorChanged(androidx.mediarouter.media.MediaRouteProvider,androidx.mediarouter.media.MediaRouteProviderDescriptor)>(r0, $r2);

     label1:
        return;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId cannot be null");

        throw $r2;

     label1:
        return null;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        java.lang.String r1, r2;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId cannot be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeGroupId cannot be null");

        throw $r4;

     label2:
        $r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)>(r1);

        return $r3;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController onCreateDynamicGroupRouteController(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteProvider r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initialMemberRouteId cannot be null.");

        throw $r2;

     label1:
        return null;
    }

androidx.mediarouter.media.MediaRouteProvider$Callback
    public void <init>()
    {
        androidx.mediarouter.media.MediaRouteProvider$Callback r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDescriptorChanged(androidx.mediarouter.media.MediaRouteProvider, androidx.mediarouter.media.MediaRouteProviderDescriptor)
    {
        androidx.mediarouter.media.MediaRouteProvider$Callback r0;
        androidx.mediarouter.media.MediaRouteProvider r1;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$Callback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProviderDescriptor;

        return;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: java.util.Collection val$routes>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>
    void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener, androidx.mediarouter.media.MediaRouteDescriptor, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1 r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r2;
        androidx.mediarouter.media.MediaRouteDescriptor r3;
        java.util.Collection r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener;

        r3 := @parameter2: androidx.mediarouter.media.MediaRouteDescriptor;

        r4 := @parameter3: java.util.Collection;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0> = r1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener> = r2;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute> = r3;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: java.util.Collection val$routes> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1 r0;
        java.util.Collection $r1;
        androidx.mediarouter.media.MediaRouteDescriptor $r2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute>;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: java.util.Collection val$routes>;

        interfaceinvoke $r4.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener: void onRoutesChanged(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>($r3, $r2, $r1);

        return;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: java.util.Collection val$routes>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>
    void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2 r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r2;
        java.util.Collection r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener;

        r3 := @parameter2: java.util.Collection;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0> = r1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener> = r2;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: java.util.Collection val$routes> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2 r0;
        java.util.Collection $r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: java.util.Collection val$routes>;

        interfaceinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener: void onRoutesChanged(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>($r2, null, $r1);

        return;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: java.util.Collection val$dynamicRoutes>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>
    void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener, androidx.mediarouter.media.MediaRouteDescriptor, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3 r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r2;
        androidx.mediarouter.media.MediaRouteDescriptor r3;
        java.util.Collection r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener;

        r3 := @parameter2: androidx.mediarouter.media.MediaRouteDescriptor;

        r4 := @parameter3: java.util.Collection;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0> = r1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener> = r2;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute> = r3;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: java.util.Collection val$dynamicRoutes> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3 r0;
        java.util.Collection $r1;
        androidx.mediarouter.media.MediaRouteDescriptor $r2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener val$listener>;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController this$0>;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: androidx.mediarouter.media.MediaRouteDescriptor val$groupRoute>;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: java.util.Collection val$dynamicRoutes>;

        interfaceinvoke $r4.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener: void onRoutesChanged(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>($r3, $r2, $r1);

        return;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor mRouteDescriptor>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable>
    public void <init>(androidx.mediarouter.media.MediaRouteDescriptor)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        java.lang.NullPointerException $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState> = 1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable> = 0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable> = 0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("descriptor must not be null");

        throw $r2;

     label1:
        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor mRouteDescriptor> = r1;

        return;
    }

    public void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r1;
        androidx.mediarouter.media.MediaRouteDescriptor $r2;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.NullPointerException $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState> = 1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable> = 0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable> = 0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable> = 0;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("dynamicRouteDescriptor must not be null");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor mRouteDescriptor> = $r2;

        $i0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int getSelectionState()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState> = $i0;

        $z0 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isUnselectable()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable> = $z0;

        $z1 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isGroupable()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable> = $z1;

        $z2 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isTransferable()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable> = $z2;

        return;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setSelectionState(int)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        int i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        i0 := @parameter0: int;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState> = i0;

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsUnselectable(boolean)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        boolean z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable> = z0;

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsGroupable(boolean)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        boolean z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable> = z0;

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsTransferable(boolean)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        boolean z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable> = z0;

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor build()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor $r1;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.mediarouter.media.MediaRouteDescriptor $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        $r1 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor mRouteDescriptor>;

        $i0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: int mSelectionState>;

        $z2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsUnselectable>;

        $z1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsGroupable>;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: boolean mIsTransferable>;

        specialinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: void <init>(androidx.mediarouter.media.MediaRouteDescriptor,int,boolean,boolean,boolean)>($r2, $i0, $z2, $z1, $z0);

        return $r1;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$SelectionState
androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: java.lang.String KEY_MEDIA_ROUTE_DESCRIPTOR>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: java.lang.String KEY_SELECTION_STATE>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: java.lang.String KEY_IS_UNSELECTABLE>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: java.lang.String KEY_IS_GROUPABLE>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: java.lang.String KEY_IS_TRANSFERABLE>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int UNSELECTING>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int UNSELECTED>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int SELECTING>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int SELECTED>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor mMediaRouteDescriptor>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsUnselectable>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsGroupable>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsTransferable>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>
    void <init>(androidx.mediarouter.media.MediaRouteDescriptor, int, boolean, boolean, boolean)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        int i0;
        boolean z0, z1, z2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor mMediaRouteDescriptor> = r1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState> = i0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsUnselectable> = z0;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsGroupable> = z1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsTransferable> = z2;

        return;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        androidx.mediarouter.media.MediaRouteDescriptor $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor mMediaRouteDescriptor>;

        return $r1;
    }

    public int getSelectionState()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $i0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState>;

        return $i0;
    }

    public boolean isUnselectable()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsUnselectable>;

        return $z0;
    }

    public boolean isGroupable()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsGroupable>;

        return $z0;
    }

    public boolean isTransferable()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsTransferable>;

        return $z0;
    }

    android.os.Bundle toBundle()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r0;
        android.os.Bundle $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        androidx.mediarouter.media.MediaRouteDescriptor $r4;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle> = $r3;

        $r5 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor mMediaRouteDescriptor>;

        $r6 = virtualinvoke $r4.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle asBundle()>();

        virtualinvoke $r5.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("mrDescriptor", $r6);

        $r7 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState>;

        virtualinvoke $r7.<android.os.Bundle: void putInt(java.lang.String,int)>("selectionState", $i0);

        $r8 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        $z0 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsUnselectable>;

        virtualinvoke $r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isUnselectable", $z0);

        $r9 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        $z1 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsGroupable>;

        virtualinvoke $r9.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isGroupable", $z1);

        $r10 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        $z2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean mIsTransferable>;

        virtualinvoke $r10.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isTransferable", $z2);

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: android.os.Bundle mBundle>;

        return $r2;
    }

    static androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r2;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        int i0;
        boolean z0, z1, z2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor $r3;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("mrDescriptor");

        r1 = staticinvoke <androidx.mediarouter.media.MediaRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor fromBundle(android.os.Bundle)>($r2);

        i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String,int)>("selectionState", 1);

        z0 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("isUnselectable", 0);

        z1 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("isGroupable", 0);

        z2 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("isTransferable", 0);

        $r3 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor;

        specialinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: void <init>(androidx.mediarouter.media.MediaRouteDescriptor,int,boolean,boolean,boolean)>(r1, i0, z0, z1, z2);

        return $r3;
    }

androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener: void onRoutesChanged(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>
androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.Object mLock>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener mListener>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mPendingGroupRoute>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes>
    public void <init>()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;
        java.lang.Object $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.Object mLock> = $r1;

        return;
    }

    public java.lang.String getGroupableSelectionTitle()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        return null;
    }

    public java.lang.String getTransferableSectionTitle()
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        return null;
    }

<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onUpdateMemberRoutes(java.util.List)>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onAddMemberRoute(java.lang.String)>
<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onRemoveMemberRoute(java.lang.String)>
    void setOnDynamicRoutesChangedListener(java.util.concurrent.Executor, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;
        java.util.concurrent.Executor r1, $r11;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r2;
        java.lang.Object r3, $r7;
        androidx.mediarouter.media.MediaRouteDescriptor r4;
        java.util.Collection r5, $r8, $r9;
        java.lang.Throwable r6, $r14;
        boolean $z0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1 $r10;
        java.lang.NullPointerException $r12, $r13;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener;

        $r7 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        if r1 != null goto label2;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("Executor shouldn\'t be null");

        throw $r13;

     label2:
        if r2 != null goto label3;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("Listener shouldn\'t be null");

        throw $r12;

     label3:
        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor> = r1;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener mListener> = r2;

        $r8 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes>;

        if $r8 == null goto label4;

        $r9 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes>;

        $z0 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r4 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mPendingGroupRoute>;

        r5 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes>;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mPendingGroupRoute> = null;

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes> = null;

        $r11 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>;

        $r10 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1;

        specialinvoke $r10.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$1: void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>(r0, r2, r4, r5);

        interfaceinvoke $r11.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r10);

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r3;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void notifyDynamicRoutesChanged(java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;
        java.util.Collection r1;
        java.lang.Object r2, $r5;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r3;
        java.lang.Throwable r4, $r11;
        java.util.concurrent.Executor $r6, $r9;
        java.util.ArrayList $r7;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2 $r8;
        java.lang.NullPointerException $r10;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("routes must not be null");

        throw $r10;

     label1:
        $r5 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>;

        if $r6 == null goto label3;

        r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener mListener>;

        $r9 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>;

        $r8 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2;

        specialinvoke $r8.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$2: void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener,java.util.Collection)>(r0, r3, r1);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

        goto label4;

     label3:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes> = $r7;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void notifyDynamicRoutesChanged(androidx.mediarouter.media.MediaRouteDescriptor, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        java.util.Collection r2;
        java.lang.Object r3, $r6;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener r4;
        java.lang.Throwable r5, $r13;
        java.util.concurrent.Executor $r7, $r10;
        java.util.ArrayList $r8;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3 $r9;
        java.lang.NullPointerException $r11, $r12;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        r2 := @parameter1: java.util.Collection;

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("groupRoute must not be null");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("dynamicRoutes must not be null");

        throw $r11;

     label2:
        $r6 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label3:
        $r7 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>;

        if $r7 == null goto label4;

        r4 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener mListener>;

        $r10 = r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.concurrent.Executor mExecutor>;

        $r9 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3;

        specialinvoke $r9.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$3: void <init>(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$OnDynamicRoutesChangedListener,androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>(r0, r4, r1, r2);

        interfaceinvoke $r10.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r9);

        goto label5;

     label4:
        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mPendingGroupRoute> = r1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: java.util.Collection mPendingRoutes> = $r8;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

androidx.mediarouter.media.MediaRouteProvider$ProviderHandler
<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: androidx.mediarouter.media.MediaRouteProvider this$0>
    void <init>(androidx.mediarouter.media.MediaRouteProvider)
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler r0;
        androidx.mediarouter.media.MediaRouteProvider r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider;

        r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: androidx.mediarouter.media.MediaRouteProvider this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderHandler r0;
        android.os.Message r1;
        int $i0;
        androidx.mediarouter.media.MediaRouteProvider $r2, $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: androidx.mediarouter.media.MediaRouteProvider this$0>;

        virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider: void deliverDescriptorChanged()>();

        goto label3;

     label2:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderHandler: androidx.mediarouter.media.MediaRouteProvider this$0>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteProvider: void deliverDiscoveryRequestChanged()>();

     label3:
        return;
    }

androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata
<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: android.content.ComponentName mComponentName>
    void <init>(android.content.ComponentName)
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata r0;
        android.content.ComponentName r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        r1 := @parameter0: android.content.ComponentName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("componentName must not be null");

        throw $r2;

     label1:
        r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: android.content.ComponentName mComponentName> = r1;

        return;
    }

    public java.lang.String getPackageName()
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata r0;
        android.content.ComponentName $r1;
        java.lang.String $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: android.content.ComponentName mComponentName>;

        $r2 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        return $r2;
    }

    public android.content.ComponentName getComponentName()
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata r0;
        android.content.ComponentName $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: android.content.ComponentName mComponentName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r7;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProviderMetadata{ componentName=");

        $r3 = r0.<androidx.mediarouter.media.MediaRouteProvider$ProviderMetadata: android.content.ComponentName mComponentName>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

androidx.mediarouter.media.MediaRouteProvider$RouteController
    public void <init>()
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onRelease()
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        return;
    }

    public void onSelect()
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        return;
    }

    public void onUnselect()
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        return;
    }

    public void onUnselect(int)
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;
        int i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onUnselect()>();

        return;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;
        int i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        i0 := @parameter0: int;

        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;
        int i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        i0 := @parameter0: int;

        return;
    }

    public boolean onControlRequest(android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        return 0;
    }

