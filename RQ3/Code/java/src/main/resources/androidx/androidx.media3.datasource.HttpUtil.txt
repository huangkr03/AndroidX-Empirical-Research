androidx.media3.datasource.HttpUtil
<androidx.media3.datasource.HttpUtil: java.lang.String TAG>
<androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_START_AND_END>
<androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_SIZE>
    private void <init>()
    {
        androidx.media3.datasource.HttpUtil r0;

        r0 := @this: androidx.media3.datasource.HttpUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String buildRangeRequestHeader(long, long)
    {
        long l0, l1, $l4, $l5;
        java.lang.StringBuilder r0, $r1;
        byte $b2, $b3, $b6;
        java.lang.String $r5;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        $b6 = l1 cmp -1L;

        if $b6 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes=");

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $b3 = l1 cmp -1L;

        if $b3 == 0 goto label2;

        $l4 = l0 + l1;

        $l5 = $l4 - 1L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

     label2:
        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static long getDocumentSize(java.lang.String)
    {
        java.lang.String r0, $r3, $r5;
        java.util.regex.Matcher r1;
        boolean $z0, $z1;
        java.util.regex.Pattern $r2;
        java.lang.Object $r4;
        long $l0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        $r2 = <androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_SIZE>;

        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        goto label3;

     label2:
        $l0 = -1L;

     label3:
        return $l0;
    }

    public static long getContentLength(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r5, $r6, $r8, $r15, $r21, $r27;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r2;
        java.lang.Object $r4, $r7;
        long $l0, $l1, $l2, l5, l6;
        byte $b3, $b4;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26;
        java.lang.Throwable $r16, $r22, r28, r30;
        java.util.regex.Matcher r29;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l5 = -1L;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label4;

     label1:
        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r28 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected Content-Length [");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("HttpUtil", $r21);

     label4:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label9;

        $r2 = <androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_START_AND_END>;

        r29 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke r29.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label9;

     label5:
        $r3 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r6 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $l2 = $l0 - $l1;

        l6 = $l2 + 1L;

        $b3 = l5 cmp 0L;

        if $b3 >= 0 goto label6;

        l5 = l6;

        goto label7;

     label6:
        $b4 = l5 cmp l6;

        if $b4 == 0 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent headers [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] [");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("HttpUtil", $r15);

        l5 = staticinvoke <java.lang.Math: long max(long,long)>(l5, l6);

     label7:
        goto label9;

     label8:
        $r22 := @caughtexception;

        r30 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected Content-Range [");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("HttpUtil", $r27);

     label9:
        return l5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label5 to label7 with label8;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("bytes (\\d+)-(\\d+)/(?:\\d+|\\*)");

        <androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_START_AND_END> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("bytes (?:(?:\\d+-\\d+)|\\*)/(\\d+)");

        <androidx.media3.datasource.HttpUtil: java.util.regex.Pattern CONTENT_RANGE_WITH_SIZE> = $r1;

        return;
    }

