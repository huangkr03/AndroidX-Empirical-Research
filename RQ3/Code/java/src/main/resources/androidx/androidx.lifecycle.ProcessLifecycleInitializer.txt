androidx.lifecycle.ProcessLifecycleInitializer
    public void <init>()
    {
        androidx.lifecycle.ProcessLifecycleInitializer r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.lifecycle.LifecycleOwner create(android.content.Context)
    {
        androidx.lifecycle.ProcessLifecycleInitializer r0;
        android.content.Context r1;
        androidx.startup.AppInitializer r2, $r3;
        java.lang.Class $r4;
        boolean $z0;
        androidx.lifecycle.ProcessLifecycleOwner$Companion $r5, $r6;
        androidx.lifecycle.LifecycleOwner $r7;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, $r10;

        r0 := @this: androidx.lifecycle.ProcessLifecycleInitializer;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = staticinvoke <androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getInstance(context)");

        r2 = $r3;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r2.<androidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)>($r4);

        if $z0 != 0 goto label1;

        $r10 = "ProcessLifecycleInitializer cannot be initialized lazily.\n               Please ensure that you have:\n               <meta-data\n                   android:name=\'androidx.lifecycle.ProcessLifecycleInitializer\'\n                   android:value=\'androidx.startup\' />\n               under InitializationProvider in your AndroidManifest.xml";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        staticinvoke <androidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)>(r1);

        $r5 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion>;

        virtualinvoke $r5.<androidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)>(r1);

        $r6 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()>();

        return $r7;
    }

    public java.util.List dependencies()
    {
        androidx.lifecycle.ProcessLifecycleInitializer r0;
        java.util.List $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleInitializer;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public volatile java.lang.Object create(android.content.Context)
    {
        androidx.lifecycle.ProcessLifecycleInitializer r0;
        android.content.Context r1;
        androidx.lifecycle.LifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleInitializer;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<androidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)>(r1);

        return $r2;
    }

