androidx.compose.animation.graphics.vector.Animator
    private void <init>()
    {
        androidx.compose.animation.graphics.vector.Animator r0;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>
    public final androidx.compose.ui.graphics.vector.VectorConfig createVectorConfig(androidx.compose.animation.core.Transition, int, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.graphics.vector.Animator r0;
        androidx.compose.animation.core.Transition r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.compose.runtime.Composer $r2;
        androidx.compose.animation.graphics.vector.StateVectorConfig r3, $r9, $r10;
        boolean z0, $z3, $z4;
        java.lang.Object r4, r5, $r7, $r13;
        androidx.compose.runtime.Composer$Companion $r6;
        androidx.compose.ui.graphics.vector.VectorConfig $r8;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        i0 := @parameter1: int;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transition");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1481697905);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(createVectorConfig)P(1)*53@2078L32,54@2140L46:Animator.kt#p9hpxh");

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1481697905, $i1, -1, "androidx.compose.animation.graphics.vector.Animator.createVectorConfig (Animator.kt:49)");

     label1:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember):Composables.kt#9igjgp");

        z0 = 0;

        r4 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r6 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r7 goto label2;

        $r9 = new androidx.compose.animation.graphics.vector.StateVectorConfig;

        specialinvoke $r9.<androidx.compose.animation.graphics.vector.StateVectorConfig: void <init>()>();

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>($r9);

        $r13 = $r9;

        goto label3;

     label2:
        $r13 = r4;

     label3:
        r5 = $r13;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r10 = (androidx.compose.animation.graphics.vector.StateVectorConfig) r5;

        $i2 = 14 & $i1;

        $i5 = 64 | $i2;

        $i3 = $i1 << 3;

        $i4 = 896 & $i3;

        $i8 = $i5 | $i4;

        $i6 = $i1 << 3;

        $i7 = 7168 & $i6;

        $i9 = $i8 | $i7;

        virtualinvoke r0.<androidx.compose.animation.graphics.vector.Animator: void Configure(androidx.compose.animation.core.Transition,androidx.compose.animation.graphics.vector.StateVectorConfig,int,androidx.compose.runtime.Composer,int)>(r1, $r10, i0, $r2, $i9);

        r3 = (androidx.compose.animation.graphics.vector.StateVectorConfig) r5;

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r8 = (androidx.compose.ui.graphics.vector.VectorConfig) r3;

        return $r8;
    }

    public final void Configure(androidx.compose.animation.core.Transition, androidx.compose.animation.graphics.vector.StateVectorConfig, int, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.graphics.vector.Animator r0;
        androidx.compose.animation.core.Transition r1;
        androidx.compose.animation.graphics.vector.StateVectorConfig r2;
        int i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Map r3, r5, r6, r7;
        java.lang.Object r4, r8, $r14, $r15, $r16, $r20, $r25;
        boolean $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z22, $z24;
        java.util.LinkedHashMap $r9;
        java.util.Set $r10;
        androidx.compose.runtime.ScopeUpdateScope $r11;
        androidx.compose.animation.graphics.vector.Animator$Configure$2 $r12;
        kotlin.jvm.functions.Function2 $r13;
        androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1 $r17;
        java.util.Comparator $r18;
        androidx.compose.runtime.Composer$Companion $r19;
        androidx.compose.runtime.Composer $r21, $r22;
        java.lang.Integer r23;
        java.util.Iterator r26;
        java.util.Map$Entry $r27;
        java.lang.String $r28, $r37;
        androidx.compose.animation.graphics.vector.PropertyValues $r29;
        java.util.List r30;
        androidx.compose.runtime.State r31;
        java.lang.IllegalStateException $r33;
        java.lang.StringBuilder $r34, $r35, $r36;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        r2 := @parameter1: androidx.compose.animation.graphics.vector.StateVectorConfig;

        i0 := @parameter2: int;

        $r21 := @parameter3: androidx.compose.runtime.Composer;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transition");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        $r22 = interfaceinvoke $r21.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(1894587123);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r22, "C(Configure)P(2)64@2384L174,*71@2705L54:Animator.kt#p9hpxh");

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1894587123, $i1, -1, "androidx.compose.animation.graphics.vector.Animator.Configure (Animator.kt:59)");

     label01:
        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r22.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r22, "C(remember)P(1):Composables.kt#9igjgp");

        z22 = interfaceinvoke $r22.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r23);

        r4 = interfaceinvoke $r22.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z22 != 0 goto label02;

        $r19 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r20 = virtualinvoke $r19.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r20 goto label03;

     label02:
        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        r5 = (java.util.Map) $r9;

        r6 = r5;

        virtualinvoke r0.<androidx.compose.animation.graphics.vector.Animator: void collectPropertyValues(java.util.Map,int,int)>(r6, i0, 0);

        r7 = r5;

        interfaceinvoke $r22.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r7);

        $r25 = r7;

        goto label04;

     label03:
        $r25 = r4;

     label04:
        r8 = $r25;

        interfaceinvoke $r22.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r3 = (java.util.Map) r8;

        $r10 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r26 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z24 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label40;

        $r14 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r27 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke $r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (java.lang.String) $r15;

        $r16 = interfaceinvoke $r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (androidx.compose.animation.graphics.vector.PropertyValues) $r16;

        r30 = virtualinvoke $r29.<androidx.compose.animation.graphics.vector.PropertyValues: java.util.List getTimestamps()>();

        $i4 = interfaceinvoke r30.<java.util.List: int size()>();

        if $i4 <= 1 goto label06;

        $r17 = new androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1;

        specialinvoke $r17.<androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1: void <init>()>();

        $r18 = (java.util.Comparator) $r17;

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>(r30, $r18);

     label06:
        $i5 = 14 & $i1;

        $i7 = 4096 | $i5;

        $i6 = 896 & $i1;

        $i8 = $i7 | $i6;

        r31 = virtualinvoke $r29.<androidx.compose.animation.graphics.vector.PropertyValues: androidx.compose.runtime.State createState(androidx.compose.animation.core.Transition,java.lang.String,int,androidx.compose.runtime.Composer,int)>(r1, $r28, i0, $r22, $i8);

        $i9 = virtualinvoke $r28.<java.lang.String: int hashCode()>();

        lookupswitch($i9)
        {
            case -1721943862: goto label19;
            case -1721943861: goto label18;
            case -1143814757: goto label11;
            case -1141881952: goto label16;
            case -1121758502: goto label20;
            case -987906986: goto label13;
            case -987906985: goto label12;
            case -908189618: goto label15;
            case -908189617: goto label17;
            case -170626757: goto label14;
            case -40300674: goto label10;
            case 1233923439: goto label08;
            case 1903848966: goto label21;
            case 1905781771: goto label22;
            case 1924065902: goto label07;
            case 2136119284: goto label09;
            default: goto label39;
        };

     label07:
        $z6 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("strokeWidth");

        if $z6 != 0 goto label31;

        goto label39;

     label08:
        $z9 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("pathData");

        if $z9 != 0 goto label38;

        goto label39;

     label09:
        $z5 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("trimPathEnd");

        if $z5 != 0 goto label34;

        goto label39;

     label10:
        $z10 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("rotation");

        if $z10 != 0 goto label23;

        goto label39;

     label11:
        $z18 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("fillAlpha");

        if $z18 != 0 goto label30;

        goto label39;

     label12:
        $z14 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("pivotY");

        if $z14 != 0 goto label25;

        goto label39;

     label13:
        $z15 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("pivotX");

        if $z15 != 0 goto label24;

        goto label39;

     label14:
        $z11 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("trimPathStart");

        if $z11 != 0 goto label33;

        goto label39;

     label15:
        $z13 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("scaleX");

        if $z13 != 0 goto label26;

        goto label39;

     label16:
        $z17 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("fillColor");

        if $z17 != 0 goto label36;

        goto label39;

     label17:
        $z12 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("scaleY");

        if $z12 != 0 goto label27;

        goto label39;

     label18:
        $z19 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("translateY");

        if $z19 != 0 goto label29;

        goto label39;

     label19:
        $z20 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("translateX");

        if $z20 != 0 goto label28;

        goto label39;

     label20:
        $z16 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("trimPathOffset");

        if $z16 != 0 goto label35;

        goto label39;

     label21:
        $z8 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("strokeAlpha");

        if $z8 != 0 goto label32;

        goto label39;

     label22:
        $z7 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("strokeColor");

        if $z7 != 0 goto label37;

        goto label39;

     label23:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setRotationState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label24:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setPivotXState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label25:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setPivotYState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label26:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setScaleXState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label27:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setScaleYState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label28:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setTranslateXState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label29:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setTranslateYState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label30:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setFillAlphaState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label31:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setStrokeWidthState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label32:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setStrokeAlphaState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label33:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setTrimPathStartState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label34:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setTrimPathEndState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label35:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.Float>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setTrimPathOffsetState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label36:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setFillColorState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label37:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setStrokeColorState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label38:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r31, "null cannot be cast to non-null type androidx.compose.runtime.State<kotlin.collections.List<androidx.compose.ui.graphics.vector.PathNode>>");

        virtualinvoke r2.<androidx.compose.animation.graphics.vector.StateVectorConfig: void setPathDataState(androidx.compose.runtime.State)>(r31);

        goto label05;

     label39:
        $r33 = new java.lang.IllegalStateException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown propertyName: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r37);

        throw $r33;

     label40:
        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label41;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label41:
        $r11 = interfaceinvoke $r22.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r11 != null goto label42;

        goto label43;

     label42:
        $r12 = new androidx.compose.animation.graphics.vector.Animator$Configure$2;

        specialinvoke $r12.<androidx.compose.animation.graphics.vector.Animator$Configure$2: void <init>(androidx.compose.animation.graphics.vector.Animator,androidx.compose.animation.core.Transition,androidx.compose.animation.graphics.vector.StateVectorConfig,int,int)>(r0, r1, r2, i0, $i1);

        $r13 = (kotlin.jvm.functions.Function2) $r12;

        interfaceinvoke $r11.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r13);

     label43:
        return;
    }

<androidx.compose.animation.graphics.vector.Animator: void collectPropertyValues(java.util.Map,int,int)>
    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.graphics.vector.Animator r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.animation.graphics.vector.Animator: void <init>()>();

        return;
    }

androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1
    public void <init>()
    {
        androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1 r0;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1 r0;
        java.lang.Object r1, r2;
        java.lang.Comparable r3, $r6;
        int $i0, $i1, $i2;
        java.lang.Integer $r4, $r5;
        androidx.compose.animation.graphics.vector.Timestamp r7, r8;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator$Configure$$inlined$sortBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r7 = (androidx.compose.animation.graphics.vector.Timestamp) r1;

        $i0 = virtualinvoke r7.<androidx.compose.animation.graphics.vector.Timestamp: int getTimeMillis()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r8 = (androidx.compose.animation.graphics.vector.Timestamp) r2;

        r3 = (java.lang.Comparable) $r4;

        $i1 = virtualinvoke r8.<androidx.compose.animation.graphics.vector.Timestamp: int getTimeMillis()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = (java.lang.Comparable) $r5;

        $i2 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r6);

        return $i2;
    }

androidx.compose.animation.graphics.vector.Animator$Configure$2
<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.Animator $tmp0_rcvr>
<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.core.Transition $transition>
<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.StateVectorConfig $config>
<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $overallDuration>
<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $$changed>
    void <init>(androidx.compose.animation.graphics.vector.Animator, androidx.compose.animation.core.Transition, androidx.compose.animation.graphics.vector.StateVectorConfig, int, int)
    {
        androidx.compose.animation.graphics.vector.Animator$Configure$2 r0;
        androidx.compose.animation.graphics.vector.Animator $r1;
        androidx.compose.animation.core.Transition $r2;
        androidx.compose.animation.graphics.vector.StateVectorConfig $r3;
        int $i0, $i1;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator$Configure$2;

        $r1 := @parameter0: androidx.compose.animation.graphics.vector.Animator;

        $r2 := @parameter1: androidx.compose.animation.core.Transition;

        $r3 := @parameter2: androidx.compose.animation.graphics.vector.StateVectorConfig;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.Animator $tmp0_rcvr> = $r1;

        r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.core.Transition $transition> = $r2;

        r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.StateVectorConfig $config> = $r3;

        r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $overallDuration> = $i0;

        r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $$changed> = $i1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.graphics.vector.Animator$Configure$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.animation.graphics.vector.StateVectorConfig $r2;
        androidx.compose.animation.core.Transition $r3;
        androidx.compose.animation.graphics.vector.Animator $r4;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator$Configure$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r4 = r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.Animator $tmp0_rcvr>;

        $r3 = r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.core.Transition $transition>;

        $r2 = r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: androidx.compose.animation.graphics.vector.StateVectorConfig $config>;

        $i3 = r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $overallDuration>;

        $i1 = r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r4.<androidx.compose.animation.graphics.vector.Animator: void Configure(androidx.compose.animation.core.Transition,androidx.compose.animation.graphics.vector.StateVectorConfig,int,androidx.compose.runtime.Composer,int)>($r3, $r2, $i3, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.graphics.vector.Animator$Configure$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.animation.graphics.vector.Animator$Configure$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.animation.graphics.vector.Animator$Configure$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

