androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension
<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: boolean liveLiteralsEnabled>
<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: boolean sourceInformationEnabled>
    public void generate(org.jetbrains.kotlin.ir.declarations.IrModuleFragment, org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext r2;
        org.jetbrains.kotlin.resolve.DelegatingBindingTrace r3, $r6;
        org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper r4, $r8;
        androidx.compose.compiler.plugins.kotlin.VersionChecker $r5;
        org.jetbrains.kotlin.resolve.BindingContext $r7;
        androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization $r9;
        org.jetbrains.kotlin.resolve.BindingTrace $r10, $r12, $r15;
        androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer $r11;
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer $r13;
        androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer $r14;
        boolean $z0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        r2 := @parameter1: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "moduleFragment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pluginContext");

        $r5 = new androidx.compose.compiler.plugins.kotlin.VersionChecker;

        specialinvoke $r5.<androidx.compose.compiler.plugins.kotlin.VersionChecker: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)>(r2);

        virtualinvoke $r5.<androidx.compose.compiler.plugins.kotlin.VersionChecker: void check()>();

        $r6 = new org.jetbrains.kotlin.resolve.DelegatingBindingTrace;

        $r7 = interfaceinvoke r2.<org.jetbrains.kotlin.backend.common.extensions.IrPluginContext: org.jetbrains.kotlin.resolve.BindingContext getBindingContext()>();

        specialinvoke $r6.<org.jetbrains.kotlin.resolve.DelegatingBindingTrace: void <init>(org.jetbrains.kotlin.resolve.BindingContext,java.lang.String,boolean,org.jetbrains.kotlin.resolve.BindingTraceFilter,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r7, "trace in ComposeIrGenerationExtension", 0, null, 0, 28, null);

        r3 = $r6;

        $r8 = new org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper;

        specialinvoke $r8.<org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper: void <init>(org.jetbrains.kotlin.ir.util.DescriptorsRemapper,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r4 = $r8;

        $r9 = new androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization;

        $r10 = (org.jetbrains.kotlin.resolve.BindingTrace) r3;

        specialinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext,org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper,org.jetbrains.kotlin.resolve.BindingTrace)>(r2, r4, $r10);

        virtualinvoke $r9.<androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization: void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)>(r1);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtensionKt: void generateSymbols(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)>(r2);

        $r11 = new androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer;

        $r12 = (org.jetbrains.kotlin.resolve.BindingTrace) r3;

        specialinvoke $r11.<androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext,org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper,org.jetbrains.kotlin.resolve.BindingTrace)>(r2, r4, $r12);

        virtualinvoke $r11.<androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer: void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)>(r1);

        $r13 = new androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        specialinvoke $r13.<androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)>(r2);

        virtualinvoke $r13.<androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer: void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)>(r1);

        $r14 = new androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer;

        $r15 = (org.jetbrains.kotlin.resolve.BindingTrace) r3;

        $z0 = r0.<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: boolean sourceInformationEnabled>;

        specialinvoke $r14.<androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer: void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext,org.jetbrains.kotlin.ir.util.DeepCopySymbolRemapper,org.jetbrains.kotlin.resolve.BindingTrace,boolean)>(r2, r4, $r15, $z0);

        virtualinvoke $r14.<androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer: void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)>(r1);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtensionKt: void generateSymbols(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)>(r2);

        return;
    }

    public void <init>(boolean, boolean)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension r0;
        boolean z0, z1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: boolean liveLiteralsEnabled> = z0;

        r0.<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: boolean sourceInformationEnabled> = z1;

        return;
    }

    public void <init>(boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0, z1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z1 = 1;

     label2:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: void <init>(boolean,boolean)>(z0, z1);

        return;
    }

    public void <init>()
    {
        androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension: void <init>(boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 3, null);

        return;
    }

    public org.jetbrains.kotlin.ir.declarations.IrDeclaration resolveSymbol(org.jetbrains.kotlin.ir.symbols.IrSymbol)
    {
        androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension r0;
        org.jetbrains.kotlin.ir.symbols.IrSymbol r1;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension;

        r1 := @parameter0: org.jetbrains.kotlin.ir.symbols.IrSymbol;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "symbol");

        $r2 = staticinvoke <org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension$DefaultImpls: org.jetbrains.kotlin.ir.declarations.IrDeclaration resolveSymbol(org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension,org.jetbrains.kotlin.ir.symbols.IrSymbol)>(r0, r1);

        return $r2;
    }

