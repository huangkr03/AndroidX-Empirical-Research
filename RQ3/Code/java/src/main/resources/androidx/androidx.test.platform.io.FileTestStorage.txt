androidx.test.platform.io.FileTestStorage
<androidx.test.platform.io.FileTestStorage: java.lang.String TAG>
<androidx.test.platform.io.FileTestStorage: androidx.test.platform.io.OutputDirCalculator outputDirCalculator>
    public java.io.InputStream openInputFile(java.lang.String) throws java.io.IOException
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1;
        java.io.File r2, $r3;
        boolean $z0;
        android.app.Instrumentation $r4;
        android.content.Context $r5;
        android.content.res.AssetManager $r6;
        java.io.InputStream $r7;
        java.io.FileInputStream $r8;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = $r3;

        $z0 = virtualinvoke r2.<java.io.File: boolean isAbsolute()>();

        if $z0 == 0 goto label1;

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        return $r8;

     label1:
        $r4 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r5 = virtualinvoke $r4.<android.app.Instrumentation: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r1);

        return $r7;
    }

    public java.io.InputStream openInternalInputFile(java.lang.String) throws java.io.IOException
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1;
        java.io.InputStream $r2;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.test.platform.io.FileTestStorage: java.io.InputStream openInputFile(java.lang.String)>(r1);

        return $r2;
    }

    public java.io.OutputStream openInternalOutputFile(java.lang.String) throws java.io.IOException
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.test.platform.io.FileTestStorage: java.io.OutputStream openOutputFile(java.lang.String)>(r1);

        return $r2;
    }

    public java.io.OutputStream openOutputFile(java.lang.String) throws java.io.IOException
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1;
        java.io.File $r2, $r4, $r6, r7;
        boolean $z0;
        java.io.FileOutputStream $r3;
        androidx.test.platform.io.OutputDirCalculator $r5;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r2;

        $z0 = virtualinvoke r7.<java.io.File: boolean isAbsolute()>();

        if $z0 != 0 goto label1;

        $r4 = new java.io.File;

        $r5 = r0.<androidx.test.platform.io.FileTestStorage: androidx.test.platform.io.OutputDirCalculator outputDirCalculator>;

        $r6 = virtualinvoke $r5.<androidx.test.platform.io.OutputDirCalculator: java.io.File getOutputDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r1);

        r7 = $r4;

     label1:
        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r7);

        return $r3;
    }

    public java.io.OutputStream openOutputFile(java.lang.String, boolean) throws java.io.IOException
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.io.File $r2, $r4, $r6, r7;
        java.io.FileOutputStream $r3;
        androidx.test.platform.io.OutputDirCalculator $r5;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r2;

        $z1 = virtualinvoke r7.<java.io.File: boolean isAbsolute()>();

        if $z1 != 0 goto label1;

        $r4 = new java.io.File;

        $r5 = r0.<androidx.test.platform.io.FileTestStorage: androidx.test.platform.io.OutputDirCalculator outputDirCalculator>;

        $r6 = virtualinvoke $r5.<androidx.test.platform.io.OutputDirCalculator: java.io.File getOutputDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r1);

        r7 = $r4;

     label1:
        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r7, z0);

        return $r3;
    }

    public java.lang.String getInputArg(java.lang.String)
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String r1, $r3;
        android.os.Bundle $r2;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.os.Bundle getArguments()>();

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Map getInputArgs()
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.util.HashMap r1, $r5;
        android.os.Bundle r2;
        java.util.Iterator r3;
        java.lang.String r4, $r8;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r1 = $r5;

        r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.os.Bundle getArguments()>();

        $r6 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        $r8 = virtualinvoke r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r8);

        goto label1;

     label2:
        return r1;
    }

    public java.util.Map getOutputProperties()
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.lang.String $r1;
        java.util.Map $r2;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        $r1 = <androidx.test.platform.io.FileTestStorage: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Output properties is not supported.");

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/platform/io/FileTestStorage;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.platform.io.FileTestStorage: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        androidx.test.platform.io.FileTestStorage r0;
        androidx.test.platform.io.OutputDirCalculator $r1;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.test.platform.io.OutputDirCalculator;

        specialinvoke $r1.<androidx.test.platform.io.OutputDirCalculator: void <init>()>();

        r0.<androidx.test.platform.io.FileTestStorage: androidx.test.platform.io.OutputDirCalculator outputDirCalculator> = $r1;

        return;
    }

    public void addOutputProperties(java.util.Map)
    {
        androidx.test.platform.io.FileTestStorage r0;
        java.util.Map r1;
        java.lang.String $r2;

        r0 := @this: androidx.test.platform.io.FileTestStorage;

        r1 := @parameter0: java.util.Map;

        $r2 = <androidx.test.platform.io.FileTestStorage: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Output properties is not supported.");

        return;
    }

