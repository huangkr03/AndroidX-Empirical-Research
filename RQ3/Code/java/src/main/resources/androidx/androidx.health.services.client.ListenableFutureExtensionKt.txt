androidx.health.services.client.ListenableFutureExtensionKt
    public static final java.lang.Object awaitWithException(com.google.common.util.concurrent.ListenableFuture, kotlin.coroutines.Continuation) throws androidx.health.services.client.HealthServicesException
    {
        com.google.common.util.concurrent.ListenableFuture $r0;
        kotlin.coroutines.Continuation r1, r20;
        java.lang.Object r2, r3, $r5, r6, $r15;
        java.lang.Throwable r4, $r9, r21, r22;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10, $r13;
        androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1 $r14, r16;
        androidx.health.services.client.HealthServicesException r17, r18;
        java.lang.IllegalStateException r19;

        $r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1;

        if $z0 == 0 goto label01;

        $r14 = (androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1) r1;

        $i0 = $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: int label>;

        $i3 = $i2 - -2147483648;

        $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: int label> = $i3;

        goto label02;

     label01:
        r16 = new androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1;

        specialinvoke r16.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: void <init>(kotlin.coroutines.Continuation)>(r1);

        $r14 = r16;

     label02:
        $r5 = $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: java.lang.Object result>;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label06;
            default: goto label12;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label04:
        $r14.<androidx.health.services.client.ListenableFutureExtensionKt$awaitWithException$1: int label> = 1;

        r20 = (kotlin.coroutines.Continuation) $r14;

        $r15 = staticinvoke <androidx.concurrent.futures.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>($r0, r20);

     label05:
        if $r15 != r6 goto label07;

        return r6;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r15 = $r5;

     label07:
        r3 = $r15;

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = virtualinvoke r4.<android.os.RemoteException: java.lang.String getMessage()>();

        if $r10 == null goto label10;

        r17 = new androidx.health.services.client.HealthServicesException;

        $r13 = virtualinvoke r4.<android.os.RemoteException: java.lang.String getMessage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r13);

        specialinvoke r17.<androidx.health.services.client.HealthServicesException: void <init>(java.lang.String)>($r13);

        r21 = (java.lang.Throwable) r17;

        throw r21;

     label10:
        r18 = new androidx.health.services.client.HealthServicesException;

        specialinvoke r18.<androidx.health.services.client.HealthServicesException: void <init>(java.lang.String)>("An unknown error has occurred");

        r22 = (java.lang.Throwable) r18;

        throw r22;

     label11:
        r2 = r3;

        return r2;

     label12:
        r19 = new java.lang.IllegalStateException;

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r19;

        catch android.os.RemoteException from label04 to label05 with label09;
        catch android.os.RemoteException from label06 to label08 with label09;
    }

