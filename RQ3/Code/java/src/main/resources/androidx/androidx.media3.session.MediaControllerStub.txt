androidx.media3.session.MediaControllerStub
<androidx.media3.session.MediaControllerStub: java.lang.String TAG>
<androidx.media3.session.MediaControllerStub: int VERSION_INT>
<androidx.media3.session.MediaControllerStub: java.lang.ref.WeakReference controller>
    public void <init>(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerStub r0;
        androidx.media3.session.MediaControllerImplBase r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        specialinvoke r0.<androidx.media3.session.IMediaController$Stub: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.media3.session.MediaControllerStub: java.lang.ref.WeakReference controller> = $r2;

        return;
    }

    public void onSessionResult(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.SessionResult r2;
        java.lang.Throwable r3, $r6;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <androidx.media3.session.SessionResult: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r2 = (androidx.media3.session.SessionResult) $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for SessionResult", r3);

        return;

     label4:
        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void setControllerFutureResult(int,java.lang.Object)>(i0, r2);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onLibraryResult(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.LibraryResult r2;
        java.lang.Throwable r3, $r6;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <androidx.media3.session.LibraryResult: androidx.media3.common.Bundleable$Creator UNKNOWN_TYPE_CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r2 = (androidx.media3.session.LibraryResult) $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for LibraryResult", r3);

        return;

     label4:
        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void setControllerFutureResult(int,java.lang.Object)>(i0, r2);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onConnected(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.ConnectionState r2;
        java.lang.Throwable r3, $r7;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;
        androidx.media3.session.MediaControllerStub$ControllerTask $r6;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <androidx.media3.session.ConnectionState: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r2 = (androidx.media3.session.ConnectionState) $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Malformed Bundle for ConnectionResult. Disconnected from the session.", r3);

        virtualinvoke r0.<androidx.media3.session.MediaControllerStub: void onDisconnected(int)>(i0);

        return;

     label4:
        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (androidx.media3.session.ConnectionState)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onConnected$0(androidx.media3.session.ConnectionState,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r6);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onDisconnected(int)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        androidx.media3.session.MediaControllerStub$ControllerTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onDisconnected$1(androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r1);

        return;
    }

    public void onSetCustomLayout(int, java.util.List)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        java.util.List r1;
        com.google.common.collect.ImmutableList r2;
        java.lang.Throwable r3, $r6;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.session.MediaControllerStub$ControllerTask $r5;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

     label1:
        $r4 = <androidx.media3.session.CommandButton: androidx.media3.common.Bundleable$Creator CREATOR>;

        r2 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r4, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for CommandButton", r3);

        return;

     label4:
        $r5 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (int,java.util.List)>(i0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onSetCustomLayout$2(int,java.util.List,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r5);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onAvailableCommandsChangedFromSession(int, android.os.Bundle, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1, r2;
        androidx.media3.session.SessionCommands r3;
        java.lang.Throwable r4, $r10, $r11, r12;
        androidx.media3.common.Bundleable$Creator $r5, $r7;
        androidx.media3.common.Bundleable $r6, $r8;
        androidx.media3.session.MediaControllerStub$ControllerTask $r9;
        androidx.media3.common.Player$Commands r13;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.Bundle;

     label1:
        $r5 = <androidx.media3.session.SessionCommands: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r3 = (androidx.media3.session.SessionCommands) $r6;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r12 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for SessionCommands", r12);

        return;

     label4:
        $r7 = <androidx.media3.common.Player$Commands: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r13 = (androidx.media3.common.Player$Commands) $r8;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for Commands", r4);

        return;

     label7:
        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r3, r13) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onAvailableCommandsChangedFromSession$3(androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r9);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void onAvailableCommandsChangedFromPlayer(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.common.Player$Commands r2;
        java.lang.Throwable r3, $r7;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;
        androidx.media3.session.MediaControllerStub$ControllerTask $r6;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <androidx.media3.common.Player$Commands: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r2 = (androidx.media3.common.Player$Commands) $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for Commands", r3);

        return;

     label4:
        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (androidx.media3.common.Player$Commands)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onAvailableCommandsChangedFromPlayer$4(androidx.media3.common.Player$Commands,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r6);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onCustomCommand(int, android.os.Bundle, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1, r2;
        androidx.media3.session.SessionCommand r3;
        java.lang.Throwable r4, $r8;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaControllerStub$ControllerTask $r7;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.Bundle;

        if r2 != null goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaControllerStub", "Ignoring custom command with null args.");

        return;

     label1:
        $r5 = <androidx.media3.session.SessionCommand: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r3 = (androidx.media3.session.SessionCommand) $r6;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for SessionCommand", r4);

        return;

     label4:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (int,androidx.media3.session.SessionCommand,android.os.Bundle)>(i0, r3, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onCustomCommand$5(int,androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r7);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onPeriodicSessionPositionInfoChanged(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.SessionPositionInfo r2;
        java.lang.Throwable r3, $r7;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;
        androidx.media3.session.MediaControllerStub$ControllerTask $r6;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <androidx.media3.session.SessionPositionInfo: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r2 = (androidx.media3.session.SessionPositionInfo) $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for SessionPositionInfo", r3);

        return;

     label4:
        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (androidx.media3.session.SessionPositionInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onPeriodicSessionPositionInfoChanged$6(androidx.media3.session.SessionPositionInfo,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r6);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onPlayerInfoChanged(int, android.os.Bundle, boolean)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1, $r3;
        boolean z0;
        androidx.media3.session.PlayerInfo$BundlingExclusions $r2;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        $r2 = new androidx.media3.session.PlayerInfo$BundlingExclusions;

        specialinvoke $r2.<androidx.media3.session.PlayerInfo$BundlingExclusions: void <init>(boolean,boolean)>(z0, 1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.PlayerInfo$BundlingExclusions: android.os.Bundle toBundle()>();

        virtualinvoke r0.<androidx.media3.session.MediaControllerStub: void onPlayerInfoChangedWithExclusions(int,android.os.Bundle,android.os.Bundle)>(i0, r1, $r3);

        return;
    }

    public void onPlayerInfoChangedWithExclusions(int, android.os.Bundle, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1, r2;
        androidx.media3.session.PlayerInfo r3;
        java.lang.Throwable r4, $r10, $r11, r12;
        androidx.media3.common.Bundleable$Creator $r5, $r7;
        androidx.media3.common.Bundleable $r6, $r8;
        androidx.media3.session.MediaControllerStub$ControllerTask $r9;
        androidx.media3.session.PlayerInfo$BundlingExclusions r13;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.Bundle;

     label1:
        $r5 = <androidx.media3.session.PlayerInfo: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        r3 = (androidx.media3.session.PlayerInfo) $r6;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r12 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for PlayerInfo", r12);

        return;

     label4:
        $r7 = <androidx.media3.session.PlayerInfo$BundlingExclusions: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r13 = (androidx.media3.session.PlayerInfo$BundlingExclusions) $r8;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerStub", "Ignoring malformed Bundle for BundlingExclusions", r4);

        return;

     label7:
        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions)>(r3, r13) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onPlayerInfoChangedWithExclusions$7(androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r9);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void onExtrasChanged(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.MediaControllerStub$ControllerTask $r2;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (android.os.Bundle)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onExtrasChanged$8(android.os.Bundle,androidx.media3.session.MediaControllerImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r2);

        return;
    }

    public void onRenderedFirstFrame(int)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        androidx.media3.session.MediaControllerStub$ControllerTask $r1;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaControllerImplBase: void onRenderedFirstFrame()>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r1);

        return;
    }

    public void onSearchResultChanged(int, java.lang.String, int, android.os.Bundle) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0, i1;
        java.lang.String r1, $r7;
        android.os.Bundle r2;
        boolean $z0;
        androidx.media3.session.MediaControllerStub$ControllerTask $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaControllerStub", "onSearchResultChanged(): Ignoring empty query");

        return;

     label1:
        if i1 >= 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSearchResultChanged(): Ignoring negative itemCount: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaControllerStub", $r7);

        return;

     label2:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (java.lang.String,int,android.os.Bundle)>(r1, i1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onSearchResultChanged$9(java.lang.String,int,android.os.Bundle,androidx.media3.session.MediaBrowserImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaBrowserImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r3);

        return;
    }

    public void onChildrenChanged(int, java.lang.String, int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0, i1;
        java.lang.String r1, $r7;
        android.os.Bundle r2;
        boolean $z0;
        androidx.media3.session.MediaControllerStub$ControllerTask $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaControllerStub", "onChildrenChanged(): Ignoring empty parentId");

        return;

     label1:
        if i1 >= 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onChildrenChanged(): Ignoring negative itemCount: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaControllerStub", $r7);

        return;

     label2:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaControllerStub$ControllerTask (java.lang.String,int,android.os.Bundle)>(r1, i1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaControllerImplBase), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$onChildrenChanged$10(java.lang.String,int,android.os.Bundle,androidx.media3.session.MediaBrowserImplBase)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaBrowserImplBase));

        specialinvoke r0.<androidx.media3.session.MediaControllerStub: void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)>($r3);

        return;
    }

    public void destroy()
    {
        androidx.media3.session.MediaControllerStub r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        $r1 = r0.<androidx.media3.session.MediaControllerStub: java.lang.ref.WeakReference controller>;

        virtualinvoke $r1.<java.lang.ref.WeakReference: void clear()>();

        return;
    }

    private void setControllerFutureResult(int, java.lang.Object)
    {
        androidx.media3.session.MediaControllerStub r0;
        int i0;
        java.lang.Object r1, $r5;
        long l1;
        androidx.media3.session.MediaControllerImplBase r2;
        java.lang.Throwable r3, $r6;
        java.lang.ref.WeakReference $r4;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerStub: java.lang.ref.WeakReference controller>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.MediaControllerImplBase) $r5;

        if r2 != null goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        virtualinvoke r2.<androidx.media3.session.MediaControllerImplBase: void setFutureResult(int,java.lang.Object)>(i0, r1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void dispatchControllerTaskOnHandler(androidx.media3.session.MediaControllerStub$ControllerTask)
    {
        androidx.media3.session.MediaControllerStub r0;
        androidx.media3.session.MediaControllerStub$ControllerTask r1;
        long l0;
        androidx.media3.session.MediaControllerImplBase r2;
        android.os.Handler r3;
        java.lang.Throwable r4, $r9;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        androidx.media3.session.MediaController $r7;
        java.lang.Runnable $r8;

        r0 := @this: androidx.media3.session.MediaControllerStub;

        r1 := @parameter0: androidx.media3.session.MediaControllerStub$ControllerTask;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = r0.<androidx.media3.session.MediaControllerStub: java.lang.ref.WeakReference controller>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.MediaControllerImplBase) $r6;

        if r2 != null goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r7 = virtualinvoke r2.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        r3 = $r7.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        $r8 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerStub$ControllerTask)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerStub: void lambda$dispatchControllerTaskOnHandler$11(androidx.media3.session.MediaControllerImplBase,androidx.media3.session.MediaControllerStub$ControllerTask)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>(r3, $r8);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void lambda$dispatchControllerTaskOnHandler$11(androidx.media3.session.MediaControllerImplBase, androidx.media3.session.MediaControllerStub$ControllerTask)
    {
        androidx.media3.session.MediaControllerImplBase r0, r2;
        androidx.media3.session.MediaControllerStub$ControllerTask r1;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        r1 := @parameter1: androidx.media3.session.MediaControllerStub$ControllerTask;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: boolean isReleased()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = r0;

        interfaceinvoke r1.<androidx.media3.session.MediaControllerStub$ControllerTask: void run(androidx.media3.session.MediaControllerImplBase)>(r2);

        return;
    }

    private static void lambda$onChildrenChanged$10(java.lang.String, int, android.os.Bundle, androidx.media3.session.MediaBrowserImplBase)
    {
        java.lang.String r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.MediaBrowserImplBase r2;
        androidx.media3.common.Bundleable$Creator $r3;
        androidx.media3.common.Bundleable $r4;
        androidx.media3.session.MediaLibraryService$LibraryParams $r7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: androidx.media3.session.MediaBrowserImplBase;

        if r1 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r3 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        $r7 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r4;

     label2:
        virtualinvoke r2.<androidx.media3.session.MediaBrowserImplBase: void notifyChildrenChanged(java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r0, i0, $r7);

        return;
    }

    private static void lambda$onSearchResultChanged$9(java.lang.String, int, android.os.Bundle, androidx.media3.session.MediaBrowserImplBase)
    {
        java.lang.String r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.MediaBrowserImplBase r2;
        androidx.media3.common.Bundleable$Creator $r3;
        androidx.media3.common.Bundleable $r4;
        androidx.media3.session.MediaLibraryService$LibraryParams $r7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: androidx.media3.session.MediaBrowserImplBase;

        if r1 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r3 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r1);

        $r7 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r4;

     label2:
        virtualinvoke r2.<androidx.media3.session.MediaBrowserImplBase: void notifySearchResultChanged(java.lang.String,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r0, i0, $r7);

        return;
    }

    private static void lambda$onExtrasChanged$8(android.os.Bundle, androidx.media3.session.MediaControllerImplBase)
    {
        android.os.Bundle r0;
        androidx.media3.session.MediaControllerImplBase r1;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r1.<androidx.media3.session.MediaControllerImplBase: void onExtrasChanged(android.os.Bundle)>(r0);

        return;
    }

    private static void lambda$onPlayerInfoChangedWithExclusions$7(androidx.media3.session.PlayerInfo, androidx.media3.session.PlayerInfo$BundlingExclusions, androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.PlayerInfo r0;
        androidx.media3.session.PlayerInfo$BundlingExclusions r1;
        androidx.media3.session.MediaControllerImplBase r2;

        r0 := @parameter0: androidx.media3.session.PlayerInfo;

        r1 := @parameter1: androidx.media3.session.PlayerInfo$BundlingExclusions;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r2.<androidx.media3.session.MediaControllerImplBase: void onPlayerInfoChanged(androidx.media3.session.PlayerInfo,androidx.media3.session.PlayerInfo$BundlingExclusions)>(r0, r1);

        return;
    }

    private static void lambda$onPeriodicSessionPositionInfoChanged$6(androidx.media3.session.SessionPositionInfo, androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.SessionPositionInfo r0;
        androidx.media3.session.MediaControllerImplBase r1;

        r0 := @parameter0: androidx.media3.session.SessionPositionInfo;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r1.<androidx.media3.session.MediaControllerImplBase: void notifyPeriodicSessionPositionInfoChanged(androidx.media3.session.SessionPositionInfo)>(r0);

        return;
    }

    private static void lambda$onCustomCommand$5(int, androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.MediaControllerImplBase)
    {
        int i0;
        androidx.media3.session.SessionCommand r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaControllerImplBase r2;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.SessionCommand;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r2.<androidx.media3.session.MediaControllerImplBase: void onCustomCommand(int,androidx.media3.session.SessionCommand,android.os.Bundle)>(i0, r0, r1);

        return;
    }

    private static void lambda$onAvailableCommandsChangedFromPlayer$4(androidx.media3.common.Player$Commands, androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.common.Player$Commands r0;
        androidx.media3.session.MediaControllerImplBase r1;

        r0 := @parameter0: androidx.media3.common.Player$Commands;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r1.<androidx.media3.session.MediaControllerImplBase: void onAvailableCommandsChangedFromPlayer(androidx.media3.common.Player$Commands)>(r0);

        return;
    }

    private static void lambda$onAvailableCommandsChangedFromSession$3(androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands, androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.SessionCommands r0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.MediaControllerImplBase r2;

        r0 := @parameter0: androidx.media3.session.SessionCommands;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r2.<androidx.media3.session.MediaControllerImplBase: void onAvailableCommandsChangedFromSession(androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r0, r1);

        return;
    }

    private static void lambda$onSetCustomLayout$2(int, java.util.List, androidx.media3.session.MediaControllerImplBase)
    {
        int i0;
        java.util.List r0;
        androidx.media3.session.MediaControllerImplBase r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r1.<androidx.media3.session.MediaControllerImplBase: void onSetCustomLayout(int,java.util.List)>(i0, r0);

        return;
    }

    private static void lambda$onDisconnected$1(androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.MediaControllerImplBase r0;
        androidx.media3.session.MediaController $r1, $r2;
        java.lang.Runnable $r4;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplBase;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplBase: androidx.media3.session.MediaController getInstance()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaController)>($r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.MediaController: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r1.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r4);

        return;
    }

    private static void lambda$onConnected$0(androidx.media3.session.ConnectionState, androidx.media3.session.MediaControllerImplBase)
    {
        androidx.media3.session.ConnectionState r0;
        androidx.media3.session.MediaControllerImplBase r1;

        r0 := @parameter0: androidx.media3.session.ConnectionState;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplBase;

        virtualinvoke r1.<androidx.media3.session.MediaControllerImplBase: void onConnected(androidx.media3.session.ConnectionState)>(r0);

        return;
    }

androidx.media3.session.MediaControllerStub$ControllerTask
<androidx.media3.session.MediaControllerStub$ControllerTask: void run(androidx.media3.session.MediaControllerImplBase)>
