androidx.media3.extractor.AvcConfig
<androidx.media3.extractor.AvcConfig: java.util.List initializationData>
<androidx.media3.extractor.AvcConfig: int nalUnitLengthFieldLength>
<androidx.media3.extractor.AvcConfig: int width>
<androidx.media3.extractor.AvcConfig: int height>
<androidx.media3.extractor.AvcConfig: float pixelWidthHeightRatio>
<androidx.media3.extractor.AvcConfig: java.lang.String codecs>
    public static androidx.media3.extractor.AvcConfig parse(androidx.media3.common.util.ParsableByteArray) throws androidx.media3.common.ParserException
    {
        androidx.media3.common.util.ParsableByteArray r0;
        java.util.ArrayList r1, r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        byte[] r2, $r8, $r9, $r10;
        androidx.media3.extractor.NalUnitUtil$SpsData r3;
        java.lang.Object $r6, $r7;
        java.lang.Throwable $r12, r15, r19;
        androidx.media3.common.ParserException $r13;
        float f0;
        java.lang.String r14;
        java.lang.IllegalStateException r16;
        androidx.media3.extractor.AvcConfig r18;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

     label1:
        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(4);

        $i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        $i2 = $i1 & 3;

        i8 = $i2 + 1;

        if i8 != 3 goto label2;

        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>()>();

        throw r16;

     label2:
        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>()>();

        r1 = r17;

        $i3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        i0 = $i3 & 31;

        i9 = 0;

     label3:
        if i9 >= i0 goto label4;

        $r10 = staticinvoke <androidx.media3.extractor.AvcConfig: byte[] buildNalUnitForChild(androidx.media3.common.util.ParsableByteArray)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        i9 = i9 + 1;

        goto label3;

     label4:
        i10 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        i11 = 0;

     label5:
        if i11 >= i10 goto label6;

        $r9 = staticinvoke <androidx.media3.extractor.AvcConfig: byte[] buildNalUnitForChild(androidx.media3.common.util.ParsableByteArray)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        i11 = i11 + 1;

        goto label5;

     label6:
        i12 = -1;

        i13 = -1;

        f0 = 1.0F;

        r14 = null;

        if i0 <= 0 goto label7;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (byte[]) $r6;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (byte[]) $r7;

        $i4 = lengthof r2;

        r3 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$SpsData parseSpsNalUnit(byte[],int,int)>($r8, i8, $i4);

        i12 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int width>;

        i13 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int height>;

        f0 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: float pixelWidthHeightRatio>;

        $i7 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int profileIdc>;

        $i6 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int constraintsFlagsAndReservedZero2Bits>;

        $i5 = r3.<androidx.media3.extractor.NalUnitUtil$SpsData: int levelIdc>;

        r14 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: java.lang.String buildAvcCodecString(int,int,int)>($i7, $i6, $i5);

     label7:
        r18 = new androidx.media3.extractor.AvcConfig;

        specialinvoke r18.<androidx.media3.extractor.AvcConfig: void <init>(java.util.List,int,int,int,float,java.lang.String)>(r1, i8, i12, i13, f0, r14);

     label8:
        return r18;

     label9:
        $r12 := @caughtexception;

        r15 = $r12;

        $r13 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Error parsing AVC config", r15);

        r19 = (java.lang.Throwable) $r13;

        throw r19;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label8 with label9;
    }

    private void <init>(java.util.List, int, int, int, float, java.lang.String)
    {
        androidx.media3.extractor.AvcConfig r0;
        java.util.List r1;
        int i0, i1, i2;
        float f0;
        java.lang.String r2;

        r0 := @this: androidx.media3.extractor.AvcConfig;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        r2 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.AvcConfig: java.util.List initializationData> = r1;

        r0.<androidx.media3.extractor.AvcConfig: int nalUnitLengthFieldLength> = i0;

        r0.<androidx.media3.extractor.AvcConfig: int width> = i1;

        r0.<androidx.media3.extractor.AvcConfig: int height> = i2;

        r0.<androidx.media3.extractor.AvcConfig: float pixelWidthHeightRatio> = f0;

        r0.<androidx.media3.extractor.AvcConfig: java.lang.String codecs> = r2;

        return;
    }

    private static byte[] buildNalUnitForChild(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.common.util.ParsableByteArray r0;
        int i0, i1;
        byte[] $r1, $r2;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(i0);

        $r1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $r2 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: byte[] buildNalUnit(byte[],int,int)>($r1, i1, i0);

        return $r2;
    }

