androidx.animation.KeyframesSpec
<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector>
<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector velocityVector>
<androidx.animation.KeyframesSpec: java.util.Map keyframes>
<androidx.animation.KeyframesSpec: long duration>
<androidx.animation.KeyframesSpec: long delay>
    public androidx.animation.AnimationVector getValue(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec r0;
        long l0, l1, $l2, $l5, $l6, l11, l12, l13;
        androidx.animation.AnimationVector r1, r2, r3, $r11, $r12, $r25, r26, r27;
        boolean z0, $z1, $z2, z3, z4;
        kotlin.Pair r4, $r23;
        java.util.Map $r5, $r20, r29;
        java.lang.Long $r6, $r21;
        byte $b3, $b4, $b7, $b8, $b9, $b10;
        java.util.Set $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6;
        java.lang.Float $r8;
        java.lang.Object $r9, $r13, $r14, $r16, $r17, $r18, $r19, $r22, $r24;
        java.lang.Number $r10, $r15;
        kotlin.jvm.functions.Function1 r28;
        java.util.Iterator r30;
        java.util.Map$Entry r31, r32, r33;
        int i14, i15;

        r0 := @this: androidx.animation.KeyframesSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        l1 = staticinvoke <androidx.animation.AnimationSpecKt: long access$clampPlayTime(androidx.animation.DurationBasedAnimationSpec,long)>(r0, l0);

        $r5 = r0.<androidx.animation.KeyframesSpec: java.util.Map keyframes>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z1 == 0 goto label01;

        $r20 = r0.<androidx.animation.KeyframesSpec: java.util.Map keyframes>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r22 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r20, $r21);

        $r23 = (kotlin.Pair) $r22;

        $r24 = virtualinvoke $r23.<kotlin.Pair: java.lang.Object getFirst()>();

        $r25 = (androidx.animation.AnimationVector) $r24;

        return $r25;

     label01:
        $l2 = virtualinvoke r0.<androidx.animation.KeyframesSpec: long getDuration()>();

        $b3 = l1 cmp $l2;

        if $b3 < 0 goto label02;

        return r2;

     label02:
        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label03;

        return r1;

     label03:
        l11 = 0L;

        r26 = r1;

        r27 = r2;

        l12 = virtualinvoke r0.<androidx.animation.KeyframesSpec: long getDuration()>();

        r28 = staticinvoke <androidx.animation.EasingKt: kotlin.jvm.functions.Function1 getLinearEasing()>();

        r29 = r0.<androidx.animation.KeyframesSpec: java.util.Map keyframes>;

        z0 = 0;

        $r7 = interfaceinvoke r29.<java.util.Map: java.util.Set entrySet()>();

        r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r13 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r13;

        r32 = r31;

        z3 = 0;

        $r14 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.Number) $r14;

        l13 = virtualinvoke $r15.<java.lang.Number: long longValue()>();

        r33 = r31;

        z4 = 0;

        $r16 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (kotlin.Pair) $r16;

        $b7 = l1 cmp l13;

        if $b7 <= 0 goto label05;

        $b10 = l13 cmp l11;

        if $b10 < 0 goto label05;

        l11 = l13;

        $r18 = virtualinvoke r4.<kotlin.Pair: java.lang.Object getFirst()>();

        r26 = (androidx.animation.AnimationVector) $r18;

        $r19 = virtualinvoke r4.<kotlin.Pair: java.lang.Object getSecond()>();

        r28 = (kotlin.jvm.functions.Function1) $r19;

        goto label06;

     label05:
        $b8 = l1 cmp l13;

        if $b8 >= 0 goto label06;

        $b9 = l13 cmp l12;

        if $b9 > 0 goto label06;

        l12 = l13;

        $r17 = virtualinvoke r4.<kotlin.Pair: java.lang.Object getFirst()>();

        r27 = (androidx.animation.AnimationVector) $r17;

     label06:
        goto label04;

     label07:
        $l5 = l1 - l11;

        $f1 = (float) $l5;

        $l6 = l12 - l11;

        $f0 = (float) $l6;

        $f2 = $f1 / $f0;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r9 = interfaceinvoke r28.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

        $r10 = (java.lang.Number) $r9;

        f6 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        specialinvoke r0.<androidx.animation.KeyframesSpec: void init(androidx.animation.AnimationVector)>(r1);

        i14 = 0;

        i15 = virtualinvoke r26.<androidx.animation.AnimationVector: int getSize$ui_animation_core_release()>();

     label08:
        if i14 >= i15 goto label10;

        $r12 = r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector>;

        if $r12 != null goto label09;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

     label09:
        $f3 = virtualinvoke r26.<androidx.animation.AnimationVector: float get$ui_animation_core_release(int)>(i14);

        $f4 = virtualinvoke r27.<androidx.animation.AnimationVector: float get$ui_animation_core_release(int)>(i14);

        $f5 = staticinvoke <androidx.animation.PropKeyKt: float lerp(float,float,float)>($f3, $f4, f6);

        virtualinvoke $r12.<androidx.animation.AnimationVector: void set$ui_animation_core_release(int,float)>(i14, $f5);

        i14 = i14 + 1;

        goto label08;

     label10:
        $r11 = r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector>;

        if $r11 != null goto label11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

     label11:
        return $r11;
    }

    private final void init(androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec r0, $r2;
        androidx.animation.AnimationVector r1, $r3, $r4, $r5;

        r0 := @this: androidx.animation.KeyframesSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        $r2 = (androidx.animation.KeyframesSpec) r0;

        $r3 = $r2.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <androidx.animation.AnimationVectorsKt: androidx.animation.AnimationVector newInstance(androidx.animation.AnimationVector)>(r1);

        r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector> = $r4;

        $r5 = staticinvoke <androidx.animation.AnimationVectorsKt: androidx.animation.AnimationVector newInstance(androidx.animation.AnimationVector)>(r1);

        r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector velocityVector> = $r5;

     label1:
        return;
    }

    public androidx.animation.AnimationVector getVelocity(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec r0;
        long l0, l1, $l4;
        androidx.animation.AnimationVector r1, r2, r3, r4, r5, $r6, $r7;
        int i2, i5;
        byte $b3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.animation.KeyframesSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        l1 = staticinvoke <androidx.animation.AnimationSpecKt: long access$clampPlayTime(androidx.animation.DurationBasedAnimationSpec,long)>(r0, l0);

        $b3 = l1 cmp 0L;

        if $b3 > 0 goto label1;

        return r3;

     label1:
        $l4 = l1 - 1L;

        r4 = virtualinvoke r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector getValue(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($l4, r1, r2, r3);

        r5 = virtualinvoke r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector getValue(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l1, r1, r2, r3);

        specialinvoke r0.<androidx.animation.KeyframesSpec: void init(androidx.animation.AnimationVector)>(r1);

        i5 = 0;

        i2 = virtualinvoke r4.<androidx.animation.AnimationVector: int getSize$ui_animation_core_release()>();

     label2:
        if i5 >= i2 goto label4;

        $r7 = r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector velocityVector>;

        if $r7 != null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

     label3:
        $f0 = virtualinvoke r4.<androidx.animation.AnimationVector: float get$ui_animation_core_release(int)>(i5);

        $f1 = virtualinvoke r5.<androidx.animation.AnimationVector: float get$ui_animation_core_release(int)>(i5);

        $f2 = $f0 - $f1;

        $f3 = $f2 * 1000.0F;

        virtualinvoke $r7.<androidx.animation.AnimationVector: void set$ui_animation_core_release(int,float)>(i5, $f3);

        i5 = i5 + 1;

        goto label2;

     label4:
        $r6 = r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector velocityVector>;

        if $r6 != null goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

     label5:
        return $r6;
    }

    public long getDuration()
    {
        androidx.animation.KeyframesSpec r0;
        long $l0;

        r0 := @this: androidx.animation.KeyframesSpec;

        $l0 = r0.<androidx.animation.KeyframesSpec: long duration>;

        return $l0;
    }

    public long getDelay()
    {
        androidx.animation.KeyframesSpec r0;
        long $l0;

        r0 := @this: androidx.animation.KeyframesSpec;

        $l0 = r0.<androidx.animation.KeyframesSpec: long delay>;

        return $l0;
    }

    public void <init>(java.util.Map, long, long)
    {
        androidx.animation.KeyframesSpec r0;
        java.util.Map r1;
        long l0, l1;

        r0 := @this: androidx.animation.KeyframesSpec;

        r1 := @parameter0: java.util.Map;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keyframes");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.KeyframesSpec: java.util.Map keyframes> = r1;

        r0.<androidx.animation.KeyframesSpec: long duration> = l0;

        r0.<androidx.animation.KeyframesSpec: long delay> = l1;

        return;
    }

    public void <init>(java.util.Map, long, long, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.KeyframesSpec r0;
        java.util.Map r1;
        long l0, l3;
        int i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.animation.KeyframesSpec;

        r1 := @parameter0: java.util.Map;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        i1 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        l3 = 0L;

     label1:
        specialinvoke r0.<androidx.animation.KeyframesSpec: void <init>(java.util.Map,long,long)>(r1, l0, l3);

        return;
    }

    public long getDurationMillis(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec r0;
        androidx.animation.AnimationVector r1, r2, r3;
        long $l0;

        r0 := @this: androidx.animation.KeyframesSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $l0 = staticinvoke <androidx.animation.DurationBasedAnimationSpec$DefaultImpls: long getDurationMillis(androidx.animation.DurationBasedAnimationSpec,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        return $l0;
    }

    public androidx.animation.AnimationVector getEndVelocity(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec r0;
        androidx.animation.AnimationVector r1, r2, r3, $r4;

        r0 := @this: androidx.animation.KeyframesSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = staticinvoke <androidx.animation.DurationBasedAnimationSpec$DefaultImpls: androidx.animation.AnimationVector getEndVelocity(androidx.animation.DurationBasedAnimationSpec,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        return $r4;
    }

    public static final androidx.animation.AnimationVector access$getValueVector$p(androidx.animation.KeyframesSpec)
    {
        androidx.animation.KeyframesSpec $r0;
        androidx.animation.AnimationVector $r1;

        $r0 := @parameter0: androidx.animation.KeyframesSpec;

        $r1 = $r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector>;

        if $r1 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

     label1:
        return $r1;
    }

    public static final void access$setValueVector$p(androidx.animation.KeyframesSpec, androidx.animation.AnimationVector)
    {
        androidx.animation.KeyframesSpec $r0;
        androidx.animation.AnimationVector r1;

        $r0 := @parameter0: androidx.animation.KeyframesSpec;

        r1 := @parameter1: androidx.animation.AnimationVector;

        $r0.<androidx.animation.KeyframesSpec: androidx.animation.AnimationVector valueVector> = r1;

        return;
    }

androidx.animation.KeyframesSpec$init$1
    void <init>(androidx.animation.KeyframesSpec)
    {
        androidx.animation.KeyframesSpec$init$1 r0;
        androidx.animation.KeyframesSpec r1;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        r1 := @parameter0: androidx.animation.KeyframesSpec;

        specialinvoke r0.<kotlin.jvm.internal.MutablePropertyReference0: void <init>(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getName()
    {
        androidx.animation.KeyframesSpec$init$1 r0;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        return "valueVector";
    }

    public java.lang.String getSignature()
    {
        androidx.animation.KeyframesSpec$init$1 r0;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        return "getValueVector()Landroidx/animation/AnimationVector;";
    }

    public kotlin.reflect.KDeclarationContainer getOwner()
    {
        androidx.animation.KeyframesSpec$init$1 r0;
        kotlin.reflect.KClass $r1;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/animation/KeyframesSpec;");

        return $r1;
    }

    public java.lang.Object get()
    {
        androidx.animation.KeyframesSpec$init$1 r0;
        java.lang.Object $r1;
        androidx.animation.KeyframesSpec $r2;
        androidx.animation.AnimationVector $r3;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        $r1 = r0.<androidx.animation.KeyframesSpec$init$1: java.lang.Object receiver>;

        $r2 = (androidx.animation.KeyframesSpec) $r1;

        $r3 = staticinvoke <androidx.animation.KeyframesSpec: androidx.animation.AnimationVector access$getValueVector$p(androidx.animation.KeyframesSpec)>($r2);

        return $r3;
    }

    public void set(java.lang.Object)
    {
        androidx.animation.KeyframesSpec$init$1 r0;
        java.lang.Object r1, $r2;
        androidx.animation.AnimationVector $r3;
        androidx.animation.KeyframesSpec $r4;

        r0 := @this: androidx.animation.KeyframesSpec$init$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.animation.KeyframesSpec$init$1: java.lang.Object receiver>;

        $r4 = (androidx.animation.KeyframesSpec) $r2;

        $r3 = (androidx.animation.AnimationVector) r1;

        staticinvoke <androidx.animation.KeyframesSpec: void access$setValueVector$p(androidx.animation.KeyframesSpec,androidx.animation.AnimationVector)>($r4, $r3);

        return;
    }

