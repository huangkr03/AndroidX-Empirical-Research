androidx.compose.foundation.text.ValidatingOffsetMapping
<androidx.compose.foundation.text.ValidatingOffsetMapping: androidx.compose.ui.text.input.OffsetMapping delegate>
<androidx.compose.foundation.text.ValidatingOffsetMapping: int originalLength>
<androidx.compose.foundation.text.ValidatingOffsetMapping: int transformedLength>
    public void <init>(androidx.compose.ui.text.input.OffsetMapping, int, int)
    {
        androidx.compose.foundation.text.ValidatingOffsetMapping r0;
        androidx.compose.ui.text.input.OffsetMapping r1;
        int i0, i1;

        r0 := @this: androidx.compose.foundation.text.ValidatingOffsetMapping;

        r1 := @parameter0: androidx.compose.ui.text.input.OffsetMapping;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: androidx.compose.ui.text.input.OffsetMapping delegate> = r1;

        r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int originalLength> = i0;

        r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int transformedLength> = i1;

        return;
    }

    public int originalToTransformed(int)
    {
        androidx.compose.foundation.text.ValidatingOffsetMapping r0;
        int i0, i1, i2, $i3, $i4;
        androidx.compose.ui.text.input.OffsetMapping $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r12;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.text.ValidatingOffsetMapping;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: androidx.compose.ui.text.input.OffsetMapping delegate>;

        i1 = interfaceinvoke $r1.<androidx.compose.ui.text.input.OffsetMapping: int originalToTransformed(int)>(i0);

        i2 = i1;

        if 0 > i2 goto label2;

        $i4 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int transformedLength>;

        if i2 > $i4 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OffsetMapping.originalToTransformed returned invalid mapping: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in range of transformed text [0, ");

        $i3 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int transformedLength>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        return i1;
    }

    public int transformedToOriginal(int)
    {
        androidx.compose.foundation.text.ValidatingOffsetMapping r0;
        int i0, i1, i2, $i3, $i4;
        androidx.compose.ui.text.input.OffsetMapping $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r12;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.text.ValidatingOffsetMapping;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: androidx.compose.ui.text.input.OffsetMapping delegate>;

        i1 = interfaceinvoke $r1.<androidx.compose.ui.text.input.OffsetMapping: int transformedToOriginal(int)>(i0);

        i2 = i1;

        if 0 > i2 goto label2;

        $i4 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int originalLength>;

        if i2 > $i4 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OffsetMapping.transformedToOriginal returned invalid mapping: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in range of original text [0, ");

        $i3 = r0.<androidx.compose.foundation.text.ValidatingOffsetMapping: int originalLength>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        return i1;
    }

