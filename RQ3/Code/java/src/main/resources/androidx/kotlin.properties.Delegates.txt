kotlin.properties.Delegates
<kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE>
    static void <clinit>()
    {
        kotlin.properties.Delegates $r0;

        $r0 = new kotlin.properties.Delegates;

        specialinvoke $r0.<kotlin.properties.Delegates: void <init>()>();

        <kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlin.properties.Delegates $r0;

        $r0 := @this: kotlin.properties.Delegates;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final kotlin.properties.ReadWriteProperty notNull()
    {
        kotlin.properties.Delegates $r0;
        kotlin.properties.NotNullVar $r1;

        $r0 := @this: kotlin.properties.Delegates;

        $r1 = new kotlin.properties.NotNullVar;

        specialinvoke $r1.<kotlin.properties.NotNullVar: void <init>()>();

        return $r1;
    }

    public final kotlin.properties.ReadWriteProperty observable(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.properties.Delegates $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function3 $r2;
        kotlin.properties.Delegates$observable$1 $r3;

        $r0 := @this: kotlin.properties.Delegates;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "onChange");

        $r3 = new kotlin.properties.Delegates$observable$1;

        specialinvoke $r3.<kotlin.properties.Delegates$observable$1: void <init>(java.lang.Object,kotlin.jvm.functions.Function3)>($r1, $r2);

        return $r3;
    }

    public final kotlin.properties.ReadWriteProperty vetoable(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.properties.Delegates $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function3 $r2;
        kotlin.properties.Delegates$vetoable$1 $r3;

        $r0 := @this: kotlin.properties.Delegates;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "onChange");

        $r3 = new kotlin.properties.Delegates$vetoable$1;

        specialinvoke $r3.<kotlin.properties.Delegates$vetoable$1: void <init>(java.lang.Object,kotlin.jvm.functions.Function3)>($r1, $r2);

        return $r3;
    }

kotlin.properties.Delegates$observable$1
<kotlin.properties.Delegates$observable$1: kotlin.jvm.functions.Function3 $onChange>
    public void <init>(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.properties.Delegates$observable$1 $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function3 $r2;

        $r0 := @this: kotlin.properties.Delegates$observable$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $r0.<kotlin.properties.Delegates$observable$1: kotlin.jvm.functions.Function3 $onChange> = $r2;

        specialinvoke $r0.<kotlin.properties.ObservableProperty: void <init>(java.lang.Object)>($r1);

        return;
    }

    protected void afterChange(kotlin.reflect.KProperty, java.lang.Object, java.lang.Object)
    {
        kotlin.properties.Delegates$observable$1 $r0;
        kotlin.reflect.KProperty $r1;
        java.lang.Object $r2, $r3;
        kotlin.jvm.functions.Function3 $r4;

        $r0 := @this: kotlin.properties.Delegates$observable$1;

        $r1 := @parameter0: kotlin.reflect.KProperty;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "property");

        $r4 = $r0.<kotlin.properties.Delegates$observable$1: kotlin.jvm.functions.Function3 $onChange>;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return;
    }

kotlin.properties.Delegates$vetoable$1
<kotlin.properties.Delegates$vetoable$1: kotlin.jvm.functions.Function3 $onChange>
    public void <init>(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.properties.Delegates$vetoable$1 $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function3 $r2;

        $r0 := @this: kotlin.properties.Delegates$vetoable$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $r0.<kotlin.properties.Delegates$vetoable$1: kotlin.jvm.functions.Function3 $onChange> = $r2;

        specialinvoke $r0.<kotlin.properties.ObservableProperty: void <init>(java.lang.Object)>($r1);

        return;
    }

    protected boolean beforeChange(kotlin.reflect.KProperty, java.lang.Object, java.lang.Object)
    {
        kotlin.properties.Delegates$vetoable$1 $r0;
        java.lang.Object $r1, $r2;
        kotlin.reflect.KProperty $r3;
        kotlin.jvm.functions.Function3 $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @this: kotlin.properties.Delegates$vetoable$1;

        $r3 := @parameter0: kotlin.reflect.KProperty;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "property");

        $r4 = $r0.<kotlin.properties.Delegates$vetoable$1: kotlin.jvm.functions.Function3 $onChange>;

        $r1 = interfaceinvoke $r4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r1, $r2);

        $r5 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

